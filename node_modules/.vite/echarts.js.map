{
  "version": 3,
  "sources": ["../zrender/lib/svg/core.js", "../zrender/lib/core/arrayDiff.js", "../zrender/lib/svg/graphic.js", "../zrender/lib/svg/helper/Definable.js", "../zrender/lib/svg/helper/GradientManager.js", "../zrender/lib/svg/helper/PatternManager.js", "../zrender/lib/svg/helper/ClippathManager.js", "../zrender/lib/svg/helper/ShadowManager.js", "../zrender/lib/svg/Painter.js", "../echarts/lib/renderer/installSVGRenderer.js", "../echarts/lib/chart/line/LineSeries.js", "../echarts/lib/chart/helper/labelHelper.js", "../echarts/lib/chart/helper/Symbol.js", "../echarts/lib/chart/helper/SymbolDraw.js", "../echarts/lib/chart/line/helper.js", "../echarts/lib/util/vendor.js", "../echarts/lib/chart/line/lineAnimationDiff.js", "../echarts/lib/chart/line/poly.js", "../echarts/lib/chart/helper/createClipPathFromCoordSys.js", "../echarts/lib/coord/CoordinateSystem.js", "../echarts/lib/chart/line/LineView.js", "../echarts/lib/layout/points.js", "../echarts/lib/processor/dataSample.js", "../echarts/lib/chart/line/install.js", "../echarts/lib/chart/bar/BaseBarSeries.js", "../echarts/lib/chart/bar/BarSeries.js", "../echarts/lib/util/shape/sausage.js", "../echarts/lib/label/sectorLabel.js", "../echarts/lib/chart/bar/BarView.js", "../echarts/lib/chart/bar/install.js", "../echarts/lib/chart/pie/pieLayout.js", "../echarts/lib/processor/dataFilter.js", "../echarts/lib/chart/pie/labelLayout.js", "../echarts/lib/chart/helper/pieHelper.js", "../echarts/lib/chart/pie/PieView.js", "../echarts/lib/chart/helper/createSeriesDataSimply.js", "../echarts/lib/visual/LegendVisualProvider.js", "../echarts/lib/chart/pie/PieSeries.js", "../echarts/lib/processor/negativeDataFilter.js", "../echarts/lib/chart/pie/install.js", "../echarts/lib/chart/scatter/ScatterSeries.js", "../echarts/lib/chart/helper/LargeSymbolDraw.js", "../echarts/lib/chart/scatter/ScatterView.js", "../echarts/lib/coord/cartesian/GridModel.js", "../echarts/lib/coord/cartesian/AxisModel.js", "../echarts/lib/coord/axisDefault.js", "../echarts/lib/coord/axisCommonTypes.js", "../echarts/lib/coord/axisModelCreator.js", "../echarts/lib/coord/cartesian/Cartesian2D.js", "../echarts/lib/coord/cartesian/Axis2D.js", "../echarts/lib/coord/cartesian/cartesianAxisHelper.js", "../echarts/lib/coord/cartesian/Grid.js", "../echarts/lib/component/axis/AxisBuilder.js", "../echarts/lib/component/axisPointer/modelHelper.js", "../echarts/lib/component/axis/AxisView.js", "../echarts/lib/component/axis/axisSplitHelper.js", "../echarts/lib/component/axis/CartesianAxisView.js", "../echarts/lib/component/grid/installSimple.js", "../echarts/lib/chart/scatter/install.js", "../echarts/lib/chart/radar/radarLayout.js", "../echarts/lib/chart/radar/backwardCompat.js", "../echarts/lib/chart/radar/RadarView.js", "../echarts/lib/chart/radar/RadarSeries.js", "../echarts/lib/coord/radar/RadarModel.js", "../echarts/lib/component/radar/RadarView.js", "../echarts/lib/coord/radar/IndicatorAxis.js", "../echarts/lib/coord/radar/Radar.js", "../echarts/lib/component/radar/install.js", "../echarts/lib/chart/radar/install.js", "../echarts/lib/component/helper/interactionMutex.js", "../echarts/lib/component/helper/RoamController.js", "../echarts/lib/component/helper/roamHelper.js", "../echarts/lib/component/helper/cursorHelper.js", "../echarts/lib/component/helper/MapDraw.js", "../echarts/lib/chart/map/MapView.js", "../echarts/lib/chart/map/MapSeries.js", "../echarts/lib/chart/map/mapDataStatistic.js", "../echarts/lib/chart/map/mapSymbolLayout.js", "../echarts/lib/coord/View.js", "../echarts/lib/coord/geo/Geo.js", "../echarts/lib/coord/geo/geoCreator.js", "../echarts/lib/coord/geo/GeoModel.js", "../echarts/lib/action/roamHelper.js", "../echarts/lib/component/geo/GeoView.js", "../echarts/lib/component/geo/install.js", "../echarts/lib/chart/map/install.js", "../echarts/lib/chart/tree/layoutHelper.js", "../echarts/lib/chart/tree/TreeView.js", "../echarts/lib/data/Tree.js", "../echarts/lib/chart/helper/treeHelper.js", "../echarts/lib/chart/tree/TreeSeries.js", "../echarts/lib/chart/tree/traversalHelper.js", "../echarts/lib/chart/tree/treeLayout.js", "../echarts/lib/chart/tree/treeVisual.js", "../echarts/lib/chart/tree/treeAction.js", "../echarts/lib/chart/tree/install.js", "../echarts/lib/chart/treemap/treemapAction.js", "../echarts/lib/chart/helper/enableAriaDecalForTree.js", "../echarts/lib/chart/treemap/TreemapSeries.js", "../echarts/lib/chart/treemap/Breadcrumb.js", "../echarts/lib/util/animation.js", "../echarts/lib/chart/treemap/TreemapView.js", "../echarts/lib/visual/VisualMapping.js", "../echarts/lib/chart/treemap/treemapVisual.js", "../echarts/lib/chart/treemap/treemapLayout.js", "../echarts/lib/chart/treemap/install.js", "../echarts/lib/chart/graph/categoryFilter.js", "../echarts/lib/chart/graph/categoryVisual.js", "../echarts/lib/chart/graph/edgeVisual.js", "../echarts/lib/chart/helper/multipleGraphEdgeHelper.js", "../echarts/lib/chart/graph/simpleLayoutHelper.js", "../echarts/lib/chart/graph/simpleLayout.js", "../echarts/lib/chart/graph/graphHelper.js", "../echarts/lib/chart/graph/circularLayoutHelper.js", "../echarts/lib/chart/graph/circularLayout.js", "../echarts/lib/chart/graph/forceHelper.js", "../echarts/lib/chart/graph/forceLayout.js", "../echarts/lib/chart/graph/createView.js", "../echarts/lib/chart/helper/LinePath.js", "../echarts/lib/chart/helper/Line.js", "../echarts/lib/chart/helper/LineDraw.js", "../echarts/lib/chart/graph/adjustEdge.js", "../echarts/lib/chart/graph/GraphView.js", "../echarts/lib/chart/helper/createGraphFromNodeEdge.js", "../echarts/lib/chart/graph/GraphSeries.js", "../echarts/lib/chart/graph/install.js", "../echarts/lib/chart/gauge/PointerPath.js", "../echarts/lib/chart/gauge/GaugeView.js", "../echarts/lib/chart/gauge/GaugeSeries.js", "../echarts/lib/chart/gauge/install.js", "../echarts/lib/chart/funnel/FunnelView.js", "../echarts/lib/chart/funnel/FunnelSeries.js", "../echarts/lib/chart/funnel/funnelLayout.js", "../echarts/lib/chart/funnel/install.js", "../echarts/lib/chart/parallel/ParallelView.js", "../echarts/lib/chart/parallel/ParallelSeries.js", "../echarts/lib/chart/parallel/parallelVisual.js", "../echarts/lib/coord/parallel/parallelPreprocessor.js", "../echarts/lib/component/parallel/ParallelView.js", "../echarts/lib/coord/parallel/ParallelModel.js", "../echarts/lib/coord/parallel/ParallelAxis.js", "../echarts/lib/component/helper/sliderMove.js", "../echarts/lib/coord/parallel/Parallel.js", "../echarts/lib/coord/parallel/parallelCreator.js", "../echarts/lib/coord/parallel/AxisModel.js", "../echarts/lib/component/helper/BrushController.js", "../echarts/lib/component/helper/brushHelper.js", "../echarts/lib/component/axis/ParallelAxisView.js", "../echarts/lib/component/axis/parallelAxisAction.js", "../echarts/lib/component/parallel/install.js", "../echarts/lib/chart/parallel/install.js", "../echarts/lib/chart/sankey/SankeyView.js", "../echarts/lib/chart/sankey/SankeySeries.js", "../echarts/lib/chart/sankey/sankeyLayout.js", "../echarts/lib/chart/sankey/sankeyVisual.js", "../echarts/lib/chart/sankey/install.js", "../echarts/lib/chart/helper/whiskerBoxCommon.js", "../echarts/lib/chart/boxplot/BoxplotSeries.js", "../echarts/lib/chart/boxplot/BoxplotView.js", "../echarts/lib/chart/boxplot/boxplotVisual.js", "../echarts/lib/chart/boxplot/boxplotLayout.js", "../echarts/lib/chart/boxplot/prepareBoxplotData.js", "../echarts/lib/chart/boxplot/boxplotTransform.js", "../echarts/lib/chart/boxplot/install.js", "../echarts/lib/chart/candlestick/CandlestickView.js", "../echarts/lib/chart/candlestick/CandlestickSeries.js", "../echarts/lib/chart/candlestick/preprocessor.js", "../echarts/lib/chart/candlestick/candlestickVisual.js", "../echarts/lib/chart/candlestick/candlestickLayout.js", "../echarts/lib/chart/candlestick/install.js", "../echarts/lib/chart/helper/EffectSymbol.js", "../echarts/lib/chart/effectScatter/EffectScatterView.js", "../echarts/lib/chart/effectScatter/EffectScatterSeries.js", "../echarts/lib/chart/effectScatter/install.js", "../echarts/lib/chart/helper/EffectLine.js", "../echarts/lib/chart/helper/Polyline.js", "../echarts/lib/chart/helper/EffectPolyline.js", "../echarts/lib/chart/helper/LargeLineDraw.js", "../echarts/lib/chart/lines/linesLayout.js", "../echarts/lib/chart/lines/LinesView.js", "../echarts/lib/chart/lines/LinesSeries.js", "../echarts/lib/chart/lines/linesVisual.js", "../echarts/lib/chart/lines/install.js", "../echarts/lib/chart/heatmap/HeatmapLayer.js", "../echarts/lib/chart/heatmap/HeatmapView.js", "../echarts/lib/chart/heatmap/HeatmapSeries.js", "../echarts/lib/chart/heatmap/install.js", "../echarts/lib/chart/bar/PictorialBarView.js", "../echarts/lib/chart/bar/PictorialBarSeries.js", "../echarts/lib/chart/bar/installPictorialBar.js", "../echarts/lib/chart/themeRiver/ThemeRiverView.js", "../echarts/lib/chart/themeRiver/ThemeRiverSeries.js", "../echarts/lib/chart/themeRiver/themeRiverLayout.js", "../echarts/lib/chart/themeRiver/install.js", "../echarts/lib/chart/sunburst/SunburstPiece.js", "../echarts/lib/chart/sunburst/sunburstAction.js", "../echarts/lib/chart/sunburst/SunburstView.js", "../echarts/lib/chart/sunburst/SunburstSeries.js", "../echarts/lib/chart/sunburst/sunburstLayout.js", "../echarts/lib/chart/sunburst/sunburstVisual.js", "../echarts/lib/chart/sunburst/install.js", "../echarts/lib/chart/custom/CustomSeries.js", "../echarts/lib/coord/cartesian/prepareCustom.js", "../echarts/lib/coord/geo/prepareCustom.js", "../echarts/lib/coord/single/prepareCustom.js", "../echarts/lib/coord/polar/prepareCustom.js", "../echarts/lib/coord/calendar/prepareCustom.js", "../echarts/lib/util/styleCompat.js", "../echarts/lib/chart/custom/prepare.js", "../echarts/lib/chart/custom/CustomView.js", "../echarts/lib/chart/custom/install.js", "../echarts/lib/component/axisPointer/BaseAxisPointer.js", "../echarts/lib/component/axisPointer/viewHelper.js", "../echarts/lib/component/axisPointer/CartesianAxisPointer.js", "../echarts/lib/component/axisPointer/AxisPointerModel.js", "../echarts/lib/component/axisPointer/globalListener.js", "../echarts/lib/component/axisPointer/AxisPointerView.js", "../echarts/lib/component/axisPointer/findPointFromSeries.js", "../echarts/lib/component/axisPointer/axisTrigger.js", "../echarts/lib/component/axisPointer/install.js", "../echarts/lib/component/grid/install.js", "../echarts/lib/component/axisPointer/PolarAxisPointer.js", "../echarts/lib/coord/polar/PolarModel.js", "../echarts/lib/coord/polar/AxisModel.js", "../echarts/lib/coord/polar/RadiusAxis.js", "../echarts/lib/coord/polar/AngleAxis.js", "../echarts/lib/coord/polar/Polar.js", "../echarts/lib/coord/polar/polarCreator.js", "../echarts/lib/component/axis/AngleAxisView.js", "../echarts/lib/component/axis/RadiusAxisView.js", "../echarts/lib/layout/barPolar.js", "../echarts/lib/component/polar/install.js", "../echarts/lib/coord/single/singleAxisHelper.js", "../echarts/lib/component/axis/SingleAxisView.js", "../echarts/lib/coord/single/AxisModel.js", "../echarts/lib/coord/single/SingleAxis.js", "../echarts/lib/coord/single/Single.js", "../echarts/lib/coord/single/singleCreator.js", "../echarts/lib/component/axisPointer/SingleAxisPointer.js", "../echarts/lib/component/singleAxis/install.js", "../echarts/lib/coord/calendar/CalendarModel.js", "../echarts/lib/component/calendar/CalendarView.js", "../echarts/lib/coord/calendar/Calendar.js", "../echarts/lib/component/calendar/install.js", "../echarts/lib/component/graphic/install.js", "../echarts/lib/component/dataZoom/helper.js", "../echarts/lib/component/dataZoom/DataZoomModel.js", "../echarts/lib/component/dataZoom/SelectZoomModel.js", "../echarts/lib/component/dataZoom/DataZoomView.js", "../echarts/lib/component/dataZoom/SelectZoomView.js", "../echarts/lib/component/dataZoom/AxisProxy.js", "../echarts/lib/component/dataZoom/dataZoomProcessor.js", "../echarts/lib/component/dataZoom/dataZoomAction.js", "../echarts/lib/component/dataZoom/installCommon.js", "../echarts/lib/component/dataZoom/installDataZoomSelect.js", "../echarts/lib/component/toolbox/featureManager.js", "../echarts/lib/component/toolbox/ToolboxModel.js", "../echarts/lib/component/helper/listComponent.js", "../echarts/lib/component/toolbox/ToolboxView.js", "../echarts/lib/component/toolbox/feature/SaveAsImage.js", "../echarts/lib/component/toolbox/feature/MagicType.js", "../echarts/lib/component/toolbox/feature/DataView.js", "../echarts/lib/component/dataZoom/history.js", "../echarts/lib/component/toolbox/feature/Restore.js", "../echarts/lib/component/helper/BrushTargetManager.js", "../echarts/lib/component/toolbox/feature/DataZoom.js", "../echarts/lib/component/toolbox/install.js", "../echarts/lib/component/tooltip/TooltipModel.js", "../echarts/lib/component/tooltip/helper.js", "../echarts/lib/component/tooltip/TooltipHTMLContent.js", "../echarts/lib/component/tooltip/TooltipRichContent.js", "../echarts/lib/component/tooltip/TooltipView.js", "../echarts/lib/component/tooltip/install.js", "../echarts/lib/component/brush/preprocessor.js", "../echarts/lib/visual/visualSolution.js", "../echarts/lib/component/brush/selector.js", "../echarts/lib/component/brush/visualEncoding.js", "../echarts/lib/component/brush/BrushView.js", "../echarts/lib/component/brush/BrushModel.js", "../echarts/lib/component/toolbox/feature/Brush.js", "../echarts/lib/component/brush/install.js", "../echarts/lib/component/title/install.js", "../echarts/lib/component/timeline/TimelineModel.js", "../echarts/lib/component/timeline/SliderTimelineModel.js", "../echarts/lib/component/timeline/TimelineView.js", "../echarts/lib/component/timeline/TimelineAxis.js", "../echarts/lib/component/timeline/SliderTimelineView.js", "../echarts/lib/component/timeline/timelineAction.js", "../echarts/lib/component/timeline/preprocessor.js", "../echarts/lib/component/timeline/install.js", "../echarts/lib/component/marker/checkMarkerInSeries.js", "../echarts/lib/component/marker/MarkerModel.js", "../echarts/lib/component/marker/MarkPointModel.js", "../echarts/lib/component/marker/markerHelper.js", "../echarts/lib/component/marker/MarkerView.js", "../echarts/lib/component/marker/MarkPointView.js", "../echarts/lib/component/marker/installMarkPoint.js", "../echarts/lib/component/marker/MarkLineModel.js", "../echarts/lib/component/marker/MarkLineView.js", "../echarts/lib/component/marker/installMarkLine.js", "../echarts/lib/component/marker/MarkAreaModel.js", "../echarts/lib/component/marker/MarkAreaView.js", "../echarts/lib/component/marker/installMarkArea.js", "../echarts/lib/component/legend/LegendModel.js", "../echarts/lib/component/legend/LegendView.js", "../echarts/lib/component/legend/legendFilter.js", "../echarts/lib/component/legend/legendAction.js", "../echarts/lib/component/legend/installLegendPlain.js", "../echarts/lib/component/legend/ScrollableLegendModel.js", "../echarts/lib/component/legend/ScrollableLegendView.js", "../echarts/lib/component/legend/scrollableLegendAction.js", "../echarts/lib/component/legend/installLegendScroll.js", "../echarts/lib/component/legend/install.js", "../echarts/lib/component/dataZoom/InsideZoomModel.js", "../echarts/lib/component/dataZoom/roams.js", "../echarts/lib/component/dataZoom/InsideZoomView.js", "../echarts/lib/component/dataZoom/installDataZoomInside.js", "../echarts/lib/component/dataZoom/SliderZoomModel.js", "../echarts/lib/component/dataZoom/SliderZoomView.js", "../echarts/lib/component/dataZoom/installDataZoomSlider.js", "../echarts/lib/component/dataZoom/install.js", "../echarts/lib/visual/visualDefault.js", "../echarts/lib/component/visualMap/VisualMapModel.js", "../echarts/lib/component/visualMap/ContinuousModel.js", "../echarts/lib/component/visualMap/VisualMapView.js", "../echarts/lib/component/visualMap/helper.js", "../echarts/lib/component/visualMap/ContinuousView.js", "../echarts/lib/component/visualMap/visualMapAction.js", "../echarts/lib/component/visualMap/visualEncoding.js", "../echarts/lib/component/visualMap/preprocessor.js", "../echarts/lib/component/visualMap/installCommon.js", "../echarts/lib/component/visualMap/installVisualMapContinuous.js", "../echarts/lib/component/visualMap/PiecewiseModel.js", "../echarts/lib/component/visualMap/PiecewiseView.js", "../echarts/lib/component/visualMap/installVisualMapPiecewise.js", "../echarts/lib/component/visualMap/install.js", "../echarts/lib/visual/aria.js", "../echarts/lib/component/aria/preprocessor.js", "../echarts/lib/component/aria/install.js", "../echarts/lib/util/conditionalExpression.js", "../echarts/lib/component/transform/filterTransform.js", "../echarts/lib/component/transform/sortTransform.js", "../echarts/lib/component/transform/install.js", "../zrender/lib/tool/convertPath.js", "../zrender/lib/tool/dividePath.js", "../zrender/lib/tool/morphPath.js", "../echarts/lib/animation/morphTransitionHelper.js", "../echarts/lib/animation/universalTransition.js", "../echarts/index.js"],
  "sourcesContent": ["import { parse } from '../tool/color';\r\nexport function createElement(name) {\r\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\r\n}\r\nexport function normalizeColor(color) {\r\n    var opacity;\r\n    if (!color || color === 'transparent') {\r\n        color = 'none';\r\n    }\r\n    else if (typeof color === 'string' && color.indexOf('rgba') > -1) {\r\n        var arr = parse(color);\r\n        if (arr) {\r\n            color = 'rgb(' + arr[0] + ',' + arr[1] + ',' + arr[2] + ')';\r\n            opacity = arr[3];\r\n        }\r\n    }\r\n    return {\r\n        color: color,\r\n        opacity: opacity == null ? 1 : opacity\r\n    };\r\n}\r\n", "function diff(oldArr, newArr, equals) {\r\n    if (!equals) {\r\n        equals = function (a, b) {\r\n            return a === b;\r\n        };\r\n    }\r\n    oldArr = oldArr.slice();\r\n    newArr = newArr.slice();\r\n    var newLen = newArr.length;\r\n    var oldLen = oldArr.length;\r\n    var editLength = 1;\r\n    var maxEditLength = newLen + oldLen;\r\n    var bestPath = [{ newPos: -1, components: [] }];\r\n    var oldPos = extractCommon(bestPath[0], newArr, oldArr, 0, equals);\r\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\r\n        var indices = [];\r\n        for (var i = 0; i < newArr.length; i++) {\r\n            indices.push(i);\r\n        }\r\n        return [{\r\n                indices: indices,\r\n                count: newArr.length,\r\n                added: false,\r\n                removed: false\r\n            }];\r\n    }\r\n    function execEditLength() {\r\n        for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\r\n            var basePath;\r\n            var addPath = bestPath[diagonalPath - 1];\r\n            var removePath = bestPath[diagonalPath + 1];\r\n            var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\r\n            if (addPath) {\r\n                bestPath[diagonalPath - 1] = undefined;\r\n            }\r\n            var canAdd = addPath && addPath.newPos + 1 < newLen;\r\n            var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\r\n            if (!canAdd && !canRemove) {\r\n                bestPath[diagonalPath] = undefined;\r\n                continue;\r\n            }\r\n            if (!canAdd || (canRemove && addPath.newPos < removePath.newPos)) {\r\n                basePath = clonePath(removePath);\r\n                pushComponent(basePath.components, false, true);\r\n            }\r\n            else {\r\n                basePath = addPath;\r\n                basePath.newPos++;\r\n                pushComponent(basePath.components, true, false);\r\n            }\r\n            oldPos = extractCommon(basePath, newArr, oldArr, diagonalPath, equals);\r\n            if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\r\n                return buildValues(basePath.components);\r\n            }\r\n            else {\r\n                bestPath[diagonalPath] = basePath;\r\n            }\r\n        }\r\n        editLength++;\r\n    }\r\n    while (editLength <= maxEditLength) {\r\n        var ret = execEditLength();\r\n        if (ret) {\r\n            return ret;\r\n        }\r\n    }\r\n}\r\nfunction extractCommon(basePath, newArr, oldArr, diagonalPath, equals) {\r\n    var newLen = newArr.length;\r\n    var oldLen = oldArr.length;\r\n    var newPos = basePath.newPos;\r\n    var oldPos = newPos - diagonalPath;\r\n    var commonCount = 0;\r\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\r\n        newPos++;\r\n        oldPos++;\r\n        commonCount++;\r\n    }\r\n    if (commonCount) {\r\n        basePath.components.push({\r\n            count: commonCount,\r\n            added: false,\r\n            removed: false,\r\n            indices: []\r\n        });\r\n    }\r\n    basePath.newPos = newPos;\r\n    return oldPos;\r\n}\r\nfunction pushComponent(components, added, removed) {\r\n    var last = components[components.length - 1];\r\n    if (last && last.added === added && last.removed === removed) {\r\n        components[components.length - 1] = {\r\n            count: last.count + 1,\r\n            added: added,\r\n            removed: removed,\r\n            indices: []\r\n        };\r\n    }\r\n    else {\r\n        components.push({\r\n            count: 1,\r\n            added: added,\r\n            removed: removed,\r\n            indices: []\r\n        });\r\n    }\r\n}\r\nfunction buildValues(components) {\r\n    var componentPos = 0;\r\n    var componentLen = components.length;\r\n    var newPos = 0;\r\n    var oldPos = 0;\r\n    for (; componentPos < componentLen; componentPos++) {\r\n        var component = components[componentPos];\r\n        if (!component.removed) {\r\n            var indices = [];\r\n            for (var i = newPos; i < newPos + component.count; i++) {\r\n                indices.push(i);\r\n            }\r\n            component.indices = indices;\r\n            newPos += component.count;\r\n            if (!component.added) {\r\n                oldPos += component.count;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = oldPos; i < oldPos + component.count; i++) {\r\n                component.indices.push(i);\r\n            }\r\n            oldPos += component.count;\r\n        }\r\n    }\r\n    return components;\r\n}\r\nfunction clonePath(path) {\r\n    return { newPos: path.newPos, components: path.components.slice(0) };\r\n}\r\nexport default function arrayDiff(oldArr, newArr, equal) {\r\n    return diff(oldArr, newArr, equal);\r\n}\r\n", "import { createElement, normalizeColor } from './core';\r\nimport ZRImage from '../graphic/Image';\r\nimport { DEFAULT_FONT, getLineHeight } from '../contain/text';\r\nimport { map } from '../core/util';\r\nimport { normalizeLineDash } from '../graphic/helper/dashStyle';\r\nvar NONE = 'none';\r\nvar mathRound = Math.round;\r\nvar mathSin = Math.sin;\r\nvar mathCos = Math.cos;\r\nvar PI = Math.PI;\r\nvar PI2 = Math.PI * 2;\r\nvar degree = 180 / PI;\r\nvar EPSILON = 1e-4;\r\nfunction round3(val) {\r\n    return mathRound(val * 1e3) / 1e3;\r\n}\r\nfunction round4(val) {\r\n    return mathRound(val * 1e4) / 1e4;\r\n}\r\nfunction isAroundZero(val) {\r\n    return val < EPSILON && val > -EPSILON;\r\n}\r\nfunction pathHasFill(style) {\r\n    var fill = style.fill;\r\n    return fill != null && fill !== NONE;\r\n}\r\nfunction pathHasStroke(style) {\r\n    var stroke = style.stroke;\r\n    return stroke != null && stroke !== NONE;\r\n}\r\nfunction setTransform(svgEl, m) {\r\n    if (m) {\r\n        attr(svgEl, 'transform', 'matrix('\r\n            + round3(m[0]) + ','\r\n            + round3(m[1]) + ','\r\n            + round3(m[2]) + ','\r\n            + round3(m[3]) + ','\r\n            + round4(m[4]) + ','\r\n            + round4(m[5])\r\n            + ')');\r\n    }\r\n}\r\nfunction attr(el, key, val) {\r\n    if (!val || val.type !== 'linear' && val.type !== 'radial') {\r\n        el.setAttribute(key, val);\r\n    }\r\n}\r\nfunction attrXLink(el, key, val) {\r\n    el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\r\n}\r\nfunction attrXML(el, key, val) {\r\n    el.setAttributeNS('http://www.w3.org/XML/1998/namespace', key, val);\r\n}\r\nfunction bindStyle(svgEl, style, el) {\r\n    var opacity = style.opacity == null ? 1 : style.opacity;\r\n    if (el instanceof ZRImage) {\r\n        attr(svgEl, 'opacity', opacity + '');\r\n        return;\r\n    }\r\n    if (pathHasFill(style)) {\r\n        var fill = normalizeColor(style.fill);\r\n        attr(svgEl, 'fill', fill.color);\r\n        attr(svgEl, 'fill-opacity', (style.fillOpacity != null\r\n            ? style.fillOpacity * fill.opacity * opacity\r\n            : fill.opacity * opacity) + '');\r\n    }\r\n    else {\r\n        attr(svgEl, 'fill', NONE);\r\n    }\r\n    if (pathHasStroke(style)) {\r\n        var stroke = normalizeColor(style.stroke);\r\n        attr(svgEl, 'stroke', stroke.color);\r\n        var strokeWidth = style.lineWidth;\r\n        var strokeScale_1 = style.strokeNoScale\r\n            ? el.getLineScale()\r\n            : 1;\r\n        attr(svgEl, 'stroke-width', (strokeScale_1 ? strokeWidth / strokeScale_1 : 0) + '');\r\n        attr(svgEl, 'paint-order', style.strokeFirst ? 'stroke' : 'fill');\r\n        attr(svgEl, 'stroke-opacity', (style.strokeOpacity != null\r\n            ? style.strokeOpacity * stroke.opacity * opacity\r\n            : stroke.opacity * opacity) + '');\r\n        var lineDash = style.lineDash && strokeWidth > 0 && normalizeLineDash(style.lineDash, strokeWidth);\r\n        if (lineDash) {\r\n            var lineDashOffset = style.lineDashOffset;\r\n            if (strokeScale_1 && strokeScale_1 !== 1) {\r\n                lineDash = map(lineDash, function (rawVal) {\r\n                    return rawVal / strokeScale_1;\r\n                });\r\n                if (lineDashOffset) {\r\n                    lineDashOffset /= strokeScale_1;\r\n                    lineDashOffset = mathRound(lineDashOffset);\r\n                }\r\n            }\r\n            attr(svgEl, 'stroke-dasharray', lineDash.join(','));\r\n            attr(svgEl, 'stroke-dashoffset', (lineDashOffset || 0) + '');\r\n        }\r\n        else {\r\n            attr(svgEl, 'stroke-dasharray', NONE);\r\n        }\r\n        style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\r\n        style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\r\n        style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit + '');\r\n    }\r\n    else {\r\n        attr(svgEl, 'stroke', NONE);\r\n    }\r\n}\r\nvar SVGPathRebuilder = (function () {\r\n    function SVGPathRebuilder() {\r\n    }\r\n    SVGPathRebuilder.prototype.reset = function () {\r\n        this._d = [];\r\n        this._str = '';\r\n    };\r\n    SVGPathRebuilder.prototype.moveTo = function (x, y) {\r\n        this._add('M', x, y);\r\n    };\r\n    SVGPathRebuilder.prototype.lineTo = function (x, y) {\r\n        this._add('L', x, y);\r\n    };\r\n    SVGPathRebuilder.prototype.bezierCurveTo = function (x, y, x2, y2, x3, y3) {\r\n        this._add('C', x, y, x2, y2, x3, y3);\r\n    };\r\n    SVGPathRebuilder.prototype.quadraticCurveTo = function (x, y, x2, y2) {\r\n        this._add('Q', x, y, x2, y2);\r\n    };\r\n    SVGPathRebuilder.prototype.arc = function (cx, cy, r, startAngle, endAngle, anticlockwise) {\r\n        this.ellipse(cx, cy, r, r, 0, startAngle, endAngle, anticlockwise);\r\n    };\r\n    SVGPathRebuilder.prototype.ellipse = function (cx, cy, rx, ry, psi, startAngle, endAngle, anticlockwise) {\r\n        var firstCmd = this._d.length === 0;\r\n        var dTheta = endAngle - startAngle;\r\n        var clockwise = !anticlockwise;\r\n        var dThetaPositive = Math.abs(dTheta);\r\n        var isCircle = isAroundZero(dThetaPositive - PI2)\r\n            || (clockwise ? dTheta >= PI2 : -dTheta >= PI2);\r\n        var unifiedTheta = dTheta > 0 ? dTheta % PI2 : (dTheta % PI2 + PI2);\r\n        var large = false;\r\n        if (isCircle) {\r\n            large = true;\r\n        }\r\n        else if (isAroundZero(dThetaPositive)) {\r\n            large = false;\r\n        }\r\n        else {\r\n            large = (unifiedTheta >= PI) === !!clockwise;\r\n        }\r\n        var x0 = round4(cx + rx * mathCos(startAngle));\r\n        var y0 = round4(cy + ry * mathSin(startAngle));\r\n        if (isCircle) {\r\n            if (clockwise) {\r\n                dTheta = PI2 - 1e-4;\r\n            }\r\n            else {\r\n                dTheta = -PI2 + 1e-4;\r\n            }\r\n            large = true;\r\n            if (firstCmd) {\r\n                this._d.push('M', x0, y0);\r\n            }\r\n        }\r\n        var x = round4(cx + rx * mathCos(startAngle + dTheta));\r\n        var y = round4(cy + ry * mathSin(startAngle + dTheta));\r\n        if (isNaN(x0) || isNaN(y0) || isNaN(rx) || isNaN(ry) || isNaN(psi) || isNaN(degree) || isNaN(x) || isNaN(y)) {\r\n            return '';\r\n        }\r\n        this._d.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\r\n    };\r\n    SVGPathRebuilder.prototype.rect = function (x, y, w, h) {\r\n        this._add('M', x, y);\r\n        this._add('L', x + w, y);\r\n        this._add('L', x + w, y + h);\r\n        this._add('L', x, y + h);\r\n        this._add('L', x, y);\r\n        this._add('Z');\r\n    };\r\n    SVGPathRebuilder.prototype.closePath = function () {\r\n        if (this._d.length > 0) {\r\n            this._add('Z');\r\n        }\r\n    };\r\n    SVGPathRebuilder.prototype._add = function (cmd, a, b, c, d, e, f, g, h) {\r\n        this._d.push(cmd);\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            var val = arguments[i];\r\n            if (isNaN(val)) {\r\n                this._invalid = true;\r\n                return;\r\n            }\r\n            this._d.push(round4(val));\r\n        }\r\n    };\r\n    SVGPathRebuilder.prototype.generateStr = function () {\r\n        this._str = this._invalid ? '' : this._d.join(' ');\r\n        this._d = [];\r\n    };\r\n    SVGPathRebuilder.prototype.getStr = function () {\r\n        return this._str;\r\n    };\r\n    return SVGPathRebuilder;\r\n}());\r\nvar svgPath = {\r\n    brush: function (el) {\r\n        var style = el.style;\r\n        var svgEl = el.__svgEl;\r\n        if (!svgEl) {\r\n            svgEl = createElement('path');\r\n            el.__svgEl = svgEl;\r\n        }\r\n        if (!el.path) {\r\n            el.createPathProxy();\r\n        }\r\n        var path = el.path;\r\n        if (el.shapeChanged()) {\r\n            path.beginPath();\r\n            el.buildPath(path, el.shape);\r\n            el.pathUpdated();\r\n        }\r\n        var pathVersion = path.getVersion();\r\n        var elExt = el;\r\n        var svgPathBuilder = elExt.__svgPathBuilder;\r\n        if (elExt.__svgPathVersion !== pathVersion || !svgPathBuilder || el.style.strokePercent < 1) {\r\n            if (!svgPathBuilder) {\r\n                svgPathBuilder = elExt.__svgPathBuilder = new SVGPathRebuilder();\r\n            }\r\n            svgPathBuilder.reset();\r\n            path.rebuildPath(svgPathBuilder, el.style.strokePercent);\r\n            svgPathBuilder.generateStr();\r\n            elExt.__svgPathVersion = pathVersion;\r\n        }\r\n        attr(svgEl, 'd', svgPathBuilder.getStr());\r\n        bindStyle(svgEl, style, el);\r\n        setTransform(svgEl, el.transform);\r\n    }\r\n};\r\nexport { svgPath as path };\r\nvar svgImage = {\r\n    brush: function (el) {\r\n        var style = el.style;\r\n        var image = style.image;\r\n        if (image instanceof HTMLImageElement) {\r\n            image = image.src;\r\n        }\r\n        else if (image instanceof HTMLCanvasElement) {\r\n            image = image.toDataURL();\r\n        }\r\n        if (!image) {\r\n            return;\r\n        }\r\n        var x = style.x || 0;\r\n        var y = style.y || 0;\r\n        var dw = style.width;\r\n        var dh = style.height;\r\n        var svgEl = el.__svgEl;\r\n        if (!svgEl) {\r\n            svgEl = createElement('image');\r\n            el.__svgEl = svgEl;\r\n        }\r\n        if (image !== el.__imageSrc) {\r\n            attrXLink(svgEl, 'href', image);\r\n            el.__imageSrc = image;\r\n        }\r\n        attr(svgEl, 'width', dw + '');\r\n        attr(svgEl, 'height', dh + '');\r\n        attr(svgEl, 'x', x + '');\r\n        attr(svgEl, 'y', y + '');\r\n        bindStyle(svgEl, style, el);\r\n        setTransform(svgEl, el.transform);\r\n    }\r\n};\r\nexport { svgImage as image };\r\nvar TEXT_ALIGN_TO_ANCHOR = {\r\n    left: 'start',\r\n    right: 'end',\r\n    center: 'middle',\r\n    middle: 'middle'\r\n};\r\nfunction adjustTextY(y, lineHeight, textBaseline) {\r\n    if (textBaseline === 'top') {\r\n        y += lineHeight / 2;\r\n    }\r\n    else if (textBaseline === 'bottom') {\r\n        y -= lineHeight / 2;\r\n    }\r\n    return y;\r\n}\r\nvar svgText = {\r\n    brush: function (el) {\r\n        var style = el.style;\r\n        var text = style.text;\r\n        text != null && (text += '');\r\n        if (!text || isNaN(style.x) || isNaN(style.y)) {\r\n            return;\r\n        }\r\n        var textSvgEl = el.__svgEl;\r\n        if (!textSvgEl) {\r\n            textSvgEl = createElement('text');\r\n            attrXML(textSvgEl, 'xml:space', 'preserve');\r\n            el.__svgEl = textSvgEl;\r\n        }\r\n        var font = style.font || DEFAULT_FONT;\r\n        var textSvgElStyle = textSvgEl.style;\r\n        textSvgElStyle.font = font;\r\n        textSvgEl.textContent = text;\r\n        bindStyle(textSvgEl, style, el);\r\n        setTransform(textSvgEl, el.transform);\r\n        var x = style.x || 0;\r\n        var y = adjustTextY(style.y || 0, getLineHeight(font), style.textBaseline);\r\n        var textAlign = TEXT_ALIGN_TO_ANCHOR[style.textAlign]\r\n            || style.textAlign;\r\n        attr(textSvgEl, 'dominant-baseline', 'central');\r\n        attr(textSvgEl, 'text-anchor', textAlign);\r\n        attr(textSvgEl, 'x', x + '');\r\n        attr(textSvgEl, 'y', y + '');\r\n    }\r\n};\r\nexport { svgText as text };\r\n", "import { createElement } from '../core';\r\nimport * as zrUtil from '../../core/util';\r\nimport Path from '../../graphic/Path';\r\nimport ZRImage from '../../graphic/Image';\r\nimport TSpan from '../../graphic/TSpan';\r\nimport { path as svgPath, image as svgImage, text as svgText } from '../graphic';\r\nvar MARK_UNUSED = '0';\r\nvar MARK_USED = '1';\r\nvar Definable = (function () {\r\n    function Definable(zrId, svgRoot, tagNames, markLabel, domName) {\r\n        this.nextId = 0;\r\n        this._domName = '_dom';\r\n        this.createElement = createElement;\r\n        this._zrId = zrId;\r\n        this._svgRoot = svgRoot;\r\n        this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\r\n        this._markLabel = markLabel;\r\n        if (domName) {\r\n            this._domName = domName;\r\n        }\r\n    }\r\n    Definable.prototype.getDefs = function (isForceCreating) {\r\n        var svgRoot = this._svgRoot;\r\n        var defs = this._svgRoot.getElementsByTagName('defs');\r\n        if (defs.length === 0) {\r\n            if (isForceCreating) {\r\n                var defs_1 = svgRoot.insertBefore(this.createElement('defs'), svgRoot.firstChild);\r\n                if (!defs_1.contains) {\r\n                    defs_1.contains = function (el) {\r\n                        var children = defs_1.children;\r\n                        if (!children) {\r\n                            return false;\r\n                        }\r\n                        for (var i = children.length - 1; i >= 0; --i) {\r\n                            if (children[i] === el) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                        return false;\r\n                    };\r\n                }\r\n                return defs_1;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return defs[0];\r\n        }\r\n    };\r\n    Definable.prototype.doUpdate = function (target, onUpdate) {\r\n        if (!target) {\r\n            return;\r\n        }\r\n        var defs = this.getDefs(false);\r\n        if (target[this._domName] && defs.contains(target[this._domName])) {\r\n            if (typeof onUpdate === 'function') {\r\n                onUpdate(target);\r\n            }\r\n        }\r\n        else {\r\n            var dom = this.add(target);\r\n            if (dom) {\r\n                target[this._domName] = dom;\r\n            }\r\n        }\r\n    };\r\n    Definable.prototype.add = function (target) {\r\n        return null;\r\n    };\r\n    Definable.prototype.addDom = function (dom) {\r\n        var defs = this.getDefs(true);\r\n        if (dom.parentNode !== defs) {\r\n            defs.appendChild(dom);\r\n        }\r\n    };\r\n    Definable.prototype.removeDom = function (target) {\r\n        var defs = this.getDefs(false);\r\n        if (defs && target[this._domName]) {\r\n            defs.removeChild(target[this._domName]);\r\n            target[this._domName] = null;\r\n        }\r\n    };\r\n    Definable.prototype.getDoms = function () {\r\n        var defs = this.getDefs(false);\r\n        if (!defs) {\r\n            return [];\r\n        }\r\n        var doms = [];\r\n        zrUtil.each(this._tagNames, function (tagName) {\r\n            var tags = defs.getElementsByTagName(tagName);\r\n            for (var i = 0; i < tags.length; i++) {\r\n                doms.push(tags[i]);\r\n            }\r\n        });\r\n        return doms;\r\n    };\r\n    Definable.prototype.markAllUnused = function () {\r\n        var doms = this.getDoms();\r\n        var that = this;\r\n        zrUtil.each(doms, function (dom) {\r\n            dom[that._markLabel] = MARK_UNUSED;\r\n        });\r\n    };\r\n    Definable.prototype.markDomUsed = function (dom) {\r\n        dom && (dom[this._markLabel] = MARK_USED);\r\n    };\r\n    ;\r\n    Definable.prototype.markDomUnused = function (dom) {\r\n        dom && (dom[this._markLabel] = MARK_UNUSED);\r\n    };\r\n    ;\r\n    Definable.prototype.isDomUnused = function (dom) {\r\n        return dom && dom[this._markLabel] !== MARK_USED;\r\n    };\r\n    Definable.prototype.removeUnused = function () {\r\n        var _this = this;\r\n        var defs = this.getDefs(false);\r\n        if (!defs) {\r\n            return;\r\n        }\r\n        var doms = this.getDoms();\r\n        zrUtil.each(doms, function (dom) {\r\n            if (_this.isDomUnused(dom)) {\r\n                defs.removeChild(dom);\r\n            }\r\n        });\r\n    };\r\n    Definable.prototype.getSvgProxy = function (displayable) {\r\n        if (displayable instanceof Path) {\r\n            return svgPath;\r\n        }\r\n        else if (displayable instanceof ZRImage) {\r\n            return svgImage;\r\n        }\r\n        else if (displayable instanceof TSpan) {\r\n            return svgText;\r\n        }\r\n        else {\r\n            return svgPath;\r\n        }\r\n    };\r\n    Definable.prototype.getSvgElement = function (displayable) {\r\n        return displayable.__svgEl;\r\n    };\r\n    return Definable;\r\n}());\r\nexport default Definable;\r\n", "import { __extends } from \"tslib\";\r\nimport Definable from './Definable';\r\nimport * as zrUtil from '../../core/util';\r\nimport * as colorTool from '../../tool/color';\r\nfunction isLinearGradient(value) {\r\n    return value.type === 'linear';\r\n}\r\nfunction isRadialGradient(value) {\r\n    return value.type === 'radial';\r\n}\r\nfunction isGradient(value) {\r\n    return value && (value.type === 'linear'\r\n        || value.type === 'radial');\r\n}\r\nvar GradientManager = (function (_super) {\r\n    __extends(GradientManager, _super);\r\n    function GradientManager(zrId, svgRoot) {\r\n        return _super.call(this, zrId, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__') || this;\r\n    }\r\n    GradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\r\n        if (displayable && displayable.style) {\r\n            var that_1 = this;\r\n            zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\r\n                var value = displayable.style[fillOrStroke];\r\n                if (isGradient(value)) {\r\n                    var gradient = value;\r\n                    var defs = that_1.getDefs(true);\r\n                    var dom = void 0;\r\n                    if (gradient.__dom) {\r\n                        dom = gradient.__dom;\r\n                        if (!defs.contains(gradient.__dom)) {\r\n                            that_1.addDom(dom);\r\n                        }\r\n                    }\r\n                    else {\r\n                        dom = that_1.add(gradient);\r\n                    }\r\n                    that_1.markUsed(displayable);\r\n                    var id = dom.getAttribute('id');\r\n                    svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\r\n                }\r\n            });\r\n        }\r\n    };\r\n    GradientManager.prototype.add = function (gradient) {\r\n        var dom;\r\n        if (isLinearGradient(gradient)) {\r\n            dom = this.createElement('linearGradient');\r\n        }\r\n        else if (isRadialGradient(gradient)) {\r\n            dom = this.createElement('radialGradient');\r\n        }\r\n        else {\r\n            zrUtil.logError('Illegal gradient type.');\r\n            return null;\r\n        }\r\n        gradient.id = gradient.id || this.nextId++;\r\n        dom.setAttribute('id', 'zr' + this._zrId\r\n            + '-gradient-' + gradient.id);\r\n        this.updateDom(gradient, dom);\r\n        this.addDom(dom);\r\n        return dom;\r\n    };\r\n    GradientManager.prototype.update = function (gradient) {\r\n        if (!isGradient(gradient)) {\r\n            return;\r\n        }\r\n        var that = this;\r\n        this.doUpdate(gradient, function () {\r\n            var dom = gradient.__dom;\r\n            if (!dom) {\r\n                return;\r\n            }\r\n            var tagName = dom.tagName;\r\n            var type = gradient.type;\r\n            if (type === 'linear' && tagName === 'linearGradient'\r\n                || type === 'radial' && tagName === 'radialGradient') {\r\n                that.updateDom(gradient, gradient.__dom);\r\n            }\r\n            else {\r\n                that.removeDom(gradient);\r\n                that.add(gradient);\r\n            }\r\n        });\r\n    };\r\n    GradientManager.prototype.updateDom = function (gradient, dom) {\r\n        if (isLinearGradient(gradient)) {\r\n            dom.setAttribute('x1', gradient.x + '');\r\n            dom.setAttribute('y1', gradient.y + '');\r\n            dom.setAttribute('x2', gradient.x2 + '');\r\n            dom.setAttribute('y2', gradient.y2 + '');\r\n        }\r\n        else if (isRadialGradient(gradient)) {\r\n            dom.setAttribute('cx', gradient.x + '');\r\n            dom.setAttribute('cy', gradient.y + '');\r\n            dom.setAttribute('r', gradient.r + '');\r\n        }\r\n        else {\r\n            zrUtil.logError('Illegal gradient type.');\r\n            return;\r\n        }\r\n        if (gradient.global) {\r\n            dom.setAttribute('gradientUnits', 'userSpaceOnUse');\r\n        }\r\n        else {\r\n            dom.setAttribute('gradientUnits', 'objectBoundingBox');\r\n        }\r\n        dom.innerHTML = '';\r\n        var colors = gradient.colorStops;\r\n        for (var i = 0, len = colors.length; i < len; ++i) {\r\n            var stop_1 = this.createElement('stop');\r\n            stop_1.setAttribute('offset', colors[i].offset * 100 + '%');\r\n            var color = colors[i].color;\r\n            if (color.indexOf('rgba') > -1) {\r\n                var opacity = colorTool.parse(color)[3];\r\n                var hex = colorTool.toHex(color);\r\n                stop_1.setAttribute('stop-color', '#' + hex);\r\n                stop_1.setAttribute('stop-opacity', opacity + '');\r\n            }\r\n            else {\r\n                stop_1.setAttribute('stop-color', colors[i].color);\r\n            }\r\n            dom.appendChild(stop_1);\r\n        }\r\n        gradient.__dom = dom;\r\n    };\r\n    GradientManager.prototype.markUsed = function (displayable) {\r\n        if (displayable.style) {\r\n            var gradient = displayable.style.fill;\r\n            if (gradient && gradient.__dom) {\r\n                _super.prototype.markDomUsed.call(this, gradient.__dom);\r\n            }\r\n            gradient = displayable.style.stroke;\r\n            if (gradient && gradient.__dom) {\r\n                _super.prototype.markDomUsed.call(this, gradient.__dom);\r\n            }\r\n        }\r\n    };\r\n    return GradientManager;\r\n}(Definable));\r\nexport default GradientManager;\r\n", "import { __extends } from \"tslib\";\r\nimport Definable from './Definable';\r\nimport * as zrUtil from '../../core/util';\r\nimport { createOrUpdateImage } from '../../graphic/helper/image';\r\nimport WeakMap from '../../core/WeakMap';\r\nfunction isPattern(value) {\r\n    return value && (!!value.image || !!value.svgElement);\r\n}\r\nvar patternDomMap = new WeakMap();\r\nvar PatternManager = (function (_super) {\r\n    __extends(PatternManager, _super);\r\n    function PatternManager(zrId, svgRoot) {\r\n        return _super.call(this, zrId, svgRoot, ['pattern'], '__pattern_in_use__') || this;\r\n    }\r\n    PatternManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\r\n        if (displayable && displayable.style) {\r\n            var that_1 = this;\r\n            zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\r\n                var pattern = displayable.style[fillOrStroke];\r\n                if (isPattern(pattern)) {\r\n                    var defs = that_1.getDefs(true);\r\n                    var dom = patternDomMap.get(pattern);\r\n                    if (dom) {\r\n                        if (!defs.contains(dom)) {\r\n                            that_1.addDom(dom);\r\n                        }\r\n                    }\r\n                    else {\r\n                        dom = that_1.add(pattern);\r\n                    }\r\n                    that_1.markUsed(displayable);\r\n                    var id = dom.getAttribute('id');\r\n                    svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PatternManager.prototype.add = function (pattern) {\r\n        if (!isPattern(pattern)) {\r\n            return;\r\n        }\r\n        var dom = this.createElement('pattern');\r\n        pattern.id = pattern.id == null ? this.nextId++ : pattern.id;\r\n        dom.setAttribute('id', 'zr' + this._zrId\r\n            + '-pattern-' + pattern.id);\r\n        dom.setAttribute('x', '0');\r\n        dom.setAttribute('y', '0');\r\n        dom.setAttribute('patternUnits', 'userSpaceOnUse');\r\n        this.updateDom(pattern, dom);\r\n        this.addDom(dom);\r\n        return dom;\r\n    };\r\n    PatternManager.prototype.update = function (pattern) {\r\n        if (!isPattern(pattern)) {\r\n            return;\r\n        }\r\n        var that = this;\r\n        this.doUpdate(pattern, function () {\r\n            var dom = patternDomMap.get(pattern);\r\n            that.updateDom(pattern, dom);\r\n        });\r\n    };\r\n    PatternManager.prototype.updateDom = function (pattern, patternDom) {\r\n        var svgElement = pattern.svgElement;\r\n        if (svgElement instanceof SVGElement) {\r\n            if (svgElement.parentNode !== patternDom) {\r\n                patternDom.innerHTML = '';\r\n                patternDom.appendChild(svgElement);\r\n                patternDom.setAttribute('width', pattern.svgWidth + '');\r\n                patternDom.setAttribute('height', pattern.svgHeight + '');\r\n            }\r\n        }\r\n        else {\r\n            var img = void 0;\r\n            var prevImage = patternDom.getElementsByTagName('image');\r\n            if (prevImage.length) {\r\n                if (pattern.image) {\r\n                    img = prevImage[0];\r\n                }\r\n                else {\r\n                    patternDom.removeChild(prevImage[0]);\r\n                    return;\r\n                }\r\n            }\r\n            else if (pattern.image) {\r\n                img = this.createElement('image');\r\n            }\r\n            if (img) {\r\n                var imageSrc = void 0;\r\n                var patternImage = pattern.image;\r\n                if (typeof patternImage === 'string') {\r\n                    imageSrc = patternImage;\r\n                }\r\n                else if (patternImage instanceof HTMLImageElement) {\r\n                    imageSrc = patternImage.src;\r\n                }\r\n                else if (patternImage instanceof HTMLCanvasElement) {\r\n                    imageSrc = patternImage.toDataURL();\r\n                }\r\n                if (imageSrc) {\r\n                    img.setAttribute('href', imageSrc);\r\n                    img.setAttribute('x', '0');\r\n                    img.setAttribute('y', '0');\r\n                    var hostEl = {\r\n                        dirty: function () { }\r\n                    };\r\n                    var createdImage = createOrUpdateImage(imageSrc, img, hostEl, function (img) {\r\n                        patternDom.setAttribute('width', img.width + '');\r\n                        patternDom.setAttribute('height', img.height + '');\r\n                    });\r\n                    if (createdImage && createdImage.width && createdImage.height) {\r\n                        patternDom.setAttribute('width', createdImage.width + '');\r\n                        patternDom.setAttribute('height', createdImage.height + '');\r\n                    }\r\n                    patternDom.appendChild(img);\r\n                }\r\n            }\r\n        }\r\n        var x = pattern.x || 0;\r\n        var y = pattern.y || 0;\r\n        var rotation = (pattern.rotation || 0) / Math.PI * 180;\r\n        var scaleX = pattern.scaleX || 1;\r\n        var scaleY = pattern.scaleY || 1;\r\n        var transform = \"translate(\" + x + \", \" + y + \") rotate(\" + rotation + \") scale(\" + scaleX + \", \" + scaleY + \")\";\r\n        patternDom.setAttribute('patternTransform', transform);\r\n        patternDomMap.set(pattern, patternDom);\r\n    };\r\n    PatternManager.prototype.markUsed = function (displayable) {\r\n        if (displayable.style) {\r\n            if (isPattern(displayable.style.fill)) {\r\n                _super.prototype.markDomUsed.call(this, patternDomMap.get(displayable.style.fill));\r\n            }\r\n            if (isPattern(displayable.style.stroke)) {\r\n                _super.prototype.markDomUsed.call(this, patternDomMap.get(displayable.style.stroke));\r\n            }\r\n        }\r\n    };\r\n    return PatternManager;\r\n}(Definable));\r\nexport default PatternManager;\r\n", "import { __extends } from \"tslib\";\r\nimport Definable from './Definable';\r\nimport * as zrUtil from '../../core/util';\r\nimport { isClipPathChanged } from '../../canvas/helper';\r\nfunction generateClipPathsKey(clipPaths) {\r\n    var key = [];\r\n    if (clipPaths) {\r\n        for (var i = 0; i < clipPaths.length; i++) {\r\n            var clipPath = clipPaths[i];\r\n            key.push(clipPath.id);\r\n        }\r\n    }\r\n    return key.join(',');\r\n}\r\nexport function hasClipPath(displayable) {\r\n    var clipPaths = displayable.__clipPaths;\r\n    return clipPaths && clipPaths.length > 0;\r\n}\r\nvar ClippathManager = (function (_super) {\r\n    __extends(ClippathManager, _super);\r\n    function ClippathManager(zrId, svgRoot) {\r\n        var _this = _super.call(this, zrId, svgRoot, 'clipPath', '__clippath_in_use__') || this;\r\n        _this._refGroups = {};\r\n        _this._keyDuplicateCount = {};\r\n        return _this;\r\n    }\r\n    ClippathManager.prototype.markAllUnused = function () {\r\n        _super.prototype.markAllUnused.call(this);\r\n        var refGroups = this._refGroups;\r\n        for (var key in refGroups) {\r\n            if (refGroups.hasOwnProperty(key)) {\r\n                this.markDomUnused(refGroups[key]);\r\n            }\r\n        }\r\n        this._keyDuplicateCount = {};\r\n    };\r\n    ClippathManager.prototype._getClipPathGroup = function (displayable, prevDisplayable) {\r\n        if (!hasClipPath(displayable)) {\r\n            return;\r\n        }\r\n        var clipPaths = displayable.__clipPaths;\r\n        var keyDuplicateCount = this._keyDuplicateCount;\r\n        var clipPathKey = generateClipPathsKey(clipPaths);\r\n        if (isClipPathChanged(clipPaths, prevDisplayable && prevDisplayable.__clipPaths)) {\r\n            keyDuplicateCount[clipPathKey] = keyDuplicateCount[clipPathKey] || 0;\r\n            keyDuplicateCount[clipPathKey] && (clipPathKey += '-' + keyDuplicateCount[clipPathKey]);\r\n            keyDuplicateCount[clipPathKey]++;\r\n        }\r\n        return this._refGroups[clipPathKey]\r\n            || (this._refGroups[clipPathKey] = this.createElement('g'));\r\n    };\r\n    ClippathManager.prototype.update = function (displayable, prevDisplayable) {\r\n        var clipGroup = this._getClipPathGroup(displayable, prevDisplayable);\r\n        if (clipGroup) {\r\n            this.markDomUsed(clipGroup);\r\n            this.updateDom(clipGroup, displayable.__clipPaths);\r\n        }\r\n        return clipGroup;\r\n    };\r\n    ;\r\n    ClippathManager.prototype.updateDom = function (parentEl, clipPaths) {\r\n        if (clipPaths && clipPaths.length > 0) {\r\n            var defs = this.getDefs(true);\r\n            var clipPath = clipPaths[0];\r\n            var clipPathEl = void 0;\r\n            var id = void 0;\r\n            if (clipPath._dom) {\r\n                id = clipPath._dom.getAttribute('id');\r\n                clipPathEl = clipPath._dom;\r\n                if (!defs.contains(clipPathEl)) {\r\n                    defs.appendChild(clipPathEl);\r\n                }\r\n            }\r\n            else {\r\n                id = 'zr' + this._zrId + '-clip-' + this.nextId;\r\n                ++this.nextId;\r\n                clipPathEl = this.createElement('clipPath');\r\n                clipPathEl.setAttribute('id', id);\r\n                defs.appendChild(clipPathEl);\r\n                clipPath._dom = clipPathEl;\r\n            }\r\n            var svgProxy = this.getSvgProxy(clipPath);\r\n            svgProxy.brush(clipPath);\r\n            var pathEl = this.getSvgElement(clipPath);\r\n            clipPathEl.innerHTML = '';\r\n            clipPathEl.appendChild(pathEl);\r\n            parentEl.setAttribute('clip-path', 'url(#' + id + ')');\r\n            if (clipPaths.length > 1) {\r\n                this.updateDom(clipPathEl, clipPaths.slice(1));\r\n            }\r\n        }\r\n        else {\r\n            if (parentEl) {\r\n                parentEl.setAttribute('clip-path', 'none');\r\n            }\r\n        }\r\n    };\r\n    ;\r\n    ClippathManager.prototype.markUsed = function (displayable) {\r\n        var _this = this;\r\n        if (displayable.__clipPaths) {\r\n            zrUtil.each(displayable.__clipPaths, function (clipPath) {\r\n                if (clipPath._dom) {\r\n                    _super.prototype.markDomUsed.call(_this, clipPath._dom);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    ;\r\n    ClippathManager.prototype.removeUnused = function () {\r\n        _super.prototype.removeUnused.call(this);\r\n        var newRefGroupsMap = {};\r\n        var refGroups = this._refGroups;\r\n        for (var key in refGroups) {\r\n            if (refGroups.hasOwnProperty(key)) {\r\n                var group = refGroups[key];\r\n                if (!this.isDomUnused(group)) {\r\n                    newRefGroupsMap[key] = group;\r\n                }\r\n                else if (group.parentNode) {\r\n                    group.parentNode.removeChild(group);\r\n                }\r\n            }\r\n        }\r\n        this._refGroups = newRefGroupsMap;\r\n    };\r\n    return ClippathManager;\r\n}(Definable));\r\nexport default ClippathManager;\r\n", "import { __extends } from \"tslib\";\r\nimport Definable from './Definable';\r\nimport { normalizeColor } from '../core';\r\nvar ShadowManager = (function (_super) {\r\n    __extends(ShadowManager, _super);\r\n    function ShadowManager(zrId, svgRoot) {\r\n        var _this = _super.call(this, zrId, svgRoot, ['filter'], '__filter_in_use__', '_shadowDom') || this;\r\n        _this._shadowDomMap = {};\r\n        _this._shadowDomPool = [];\r\n        return _this;\r\n    }\r\n    ShadowManager.prototype._getFromPool = function () {\r\n        var shadowDom = this._shadowDomPool.pop();\r\n        if (!shadowDom) {\r\n            shadowDom = this.createElement('filter');\r\n            shadowDom.setAttribute('id', 'zr' + this._zrId + '-shadow-' + this.nextId++);\r\n            var domChild = this.createElement('feDropShadow');\r\n            shadowDom.appendChild(domChild);\r\n            this.addDom(shadowDom);\r\n        }\r\n        return shadowDom;\r\n    };\r\n    ShadowManager.prototype.update = function (svgElement, displayable) {\r\n        var style = displayable.style;\r\n        if (hasShadow(style)) {\r\n            var shadowKey = getShadowKey(displayable);\r\n            var shadowDom = displayable._shadowDom = this._shadowDomMap[shadowKey];\r\n            if (!shadowDom) {\r\n                shadowDom = this._getFromPool();\r\n                this._shadowDomMap[shadowKey] = shadowDom;\r\n            }\r\n            this.updateDom(svgElement, displayable, shadowDom);\r\n        }\r\n        else {\r\n            this.remove(svgElement, displayable);\r\n        }\r\n    };\r\n    ShadowManager.prototype.remove = function (svgElement, displayable) {\r\n        if (displayable._shadowDom != null) {\r\n            displayable._shadowDom = null;\r\n            svgElement.removeAttribute('filter');\r\n        }\r\n    };\r\n    ShadowManager.prototype.updateDom = function (svgElement, displayable, shadowDom) {\r\n        var domChild = shadowDom.children[0];\r\n        var style = displayable.style;\r\n        var globalScale = displayable.getGlobalScale();\r\n        var scaleX = globalScale[0];\r\n        var scaleY = globalScale[1];\r\n        if (!scaleX || !scaleY) {\r\n            return;\r\n        }\r\n        var offsetX = style.shadowOffsetX || 0;\r\n        var offsetY = style.shadowOffsetY || 0;\r\n        var blur = style.shadowBlur;\r\n        var normalizedColor = normalizeColor(style.shadowColor);\r\n        domChild.setAttribute('dx', offsetX / scaleX + '');\r\n        domChild.setAttribute('dy', offsetY / scaleY + '');\r\n        domChild.setAttribute('flood-color', normalizedColor.color);\r\n        domChild.setAttribute('flood-opacity', normalizedColor.opacity + '');\r\n        var stdDx = blur / 2 / scaleX;\r\n        var stdDy = blur / 2 / scaleY;\r\n        var stdDeviation = stdDx + ' ' + stdDy;\r\n        domChild.setAttribute('stdDeviation', stdDeviation);\r\n        shadowDom.setAttribute('x', '-100%');\r\n        shadowDom.setAttribute('y', '-100%');\r\n        shadowDom.setAttribute('width', '300%');\r\n        shadowDom.setAttribute('height', '300%');\r\n        displayable._shadowDom = shadowDom;\r\n        var id = shadowDom.getAttribute('id');\r\n        svgElement.setAttribute('filter', 'url(#' + id + ')');\r\n    };\r\n    ShadowManager.prototype.removeUnused = function () {\r\n        var defs = this.getDefs(false);\r\n        if (!defs) {\r\n            return;\r\n        }\r\n        var shadowDomsPool = this._shadowDomPool;\r\n        var shadowDomMap = this._shadowDomMap;\r\n        for (var key in shadowDomMap) {\r\n            if (shadowDomMap.hasOwnProperty(key)) {\r\n                shadowDomsPool.push(shadowDomMap[key]);\r\n            }\r\n        }\r\n        this._shadowDomMap = {};\r\n    };\r\n    return ShadowManager;\r\n}(Definable));\r\nexport default ShadowManager;\r\nfunction hasShadow(style) {\r\n    return style\r\n        && (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY);\r\n}\r\nfunction getShadowKey(displayable) {\r\n    var style = displayable.style;\r\n    var globalScale = displayable.getGlobalScale();\r\n    return [\r\n        style.shadowColor,\r\n        (style.shadowBlur || 0).toFixed(2),\r\n        (style.shadowOffsetX || 0).toFixed(2),\r\n        (style.shadowOffsetY || 0).toFixed(2),\r\n        globalScale[0],\r\n        globalScale[1]\r\n    ].join(',');\r\n}\r\n", "import { createElement, normalizeColor } from './core';\r\nimport * as util from '../core/util';\r\nimport Path from '../graphic/Path';\r\nimport ZRImage from '../graphic/Image';\r\nimport TSpan from '../graphic/TSpan';\r\nimport arrayDiff from '../core/arrayDiff';\r\nimport GradientManager from './helper/GradientManager';\r\nimport PatternManager from './helper/PatternManager';\r\nimport ClippathManager, { hasClipPath } from './helper/ClippathManager';\r\nimport ShadowManager from './helper/ShadowManager';\r\nimport { path as svgPath, image as svgImage, text as svgText } from './graphic';\r\nfunction parseInt10(val) {\r\n    return parseInt(val, 10);\r\n}\r\nfunction getSvgProxy(el) {\r\n    if (el instanceof Path) {\r\n        return svgPath;\r\n    }\r\n    else if (el instanceof ZRImage) {\r\n        return svgImage;\r\n    }\r\n    else if (el instanceof TSpan) {\r\n        return svgText;\r\n    }\r\n    else {\r\n        return svgPath;\r\n    }\r\n}\r\nfunction checkParentAvailable(parent, child) {\r\n    return child && parent && child.parentNode !== parent;\r\n}\r\nfunction insertAfter(parent, child, prevSibling) {\r\n    if (checkParentAvailable(parent, child) && prevSibling) {\r\n        var nextSibling = prevSibling.nextSibling;\r\n        nextSibling ? parent.insertBefore(child, nextSibling)\r\n            : parent.appendChild(child);\r\n    }\r\n}\r\nfunction prepend(parent, child) {\r\n    if (checkParentAvailable(parent, child)) {\r\n        var firstChild = parent.firstChild;\r\n        firstChild ? parent.insertBefore(child, firstChild)\r\n            : parent.appendChild(child);\r\n    }\r\n}\r\nfunction remove(parent, child) {\r\n    if (child && parent && child.parentNode === parent) {\r\n        parent.removeChild(child);\r\n    }\r\n}\r\nfunction removeFromMyParent(child) {\r\n    if (child && child.parentNode) {\r\n        child.parentNode.removeChild(child);\r\n    }\r\n}\r\nfunction getSvgElement(displayable) {\r\n    return displayable.__svgEl;\r\n}\r\nvar SVGPainter = (function () {\r\n    function SVGPainter(root, storage, opts, zrId) {\r\n        this.type = 'svg';\r\n        this.refreshHover = createMethodNotSupport('refreshHover');\r\n        this.pathToImage = createMethodNotSupport('pathToImage');\r\n        this.configLayer = createMethodNotSupport('configLayer');\r\n        this.root = root;\r\n        this.storage = storage;\r\n        this._opts = opts = util.extend({}, opts || {});\r\n        var svgDom = createElement('svg');\r\n        svgDom.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns', 'http://www.w3.org/2000/svg');\r\n        svgDom.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:xlink', 'http://www.w3.org/1999/xlink');\r\n        svgDom.setAttribute('version', '1.1');\r\n        svgDom.setAttribute('baseProfile', 'full');\r\n        svgDom.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\r\n        var bgRoot = createElement('g');\r\n        svgDom.appendChild(bgRoot);\r\n        var svgRoot = createElement('g');\r\n        svgDom.appendChild(svgRoot);\r\n        this._gradientManager = new GradientManager(zrId, svgRoot);\r\n        this._patternManager = new PatternManager(zrId, svgRoot);\r\n        this._clipPathManager = new ClippathManager(zrId, svgRoot);\r\n        this._shadowManager = new ShadowManager(zrId, svgRoot);\r\n        var viewport = document.createElement('div');\r\n        viewport.style.cssText = 'overflow:hidden;position:relative';\r\n        this._svgDom = svgDom;\r\n        this._svgRoot = svgRoot;\r\n        this._backgroundRoot = bgRoot;\r\n        this._viewport = viewport;\r\n        root.appendChild(viewport);\r\n        viewport.appendChild(svgDom);\r\n        this.resize(opts.width, opts.height);\r\n        this._visibleList = [];\r\n    }\r\n    SVGPainter.prototype.getType = function () {\r\n        return 'svg';\r\n    };\r\n    SVGPainter.prototype.getViewportRoot = function () {\r\n        return this._viewport;\r\n    };\r\n    SVGPainter.prototype.getSvgDom = function () {\r\n        return this._svgDom;\r\n    };\r\n    SVGPainter.prototype.getSvgRoot = function () {\r\n        return this._svgRoot;\r\n    };\r\n    SVGPainter.prototype.getViewportRootOffset = function () {\r\n        var viewportRoot = this.getViewportRoot();\r\n        if (viewportRoot) {\r\n            return {\r\n                offsetLeft: viewportRoot.offsetLeft || 0,\r\n                offsetTop: viewportRoot.offsetTop || 0\r\n            };\r\n        }\r\n    };\r\n    SVGPainter.prototype.refresh = function () {\r\n        var list = this.storage.getDisplayList(true);\r\n        this._paintList(list);\r\n    };\r\n    SVGPainter.prototype.setBackgroundColor = function (backgroundColor) {\r\n        if (this._backgroundRoot && this._backgroundNode) {\r\n            this._backgroundRoot.removeChild(this._backgroundNode);\r\n        }\r\n        var bgNode = createElement('rect');\r\n        bgNode.setAttribute('width', this.getWidth());\r\n        bgNode.setAttribute('height', this.getHeight());\r\n        bgNode.setAttribute('x', 0);\r\n        bgNode.setAttribute('y', 0);\r\n        bgNode.setAttribute('id', 0);\r\n        var _a = normalizeColor(backgroundColor), color = _a.color, opacity = _a.opacity;\r\n        bgNode.setAttribute('fill', color);\r\n        bgNode.setAttribute('fill-opacity', opacity);\r\n        this._backgroundRoot.appendChild(bgNode);\r\n        this._backgroundNode = bgNode;\r\n    };\r\n    SVGPainter.prototype.createSVGElement = function (tag) {\r\n        return createElement(tag);\r\n    };\r\n    SVGPainter.prototype.paintOne = function (el) {\r\n        var svgProxy = getSvgProxy(el);\r\n        svgProxy && svgProxy.brush(el);\r\n        return getSvgElement(el);\r\n    };\r\n    SVGPainter.prototype._paintList = function (list) {\r\n        var gradientManager = this._gradientManager;\r\n        var patternManager = this._patternManager;\r\n        var clipPathManager = this._clipPathManager;\r\n        var shadowManager = this._shadowManager;\r\n        gradientManager.markAllUnused();\r\n        patternManager.markAllUnused();\r\n        clipPathManager.markAllUnused();\r\n        shadowManager.markAllUnused();\r\n        var svgRoot = this._svgRoot;\r\n        var visibleList = this._visibleList;\r\n        var listLen = list.length;\r\n        var newVisibleList = [];\r\n        for (var i = 0; i < listLen; i++) {\r\n            var displayable = list[i];\r\n            var svgProxy = getSvgProxy(displayable);\r\n            var svgElement = getSvgElement(displayable);\r\n            if (!displayable.invisible) {\r\n                if (displayable.__dirty || !svgElement) {\r\n                    svgProxy && svgProxy.brush(displayable);\r\n                    svgElement = getSvgElement(displayable);\r\n                    if (svgElement && displayable.style) {\r\n                        gradientManager.update(displayable.style.fill);\r\n                        gradientManager.update(displayable.style.stroke);\r\n                        patternManager.update(displayable.style.fill);\r\n                        patternManager.update(displayable.style.stroke);\r\n                        shadowManager.update(svgElement, displayable);\r\n                    }\r\n                    displayable.__dirty = 0;\r\n                }\r\n                if (svgElement) {\r\n                    newVisibleList.push(displayable);\r\n                }\r\n            }\r\n        }\r\n        var diff = arrayDiff(visibleList, newVisibleList);\r\n        var prevSvgElement;\r\n        var topPrevSvgElement;\r\n        for (var i = 0; i < diff.length; i++) {\r\n            var item = diff[i];\r\n            if (item.removed) {\r\n                for (var k = 0; k < item.count; k++) {\r\n                    var displayable = visibleList[item.indices[k]];\r\n                    var svgElement = getSvgElement(displayable);\r\n                    hasClipPath(displayable) ? removeFromMyParent(svgElement)\r\n                        : remove(svgRoot, svgElement);\r\n                }\r\n            }\r\n        }\r\n        var prevDisplayable;\r\n        var currentClipGroup;\r\n        for (var i = 0; i < diff.length; i++) {\r\n            var item = diff[i];\r\n            if (item.removed) {\r\n                continue;\r\n            }\r\n            for (var k = 0; k < item.count; k++) {\r\n                var displayable = newVisibleList[item.indices[k]];\r\n                var clipGroup = clipPathManager.update(displayable, prevDisplayable);\r\n                if (clipGroup !== currentClipGroup) {\r\n                    prevSvgElement = topPrevSvgElement;\r\n                    if (clipGroup) {\r\n                        prevSvgElement ? insertAfter(svgRoot, clipGroup, prevSvgElement)\r\n                            : prepend(svgRoot, clipGroup);\r\n                        topPrevSvgElement = clipGroup;\r\n                        prevSvgElement = null;\r\n                    }\r\n                    currentClipGroup = clipGroup;\r\n                }\r\n                var svgElement = getSvgElement(displayable);\r\n                prevSvgElement\r\n                    ? insertAfter(currentClipGroup || svgRoot, svgElement, prevSvgElement)\r\n                    : prepend(currentClipGroup || svgRoot, svgElement);\r\n                prevSvgElement = svgElement || prevSvgElement;\r\n                if (!currentClipGroup) {\r\n                    topPrevSvgElement = prevSvgElement;\r\n                }\r\n                gradientManager.markUsed(displayable);\r\n                gradientManager.addWithoutUpdate(svgElement, displayable);\r\n                patternManager.markUsed(displayable);\r\n                patternManager.addWithoutUpdate(svgElement, displayable);\r\n                clipPathManager.markUsed(displayable);\r\n                prevDisplayable = displayable;\r\n            }\r\n        }\r\n        gradientManager.removeUnused();\r\n        patternManager.removeUnused();\r\n        clipPathManager.removeUnused();\r\n        shadowManager.removeUnused();\r\n        this._visibleList = newVisibleList;\r\n    };\r\n    SVGPainter.prototype.resize = function (width, height) {\r\n        var viewport = this._viewport;\r\n        viewport.style.display = 'none';\r\n        var opts = this._opts;\r\n        width != null && (opts.width = width);\r\n        height != null && (opts.height = height);\r\n        width = this._getSize(0);\r\n        height = this._getSize(1);\r\n        viewport.style.display = '';\r\n        if (this._width !== width || this._height !== height) {\r\n            this._width = width;\r\n            this._height = height;\r\n            var viewportStyle = viewport.style;\r\n            viewportStyle.width = width + 'px';\r\n            viewportStyle.height = height + 'px';\r\n            var svgRoot = this._svgDom;\r\n            svgRoot.setAttribute('width', width + '');\r\n            svgRoot.setAttribute('height', height + '');\r\n        }\r\n        if (this._backgroundNode) {\r\n            this._backgroundNode.setAttribute('width', width);\r\n            this._backgroundNode.setAttribute('height', height);\r\n        }\r\n    };\r\n    SVGPainter.prototype.getWidth = function () {\r\n        return this._width;\r\n    };\r\n    SVGPainter.prototype.getHeight = function () {\r\n        return this._height;\r\n    };\r\n    SVGPainter.prototype._getSize = function (whIdx) {\r\n        var opts = this._opts;\r\n        var wh = ['width', 'height'][whIdx];\r\n        var cwh = ['clientWidth', 'clientHeight'][whIdx];\r\n        var plt = ['paddingLeft', 'paddingTop'][whIdx];\r\n        var prb = ['paddingRight', 'paddingBottom'][whIdx];\r\n        if (opts[wh] != null && opts[wh] !== 'auto') {\r\n            return parseFloat(opts[wh]);\r\n        }\r\n        var root = this.root;\r\n        var stl = document.defaultView.getComputedStyle(root);\r\n        return ((root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\r\n            - (parseInt10(stl[plt]) || 0)\r\n            - (parseInt10(stl[prb]) || 0)) | 0;\r\n    };\r\n    SVGPainter.prototype.dispose = function () {\r\n        this.root.innerHTML = '';\r\n        this._svgRoot =\r\n            this._backgroundRoot =\r\n                this._svgDom =\r\n                    this._backgroundNode =\r\n                        this._viewport = this.storage = null;\r\n    };\r\n    SVGPainter.prototype.clear = function () {\r\n        var viewportNode = this._viewport;\r\n        if (viewportNode && viewportNode.parentNode) {\r\n            viewportNode.parentNode.removeChild(viewportNode);\r\n        }\r\n    };\r\n    SVGPainter.prototype.toDataURL = function () {\r\n        this.refresh();\r\n        var svgDom = this._svgDom;\r\n        var outerHTML = svgDom.outerHTML\r\n            || (svgDom.parentNode && svgDom.parentNode).innerHTML;\r\n        var html = encodeURIComponent(outerHTML.replace(/></g, '>\\n\\r<'));\r\n        return 'data:image/svg+xml;charset=UTF-8,' + html;\r\n    };\r\n    return SVGPainter;\r\n}());\r\nfunction createMethodNotSupport(method) {\r\n    return function () {\r\n        util.logError('In SVG mode painter not support method \"' + method + '\"');\r\n    };\r\n}\r\nexport default SVGPainter;\r\n", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport SVGPainter from 'zrender/lib/svg/Painter';\r\nexport function install(registers) {\r\n  registers.registerPainter('svg', SVGPainter);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport createSeriesData from '../helper/createSeriesData';\r\nimport SeriesModel from '../../model/Series';\r\nimport { createSymbol } from '../../util/symbol';\r\nimport { Group } from '../../util/graphic';\r\n\r\nvar LineSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(LineSeriesModel, _super);\r\n\r\n  function LineSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = LineSeriesModel.type;\r\n    _this.hasSymbolVisual = true;\r\n    return _this;\r\n  }\r\n\r\n  LineSeriesModel.prototype.getInitialData = function (option) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      var coordSys = option.coordinateSystem;\r\n\r\n      if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\r\n        throw new Error('Line not support coordinateSystem besides cartesian and polar');\r\n      }\r\n    }\r\n\r\n    return createSeriesData(null, this, {\r\n      useEncodeDefaulter: true\r\n    });\r\n  };\r\n\r\n  LineSeriesModel.prototype.getLegendIcon = function (opt) {\r\n    var group = new Group();\r\n    var line = createSymbol('line', 0, opt.itemHeight / 2, opt.itemWidth, 0, opt.lineStyle.stroke, false);\r\n    group.add(line);\r\n    line.setStyle(opt.lineStyle);\r\n    var visualType = this.getData().getVisual('symbol');\r\n    var visualRotate = this.getData().getVisual('symbolRotate');\r\n    var symbolType = visualType === 'none' ? 'circle' : visualType; // Symbol size is 80% when there is a line\r\n\r\n    var size = opt.itemHeight * 0.8;\r\n    var symbol = createSymbol(symbolType, (opt.itemWidth - size) / 2, (opt.itemHeight - size) / 2, size, size, opt.itemStyle.fill);\r\n    group.add(symbol);\r\n    symbol.setStyle(opt.itemStyle);\r\n    var symbolRotate = opt.iconRotate === 'inherit' ? visualRotate : opt.iconRotate || 0;\r\n    symbol.rotation = symbolRotate * Math.PI / 180;\r\n    symbol.setOrigin([opt.itemWidth / 2, opt.itemHeight / 2]);\r\n\r\n    if (symbolType.indexOf('empty') > -1) {\r\n      symbol.style.stroke = symbol.style.fill;\r\n      symbol.style.fill = '#fff';\r\n      symbol.style.lineWidth = 2;\r\n    }\r\n\r\n    return group;\r\n  };\r\n\r\n  LineSeriesModel.type = 'series.line';\r\n  LineSeriesModel.dependencies = ['grid', 'polar'];\r\n  LineSeriesModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 3,\r\n    coordinateSystem: 'cartesian2d',\r\n    legendHoverLink: true,\r\n    clip: true,\r\n    label: {\r\n      position: 'top'\r\n    },\r\n    // itemStyle: {\r\n    // },\r\n    endLabel: {\r\n      show: false,\r\n      valueAnimation: true,\r\n      distance: 8\r\n    },\r\n    lineStyle: {\r\n      width: 2,\r\n      type: 'solid'\r\n    },\r\n    emphasis: {\r\n      scale: true,\r\n      lineStyle: {\r\n        width: 'bolder'\r\n      }\r\n    },\r\n    // areaStyle: {\r\n    // origin of areaStyle. Valid values:\r\n    // `'auto'/null/undefined`: from axisLine to data\r\n    // `'start'`: from min to data\r\n    // `'end'`: from data to max\r\n    // origin: 'auto'\r\n    // },\r\n    // false, 'start', 'end', 'middle'\r\n    step: false,\r\n    // Disabled if step is true\r\n    smooth: false,\r\n    smoothMonotone: null,\r\n    symbol: 'emptyCircle',\r\n    symbolSize: 4,\r\n    symbolRotate: null,\r\n    showSymbol: true,\r\n    // `false`: follow the label interval strategy.\r\n    // `true`: show all symbols.\r\n    // `'auto'`: If possible, show all symbols, otherwise\r\n    //           follow the label interval strategy.\r\n    showAllSymbol: 'auto',\r\n    // Whether to connect break point.\r\n    connectNulls: false,\r\n    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum', 'lttb'.\r\n    sampling: 'none',\r\n    animationEasing: 'linear',\r\n    // Disable progressive\r\n    progressive: 0,\r\n    hoverLayerThreshold: Infinity,\r\n    universalTransition: {\r\n      divideShape: 'clone'\r\n    },\r\n    triggerLineEvent: false\r\n  };\r\n  return LineSeriesModel;\r\n}(SeriesModel);\r\n\r\nexport default LineSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { retrieveRawValue } from '../../data/helper/dataProvider';\r\nimport { isArray } from 'zrender/lib/core/util';\r\n/**\r\n * @return label string. Not null/undefined\r\n */\r\n\r\nexport function getDefaultLabel(data, dataIndex) {\r\n  var labelDims = data.mapDimensionsAll('defaultedLabel');\r\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\r\n\r\n  if (len === 1) {\r\n    var rawVal = retrieveRawValue(data, dataIndex, labelDims[0]);\r\n    return rawVal != null ? rawVal + '' : null;\r\n  } else if (len) {\r\n    var vals = [];\r\n\r\n    for (var i = 0; i < labelDims.length; i++) {\r\n      vals.push(retrieveRawValue(data, dataIndex, labelDims[i]));\r\n    }\r\n\r\n    return vals.join(' ');\r\n  }\r\n}\r\nexport function getDefaultInterpolatedLabel(data, interpolatedValue) {\r\n  var labelDims = data.mapDimensionsAll('defaultedLabel');\r\n\r\n  if (!isArray(interpolatedValue)) {\r\n    return interpolatedValue + '';\r\n  }\r\n\r\n  var vals = [];\r\n\r\n  for (var i = 0; i < labelDims.length; i++) {\r\n    var dimIndex = data.getDimensionIndex(labelDims[i]);\r\n\r\n    if (dimIndex >= 0) {\r\n      vals.push(interpolatedValue[dimIndex]);\r\n    }\r\n  }\r\n\r\n  return vals.join(' ');\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport { createSymbol, normalizeSymbolOffset, normalizeSymbolSize } from '../../util/symbol';\r\nimport * as graphic from '../../util/graphic';\r\nimport { getECData } from '../../util/innerStore';\r\nimport { enterEmphasis, leaveEmphasis, enableHoverEmphasis } from '../../util/states';\r\nimport { getDefaultLabel } from './labelHelper';\r\nimport { extend } from 'zrender/lib/core/util';\r\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle';\r\nimport ZRImage from 'zrender/lib/graphic/Image';\r\nimport { saveOldStyle } from '../../animation/basicTrasition';\r\n\r\nvar Symbol =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(Symbol, _super);\r\n\r\n  function Symbol(data, idx, seriesScope, opts) {\r\n    var _this = _super.call(this) || this;\r\n\r\n    _this.updateData(data, idx, seriesScope, opts);\r\n\r\n    return _this;\r\n  }\r\n\r\n  Symbol.prototype._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\r\n    // Remove paths created before\r\n    this.removeAll(); // let symbolPath = createSymbol(\r\n    //     symbolType, -0.5, -0.5, 1, 1, color\r\n    // );\r\n    // If width/height are set too small (e.g., set to 1) on ios10\r\n    // and macOS Sierra, a circle stroke become a rect, no matter what\r\n    // the scale is set. So we set width/height as 2. See #4150.\r\n\r\n    var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, null, keepAspect);\r\n    symbolPath.attr({\r\n      z2: 100,\r\n      culling: true,\r\n      scaleX: symbolSize[0] / 2,\r\n      scaleY: symbolSize[1] / 2\r\n    }); // Rewrite drift method\r\n\r\n    symbolPath.drift = driftSymbol;\r\n    this._symbolType = symbolType;\r\n    this.add(symbolPath);\r\n  };\r\n  /**\r\n   * Stop animation\r\n   * @param {boolean} toLastFrame\r\n   */\r\n\r\n\r\n  Symbol.prototype.stopSymbolAnimation = function (toLastFrame) {\r\n    this.childAt(0).stopAnimation(null, toLastFrame);\r\n  };\r\n\r\n  Symbol.prototype.getSymbolType = function () {\r\n    return this._symbolType;\r\n  };\r\n  /**\r\n   * FIXME:\r\n   * Caution: This method breaks the encapsulation of this module,\r\n   * but it indeed brings convenience. So do not use the method\r\n   * unless you detailedly know all the implements of `Symbol`,\r\n   * especially animation.\r\n   *\r\n   * Get symbol path element.\r\n   */\r\n\r\n\r\n  Symbol.prototype.getSymbolPath = function () {\r\n    return this.childAt(0);\r\n  };\r\n  /**\r\n   * Highlight symbol\r\n   */\r\n\r\n\r\n  Symbol.prototype.highlight = function () {\r\n    enterEmphasis(this.childAt(0));\r\n  };\r\n  /**\r\n   * Downplay symbol\r\n   */\r\n\r\n\r\n  Symbol.prototype.downplay = function () {\r\n    leaveEmphasis(this.childAt(0));\r\n  };\r\n  /**\r\n   * @param {number} zlevel\r\n   * @param {number} z\r\n   */\r\n\r\n\r\n  Symbol.prototype.setZ = function (zlevel, z) {\r\n    var symbolPath = this.childAt(0);\r\n    symbolPath.zlevel = zlevel;\r\n    symbolPath.z = z;\r\n  };\r\n\r\n  Symbol.prototype.setDraggable = function (draggable) {\r\n    var symbolPath = this.childAt(0);\r\n    symbolPath.draggable = draggable;\r\n    symbolPath.cursor = draggable ? 'move' : symbolPath.cursor;\r\n  };\r\n  /**\r\n   * Update symbol properties\r\n   */\r\n\r\n\r\n  Symbol.prototype.updateData = function (data, idx, seriesScope, opts) {\r\n    this.silent = false;\r\n    var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\r\n    var seriesModel = data.hostModel;\r\n    var symbolSize = Symbol.getSymbolSize(data, idx);\r\n    var isInit = symbolType !== this._symbolType;\r\n    var disableAnimation = opts && opts.disableAnimation;\r\n\r\n    if (isInit) {\r\n      var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\r\n\r\n      this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\r\n    } else {\r\n      var symbolPath = this.childAt(0);\r\n      symbolPath.silent = false;\r\n      var target = {\r\n        scaleX: symbolSize[0] / 2,\r\n        scaleY: symbolSize[1] / 2\r\n      };\r\n      disableAnimation ? symbolPath.attr(target) : graphic.updateProps(symbolPath, target, seriesModel, idx);\r\n      saveOldStyle(symbolPath);\r\n    }\r\n\r\n    this._updateCommon(data, idx, symbolSize, seriesScope, opts);\r\n\r\n    if (isInit) {\r\n      var symbolPath = this.childAt(0);\r\n\r\n      if (!disableAnimation) {\r\n        var target = {\r\n          scaleX: this._sizeX,\r\n          scaleY: this._sizeY,\r\n          style: {\r\n            // Always fadeIn. Because it has fadeOut animation when symbol is removed..\r\n            opacity: symbolPath.style.opacity\r\n          }\r\n        };\r\n        symbolPath.scaleX = symbolPath.scaleY = 0;\r\n        symbolPath.style.opacity = 0;\r\n        graphic.initProps(symbolPath, target, seriesModel, idx);\r\n      }\r\n    }\r\n\r\n    if (disableAnimation) {\r\n      // Must stop remove animation manually if don't call initProps or updateProps.\r\n      this.childAt(0).stopAnimation('remove');\r\n    }\r\n\r\n    this._seriesModel = seriesModel;\r\n  };\r\n\r\n  Symbol.prototype._updateCommon = function (data, idx, symbolSize, seriesScope, opts) {\r\n    var symbolPath = this.childAt(0);\r\n    var seriesModel = data.hostModel;\r\n    var emphasisItemStyle;\r\n    var blurItemStyle;\r\n    var selectItemStyle;\r\n    var focus;\r\n    var blurScope;\r\n    var labelStatesModels;\r\n    var hoverScale;\r\n    var cursorStyle;\r\n\r\n    if (seriesScope) {\r\n      emphasisItemStyle = seriesScope.emphasisItemStyle;\r\n      blurItemStyle = seriesScope.blurItemStyle;\r\n      selectItemStyle = seriesScope.selectItemStyle;\r\n      focus = seriesScope.focus;\r\n      blurScope = seriesScope.blurScope;\r\n      labelStatesModels = seriesScope.labelStatesModels;\r\n      hoverScale = seriesScope.hoverScale;\r\n      cursorStyle = seriesScope.cursorStyle;\r\n    }\r\n\r\n    if (!seriesScope || data.hasItemOption) {\r\n      var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx);\r\n      var emphasisModel = itemModel.getModel('emphasis');\r\n      emphasisItemStyle = emphasisModel.getModel('itemStyle').getItemStyle();\r\n      selectItemStyle = itemModel.getModel(['select', 'itemStyle']).getItemStyle();\r\n      blurItemStyle = itemModel.getModel(['blur', 'itemStyle']).getItemStyle();\r\n      focus = emphasisModel.get('focus');\r\n      blurScope = emphasisModel.get('blurScope');\r\n      labelStatesModels = getLabelStatesModels(itemModel);\r\n      hoverScale = emphasisModel.getShallow('scale');\r\n      cursorStyle = itemModel.getShallow('cursor');\r\n    }\r\n\r\n    var symbolRotate = data.getItemVisual(idx, 'symbolRotate');\r\n    symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\r\n    var symbolOffset = normalizeSymbolOffset(data.getItemVisual(idx, 'symbolOffset'), symbolSize);\r\n\r\n    if (symbolOffset) {\r\n      symbolPath.x = symbolOffset[0];\r\n      symbolPath.y = symbolOffset[1];\r\n    }\r\n\r\n    cursorStyle && symbolPath.attr('cursor', cursorStyle);\r\n    var symbolStyle = data.getItemVisual(idx, 'style');\r\n    var visualColor = symbolStyle.fill;\r\n\r\n    if (symbolPath instanceof ZRImage) {\r\n      var pathStyle = symbolPath.style;\r\n      symbolPath.useStyle(extend({\r\n        // TODO other properties like x, y ?\r\n        image: pathStyle.image,\r\n        x: pathStyle.x,\r\n        y: pathStyle.y,\r\n        width: pathStyle.width,\r\n        height: pathStyle.height\r\n      }, symbolStyle));\r\n    } else {\r\n      if (symbolPath.__isEmptyBrush) {\r\n        // fill and stroke will be swapped if it's empty.\r\n        // So we cloned a new style to avoid it affecting the original style in visual storage.\r\n        // TODO Better implementation. No empty logic!\r\n        symbolPath.useStyle(extend({}, symbolStyle));\r\n      } else {\r\n        symbolPath.useStyle(symbolStyle);\r\n      } // Disable decal because symbol scale will been applied on the decal.\r\n\r\n\r\n      symbolPath.style.decal = null;\r\n      symbolPath.setColor(visualColor, opts && opts.symbolInnerColor);\r\n      symbolPath.style.strokeNoScale = true;\r\n    }\r\n\r\n    var liftZ = data.getItemVisual(idx, 'liftZ');\r\n    var z2Origin = this._z2;\r\n\r\n    if (liftZ != null) {\r\n      if (z2Origin == null) {\r\n        this._z2 = symbolPath.z2;\r\n        symbolPath.z2 += liftZ;\r\n      }\r\n    } else if (z2Origin != null) {\r\n      symbolPath.z2 = z2Origin;\r\n      this._z2 = null;\r\n    }\r\n\r\n    var useNameLabel = opts && opts.useNameLabel;\r\n    setLabelStyle(symbolPath, labelStatesModels, {\r\n      labelFetcher: seriesModel,\r\n      labelDataIndex: idx,\r\n      defaultText: getLabelDefaultText,\r\n      inheritColor: visualColor,\r\n      defaultOpacity: symbolStyle.opacity\r\n    }); // Do not execute util needed.\r\n\r\n    function getLabelDefaultText(idx) {\r\n      return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\r\n    }\r\n\r\n    this._sizeX = symbolSize[0] / 2;\r\n    this._sizeY = symbolSize[1] / 2;\r\n    var emphasisState = symbolPath.ensureState('emphasis');\r\n    emphasisState.style = emphasisItemStyle;\r\n    symbolPath.ensureState('select').style = selectItemStyle;\r\n    symbolPath.ensureState('blur').style = blurItemStyle;\r\n\r\n    if (hoverScale) {\r\n      var scaleRatio = Math.max(1.1, 3 / this._sizeY);\r\n      emphasisState.scaleX = this._sizeX * scaleRatio;\r\n      emphasisState.scaleY = this._sizeY * scaleRatio;\r\n    }\r\n\r\n    this.setSymbolScale(1);\r\n    enableHoverEmphasis(this, focus, blurScope);\r\n  };\r\n\r\n  Symbol.prototype.setSymbolScale = function (scale) {\r\n    this.scaleX = this.scaleY = scale;\r\n  };\r\n\r\n  Symbol.prototype.fadeOut = function (cb, opt) {\r\n    var symbolPath = this.childAt(0);\r\n    var seriesModel = this._seriesModel;\r\n    var dataIndex = getECData(this).dataIndex;\r\n    var animationOpt = opt && opt.animation; // Avoid mistaken hover when fading out\r\n\r\n    this.silent = symbolPath.silent = true; // Not show text when animating\r\n\r\n    if (opt && opt.fadeLabel) {\r\n      var textContent = symbolPath.getTextContent();\r\n\r\n      if (textContent) {\r\n        graphic.removeElement(textContent, {\r\n          style: {\r\n            opacity: 0\r\n          }\r\n        }, seriesModel, {\r\n          dataIndex: dataIndex,\r\n          removeOpt: animationOpt,\r\n          cb: function () {\r\n            symbolPath.removeTextContent();\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      symbolPath.removeTextContent();\r\n    }\r\n\r\n    graphic.removeElement(symbolPath, {\r\n      style: {\r\n        opacity: 0\r\n      },\r\n      scaleX: 0,\r\n      scaleY: 0\r\n    }, seriesModel, {\r\n      dataIndex: dataIndex,\r\n      cb: cb,\r\n      removeOpt: animationOpt\r\n    });\r\n  };\r\n\r\n  Symbol.getSymbolSize = function (data, idx) {\r\n    return normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\r\n  };\r\n\r\n  return Symbol;\r\n}(graphic.Group);\r\n\r\nfunction driftSymbol(dx, dy) {\r\n  this.parent.drift(dx, dy);\r\n}\r\n\r\nexport default Symbol;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as graphic from '../../util/graphic';\r\nimport SymbolClz from './Symbol';\r\nimport { isObject } from 'zrender/lib/core/util';\r\nimport { getLabelStatesModels } from '../../label/labelStyle';\r\n\r\nfunction symbolNeedsDraw(data, point, idx, opt) {\r\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\r\n  // the symbol element shape. We use the same clip shape here as\r\n  // the line clip.\r\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\r\n}\r\n\r\nfunction normalizeUpdateOpt(opt) {\r\n  if (opt != null && !isObject(opt)) {\r\n    opt = {\r\n      isIgnore: opt\r\n    };\r\n  }\r\n\r\n  return opt || {};\r\n}\r\n\r\nfunction makeSeriesScope(data) {\r\n  var seriesModel = data.hostModel;\r\n  var emphasisModel = seriesModel.getModel('emphasis');\r\n  return {\r\n    emphasisItemStyle: emphasisModel.getModel('itemStyle').getItemStyle(),\r\n    blurItemStyle: seriesModel.getModel(['blur', 'itemStyle']).getItemStyle(),\r\n    selectItemStyle: seriesModel.getModel(['select', 'itemStyle']).getItemStyle(),\r\n    focus: emphasisModel.get('focus'),\r\n    blurScope: emphasisModel.get('blurScope'),\r\n    hoverScale: emphasisModel.get('scale'),\r\n    labelStatesModels: getLabelStatesModels(seriesModel),\r\n    cursorStyle: seriesModel.get('cursor')\r\n  };\r\n}\r\n\r\nvar SymbolDraw =\r\n/** @class */\r\nfunction () {\r\n  function SymbolDraw(SymbolCtor) {\r\n    this.group = new graphic.Group();\r\n    this._SymbolCtor = SymbolCtor || SymbolClz;\r\n  }\r\n  /**\r\n   * Update symbols draw by new data\r\n   */\r\n\r\n\r\n  SymbolDraw.prototype.updateData = function (data, opt) {\r\n    opt = normalizeUpdateOpt(opt);\r\n    var group = this.group;\r\n    var seriesModel = data.hostModel;\r\n    var oldData = this._data;\r\n    var SymbolCtor = this._SymbolCtor;\r\n    var disableAnimation = opt.disableAnimation;\r\n    var seriesScope = makeSeriesScope(data);\r\n    var symbolUpdateOpt = {\r\n      disableAnimation: disableAnimation\r\n    };\r\n\r\n    var getSymbolPoint = opt.getSymbolPoint || function (idx) {\r\n      return data.getItemLayout(idx);\r\n    }; // There is no oldLineData only when first rendering or switching from\r\n    // stream mode to normal mode, where previous elements should be removed.\r\n\r\n\r\n    if (!oldData) {\r\n      group.removeAll();\r\n    }\r\n\r\n    data.diff(oldData).add(function (newIdx) {\r\n      var point = getSymbolPoint(newIdx);\r\n\r\n      if (symbolNeedsDraw(data, point, newIdx, opt)) {\r\n        var symbolEl = new SymbolCtor(data, newIdx, seriesScope, symbolUpdateOpt);\r\n        symbolEl.setPosition(point);\r\n        data.setItemGraphicEl(newIdx, symbolEl);\r\n        group.add(symbolEl);\r\n      }\r\n    }).update(function (newIdx, oldIdx) {\r\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\r\n      var point = getSymbolPoint(newIdx);\r\n\r\n      if (!symbolNeedsDraw(data, point, newIdx, opt)) {\r\n        group.remove(symbolEl);\r\n        return;\r\n      }\r\n\r\n      var newSymbolType = data.getItemVisual(newIdx, 'symbol') || 'circle';\r\n      var oldSymbolType = symbolEl && symbolEl.getSymbolType && symbolEl.getSymbolType();\r\n\r\n      if (!symbolEl // Create a new if symbol type changed.\r\n      || oldSymbolType && oldSymbolType !== newSymbolType) {\r\n        group.remove(symbolEl);\r\n        symbolEl = new SymbolCtor(data, newIdx, seriesScope, symbolUpdateOpt);\r\n        symbolEl.setPosition(point);\r\n      } else {\r\n        symbolEl.updateData(data, newIdx, seriesScope, symbolUpdateOpt);\r\n        var target = {\r\n          x: point[0],\r\n          y: point[1]\r\n        };\r\n        disableAnimation ? symbolEl.attr(target) : graphic.updateProps(symbolEl, target, seriesModel);\r\n      } // Add back\r\n\r\n\r\n      group.add(symbolEl);\r\n      data.setItemGraphicEl(newIdx, symbolEl);\r\n    }).remove(function (oldIdx) {\r\n      var el = oldData.getItemGraphicEl(oldIdx);\r\n      el && el.fadeOut(function () {\r\n        group.remove(el);\r\n      });\r\n    }).execute();\r\n    this._getSymbolPoint = getSymbolPoint;\r\n    this._data = data;\r\n  };\r\n\r\n  ;\r\n\r\n  SymbolDraw.prototype.isPersistent = function () {\r\n    return true;\r\n  };\r\n\r\n  ;\r\n\r\n  SymbolDraw.prototype.updateLayout = function () {\r\n    var _this = this;\r\n\r\n    var data = this._data;\r\n\r\n    if (data) {\r\n      // Not use animation\r\n      data.eachItemGraphicEl(function (el, idx) {\r\n        var point = _this._getSymbolPoint(idx);\r\n\r\n        el.setPosition(point);\r\n        el.markRedraw();\r\n      });\r\n    }\r\n  };\r\n\r\n  ;\r\n\r\n  SymbolDraw.prototype.incrementalPrepareUpdate = function (data) {\r\n    this._seriesScope = makeSeriesScope(data);\r\n    this._data = null;\r\n    this.group.removeAll();\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Update symbols draw by new data\r\n   */\r\n\r\n  SymbolDraw.prototype.incrementalUpdate = function (taskParams, data, opt) {\r\n    opt = normalizeUpdateOpt(opt);\r\n\r\n    function updateIncrementalAndHover(el) {\r\n      if (!el.isGroup) {\r\n        el.incremental = true;\r\n        el.ensureState('emphasis').hoverLayer = true;\r\n      }\r\n    }\r\n\r\n    for (var idx = taskParams.start; idx < taskParams.end; idx++) {\r\n      var point = data.getItemLayout(idx);\r\n\r\n      if (symbolNeedsDraw(data, point, idx, opt)) {\r\n        var el = new this._SymbolCtor(data, idx, this._seriesScope);\r\n        el.traverse(updateIncrementalAndHover);\r\n        el.setPosition(point);\r\n        this.group.add(el);\r\n        data.setItemGraphicEl(idx, el);\r\n      }\r\n    }\r\n  };\r\n\r\n  ;\r\n\r\n  SymbolDraw.prototype.remove = function (enableAnimation) {\r\n    var group = this.group;\r\n    var data = this._data; // Incremental model do not have this._data.\r\n\r\n    if (data && enableAnimation) {\r\n      data.eachItemGraphicEl(function (el) {\r\n        el.fadeOut(function () {\r\n          group.remove(el);\r\n        });\r\n      });\r\n    } else {\r\n      group.removeAll();\r\n    }\r\n  };\r\n\r\n  ;\r\n  return SymbolDraw;\r\n}();\r\n\r\nexport default SymbolDraw;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { isDimensionStacked } from '../../data/helper/dataStackHelper';\r\nimport { map } from 'zrender/lib/core/util';\r\nexport function prepareDataCoordInfo(coordSys, data, valueOrigin) {\r\n  var baseAxis = coordSys.getBaseAxis();\r\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\r\n  var valueStart = getValueStart(valueAxis, valueOrigin);\r\n  var baseAxisDim = baseAxis.dim;\r\n  var valueAxisDim = valueAxis.dim;\r\n  var valueDim = data.mapDimension(valueAxisDim);\r\n  var baseDim = data.mapDimension(baseAxisDim);\r\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\r\n  var dims = map(coordSys.dimensions, function (coordDim) {\r\n    return data.mapDimension(coordDim);\r\n  });\r\n  var stacked = false;\r\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\r\n\r\n  if (isDimensionStacked(data, dims[0]\r\n  /*, dims[1]*/\r\n  )) {\r\n    // jshint ignore:line\r\n    stacked = true;\r\n    dims[0] = stackResultDim;\r\n  }\r\n\r\n  if (isDimensionStacked(data, dims[1]\r\n  /*, dims[0]*/\r\n  )) {\r\n    // jshint ignore:line\r\n    stacked = true;\r\n    dims[1] = stackResultDim;\r\n  }\r\n\r\n  return {\r\n    dataDimsForPoint: dims,\r\n    valueStart: valueStart,\r\n    valueAxisDim: valueAxisDim,\r\n    baseAxisDim: baseAxisDim,\r\n    stacked: !!stacked,\r\n    valueDim: valueDim,\r\n    baseDim: baseDim,\r\n    baseDataOffset: baseDataOffset,\r\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\r\n  };\r\n}\r\n\r\nfunction getValueStart(valueAxis, valueOrigin) {\r\n  var valueStart = 0;\r\n  var extent = valueAxis.scale.getExtent();\r\n\r\n  if (valueOrigin === 'start') {\r\n    valueStart = extent[0];\r\n  } else if (valueOrigin === 'end') {\r\n    valueStart = extent[1];\r\n  } // auto\r\n  else {\r\n      // Both positive\r\n      if (extent[0] > 0) {\r\n        valueStart = extent[0];\r\n      } // Both negative\r\n      else if (extent[1] < 0) {\r\n          valueStart = extent[1];\r\n        } // If is one positive, and one negative, onZero shall be true\r\n\r\n    }\r\n\r\n  return valueStart;\r\n}\r\n\r\nexport function getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\r\n  var value = NaN;\r\n\r\n  if (dataCoordInfo.stacked) {\r\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\r\n  }\r\n\r\n  if (isNaN(value)) {\r\n    value = dataCoordInfo.valueStart;\r\n  }\r\n\r\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\r\n  var stackedData = [];\r\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\r\n  stackedData[1 - baseDataOffset] = value;\r\n  return coordSys.dataToPoint(stackedData);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { isArray } from 'zrender/lib/core/util';\r\n/* global Float32Array */\r\n\r\nvar supportFloat32Array = typeof Float32Array !== 'undefined';\r\nvar Float32ArrayCtor = !supportFloat32Array ? Array : Float32Array;\r\nexport function createFloat32Array(arg) {\r\n  if (isArray(arg)) {\r\n    // Return self directly if don't support TypedArray.\r\n    return supportFloat32Array ? new Float32Array(arg) : arg;\r\n  } // Else is number\r\n\r\n\r\n  return new Float32ArrayCtor(arg);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { prepareDataCoordInfo, getStackedOnPoint } from './helper';\r\nimport { createFloat32Array } from '../../util/vendor';\r\n\r\nfunction diffData(oldData, newData) {\r\n  var diffResult = [];\r\n  newData.diff(oldData).add(function (idx) {\r\n    diffResult.push({\r\n      cmd: '+',\r\n      idx: idx\r\n    });\r\n  }).update(function (newIdx, oldIdx) {\r\n    diffResult.push({\r\n      cmd: '=',\r\n      idx: oldIdx,\r\n      idx1: newIdx\r\n    });\r\n  }).remove(function (idx) {\r\n    diffResult.push({\r\n      cmd: '-',\r\n      idx: idx\r\n    });\r\n  }).execute();\r\n  return diffResult;\r\n}\r\n\r\nexport default function lineAnimationDiff(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\r\n  var diff = diffData(oldData, newData); // let newIdList = newData.mapArray(newData.getId);\r\n  // let oldIdList = oldData.mapArray(oldData.getId);\r\n  // convertToIntId(newIdList, oldIdList);\r\n  // // FIXME One data ?\r\n  // diff = arrayDiff(oldIdList, newIdList);\r\n\r\n  var currPoints = [];\r\n  var nextPoints = []; // Points for stacking base line\r\n\r\n  var currStackedPoints = [];\r\n  var nextStackedPoints = [];\r\n  var status = [];\r\n  var sortedIndices = [];\r\n  var rawIndices = [];\r\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin); // const oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\r\n\r\n  var oldPoints = oldData.getLayout('points') || [];\r\n  var newPoints = newData.getLayout('points') || [];\r\n\r\n  for (var i = 0; i < diff.length; i++) {\r\n    var diffItem = diff[i];\r\n    var pointAdded = true;\r\n    var oldIdx2 = void 0;\r\n    var newIdx2 = void 0; // FIXME, animation is not so perfect when dataZoom window moves fast\r\n    // Which is in case remvoing or add more than one data in the tail or head\r\n\r\n    switch (diffItem.cmd) {\r\n      case '=':\r\n        oldIdx2 = diffItem.idx * 2;\r\n        newIdx2 = diffItem.idx1 * 2;\r\n        var currentX = oldPoints[oldIdx2];\r\n        var currentY = oldPoints[oldIdx2 + 1];\r\n        var nextX = newPoints[newIdx2];\r\n        var nextY = newPoints[newIdx2 + 1]; // If previous data is NaN, use next point directly\r\n\r\n        if (isNaN(currentX) || isNaN(currentY)) {\r\n          currentX = nextX;\r\n          currentY = nextY;\r\n        }\r\n\r\n        currPoints.push(currentX, currentY);\r\n        nextPoints.push(nextX, nextY);\r\n        currStackedPoints.push(oldStackedOnPoints[oldIdx2], oldStackedOnPoints[oldIdx2 + 1]);\r\n        nextStackedPoints.push(newStackedOnPoints[newIdx2], newStackedOnPoints[newIdx2 + 1]);\r\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\r\n        break;\r\n\r\n      case '+':\r\n        var newIdx = diffItem.idx;\r\n        var newDataDimsForPoint = newDataOldCoordInfo.dataDimsForPoint;\r\n        var oldPt = oldCoordSys.dataToPoint([newData.get(newDataDimsForPoint[0], newIdx), newData.get(newDataDimsForPoint[1], newIdx)]);\r\n        newIdx2 = newIdx * 2;\r\n        currPoints.push(oldPt[0], oldPt[1]);\r\n        nextPoints.push(newPoints[newIdx2], newPoints[newIdx2 + 1]);\r\n        var stackedOnPoint = getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, newIdx);\r\n        currStackedPoints.push(stackedOnPoint[0], stackedOnPoint[1]);\r\n        nextStackedPoints.push(newStackedOnPoints[newIdx2], newStackedOnPoints[newIdx2 + 1]);\r\n        rawIndices.push(newData.getRawIndex(newIdx));\r\n        break;\r\n\r\n      case '-':\r\n        pointAdded = false;\r\n    } // Original indices\r\n\r\n\r\n    if (pointAdded) {\r\n      status.push(diffItem);\r\n      sortedIndices.push(sortedIndices.length);\r\n    }\r\n  } // Diff result may be crossed if all items are changed\r\n  // Sort by data index\r\n\r\n\r\n  sortedIndices.sort(function (a, b) {\r\n    return rawIndices[a] - rawIndices[b];\r\n  });\r\n  var len = currPoints.length;\r\n  var sortedCurrPoints = createFloat32Array(len);\r\n  var sortedNextPoints = createFloat32Array(len);\r\n  var sortedCurrStackedPoints = createFloat32Array(len);\r\n  var sortedNextStackedPoints = createFloat32Array(len);\r\n  var sortedStatus = [];\r\n\r\n  for (var i = 0; i < sortedIndices.length; i++) {\r\n    var idx = sortedIndices[i];\r\n    var i2 = i * 2;\r\n    var idx2 = idx * 2;\r\n    sortedCurrPoints[i2] = currPoints[idx2];\r\n    sortedCurrPoints[i2 + 1] = currPoints[idx2 + 1];\r\n    sortedNextPoints[i2] = nextPoints[idx2];\r\n    sortedNextPoints[i2 + 1] = nextPoints[idx2 + 1];\r\n    sortedCurrStackedPoints[i2] = currStackedPoints[idx2];\r\n    sortedCurrStackedPoints[i2 + 1] = currStackedPoints[idx2 + 1];\r\n    sortedNextStackedPoints[i2] = nextStackedPoints[idx2];\r\n    sortedNextStackedPoints[i2 + 1] = nextStackedPoints[idx2 + 1];\r\n    sortedStatus[i] = status[idx];\r\n  }\r\n\r\n  return {\r\n    current: sortedCurrPoints,\r\n    next: sortedNextPoints,\r\n    stackedOnCurrent: sortedCurrStackedPoints,\r\n    stackedOnNext: sortedNextStackedPoints,\r\n    status: sortedStatus\r\n  };\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\"; // Poly path support NaN point\r\n\r\nimport Path from 'zrender/lib/graphic/Path';\r\nimport PathProxy from 'zrender/lib/core/PathProxy';\r\nimport { cubicRootAt, cubicAt } from 'zrender/lib/core/curve';\r\nvar mathMin = Math.min;\r\nvar mathMax = Math.max;\r\n\r\nfunction isPointNull(x, y) {\r\n  return isNaN(x) || isNaN(y);\r\n}\r\n/**\r\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\r\n * situations. This should be used when points are non-monotone neither in x or\r\n * y dimension.\r\n */\r\n\r\n\r\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smooth, smoothMonotone, connectNulls) {\r\n  var prevX;\r\n  var prevY;\r\n  var cpx0;\r\n  var cpy0;\r\n  var cpx1;\r\n  var cpy1;\r\n  var idx = start;\r\n  var k = 0;\r\n\r\n  for (; k < segLen; k++) {\r\n    var x = points[idx * 2];\r\n    var y = points[idx * 2 + 1];\r\n\r\n    if (idx >= allLen || idx < 0) {\r\n      break;\r\n    }\r\n\r\n    if (isPointNull(x, y)) {\r\n      if (connectNulls) {\r\n        idx += dir;\r\n        continue;\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    if (idx === start) {\r\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](x, y);\r\n      cpx0 = x;\r\n      cpy0 = y;\r\n    } else {\r\n      var dx = x - prevX;\r\n      var dy = y - prevY; // Ignore tiny segment.\r\n\r\n      if (dx * dx + dy * dy < 0.5) {\r\n        idx += dir;\r\n        continue;\r\n      }\r\n\r\n      if (smooth > 0) {\r\n        var nextIdx = idx + dir;\r\n        var nextX = points[nextIdx * 2];\r\n        var nextY = points[nextIdx * 2 + 1]; // Ignore duplicate point\r\n\r\n        while (nextX === x && nextY === y && k < segLen) {\r\n          k++;\r\n          nextIdx += dir;\r\n          idx += dir;\r\n          nextX = points[nextIdx * 2];\r\n          nextY = points[nextIdx * 2 + 1];\r\n          x = points[idx * 2];\r\n          y = points[idx * 2 + 1];\r\n          dx = x - prevX;\r\n          dy = y - prevY;\r\n        }\r\n\r\n        var tmpK = k + 1;\r\n\r\n        if (connectNulls) {\r\n          // Find next point not null\r\n          while (isPointNull(nextX, nextY) && tmpK < segLen) {\r\n            tmpK++;\r\n            nextIdx += dir;\r\n            nextX = points[nextIdx * 2];\r\n            nextY = points[nextIdx * 2 + 1];\r\n          }\r\n        }\r\n\r\n        var ratioNextSeg = 0.5;\r\n        var vx = 0;\r\n        var vy = 0;\r\n        var nextCpx0 = void 0;\r\n        var nextCpy0 = void 0; // Is last point\r\n\r\n        if (tmpK >= segLen || isPointNull(nextX, nextY)) {\r\n          cpx1 = x;\r\n          cpy1 = y;\r\n        } else {\r\n          vx = nextX - prevX;\r\n          vy = nextY - prevY;\r\n          var dx0 = x - prevX;\r\n          var dx1 = nextX - x;\r\n          var dy0 = y - prevY;\r\n          var dy1 = nextY - y;\r\n          var lenPrevSeg = void 0;\r\n          var lenNextSeg = void 0;\r\n\r\n          if (smoothMonotone === 'x') {\r\n            lenPrevSeg = Math.abs(dx0);\r\n            lenNextSeg = Math.abs(dx1);\r\n            cpx1 = x - lenPrevSeg * smooth;\r\n            cpy1 = y;\r\n            nextCpx0 = x + lenPrevSeg * smooth;\r\n            nextCpy0 = y;\r\n          } else if (smoothMonotone === 'y') {\r\n            lenPrevSeg = Math.abs(dy0);\r\n            lenNextSeg = Math.abs(dy1);\r\n            cpx1 = x;\r\n            cpy1 = y - lenPrevSeg * smooth;\r\n            nextCpx0 = x;\r\n            nextCpy0 = y + lenPrevSeg * smooth;\r\n          } else {\r\n            lenPrevSeg = Math.sqrt(dx0 * dx0 + dy0 * dy0);\r\n            lenNextSeg = Math.sqrt(dx1 * dx1 + dy1 * dy1); // Use ratio of seg length\r\n\r\n            ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\r\n            cpx1 = x - vx * smooth * (1 - ratioNextSeg);\r\n            cpy1 = y - vy * smooth * (1 - ratioNextSeg); // cp0 of next segment\r\n\r\n            nextCpx0 = x + vx * smooth * ratioNextSeg;\r\n            nextCpy0 = y + vy * smooth * ratioNextSeg; // Smooth constraint between point and next point.\r\n            // Avoid exceeding extreme after smoothing.\r\n\r\n            nextCpx0 = mathMin(nextCpx0, mathMax(nextX, x));\r\n            nextCpy0 = mathMin(nextCpy0, mathMax(nextY, y));\r\n            nextCpx0 = mathMax(nextCpx0, mathMin(nextX, x));\r\n            nextCpy0 = mathMax(nextCpy0, mathMin(nextY, y)); // Reclaculate cp1 based on the adjusted cp0 of next seg.\r\n\r\n            vx = nextCpx0 - x;\r\n            vy = nextCpy0 - y;\r\n            cpx1 = x - vx * lenPrevSeg / lenNextSeg;\r\n            cpy1 = y - vy * lenPrevSeg / lenNextSeg; // Smooth constraint between point and prev point.\r\n            // Avoid exceeding extreme after smoothing.\r\n\r\n            cpx1 = mathMin(cpx1, mathMax(prevX, x));\r\n            cpy1 = mathMin(cpy1, mathMax(prevY, y));\r\n            cpx1 = mathMax(cpx1, mathMin(prevX, x));\r\n            cpy1 = mathMax(cpy1, mathMin(prevY, y)); // Adjust next cp0 again.\r\n\r\n            vx = x - cpx1;\r\n            vy = y - cpy1;\r\n            nextCpx0 = x + vx * lenNextSeg / lenPrevSeg;\r\n            nextCpy0 = y + vy * lenNextSeg / lenPrevSeg;\r\n          }\r\n        }\r\n\r\n        ctx.bezierCurveTo(cpx0, cpy0, cpx1, cpy1, x, y);\r\n        cpx0 = nextCpx0;\r\n        cpy0 = nextCpy0;\r\n      } else {\r\n        ctx.lineTo(x, y);\r\n      }\r\n    }\r\n\r\n    prevX = x;\r\n    prevY = y;\r\n    idx += dir;\r\n  }\r\n\r\n  return k;\r\n}\r\n\r\nvar ECPolylineShape =\r\n/** @class */\r\nfunction () {\r\n  function ECPolylineShape() {\r\n    this.smooth = 0;\r\n    this.smoothConstraint = true;\r\n  }\r\n\r\n  return ECPolylineShape;\r\n}();\r\n\r\nvar ECPolyline =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ECPolyline, _super);\r\n\r\n  function ECPolyline(opts) {\r\n    var _this = _super.call(this, opts) || this;\r\n\r\n    _this.type = 'ec-polyline';\r\n    return _this;\r\n  }\r\n\r\n  ECPolyline.prototype.getDefaultStyle = function () {\r\n    return {\r\n      stroke: '#000',\r\n      fill: null\r\n    };\r\n  };\r\n\r\n  ECPolyline.prototype.getDefaultShape = function () {\r\n    return new ECPolylineShape();\r\n  };\r\n\r\n  ECPolyline.prototype.buildPath = function (ctx, shape) {\r\n    var points = shape.points;\r\n    var i = 0;\r\n    var len = points.length / 2; // const result = getBoundingBox(points, shape.smoothConstraint);\r\n\r\n    if (shape.connectNulls) {\r\n      // Must remove first and last null values avoid draw error in polygon\r\n      for (; len > 0; len--) {\r\n        if (!isPointNull(points[len * 2 - 2], points[len * 2 - 1])) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      for (; i < len; i++) {\r\n        if (!isPointNull(points[i * 2], points[i * 2 + 1])) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    while (i < len) {\r\n      i += drawSegment(ctx, points, i, len, len, 1, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\r\n    }\r\n  };\r\n\r\n  ECPolyline.prototype.getPointOn = function (xOrY, dim) {\r\n    if (!this.path) {\r\n      this.createPathProxy();\r\n      this.buildPath(this.path, this.shape);\r\n    }\r\n\r\n    var path = this.path;\r\n    var data = path.data;\r\n    var CMD = PathProxy.CMD;\r\n    var x0;\r\n    var y0;\r\n    var isDimX = dim === 'x';\r\n    var roots = [];\r\n\r\n    for (var i = 0; i < data.length;) {\r\n      var cmd = data[i++];\r\n      var x = void 0;\r\n      var y = void 0;\r\n      var x2 = void 0;\r\n      var y2 = void 0;\r\n      var x3 = void 0;\r\n      var y3 = void 0;\r\n      var t = void 0;\r\n\r\n      switch (cmd) {\r\n        case CMD.M:\r\n          x0 = data[i++];\r\n          y0 = data[i++];\r\n          break;\r\n\r\n        case CMD.L:\r\n          x = data[i++];\r\n          y = data[i++];\r\n          t = isDimX ? (xOrY - x0) / (x - x0) : (xOrY - y0) / (y - y0);\r\n\r\n          if (t <= 1 && t >= 0) {\r\n            var val = isDimX ? (y - y0) * t + y0 : (x - x0) * t + x0;\r\n            return isDimX ? [xOrY, val] : [val, xOrY];\r\n          }\r\n\r\n          x0 = x;\r\n          y0 = y;\r\n          break;\r\n\r\n        case CMD.C:\r\n          x = data[i++];\r\n          y = data[i++];\r\n          x2 = data[i++];\r\n          y2 = data[i++];\r\n          x3 = data[i++];\r\n          y3 = data[i++];\r\n          var nRoot = isDimX ? cubicRootAt(x0, x, x2, x3, xOrY, roots) : cubicRootAt(y0, y, y2, y3, xOrY, roots);\r\n\r\n          if (nRoot > 0) {\r\n            for (var i_1 = 0; i_1 < nRoot; i_1++) {\r\n              var t_1 = roots[i_1];\r\n\r\n              if (t_1 <= 1 && t_1 >= 0) {\r\n                var val = isDimX ? cubicAt(y0, y, y2, y3, t_1) : cubicAt(x0, x, x2, x3, t_1);\r\n                return isDimX ? [xOrY, val] : [val, xOrY];\r\n              }\r\n            }\r\n          }\r\n\r\n          x0 = x3;\r\n          y0 = y3;\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  return ECPolyline;\r\n}(Path);\r\n\r\nexport { ECPolyline };\r\n\r\nvar ECPolygonShape =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ECPolygonShape, _super);\r\n\r\n  function ECPolygonShape() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  return ECPolygonShape;\r\n}(ECPolylineShape);\r\n\r\nvar ECPolygon =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ECPolygon, _super);\r\n\r\n  function ECPolygon(opts) {\r\n    var _this = _super.call(this, opts) || this;\r\n\r\n    _this.type = 'ec-polygon';\r\n    return _this;\r\n  }\r\n\r\n  ECPolygon.prototype.getDefaultShape = function () {\r\n    return new ECPolygonShape();\r\n  };\r\n\r\n  ECPolygon.prototype.buildPath = function (ctx, shape) {\r\n    var points = shape.points;\r\n    var stackedOnPoints = shape.stackedOnPoints;\r\n    var i = 0;\r\n    var len = points.length / 2;\r\n    var smoothMonotone = shape.smoothMonotone;\r\n\r\n    if (shape.connectNulls) {\r\n      // Must remove first and last null values avoid draw error in polygon\r\n      for (; len > 0; len--) {\r\n        if (!isPointNull(points[len * 2 - 2], points[len * 2 - 1])) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      for (; i < len; i++) {\r\n        if (!isPointNull(points[i * 2], points[i * 2 + 1])) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    while (i < len) {\r\n      var k = drawSegment(ctx, points, i, len, len, 1, shape.smooth, smoothMonotone, shape.connectNulls);\r\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\r\n      i += k + 1;\r\n      ctx.closePath();\r\n    }\r\n  };\r\n\r\n  return ECPolygon;\r\n}(Path);\r\n\r\nexport { ECPolygon };", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as graphic from '../../util/graphic';\r\nimport { round } from '../../util/number';\r\n\r\nfunction createGridClipPath(cartesian, hasAnimation, seriesModel, done, during) {\r\n  var rect = cartesian.getArea();\r\n  var x = rect.x;\r\n  var y = rect.y;\r\n  var width = rect.width;\r\n  var height = rect.height;\r\n  var lineWidth = seriesModel.get(['lineStyle', 'width']) || 2; // Expand the clip path a bit to avoid the border is clipped and looks thinner\r\n\r\n  x -= lineWidth / 2;\r\n  y -= lineWidth / 2;\r\n  width += lineWidth;\r\n  height += lineWidth; // fix: https://github.com/apache/incubator-echarts/issues/11369\r\n\r\n  x = Math.floor(x);\r\n  width = Math.round(width);\r\n  var clipPath = new graphic.Rect({\r\n    shape: {\r\n      x: x,\r\n      y: y,\r\n      width: width,\r\n      height: height\r\n    }\r\n  });\r\n\r\n  if (hasAnimation) {\r\n    var baseAxis = cartesian.getBaseAxis();\r\n    var isHorizontal = baseAxis.isHorizontal();\r\n    var isAxisInversed = baseAxis.inverse;\r\n\r\n    if (isHorizontal) {\r\n      if (isAxisInversed) {\r\n        clipPath.shape.x += width;\r\n      }\r\n\r\n      clipPath.shape.width = 0;\r\n    } else {\r\n      if (!isAxisInversed) {\r\n        clipPath.shape.y += height;\r\n      }\r\n\r\n      clipPath.shape.height = 0;\r\n    }\r\n\r\n    var duringCb = typeof during === 'function' ? function (percent) {\r\n      during(percent, clipPath);\r\n    } : null;\r\n    graphic.initProps(clipPath, {\r\n      shape: {\r\n        width: width,\r\n        height: height,\r\n        x: x,\r\n        y: y\r\n      }\r\n    }, seriesModel, null, done, duringCb);\r\n  }\r\n\r\n  return clipPath;\r\n}\r\n\r\nfunction createPolarClipPath(polar, hasAnimation, seriesModel) {\r\n  var sectorArea = polar.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\r\n\r\n  var r0 = round(sectorArea.r0, 1);\r\n  var r = round(sectorArea.r, 1);\r\n  var clipPath = new graphic.Sector({\r\n    shape: {\r\n      cx: round(polar.cx, 1),\r\n      cy: round(polar.cy, 1),\r\n      r0: r0,\r\n      r: r,\r\n      startAngle: sectorArea.startAngle,\r\n      endAngle: sectorArea.endAngle,\r\n      clockwise: sectorArea.clockwise\r\n    }\r\n  });\r\n\r\n  if (hasAnimation) {\r\n    var isRadial = polar.getBaseAxis().dim === 'angle';\r\n\r\n    if (isRadial) {\r\n      clipPath.shape.endAngle = sectorArea.startAngle;\r\n    } else {\r\n      clipPath.shape.r = r0;\r\n    }\r\n\r\n    graphic.initProps(clipPath, {\r\n      shape: {\r\n        endAngle: sectorArea.endAngle,\r\n        r: r\r\n      }\r\n    }, seriesModel);\r\n  }\r\n\r\n  return clipPath;\r\n}\r\n\r\nfunction createClipPath(coordSys, hasAnimation, seriesModel, done, during) {\r\n  if (!coordSys) {\r\n    return null;\r\n  } else if (coordSys.type === 'polar') {\r\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\r\n  } else if (coordSys.type === 'cartesian2d') {\r\n    return createGridClipPath(coordSys, hasAnimation, seriesModel, done, during);\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport { createGridClipPath, createPolarClipPath, createClipPath };", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nexport function isCoordinateSystemType(coordSys, type) {\r\n  return coordSys.type === type;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\"; // FIXME step not support polar\r\n\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport SymbolDraw from '../helper/SymbolDraw';\r\nimport SymbolClz from '../helper/Symbol';\r\nimport lineAnimationDiff from './lineAnimationDiff';\r\nimport * as graphic from '../../util/graphic';\r\nimport * as modelUtil from '../../util/model';\r\nimport { ECPolyline, ECPolygon } from './poly';\r\nimport ChartView from '../../view/Chart';\r\nimport { prepareDataCoordInfo, getStackedOnPoint } from './helper';\r\nimport { createGridClipPath, createPolarClipPath } from '../helper/createClipPathFromCoordSys';\r\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem';\r\nimport { setStatesStylesFromModel, setStatesFlag, enableHoverEmphasis, SPECIAL_STATES } from '../../util/states';\r\nimport { setLabelStyle, getLabelStatesModels, labelInner } from '../../label/labelStyle';\r\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper';\r\nimport { getECData } from '../../util/innerStore';\r\nimport { createFloat32Array } from '../../util/vendor';\r\nimport { convertToColorString } from '../../util/format';\r\nimport { lerp } from 'zrender/lib/tool/color';\r\n\r\nfunction isPointsSame(points1, points2) {\r\n  if (points1.length !== points2.length) {\r\n    return;\r\n  }\r\n\r\n  for (var i = 0; i < points1.length; i++) {\r\n    if (points1[i] !== points2[i]) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction bboxFromPoints(points) {\r\n  var minX = Infinity;\r\n  var minY = Infinity;\r\n  var maxX = -Infinity;\r\n  var maxY = -Infinity;\r\n\r\n  for (var i = 0; i < points.length;) {\r\n    var x = points[i++];\r\n    var y = points[i++];\r\n\r\n    if (!isNaN(x)) {\r\n      minX = Math.min(x, minX);\r\n      maxX = Math.max(x, maxX);\r\n    }\r\n\r\n    if (!isNaN(y)) {\r\n      minY = Math.min(y, minY);\r\n      maxY = Math.max(y, maxY);\r\n    }\r\n  }\r\n\r\n  return [[minX, minY], [maxX, maxY]];\r\n}\r\n\r\nfunction getBoundingDiff(points1, points2) {\r\n  var _a = bboxFromPoints(points1),\r\n      min1 = _a[0],\r\n      max1 = _a[1];\r\n\r\n  var _b = bboxFromPoints(points2),\r\n      min2 = _b[0],\r\n      max2 = _b[1]; // Get a max value from each corner of two boundings.\r\n\r\n\r\n  return Math.max(Math.abs(min1[0] - min2[0]), Math.abs(min1[1] - min2[1]), Math.abs(max1[0] - max2[0]), Math.abs(max1[1] - max2[1]));\r\n}\r\n\r\nfunction getSmooth(smooth) {\r\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\r\n}\r\n\r\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\r\n  if (!dataCoordInfo.valueDim) {\r\n    return [];\r\n  }\r\n\r\n  var len = data.count();\r\n  var points = createFloat32Array(len * 2);\r\n\r\n  for (var idx = 0; idx < len; idx++) {\r\n    var pt = getStackedOnPoint(dataCoordInfo, coordSys, data, idx);\r\n    points[idx * 2] = pt[0];\r\n    points[idx * 2 + 1] = pt[1];\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\r\n  var baseAxis = coordSys.getBaseAxis();\r\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\r\n  var stepPoints = [];\r\n  var i = 0;\r\n  var stepPt = [];\r\n  var pt = [];\r\n  var nextPt = [];\r\n\r\n  for (; i < points.length - 2; i += 2) {\r\n    nextPt[0] = points[i + 2];\r\n    nextPt[1] = points[i + 3];\r\n    pt[0] = points[i];\r\n    pt[1] = points[i + 1];\r\n    stepPoints.push(pt[0], pt[1]);\r\n\r\n    switch (stepTurnAt) {\r\n      case 'end':\r\n        stepPt[baseIndex] = nextPt[baseIndex];\r\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\r\n        stepPoints.push(stepPt[0], stepPt[1]);\r\n        break;\r\n\r\n      case 'middle':\r\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\r\n        var stepPt2 = [];\r\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\r\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\r\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\r\n        stepPoints.push(stepPt[0], stepPt[1]);\r\n        stepPoints.push(stepPt2[0], stepPt2[1]);\r\n        break;\r\n\r\n      default:\r\n        // default is start\r\n        stepPt[baseIndex] = pt[baseIndex];\r\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\r\n        stepPoints.push(stepPt[0], stepPt[1]);\r\n    }\r\n  } // Last points\r\n\r\n\r\n  stepPoints.push(points[i++], points[i++]);\r\n  return stepPoints;\r\n}\r\n/**\r\n * Clip color stops to edge. Avoid creating too large gradients.\r\n * Which may lead to blurry when GPU acceleration is enabled. See #15680\r\n *\r\n * The stops has been sorted from small to large.\r\n */\r\n\r\n\r\nfunction clipColorStops(colorStops, maxSize) {\r\n  var newColorStops = [];\r\n  var len = colorStops.length; // coord will always < 0 in prevOutOfRangeColorStop.\r\n\r\n  var prevOutOfRangeColorStop;\r\n  var prevInRangeColorStop;\r\n\r\n  function lerpStop(stop0, stop1, clippedCoord) {\r\n    var coord0 = stop0.coord;\r\n    var p = (clippedCoord - coord0) / (stop1.coord - coord0);\r\n    var color = lerp(p, [stop0.color, stop1.color]);\r\n    return {\r\n      coord: clippedCoord,\r\n      color: color\r\n    };\r\n  }\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    var stop_1 = colorStops[i];\r\n    var coord = stop_1.coord;\r\n\r\n    if (coord < 0) {\r\n      prevOutOfRangeColorStop = stop_1;\r\n    } else if (coord > maxSize) {\r\n      if (prevInRangeColorStop) {\r\n        newColorStops.push(lerpStop(prevInRangeColorStop, stop_1, maxSize));\r\n      } else if (prevOutOfRangeColorStop) {\r\n        // If there are two stops and coord range is between these two stops\r\n        newColorStops.push(lerpStop(prevOutOfRangeColorStop, stop_1, 0), lerpStop(prevOutOfRangeColorStop, stop_1, maxSize));\r\n      } // All following stop will be out of range. So just ignore them.\r\n\r\n\r\n      break;\r\n    } else {\r\n      if (prevOutOfRangeColorStop) {\r\n        newColorStops.push(lerpStop(prevOutOfRangeColorStop, stop_1, 0)); // Reset\r\n\r\n        prevOutOfRangeColorStop = null;\r\n      }\r\n\r\n      newColorStops.push(stop_1);\r\n      prevInRangeColorStop = stop_1;\r\n    }\r\n  }\r\n\r\n  return newColorStops;\r\n}\r\n\r\nfunction getVisualGradient(data, coordSys, api) {\r\n  var visualMetaList = data.getVisual('visualMeta');\r\n\r\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\r\n    // When data.count() is 0, gradient range can not be calculated.\r\n    return;\r\n  }\r\n\r\n  if (coordSys.type !== 'cartesian2d') {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      console.warn('Visual map on line style is only supported on cartesian2d.');\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  var coordDim;\r\n  var visualMeta;\r\n\r\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\r\n    var dimInfo = data.getDimensionInfo(visualMetaList[i].dimension);\r\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\r\n\r\n    if (coordDim === 'x' || coordDim === 'y') {\r\n      visualMeta = visualMetaList[i];\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (!visualMeta) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      console.warn('Visual map on line style only support x or y dimension.');\r\n    }\r\n\r\n    return;\r\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\r\n  // the canvas spec prescribes that the color of the first stop and the last\r\n  // stop should be used. But if two stops are added at offset 0, in effect\r\n  // browsers use the color of the second stop to render area outside\r\n  // LinearGradient. So we can only infinitesimally extend area defined in\r\n  // LinearGradient to render `outerColors`.\r\n\r\n\r\n  var axis = coordSys.getAxis(coordDim); // dataToCoord mapping may not be linear, but must be monotonic.\r\n\r\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\r\n    // offset will be calculated later.\r\n    return {\r\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\r\n      color: stop.color\r\n    };\r\n  });\r\n  var stopLen = colorStops.length;\r\n  var outerColors = visualMeta.outerColors.slice();\r\n\r\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\r\n    colorStops.reverse();\r\n    outerColors.reverse();\r\n  }\r\n\r\n  var colorStopsInRange = clipColorStops(colorStops, coordDim === 'x' ? api.getWidth() : api.getHeight());\r\n  var inRangeStopLen = colorStopsInRange.length;\r\n\r\n  if (!inRangeStopLen && stopLen) {\r\n    // All stops are out of range. All will be the same color.\r\n    return colorStops[0].coord < 0 ? outerColors[1] ? outerColors[1] : colorStops[stopLen - 1].color : outerColors[0] ? outerColors[0] : colorStops[0].color;\r\n  }\r\n\r\n  var tinyExtent = 10; // Arbitrary value: 10px\r\n\r\n  var minCoord = colorStopsInRange[0].coord - tinyExtent;\r\n  var maxCoord = colorStopsInRange[inRangeStopLen - 1].coord + tinyExtent;\r\n  var coordSpan = maxCoord - minCoord;\r\n\r\n  if (coordSpan < 1e-3) {\r\n    return 'transparent';\r\n  }\r\n\r\n  zrUtil.each(colorStopsInRange, function (stop) {\r\n    stop.offset = (stop.coord - minCoord) / coordSpan;\r\n  });\r\n  colorStopsInRange.push({\r\n    // NOTE: inRangeStopLen may still be 0 if stoplen is zero.\r\n    offset: inRangeStopLen ? colorStopsInRange[inRangeStopLen - 1].offset : 0.5,\r\n    color: outerColors[1] || 'transparent'\r\n  });\r\n  colorStopsInRange.unshift({\r\n    offset: inRangeStopLen ? colorStopsInRange[0].offset : 0.5,\r\n    color: outerColors[0] || 'transparent'\r\n  });\r\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStopsInRange, true);\r\n  gradient[coordDim] = minCoord;\r\n  gradient[coordDim + '2'] = maxCoord;\r\n  return gradient;\r\n}\r\n\r\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\r\n  var showAllSymbol = seriesModel.get('showAllSymbol');\r\n  var isAuto = showAllSymbol === 'auto';\r\n\r\n  if (showAllSymbol && !isAuto) {\r\n    return;\r\n  }\r\n\r\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\r\n\r\n  if (!categoryAxis) {\r\n    return;\r\n  } // Note that category label interval strategy might bring some weird effect\r\n  // in some scenario: users may wonder why some of the symbols are not\r\n  // displayed. So we show all symbols as possible as we can.\r\n\r\n\r\n  if (isAuto // Simplify the logic, do not determine label overlap here.\r\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\r\n    return;\r\n  } // Otherwise follow the label interval strategy on category axis.\r\n\r\n\r\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\r\n  var labelMap = {};\r\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\r\n    var ordinalNumber = categoryAxis.scale.getRawOrdinalNumber(labelItem.tickValue);\r\n    labelMap[ordinalNumber] = 1;\r\n  });\r\n  return function (dataIndex) {\r\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\r\n  };\r\n}\r\n\r\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\r\n  // In mose cases, line is monotonous on category axis, and the label size\r\n  // is close with each other. So we check the symbol size and some of the\r\n  // label size alone with the category axis to estimate whether all symbol\r\n  // can be shown without overlap.\r\n  var axisExtent = categoryAxis.getExtent();\r\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\r\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\r\n  // Sampling some points, max 5.\r\n\r\n  var dataLen = data.count();\r\n  var step = Math.max(1, Math.round(dataLen / 5));\r\n\r\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\r\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\r\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\r\n    * 1.5 > availSize) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction isPointNull(x, y) {\r\n  return isNaN(x) || isNaN(y);\r\n}\r\n\r\nfunction getLastIndexNotNull(points) {\r\n  var len = points.length / 2;\r\n\r\n  for (; len > 0; len--) {\r\n    if (!isPointNull(points[len * 2 - 2], points[len * 2 - 1])) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return len - 1;\r\n}\r\n\r\nfunction getPointAtIndex(points, idx) {\r\n  return [points[idx * 2], points[idx * 2 + 1]];\r\n}\r\n\r\nfunction getIndexRange(points, xOrY, dim) {\r\n  var len = points.length / 2;\r\n  var dimIdx = dim === 'x' ? 0 : 1;\r\n  var a;\r\n  var b;\r\n  var prevIndex = 0;\r\n  var nextIndex = -1;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    b = points[i * 2 + dimIdx];\r\n\r\n    if (isNaN(b) || isNaN(points[i * 2 + 1 - dimIdx])) {\r\n      continue;\r\n    }\r\n\r\n    if (i === 0) {\r\n      a = b;\r\n      continue;\r\n    }\r\n\r\n    if (a <= xOrY && b >= xOrY || a >= xOrY && b <= xOrY) {\r\n      nextIndex = i;\r\n      break;\r\n    }\r\n\r\n    prevIndex = i;\r\n    a = b;\r\n  }\r\n\r\n  return {\r\n    range: [prevIndex, nextIndex],\r\n    t: (xOrY - a) / (b - a)\r\n  };\r\n}\r\n\r\nfunction anyStateShowEndLabel(seriesModel) {\r\n  if (seriesModel.get(['endLabel', 'show'])) {\r\n    return true;\r\n  }\r\n\r\n  for (var i = 0; i < SPECIAL_STATES.length; i++) {\r\n    if (seriesModel.get([SPECIAL_STATES[i], 'endLabel', 'show'])) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction createLineClipPath(lineView, coordSys, hasAnimation, seriesModel) {\r\n  if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\r\n    var endLabelModel_1 = seriesModel.getModel('endLabel');\r\n    var valueAnimation_1 = endLabelModel_1.get('valueAnimation');\r\n    var data_1 = seriesModel.getData();\r\n    var labelAnimationRecord_1 = {\r\n      lastFrameIndex: 0\r\n    };\r\n    var during = anyStateShowEndLabel(seriesModel) ? function (percent, clipRect) {\r\n      lineView._endLabelOnDuring(percent, clipRect, data_1, labelAnimationRecord_1, valueAnimation_1, endLabelModel_1, coordSys);\r\n    } : null;\r\n    var isHorizontal = coordSys.getBaseAxis().isHorizontal();\r\n    var clipPath = createGridClipPath(coordSys, hasAnimation, seriesModel, function () {\r\n      var endLabel = lineView._endLabel;\r\n\r\n      if (endLabel && hasAnimation) {\r\n        if (labelAnimationRecord_1.originalX != null) {\r\n          endLabel.attr({\r\n            x: labelAnimationRecord_1.originalX,\r\n            y: labelAnimationRecord_1.originalY\r\n          });\r\n        }\r\n      }\r\n    }, during); // Expand clip shape to avoid clipping when line value exceeds axis\r\n\r\n    if (!seriesModel.get('clip', true)) {\r\n      var rectShape = clipPath.shape;\r\n      var expandSize = Math.max(rectShape.width, rectShape.height);\r\n\r\n      if (isHorizontal) {\r\n        rectShape.y -= expandSize;\r\n        rectShape.height += expandSize * 2;\r\n      } else {\r\n        rectShape.x -= expandSize;\r\n        rectShape.width += expandSize * 2;\r\n      }\r\n    } // Set to the final frame. To make sure label layout is right.\r\n\r\n\r\n    if (during) {\r\n      during(1, clipPath);\r\n    }\r\n\r\n    return clipPath;\r\n  } else {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (seriesModel.get(['endLabel', 'show'])) {\r\n        console.warn('endLabel is not supported for lines in polar systems.');\r\n      }\r\n    }\r\n\r\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\r\n  }\r\n}\r\n\r\nfunction getEndLabelStateSpecified(endLabelModel, coordSys) {\r\n  var baseAxis = coordSys.getBaseAxis();\r\n  var isHorizontal = baseAxis.isHorizontal();\r\n  var isBaseInversed = baseAxis.inverse;\r\n  var align = isHorizontal ? isBaseInversed ? 'right' : 'left' : 'center';\r\n  var verticalAlign = isHorizontal ? 'middle' : isBaseInversed ? 'top' : 'bottom';\r\n  return {\r\n    normal: {\r\n      align: endLabelModel.get('align') || align,\r\n      verticalAlign: endLabelModel.get('verticalAlign') || verticalAlign\r\n    }\r\n  };\r\n}\r\n\r\nvar LineView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(LineView, _super);\r\n\r\n  function LineView() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  LineView.prototype.init = function () {\r\n    var lineGroup = new graphic.Group();\r\n    var symbolDraw = new SymbolDraw();\r\n    this.group.add(symbolDraw.group);\r\n    this._symbolDraw = symbolDraw;\r\n    this._lineGroup = lineGroup;\r\n  };\r\n\r\n  LineView.prototype.render = function (seriesModel, ecModel, api) {\r\n    var _this = this;\r\n\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var group = this.group;\r\n    var data = seriesModel.getData();\r\n    var lineStyleModel = seriesModel.getModel('lineStyle');\r\n    var areaStyleModel = seriesModel.getModel('areaStyle');\r\n    var points = data.getLayout('points') || [];\r\n    var isCoordSysPolar = coordSys.type === 'polar';\r\n    var prevCoordSys = this._coordSys;\r\n    var symbolDraw = this._symbolDraw;\r\n    var polyline = this._polyline;\r\n    var polygon = this._polygon;\r\n    var lineGroup = this._lineGroup;\r\n    var hasAnimation = seriesModel.get('animation');\r\n    var isAreaChart = !areaStyleModel.isEmpty();\r\n    var valueOrigin = areaStyleModel.get('origin');\r\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\r\n    var stackedOnPoints = isAreaChart && getStackedOnPoints(coordSys, data, dataCoordInfo);\r\n    var showSymbol = seriesModel.get('showSymbol');\r\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\r\n\r\n    var oldData = this._data;\r\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\r\n      if (el.__temp) {\r\n        group.remove(el);\r\n        oldData.setItemGraphicEl(idx, null);\r\n      }\r\n    }); // Remove previous created symbols if showSymbol changed to false\r\n\r\n    if (!showSymbol) {\r\n      symbolDraw.remove();\r\n    }\r\n\r\n    group.add(lineGroup); // FIXME step not support polar\r\n\r\n    var step = !isCoordSysPolar ? seriesModel.get('step') : false;\r\n    var clipShapeForSymbol;\r\n\r\n    if (coordSys && coordSys.getArea && seriesModel.get('clip', true)) {\r\n      clipShapeForSymbol = coordSys.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\r\n      // See #7913 and `test/dataZoom-clip.html`.\r\n\r\n      if (clipShapeForSymbol.width != null) {\r\n        clipShapeForSymbol.x -= 0.1;\r\n        clipShapeForSymbol.y -= 0.1;\r\n        clipShapeForSymbol.width += 0.2;\r\n        clipShapeForSymbol.height += 0.2;\r\n      } else if (clipShapeForSymbol.r0) {\r\n        clipShapeForSymbol.r0 -= 0.5;\r\n        clipShapeForSymbol.r += 0.5;\r\n      }\r\n    }\r\n\r\n    this._clipShapeForSymbol = clipShapeForSymbol;\r\n    var visualColor = getVisualGradient(data, coordSys, api) || data.getVisual('style')[data.getVisual('drawType')]; // Initialization animation or coordinate system changed\r\n\r\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\r\n      showSymbol && symbolDraw.updateData(data, {\r\n        isIgnore: isIgnoreFunc,\r\n        clipShape: clipShapeForSymbol,\r\n        disableAnimation: true,\r\n        getSymbolPoint: function (idx) {\r\n          return [points[idx * 2], points[idx * 2 + 1]];\r\n        }\r\n      });\r\n      hasAnimation && this._initSymbolLabelAnimation(data, coordSys, clipShapeForSymbol);\r\n\r\n      if (step) {\r\n        // TODO If stacked series is not step\r\n        points = turnPointsIntoStep(points, coordSys, step);\r\n\r\n        if (stackedOnPoints) {\r\n          stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\r\n        }\r\n      }\r\n\r\n      polyline = this._newPolyline(points);\r\n\r\n      if (isAreaChart) {\r\n        polygon = this._newPolygon(points, stackedOnPoints);\r\n      } // NOTE: Must update _endLabel before setClipPath.\r\n\r\n\r\n      if (!isCoordSysPolar) {\r\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\r\n      }\r\n\r\n      lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\r\n    } else {\r\n      if (isAreaChart && !polygon) {\r\n        // If areaStyle is added\r\n        polygon = this._newPolygon(points, stackedOnPoints);\r\n      } else if (polygon && !isAreaChart) {\r\n        // If areaStyle is removed\r\n        lineGroup.remove(polygon);\r\n        polygon = this._polygon = null;\r\n      } // NOTE: Must update _endLabel before setClipPath.\r\n\r\n\r\n      if (!isCoordSysPolar) {\r\n        this._initOrUpdateEndLabel(seriesModel, coordSys, convertToColorString(visualColor));\r\n      } // Update clipPath\r\n\r\n\r\n      var oldClipPath = lineGroup.getClipPath();\r\n\r\n      if (oldClipPath) {\r\n        var newClipPath = createLineClipPath(this, coordSys, false, seriesModel);\r\n        graphic.initProps(oldClipPath, {\r\n          shape: newClipPath.shape\r\n        }, seriesModel);\r\n      } else {\r\n        lineGroup.setClipPath(createLineClipPath(this, coordSys, true, seriesModel));\r\n      } // Always update, or it is wrong in the case turning on legend\r\n      // because points are not changed\r\n\r\n\r\n      showSymbol && symbolDraw.updateData(data, {\r\n        isIgnore: isIgnoreFunc,\r\n        clipShape: clipShapeForSymbol,\r\n        disableAnimation: true,\r\n        getSymbolPoint: function (idx) {\r\n          return [points[idx * 2], points[idx * 2 + 1]];\r\n        }\r\n      }); // In the case data zoom triggerred refreshing frequently\r\n      // Data may not change if line has a category axis. So it should animate nothing\r\n\r\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\r\n        if (hasAnimation) {\r\n          this._doUpdateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\r\n        } else {\r\n          // Not do it in update with animation\r\n          if (step) {\r\n            // TODO If stacked series is not step\r\n            points = turnPointsIntoStep(points, coordSys, step);\r\n\r\n            if (stackedOnPoints) {\r\n              stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\r\n            }\r\n          }\r\n\r\n          polyline.setShape({\r\n            points: points\r\n          });\r\n          polygon && polygon.setShape({\r\n            points: points,\r\n            stackedOnPoints: stackedOnPoints\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    var focus = seriesModel.get(['emphasis', 'focus']);\r\n    var blurScope = seriesModel.get(['emphasis', 'blurScope']);\r\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\r\n    lineStyleModel.getLineStyle(), {\r\n      fill: 'none',\r\n      stroke: visualColor,\r\n      lineJoin: 'bevel'\r\n    }));\r\n    setStatesStylesFromModel(polyline, seriesModel, 'lineStyle');\r\n\r\n    if (polyline.style.lineWidth > 0 && seriesModel.get(['emphasis', 'lineStyle', 'width']) === 'bolder') {\r\n      var emphasisLineStyle = polyline.getState('emphasis').style;\r\n      emphasisLineStyle.lineWidth = +polyline.style.lineWidth + 1;\r\n    } // Needs seriesIndex for focus\r\n\r\n\r\n    getECData(polyline).seriesIndex = seriesModel.seriesIndex;\r\n    enableHoverEmphasis(polyline, focus, blurScope);\r\n    var smooth = getSmooth(seriesModel.get('smooth'));\r\n    var smoothMonotone = seriesModel.get('smoothMonotone');\r\n    var connectNulls = seriesModel.get('connectNulls');\r\n    polyline.setShape({\r\n      smooth: smooth,\r\n      smoothMonotone: smoothMonotone,\r\n      connectNulls: connectNulls\r\n    });\r\n\r\n    if (polygon) {\r\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\r\n      var stackedOnSmooth = 0;\r\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\r\n        fill: visualColor,\r\n        opacity: 0.7,\r\n        lineJoin: 'bevel',\r\n        decal: data.getVisual('style').decal\r\n      }));\r\n\r\n      if (stackedOnSeries) {\r\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\r\n      }\r\n\r\n      polygon.setShape({\r\n        smooth: smooth,\r\n        stackedOnSmooth: stackedOnSmooth,\r\n        smoothMonotone: smoothMonotone,\r\n        connectNulls: connectNulls\r\n      });\r\n      setStatesStylesFromModel(polygon, seriesModel, 'areaStyle'); // Needs seriesIndex for focus\r\n\r\n      getECData(polygon).seriesIndex = seriesModel.seriesIndex;\r\n      enableHoverEmphasis(polygon, focus, blurScope);\r\n    }\r\n\r\n    var changePolyState = function (toState) {\r\n      _this._changePolyState(toState);\r\n    };\r\n\r\n    data.eachItemGraphicEl(function (el) {\r\n      // Switch polyline / polygon state if element changed its state.\r\n      el && (el.onHoverStateChange = changePolyState);\r\n    });\r\n    this._polyline.onHoverStateChange = changePolyState;\r\n    this._data = data; // Save the coordinate system for transition animation when data changed\r\n\r\n    this._coordSys = coordSys;\r\n    this._stackedOnPoints = stackedOnPoints;\r\n    this._points = points;\r\n    this._step = step;\r\n    this._valueOrigin = valueOrigin;\r\n\r\n    if (seriesModel.get('triggerLineEvent')) {\r\n      this.packEventData(seriesModel, polyline);\r\n      polygon && this.packEventData(seriesModel, polygon);\r\n    }\r\n  };\r\n\r\n  LineView.prototype.packEventData = function (seriesModel, el) {\r\n    getECData(el).eventData = {\r\n      componentType: 'series',\r\n      componentSubType: 'line',\r\n      componentIndex: seriesModel.componentIndex,\r\n      seriesIndex: seriesModel.seriesIndex,\r\n      seriesName: seriesModel.name,\r\n      seriesType: 'line'\r\n    };\r\n  };\r\n\r\n  LineView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\r\n    var data = seriesModel.getData();\r\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\r\n\r\n    this._changePolyState('emphasis');\r\n\r\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\r\n      var points = data.getLayout('points');\r\n      var symbol = data.getItemGraphicEl(dataIndex);\r\n\r\n      if (!symbol) {\r\n        // Create a temporary symbol if it is not exists\r\n        var x = points[dataIndex * 2];\r\n        var y = points[dataIndex * 2 + 1];\r\n\r\n        if (isNaN(x) || isNaN(y)) {\r\n          // Null data\r\n          return;\r\n        } // fix #11360: should't draw symbol outside clipShapeForSymbol\r\n\r\n\r\n        if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(x, y)) {\r\n          return;\r\n        }\r\n\r\n        var zlevel = seriesModel.get('zlevel');\r\n        var z = seriesModel.get('z');\r\n        symbol = new SymbolClz(data, dataIndex);\r\n        symbol.x = x;\r\n        symbol.y = y;\r\n        symbol.setZ(zlevel, z); // ensure label text of the temporary symbol is in front of line and area polygon\r\n\r\n        var symbolLabel = symbol.getSymbolPath().getTextContent();\r\n\r\n        if (symbolLabel) {\r\n          symbolLabel.zlevel = zlevel;\r\n          symbolLabel.z = z;\r\n          symbolLabel.z2 = this._polyline.z2 + 1;\r\n        }\r\n\r\n        symbol.__temp = true;\r\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\r\n\r\n        symbol.stopSymbolAnimation(true);\r\n        this.group.add(symbol);\r\n      }\r\n\r\n      symbol.highlight();\r\n    } else {\r\n      // Highlight whole series\r\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\r\n    }\r\n  };\r\n\r\n  LineView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\r\n    var data = seriesModel.getData();\r\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\r\n\r\n    this._changePolyState('normal');\r\n\r\n    if (dataIndex != null && dataIndex >= 0) {\r\n      var symbol = data.getItemGraphicEl(dataIndex);\r\n\r\n      if (symbol) {\r\n        if (symbol.__temp) {\r\n          data.setItemGraphicEl(dataIndex, null);\r\n          this.group.remove(symbol);\r\n        } else {\r\n          symbol.downplay();\r\n        }\r\n      }\r\n    } else {\r\n      // FIXME\r\n      // can not downplay completely.\r\n      // Downplay whole series\r\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\r\n    }\r\n  };\r\n\r\n  LineView.prototype._changePolyState = function (toState) {\r\n    var polygon = this._polygon;\r\n    setStatesFlag(this._polyline, toState);\r\n    polygon && setStatesFlag(polygon, toState);\r\n  };\r\n\r\n  LineView.prototype._newPolyline = function (points) {\r\n    var polyline = this._polyline; // Remove previous created polyline\r\n\r\n    if (polyline) {\r\n      this._lineGroup.remove(polyline);\r\n    }\r\n\r\n    polyline = new ECPolyline({\r\n      shape: {\r\n        points: points\r\n      },\r\n      segmentIgnoreThreshold: 2,\r\n      z2: 10\r\n    });\r\n\r\n    this._lineGroup.add(polyline);\r\n\r\n    this._polyline = polyline;\r\n    return polyline;\r\n  };\r\n\r\n  LineView.prototype._newPolygon = function (points, stackedOnPoints) {\r\n    var polygon = this._polygon; // Remove previous created polygon\r\n\r\n    if (polygon) {\r\n      this._lineGroup.remove(polygon);\r\n    }\r\n\r\n    polygon = new ECPolygon({\r\n      shape: {\r\n        points: points,\r\n        stackedOnPoints: stackedOnPoints\r\n      },\r\n      segmentIgnoreThreshold: 2\r\n    });\r\n\r\n    this._lineGroup.add(polygon);\r\n\r\n    this._polygon = polygon;\r\n    return polygon;\r\n  };\r\n\r\n  LineView.prototype._initSymbolLabelAnimation = function (data, coordSys, clipShape) {\r\n    var isHorizontalOrRadial;\r\n    var isCoordSysPolar;\r\n    var baseAxis = coordSys.getBaseAxis();\r\n    var isAxisInverse = baseAxis.inverse;\r\n\r\n    if (coordSys.type === 'cartesian2d') {\r\n      isHorizontalOrRadial = baseAxis.isHorizontal();\r\n      isCoordSysPolar = false;\r\n    } else if (coordSys.type === 'polar') {\r\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\r\n      isCoordSysPolar = true;\r\n    }\r\n\r\n    var seriesModel = data.hostModel;\r\n    var seriesDuration = seriesModel.get('animationDuration');\r\n\r\n    if (typeof seriesDuration === 'function') {\r\n      seriesDuration = seriesDuration(null);\r\n    }\r\n\r\n    var seriesDalay = seriesModel.get('animationDelay') || 0;\r\n    var seriesDalayValue = typeof seriesDalay === 'function' ? seriesDalay(null) : seriesDalay;\r\n    data.eachItemGraphicEl(function (symbol, idx) {\r\n      var el = symbol;\r\n\r\n      if (el) {\r\n        var point = [symbol.x, symbol.y];\r\n        var start = void 0;\r\n        var end = void 0;\r\n        var current = void 0;\r\n\r\n        if (clipShape) {\r\n          if (isCoordSysPolar) {\r\n            var polarClip = clipShape;\r\n            var coord = coordSys.pointToCoord(point);\r\n\r\n            if (isHorizontalOrRadial) {\r\n              start = polarClip.startAngle;\r\n              end = polarClip.endAngle;\r\n              current = -coord[1] / 180 * Math.PI;\r\n            } else {\r\n              start = polarClip.r0;\r\n              end = polarClip.r;\r\n              current = coord[0];\r\n            }\r\n          } else {\r\n            var gridClip = clipShape;\r\n\r\n            if (isHorizontalOrRadial) {\r\n              start = gridClip.x;\r\n              end = gridClip.x + gridClip.width;\r\n              current = symbol.x;\r\n            } else {\r\n              start = gridClip.y + gridClip.height;\r\n              end = gridClip.y;\r\n              current = symbol.y;\r\n            }\r\n          }\r\n        }\r\n\r\n        var ratio = end === start ? 0 : (current - start) / (end - start);\r\n\r\n        if (isAxisInverse) {\r\n          ratio = 1 - ratio;\r\n        }\r\n\r\n        var delay = typeof seriesDalay === 'function' ? seriesDalay(idx) : seriesDuration * ratio + seriesDalayValue;\r\n        var symbolPath = el.getSymbolPath();\r\n        var text = symbolPath.getTextContent();\r\n        el.attr({\r\n          scaleX: 0,\r\n          scaleY: 0\r\n        });\r\n        el.animateTo({\r\n          scaleX: 1,\r\n          scaleY: 1\r\n        }, {\r\n          duration: 200,\r\n          setToFinal: true,\r\n          delay: delay\r\n        });\r\n\r\n        if (text) {\r\n          text.animateFrom({\r\n            style: {\r\n              opacity: 0\r\n            }\r\n          }, {\r\n            duration: 300,\r\n            delay: delay\r\n          });\r\n        }\r\n\r\n        symbolPath.disableLabelAnimation = true;\r\n      }\r\n    });\r\n  };\r\n\r\n  LineView.prototype._initOrUpdateEndLabel = function (seriesModel, coordSys, inheritColor) {\r\n    var endLabelModel = seriesModel.getModel('endLabel');\r\n\r\n    if (anyStateShowEndLabel(seriesModel)) {\r\n      var data_2 = seriesModel.getData();\r\n      var polyline = this._polyline;\r\n      var endLabel = this._endLabel;\r\n\r\n      if (!endLabel) {\r\n        endLabel = this._endLabel = new graphic.Text({\r\n          z2: 200 // should be higher than item symbol\r\n\r\n        });\r\n        endLabel.ignoreClip = true;\r\n        polyline.setTextContent(this._endLabel);\r\n        polyline.disableLabelAnimation = true;\r\n      } // Find last non-NaN data to display data\r\n\r\n\r\n      var dataIndex = getLastIndexNotNull(data_2.getLayout('points'));\r\n\r\n      if (dataIndex >= 0) {\r\n        setLabelStyle(polyline, getLabelStatesModels(seriesModel, 'endLabel'), {\r\n          inheritColor: inheritColor,\r\n          labelFetcher: seriesModel,\r\n          labelDataIndex: dataIndex,\r\n          defaultText: function (dataIndex, opt, interpolatedValue) {\r\n            return interpolatedValue != null ? getDefaultInterpolatedLabel(data_2, interpolatedValue) : getDefaultLabel(data_2, dataIndex);\r\n          },\r\n          enableTextSetter: true\r\n        }, getEndLabelStateSpecified(endLabelModel, coordSys));\r\n        polyline.textConfig.position = null;\r\n      }\r\n    } else if (this._endLabel) {\r\n      this._polyline.removeTextContent();\r\n\r\n      this._endLabel = null;\r\n    }\r\n  };\r\n\r\n  LineView.prototype._endLabelOnDuring = function (percent, clipRect, data, animationRecord, valueAnimation, endLabelModel, coordSys) {\r\n    var endLabel = this._endLabel;\r\n    var polyline = this._polyline;\r\n\r\n    if (endLabel) {\r\n      // NOTE: Don't remove percent < 1. percent === 1 means the first frame during render.\r\n      // The label is not prepared at this time.\r\n      if (percent < 1 && animationRecord.originalX == null) {\r\n        animationRecord.originalX = endLabel.x;\r\n        animationRecord.originalY = endLabel.y;\r\n      }\r\n\r\n      var points = data.getLayout('points');\r\n      var seriesModel = data.hostModel;\r\n      var connectNulls = seriesModel.get('connectNulls');\r\n      var precision = endLabelModel.get('precision');\r\n      var distance = endLabelModel.get('distance') || 0;\r\n      var baseAxis = coordSys.getBaseAxis();\r\n      var isHorizontal = baseAxis.isHorizontal();\r\n      var isBaseInversed = baseAxis.inverse;\r\n      var clipShape = clipRect.shape;\r\n      var xOrY = isBaseInversed ? isHorizontal ? clipShape.x : clipShape.y + clipShape.height : isHorizontal ? clipShape.x + clipShape.width : clipShape.y;\r\n      var distanceX = (isHorizontal ? distance : 0) * (isBaseInversed ? -1 : 1);\r\n      var distanceY = (isHorizontal ? 0 : -distance) * (isBaseInversed ? -1 : 1);\r\n      var dim = isHorizontal ? 'x' : 'y';\r\n      var dataIndexRange = getIndexRange(points, xOrY, dim);\r\n      var indices = dataIndexRange.range;\r\n      var diff = indices[1] - indices[0];\r\n      var value = void 0;\r\n\r\n      if (diff >= 1) {\r\n        // diff > 1 && connectNulls, which is on the null data.\r\n        if (diff > 1 && !connectNulls) {\r\n          var pt = getPointAtIndex(points, indices[0]);\r\n          endLabel.attr({\r\n            x: pt[0] + distanceX,\r\n            y: pt[1] + distanceY\r\n          });\r\n          valueAnimation && (value = seriesModel.getRawValue(indices[0]));\r\n        } else {\r\n          var pt = polyline.getPointOn(xOrY, dim);\r\n          pt && endLabel.attr({\r\n            x: pt[0] + distanceX,\r\n            y: pt[1] + distanceY\r\n          });\r\n          var startValue = seriesModel.getRawValue(indices[0]);\r\n          var endValue = seriesModel.getRawValue(indices[1]);\r\n          valueAnimation && (value = modelUtil.interpolateRawValues(data, precision, startValue, endValue, dataIndexRange.t));\r\n        }\r\n\r\n        animationRecord.lastFrameIndex = indices[0];\r\n      } else {\r\n        // If diff <= 0, which is the range is not found(Include NaN)\r\n        // Choose the first point or last point.\r\n        var idx = percent === 1 || animationRecord.lastFrameIndex > 0 ? indices[0] : 0;\r\n        var pt = getPointAtIndex(points, idx);\r\n        valueAnimation && (value = seriesModel.getRawValue(idx));\r\n        endLabel.attr({\r\n          x: pt[0] + distanceX,\r\n          y: pt[1] + distanceY\r\n        });\r\n      }\r\n\r\n      if (valueAnimation) {\r\n        labelInner(endLabel).setLabelText(value);\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * @private\r\n   */\r\n  // FIXME Two value axis\r\n\r\n\r\n  LineView.prototype._doUpdateAnimation = function (data, stackedOnPoints, coordSys, api, step, valueOrigin) {\r\n    var polyline = this._polyline;\r\n    var polygon = this._polygon;\r\n    var seriesModel = data.hostModel;\r\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\r\n    var current = diff.current;\r\n    var stackedOnCurrent = diff.stackedOnCurrent;\r\n    var next = diff.next;\r\n    var stackedOnNext = diff.stackedOnNext;\r\n\r\n    if (step) {\r\n      // TODO If stacked series is not step\r\n      current = turnPointsIntoStep(diff.current, coordSys, step);\r\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\r\n      next = turnPointsIntoStep(diff.next, coordSys, step);\r\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\r\n    } // Don't apply animation if diff is large.\r\n    // For better result and avoid memory explosion problems like\r\n    // https://github.com/apache/incubator-echarts/issues/12229\r\n\r\n\r\n    if (getBoundingDiff(current, next) > 3000 || polygon && getBoundingDiff(stackedOnCurrent, stackedOnNext) > 3000) {\r\n      polyline.stopAnimation();\r\n      polyline.setShape({\r\n        points: next\r\n      });\r\n\r\n      if (polygon) {\r\n        polygon.stopAnimation();\r\n        polygon.setShape({\r\n          points: next,\r\n          stackedOnPoints: stackedOnNext\r\n        });\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    polyline.shape.__points = diff.current;\r\n    polyline.shape.points = current;\r\n    var target = {\r\n      shape: {\r\n        points: next\r\n      }\r\n    }; // Also animate the original points.\r\n    // If points reference is changed when turning into step line.\r\n\r\n    if (diff.current !== current) {\r\n      target.shape.__points = diff.next;\r\n    } // Stop previous animation.\r\n\r\n\r\n    polyline.stopAnimation();\r\n    graphic.updateProps(polyline, target, seriesModel);\r\n\r\n    if (polygon) {\r\n      polygon.setShape({\r\n        // Reuse the points with polyline.\r\n        points: current,\r\n        stackedOnPoints: stackedOnCurrent\r\n      });\r\n      polygon.stopAnimation();\r\n      graphic.updateProps(polygon, {\r\n        shape: {\r\n          stackedOnPoints: stackedOnNext\r\n        }\r\n      }, seriesModel); // If use attr directly in updateProps.\r\n\r\n      if (polyline.shape.points !== polygon.shape.points) {\r\n        polygon.shape.points = polyline.shape.points;\r\n      }\r\n    }\r\n\r\n    var updatedDataInfo = [];\r\n    var diffStatus = diff.status;\r\n\r\n    for (var i = 0; i < diffStatus.length; i++) {\r\n      var cmd = diffStatus[i].cmd;\r\n\r\n      if (cmd === '=') {\r\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\r\n\r\n        if (el) {\r\n          updatedDataInfo.push({\r\n            el: el,\r\n            ptIdx: i // Index of points\r\n\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (polyline.animators && polyline.animators.length) {\r\n      polyline.animators[0].during(function () {\r\n        polygon && polygon.dirtyShape();\r\n        var points = polyline.shape.__points;\r\n\r\n        for (var i = 0; i < updatedDataInfo.length; i++) {\r\n          var el = updatedDataInfo[i].el;\r\n          var offset = updatedDataInfo[i].ptIdx * 2;\r\n          el.x = points[offset];\r\n          el.y = points[offset + 1];\r\n          el.markRedraw();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  LineView.prototype.remove = function (ecModel) {\r\n    var group = this.group;\r\n    var oldData = this._data;\r\n\r\n    this._lineGroup.removeAll();\r\n\r\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\r\n\r\n\r\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\r\n      if (el.__temp) {\r\n        group.remove(el);\r\n        oldData.setItemGraphicEl(idx, null);\r\n      }\r\n    });\r\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null;\r\n  };\r\n\r\n  LineView.type = 'line';\r\n  return LineView;\r\n}(ChartView);\r\n\r\nexport default LineView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { map } from 'zrender/lib/core/util';\r\nimport createRenderPlanner from '../chart/helper/createRenderPlanner';\r\nimport { isDimensionStacked } from '../data/helper/dataStackHelper';\r\nimport { createFloat32Array } from '../util/vendor';\r\nexport default function pointsLayout(seriesType, forceStoreInTypedArray) {\r\n  return {\r\n    seriesType: seriesType,\r\n    plan: createRenderPlanner(),\r\n    reset: function (seriesModel) {\r\n      var data = seriesModel.getData();\r\n      var coordSys = seriesModel.coordinateSystem;\r\n      var pipelineContext = seriesModel.pipelineContext;\r\n      var useTypedArray = forceStoreInTypedArray || pipelineContext.large;\r\n\r\n      if (!coordSys) {\r\n        return;\r\n      }\r\n\r\n      var dims = map(coordSys.dimensions, function (dim) {\r\n        return data.mapDimension(dim);\r\n      }).slice(0, 2);\r\n      var dimLen = dims.length;\r\n      var stackResultDim = data.getCalculationInfo('stackResultDimension');\r\n\r\n      if (isDimensionStacked(data, dims[0]\r\n      /*, dims[1]*/\r\n      )) {\r\n        dims[0] = stackResultDim;\r\n      }\r\n\r\n      if (isDimensionStacked(data, dims[1]\r\n      /*, dims[0]*/\r\n      )) {\r\n        dims[1] = stackResultDim;\r\n      }\r\n\r\n      var store = data.getStore();\r\n      var dimIdx0 = data.getDimensionIndex(dims[0]);\r\n      var dimIdx1 = data.getDimensionIndex(dims[1]);\r\n      return dimLen && {\r\n        progress: function (params, data) {\r\n          var segCount = params.end - params.start;\r\n          var points = useTypedArray && createFloat32Array(segCount * dimLen);\r\n          var tmpIn = [];\r\n          var tmpOut = [];\r\n\r\n          for (var i = params.start, offset = 0; i < params.end; i++) {\r\n            var point = void 0;\r\n\r\n            if (dimLen === 1) {\r\n              var x = store.get(dimIdx0, i); // NOTE: Make sure the second parameter is null to use default strategy.\r\n\r\n              point = coordSys.dataToPoint(x, null, tmpOut);\r\n            } else {\r\n              tmpIn[0] = store.get(dimIdx0, i);\r\n              tmpIn[1] = store.get(dimIdx1, i); // Let coordinate system to handle the NaN data.\r\n\r\n              point = coordSys.dataToPoint(tmpIn, null, tmpOut);\r\n            }\r\n\r\n            if (useTypedArray) {\r\n              points[offset++] = point[0];\r\n              points[offset++] = point[1];\r\n            } else {\r\n              data.setItemLayout(i, point.slice());\r\n            }\r\n          }\r\n\r\n          useTypedArray && data.setLayout('points', points);\r\n        }\r\n      };\r\n    }\r\n  };\r\n}\r\n;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar samplers = {\r\n  average: function (frame) {\r\n    var sum = 0;\r\n    var count = 0;\r\n\r\n    for (var i = 0; i < frame.length; i++) {\r\n      if (!isNaN(frame[i])) {\r\n        sum += frame[i];\r\n        count++;\r\n      }\r\n    } // Return NaN if count is 0\r\n\r\n\r\n    return count === 0 ? NaN : sum / count;\r\n  },\r\n  sum: function (frame) {\r\n    var sum = 0;\r\n\r\n    for (var i = 0; i < frame.length; i++) {\r\n      // Ignore NaN\r\n      sum += frame[i] || 0;\r\n    }\r\n\r\n    return sum;\r\n  },\r\n  max: function (frame) {\r\n    var max = -Infinity;\r\n\r\n    for (var i = 0; i < frame.length; i++) {\r\n      frame[i] > max && (max = frame[i]);\r\n    } // NaN will cause illegal axis extent.\r\n\r\n\r\n    return isFinite(max) ? max : NaN;\r\n  },\r\n  min: function (frame) {\r\n    var min = Infinity;\r\n\r\n    for (var i = 0; i < frame.length; i++) {\r\n      frame[i] < min && (min = frame[i]);\r\n    } // NaN will cause illegal axis extent.\r\n\r\n\r\n    return isFinite(min) ? min : NaN;\r\n  },\r\n  // TODO\r\n  // Median\r\n  nearest: function (frame) {\r\n    return frame[0];\r\n  }\r\n};\r\n\r\nvar indexSampler = function (frame) {\r\n  return Math.round(frame.length / 2);\r\n};\r\n\r\nexport default function dataSample(seriesType) {\r\n  return {\r\n    seriesType: seriesType,\r\n    // FIXME:TS never used, so comment it\r\n    // modifyOutputEnd: true,\r\n    reset: function (seriesModel, ecModel, api) {\r\n      var data = seriesModel.getData();\r\n      var sampling = seriesModel.get('sampling');\r\n      var coordSys = seriesModel.coordinateSystem;\r\n      var count = data.count(); // Only cartesian2d support down sampling. Disable it when there is few data.\r\n\r\n      if (count > 10 && coordSys.type === 'cartesian2d' && sampling) {\r\n        var baseAxis = coordSys.getBaseAxis();\r\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\r\n        var extent = baseAxis.getExtent();\r\n        var dpr = api.getDevicePixelRatio(); // Coordinste system has been resized\r\n\r\n        var size = Math.abs(extent[1] - extent[0]) * (dpr || 1);\r\n        var rate = Math.round(count / size);\r\n\r\n        if (rate > 1) {\r\n          if (sampling === 'lttb') {\r\n            seriesModel.setData(data.lttbDownSample(data.mapDimension(valueAxis.dim), 1 / rate));\r\n          }\r\n\r\n          var sampler = void 0;\r\n\r\n          if (typeof sampling === 'string') {\r\n            sampler = samplers[sampling];\r\n          } else if (typeof sampling === 'function') {\r\n            sampler = sampling;\r\n          }\r\n\r\n          if (sampler) {\r\n            // Only support sample the first dim mapped from value axis.\r\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport LineSeries from './LineSeries';\r\nimport LineView from './LineView'; // In case developer forget to include grid component\r\n\r\nimport layoutPoints from '../../layout/points';\r\nimport dataSample from '../../processor/dataSample';\r\nexport function install(registers) {\r\n  registers.registerChartView(LineView);\r\n  registers.registerSeriesModel(LineSeries);\r\n  registers.registerLayout(layoutPoints('line', true));\r\n  registers.registerVisual({\r\n    seriesType: 'line',\r\n    reset: function (seriesModel) {\r\n      var data = seriesModel.getData(); // Visual coding for legend\r\n\r\n      var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\r\n\r\n      if (lineStyle && !lineStyle.stroke) {\r\n        // Fill in visual should be palette color if\r\n        // has color callback\r\n        lineStyle.stroke = data.getVisual('style').fill;\r\n      }\r\n\r\n      data.setVisual('legendLineStyle', lineStyle);\r\n    }\r\n  }); // Down sample after filter\r\n\r\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport SeriesModel from '../../model/Series';\r\nimport createSeriesData from '../helper/createSeriesData';\r\n\r\nvar BaseBarSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(BaseBarSeriesModel, _super);\r\n\r\n  function BaseBarSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = BaseBarSeriesModel.type;\r\n    return _this;\r\n  }\r\n\r\n  BaseBarSeriesModel.prototype.getInitialData = function (option, ecModel) {\r\n    return createSeriesData(null, this, {\r\n      useEncodeDefaulter: true\r\n    });\r\n  };\r\n\r\n  BaseBarSeriesModel.prototype.getMarkerPosition = function (value) {\r\n    var coordSys = this.coordinateSystem;\r\n\r\n    if (coordSys && coordSys.clampData) {\r\n      // PENDING if clamp ?\r\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\r\n      var data = this.getData();\r\n      var offset = data.getLayout('offset');\r\n      var size = data.getLayout('size');\r\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\r\n      pt[offsetIndex] += offset + size / 2;\r\n      return pt;\r\n    }\r\n\r\n    return [NaN, NaN];\r\n  };\r\n\r\n  BaseBarSeriesModel.type = 'series.__base_bar__';\r\n  BaseBarSeriesModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 2,\r\n    coordinateSystem: 'cartesian2d',\r\n    legendHoverLink: true,\r\n    // stack: null\r\n    // Cartesian coordinate system\r\n    // xAxisIndex: 0,\r\n    // yAxisIndex: 0,\r\n    barMinHeight: 0,\r\n    barMinAngle: 0,\r\n    // cursor: null,\r\n    large: false,\r\n    largeThreshold: 400,\r\n    progressive: 3e3,\r\n    progressiveChunkMode: 'mod'\r\n  };\r\n  return BaseBarSeriesModel;\r\n}(SeriesModel);\r\n\r\nSeriesModel.registerClass(BaseBarSeriesModel);\r\nexport default BaseBarSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport BaseBarSeriesModel from './BaseBarSeries';\r\nimport createSeriesData from '../helper/createSeriesData';\r\nimport { inheritDefaultOption } from '../../util/component';\r\n\r\nvar BarSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(BarSeriesModel, _super);\r\n\r\n  function BarSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = BarSeriesModel.type;\r\n    return _this;\r\n  }\r\n\r\n  BarSeriesModel.prototype.getInitialData = function () {\r\n    return createSeriesData(null, this, {\r\n      useEncodeDefaulter: true,\r\n      createInvertedIndices: !!this.get('realtimeSort', true) || null\r\n    });\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  BarSeriesModel.prototype.getProgressive = function () {\r\n    // Do not support progressive in normal mode.\r\n    return this.get('large') ? this.get('progressive') : false;\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  BarSeriesModel.prototype.getProgressiveThreshold = function () {\r\n    // Do not support progressive in normal mode.\r\n    var progressiveThreshold = this.get('progressiveThreshold');\r\n    var largeThreshold = this.get('largeThreshold');\r\n\r\n    if (largeThreshold > progressiveThreshold) {\r\n      progressiveThreshold = largeThreshold;\r\n    }\r\n\r\n    return progressiveThreshold;\r\n  };\r\n\r\n  BarSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\r\n    return selectors.rect(data.getItemLayout(dataIndex));\r\n  };\r\n\r\n  BarSeriesModel.type = 'series.bar';\r\n  BarSeriesModel.dependencies = ['grid', 'polar'];\r\n  BarSeriesModel.defaultOption = inheritDefaultOption(BaseBarSeriesModel.defaultOption, {\r\n    // If clipped\r\n    // Only available on cartesian2d\r\n    clip: true,\r\n    roundCap: false,\r\n    showBackground: false,\r\n    backgroundStyle: {\r\n      color: 'rgba(180, 180, 180, 0.2)',\r\n      borderColor: null,\r\n      borderWidth: 0,\r\n      borderType: 'solid',\r\n      borderRadius: 0,\r\n      shadowBlur: 0,\r\n      shadowColor: null,\r\n      shadowOffsetX: 0,\r\n      shadowOffsetY: 0,\r\n      opacity: 1\r\n    },\r\n    select: {\r\n      itemStyle: {\r\n        borderColor: '#212121'\r\n      }\r\n    },\r\n    realtimeSort: false\r\n  });\r\n  return BarSeriesModel;\r\n}(BaseBarSeriesModel);\r\n\r\nexport default BarSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport { Path } from '../graphic';\r\n/**\r\n * Sausage: similar to sector, but have half circle on both sides\r\n */\r\n\r\nvar SausageShape =\r\n/** @class */\r\nfunction () {\r\n  function SausageShape() {\r\n    this.cx = 0;\r\n    this.cy = 0;\r\n    this.r0 = 0;\r\n    this.r = 0;\r\n    this.startAngle = 0;\r\n    this.endAngle = Math.PI * 2;\r\n    this.clockwise = true;\r\n  }\r\n\r\n  return SausageShape;\r\n}();\r\n\r\nvar SausagePath =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(SausagePath, _super);\r\n\r\n  function SausagePath(opts) {\r\n    var _this = _super.call(this, opts) || this;\r\n\r\n    _this.type = 'sausage';\r\n    return _this;\r\n  }\r\n\r\n  SausagePath.prototype.getDefaultShape = function () {\r\n    return new SausageShape();\r\n  };\r\n\r\n  SausagePath.prototype.buildPath = function (ctx, shape) {\r\n    var x = shape.cx;\r\n    var y = shape.cy;\r\n    var r0 = Math.max(shape.r0 || 0, 0);\r\n    var r = Math.max(shape.r, 0);\r\n    var dr = (r - r0) * 0.5;\r\n    var rCenter = r0 + dr;\r\n    var startAngle = shape.startAngle;\r\n    var endAngle = shape.endAngle;\r\n    var clockwise = shape.clockwise;\r\n    var unitStartX = Math.cos(startAngle);\r\n    var unitStartY = Math.sin(startAngle);\r\n    var unitEndX = Math.cos(endAngle);\r\n    var unitEndY = Math.sin(endAngle);\r\n    var lessThanCircle = clockwise ? endAngle - startAngle < Math.PI * 2 : startAngle - endAngle < Math.PI * 2;\r\n\r\n    if (lessThanCircle) {\r\n      ctx.moveTo(unitStartX * r0 + x, unitStartY * r0 + y);\r\n      ctx.arc(unitStartX * rCenter + x, unitStartY * rCenter + y, dr, -Math.PI + startAngle, startAngle, !clockwise);\r\n    }\r\n\r\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\r\n    ctx.moveTo(unitEndX * r + x, unitEndY * r + y);\r\n    ctx.arc(unitEndX * rCenter + x, unitEndY * rCenter + y, dr, endAngle - Math.PI * 2, endAngle - Math.PI, !clockwise);\r\n\r\n    if (r0 !== 0) {\r\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\r\n      ctx.moveTo(unitStartX * r0 + x, unitEndY * r0 + y);\r\n    }\r\n\r\n    ctx.closePath();\r\n  };\r\n\r\n  return SausagePath;\r\n}(Path);\r\n\r\nexport default SausagePath;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { calculateTextPosition } from 'zrender/lib/contain/text';\r\nimport { isArray } from 'zrender/lib/core/util';\r\nexport function createSectorCalculateTextPosition(positionMapping, opts) {\r\n  opts = opts || {};\r\n  var isRoundCap = opts.isRoundCap;\r\n  return function (out, opts, boundingRect) {\r\n    var textPosition = opts.position;\r\n\r\n    if (!textPosition || textPosition instanceof Array) {\r\n      return calculateTextPosition(out, opts, boundingRect);\r\n    }\r\n\r\n    var mappedSectorPosition = positionMapping(textPosition);\r\n    var distance = opts.distance != null ? opts.distance : 5;\r\n    var sector = this.shape;\r\n    var cx = sector.cx;\r\n    var cy = sector.cy;\r\n    var r = sector.r;\r\n    var r0 = sector.r0;\r\n    var middleR = (r + r0) / 2;\r\n    var startAngle = sector.startAngle;\r\n    var endAngle = sector.endAngle;\r\n    var middleAngle = (startAngle + endAngle) / 2;\r\n    var extraDist = isRoundCap ? Math.abs(r - r0) / 2 : 0;\r\n    var mathCos = Math.cos;\r\n    var mathSin = Math.sin; // base position: top-left\r\n\r\n    var x = cx + r * mathCos(startAngle);\r\n    var y = cy + r * mathSin(startAngle);\r\n    var textAlign = 'left';\r\n    var textVerticalAlign = 'top';\r\n\r\n    switch (mappedSectorPosition) {\r\n      case 'startArc':\r\n        x = cx + (r0 - distance) * mathCos(middleAngle);\r\n        y = cy + (r0 - distance) * mathSin(middleAngle);\r\n        textAlign = 'center';\r\n        textVerticalAlign = 'top';\r\n        break;\r\n\r\n      case 'insideStartArc':\r\n        x = cx + (r0 + distance) * mathCos(middleAngle);\r\n        y = cy + (r0 + distance) * mathSin(middleAngle);\r\n        textAlign = 'center';\r\n        textVerticalAlign = 'bottom';\r\n        break;\r\n\r\n      case 'startAngle':\r\n        x = cx + middleR * mathCos(startAngle) + adjustAngleDistanceX(startAngle, distance + extraDist, false);\r\n        y = cy + middleR * mathSin(startAngle) + adjustAngleDistanceY(startAngle, distance + extraDist, false);\r\n        textAlign = 'right';\r\n        textVerticalAlign = 'middle';\r\n        break;\r\n\r\n      case 'insideStartAngle':\r\n        x = cx + middleR * mathCos(startAngle) + adjustAngleDistanceX(startAngle, -distance + extraDist, false);\r\n        y = cy + middleR * mathSin(startAngle) + adjustAngleDistanceY(startAngle, -distance + extraDist, false);\r\n        textAlign = 'left';\r\n        textVerticalAlign = 'middle';\r\n        break;\r\n\r\n      case 'middle':\r\n        x = cx + middleR * mathCos(middleAngle);\r\n        y = cy + middleR * mathSin(middleAngle);\r\n        textAlign = 'center';\r\n        textVerticalAlign = 'middle';\r\n        break;\r\n\r\n      case 'endArc':\r\n        x = cx + (r + distance) * mathCos(middleAngle);\r\n        y = cy + (r + distance) * mathSin(middleAngle);\r\n        textAlign = 'center';\r\n        textVerticalAlign = 'bottom';\r\n        break;\r\n\r\n      case 'insideEndArc':\r\n        x = cx + (r - distance) * mathCos(middleAngle);\r\n        y = cy + (r - distance) * mathSin(middleAngle);\r\n        textAlign = 'center';\r\n        textVerticalAlign = 'top';\r\n        break;\r\n\r\n      case 'endAngle':\r\n        x = cx + middleR * mathCos(endAngle) + adjustAngleDistanceX(endAngle, distance + extraDist, true);\r\n        y = cy + middleR * mathSin(endAngle) + adjustAngleDistanceY(endAngle, distance + extraDist, true);\r\n        textAlign = 'left';\r\n        textVerticalAlign = 'middle';\r\n        break;\r\n\r\n      case 'insideEndAngle':\r\n        x = cx + middleR * mathCos(endAngle) + adjustAngleDistanceX(endAngle, -distance + extraDist, true);\r\n        y = cy + middleR * mathSin(endAngle) + adjustAngleDistanceY(endAngle, -distance + extraDist, true);\r\n        textAlign = 'right';\r\n        textVerticalAlign = 'middle';\r\n        break;\r\n\r\n      default:\r\n        return calculateTextPosition(out, opts, boundingRect);\r\n    }\r\n\r\n    out = out || {};\r\n    out.x = x;\r\n    out.y = y;\r\n    out.align = textAlign;\r\n    out.verticalAlign = textVerticalAlign;\r\n    return out;\r\n  };\r\n}\r\nexport function setSectorTextRotation(sector, textPosition, positionMapping, rotateType) {\r\n  if (typeof rotateType === 'number') {\r\n    // user-set rotation\r\n    sector.setTextConfig({\r\n      rotation: rotateType\r\n    });\r\n    return;\r\n  } else if (isArray(textPosition)) {\r\n    // user-set position, use 0 as auto rotation\r\n    sector.setTextConfig({\r\n      rotation: 0\r\n    });\r\n    return;\r\n  }\r\n\r\n  var shape = sector.shape;\r\n  var startAngle = shape.clockwise ? shape.startAngle : shape.endAngle;\r\n  var endAngle = shape.clockwise ? shape.endAngle : shape.startAngle;\r\n  var middleAngle = (startAngle + endAngle) / 2;\r\n  var anchorAngle;\r\n  var mappedSectorPosition = positionMapping(textPosition);\r\n\r\n  switch (mappedSectorPosition) {\r\n    case 'startArc':\r\n    case 'insideStartArc':\r\n    case 'middle':\r\n    case 'insideEndArc':\r\n    case 'endArc':\r\n      anchorAngle = middleAngle;\r\n      break;\r\n\r\n    case 'startAngle':\r\n    case 'insideStartAngle':\r\n      anchorAngle = startAngle;\r\n      break;\r\n\r\n    case 'endAngle':\r\n    case 'insideEndAngle':\r\n      anchorAngle = endAngle;\r\n      break;\r\n\r\n    default:\r\n      sector.setTextConfig({\r\n        rotation: 0\r\n      });\r\n      return;\r\n  }\r\n\r\n  var rotate = Math.PI * 1.5 - anchorAngle;\r\n  /**\r\n   * TODO: labels with rotate > Math.PI / 2 should be rotate another\r\n   * half round flipped to increase readability. However, only middle\r\n   * position supports this for now, because in other positions, the\r\n   * anchor point is not at the center of the text, so the positions\r\n   * after rotating is not as expected.\r\n   */\r\n\r\n  if (mappedSectorPosition === 'middle' && rotate > Math.PI / 2 && rotate < Math.PI * 1.5) {\r\n    rotate -= Math.PI;\r\n  }\r\n\r\n  sector.setTextConfig({\r\n    rotation: rotate\r\n  });\r\n}\r\n\r\nfunction adjustAngleDistanceX(angle, distance, isEnd) {\r\n  return distance * Math.sin(angle) * (isEnd ? -1 : 1);\r\n}\r\n\r\nfunction adjustAngleDistanceY(angle, distance, isEnd) {\r\n  return distance * Math.cos(angle) * (isEnd ? 1 : -1);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport Path from 'zrender/lib/graphic/Path';\r\nimport Group from 'zrender/lib/graphic/Group';\r\nimport { extend, each, map } from 'zrender/lib/core/util';\r\nimport { Rect, Sector, updateProps, initProps, removeElementWithFadeOut } from '../../util/graphic';\r\nimport { getECData } from '../../util/innerStore';\r\nimport { enableHoverEmphasis, setStatesStylesFromModel } from '../../util/states';\r\nimport { setLabelStyle, getLabelStatesModels, setLabelValueAnimation, labelInner } from '../../label/labelStyle';\r\nimport { throttle } from '../../util/throttle';\r\nimport { createClipPath } from '../helper/createClipPathFromCoordSys';\r\nimport Sausage from '../../util/shape/sausage';\r\nimport ChartView from '../../view/Chart';\r\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem';\r\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper';\r\nimport { warn } from '../../util/log';\r\nimport { createSectorCalculateTextPosition, setSectorTextRotation } from '../../label/sectorLabel';\r\nimport { saveOldStyle } from '../../animation/basicTrasition';\r\nvar _eventPos = [0, 0];\r\nvar mathMax = Math.max;\r\nvar mathMin = Math.min;\r\n\r\nfunction getClipArea(coord, data) {\r\n  var coordSysClipArea = coord.getArea && coord.getArea();\r\n\r\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\r\n    var baseAxis = coord.getBaseAxis(); // When boundaryGap is false or using time axis. bar may exceed the grid.\r\n    // We should not clip this part.\r\n    // See test/bar2.html\r\n\r\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\r\n      var expandWidth = data.getLayout('bandWidth');\r\n\r\n      if (baseAxis.isHorizontal()) {\r\n        coordSysClipArea.x -= expandWidth;\r\n        coordSysClipArea.width += expandWidth * 2;\r\n      } else {\r\n        coordSysClipArea.y -= expandWidth;\r\n        coordSysClipArea.height += expandWidth * 2;\r\n      }\r\n    }\r\n  }\r\n\r\n  return coordSysClipArea;\r\n}\r\n\r\nvar BarView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(BarView, _super);\r\n\r\n  function BarView() {\r\n    var _this = _super.call(this) || this;\r\n\r\n    _this.type = BarView.type;\r\n    _this._isFirstFrame = true;\r\n    return _this;\r\n  }\r\n\r\n  BarView.prototype.render = function (seriesModel, ecModel, api, payload) {\r\n    this._model = seriesModel;\r\n\r\n    this._removeOnRenderedListener(api);\r\n\r\n    this._updateDrawMode(seriesModel);\r\n\r\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\r\n\r\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\r\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api, payload);\r\n    } else if (process.env.NODE_ENV !== 'production') {\r\n      warn('Only cartesian2d and polar supported for bar.');\r\n    }\r\n  };\r\n\r\n  BarView.prototype.incrementalPrepareRender = function (seriesModel) {\r\n    this._clear();\r\n\r\n    this._updateDrawMode(seriesModel); // incremental also need to clip, otherwise might be overlow.\r\n    // But must not set clip in each frame, otherwise all of the children will be marked redraw.\r\n\r\n\r\n    this._updateLargeClip(seriesModel);\r\n  };\r\n\r\n  BarView.prototype.incrementalRender = function (params, seriesModel) {\r\n    // Do not support progressive in normal mode.\r\n    this._incrementalRenderLarge(params, seriesModel);\r\n  };\r\n\r\n  BarView.prototype._updateDrawMode = function (seriesModel) {\r\n    var isLargeDraw = seriesModel.pipelineContext.large;\r\n\r\n    if (this._isLargeDraw == null || isLargeDraw !== this._isLargeDraw) {\r\n      this._isLargeDraw = isLargeDraw;\r\n\r\n      this._clear();\r\n    }\r\n  };\r\n\r\n  BarView.prototype._renderNormal = function (seriesModel, ecModel, api, payload) {\r\n    var group = this.group;\r\n    var data = seriesModel.getData();\r\n    var oldData = this._data;\r\n    var coord = seriesModel.coordinateSystem;\r\n    var baseAxis = coord.getBaseAxis();\r\n    var isHorizontalOrRadial;\r\n\r\n    if (coord.type === 'cartesian2d') {\r\n      isHorizontalOrRadial = baseAxis.isHorizontal();\r\n    } else if (coord.type === 'polar') {\r\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\r\n    }\r\n\r\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\r\n    var realtimeSortCfg = shouldRealtimeSort(seriesModel, coord);\r\n\r\n    if (realtimeSortCfg) {\r\n      this._enableRealtimeSort(realtimeSortCfg, data, api);\r\n    }\r\n\r\n    var needsClip = seriesModel.get('clip', true) || realtimeSortCfg;\r\n    var coordSysClipArea = getClipArea(coord, data); // If there is clipPath created in large mode. Remove it.\r\n\r\n    group.removeClipPath(); // We don't use clipPath in normal mode because we needs a perfect animation\r\n    // And don't want the label are clipped.\r\n\r\n    var roundCap = seriesModel.get('roundCap', true);\r\n    var drawBackground = seriesModel.get('showBackground', true);\r\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\r\n    var barBorderRadius = backgroundModel.get('borderRadius') || 0;\r\n    var bgEls = [];\r\n    var oldBgEls = this._backgroundEls;\r\n    var isInitSort = payload && payload.isInitSort;\r\n    var isChangeOrder = payload && payload.type === 'changeAxisOrder';\r\n\r\n    function createBackground(dataIndex) {\r\n      var bgLayout = getLayout[coord.type](data, dataIndex);\r\n      var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, bgLayout);\r\n      bgEl.useStyle(backgroundModel.getItemStyle()); // Only cartesian2d support borderRadius.\r\n\r\n      if (coord.type === 'cartesian2d') {\r\n        bgEl.setShape('r', barBorderRadius);\r\n      }\r\n\r\n      bgEls[dataIndex] = bgEl;\r\n      return bgEl;\r\n    }\r\n\r\n    ;\r\n    data.diff(oldData).add(function (dataIndex) {\r\n      var itemModel = data.getItemModel(dataIndex);\r\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\r\n\r\n      if (drawBackground) {\r\n        createBackground(dataIndex);\r\n      } // If dataZoom in filteMode: 'empty', the baseValue can be set as NaN in \"axisProxy\".\r\n\r\n\r\n      if (!data.hasValue(dataIndex) || !isValidLayout[coord.type](layout)) {\r\n        return;\r\n      }\r\n\r\n      var isClipped = false;\r\n\r\n      if (needsClip) {\r\n        // Clip will modify the layout params.\r\n        // And return a boolean to determine if the shape are fully clipped.\r\n        isClipped = clip[coord.type](coordSysClipArea, layout);\r\n      }\r\n\r\n      var el = elementCreator[coord.type](seriesModel, data, dataIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, false, roundCap);\r\n\r\n      if (realtimeSortCfg) {\r\n        /**\r\n         * Force label animation because even if the element is\r\n         * ignored because it's clipped, it may not be clipped after\r\n         * changing order. Then, if not using forceLabelAnimation,\r\n         * the label animation was never started, in which case,\r\n         * the label will be the final value and doesn't have label\r\n         * animation.\r\n         */\r\n        el.forceLabelAnimation = true;\r\n      }\r\n\r\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\r\n\r\n      if (isInitSort) {\r\n        el.attr({\r\n          shape: layout\r\n        });\r\n      } else if (realtimeSortCfg) {\r\n        updateRealtimeAnimation(realtimeSortCfg, animationModel, el, layout, dataIndex, isHorizontalOrRadial, false, false);\r\n      } else {\r\n        initProps(el, {\r\n          shape: layout\r\n        }, seriesModel, dataIndex);\r\n      }\r\n\r\n      data.setItemGraphicEl(dataIndex, el);\r\n      group.add(el);\r\n      el.ignore = isClipped;\r\n    }).update(function (newIndex, oldIndex) {\r\n      var itemModel = data.getItemModel(newIndex);\r\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\r\n\r\n      if (drawBackground) {\r\n        var bgEl = void 0;\r\n\r\n        if (oldBgEls.length === 0) {\r\n          bgEl = createBackground(oldIndex);\r\n        } else {\r\n          bgEl = oldBgEls[oldIndex];\r\n          bgEl.useStyle(backgroundModel.getItemStyle()); // Only cartesian2d support borderRadius.\r\n\r\n          if (coord.type === 'cartesian2d') {\r\n            bgEl.setShape('r', barBorderRadius);\r\n          }\r\n\r\n          bgEls[newIndex] = bgEl;\r\n        }\r\n\r\n        var bgLayout = getLayout[coord.type](data, newIndex);\r\n        var shape = createBackgroundShape(isHorizontalOrRadial, bgLayout, coord);\r\n        updateProps(bgEl, {\r\n          shape: shape\r\n        }, animationModel, newIndex);\r\n      }\r\n\r\n      var el = oldData.getItemGraphicEl(oldIndex);\r\n\r\n      if (!data.hasValue(newIndex) || !isValidLayout[coord.type](layout)) {\r\n        group.remove(el);\r\n        return;\r\n      }\r\n\r\n      var isClipped = false;\r\n\r\n      if (needsClip) {\r\n        isClipped = clip[coord.type](coordSysClipArea, layout);\r\n\r\n        if (isClipped) {\r\n          group.remove(el);\r\n        }\r\n      }\r\n\r\n      if (!el) {\r\n        el = elementCreator[coord.type](seriesModel, data, newIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, !!el, roundCap);\r\n      } else {\r\n        saveOldStyle(el);\r\n      }\r\n\r\n      if (realtimeSortCfg) {\r\n        el.forceLabelAnimation = true;\r\n      }\r\n\r\n      if (isChangeOrder) {\r\n        var textEl = el.getTextContent();\r\n\r\n        if (textEl) {\r\n          var labelInnerStore = labelInner(textEl);\r\n\r\n          if (labelInnerStore.prevValue != null) {\r\n            /**\r\n             * Set preValue to be value so that no new label\r\n             * should be started, otherwise, it will take a full\r\n             * `animationDurationUpdate` time to finish the\r\n             * animation, which is not expected.\r\n             */\r\n            labelInnerStore.prevValue = labelInnerStore.value;\r\n          }\r\n        }\r\n      } // Not change anything if only order changed.\r\n      // Especially not change label.\r\n\r\n\r\n      if (!isChangeOrder) {\r\n        updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\r\n      }\r\n\r\n      if (isInitSort) {\r\n        el.attr({\r\n          shape: layout\r\n        });\r\n      } else if (realtimeSortCfg) {\r\n        updateRealtimeAnimation(realtimeSortCfg, animationModel, el, layout, newIndex, isHorizontalOrRadial, true, isChangeOrder);\r\n      } else {\r\n        updateProps(el, {\r\n          shape: layout\r\n        }, seriesModel, newIndex, null);\r\n      }\r\n\r\n      data.setItemGraphicEl(newIndex, el);\r\n      el.ignore = isClipped;\r\n      group.add(el);\r\n    }).remove(function (dataIndex) {\r\n      var el = oldData.getItemGraphicEl(dataIndex);\r\n      el && removeElementWithFadeOut(el, seriesModel, dataIndex);\r\n    }).execute();\r\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group());\r\n    bgGroup.removeAll();\r\n\r\n    for (var i = 0; i < bgEls.length; ++i) {\r\n      bgGroup.add(bgEls[i]);\r\n    }\r\n\r\n    group.add(bgGroup);\r\n    this._backgroundEls = bgEls;\r\n    this._data = data;\r\n  };\r\n\r\n  BarView.prototype._renderLarge = function (seriesModel, ecModel, api) {\r\n    this._clear();\r\n\r\n    createLarge(seriesModel, this.group);\r\n\r\n    this._updateLargeClip(seriesModel);\r\n  };\r\n\r\n  BarView.prototype._incrementalRenderLarge = function (params, seriesModel) {\r\n    this._removeBackground();\r\n\r\n    createLarge(seriesModel, this.group, true);\r\n  };\r\n\r\n  BarView.prototype._updateLargeClip = function (seriesModel) {\r\n    // Use clipPath in large mode.\r\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\r\n\r\n    if (clipPath) {\r\n      this.group.setClipPath(clipPath);\r\n    } else {\r\n      this.group.removeClipPath();\r\n    }\r\n  };\r\n\r\n  BarView.prototype._enableRealtimeSort = function (realtimeSortCfg, data, api) {\r\n    var _this = this; // If no data in the first frame, wait for data to initSort\r\n\r\n\r\n    if (!data.count()) {\r\n      return;\r\n    }\r\n\r\n    var baseAxis = realtimeSortCfg.baseAxis;\r\n\r\n    if (this._isFirstFrame) {\r\n      this._dispatchInitSort(data, realtimeSortCfg, api);\r\n\r\n      this._isFirstFrame = false;\r\n    } else {\r\n      var orderMapping_1 = function (idx) {\r\n        var el = data.getItemGraphicEl(idx);\r\n\r\n        if (el) {\r\n          var shape = el.shape; // If data is NaN, shape.xxx may be NaN, so use || 0 here in case\r\n\r\n          return (baseAxis.isHorizontal() // The result should be consistent with the initial sort by data value.\r\n          // Do not support the case that both positive and negative exist.\r\n          ? Math.abs(shape.height) : Math.abs(shape.width)) || 0;\r\n        } else {\r\n          return 0;\r\n        }\r\n      };\r\n\r\n      this._onRendered = function () {\r\n        _this._updateSortWithinSameData(data, orderMapping_1, baseAxis, api);\r\n      };\r\n\r\n      api.getZr().on('rendered', this._onRendered);\r\n    }\r\n  };\r\n\r\n  BarView.prototype._dataSort = function (data, baseAxis, orderMapping) {\r\n    var info = [];\r\n    data.each(data.mapDimension(baseAxis.dim), function (ordinalNumber, dataIdx) {\r\n      var mappedValue = orderMapping(dataIdx);\r\n      mappedValue = mappedValue == null ? NaN : mappedValue;\r\n      info.push({\r\n        dataIndex: dataIdx,\r\n        mappedValue: mappedValue,\r\n        ordinalNumber: ordinalNumber\r\n      });\r\n    });\r\n    info.sort(function (a, b) {\r\n      // If NaN, it will be treated as min val.\r\n      return b.mappedValue - a.mappedValue;\r\n    });\r\n    return {\r\n      ordinalNumbers: map(info, function (item) {\r\n        return item.ordinalNumber;\r\n      })\r\n    };\r\n  };\r\n\r\n  BarView.prototype._isOrderChangedWithinSameData = function (data, orderMapping, baseAxis) {\r\n    var scale = baseAxis.scale;\r\n    var ordinalDataDim = data.mapDimension(baseAxis.dim);\r\n    var lastValue = Number.MAX_VALUE;\r\n\r\n    for (var tickNum = 0, len = scale.getOrdinalMeta().categories.length; tickNum < len; ++tickNum) {\r\n      var rawIdx = data.rawIndexOf(ordinalDataDim, scale.getRawOrdinalNumber(tickNum));\r\n      var value = rawIdx < 0 // If some tick have no bar, the tick will be treated as min.\r\n      ? Number.MIN_VALUE // PENDING: if dataZoom on baseAxis exits, is it a performance issue?\r\n      : orderMapping(data.indexOfRawIndex(rawIdx));\r\n\r\n      if (value > lastValue) {\r\n        return true;\r\n      }\r\n\r\n      lastValue = value;\r\n    }\r\n\r\n    return false;\r\n  };\r\n  /*\r\n   * Consider the case when A and B changed order, whose representing\r\n   * bars are both out of sight, we don't wish to trigger reorder action\r\n   * as long as the order in the view doesn't change.\r\n   */\r\n\r\n\r\n  BarView.prototype._isOrderDifferentInView = function (orderInfo, baseAxis) {\r\n    var scale = baseAxis.scale;\r\n    var extent = scale.getExtent();\r\n    var tickNum = Math.max(0, extent[0]);\r\n    var tickMax = Math.min(extent[1], scale.getOrdinalMeta().categories.length - 1);\r\n\r\n    for (; tickNum <= tickMax; ++tickNum) {\r\n      if (orderInfo.ordinalNumbers[tickNum] !== scale.getRawOrdinalNumber(tickNum)) {\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\n  BarView.prototype._updateSortWithinSameData = function (data, orderMapping, baseAxis, api) {\r\n    if (!this._isOrderChangedWithinSameData(data, orderMapping, baseAxis)) {\r\n      return;\r\n    }\r\n\r\n    var sortInfo = this._dataSort(data, baseAxis, orderMapping);\r\n\r\n    if (this._isOrderDifferentInView(sortInfo, baseAxis)) {\r\n      this._removeOnRenderedListener(api);\r\n\r\n      api.dispatchAction({\r\n        type: 'changeAxisOrder',\r\n        componentType: baseAxis.dim + 'Axis',\r\n        axisId: baseAxis.index,\r\n        sortInfo: sortInfo\r\n      });\r\n    }\r\n  };\r\n\r\n  BarView.prototype._dispatchInitSort = function (data, realtimeSortCfg, api) {\r\n    var baseAxis = realtimeSortCfg.baseAxis;\r\n\r\n    var sortResult = this._dataSort(data, baseAxis, function (dataIdx) {\r\n      return data.get(data.mapDimension(realtimeSortCfg.otherAxis.dim), dataIdx);\r\n    });\r\n\r\n    api.dispatchAction({\r\n      type: 'changeAxisOrder',\r\n      componentType: baseAxis.dim + 'Axis',\r\n      isInitSort: true,\r\n      axisId: baseAxis.index,\r\n      sortInfo: sortResult\r\n    });\r\n  };\r\n\r\n  BarView.prototype.remove = function (ecModel, api) {\r\n    this._clear(this._model);\r\n\r\n    this._removeOnRenderedListener(api);\r\n  };\r\n\r\n  BarView.prototype.dispose = function (ecModel, api) {\r\n    this._removeOnRenderedListener(api);\r\n  };\r\n\r\n  BarView.prototype._removeOnRenderedListener = function (api) {\r\n    if (this._onRendered) {\r\n      api.getZr().off('rendered', this._onRendered);\r\n      this._onRendered = null;\r\n    }\r\n  };\r\n\r\n  BarView.prototype._clear = function (model) {\r\n    var group = this.group;\r\n    var data = this._data;\r\n\r\n    if (model && model.isAnimationEnabled() && data && !this._isLargeDraw) {\r\n      this._removeBackground();\r\n\r\n      this._backgroundEls = [];\r\n      data.eachItemGraphicEl(function (el) {\r\n        removeElementWithFadeOut(el, model, getECData(el).dataIndex);\r\n      });\r\n    } else {\r\n      group.removeAll();\r\n    }\r\n\r\n    this._data = null;\r\n    this._isFirstFrame = true;\r\n  };\r\n\r\n  BarView.prototype._removeBackground = function () {\r\n    this.group.remove(this._backgroundGroup);\r\n    this._backgroundGroup = null;\r\n  };\r\n\r\n  BarView.type = 'bar';\r\n  return BarView;\r\n}(ChartView);\r\n\r\nvar clip = {\r\n  cartesian2d: function (coordSysBoundingRect, layout) {\r\n    var signWidth = layout.width < 0 ? -1 : 1;\r\n    var signHeight = layout.height < 0 ? -1 : 1; // Needs positive width and height\r\n\r\n    if (signWidth < 0) {\r\n      layout.x += layout.width;\r\n      layout.width = -layout.width;\r\n    }\r\n\r\n    if (signHeight < 0) {\r\n      layout.y += layout.height;\r\n      layout.height = -layout.height;\r\n    }\r\n\r\n    var coordSysX2 = coordSysBoundingRect.x + coordSysBoundingRect.width;\r\n    var coordSysY2 = coordSysBoundingRect.y + coordSysBoundingRect.height;\r\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\r\n    var x2 = mathMin(layout.x + layout.width, coordSysX2);\r\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\r\n    var y2 = mathMin(layout.y + layout.height, coordSysY2);\r\n    var xClipped = x2 < x;\r\n    var yClipped = y2 < y; // When xClipped or yClipped, the element will be marked as `ignore`.\r\n    // But we should also place the element at the edge of the coord sys bounding rect.\r\n    // Beause if data changed and the bar show again, its transition animaiton\r\n    // will begin at this place.\r\n\r\n    layout.x = xClipped && x > coordSysX2 ? x2 : x;\r\n    layout.y = yClipped && y > coordSysY2 ? y2 : y;\r\n    layout.width = xClipped ? 0 : x2 - x;\r\n    layout.height = yClipped ? 0 : y2 - y; // Reverse back\r\n\r\n    if (signWidth < 0) {\r\n      layout.x += layout.width;\r\n      layout.width = -layout.width;\r\n    }\r\n\r\n    if (signHeight < 0) {\r\n      layout.y += layout.height;\r\n      layout.height = -layout.height;\r\n    }\r\n\r\n    return xClipped || yClipped;\r\n  },\r\n  polar: function (coordSysClipArea, layout) {\r\n    var signR = layout.r0 <= layout.r ? 1 : -1; // Make sure r is larger than r0\r\n\r\n    if (signR < 0) {\r\n      var tmp = layout.r;\r\n      layout.r = layout.r0;\r\n      layout.r0 = tmp;\r\n    }\r\n\r\n    var r = mathMin(layout.r, coordSysClipArea.r);\r\n    var r0 = mathMax(layout.r0, coordSysClipArea.r0);\r\n    layout.r = r;\r\n    layout.r0 = r0;\r\n    var clipped = r - r0 < 0; // Reverse back\r\n\r\n    if (signR < 0) {\r\n      var tmp = layout.r;\r\n      layout.r = layout.r0;\r\n      layout.r0 = tmp;\r\n    }\r\n\r\n    return clipped;\r\n  }\r\n};\r\nvar elementCreator = {\r\n  cartesian2d: function (seriesModel, data, newIndex, layout, isHorizontal, animationModel, axisModel, isUpdate, roundCap) {\r\n    var rect = new Rect({\r\n      shape: extend({}, layout),\r\n      z2: 1\r\n    });\r\n    rect.__dataIndex = newIndex;\r\n    rect.name = 'item';\r\n\r\n    if (animationModel) {\r\n      var rectShape = rect.shape;\r\n      var animateProperty = isHorizontal ? 'height' : 'width';\r\n      rectShape[animateProperty] = 0;\r\n    }\r\n\r\n    return rect;\r\n  },\r\n  polar: function (seriesModel, data, newIndex, layout, isRadial, animationModel, axisModel, isUpdate, roundCap) {\r\n    var ShapeClass = !isRadial && roundCap ? Sausage : Sector;\r\n    var sector = new ShapeClass({\r\n      shape: layout,\r\n      z2: 1\r\n    });\r\n    sector.name = 'item';\r\n    var positionMap = createPolarPositionMapping(isRadial);\r\n    sector.calculateTextPosition = createSectorCalculateTextPosition(positionMap, {\r\n      isRoundCap: ShapeClass === Sausage\r\n    }); // Animation\r\n\r\n    if (animationModel) {\r\n      var sectorShape = sector.shape;\r\n      var animateProperty = isRadial ? 'r' : 'endAngle';\r\n      var animateTarget = {};\r\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\r\n      animateTarget[animateProperty] = layout[animateProperty];\r\n      (isUpdate ? updateProps : initProps)(sector, {\r\n        shape: animateTarget // __value: typeof dataValue === 'string' ? parseInt(dataValue, 10) : dataValue\r\n\r\n      }, animationModel);\r\n    }\r\n\r\n    return sector;\r\n  }\r\n};\r\n\r\nfunction shouldRealtimeSort(seriesModel, coordSys) {\r\n  var realtimeSortOption = seriesModel.get('realtimeSort', true);\r\n  var baseAxis = coordSys.getBaseAxis();\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (realtimeSortOption) {\r\n      if (baseAxis.type !== 'category') {\r\n        warn('`realtimeSort` will not work because this bar series is not based on a category axis.');\r\n      }\r\n\r\n      if (coordSys.type !== 'cartesian2d') {\r\n        warn('`realtimeSort` will not work because this bar series is not on cartesian2d.');\r\n      }\r\n    }\r\n  }\r\n\r\n  if (realtimeSortOption && baseAxis.type === 'category' && coordSys.type === 'cartesian2d') {\r\n    return {\r\n      baseAxis: baseAxis,\r\n      otherAxis: coordSys.getOtherAxis(baseAxis)\r\n    };\r\n  }\r\n}\r\n\r\nfunction updateRealtimeAnimation(realtimeSortCfg, seriesAnimationModel, el, layout, newIndex, isHorizontal, isUpdate, isChangeOrder) {\r\n  var seriesTarget;\r\n  var axisTarget;\r\n\r\n  if (isHorizontal) {\r\n    axisTarget = {\r\n      x: layout.x,\r\n      width: layout.width\r\n    };\r\n    seriesTarget = {\r\n      y: layout.y,\r\n      height: layout.height\r\n    };\r\n  } else {\r\n    axisTarget = {\r\n      y: layout.y,\r\n      height: layout.height\r\n    };\r\n    seriesTarget = {\r\n      x: layout.x,\r\n      width: layout.width\r\n    };\r\n  }\r\n\r\n  if (!isChangeOrder) {\r\n    // Keep the original growth animation if only axis order changed.\r\n    // Not start a new animation.\r\n    (isUpdate ? updateProps : initProps)(el, {\r\n      shape: seriesTarget\r\n    }, seriesAnimationModel, newIndex, null);\r\n  }\r\n\r\n  var axisAnimationModel = seriesAnimationModel ? realtimeSortCfg.baseAxis.model : null;\r\n  (isUpdate ? updateProps : initProps)(el, {\r\n    shape: axisTarget\r\n  }, axisAnimationModel, newIndex);\r\n}\r\n\r\nfunction checkPropertiesNotValid(obj, props) {\r\n  for (var i = 0; i < props.length; i++) {\r\n    if (!isFinite(obj[props[i]])) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nvar rectPropties = ['x', 'y', 'width', 'height'];\r\nvar polarPropties = ['cx', 'cy', 'r', 'startAngle', 'endAngle'];\r\nvar isValidLayout = {\r\n  cartesian2d: function (layout) {\r\n    return !checkPropertiesNotValid(layout, rectPropties);\r\n  },\r\n  polar: function (layout) {\r\n    return !checkPropertiesNotValid(layout, polarPropties);\r\n  }\r\n};\r\nvar getLayout = {\r\n  // itemModel is only used to get borderWidth, which is not needed\r\n  // when calculating bar background layout.\r\n  cartesian2d: function (data, dataIndex, itemModel) {\r\n    var layout = data.getItemLayout(dataIndex);\r\n    var fixedLineWidth = itemModel ? getLineWidth(itemModel, layout) : 0; // fix layout with lineWidth\r\n\r\n    var signX = layout.width > 0 ? 1 : -1;\r\n    var signY = layout.height > 0 ? 1 : -1;\r\n    return {\r\n      x: layout.x + signX * fixedLineWidth / 2,\r\n      y: layout.y + signY * fixedLineWidth / 2,\r\n      width: layout.width - signX * fixedLineWidth,\r\n      height: layout.height - signY * fixedLineWidth\r\n    };\r\n  },\r\n  polar: function (data, dataIndex, itemModel) {\r\n    var layout = data.getItemLayout(dataIndex);\r\n    return {\r\n      cx: layout.cx,\r\n      cy: layout.cy,\r\n      r0: layout.r0,\r\n      r: layout.r,\r\n      startAngle: layout.startAngle,\r\n      endAngle: layout.endAngle,\r\n      clockwise: layout.clockwise\r\n    };\r\n  }\r\n};\r\n\r\nfunction isZeroOnPolar(layout) {\r\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\r\n}\r\n\r\nfunction createPolarPositionMapping(isRadial) {\r\n  return function (isRadial) {\r\n    var arcOrAngle = isRadial ? 'Arc' : 'Angle';\r\n    return function (position) {\r\n      switch (position) {\r\n        case 'start':\r\n        case 'insideStart':\r\n        case 'end':\r\n        case 'insideEnd':\r\n          return position + arcOrAngle;\r\n\r\n        default:\r\n          return position;\r\n      }\r\n    };\r\n  }(isRadial);\r\n}\r\n\r\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, isPolar) {\r\n  var style = data.getItemVisual(dataIndex, 'style');\r\n\r\n  if (!isPolar) {\r\n    el.setShape('r', itemModel.get(['itemStyle', 'borderRadius']) || 0);\r\n  }\r\n\r\n  el.useStyle(style);\r\n  var cursorStyle = itemModel.getShallow('cursor');\r\n  cursorStyle && el.attr('cursor', cursorStyle);\r\n  var labelPositionOutside = isPolar ? isHorizontalOrRadial ? layout.r >= layout.r0 ? 'endArc' : 'startArc' : layout.endAngle >= layout.startAngle ? 'endAngle' : 'startAngle' : isHorizontalOrRadial ? layout.height >= 0 ? 'bottom' : 'top' : layout.width >= 0 ? 'right' : 'left';\r\n  var labelStatesModels = getLabelStatesModels(itemModel);\r\n  setLabelStyle(el, labelStatesModels, {\r\n    labelFetcher: seriesModel,\r\n    labelDataIndex: dataIndex,\r\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\r\n    inheritColor: style.fill,\r\n    defaultOpacity: style.opacity,\r\n    defaultOutsidePosition: labelPositionOutside\r\n  });\r\n  var label = el.getTextContent();\r\n\r\n  if (isPolar && label) {\r\n    var position = itemModel.get(['label', 'position']);\r\n    el.textConfig.inside = position === 'middle' ? true : null;\r\n    setSectorTextRotation(el, position === 'outside' ? labelPositionOutside : position, createPolarPositionMapping(isHorizontalOrRadial), itemModel.get(['label', 'rotate']));\r\n  }\r\n\r\n  setLabelValueAnimation(label, labelStatesModels, seriesModel.getRawValue(dataIndex), function (value) {\r\n    return getDefaultInterpolatedLabel(data, value);\r\n  });\r\n  var emphasisModel = itemModel.getModel(['emphasis']);\r\n  enableHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\r\n  setStatesStylesFromModel(el, itemModel);\r\n\r\n  if (isZeroOnPolar(layout)) {\r\n    el.style.fill = 'none';\r\n    el.style.stroke = 'none';\r\n    each(el.states, function (state) {\r\n      if (state.style) {\r\n        state.style.fill = state.style.stroke = 'none';\r\n      }\r\n    });\r\n  }\r\n} // In case width or height are too small.\r\n\r\n\r\nfunction getLineWidth(itemModel, rawLayout) {\r\n  // Has no border.\r\n  var borderColor = itemModel.get(['itemStyle', 'borderColor']);\r\n\r\n  if (!borderColor || borderColor === 'none') {\r\n    return 0;\r\n  }\r\n\r\n  var lineWidth = itemModel.get(['itemStyle', 'borderWidth']) || 0; // width or height may be NaN for empty data\r\n\r\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\r\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\r\n  return Math.min(lineWidth, width, height);\r\n}\r\n\r\nvar LagePathShape =\r\n/** @class */\r\nfunction () {\r\n  function LagePathShape() {}\r\n\r\n  return LagePathShape;\r\n}();\r\n\r\nvar LargePath =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(LargePath, _super);\r\n\r\n  function LargePath(opts) {\r\n    var _this = _super.call(this, opts) || this;\r\n\r\n    _this.type = 'largeBar';\r\n    return _this;\r\n  }\r\n\r\n  ;\r\n\r\n  LargePath.prototype.getDefaultShape = function () {\r\n    return new LagePathShape();\r\n  };\r\n\r\n  LargePath.prototype.buildPath = function (ctx, shape) {\r\n    // Drawing lines is more efficient than drawing\r\n    // a whole line or drawing rects.\r\n    var points = shape.points;\r\n    var startPoint = this.__startPoint;\r\n    var baseDimIdx = this.__baseDimIdx;\r\n\r\n    for (var i = 0; i < points.length; i += 2) {\r\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\r\n      ctx.moveTo(startPoint[0], startPoint[1]);\r\n      ctx.lineTo(points[i], points[i + 1]);\r\n    }\r\n  };\r\n\r\n  return LargePath;\r\n}(Path);\r\n\r\nfunction createLarge(seriesModel, group, incremental) {\r\n  // TODO support polar\r\n  var data = seriesModel.getData();\r\n  var startPoint = [];\r\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\r\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\r\n  var largeDataIndices = data.getLayout('largeDataIndices');\r\n  var barWidth = data.getLayout('barWidth');\r\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\r\n  var drawBackground = seriesModel.get('showBackground', true);\r\n\r\n  if (drawBackground) {\r\n    var points = data.getLayout('largeBackgroundPoints');\r\n    var backgroundStartPoint = [];\r\n    backgroundStartPoint[1 - baseDimIdx] = data.getLayout('backgroundStart');\r\n    var bgEl = new LargePath({\r\n      shape: {\r\n        points: points\r\n      },\r\n      incremental: !!incremental,\r\n      silent: true,\r\n      z2: 0\r\n    });\r\n    bgEl.__startPoint = backgroundStartPoint;\r\n    bgEl.__baseDimIdx = baseDimIdx;\r\n    bgEl.__largeDataIndices = largeDataIndices;\r\n    bgEl.__barWidth = barWidth;\r\n    setLargeBackgroundStyle(bgEl, backgroundModel, data);\r\n    group.add(bgEl);\r\n  }\r\n\r\n  var el = new LargePath({\r\n    shape: {\r\n      points: data.getLayout('largePoints')\r\n    },\r\n    incremental: !!incremental\r\n  });\r\n  el.__startPoint = startPoint;\r\n  el.__baseDimIdx = baseDimIdx;\r\n  el.__largeDataIndices = largeDataIndices;\r\n  el.__barWidth = barWidth;\r\n  group.add(el);\r\n  setLargeStyle(el, seriesModel, data); // Enable tooltip and user mouse/touch event handlers.\r\n\r\n  getECData(el).seriesIndex = seriesModel.seriesIndex;\r\n\r\n  if (!seriesModel.get('silent')) {\r\n    el.on('mousedown', largePathUpdateDataIndex);\r\n    el.on('mousemove', largePathUpdateDataIndex);\r\n  }\r\n} // Use throttle to avoid frequently traverse to find dataIndex.\r\n\r\n\r\nvar largePathUpdateDataIndex = throttle(function (event) {\r\n  var largePath = this;\r\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\r\n  getECData(largePath).dataIndex = dataIndex >= 0 ? dataIndex : null;\r\n}, 30, false);\r\n\r\nfunction largePathFindDataIndex(largePath, x, y) {\r\n  var baseDimIdx = largePath.__baseDimIdx;\r\n  var valueDimIdx = 1 - baseDimIdx;\r\n  var points = largePath.shape.points;\r\n  var largeDataIndices = largePath.__largeDataIndices;\r\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\r\n  var startValueVal = largePath.__startPoint[valueDimIdx];\r\n  _eventPos[0] = x;\r\n  _eventPos[1] = y;\r\n  var pointerBaseVal = _eventPos[baseDimIdx];\r\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\r\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\r\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\r\n\r\n  for (var i = 0, len = points.length / 2; i < len; i++) {\r\n    var ii = i * 2;\r\n    var barBaseVal = points[ii + baseDimIdx];\r\n    var barValueVal = points[ii + valueDimIdx];\r\n\r\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\r\n      return largeDataIndices[i];\r\n    }\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\nfunction setLargeStyle(el, seriesModel, data) {\r\n  var globalStyle = data.getVisual('style');\r\n  el.useStyle(extend({}, globalStyle)); // Use stroke instead of fill.\r\n\r\n  el.style.fill = null;\r\n  el.style.stroke = globalStyle.fill;\r\n  el.style.lineWidth = data.getLayout('barWidth');\r\n}\r\n\r\nfunction setLargeBackgroundStyle(el, backgroundModel, data) {\r\n  var borderColor = backgroundModel.get('borderColor') || backgroundModel.get('color');\r\n  var itemStyle = backgroundModel.getItemStyle();\r\n  el.useStyle(itemStyle);\r\n  el.style.fill = null;\r\n  el.style.stroke = borderColor;\r\n  el.style.lineWidth = data.getLayout('barWidth');\r\n}\r\n\r\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\r\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\r\n    var rectShape = layout;\r\n    var coordLayout = coord.getArea();\r\n    return {\r\n      x: isHorizontalOrRadial ? rectShape.x : coordLayout.x,\r\n      y: isHorizontalOrRadial ? coordLayout.y : rectShape.y,\r\n      width: isHorizontalOrRadial ? rectShape.width : coordLayout.width,\r\n      height: isHorizontalOrRadial ? coordLayout.height : rectShape.height\r\n    };\r\n  } else {\r\n    var coordLayout = coord.getArea();\r\n    var sectorShape = layout;\r\n    return {\r\n      cx: coordLayout.cx,\r\n      cy: coordLayout.cy,\r\n      r0: isHorizontalOrRadial ? coordLayout.r0 : sectorShape.r0,\r\n      r: isHorizontalOrRadial ? coordLayout.r : sectorShape.r,\r\n      startAngle: isHorizontalOrRadial ? sectorShape.startAngle : 0,\r\n      endAngle: isHorizontalOrRadial ? sectorShape.endAngle : Math.PI * 2\r\n    };\r\n  }\r\n}\r\n\r\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\r\n  var ElementClz = coord.type === 'polar' ? Sector : Rect;\r\n  return new ElementClz({\r\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\r\n    silent: true,\r\n    z2: 0\r\n  });\r\n}\r\n\r\nexport default BarView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { layout, largeLayout } from '../../layout/barGrid';\r\nimport dataSample from '../../processor/dataSample';\r\nimport BarSeries from './BarSeries';\r\nimport BarView from './BarView';\r\nexport function install(registers) {\r\n  registers.registerChartView(BarView);\r\n  registers.registerSeriesModel(BarSeries);\r\n  registers.registerLayout(registers.PRIORITY.VISUAL.LAYOUT, zrUtil.curry(layout, 'bar')); // Use higher prority to avoid to be blocked by other overall layout, which do not\r\n  // only exist in this module, but probably also exist in other modules, like `barPolar`.\r\n\r\n  registers.registerLayout(registers.PRIORITY.VISUAL.PROGRESSIVE_LAYOUT, largeLayout); // Down sample after filter\r\n\r\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.STATISTIC, dataSample('bar'));\r\n  /**\r\n   * @payload\r\n   * @property {string} [componentType=series]\r\n   * @property {number} [dx]\r\n   * @property {number} [dy]\r\n   * @property {number} [zoom]\r\n   * @property {number} [originX]\r\n   * @property {number} [originY]\r\n   */\r\n\r\n  registers.registerAction({\r\n    type: 'changeAxisOrder',\r\n    event: 'changeAxisOrder',\r\n    update: 'update'\r\n  }, function (payload, ecModel) {\r\n    var componentType = payload.componentType || 'series';\r\n    ecModel.eachComponent({\r\n      mainType: componentType,\r\n      query: payload\r\n    }, function (componentModel) {\r\n      if (payload.sortInfo) {\r\n        componentModel.axis.setCategorySortInfo(payload.sortInfo);\r\n      }\r\n    });\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { parsePercent, linearMap } from '../../util/number';\r\nimport * as layout from '../../util/layout';\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nvar PI2 = Math.PI * 2;\r\nvar RADIAN = Math.PI / 180;\r\n\r\nfunction getViewRect(seriesModel, api) {\r\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\r\n    width: api.getWidth(),\r\n    height: api.getHeight()\r\n  });\r\n}\r\n\r\nexport function getBasicPieLayout(seriesModel, api) {\r\n  var viewRect = getViewRect(seriesModel, api);\r\n  var center = seriesModel.get('center');\r\n  var radius = seriesModel.get('radius');\r\n\r\n  if (!zrUtil.isArray(radius)) {\r\n    radius = [0, radius];\r\n  }\r\n\r\n  if (!zrUtil.isArray(center)) {\r\n    center = [center, center];\r\n  }\r\n\r\n  var width = parsePercent(viewRect.width, api.getWidth());\r\n  var height = parsePercent(viewRect.height, api.getHeight());\r\n  var size = Math.min(width, height);\r\n  var cx = parsePercent(center[0], width) + viewRect.x;\r\n  var cy = parsePercent(center[1], height) + viewRect.y;\r\n  var r0 = parsePercent(radius[0], size / 2);\r\n  var r = parsePercent(radius[1], size / 2);\r\n  return {\r\n    cx: cx,\r\n    cy: cy,\r\n    r0: r0,\r\n    r: r\r\n  };\r\n}\r\nexport default function pieLayout(seriesType, ecModel, api) {\r\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var valueDim = data.mapDimension('value');\r\n    var viewRect = getViewRect(seriesModel, api);\r\n\r\n    var _a = getBasicPieLayout(seriesModel, api),\r\n        cx = _a.cx,\r\n        cy = _a.cy,\r\n        r = _a.r,\r\n        r0 = _a.r0;\r\n\r\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\r\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\r\n    var validDataCount = 0;\r\n    data.each(valueDim, function (value) {\r\n      !isNaN(value) && validDataCount++;\r\n    });\r\n    var sum = data.getSum(valueDim); // Sum may be 0\r\n\r\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\r\n    var clockwise = seriesModel.get('clockwise');\r\n    var roseType = seriesModel.get('roseType');\r\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\r\n\r\n    var extent = data.getDataExtent(valueDim);\r\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\r\n\r\n    var restAngle = PI2;\r\n    var valueSumLargerThanMinAngle = 0;\r\n    var currentAngle = startAngle;\r\n    var dir = clockwise ? 1 : -1;\r\n    data.setLayout({\r\n      viewRect: viewRect,\r\n      r: r\r\n    });\r\n    data.each(valueDim, function (value, idx) {\r\n      var angle;\r\n\r\n      if (isNaN(value)) {\r\n        data.setItemLayout(idx, {\r\n          angle: NaN,\r\n          startAngle: NaN,\r\n          endAngle: NaN,\r\n          clockwise: clockwise,\r\n          cx: cx,\r\n          cy: cy,\r\n          r0: r0,\r\n          r: roseType ? NaN : r\r\n        });\r\n        return;\r\n      } // FIXME \u517C\u5BB9 2.0 \u4F46\u662F roseType \u662F area \u7684\u65F6\u5019\u624D\u662F\u8FD9\u6837\uFF1F\r\n\r\n\r\n      if (roseType !== 'area') {\r\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\r\n      } else {\r\n        angle = PI2 / validDataCount;\r\n      }\r\n\r\n      if (angle < minAngle) {\r\n        angle = minAngle;\r\n        restAngle -= minAngle;\r\n      } else {\r\n        valueSumLargerThanMinAngle += value;\r\n      }\r\n\r\n      var endAngle = currentAngle + dir * angle;\r\n      data.setItemLayout(idx, {\r\n        angle: angle,\r\n        startAngle: currentAngle,\r\n        endAngle: endAngle,\r\n        clockwise: clockwise,\r\n        cx: cx,\r\n        cy: cy,\r\n        r0: r0,\r\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\r\n      });\r\n      currentAngle = endAngle;\r\n    }); // Some sector is constrained by minAngle\r\n    // Rest sectors needs recalculate angle\r\n\r\n    if (restAngle < PI2 && validDataCount) {\r\n      // Average the angle if rest angle is not enough after all angles is\r\n      // Constrained by minAngle\r\n      if (restAngle <= 1e-3) {\r\n        var angle_1 = PI2 / validDataCount;\r\n        data.each(valueDim, function (value, idx) {\r\n          if (!isNaN(value)) {\r\n            var layout_1 = data.getItemLayout(idx);\r\n            layout_1.angle = angle_1;\r\n            layout_1.startAngle = startAngle + dir * idx * angle_1;\r\n            layout_1.endAngle = startAngle + dir * (idx + 1) * angle_1;\r\n          }\r\n        });\r\n      } else {\r\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\r\n        currentAngle = startAngle;\r\n        data.each(valueDim, function (value, idx) {\r\n          if (!isNaN(value)) {\r\n            var layout_2 = data.getItemLayout(idx);\r\n            var angle = layout_2.angle === minAngle ? minAngle : value * unitRadian;\r\n            layout_2.startAngle = currentAngle;\r\n            layout_2.endAngle = currentAngle + dir * angle;\r\n            currentAngle += dir * angle;\r\n          }\r\n        });\r\n      }\r\n    }\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nexport default function dataFilter(seriesType) {\r\n  return {\r\n    seriesType: seriesType,\r\n    reset: function (seriesModel, ecModel) {\r\n      var legendModels = ecModel.findComponents({\r\n        mainType: 'legend'\r\n      });\r\n\r\n      if (!legendModels || !legendModels.length) {\r\n        return;\r\n      }\r\n\r\n      var data = seriesModel.getData();\r\n      data.filterSelf(function (idx) {\r\n        var name = data.getName(idx); // If in any legend component the status is not selected.\r\n\r\n        for (var i = 0; i < legendModels.length; i++) {\r\n          // @ts-ignore FIXME: LegendModel\r\n          if (!legendModels[i].isSelected(name)) {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        return true;\r\n      });\r\n    }\r\n  };\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// FIXME emphasis label position is not same with normal label position\r\nimport { parsePercent } from '../../util/number';\r\nimport { Point } from '../../util/graphic';\r\nimport { each } from 'zrender/lib/core/util';\r\nimport { limitTurnAngle, limitSurfaceAngle } from '../../label/labelGuideHelper';\r\nimport { shiftLayoutOnY } from '../../label/labelLayoutHelper';\r\nvar RADIAN = Math.PI / 180;\r\n\r\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight, viewLeft, viewTop, farthestX) {\r\n  if (list.length < 2) {\r\n    return;\r\n  }\r\n\r\n  ;\r\n\r\n  function recalculateXOnSemiToAlignOnEllipseCurve(semi) {\r\n    var rB = semi.rB;\r\n    var rB2 = rB * rB;\r\n\r\n    for (var i = 0; i < semi.list.length; i++) {\r\n      var item = semi.list[i];\r\n      var dy = Math.abs(item.label.y - cy); // horizontal r is always same with original r because x is not changed.\r\n\r\n      var rA = r + item.len;\r\n      var rA2 = rA * rA; // Use ellipse implicit function to calculate x\r\n\r\n      var dx = Math.sqrt((1 - Math.abs(dy * dy / rB2)) * rA2);\r\n      item.label.x = cx + (dx + item.len2) * dir;\r\n    }\r\n  } // Adjust X based on the shifted y. Make tight labels aligned on an ellipse curve.\r\n\r\n\r\n  function recalculateX(items) {\r\n    // Extremes of\r\n    var topSemi = {\r\n      list: [],\r\n      maxY: 0\r\n    };\r\n    var bottomSemi = {\r\n      list: [],\r\n      maxY: 0\r\n    };\r\n\r\n    for (var i = 0; i < items.length; i++) {\r\n      if (items[i].labelAlignTo !== 'none') {\r\n        continue;\r\n      }\r\n\r\n      var item = items[i];\r\n      var semi = item.label.y > cy ? bottomSemi : topSemi;\r\n      var dy = Math.abs(item.label.y - cy);\r\n\r\n      if (dy > semi.maxY) {\r\n        var dx = item.label.x - cx - item.len2 * dir; // horizontal r is always same with original r because x is not changed.\r\n\r\n        var rA = r + item.len; // Canculate rB based on the topest / bottemest label.\r\n\r\n        var rB = Math.abs(dx) < rA ? Math.sqrt(dy * dy / (1 - dx * dx / rA / rA)) : rA;\r\n        semi.rB = rB;\r\n        semi.maxY = dy;\r\n      }\r\n\r\n      semi.list.push(item);\r\n    }\r\n\r\n    recalculateXOnSemiToAlignOnEllipseCurve(topSemi);\r\n    recalculateXOnSemiToAlignOnEllipseCurve(bottomSemi);\r\n  }\r\n\r\n  var len = list.length;\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    if (list[i].position === 'outer' && list[i].labelAlignTo === 'labelLine') {\r\n      var dx = list[i].label.x - farthestX;\r\n      list[i].linePoints[1][0] += dx;\r\n      list[i].label.x = farthestX;\r\n    }\r\n  }\r\n\r\n  if (shiftLayoutOnY(list, viewTop, viewTop + viewHeight)) {\r\n    recalculateX(list);\r\n  }\r\n}\r\n\r\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop) {\r\n  var leftList = [];\r\n  var rightList = [];\r\n  var leftmostX = Number.MAX_VALUE;\r\n  var rightmostX = -Number.MAX_VALUE;\r\n\r\n  for (var i = 0; i < labelLayoutList.length; i++) {\r\n    var label = labelLayoutList[i].label;\r\n\r\n    if (isPositionCenter(labelLayoutList[i])) {\r\n      continue;\r\n    }\r\n\r\n    if (label.x < cx) {\r\n      leftmostX = Math.min(leftmostX, label.x);\r\n      leftList.push(labelLayoutList[i]);\r\n    } else {\r\n      rightmostX = Math.max(rightmostX, label.x);\r\n      rightList.push(labelLayoutList[i]);\r\n    }\r\n  }\r\n\r\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight, viewLeft, viewTop, rightmostX);\r\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight, viewLeft, viewTop, leftmostX);\r\n\r\n  for (var i = 0; i < labelLayoutList.length; i++) {\r\n    var layout = labelLayoutList[i];\r\n    var label = layout.label;\r\n\r\n    if (isPositionCenter(layout)) {\r\n      continue;\r\n    }\r\n\r\n    var linePoints = layout.linePoints;\r\n\r\n    if (linePoints) {\r\n      var isAlignToEdge = layout.labelAlignTo === 'edge';\r\n      var realTextWidth = layout.rect.width;\r\n      var targetTextWidth = void 0;\r\n\r\n      if (isAlignToEdge) {\r\n        if (label.x < cx) {\r\n          targetTextWidth = linePoints[2][0] - layout.labelDistance - viewLeft - layout.edgeDistance;\r\n        } else {\r\n          targetTextWidth = viewLeft + viewWidth - layout.edgeDistance - linePoints[2][0] - layout.labelDistance;\r\n        }\r\n      } else {\r\n        if (label.x < cx) {\r\n          targetTextWidth = label.x - viewLeft - layout.bleedMargin;\r\n        } else {\r\n          targetTextWidth = viewLeft + viewWidth - label.x - layout.bleedMargin;\r\n        }\r\n      }\r\n\r\n      if (targetTextWidth < layout.rect.width) {\r\n        // TODOTODO\r\n        // layout.text = textContain.truncateText(layout.text, targetTextWidth, layout.font);\r\n        layout.label.style.width = targetTextWidth;\r\n\r\n        if (layout.labelAlignTo === 'edge') {\r\n          realTextWidth = targetTextWidth; // realTextWidth = textContain.getWidth(layout.text, layout.font);\r\n        }\r\n      }\r\n\r\n      var dist = linePoints[1][0] - linePoints[2][0];\r\n\r\n      if (isAlignToEdge) {\r\n        if (label.x < cx) {\r\n          linePoints[2][0] = viewLeft + layout.edgeDistance + realTextWidth + layout.labelDistance;\r\n        } else {\r\n          linePoints[2][0] = viewLeft + viewWidth - layout.edgeDistance - realTextWidth - layout.labelDistance;\r\n        }\r\n      } else {\r\n        if (label.x < cx) {\r\n          linePoints[2][0] = label.x + layout.labelDistance;\r\n        } else {\r\n          linePoints[2][0] = label.x - layout.labelDistance;\r\n        }\r\n\r\n        linePoints[1][0] = linePoints[2][0] + dist;\r\n      }\r\n\r\n      linePoints[1][1] = linePoints[2][1] = label.y;\r\n    }\r\n  }\r\n}\r\n\r\nfunction isPositionCenter(sectorShape) {\r\n  // Not change x for center label\r\n  return sectorShape.position === 'center';\r\n}\r\n\r\nexport default function pieLabelLayout(seriesModel) {\r\n  var data = seriesModel.getData();\r\n  var labelLayoutList = [];\r\n  var cx;\r\n  var cy;\r\n  var hasLabelRotate = false;\r\n  var minShowLabelRadian = (seriesModel.get('minShowLabelAngle') || 0) * RADIAN;\r\n  var viewRect = data.getLayout('viewRect');\r\n  var r = data.getLayout('r');\r\n  var viewWidth = viewRect.width;\r\n  var viewLeft = viewRect.x;\r\n  var viewTop = viewRect.y;\r\n  var viewHeight = viewRect.height;\r\n\r\n  function setNotShow(el) {\r\n    el.ignore = true;\r\n  }\r\n\r\n  function isLabelShown(label) {\r\n    if (!label.ignore) {\r\n      return true;\r\n    }\r\n\r\n    for (var key in label.states) {\r\n      if (label.states[key].ignore === false) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  data.each(function (idx) {\r\n    var sector = data.getItemGraphicEl(idx);\r\n    var sectorShape = sector.shape;\r\n    var label = sector.getTextContent();\r\n    var labelLine = sector.getTextGuideLine();\r\n    var itemModel = data.getItemModel(idx);\r\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\r\n\r\n    var labelPosition = labelModel.get('position') || itemModel.get(['emphasis', 'label', 'position']);\r\n    var labelDistance = labelModel.get('distanceToLabelLine');\r\n    var labelAlignTo = labelModel.get('alignTo');\r\n    var edgeDistance = parsePercent(labelModel.get('edgeDistance'), viewWidth);\r\n    var bleedMargin = labelModel.get('bleedMargin');\r\n    var labelLineModel = itemModel.getModel('labelLine');\r\n    var labelLineLen = labelLineModel.get('length');\r\n    labelLineLen = parsePercent(labelLineLen, viewWidth);\r\n    var labelLineLen2 = labelLineModel.get('length2');\r\n    labelLineLen2 = parsePercent(labelLineLen2, viewWidth);\r\n\r\n    if (Math.abs(sectorShape.endAngle - sectorShape.startAngle) < minShowLabelRadian) {\r\n      each(label.states, setNotShow);\r\n      label.ignore = true;\r\n      return;\r\n    }\r\n\r\n    if (!isLabelShown(label)) {\r\n      return;\r\n    }\r\n\r\n    var midAngle = (sectorShape.startAngle + sectorShape.endAngle) / 2;\r\n    var nx = Math.cos(midAngle);\r\n    var ny = Math.sin(midAngle);\r\n    var textX;\r\n    var textY;\r\n    var linePoints;\r\n    var textAlign;\r\n    cx = sectorShape.cx;\r\n    cy = sectorShape.cy;\r\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\r\n\r\n    if (labelPosition === 'center') {\r\n      textX = sectorShape.cx;\r\n      textY = sectorShape.cy;\r\n      textAlign = 'center';\r\n    } else {\r\n      var x1 = (isLabelInside ? (sectorShape.r + sectorShape.r0) / 2 * nx : sectorShape.r * nx) + cx;\r\n      var y1 = (isLabelInside ? (sectorShape.r + sectorShape.r0) / 2 * ny : sectorShape.r * ny) + cy;\r\n      textX = x1 + nx * 3;\r\n      textY = y1 + ny * 3;\r\n\r\n      if (!isLabelInside) {\r\n        // For roseType\r\n        var x2 = x1 + nx * (labelLineLen + r - sectorShape.r);\r\n        var y2 = y1 + ny * (labelLineLen + r - sectorShape.r);\r\n        var x3 = x2 + (nx < 0 ? -1 : 1) * labelLineLen2;\r\n        var y3 = y2;\r\n\r\n        if (labelAlignTo === 'edge') {\r\n          // Adjust textX because text align of edge is opposite\r\n          textX = nx < 0 ? viewLeft + edgeDistance : viewLeft + viewWidth - edgeDistance;\r\n        } else {\r\n          textX = x3 + (nx < 0 ? -labelDistance : labelDistance);\r\n        }\r\n\r\n        textY = y3;\r\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\r\n      }\r\n\r\n      textAlign = isLabelInside ? 'center' : labelAlignTo === 'edge' ? nx > 0 ? 'right' : 'left' : nx > 0 ? 'left' : 'right';\r\n    }\r\n\r\n    var labelRotate;\r\n    var rotate = labelModel.get('rotate');\r\n\r\n    if (typeof rotate === 'number') {\r\n      labelRotate = rotate * (Math.PI / 180);\r\n    } else if (labelPosition === 'center') {\r\n      labelRotate = 0;\r\n    } else {\r\n      var radialAngle = nx < 0 ? -midAngle + Math.PI : -midAngle;\r\n\r\n      if (rotate === 'radial' || rotate === true) {\r\n        labelRotate = radialAngle;\r\n      } else if (rotate === 'tangential' && labelPosition !== 'outside' && labelPosition !== 'outer') {\r\n        labelRotate = radialAngle + Math.PI / 2;\r\n\r\n        if (labelRotate > Math.PI / 2) {\r\n          labelRotate -= Math.PI;\r\n        }\r\n      } else {\r\n        labelRotate = 0;\r\n      }\r\n    }\r\n\r\n    hasLabelRotate = !!labelRotate;\r\n    label.x = textX;\r\n    label.y = textY;\r\n    label.rotation = labelRotate;\r\n    label.setStyle({\r\n      verticalAlign: 'middle'\r\n    }); // Not sectorShape the inside label\r\n\r\n    if (!isLabelInside) {\r\n      var textRect = label.getBoundingRect().clone();\r\n      textRect.applyTransform(label.getComputedTransform()); // Text has a default 1px stroke. Exclude this.\r\n\r\n      var margin = (label.style.margin || 0) + 2.1;\r\n      textRect.y -= margin / 2;\r\n      textRect.height += margin;\r\n      labelLayoutList.push({\r\n        label: label,\r\n        labelLine: labelLine,\r\n        position: labelPosition,\r\n        len: labelLineLen,\r\n        len2: labelLineLen2,\r\n        minTurnAngle: labelLineModel.get('minTurnAngle'),\r\n        maxSurfaceAngle: labelLineModel.get('maxSurfaceAngle'),\r\n        surfaceNormal: new Point(nx, ny),\r\n        linePoints: linePoints,\r\n        textAlign: textAlign,\r\n        labelDistance: labelDistance,\r\n        labelAlignTo: labelAlignTo,\r\n        edgeDistance: edgeDistance,\r\n        bleedMargin: bleedMargin,\r\n        rect: textRect\r\n      });\r\n    } else {\r\n      label.setStyle({\r\n        align: textAlign\r\n      });\r\n      var selectState = label.states.select;\r\n\r\n      if (selectState) {\r\n        selectState.x += label.x;\r\n        selectState.y += label.y;\r\n      }\r\n    }\r\n\r\n    sector.setTextConfig({\r\n      inside: isLabelInside\r\n    });\r\n  });\r\n\r\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\r\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop);\r\n  }\r\n\r\n  for (var i = 0; i < labelLayoutList.length; i++) {\r\n    var layout = labelLayoutList[i];\r\n    var label = layout.label;\r\n    var labelLine = layout.labelLine;\r\n    var notShowLabel = isNaN(label.x) || isNaN(label.y);\r\n\r\n    if (label) {\r\n      label.setStyle({\r\n        align: layout.textAlign\r\n      });\r\n\r\n      if (notShowLabel) {\r\n        each(label.states, setNotShow);\r\n        label.ignore = true;\r\n      }\r\n\r\n      var selectState = label.states.select;\r\n\r\n      if (selectState) {\r\n        selectState.x += label.x;\r\n        selectState.y += label.y;\r\n      }\r\n    }\r\n\r\n    if (labelLine) {\r\n      var linePoints = layout.linePoints;\r\n\r\n      if (notShowLabel || !linePoints) {\r\n        each(labelLine.states, setNotShow);\r\n        labelLine.ignore = true;\r\n      } else {\r\n        limitTurnAngle(linePoints, layout.minTurnAngle);\r\n        limitSurfaceAngle(linePoints, layout.surfaceNormal, layout.maxSurfaceAngle);\r\n        labelLine.setShape({\r\n          points: linePoints\r\n        }); // Set the anchor to the midpoint of sector\r\n\r\n        label.__hostTarget.textGuideLineConfig = {\r\n          anchor: new Point(linePoints[0][0], linePoints[0][1])\r\n        };\r\n      }\r\n    }\r\n  }\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { isArray } from 'zrender/lib/core/util';\r\nimport { parsePercent } from 'zrender/lib/contain/text';\r\nexport function getSectorCornerRadius(model, shape, zeroIfNull) {\r\n  var cornerRadius = model.get('borderRadius');\r\n\r\n  if (cornerRadius == null) {\r\n    return zeroIfNull ? {\r\n      innerCornerRadius: 0,\r\n      cornerRadius: 0\r\n    } : null;\r\n  }\r\n\r\n  if (!isArray(cornerRadius)) {\r\n    cornerRadius = [cornerRadius, cornerRadius];\r\n  }\r\n\r\n  return {\r\n    innerCornerRadius: parsePercent(cornerRadius[0], shape.r0),\r\n    cornerRadius: parsePercent(cornerRadius[1], shape.r)\r\n  };\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __assign, __extends } from \"tslib\";\r\nimport { extend, retrieve3 } from 'zrender/lib/core/util';\r\nimport * as graphic from '../../util/graphic';\r\nimport { setStatesStylesFromModel, enableHoverEmphasis } from '../../util/states';\r\nimport ChartView from '../../view/Chart';\r\nimport labelLayout from './labelLayout';\r\nimport { setLabelLineStyle, getLabelLineStatesModels } from '../../label/labelGuideHelper';\r\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle';\r\nimport { getSectorCornerRadius } from '../helper/pieHelper';\r\nimport { saveOldStyle } from '../../animation/basicTrasition';\r\nimport { getBasicPieLayout } from './pieLayout';\r\n/**\r\n * Piece of pie including Sector, Label, LabelLine\r\n */\r\n\r\nvar PiePiece =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(PiePiece, _super);\r\n\r\n  function PiePiece(data, idx, startAngle) {\r\n    var _this = _super.call(this) || this;\r\n\r\n    _this.z2 = 2;\r\n    var text = new graphic.Text();\r\n\r\n    _this.setTextContent(text);\r\n\r\n    _this.updateData(data, idx, startAngle, true);\r\n\r\n    return _this;\r\n  }\r\n\r\n  PiePiece.prototype.updateData = function (data, idx, startAngle, firstCreate) {\r\n    var sector = this;\r\n    var seriesModel = data.hostModel;\r\n    var itemModel = data.getItemModel(idx);\r\n    var emphasisModel = itemModel.getModel('emphasis');\r\n    var layout = data.getItemLayout(idx); // cornerRadius & innerCornerRadius doesn't exist in the item layout. Use `0` if null value is specified.\r\n    // see `setItemLayout` in `pieLayout.ts`.\r\n\r\n    var sectorShape = extend(getSectorCornerRadius(itemModel.getModel('itemStyle'), layout, true), layout); // Ignore NaN data.\r\n\r\n    if (isNaN(sectorShape.startAngle)) {\r\n      // Use NaN shape to avoid drawing shape.\r\n      sector.setShape(sectorShape);\r\n      return;\r\n    }\r\n\r\n    if (firstCreate) {\r\n      sector.setShape(sectorShape);\r\n      var animationType = seriesModel.getShallow('animationType');\r\n\r\n      if (animationType === 'scale') {\r\n        sector.shape.r = layout.r0;\r\n        graphic.initProps(sector, {\r\n          shape: {\r\n            r: layout.r\r\n          }\r\n        }, seriesModel, idx);\r\n      } // Expansion\r\n      else {\r\n          if (startAngle != null) {\r\n            sector.setShape({\r\n              startAngle: startAngle,\r\n              endAngle: startAngle\r\n            });\r\n            graphic.initProps(sector, {\r\n              shape: {\r\n                startAngle: layout.startAngle,\r\n                endAngle: layout.endAngle\r\n              }\r\n            }, seriesModel, idx);\r\n          } else {\r\n            sector.shape.endAngle = layout.startAngle;\r\n            graphic.updateProps(sector, {\r\n              shape: {\r\n                endAngle: layout.endAngle\r\n              }\r\n            }, seriesModel, idx);\r\n          }\r\n        }\r\n    } else {\r\n      saveOldStyle(sector); // Transition animation from the old shape\r\n\r\n      graphic.updateProps(sector, {\r\n        shape: sectorShape\r\n      }, seriesModel, idx);\r\n    }\r\n\r\n    sector.useStyle(data.getItemVisual(idx, 'style'));\r\n    setStatesStylesFromModel(sector, itemModel);\r\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\r\n    var offset = seriesModel.get('selectedOffset');\r\n    var dx = Math.cos(midAngle) * offset;\r\n    var dy = Math.sin(midAngle) * offset;\r\n    var cursorStyle = itemModel.getShallow('cursor');\r\n    cursorStyle && sector.attr('cursor', cursorStyle);\r\n\r\n    this._updateLabel(seriesModel, data, idx);\r\n\r\n    sector.ensureState('emphasis').shape = __assign({\r\n      r: layout.r + (emphasisModel.get('scale') ? emphasisModel.get('scaleSize') || 0 : 0)\r\n    }, getSectorCornerRadius(emphasisModel.getModel('itemStyle'), layout));\r\n    extend(sector.ensureState('select'), {\r\n      x: dx,\r\n      y: dy,\r\n      shape: getSectorCornerRadius(itemModel.getModel(['select', 'itemStyle']), layout)\r\n    });\r\n    extend(sector.ensureState('blur'), {\r\n      shape: getSectorCornerRadius(itemModel.getModel(['blur', 'itemStyle']), layout)\r\n    });\r\n    var labelLine = sector.getTextGuideLine();\r\n    var labelText = sector.getTextContent();\r\n    labelLine && extend(labelLine.ensureState('select'), {\r\n      x: dx,\r\n      y: dy\r\n    }); // TODO: needs dx, dy in zrender?\r\n\r\n    extend(labelText.ensureState('select'), {\r\n      x: dx,\r\n      y: dy\r\n    });\r\n    enableHoverEmphasis(this, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\r\n  };\r\n\r\n  PiePiece.prototype._updateLabel = function (seriesModel, data, idx) {\r\n    var sector = this;\r\n    var itemModel = data.getItemModel(idx);\r\n    var labelLineModel = itemModel.getModel('labelLine');\r\n    var style = data.getItemVisual(idx, 'style');\r\n    var visualColor = style && style.fill;\r\n    var visualOpacity = style && style.opacity;\r\n    setLabelStyle(sector, getLabelStatesModels(itemModel), {\r\n      labelFetcher: data.hostModel,\r\n      labelDataIndex: idx,\r\n      inheritColor: visualColor,\r\n      defaultOpacity: visualOpacity,\r\n      defaultText: seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx)\r\n    });\r\n    var labelText = sector.getTextContent(); // Set textConfig on sector.\r\n\r\n    sector.setTextConfig({\r\n      // reset position, rotation\r\n      position: null,\r\n      rotation: null\r\n    }); // Make sure update style on labelText after setLabelStyle.\r\n    // Because setLabelStyle will replace a new style on it.\r\n\r\n    labelText.attr({\r\n      z2: 10\r\n    });\r\n    var labelPosition = seriesModel.get(['label', 'position']);\r\n\r\n    if (labelPosition !== 'outside' && labelPosition !== 'outer') {\r\n      sector.removeTextGuideLine();\r\n    } else {\r\n      var polyline = this.getTextGuideLine();\r\n\r\n      if (!polyline) {\r\n        polyline = new graphic.Polyline();\r\n        this.setTextGuideLine(polyline);\r\n      } // Default use item visual color\r\n\r\n\r\n      setLabelLineStyle(this, getLabelLineStatesModels(itemModel), {\r\n        stroke: visualColor,\r\n        opacity: retrieve3(labelLineModel.get(['lineStyle', 'opacity']), visualOpacity, 1)\r\n      });\r\n    }\r\n  };\r\n\r\n  return PiePiece;\r\n}(graphic.Sector); // Pie view\r\n\r\n\r\nvar PieView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(PieView, _super);\r\n\r\n  function PieView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.ignoreLabelLineUpdate = true;\r\n    return _this;\r\n  }\r\n\r\n  PieView.prototype.init = function () {\r\n    var sectorGroup = new graphic.Group();\r\n    this._sectorGroup = sectorGroup;\r\n  };\r\n\r\n  PieView.prototype.render = function (seriesModel, ecModel, api, payload) {\r\n    var data = seriesModel.getData();\r\n    var oldData = this._data;\r\n    var group = this.group;\r\n    var startAngle; // First render\r\n\r\n    if (!oldData && data.count() > 0) {\r\n      var shape = data.getItemLayout(0);\r\n\r\n      for (var s = 1; isNaN(shape && shape.startAngle) && s < data.count(); ++s) {\r\n        shape = data.getItemLayout(s);\r\n      }\r\n\r\n      if (shape) {\r\n        startAngle = shape.startAngle;\r\n      }\r\n    } // remove empty-circle if it exists\r\n\r\n\r\n    if (this._emptyCircleSector) {\r\n      group.remove(this._emptyCircleSector);\r\n    } // when all data are filtered, show lightgray empty circle\r\n\r\n\r\n    if (data.count() === 0 && seriesModel.get('showEmptyCircle')) {\r\n      var sector = new graphic.Sector({\r\n        shape: getBasicPieLayout(seriesModel, api)\r\n      });\r\n      sector.useStyle(seriesModel.getModel('emptyCircleStyle').getItemStyle());\r\n      this._emptyCircleSector = sector;\r\n      group.add(sector);\r\n    }\r\n\r\n    data.diff(oldData).add(function (idx) {\r\n      var piePiece = new PiePiece(data, idx, startAngle);\r\n      data.setItemGraphicEl(idx, piePiece);\r\n      group.add(piePiece);\r\n    }).update(function (newIdx, oldIdx) {\r\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\r\n      piePiece.updateData(data, newIdx, startAngle);\r\n      piePiece.off('click');\r\n      group.add(piePiece);\r\n      data.setItemGraphicEl(newIdx, piePiece);\r\n    }).remove(function (idx) {\r\n      var piePiece = oldData.getItemGraphicEl(idx);\r\n      graphic.removeElementWithFadeOut(piePiece, seriesModel, idx);\r\n    }).execute();\r\n    labelLayout(seriesModel); // Always use initial animation.\r\n\r\n    if (seriesModel.get('animationTypeUpdate') !== 'expansion') {\r\n      this._data = data;\r\n    }\r\n  };\r\n\r\n  PieView.prototype.dispose = function () {};\r\n\r\n  PieView.prototype.containPoint = function (point, seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var itemLayout = data.getItemLayout(0);\r\n\r\n    if (itemLayout) {\r\n      var dx = point[0] - itemLayout.cx;\r\n      var dy = point[1] - itemLayout.cy;\r\n      var radius = Math.sqrt(dx * dx + dy * dy);\r\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\r\n    }\r\n  };\r\n\r\n  PieView.type = 'pie';\r\n  return PieView;\r\n}(ChartView);\r\n\r\nexport default PieView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport prepareSeriesDataSchema from '../../data/helper/createDimensions';\r\nimport SeriesData from '../../data/SeriesData';\r\nimport { extend, isArray } from 'zrender/lib/core/util';\r\n/**\r\n * [Usage]:\r\n * (1)\r\n * createListSimply(seriesModel, ['value']);\r\n * (2)\r\n * createListSimply(seriesModel, {\r\n *     coordDimensions: ['value'],\r\n *     dimensionsCount: 5\r\n * });\r\n */\r\n\r\nexport default function createSeriesDataSimply(seriesModel, opt, nameList) {\r\n  opt = isArray(opt) && {\r\n    coordDimensions: opt\r\n  } || extend({\r\n    encodeDefine: seriesModel.getEncode()\r\n  }, opt);\r\n  var source = seriesModel.getSource();\r\n  var dimensions = prepareSeriesDataSchema(source, opt).dimensions;\r\n  var list = new SeriesData(dimensions, seriesModel);\r\n  list.initData(source, nameList);\r\n  return list;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * LegendVisualProvider is an bridge that pick encoded color from data and\r\n * provide to the legend component.\r\n */\r\nvar LegendVisualProvider =\r\n/** @class */\r\nfunction () {\r\n  function LegendVisualProvider( // Function to get data after filtered. It stores all the encoding info\r\n  getDataWithEncodedVisual, // Function to get raw data before filtered.\r\n  getRawData) {\r\n    this._getDataWithEncodedVisual = getDataWithEncodedVisual;\r\n    this._getRawData = getRawData;\r\n  }\r\n\r\n  LegendVisualProvider.prototype.getAllNames = function () {\r\n    var rawData = this._getRawData(); // We find the name from the raw data. In case it's filtered by the legend component.\r\n    // Normally, the name can be found in rawData, but can't be found in filtered data will display as gray.\r\n\r\n\r\n    return rawData.mapArray(rawData.getName);\r\n  };\r\n\r\n  LegendVisualProvider.prototype.containName = function (name) {\r\n    var rawData = this._getRawData();\r\n\r\n    return rawData.indexOfName(name) >= 0;\r\n  };\r\n\r\n  LegendVisualProvider.prototype.indexOfName = function (name) {\r\n    // Only get data when necessary.\r\n    // Because LegendVisualProvider constructor may be new in the stage that data is not prepared yet.\r\n    // Invoking Series#getData immediately will throw an error.\r\n    var dataWithEncodedVisual = this._getDataWithEncodedVisual();\r\n\r\n    return dataWithEncodedVisual.indexOfName(name);\r\n  };\r\n\r\n  LegendVisualProvider.prototype.getItemVisual = function (dataIndex, key) {\r\n    // Get encoded visual properties from final filtered data.\r\n    var dataWithEncodedVisual = this._getDataWithEncodedVisual();\r\n\r\n    return dataWithEncodedVisual.getItemVisual(dataIndex, key);\r\n  };\r\n\r\n  return LegendVisualProvider;\r\n}();\r\n\r\nexport default LegendVisualProvider;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport createSeriesDataSimply from '../helper/createSeriesDataSimply';\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as modelUtil from '../../util/model';\r\nimport { getPercentWithPrecision } from '../../util/number';\r\nimport { makeSeriesEncodeForNameBased } from '../../data/helper/sourceHelper';\r\nimport LegendVisualProvider from '../../visual/LegendVisualProvider';\r\nimport SeriesModel from '../../model/Series';\r\n\r\nvar PieSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(PieSeriesModel, _super);\r\n\r\n  function PieSeriesModel() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n  /**\r\n   * @overwrite\r\n   */\r\n\r\n\r\n  PieSeriesModel.prototype.init = function (option) {\r\n    _super.prototype.init.apply(this, arguments); // Enable legend selection for each data item\r\n    // Use a function instead of direct access because data reference may changed\r\n\r\n\r\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this));\r\n\r\n    this._defaultLabelLine(option);\r\n  };\r\n  /**\r\n   * @overwrite\r\n   */\r\n\r\n\r\n  PieSeriesModel.prototype.mergeOption = function () {\r\n    _super.prototype.mergeOption.apply(this, arguments);\r\n  };\r\n  /**\r\n   * @overwrite\r\n   */\r\n\r\n\r\n  PieSeriesModel.prototype.getInitialData = function () {\r\n    return createSeriesDataSimply(this, {\r\n      coordDimensions: ['value'],\r\n      encodeDefaulter: zrUtil.curry(makeSeriesEncodeForNameBased, this)\r\n    });\r\n  };\r\n  /**\r\n   * @overwrite\r\n   */\r\n\r\n\r\n  PieSeriesModel.prototype.getDataParams = function (dataIndex) {\r\n    var data = this.getData();\r\n\r\n    var params = _super.prototype.getDataParams.call(this, dataIndex); // FIXME toFixed?\r\n\r\n\r\n    var valueList = [];\r\n    data.each(data.mapDimension('value'), function (value) {\r\n      valueList.push(value);\r\n    });\r\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\r\n    params.$vars.push('percent');\r\n    return params;\r\n  };\r\n\r\n  PieSeriesModel.prototype._defaultLabelLine = function (option) {\r\n    // Extend labelLine emphasis\r\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\r\n    var labelLineNormalOpt = option.labelLine;\r\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\r\n\r\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\r\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\r\n  };\r\n\r\n  PieSeriesModel.type = 'series.pie';\r\n  PieSeriesModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 2,\r\n    legendHoverLink: true,\r\n    colorBy: 'data',\r\n    // \u9ED8\u8BA4\u5168\u5C40\u5C45\u4E2D\r\n    center: ['50%', '50%'],\r\n    radius: [0, '75%'],\r\n    // \u9ED8\u8BA4\u987A\u65F6\u9488\r\n    clockwise: true,\r\n    startAngle: 90,\r\n    // \u6700\u5C0F\u89D2\u5EA6\u6539\u4E3A0\r\n    minAngle: 0,\r\n    // If the angle of a sector less than `minShowLabelAngle`,\r\n    // the label will not be displayed.\r\n    minShowLabelAngle: 0,\r\n    // \u9009\u4E2D\u65F6\u6247\u533A\u504F\u79FB\u91CF\r\n    selectedOffset: 10,\r\n    // \u9009\u62E9\u6A21\u5F0F\uFF0C\u9ED8\u8BA4\u5173\u95ED\uFF0C\u53EF\u9009single\uFF0Cmultiple\r\n    // selectedMode: false,\r\n    // \u5357\u4E01\u683C\u5C14\u73AB\u7470\u56FE\u6A21\u5F0F\uFF0C'radius'\uFF08\u534A\u5F84\uFF09 | 'area'\uFF08\u9762\u79EF\uFF09\r\n    // roseType: null,\r\n    percentPrecision: 2,\r\n    // If still show when all data zero.\r\n    stillShowZeroSum: true,\r\n    // cursor: null,\r\n    left: 0,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    width: null,\r\n    height: null,\r\n    label: {\r\n      // color: 'inherit',\r\n      // If rotate around circle\r\n      rotate: 0,\r\n      show: true,\r\n      overflow: 'truncate',\r\n      // 'outer', 'inside', 'center'\r\n      position: 'outer',\r\n      // 'none', 'labelLine', 'edge'. Works only when position is 'outer'\r\n      alignTo: 'none',\r\n      // Closest distance between label and chart edge.\r\n      // Works only position is 'outer' and alignTo is 'edge'.\r\n      edgeDistance: '25%',\r\n      // Works only position is 'outer' and alignTo is not 'edge'.\r\n      bleedMargin: 10,\r\n      // Distance between text and label line.\r\n      distanceToLabelLine: 5 // formatter: \u6807\u7B7E\u6587\u672C\u683C\u5F0F\u5668\uFF0C\u540CTooltip.formatter\uFF0C\u4E0D\u652F\u6301\u5F02\u6B65\u56DE\u8C03\r\n      // \u9ED8\u8BA4\u4F7F\u7528\u5168\u5C40\u6587\u672C\u6837\u5F0F\uFF0C\u8BE6\u89C1TEXTSTYLE\r\n      // distance: \u5F53position\u4E3Ainner\u65F6\u6709\u6548\uFF0C\u4E3Alabel\u4F4D\u7F6E\u5230\u5706\u5FC3\u7684\u8DDD\u79BB\u4E0E\u5706\u534A\u5F84(\u73AF\u72B6\u56FE\u4E3A\u5185\u5916\u534A\u5F84\u548C)\u7684\u6BD4\u4F8B\u7CFB\u6570\r\n\r\n    },\r\n    // Enabled when label.normal.position is 'outer'\r\n    labelLine: {\r\n      show: true,\r\n      // \u5F15\u5BFC\u7EBF\u4E24\u6BB5\u4E2D\u7684\u7B2C\u4E00\u6BB5\u957F\u5EA6\r\n      length: 15,\r\n      // \u5F15\u5BFC\u7EBF\u4E24\u6BB5\u4E2D\u7684\u7B2C\u4E8C\u6BB5\u957F\u5EA6\r\n      length2: 15,\r\n      smooth: false,\r\n      minTurnAngle: 90,\r\n      maxSurfaceAngle: 90,\r\n      lineStyle: {\r\n        // color: \u5404\u5F02,\r\n        width: 1,\r\n        type: 'solid'\r\n      }\r\n    },\r\n    itemStyle: {\r\n      borderWidth: 1,\r\n      borderJoin: 'round'\r\n    },\r\n    showEmptyCircle: true,\r\n    emptyCircleStyle: {\r\n      color: 'lightgray',\r\n      opacity: 1\r\n    },\r\n    labelLayout: {\r\n      // Hide the overlapped label.\r\n      hideOverlap: true\r\n    },\r\n    emphasis: {\r\n      scale: true,\r\n      scaleSize: 5\r\n    },\r\n    // If use strategy to avoid label overlapping\r\n    avoidLabelOverlap: true,\r\n    // Animation type. Valid values: expansion, scale\r\n    animationType: 'expansion',\r\n    animationDuration: 1000,\r\n    // Animation type when update. Valid values: transition, expansion\r\n    animationTypeUpdate: 'transition',\r\n    animationEasingUpdate: 'cubicInOut',\r\n    animationDurationUpdate: 500,\r\n    animationEasing: 'cubicInOut'\r\n  };\r\n  return PieSeriesModel;\r\n}(SeriesModel);\r\n\r\nexport default PieSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nexport default function negativeDataFilter(seriesType) {\r\n  return {\r\n    seriesType: seriesType,\r\n    reset: function (seriesModel, ecModel) {\r\n      var data = seriesModel.getData();\r\n      data.filterSelf(function (idx) {\r\n        // handle negative value condition\r\n        var valueDim = data.mapDimension('value');\r\n        var curValue = data.get(valueDim, idx);\r\n\r\n        if (typeof curValue === 'number' && !isNaN(curValue) && curValue < 0) {\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      });\r\n    }\r\n  };\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { createLegacyDataSelectAction } from '../../legacy/dataSelectAction';\r\nimport pieLayout from '../pie/pieLayout';\r\nimport dataFilter from '../../processor/dataFilter';\r\nimport { curry } from 'zrender/lib/core/util';\r\nimport PieView from './PieView';\r\nimport PieSeriesModel from './PieSeries';\r\nimport negativeDataFilter from '../../processor/negativeDataFilter';\r\nexport function install(registers) {\r\n  registers.registerChartView(PieView);\r\n  registers.registerSeriesModel(PieSeriesModel);\r\n  createLegacyDataSelectAction('pie', registers.registerAction);\r\n  registers.registerLayout(curry(pieLayout, 'pie'));\r\n  registers.registerProcessor(dataFilter('pie'));\r\n  registers.registerProcessor(negativeDataFilter('pie'));\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport createSeriesData from '../helper/createSeriesData';\r\nimport SeriesModel from '../../model/Series';\r\n\r\nvar ScatterSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ScatterSeriesModel, _super);\r\n\r\n  function ScatterSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = ScatterSeriesModel.type;\r\n    _this.hasSymbolVisual = true;\r\n    return _this;\r\n  }\r\n\r\n  ScatterSeriesModel.prototype.getInitialData = function (option, ecModel) {\r\n    return createSeriesData(null, this, {\r\n      useEncodeDefaulter: true\r\n    });\r\n  };\r\n\r\n  ScatterSeriesModel.prototype.getProgressive = function () {\r\n    var progressive = this.option.progressive;\r\n\r\n    if (progressive == null) {\r\n      // PENDING\r\n      return this.option.large ? 5e3 : this.get('progressive');\r\n    }\r\n\r\n    return progressive;\r\n  };\r\n\r\n  ScatterSeriesModel.prototype.getProgressiveThreshold = function () {\r\n    var progressiveThreshold = this.option.progressiveThreshold;\r\n\r\n    if (progressiveThreshold == null) {\r\n      // PENDING\r\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\r\n    }\r\n\r\n    return progressiveThreshold;\r\n  };\r\n\r\n  ScatterSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\r\n    return selectors.point(data.getItemLayout(dataIndex));\r\n  };\r\n\r\n  ScatterSeriesModel.type = 'series.scatter';\r\n  ScatterSeriesModel.dependencies = ['grid', 'polar', 'geo', 'singleAxis', 'calendar'];\r\n  ScatterSeriesModel.defaultOption = {\r\n    coordinateSystem: 'cartesian2d',\r\n    zlevel: 0,\r\n    z: 2,\r\n    legendHoverLink: true,\r\n    symbolSize: 10,\r\n    // symbolRotate: null,  // \u56FE\u5F62\u65CB\u8F6C\u63A7\u5236\r\n    large: false,\r\n    // Available when large is true\r\n    largeThreshold: 2000,\r\n    // cursor: null,\r\n    itemStyle: {\r\n      opacity: 0.8 // color: \u5404\u5F02\r\n\r\n    },\r\n    emphasis: {\r\n      scale: true\r\n    },\r\n    // If clip the overflow graphics\r\n    // Works on cartesian / polar series\r\n    clip: true,\r\n    select: {\r\n      itemStyle: {\r\n        borderColor: '#212121'\r\n      }\r\n    },\r\n    universalTransition: {\r\n      divideShape: 'clone'\r\n    } // progressive: null\r\n\r\n  };\r\n  return ScatterSeriesModel;\r\n}(SeriesModel);\r\n\r\nexport default ScatterSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\n/* global Float32Array */\r\n// TODO Batch by color\r\n\r\nimport * as graphic from '../../util/graphic';\r\nimport { createSymbol } from '../../util/symbol';\r\nimport IncrementalDisplayable from 'zrender/lib/graphic/IncrementalDisplayable';\r\nimport { getECData } from '../../util/innerStore';\r\nvar BOOST_SIZE_THRESHOLD = 4;\r\n\r\nvar LargeSymbolPathShape =\r\n/** @class */\r\nfunction () {\r\n  function LargeSymbolPathShape() {}\r\n\r\n  return LargeSymbolPathShape;\r\n}();\r\n\r\nvar LargeSymbolPath =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(LargeSymbolPath, _super);\r\n\r\n  function LargeSymbolPath(opts) {\r\n    return _super.call(this, opts) || this;\r\n  }\r\n\r\n  LargeSymbolPath.prototype.getDefaultShape = function () {\r\n    return new LargeSymbolPathShape();\r\n  };\r\n\r\n  LargeSymbolPath.prototype.buildPath = function (path, shape) {\r\n    var points = shape.points;\r\n    var size = shape.size;\r\n    var symbolProxy = this.symbolProxy;\r\n    var symbolProxyShape = symbolProxy.shape;\r\n    var ctx = path.getContext ? path.getContext() : path;\r\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\r\n\r\n    if (canBoost) {\r\n      this._ctx = ctx;\r\n      return;\r\n    }\r\n\r\n    this._ctx = null;\r\n\r\n    for (var i = 0; i < points.length;) {\r\n      var x = points[i++];\r\n      var y = points[i++];\r\n\r\n      if (isNaN(x) || isNaN(y)) {\r\n        continue;\r\n      }\r\n\r\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\r\n        continue;\r\n      }\r\n\r\n      symbolProxyShape.x = x - size[0] / 2;\r\n      symbolProxyShape.y = y - size[1] / 2;\r\n      symbolProxyShape.width = size[0];\r\n      symbolProxyShape.height = size[1];\r\n      symbolProxy.buildPath(path, symbolProxyShape, true);\r\n    }\r\n  };\r\n\r\n  LargeSymbolPath.prototype.afterBrush = function () {\r\n    var shape = this.shape;\r\n    var points = shape.points;\r\n    var size = shape.size;\r\n    var ctx = this._ctx;\r\n\r\n    if (!ctx) {\r\n      return;\r\n    } // PENDING If style or other canvas status changed?\r\n\r\n\r\n    for (var i = 0; i < points.length;) {\r\n      var x = points[i++];\r\n      var y = points[i++];\r\n\r\n      if (isNaN(x) || isNaN(y)) {\r\n        continue;\r\n      }\r\n\r\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\r\n        continue;\r\n      } // fillRect is faster than building a rect path and draw.\r\n      // And it support light globalCompositeOperation.\r\n\r\n\r\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\r\n    }\r\n  };\r\n\r\n  LargeSymbolPath.prototype.findDataIndex = function (x, y) {\r\n    // TODO ???\r\n    // Consider transform\r\n    var shape = this.shape;\r\n    var points = shape.points;\r\n    var size = shape.size;\r\n    var w = Math.max(size[0], 4);\r\n    var h = Math.max(size[1], 4); // Not consider transform\r\n    // Treat each element as a rect\r\n    // top down traverse\r\n\r\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\r\n      var i = idx * 2;\r\n      var x0 = points[i] - w / 2;\r\n      var y0 = points[i + 1] - h / 2;\r\n\r\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\r\n        return idx;\r\n      }\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  return LargeSymbolPath;\r\n}(graphic.Path);\r\n\r\nvar LargeSymbolDraw =\r\n/** @class */\r\nfunction () {\r\n  function LargeSymbolDraw() {\r\n    this.group = new graphic.Group();\r\n  }\r\n\r\n  LargeSymbolDraw.prototype.isPersistent = function () {\r\n    return !this._incremental;\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Update symbols draw by new data\r\n   */\r\n\r\n  LargeSymbolDraw.prototype.updateData = function (data, opt) {\r\n    this.group.removeAll();\r\n    var symbolEl = new LargeSymbolPath({\r\n      rectHover: true,\r\n      cursor: 'default'\r\n    });\r\n    symbolEl.setShape({\r\n      points: data.getLayout('points')\r\n    });\r\n\r\n    this._setCommon(symbolEl, data, false, opt);\r\n\r\n    this.group.add(symbolEl);\r\n    this._incremental = null;\r\n  };\r\n\r\n  LargeSymbolDraw.prototype.updateLayout = function (data) {\r\n    if (this._incremental) {\r\n      return;\r\n    }\r\n\r\n    var points = data.getLayout('points');\r\n    this.group.eachChild(function (child) {\r\n      if (child.startIndex != null) {\r\n        var len = (child.endIndex - child.startIndex) * 2;\r\n        var byteOffset = child.startIndex * 4 * 2;\r\n        points = new Float32Array(points.buffer, byteOffset, len);\r\n      }\r\n\r\n      child.setShape('points', points);\r\n    });\r\n  };\r\n\r\n  LargeSymbolDraw.prototype.incrementalPrepareUpdate = function (data) {\r\n    this.group.removeAll();\r\n\r\n    this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\r\n    // PENDING Incremental data?\r\n\r\n\r\n    if (data.count() > 2e6) {\r\n      if (!this._incremental) {\r\n        this._incremental = new IncrementalDisplayable({\r\n          silent: true\r\n        });\r\n      }\r\n\r\n      this.group.add(this._incremental);\r\n    } else {\r\n      this._incremental = null;\r\n    }\r\n  };\r\n\r\n  LargeSymbolDraw.prototype.incrementalUpdate = function (taskParams, data, opt) {\r\n    var symbolEl;\r\n\r\n    if (this._incremental) {\r\n      symbolEl = new LargeSymbolPath();\r\n\r\n      this._incremental.addDisplayable(symbolEl, true);\r\n    } else {\r\n      symbolEl = new LargeSymbolPath({\r\n        rectHover: true,\r\n        cursor: 'default',\r\n        startIndex: taskParams.start,\r\n        endIndex: taskParams.end\r\n      });\r\n      symbolEl.incremental = true;\r\n      this.group.add(symbolEl);\r\n    }\r\n\r\n    symbolEl.setShape({\r\n      points: data.getLayout('points')\r\n    });\r\n\r\n    this._setCommon(symbolEl, data, !!this._incremental, opt);\r\n  };\r\n\r\n  LargeSymbolDraw.prototype._setCommon = function (symbolEl, data, isIncremental, opt) {\r\n    var hostModel = data.hostModel;\r\n    opt = opt || {};\r\n    var size = data.getVisual('symbolSize');\r\n    symbolEl.setShape('size', size instanceof Array ? size : [size, size]);\r\n    symbolEl.softClipShape = opt.clipShape || null; // Create symbolProxy to build path for each data\r\n\r\n    symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\r\n\r\n    symbolEl.setColor = symbolEl.symbolProxy.setColor;\r\n    var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\r\n    symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\r\n    hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\r\n    var globalStyle = data.getVisual('style');\r\n    var visualColor = globalStyle && globalStyle.fill;\r\n\r\n    if (visualColor) {\r\n      symbolEl.setColor(visualColor);\r\n    }\r\n\r\n    if (!isIncremental) {\r\n      var ecData_1 = getECData(symbolEl); // Enable tooltip\r\n      // PENDING May have performance issue when path is extremely large\r\n\r\n      ecData_1.seriesIndex = hostModel.seriesIndex;\r\n      symbolEl.on('mousemove', function (e) {\r\n        ecData_1.dataIndex = null;\r\n        var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\r\n\r\n        if (dataIndex >= 0) {\r\n          // Provide dataIndex for tooltip\r\n          ecData_1.dataIndex = dataIndex + (symbolEl.startIndex || 0);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  LargeSymbolDraw.prototype.remove = function () {\r\n    this._clearIncremental();\r\n\r\n    this._incremental = null;\r\n    this.group.removeAll();\r\n  };\r\n\r\n  LargeSymbolDraw.prototype._clearIncremental = function () {\r\n    var incremental = this._incremental;\r\n\r\n    if (incremental) {\r\n      incremental.clearDisplaybles();\r\n    }\r\n  };\r\n\r\n  return LargeSymbolDraw;\r\n}();\r\n\r\nexport default LargeSymbolDraw;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport SymbolDraw from '../helper/SymbolDraw';\r\nimport LargeSymbolDraw from '../helper/LargeSymbolDraw';\r\nimport pointsLayout from '../../layout/points';\r\nimport ChartView from '../../view/Chart';\r\n\r\nvar ScatterView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ScatterView, _super);\r\n\r\n  function ScatterView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = ScatterView.type;\r\n    return _this;\r\n  }\r\n\r\n  ScatterView.prototype.render = function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n\r\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\r\n\r\n    symbolDraw.updateData(data, {\r\n      // TODO\r\n      // If this parameter should be a shape or a bounding volume\r\n      // shape will be more general.\r\n      // But bounding volume like bounding rect will be much faster in the contain calculation\r\n      clipShape: this._getClipShape(seriesModel)\r\n    });\r\n    this._finished = true;\r\n  };\r\n\r\n  ScatterView.prototype.incrementalPrepareRender = function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n\r\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\r\n\r\n    symbolDraw.incrementalPrepareUpdate(data);\r\n    this._finished = false;\r\n  };\r\n\r\n  ScatterView.prototype.incrementalRender = function (taskParams, seriesModel, ecModel) {\r\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData(), {\r\n      clipShape: this._getClipShape(seriesModel)\r\n    });\r\n\r\n    this._finished = taskParams.end === seriesModel.getData().count();\r\n  };\r\n\r\n  ScatterView.prototype.updateTransform = function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\r\n    // PENDING\r\n\r\n    this.group.dirty();\r\n\r\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\r\n      return {\r\n        update: true\r\n      };\r\n    } else {\r\n      var res = pointsLayout('').reset(seriesModel, ecModel, api);\r\n\r\n      if (res.progress) {\r\n        res.progress({\r\n          start: 0,\r\n          end: data.count(),\r\n          count: data.count()\r\n        }, data);\r\n      }\r\n\r\n      this._symbolDraw.updateLayout(data);\r\n    }\r\n  };\r\n\r\n  ScatterView.prototype._getClipShape = function (seriesModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var clipArea = coordSys && coordSys.getArea && coordSys.getArea();\r\n    return seriesModel.get('clip', true) ? clipArea : null;\r\n  };\r\n\r\n  ScatterView.prototype._updateSymbolDraw = function (data, seriesModel) {\r\n    var symbolDraw = this._symbolDraw;\r\n    var pipelineContext = seriesModel.pipelineContext;\r\n    var isLargeDraw = pipelineContext.large;\r\n\r\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\r\n      symbolDraw && symbolDraw.remove();\r\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\r\n      this._isLargeDraw = isLargeDraw;\r\n      this.group.removeAll();\r\n    }\r\n\r\n    this.group.add(symbolDraw.group);\r\n    return symbolDraw;\r\n  };\r\n\r\n  ScatterView.prototype.remove = function (ecModel, api) {\r\n    this._symbolDraw && this._symbolDraw.remove(true);\r\n    this._symbolDraw = null;\r\n  };\r\n\r\n  ScatterView.prototype.dispose = function () {};\r\n\r\n  ScatterView.type = 'scatter';\r\n  return ScatterView;\r\n}(ChartView);\r\n\r\nexport default ScatterView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport ComponentModel from '../../model/Component';\r\n\r\nvar GridModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(GridModel, _super);\r\n\r\n  function GridModel() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  GridModel.type = 'grid';\r\n  GridModel.dependencies = ['xAxis', 'yAxis'];\r\n  GridModel.layoutMode = 'box';\r\n  GridModel.defaultOption = {\r\n    show: false,\r\n    zlevel: 0,\r\n    z: 0,\r\n    left: '10%',\r\n    top: 60,\r\n    right: '10%',\r\n    bottom: 70,\r\n    // If grid size contain label\r\n    containLabel: false,\r\n    // width: {totalWidth} - left - right,\r\n    // height: {totalHeight} - top - bottom,\r\n    backgroundColor: 'rgba(0,0,0,0)',\r\n    borderWidth: 1,\r\n    borderColor: '#ccc'\r\n  };\r\n  return GridModel;\r\n}(ComponentModel);\r\n\r\nexport default GridModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport ComponentModel from '../../model/Component';\r\nimport { AxisModelCommonMixin } from '../axisModelCommonMixin';\r\nimport { SINGLE_REFERRING } from '../../util/model';\r\n\r\nvar CartesianAxisModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(CartesianAxisModel, _super);\r\n\r\n  function CartesianAxisModel() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  CartesianAxisModel.prototype.getCoordSysModel = function () {\r\n    return this.getReferringComponents('grid', SINGLE_REFERRING).models[0];\r\n  };\r\n\r\n  CartesianAxisModel.type = 'cartesian2dAxis';\r\n  return CartesianAxisModel;\r\n}(ComponentModel);\r\n\r\nexport { CartesianAxisModel };\r\nzrUtil.mixin(CartesianAxisModel, AxisModelCommonMixin);\r\nexport default CartesianAxisModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nvar defaultOption = {\r\n  show: true,\r\n  zlevel: 0,\r\n  z: 0,\r\n  // Inverse the axis.\r\n  inverse: false,\r\n  // Axis name displayed.\r\n  name: '',\r\n  // 'start' | 'middle' | 'end'\r\n  nameLocation: 'end',\r\n  // By degree. By default auto rotate by nameLocation.\r\n  nameRotate: null,\r\n  nameTruncate: {\r\n    maxWidth: null,\r\n    ellipsis: '...',\r\n    placeholder: '.'\r\n  },\r\n  // Use global text style by default.\r\n  nameTextStyle: {},\r\n  // The gap between axisName and axisLine.\r\n  nameGap: 15,\r\n  // Default `false` to support tooltip.\r\n  silent: false,\r\n  // Default `false` to avoid legacy user event listener fail.\r\n  triggerEvent: false,\r\n  tooltip: {\r\n    show: false\r\n  },\r\n  axisPointer: {},\r\n  axisLine: {\r\n    show: true,\r\n    onZero: true,\r\n    onZeroAxisIndex: null,\r\n    lineStyle: {\r\n      color: '#6E7079',\r\n      width: 1,\r\n      type: 'solid'\r\n    },\r\n    // The arrow at both ends the the axis.\r\n    symbol: ['none', 'none'],\r\n    symbolSize: [10, 15]\r\n  },\r\n  axisTick: {\r\n    show: true,\r\n    // Whether axisTick is inside the grid or outside the grid.\r\n    inside: false,\r\n    // The length of axisTick.\r\n    length: 5,\r\n    lineStyle: {\r\n      width: 1\r\n    }\r\n  },\r\n  axisLabel: {\r\n    show: true,\r\n    // Whether axisLabel is inside the grid or outside the grid.\r\n    inside: false,\r\n    rotate: 0,\r\n    // true | false | null/undefined (auto)\r\n    showMinLabel: null,\r\n    // true | false | null/undefined (auto)\r\n    showMaxLabel: null,\r\n    margin: 8,\r\n    // formatter: null,\r\n    fontSize: 12\r\n  },\r\n  splitLine: {\r\n    show: true,\r\n    lineStyle: {\r\n      color: ['#E0E6F1'],\r\n      width: 1,\r\n      type: 'solid'\r\n    }\r\n  },\r\n  splitArea: {\r\n    show: false,\r\n    areaStyle: {\r\n      color: ['rgba(250,250,250,0.2)', 'rgba(210,219,238,0.2)']\r\n    }\r\n  }\r\n};\r\nvar categoryAxis = zrUtil.merge({\r\n  // The gap at both ends of the axis. For categoryAxis, boolean.\r\n  boundaryGap: true,\r\n  // Set false to faster category collection.\r\n  deduplication: null,\r\n  // splitArea: {\r\n  // show: false\r\n  // },\r\n  splitLine: {\r\n    show: false\r\n  },\r\n  axisTick: {\r\n    // If tick is align with label when boundaryGap is true\r\n    alignWithLabel: false,\r\n    interval: 'auto'\r\n  },\r\n  axisLabel: {\r\n    interval: 'auto'\r\n  }\r\n}, defaultOption);\r\nvar valueAxis = zrUtil.merge({\r\n  boundaryGap: [0, 0],\r\n  axisLine: {\r\n    // Not shown when other axis is categoryAxis in cartesian\r\n    show: 'auto'\r\n  },\r\n  axisTick: {\r\n    // Not shown when other axis is categoryAxis in cartesian\r\n    show: 'auto'\r\n  },\r\n  // TODO\r\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\r\n  splitNumber: 5,\r\n  minorTick: {\r\n    // Minor tick, not available for cateogry axis.\r\n    show: false,\r\n    // Split number of minor ticks. The value should be in range of (0, 100)\r\n    splitNumber: 5,\r\n    // Lenght of minor tick\r\n    length: 3,\r\n    // Line style\r\n    lineStyle: {// Default to be same with axisTick\r\n    }\r\n  },\r\n  minorSplitLine: {\r\n    show: false,\r\n    lineStyle: {\r\n      color: '#F4F7FD',\r\n      width: 1\r\n    }\r\n  }\r\n}, defaultOption);\r\nvar timeAxis = zrUtil.merge({\r\n  scale: true,\r\n  splitNumber: 6,\r\n  axisLabel: {\r\n    // To eliminate labels that are not nice\r\n    showMinLabel: false,\r\n    showMaxLabel: false,\r\n    rich: {\r\n      primary: {\r\n        fontWeight: 'bold'\r\n      }\r\n    }\r\n  },\r\n  splitLine: {\r\n    show: false\r\n  }\r\n}, valueAxis);\r\nvar logAxis = zrUtil.defaults({\r\n  scale: true,\r\n  logBase: 10\r\n}, valueAxis);\r\nexport default {\r\n  category: categoryAxis,\r\n  value: valueAxis,\r\n  time: timeAxis,\r\n  log: logAxis\r\n};", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nexport var AXIS_TYPES = {\r\n  value: 1,\r\n  category: 1,\r\n  time: 1,\r\n  log: 1\r\n};", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport axisDefault from './axisDefault';\r\nimport { getLayoutParams, mergeLayoutParam, fetchLayoutMode } from '../util/layout';\r\nimport OrdinalMeta from '../data/OrdinalMeta';\r\nimport { AXIS_TYPES } from './axisCommonTypes';\r\nimport { each, merge } from 'zrender/lib/core/util';\r\n/**\r\n * Generate sub axis model class\r\n * @param axisName 'x' 'y' 'radius' 'angle' 'parallel' ...\r\n */\r\n\r\nexport default function axisModelCreator(registers, axisName, BaseAxisModelClass, extraDefaultOption) {\r\n  each(AXIS_TYPES, function (v, axisType) {\r\n    var defaultOption = merge(merge({}, axisDefault[axisType], true), extraDefaultOption, true);\r\n\r\n    var AxisModel =\r\n    /** @class */\r\n    function (_super) {\r\n      __extends(AxisModel, _super);\r\n\r\n      function AxisModel() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n        _this.type = axisName + 'Axis.' + axisType;\r\n        return _this;\r\n      }\r\n\r\n      AxisModel.prototype.mergeDefaultAndTheme = function (option, ecModel) {\r\n        var layoutMode = fetchLayoutMode(this);\r\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\r\n        var themeModel = ecModel.getTheme();\r\n        merge(option, themeModel.get(axisType + 'Axis'));\r\n        merge(option, this.getDefaultOption());\r\n        option.type = getAxisType(option);\r\n\r\n        if (layoutMode) {\r\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\r\n        }\r\n      };\r\n\r\n      AxisModel.prototype.optionUpdated = function () {\r\n        var thisOption = this.option;\r\n\r\n        if (thisOption.type === 'category') {\r\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\r\n        }\r\n      };\r\n      /**\r\n       * Should not be called before all of 'getInitailData' finished.\r\n       * Because categories are collected during initializing data.\r\n       */\r\n\r\n\r\n      AxisModel.prototype.getCategories = function (rawData) {\r\n        var option = this.option; // FIXME\r\n        // warning if called before all of 'getInitailData' finished.\r\n\r\n        if (option.type === 'category') {\r\n          if (rawData) {\r\n            return option.data;\r\n          }\r\n\r\n          return this.__ordinalMeta.categories;\r\n        }\r\n      };\r\n\r\n      AxisModel.prototype.getOrdinalMeta = function () {\r\n        return this.__ordinalMeta;\r\n      };\r\n\r\n      AxisModel.type = axisName + 'Axis.' + axisType;\r\n      AxisModel.defaultOption = defaultOption;\r\n      return AxisModel;\r\n    }(BaseAxisModelClass);\r\n\r\n    registers.registerComponentModel(AxisModel);\r\n  });\r\n  registers.registerSubTypeDefaulter(axisName + 'Axis', getAxisType);\r\n}\r\n\r\nfunction getAxisType(option) {\r\n  // Default axis with data is category axis\r\n  return option.type || (option.data ? 'category' : 'value');\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport BoundingRect from 'zrender/lib/core/BoundingRect';\r\nimport Cartesian from './Cartesian';\r\nimport { invert } from 'zrender/lib/core/matrix';\r\nimport { applyTransform } from 'zrender/lib/core/vector';\r\nexport var cartesian2DDimensions = ['x', 'y'];\r\n\r\nfunction canCalculateAffineTransform(scale) {\r\n  return scale.type === 'interval' || scale.type === 'time';\r\n}\r\n\r\nvar Cartesian2D =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(Cartesian2D, _super);\r\n\r\n  function Cartesian2D() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = 'cartesian2d';\r\n    _this.dimensions = cartesian2DDimensions;\r\n    return _this;\r\n  }\r\n  /**\r\n   * Calculate an affine transform matrix if two axes are time or value.\r\n   * It's mainly for accelartion on the large time series data.\r\n   */\r\n\r\n\r\n  Cartesian2D.prototype.calcAffineTransform = function () {\r\n    this._transform = this._invTransform = null;\r\n    var xAxisScale = this.getAxis('x').scale;\r\n    var yAxisScale = this.getAxis('y').scale;\r\n\r\n    if (!canCalculateAffineTransform(xAxisScale) || !canCalculateAffineTransform(yAxisScale)) {\r\n      return;\r\n    }\r\n\r\n    var xScaleExtent = xAxisScale.getExtent();\r\n    var yScaleExtent = yAxisScale.getExtent();\r\n    var start = this.dataToPoint([xScaleExtent[0], yScaleExtent[0]]);\r\n    var end = this.dataToPoint([xScaleExtent[1], yScaleExtent[1]]);\r\n    var xScaleSpan = xScaleExtent[1] - xScaleExtent[0];\r\n    var yScaleSpan = yScaleExtent[1] - yScaleExtent[0];\r\n\r\n    if (!xScaleSpan || !yScaleSpan) {\r\n      return;\r\n    } // Accelerate data to point calculation on the special large time series data.\r\n\r\n\r\n    var scaleX = (end[0] - start[0]) / xScaleSpan;\r\n    var scaleY = (end[1] - start[1]) / yScaleSpan;\r\n    var translateX = start[0] - xScaleExtent[0] * scaleX;\r\n    var translateY = start[1] - yScaleExtent[0] * scaleY;\r\n    var m = this._transform = [scaleX, 0, 0, scaleY, translateX, translateY];\r\n    this._invTransform = invert([], m);\r\n  };\r\n  /**\r\n   * Base axis will be used on stacking.\r\n   */\r\n\r\n\r\n  Cartesian2D.prototype.getBaseAxis = function () {\r\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\r\n  };\r\n\r\n  Cartesian2D.prototype.containPoint = function (point) {\r\n    var axisX = this.getAxis('x');\r\n    var axisY = this.getAxis('y');\r\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\r\n  };\r\n\r\n  Cartesian2D.prototype.containData = function (data) {\r\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\r\n  };\r\n\r\n  Cartesian2D.prototype.dataToPoint = function (data, clamp, out) {\r\n    out = out || [];\r\n    var xVal = data[0];\r\n    var yVal = data[1]; // Fast path\r\n\r\n    if (this._transform // It's supported that if data is like `[Inifity, 123]`, where only Y pixel calculated.\r\n    && xVal != null && isFinite(xVal) && yVal != null && isFinite(yVal)) {\r\n      return applyTransform(out, data, this._transform);\r\n    }\r\n\r\n    var xAxis = this.getAxis('x');\r\n    var yAxis = this.getAxis('y');\r\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(xVal, clamp));\r\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(yVal, clamp));\r\n    return out;\r\n  };\r\n\r\n  Cartesian2D.prototype.clampData = function (data, out) {\r\n    var xScale = this.getAxis('x').scale;\r\n    var yScale = this.getAxis('y').scale;\r\n    var xAxisExtent = xScale.getExtent();\r\n    var yAxisExtent = yScale.getExtent();\r\n    var x = xScale.parse(data[0]);\r\n    var y = yScale.parse(data[1]);\r\n    out = out || [];\r\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\r\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\r\n    return out;\r\n  };\r\n\r\n  Cartesian2D.prototype.pointToData = function (point, clamp) {\r\n    var out = [];\r\n\r\n    if (this._invTransform) {\r\n      return applyTransform(out, point, this._invTransform);\r\n    }\r\n\r\n    var xAxis = this.getAxis('x');\r\n    var yAxis = this.getAxis('y');\r\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp);\r\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp);\r\n    return out;\r\n  };\r\n\r\n  Cartesian2D.prototype.getOtherAxis = function (axis) {\r\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\r\n  };\r\n  /**\r\n   * Get rect area of cartesian.\r\n   * Area will have a contain function to determine if a point is in the coordinate system.\r\n   */\r\n\r\n\r\n  Cartesian2D.prototype.getArea = function () {\r\n    var xExtent = this.getAxis('x').getGlobalExtent();\r\n    var yExtent = this.getAxis('y').getGlobalExtent();\r\n    var x = Math.min(xExtent[0], xExtent[1]);\r\n    var y = Math.min(yExtent[0], yExtent[1]);\r\n    var width = Math.max(xExtent[0], xExtent[1]) - x;\r\n    var height = Math.max(yExtent[0], yExtent[1]) - y;\r\n    return new BoundingRect(x, y, width, height);\r\n  };\r\n\r\n  return Cartesian2D;\r\n}(Cartesian);\r\n\r\n;\r\nexport default Cartesian2D;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport Axis from '../Axis';\r\n\r\nvar Axis2D =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(Axis2D, _super);\r\n\r\n  function Axis2D(dim, scale, coordExtent, axisType, position) {\r\n    var _this = _super.call(this, dim, scale, coordExtent) || this;\r\n    /**\r\n     * Index of axis, can be used as key\r\n     * Injected outside.\r\n     */\r\n\r\n\r\n    _this.index = 0;\r\n    _this.type = axisType || 'value';\r\n    _this.position = position || 'bottom';\r\n    return _this;\r\n  }\r\n\r\n  Axis2D.prototype.isHorizontal = function () {\r\n    var position = this.position;\r\n    return position === 'top' || position === 'bottom';\r\n  };\r\n  /**\r\n   * Each item cooresponds to this.getExtent(), which\r\n   * means globalExtent[0] may greater than globalExtent[1],\r\n   * unless `asc` is input.\r\n   *\r\n   * @param {boolean} [asc]\r\n   * @return {Array.<number>}\r\n   */\r\n\r\n\r\n  Axis2D.prototype.getGlobalExtent = function (asc) {\r\n    var ret = this.getExtent();\r\n    ret[0] = this.toGlobalCoord(ret[0]);\r\n    ret[1] = this.toGlobalCoord(ret[1]);\r\n    asc && ret[0] > ret[1] && ret.reverse();\r\n    return ret;\r\n  };\r\n\r\n  Axis2D.prototype.pointToData = function (point, clamp) {\r\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\r\n  };\r\n  /**\r\n   * Set ordinalSortInfo\r\n   * @param info new OrdinalSortInfo\r\n   */\r\n\r\n\r\n  Axis2D.prototype.setCategorySortInfo = function (info) {\r\n    if (this.type !== 'category') {\r\n      return false;\r\n    }\r\n\r\n    this.model.option.categorySortInfo = info;\r\n    this.scale.setSortInfo(info);\r\n  };\r\n\r\n  return Axis2D;\r\n}(Axis);\r\n\r\nexport default Axis2D;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { SINGLE_REFERRING } from '../../util/model';\r\n/**\r\n * Can only be called after coordinate system creation stage.\r\n * (Can be called before coordinate system update stage).\r\n */\r\n\r\nexport function layout(gridModel, axisModel, opt) {\r\n  opt = opt || {};\r\n  var grid = gridModel.coordinateSystem;\r\n  var axis = axisModel.axis;\r\n  var layout = {};\r\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\r\n  var rawAxisPosition = axis.position;\r\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\r\n  var axisDim = axis.dim;\r\n  var rect = grid.getRect();\r\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\r\n  var idx = {\r\n    left: 0,\r\n    right: 1,\r\n    top: 0,\r\n    bottom: 1,\r\n    onZero: 2\r\n  };\r\n  var axisOffset = axisModel.get('offset') || 0;\r\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\r\n\r\n  if (otherAxisOnZeroOf) {\r\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\r\n    posBound[idx.onZero] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\r\n  } // Axis position\r\n\r\n\r\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\r\n\r\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\r\n\r\n  var dirMap = {\r\n    top: -1,\r\n    bottom: 1,\r\n    left: -1,\r\n    right: 1\r\n  };\r\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\r\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx.onZero] : 0;\r\n\r\n  if (axisModel.get(['axisTick', 'inside'])) {\r\n    layout.tickDirection = -layout.tickDirection;\r\n  }\r\n\r\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get(['axisLabel', 'inside']))) {\r\n    layout.labelDirection = -layout.labelDirection;\r\n  } // Special label rotation\r\n\r\n\r\n  var labelRotate = axisModel.get(['axisLabel', 'rotate']);\r\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\r\n\r\n  layout.z2 = 1;\r\n  return layout;\r\n}\r\nexport function isCartesian2DSeries(seriesModel) {\r\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\r\n}\r\nexport function findAxisModels(seriesModel) {\r\n  var axisModelMap = {\r\n    xAxisModel: null,\r\n    yAxisModel: null\r\n  };\r\n  zrUtil.each(axisModelMap, function (v, key) {\r\n    var axisType = key.replace(/Model$/, '');\r\n    var axisModel = seriesModel.getReferringComponents(axisType, SINGLE_REFERRING).models[0];\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (!axisModel) {\r\n        throw new Error(axisType + ' \"' + zrUtil.retrieve3(seriesModel.get(axisType + 'Index'), seriesModel.get(axisType + 'Id'), 0) + '\" not found');\r\n      }\r\n    }\r\n\r\n    axisModelMap[key] = axisModel;\r\n  });\r\n  return axisModelMap;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Grid is a region which contains at most 4 cartesian systems\r\n *\r\n * TODO Default cartesian\r\n */\r\nimport { isObject, each, indexOf, retrieve3 } from 'zrender/lib/core/util';\r\nimport { getLayoutRect } from '../../util/layout';\r\nimport { createScaleByModel, ifAxisCrossZero, niceScaleExtent, estimateLabelUnionRect, getDataDimensionsOnAxis } from '../../coord/axisHelper';\r\nimport Cartesian2D, { cartesian2DDimensions } from './Cartesian2D';\r\nimport Axis2D from './Axis2D';\r\nimport { SINGLE_REFERRING } from '../../util/model';\r\nimport { isCartesian2DSeries, findAxisModels } from './cartesianAxisHelper';\r\n\r\nvar Grid =\r\n/** @class */\r\nfunction () {\r\n  function Grid(gridModel, ecModel, api) {\r\n    // FIXME:TS where used (different from registered type 'cartesian2d')?\r\n    this.type = 'grid';\r\n    this._coordsMap = {};\r\n    this._coordsList = [];\r\n    this._axesMap = {};\r\n    this._axesList = [];\r\n    this.axisPointerEnabled = true;\r\n    this.dimensions = cartesian2DDimensions;\r\n\r\n    this._initCartesian(gridModel, ecModel, api);\r\n\r\n    this.model = gridModel;\r\n  }\r\n\r\n  Grid.prototype.getRect = function () {\r\n    return this._rect;\r\n  };\r\n\r\n  Grid.prototype.update = function (ecModel, api) {\r\n    var axesMap = this._axesMap;\r\n\r\n    this._updateScale(ecModel, this.model);\r\n\r\n    each(axesMap.x, function (xAxis) {\r\n      niceScaleExtent(xAxis.scale, xAxis.model);\r\n    });\r\n    each(axesMap.y, function (yAxis) {\r\n      niceScaleExtent(yAxis.scale, yAxis.model);\r\n    }); // Key: axisDim_axisIndex, value: boolean, whether onZero target.\r\n\r\n    var onZeroRecords = {};\r\n    each(axesMap.x, function (xAxis) {\r\n      fixAxisOnZero(axesMap, 'y', xAxis, onZeroRecords);\r\n    });\r\n    each(axesMap.y, function (yAxis) {\r\n      fixAxisOnZero(axesMap, 'x', yAxis, onZeroRecords);\r\n    }); // Resize again if containLabel is enabled\r\n    // FIXME It may cause getting wrong grid size in data processing stage\r\n\r\n    this.resize(this.model, api);\r\n  };\r\n  /**\r\n   * Resize the grid\r\n   */\r\n\r\n\r\n  Grid.prototype.resize = function (gridModel, api, ignoreContainLabel) {\r\n    var boxLayoutParams = gridModel.getBoxLayoutParams();\r\n    var isContainLabel = !ignoreContainLabel && gridModel.get('containLabel');\r\n    var gridRect = getLayoutRect(boxLayoutParams, {\r\n      width: api.getWidth(),\r\n      height: api.getHeight()\r\n    });\r\n    this._rect = gridRect;\r\n    var axesList = this._axesList;\r\n    adjustAxes(); // Minus label size\r\n\r\n    if (isContainLabel) {\r\n      each(axesList, function (axis) {\r\n        if (!axis.model.get(['axisLabel', 'inside'])) {\r\n          var labelUnionRect = estimateLabelUnionRect(axis);\r\n\r\n          if (labelUnionRect) {\r\n            var dim = axis.isHorizontal() ? 'height' : 'width';\r\n            var margin = axis.model.get(['axisLabel', 'margin']);\r\n            gridRect[dim] -= labelUnionRect[dim] + margin;\r\n\r\n            if (axis.position === 'top') {\r\n              gridRect.y += labelUnionRect.height + margin;\r\n            } else if (axis.position === 'left') {\r\n              gridRect.x += labelUnionRect.width + margin;\r\n            }\r\n          }\r\n        }\r\n      });\r\n      adjustAxes();\r\n    }\r\n\r\n    each(this._coordsList, function (coord) {\r\n      // Calculate affine matrix to accelerate the data to point transform.\r\n      // If all the axes scales are time or value.\r\n      coord.calcAffineTransform();\r\n    });\r\n\r\n    function adjustAxes() {\r\n      each(axesList, function (axis) {\r\n        var isHorizontal = axis.isHorizontal();\r\n        var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\r\n        var idx = axis.inverse ? 1 : 0;\r\n        axis.setExtent(extent[idx], extent[1 - idx]);\r\n        updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\r\n      });\r\n    }\r\n  };\r\n\r\n  Grid.prototype.getAxis = function (dim, axisIndex) {\r\n    var axesMapOnDim = this._axesMap[dim];\r\n\r\n    if (axesMapOnDim != null) {\r\n      return axesMapOnDim[axisIndex || 0]; // if (axisIndex == null) {\r\n      //     Find first axis\r\n      //     for (let name in axesMapOnDim) {\r\n      //         if (axesMapOnDim.hasOwnProperty(name)) {\r\n      //             return axesMapOnDim[name];\r\n      //         }\r\n      //     }\r\n      // }\r\n      // return axesMapOnDim[axisIndex];\r\n    }\r\n  };\r\n\r\n  Grid.prototype.getAxes = function () {\r\n    return this._axesList.slice();\r\n  };\r\n\r\n  Grid.prototype.getCartesian = function (xAxisIndex, yAxisIndex) {\r\n    if (xAxisIndex != null && yAxisIndex != null) {\r\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\r\n      return this._coordsMap[key];\r\n    }\r\n\r\n    if (isObject(xAxisIndex)) {\r\n      yAxisIndex = xAxisIndex.yAxisIndex;\r\n      xAxisIndex = xAxisIndex.xAxisIndex;\r\n    }\r\n\r\n    for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\r\n      if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\r\n        return coordList[i];\r\n      }\r\n    }\r\n  };\r\n\r\n  Grid.prototype.getCartesians = function () {\r\n    return this._coordsList.slice();\r\n  };\r\n  /**\r\n   * @implements\r\n   */\r\n\r\n\r\n  Grid.prototype.convertToPixel = function (ecModel, finder, value) {\r\n    var target = this._findConvertTarget(finder);\r\n\r\n    return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\r\n  };\r\n  /**\r\n   * @implements\r\n   */\r\n\r\n\r\n  Grid.prototype.convertFromPixel = function (ecModel, finder, value) {\r\n    var target = this._findConvertTarget(finder);\r\n\r\n    return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\r\n  };\r\n\r\n  Grid.prototype._findConvertTarget = function (finder) {\r\n    var seriesModel = finder.seriesModel;\r\n    var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis', SINGLE_REFERRING).models[0];\r\n    var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis', SINGLE_REFERRING).models[0];\r\n    var gridModel = finder.gridModel;\r\n    var coordsList = this._coordsList;\r\n    var cartesian;\r\n    var axis;\r\n\r\n    if (seriesModel) {\r\n      cartesian = seriesModel.coordinateSystem;\r\n      indexOf(coordsList, cartesian) < 0 && (cartesian = null);\r\n    } else if (xAxisModel && yAxisModel) {\r\n      cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\r\n    } else if (xAxisModel) {\r\n      axis = this.getAxis('x', xAxisModel.componentIndex);\r\n    } else if (yAxisModel) {\r\n      axis = this.getAxis('y', yAxisModel.componentIndex);\r\n    } // Lowest priority.\r\n    else if (gridModel) {\r\n        var grid = gridModel.coordinateSystem;\r\n\r\n        if (grid === this) {\r\n          cartesian = this._coordsList[0];\r\n        }\r\n      }\r\n\r\n    return {\r\n      cartesian: cartesian,\r\n      axis: axis\r\n    };\r\n  };\r\n  /**\r\n   * @implements\r\n   */\r\n\r\n\r\n  Grid.prototype.containPoint = function (point) {\r\n    var coord = this._coordsList[0];\r\n\r\n    if (coord) {\r\n      return coord.containPoint(point);\r\n    }\r\n  };\r\n  /**\r\n   * Initialize cartesian coordinate systems\r\n   */\r\n\r\n\r\n  Grid.prototype._initCartesian = function (gridModel, ecModel, api) {\r\n    var _this = this;\r\n\r\n    var grid = this;\r\n    var axisPositionUsed = {\r\n      left: false,\r\n      right: false,\r\n      top: false,\r\n      bottom: false\r\n    };\r\n    var axesMap = {\r\n      x: {},\r\n      y: {}\r\n    };\r\n    var axesCount = {\r\n      x: 0,\r\n      y: 0\r\n    }; /// Create axis\r\n\r\n    ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\r\n    ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\r\n\r\n    if (!axesCount.x || !axesCount.y) {\r\n      // Roll back when there no either x or y axis\r\n      this._axesMap = {};\r\n      this._axesList = [];\r\n      return;\r\n    }\r\n\r\n    this._axesMap = axesMap; /// Create cartesian2d\r\n\r\n    each(axesMap.x, function (xAxis, xAxisIndex) {\r\n      each(axesMap.y, function (yAxis, yAxisIndex) {\r\n        var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\r\n        var cartesian = new Cartesian2D(key);\r\n        cartesian.master = _this;\r\n        cartesian.model = gridModel;\r\n        _this._coordsMap[key] = cartesian;\r\n\r\n        _this._coordsList.push(cartesian);\r\n\r\n        cartesian.addAxis(xAxis);\r\n        cartesian.addAxis(yAxis);\r\n      });\r\n    });\r\n\r\n    function createAxisCreator(dimName) {\r\n      return function (axisModel, idx) {\r\n        if (!isAxisUsedInTheGrid(axisModel, gridModel)) {\r\n          return;\r\n        }\r\n\r\n        var axisPosition = axisModel.get('position');\r\n\r\n        if (dimName === 'x') {\r\n          // Fix position\r\n          if (axisPosition !== 'top' && axisPosition !== 'bottom') {\r\n            // Default bottom of X\r\n            axisPosition = axisPositionUsed.bottom ? 'top' : 'bottom';\r\n          }\r\n        } else {\r\n          // Fix position\r\n          if (axisPosition !== 'left' && axisPosition !== 'right') {\r\n            // Default left of Y\r\n            axisPosition = axisPositionUsed.left ? 'right' : 'left';\r\n          }\r\n        }\r\n\r\n        axisPositionUsed[axisPosition] = true;\r\n        var axis = new Axis2D(dimName, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\r\n        var isCategory = axis.type === 'category';\r\n        axis.onBand = isCategory && axisModel.get('boundaryGap');\r\n        axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\r\n\r\n        axisModel.axis = axis; // Inject axisModel into axis\r\n\r\n        axis.model = axisModel; // Inject grid info axis\r\n\r\n        axis.grid = grid; // Index of axis, can be used as key\r\n\r\n        axis.index = idx;\r\n\r\n        grid._axesList.push(axis);\r\n\r\n        axesMap[dimName][idx] = axis;\r\n        axesCount[dimName]++;\r\n      };\r\n    }\r\n  };\r\n  /**\r\n   * Update cartesian properties from series.\r\n   */\r\n\r\n\r\n  Grid.prototype._updateScale = function (ecModel, gridModel) {\r\n    // Reset scale\r\n    each(this._axesList, function (axis) {\r\n      axis.scale.setExtent(Infinity, -Infinity);\r\n\r\n      if (axis.type === 'category') {\r\n        var categorySortInfo = axis.model.get('categorySortInfo');\r\n        axis.scale.setSortInfo(categorySortInfo);\r\n      }\r\n    });\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      if (isCartesian2DSeries(seriesModel)) {\r\n        var axesModelMap = findAxisModels(seriesModel);\r\n        var xAxisModel = axesModelMap.xAxisModel;\r\n        var yAxisModel = axesModelMap.yAxisModel;\r\n\r\n        if (!isAxisUsedInTheGrid(xAxisModel, gridModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel)) {\r\n          return;\r\n        }\r\n\r\n        var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\r\n        var data = seriesModel.getData();\r\n        var xAxis = cartesian.getAxis('x');\r\n        var yAxis = cartesian.getAxis('y');\r\n\r\n        if (data.type === 'list') {\r\n          unionExtent(data, xAxis);\r\n          unionExtent(data, yAxis);\r\n        }\r\n      }\r\n    }, this);\r\n\r\n    function unionExtent(data, axis) {\r\n      each(getDataDimensionsOnAxis(data, axis.dim), function (dim) {\r\n        axis.scale.unionExtentFromData(data, dim);\r\n      });\r\n    }\r\n  };\r\n  /**\r\n   * @param dim 'x' or 'y' or 'auto' or null/undefined\r\n   */\r\n\r\n\r\n  Grid.prototype.getTooltipAxes = function (dim) {\r\n    var baseAxes = [];\r\n    var otherAxes = [];\r\n    each(this.getCartesians(), function (cartesian) {\r\n      var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\r\n      var otherAxis = cartesian.getOtherAxis(baseAxis);\r\n      indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\r\n      indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\r\n    });\r\n    return {\r\n      baseAxes: baseAxes,\r\n      otherAxes: otherAxes\r\n    };\r\n  };\r\n\r\n  Grid.create = function (ecModel, api) {\r\n    var grids = [];\r\n    ecModel.eachComponent('grid', function (gridModel, idx) {\r\n      var grid = new Grid(gridModel, ecModel, api);\r\n      grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\r\n      // should be performed in create stage.\r\n\r\n      grid.resize(gridModel, api, true);\r\n      gridModel.coordinateSystem = grid;\r\n      grids.push(grid);\r\n    }); // Inject the coordinateSystems into seriesModel\r\n\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      if (!isCartesian2DSeries(seriesModel)) {\r\n        return;\r\n      }\r\n\r\n      var axesModelMap = findAxisModels(seriesModel);\r\n      var xAxisModel = axesModelMap.xAxisModel;\r\n      var yAxisModel = axesModelMap.yAxisModel;\r\n      var gridModel = xAxisModel.getCoordSysModel();\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (!gridModel) {\r\n          throw new Error('Grid \"' + retrieve3(xAxisModel.get('gridIndex'), xAxisModel.get('gridId'), 0) + '\" not found');\r\n        }\r\n\r\n        if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\r\n          throw new Error('xAxis and yAxis must use the same grid');\r\n        }\r\n      }\r\n\r\n      var grid = gridModel.coordinateSystem;\r\n      seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\r\n    });\r\n    return grids;\r\n  }; // For deciding which dimensions to use when creating list data\r\n\r\n\r\n  Grid.dimensions = cartesian2DDimensions;\r\n  return Grid;\r\n}();\r\n/**\r\n * Check if the axis is used in the specified grid.\r\n */\r\n\r\n\r\nfunction isAxisUsedInTheGrid(axisModel, gridModel) {\r\n  return axisModel.getCoordSysModel() === gridModel;\r\n}\r\n\r\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis, // Key: see `getOnZeroRecordKey`\r\nonZeroRecords) {\r\n  axis.getAxesOnZeroOf = function () {\r\n    // TODO: onZero of multiple axes.\r\n    return otherAxisOnZeroOf ? [otherAxisOnZeroOf] : [];\r\n  }; // onZero can not be enabled in these two situations:\r\n  // 1. When any other axis is a category axis.\r\n  // 2. When no axis is cross 0 point.\r\n\r\n\r\n  var otherAxes = axesMap[otherAxisDim];\r\n  var otherAxisOnZeroOf;\r\n  var axisModel = axis.model;\r\n  var onZero = axisModel.get(['axisLine', 'onZero']);\r\n  var onZeroAxisIndex = axisModel.get(['axisLine', 'onZeroAxisIndex']);\r\n\r\n  if (!onZero) {\r\n    return;\r\n  } // If target axis is specified.\r\n\r\n\r\n  if (onZeroAxisIndex != null) {\r\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\r\n      otherAxisOnZeroOf = otherAxes[onZeroAxisIndex];\r\n    }\r\n  } else {\r\n    // Find the first available other axis.\r\n    for (var idx in otherAxes) {\r\n      if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx]) // Consider that two Y axes on one value axis,\r\n      // if both onZero, the two Y axes overlap.\r\n      && !onZeroRecords[getOnZeroRecordKey(otherAxes[idx])]) {\r\n        otherAxisOnZeroOf = otherAxes[idx];\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (otherAxisOnZeroOf) {\r\n    onZeroRecords[getOnZeroRecordKey(otherAxisOnZeroOf)] = true;\r\n  }\r\n\r\n  function getOnZeroRecordKey(axis) {\r\n    return axis.dim + '_' + axis.index;\r\n  }\r\n}\r\n\r\nfunction canOnZeroToAxis(axis) {\r\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\r\n}\r\n\r\nfunction updateAxisTransform(axis, coordBase) {\r\n  var axisExtent = axis.getExtent();\r\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\r\n\r\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\r\n    return coord + coordBase;\r\n  } : function (coord) {\r\n    return axisExtentSum - coord + coordBase;\r\n  };\r\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\r\n    return coord - coordBase;\r\n  } : function (coord) {\r\n    return axisExtentSum - coord + coordBase;\r\n  };\r\n}\r\n\r\nexport default Grid;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { retrieve, defaults, extend, each, isObject, map } from 'zrender/lib/core/util';\r\nimport * as graphic from '../../util/graphic';\r\nimport { getECData } from '../../util/innerStore';\r\nimport { createTextStyle } from '../../label/labelStyle';\r\nimport Model from '../../model/Model';\r\nimport { isRadianAroundZero, remRadian } from '../../util/number';\r\nimport { createSymbol, normalizeSymbolOffset } from '../../util/symbol';\r\nimport * as matrixUtil from 'zrender/lib/core/matrix';\r\nimport { applyTransform as v2ApplyTransform } from 'zrender/lib/core/vector';\r\nimport { shouldShowAllLabels } from '../../coord/axisHelper';\r\nimport { prepareLayoutList, hideOverlap } from '../../label/labelLayoutHelper';\r\nvar PI = Math.PI;\r\n/**\r\n * A final axis is translated and rotated from a \"standard axis\".\r\n * So opt.position and opt.rotation is required.\r\n *\r\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\r\n * for example: (0, 0) ------------> (0, 50)\r\n *\r\n * nameDirection or tickDirection or labelDirection is 1 means tick\r\n * or label is below the standard axis, whereas is -1 means above\r\n * the standard axis. labelOffset means offset between label and axis,\r\n * which is useful when 'onZero', where axisLabel is in the grid and\r\n * label in outside grid.\r\n *\r\n * Tips: like always,\r\n * positive rotation represents anticlockwise, and negative rotation\r\n * represents clockwise.\r\n * The direction of position coordinate is the same as the direction\r\n * of screen coordinate.\r\n *\r\n * Do not need to consider axis 'inverse', which is auto processed by\r\n * axis extent.\r\n */\r\n\r\nvar AxisBuilder =\r\n/** @class */\r\nfunction () {\r\n  function AxisBuilder(axisModel, opt) {\r\n    this.group = new graphic.Group();\r\n    this.opt = opt;\r\n    this.axisModel = axisModel; // Default value\r\n\r\n    defaults(opt, {\r\n      labelOffset: 0,\r\n      nameDirection: 1,\r\n      tickDirection: 1,\r\n      labelDirection: 1,\r\n      silent: true,\r\n      handleAutoShown: function () {\r\n        return true;\r\n      }\r\n    }); // FIXME Not use a seperate text group?\r\n\r\n    var transformGroup = new graphic.Group({\r\n      x: opt.position[0],\r\n      y: opt.position[1],\r\n      rotation: opt.rotation\r\n    }); // this.group.add(transformGroup);\r\n    // this._transformGroup = transformGroup;\r\n\r\n    transformGroup.updateTransform();\r\n    this._transformGroup = transformGroup;\r\n  }\r\n\r\n  AxisBuilder.prototype.hasBuilder = function (name) {\r\n    return !!builders[name];\r\n  };\r\n\r\n  AxisBuilder.prototype.add = function (name) {\r\n    builders[name](this.opt, this.axisModel, this.group, this._transformGroup);\r\n  };\r\n\r\n  AxisBuilder.prototype.getGroup = function () {\r\n    return this.group;\r\n  };\r\n\r\n  AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\r\n    var rotationDiff = remRadian(textRotation - axisRotation);\r\n    var textAlign;\r\n    var textVerticalAlign;\r\n\r\n    if (isRadianAroundZero(rotationDiff)) {\r\n      // Label is parallel with axis line.\r\n      textVerticalAlign = direction > 0 ? 'top' : 'bottom';\r\n      textAlign = 'center';\r\n    } else if (isRadianAroundZero(rotationDiff - PI)) {\r\n      // Label is inverse parallel with axis line.\r\n      textVerticalAlign = direction > 0 ? 'bottom' : 'top';\r\n      textAlign = 'center';\r\n    } else {\r\n      textVerticalAlign = 'middle';\r\n\r\n      if (rotationDiff > 0 && rotationDiff < PI) {\r\n        textAlign = direction > 0 ? 'right' : 'left';\r\n      } else {\r\n        textAlign = direction > 0 ? 'left' : 'right';\r\n      }\r\n    }\r\n\r\n    return {\r\n      rotation: rotationDiff,\r\n      textAlign: textAlign,\r\n      textVerticalAlign: textVerticalAlign\r\n    };\r\n  };\r\n\r\n  AxisBuilder.makeAxisEventDataBase = function (axisModel) {\r\n    var eventData = {\r\n      componentType: axisModel.mainType,\r\n      componentIndex: axisModel.componentIndex\r\n    };\r\n    eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\r\n    return eventData;\r\n  };\r\n\r\n  AxisBuilder.isLabelSilent = function (axisModel) {\r\n    var tooltipOpt = axisModel.get('tooltip');\r\n    return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\r\n    || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\r\n  };\r\n\r\n  return AxisBuilder;\r\n}();\r\n\r\n;\r\nvar builders = {\r\n  axisLine: function (opt, axisModel, group, transformGroup) {\r\n    var shown = axisModel.get(['axisLine', 'show']);\r\n\r\n    if (shown === 'auto' && opt.handleAutoShown) {\r\n      shown = opt.handleAutoShown('axisLine');\r\n    }\r\n\r\n    if (!shown) {\r\n      return;\r\n    }\r\n\r\n    var extent = axisModel.axis.getExtent();\r\n    var matrix = transformGroup.transform;\r\n    var pt1 = [extent[0], 0];\r\n    var pt2 = [extent[1], 0];\r\n\r\n    if (matrix) {\r\n      v2ApplyTransform(pt1, pt1, matrix);\r\n      v2ApplyTransform(pt2, pt2, matrix);\r\n    }\r\n\r\n    var lineStyle = extend({\r\n      lineCap: 'round'\r\n    }, axisModel.getModel(['axisLine', 'lineStyle']).getLineStyle());\r\n    var line = new graphic.Line({\r\n      // Id for animation\r\n      subPixelOptimize: true,\r\n      shape: {\r\n        x1: pt1[0],\r\n        y1: pt1[1],\r\n        x2: pt2[0],\r\n        y2: pt2[1]\r\n      },\r\n      style: lineStyle,\r\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\r\n      silent: true,\r\n      z2: 1\r\n    });\r\n    line.anid = 'line';\r\n    group.add(line);\r\n    var arrows = axisModel.get(['axisLine', 'symbol']);\r\n\r\n    if (arrows != null) {\r\n      var arrowSize = axisModel.get(['axisLine', 'symbolSize']);\r\n\r\n      if (typeof arrows === 'string') {\r\n        // Use the same arrow for start and end point\r\n        arrows = [arrows, arrows];\r\n      }\r\n\r\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\r\n        // Use the same size for width and height\r\n        arrowSize = [arrowSize, arrowSize];\r\n      }\r\n\r\n      var arrowOffset = normalizeSymbolOffset(axisModel.get(['axisLine', 'symbolOffset']) || 0, arrowSize);\r\n      var symbolWidth_1 = arrowSize[0];\r\n      var symbolHeight_1 = arrowSize[1];\r\n      each([{\r\n        rotate: opt.rotation + Math.PI / 2,\r\n        offset: arrowOffset[0],\r\n        r: 0\r\n      }, {\r\n        rotate: opt.rotation - Math.PI / 2,\r\n        offset: arrowOffset[1],\r\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\r\n      }], function (point, index) {\r\n        if (arrows[index] !== 'none' && arrows[index] != null) {\r\n          var symbol = createSymbol(arrows[index], -symbolWidth_1 / 2, -symbolHeight_1 / 2, symbolWidth_1, symbolHeight_1, lineStyle.stroke, true); // Calculate arrow position with offset\r\n\r\n          var r = point.r + point.offset;\r\n          symbol.attr({\r\n            rotation: point.rotate,\r\n            x: pt1[0] + r * Math.cos(opt.rotation),\r\n            y: pt1[1] - r * Math.sin(opt.rotation),\r\n            silent: true,\r\n            z2: 11\r\n          });\r\n          group.add(symbol);\r\n        }\r\n      });\r\n    }\r\n  },\r\n  axisTickLabel: function (opt, axisModel, group, transformGroup) {\r\n    var ticksEls = buildAxisMajorTicks(group, transformGroup, axisModel, opt);\r\n    var labelEls = buildAxisLabel(group, transformGroup, axisModel, opt);\r\n    fixMinMaxLabelShow(axisModel, labelEls, ticksEls);\r\n    buildAxisMinorTicks(group, transformGroup, axisModel, opt.tickDirection); // This bit fixes the label overlap issue for the time chart.\r\n    // See https://github.com/apache/echarts/issues/14266 for more.\r\n\r\n    if (axisModel.get(['axisLabel', 'hideOverlap'])) {\r\n      var labelList = prepareLayoutList(map(labelEls, function (label) {\r\n        return {\r\n          label: label,\r\n          priority: label.z2,\r\n          defaultAttr: {\r\n            ignore: label.ignore\r\n          }\r\n        };\r\n      }));\r\n      hideOverlap(labelList);\r\n    }\r\n  },\r\n  axisName: function (opt, axisModel, group, transformGroup) {\r\n    var name = retrieve(opt.axisName, axisModel.get('name'));\r\n\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    var nameLocation = axisModel.get('nameLocation');\r\n    var nameDirection = opt.nameDirection;\r\n    var textStyleModel = axisModel.getModel('nameTextStyle');\r\n    var gap = axisModel.get('nameGap') || 0;\r\n    var extent = axisModel.axis.getExtent();\r\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\r\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // Reuse labelOffset.\r\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\r\n    var labelLayout;\r\n    var nameRotation = axisModel.get('nameRotate');\r\n\r\n    if (nameRotation != null) {\r\n      nameRotation = nameRotation * PI / 180; // To radian.\r\n    }\r\n\r\n    var axisNameAvailableWidth;\r\n\r\n    if (isNameLocationCenter(nameLocation)) {\r\n      labelLayout = AxisBuilder.innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\r\n      nameDirection);\r\n    } else {\r\n      labelLayout = endTextLayout(opt.rotation, nameLocation, nameRotation || 0, extent);\r\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\r\n\r\n      if (axisNameAvailableWidth != null) {\r\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\r\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\r\n      }\r\n    }\r\n\r\n    var textFont = textStyleModel.getFont();\r\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\r\n    var ellipsis = truncateOpt.ellipsis;\r\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth);\r\n    var textEl = new graphic.Text({\r\n      x: pos[0],\r\n      y: pos[1],\r\n      rotation: labelLayout.rotation,\r\n      silent: AxisBuilder.isLabelSilent(axisModel),\r\n      style: createTextStyle(textStyleModel, {\r\n        text: name,\r\n        font: textFont,\r\n        overflow: 'truncate',\r\n        width: maxWidth,\r\n        ellipsis: ellipsis,\r\n        fill: textStyleModel.getTextColor() || axisModel.get(['axisLine', 'lineStyle', 'color']),\r\n        align: textStyleModel.get('align') || labelLayout.textAlign,\r\n        verticalAlign: textStyleModel.get('verticalAlign') || labelLayout.textVerticalAlign\r\n      }),\r\n      z2: 1\r\n    });\r\n    graphic.setTooltipConfig({\r\n      el: textEl,\r\n      componentModel: axisModel,\r\n      itemName: name\r\n    });\r\n    textEl.__fullText = name; // Id for animation\r\n\r\n    textEl.anid = 'name';\r\n\r\n    if (axisModel.get('triggerEvent')) {\r\n      var eventData = AxisBuilder.makeAxisEventDataBase(axisModel);\r\n      eventData.targetType = 'axisName';\r\n      eventData.name = name;\r\n      getECData(textEl).eventData = eventData;\r\n    } // FIXME\r\n\r\n\r\n    transformGroup.add(textEl);\r\n    textEl.updateTransform();\r\n    group.add(textEl);\r\n    textEl.decomposeTransform();\r\n  }\r\n};\r\n\r\nfunction endTextLayout(rotation, textPosition, textRotate, extent) {\r\n  var rotationDiff = remRadian(textRotate - rotation);\r\n  var textAlign;\r\n  var textVerticalAlign;\r\n  var inverse = extent[0] > extent[1];\r\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\r\n\r\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\r\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\r\n    textAlign = 'center';\r\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\r\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\r\n    textAlign = 'center';\r\n  } else {\r\n    textVerticalAlign = 'middle';\r\n\r\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\r\n      textAlign = onLeft ? 'left' : 'right';\r\n    } else {\r\n      textAlign = onLeft ? 'right' : 'left';\r\n    }\r\n  }\r\n\r\n  return {\r\n    rotation: rotationDiff,\r\n    textAlign: textAlign,\r\n    textVerticalAlign: textVerticalAlign\r\n  };\r\n}\r\n\r\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\r\n  if (shouldShowAllLabels(axisModel.axis)) {\r\n    return;\r\n  } // If min or max are user set, we need to check\r\n  // If the tick on min(max) are overlap on their neighbour tick\r\n  // If they are overlapped, we need to hide the min(max) tick label\r\n\r\n\r\n  var showMinLabel = axisModel.get(['axisLabel', 'showMinLabel']);\r\n  var showMaxLabel = axisModel.get(['axisLabel', 'showMaxLabel']); // FIXME\r\n  // Have not consider onBand yet, where tick els is more than label els.\r\n\r\n  labelEls = labelEls || [];\r\n  tickEls = tickEls || [];\r\n  var firstLabel = labelEls[0];\r\n  var nextLabel = labelEls[1];\r\n  var lastLabel = labelEls[labelEls.length - 1];\r\n  var prevLabel = labelEls[labelEls.length - 2];\r\n  var firstTick = tickEls[0];\r\n  var nextTick = tickEls[1];\r\n  var lastTick = tickEls[tickEls.length - 1];\r\n  var prevTick = tickEls[tickEls.length - 2];\r\n\r\n  if (showMinLabel === false) {\r\n    ignoreEl(firstLabel);\r\n    ignoreEl(firstTick);\r\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\r\n    if (showMinLabel) {\r\n      ignoreEl(nextLabel);\r\n      ignoreEl(nextTick);\r\n    } else {\r\n      ignoreEl(firstLabel);\r\n      ignoreEl(firstTick);\r\n    }\r\n  }\r\n\r\n  if (showMaxLabel === false) {\r\n    ignoreEl(lastLabel);\r\n    ignoreEl(lastTick);\r\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\r\n    if (showMaxLabel) {\r\n      ignoreEl(prevLabel);\r\n      ignoreEl(prevTick);\r\n    } else {\r\n      ignoreEl(lastLabel);\r\n      ignoreEl(lastTick);\r\n    }\r\n  }\r\n}\r\n\r\nfunction ignoreEl(el) {\r\n  el && (el.ignore = true);\r\n}\r\n\r\nfunction isTwoLabelOverlapped(current, next) {\r\n  // current and next has the same rotation.\r\n  var firstRect = current && current.getBoundingRect().clone();\r\n  var nextRect = next && next.getBoundingRect().clone();\r\n\r\n  if (!firstRect || !nextRect) {\r\n    return;\r\n  } // When checking intersect of two rotated labels, we use mRotationBack\r\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\r\n\r\n\r\n  var mRotationBack = matrixUtil.identity([]);\r\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\r\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\r\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\r\n  return firstRect.intersect(nextRect);\r\n}\r\n\r\nfunction isNameLocationCenter(nameLocation) {\r\n  return nameLocation === 'middle' || nameLocation === 'center';\r\n}\r\n\r\nfunction createTicks(ticksCoords, tickTransform, tickEndCoord, tickLineStyle, anidPrefix) {\r\n  var tickEls = [];\r\n  var pt1 = [];\r\n  var pt2 = [];\r\n\r\n  for (var i = 0; i < ticksCoords.length; i++) {\r\n    var tickCoord = ticksCoords[i].coord;\r\n    pt1[0] = tickCoord;\r\n    pt1[1] = 0;\r\n    pt2[0] = tickCoord;\r\n    pt2[1] = tickEndCoord;\r\n\r\n    if (tickTransform) {\r\n      v2ApplyTransform(pt1, pt1, tickTransform);\r\n      v2ApplyTransform(pt2, pt2, tickTransform);\r\n    } // Tick line, Not use group transform to have better line draw\r\n\r\n\r\n    var tickEl = new graphic.Line({\r\n      subPixelOptimize: true,\r\n      shape: {\r\n        x1: pt1[0],\r\n        y1: pt1[1],\r\n        x2: pt2[0],\r\n        y2: pt2[1]\r\n      },\r\n      style: tickLineStyle,\r\n      z2: 2,\r\n      autoBatch: true,\r\n      silent: true\r\n    });\r\n    tickEl.anid = anidPrefix + '_' + ticksCoords[i].tickValue;\r\n    tickEls.push(tickEl);\r\n  }\r\n\r\n  return tickEls;\r\n}\r\n\r\nfunction buildAxisMajorTicks(group, transformGroup, axisModel, opt) {\r\n  var axis = axisModel.axis;\r\n  var tickModel = axisModel.getModel('axisTick');\r\n  var shown = tickModel.get('show');\r\n\r\n  if (shown === 'auto' && opt.handleAutoShown) {\r\n    shown = opt.handleAutoShown('axisTick');\r\n  }\r\n\r\n  if (!shown || axis.scale.isBlank()) {\r\n    return;\r\n  }\r\n\r\n  var lineStyleModel = tickModel.getModel('lineStyle');\r\n  var tickEndCoord = opt.tickDirection * tickModel.get('length');\r\n  var ticksCoords = axis.getTicksCoords();\r\n  var ticksEls = createTicks(ticksCoords, transformGroup.transform, tickEndCoord, defaults(lineStyleModel.getLineStyle(), {\r\n    stroke: axisModel.get(['axisLine', 'lineStyle', 'color'])\r\n  }), 'ticks');\r\n\r\n  for (var i = 0; i < ticksEls.length; i++) {\r\n    group.add(ticksEls[i]);\r\n  }\r\n\r\n  return ticksEls;\r\n}\r\n\r\nfunction buildAxisMinorTicks(group, transformGroup, axisModel, tickDirection) {\r\n  var axis = axisModel.axis;\r\n  var minorTickModel = axisModel.getModel('minorTick');\r\n\r\n  if (!minorTickModel.get('show') || axis.scale.isBlank()) {\r\n    return;\r\n  }\r\n\r\n  var minorTicksCoords = axis.getMinorTicksCoords();\r\n\r\n  if (!minorTicksCoords.length) {\r\n    return;\r\n  }\r\n\r\n  var lineStyleModel = minorTickModel.getModel('lineStyle');\r\n  var tickEndCoord = tickDirection * minorTickModel.get('length');\r\n  var minorTickLineStyle = defaults(lineStyleModel.getLineStyle(), defaults(axisModel.getModel('axisTick').getLineStyle(), {\r\n    stroke: axisModel.get(['axisLine', 'lineStyle', 'color'])\r\n  }));\r\n\r\n  for (var i = 0; i < minorTicksCoords.length; i++) {\r\n    var minorTicksEls = createTicks(minorTicksCoords[i], transformGroup.transform, tickEndCoord, minorTickLineStyle, 'minorticks_' + i);\r\n\r\n    for (var k = 0; k < minorTicksEls.length; k++) {\r\n      group.add(minorTicksEls[k]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction buildAxisLabel(group, transformGroup, axisModel, opt) {\r\n  var axis = axisModel.axis;\r\n  var show = retrieve(opt.axisLabelShow, axisModel.get(['axisLabel', 'show']));\r\n\r\n  if (!show || axis.scale.isBlank()) {\r\n    return;\r\n  }\r\n\r\n  var labelModel = axisModel.getModel('axisLabel');\r\n  var labelMargin = labelModel.get('margin');\r\n  var labels = axis.getViewLabels(); // Special label rotate.\r\n\r\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\r\n  var labelLayout = AxisBuilder.innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\r\n  var rawCategoryData = axisModel.getCategories && axisModel.getCategories(true);\r\n  var labelEls = [];\r\n  var silent = AxisBuilder.isLabelSilent(axisModel);\r\n  var triggerEvent = axisModel.get('triggerEvent');\r\n  each(labels, function (labelItem, index) {\r\n    var tickValue = axis.scale.type === 'ordinal' ? axis.scale.getRawOrdinalNumber(labelItem.tickValue) : labelItem.tickValue;\r\n    var formattedLabel = labelItem.formattedLabel;\r\n    var rawLabel = labelItem.rawLabel;\r\n    var itemLabelModel = labelModel;\r\n\r\n    if (rawCategoryData && rawCategoryData[tickValue]) {\r\n      var rawCategoryItem = rawCategoryData[tickValue];\r\n\r\n      if (isObject(rawCategoryItem) && rawCategoryItem.textStyle) {\r\n        itemLabelModel = new Model(rawCategoryItem.textStyle, labelModel, axisModel.ecModel);\r\n      }\r\n    }\r\n\r\n    var textColor = itemLabelModel.getTextColor() || axisModel.get(['axisLine', 'lineStyle', 'color']);\r\n    var tickCoord = axis.dataToCoord(tickValue);\r\n    var textEl = new graphic.Text({\r\n      x: tickCoord,\r\n      y: opt.labelOffset + opt.labelDirection * labelMargin,\r\n      rotation: labelLayout.rotation,\r\n      silent: silent,\r\n      z2: 10 + (labelItem.level || 0),\r\n      style: createTextStyle(itemLabelModel, {\r\n        text: formattedLabel,\r\n        align: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\r\n        verticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\r\n        fill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\r\n        // index of axis.data. So tick should not be exposed to user\r\n        // in category axis.\r\n        // (2) Compatible with previous version, which always use formatted label as\r\n        // input. But in interval scale the formatted label is like '223,445', which\r\n        // maked user repalce ','. So we modify it to return original val but remain\r\n        // it as 'string' to avoid error in replacing.\r\n        axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\r\n      })\r\n    });\r\n    textEl.anid = 'label_' + tickValue; // Pack data for mouse event\r\n\r\n    if (triggerEvent) {\r\n      var eventData = AxisBuilder.makeAxisEventDataBase(axisModel);\r\n      eventData.targetType = 'axisLabel';\r\n      eventData.value = rawLabel;\r\n      getECData(textEl).eventData = eventData;\r\n    } // FIXME\r\n\r\n\r\n    transformGroup.add(textEl);\r\n    textEl.updateTransform();\r\n    labelEls.push(textEl);\r\n    group.add(textEl);\r\n    textEl.decomposeTransform();\r\n  });\r\n  return labelEls;\r\n}\r\n\r\nexport default AxisBuilder;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport Model from '../../model/Model';\r\nimport { each, curry, clone, defaults, isArray, indexOf } from 'zrender/lib/core/util'; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\r\n// allAxesInfo should be updated when setOption performed.\r\n\r\nexport function collect(ecModel, api) {\r\n  var result = {\r\n    /**\r\n     * key: makeKey(axis.model)\r\n     * value: {\r\n     *      axis,\r\n     *      coordSys,\r\n     *      axisPointerModel,\r\n     *      triggerTooltip,\r\n     *      involveSeries,\r\n     *      snap,\r\n     *      seriesModels,\r\n     *      seriesDataCount\r\n     * }\r\n     */\r\n    axesInfo: {},\r\n    seriesInvolved: false,\r\n\r\n    /**\r\n     * key: makeKey(coordSys.model)\r\n     * value: Object: key makeKey(axis.model), value: axisInfo\r\n     */\r\n    coordSysAxesInfo: {},\r\n    coordSysMap: {}\r\n  };\r\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\r\n\r\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\r\n  return result;\r\n}\r\n\r\nfunction collectAxesInfo(result, ecModel, api) {\r\n  var globalTooltipModel = ecModel.getComponent('tooltip');\r\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\r\n\r\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\r\n  var linkGroups = []; // Collect axes info.\r\n\r\n  each(api.getCoordinateSystems(), function (coordSys) {\r\n    // Some coordinate system do not support axes, like geo.\r\n    if (!coordSys.axisPointerEnabled) {\r\n      return;\r\n    }\r\n\r\n    var coordSysKey = makeKey(coordSys.model);\r\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\r\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\r\n    // for user. So we enable seting tooltip on coordSys model.\r\n\r\n    var coordSysModel = coordSys.model;\r\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\r\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\r\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\r\n\r\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\r\n    // show but axisPointer will show as normal.\r\n    && baseTooltipModel.get('show')) {\r\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\r\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\r\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\r\n      var cross = baseTooltipModel.get(['axisPointer', 'type']) === 'cross';\r\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get(['axisPointer', 'axis']));\r\n\r\n      if (triggerAxis || cross) {\r\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\r\n      }\r\n\r\n      if (cross) {\r\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\r\n      }\r\n    } // fromTooltip: true | false | 'cross'\r\n    // triggerTooltip: true | false | null\r\n\r\n\r\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\r\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\r\n      var axisPointerShow = axisPointerModel.get('show');\r\n\r\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\r\n        return;\r\n      }\r\n\r\n      if (triggerTooltip == null) {\r\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\r\n      }\r\n\r\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\r\n      var snap = axisPointerModel.get('snap');\r\n      var axisKey = makeKey(axis.model);\r\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\r\n\r\n      var axisInfo = result.axesInfo[axisKey] = {\r\n        key: axisKey,\r\n        axis: axis,\r\n        coordSys: coordSys,\r\n        axisPointerModel: axisPointerModel,\r\n        triggerTooltip: triggerTooltip,\r\n        involveSeries: involveSeries,\r\n        snap: snap,\r\n        useHandle: isHandleTrigger(axisPointerModel),\r\n        seriesModels: [],\r\n        linkGroup: null\r\n      };\r\n      axesInfoInCoordSys[axisKey] = axisInfo;\r\n      result.seriesInvolved = result.seriesInvolved || involveSeries;\r\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\r\n\r\n      if (groupIndex != null) {\r\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\r\n          axesInfo: {}\r\n        });\r\n        linkGroup.axesInfo[axisKey] = axisInfo;\r\n        linkGroup.mapper = linksOption[groupIndex].mapper;\r\n        axisInfo.linkGroup = linkGroup;\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\r\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\r\n  var fields = ['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'];\r\n  var volatileOption = {};\r\n  each(fields, function (field) {\r\n    volatileOption[field] = clone(tooltipAxisPointerModel.get(field));\r\n  }); // category axis do not auto snap, otherwise some tick that do not\r\n  // has value can not be hovered. value/time/log axis default snap if\r\n  // triggered from tooltip and trigger tooltip.\r\n\r\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\r\n  // Only these properties can be overrided from tooltip to axisPointer.\r\n\r\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\r\n    volatileOption.type = 'line';\r\n  }\r\n\r\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\r\n\r\n  labelOption.show == null && (labelOption.show = false);\r\n\r\n  if (fromTooltip === 'cross') {\r\n    // When 'cross', both axes show labels.\r\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get(['label', 'show']);\r\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\r\n    // (cross style is dashed by default)\r\n\r\n    if (!triggerTooltip) {\r\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\r\n      crossStyle && defaults(labelOption, crossStyle.textStyle);\r\n    }\r\n  }\r\n\r\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\r\n}\r\n\r\nfunction collectSeriesInfo(result, ecModel) {\r\n  // Prepare data for axis trigger\r\n  ecModel.eachSeries(function (seriesModel) {\r\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var seriesTooltipTrigger = seriesModel.get(['tooltip', 'trigger'], true);\r\n    var seriesTooltipShow = seriesModel.get(['tooltip', 'show'], true);\r\n\r\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get(['axisPointer', 'show'], true) === false) {\r\n      return;\r\n    }\r\n\r\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\r\n      var axis = axisInfo.axis;\r\n\r\n      if (coordSys.getAxis(axis.dim) === axis) {\r\n        axisInfo.seriesModels.push(seriesModel);\r\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\r\n        axisInfo.seriesDataCount += seriesModel.getData().count();\r\n      }\r\n    });\r\n  });\r\n}\r\n/**\r\n * For example:\r\n * {\r\n *     axisPointer: {\r\n *         links: [{\r\n *             xAxisIndex: [2, 4],\r\n *             yAxisIndex: 'all'\r\n *         }, {\r\n *             xAxisId: ['a5', 'a7'],\r\n *             xAxisName: 'xxx'\r\n *         }]\r\n *     }\r\n * }\r\n */\r\n\r\n\r\nfunction getLinkGroupIndex(linksOption, axis) {\r\n  var axisModel = axis.model;\r\n  var dim = axis.dim;\r\n\r\n  for (var i = 0; i < linksOption.length; i++) {\r\n    var linkOption = linksOption[i] || {};\r\n\r\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\r\n      return i;\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkPropInLink(linkPropValue, axisPropValue) {\r\n  return linkPropValue === 'all' || isArray(linkPropValue) && indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\r\n}\r\n\r\nexport function fixValue(axisModel) {\r\n  var axisInfo = getAxisInfo(axisModel);\r\n\r\n  if (!axisInfo) {\r\n    return;\r\n  }\r\n\r\n  var axisPointerModel = axisInfo.axisPointerModel;\r\n  var scale = axisInfo.axis.scale;\r\n  var option = axisPointerModel.option;\r\n  var status = axisPointerModel.get('status');\r\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\r\n\r\n  if (value != null) {\r\n    value = scale.parse(value);\r\n  }\r\n\r\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\r\n  // and status should be initialized.\r\n\r\n  if (status == null) {\r\n    option.status = useHandle ? 'show' : 'hide';\r\n  }\r\n\r\n  var extent = scale.getExtent().slice();\r\n  extent[0] > extent[1] && extent.reverse();\r\n\r\n  if ( // Pick a value on axis when initializing.\r\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\r\n  // where we should re-pick a value to keep `handle` displaying normally.\r\n  || value > extent[1]) {\r\n    // Make handle displayed on the end of the axis when init, which looks better.\r\n    value = extent[1];\r\n  }\r\n\r\n  if (value < extent[0]) {\r\n    value = extent[0];\r\n  }\r\n\r\n  option.value = value;\r\n\r\n  if (useHandle) {\r\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\r\n  }\r\n}\r\nexport function getAxisInfo(axisModel) {\r\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\r\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\r\n}\r\nexport function getAxisPointerModel(axisModel) {\r\n  var axisInfo = getAxisInfo(axisModel);\r\n  return axisInfo && axisInfo.axisPointerModel;\r\n}\r\n\r\nfunction isHandleTrigger(axisPointerModel) {\r\n  return !!axisPointerModel.get(['handle', 'show']);\r\n}\r\n/**\r\n * @param {module:echarts/model/Model} model\r\n * @return {string} unique key\r\n */\r\n\r\n\r\nexport function makeKey(model) {\r\n  return model.type + '||' + model.id;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as axisPointerModelHelper from '../axisPointer/modelHelper';\r\nimport ComponentView from '../../view/Component';\r\nvar axisPointerClazz = {};\r\n/**\r\n * Base class of AxisView.\r\n */\r\n\r\nvar AxisView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(AxisView, _super);\r\n\r\n  function AxisView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = AxisView.type;\r\n    return _this;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  AxisView.prototype.render = function (axisModel, ecModel, api, payload) {\r\n    // FIXME\r\n    // This process should proformed after coordinate systems updated\r\n    // (axis scale updated), and should be performed each time update.\r\n    // So put it here temporarily, although it is not appropriate to\r\n    // put a model-writing procedure in `view`.\r\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\r\n\r\n    _super.prototype.render.apply(this, arguments);\r\n\r\n    this._doUpdateAxisPointerClass(axisModel, api, true);\r\n  };\r\n  /**\r\n   * Action handler.\r\n   */\r\n\r\n\r\n  AxisView.prototype.updateAxisPointer = function (axisModel, ecModel, api, payload) {\r\n    this._doUpdateAxisPointerClass(axisModel, api, false);\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  AxisView.prototype.remove = function (ecModel, api) {\r\n    var axisPointer = this._axisPointer;\r\n    axisPointer && axisPointer.remove(api);\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  AxisView.prototype.dispose = function (ecModel, api) {\r\n    this._disposeAxisPointer(api);\r\n\r\n    _super.prototype.dispose.apply(this, arguments);\r\n  };\r\n\r\n  AxisView.prototype._doUpdateAxisPointerClass = function (axisModel, api, forceRender) {\r\n    var Clazz = AxisView.getAxisPointerClass(this.axisPointerClass);\r\n\r\n    if (!Clazz) {\r\n      return;\r\n    }\r\n\r\n    var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\r\n    axisPointerModel ? (this._axisPointer || (this._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : this._disposeAxisPointer(api);\r\n  };\r\n\r\n  AxisView.prototype._disposeAxisPointer = function (api) {\r\n    this._axisPointer && this._axisPointer.dispose(api);\r\n    this._axisPointer = null;\r\n  };\r\n\r\n  AxisView.registerAxisPointerClass = function (type, clazz) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (axisPointerClazz[type]) {\r\n        throw new Error('axisPointer ' + type + ' exists');\r\n      }\r\n    }\r\n\r\n    axisPointerClazz[type] = clazz;\r\n  };\r\n\r\n  ;\r\n\r\n  AxisView.getAxisPointerClass = function (type) {\r\n    return type && axisPointerClazz[type];\r\n  };\r\n\r\n  ;\r\n  AxisView.type = 'axis';\r\n  return AxisView;\r\n}(ComponentView);\r\n\r\nexport default AxisView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as graphic from '../../util/graphic';\r\nimport { makeInner } from '../../util/model';\r\nvar inner = makeInner();\r\nexport function rectCoordAxisBuildSplitArea(axisView, axisGroup, axisModel, gridModel) {\r\n  var axis = axisModel.axis;\r\n\r\n  if (axis.scale.isBlank()) {\r\n    return;\r\n  } // TODO: TYPE\r\n\r\n\r\n  var splitAreaModel = axisModel.getModel('splitArea');\r\n  var areaStyleModel = splitAreaModel.getModel('areaStyle');\r\n  var areaColors = areaStyleModel.get('color');\r\n  var gridRect = gridModel.coordinateSystem.getRect();\r\n  var ticksCoords = axis.getTicksCoords({\r\n    tickModel: splitAreaModel,\r\n    clamp: true\r\n  });\r\n\r\n  if (!ticksCoords.length) {\r\n    return;\r\n  } // For Making appropriate splitArea animation, the color and anid\r\n  // should be corresponding to previous one if possible.\r\n\r\n\r\n  var areaColorsLen = areaColors.length;\r\n  var lastSplitAreaColors = inner(axisView).splitAreaColors;\r\n  var newSplitAreaColors = zrUtil.createHashMap();\r\n  var colorIndex = 0;\r\n\r\n  if (lastSplitAreaColors) {\r\n    for (var i = 0; i < ticksCoords.length; i++) {\r\n      var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\r\n\r\n      if (cIndex != null) {\r\n        colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  var prev = axis.toGlobalCoord(ticksCoords[0].coord);\r\n  var areaStyle = areaStyleModel.getAreaStyle();\r\n  areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\r\n\r\n  for (var i = 1; i < ticksCoords.length; i++) {\r\n    var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\r\n    var x = void 0;\r\n    var y = void 0;\r\n    var width = void 0;\r\n    var height = void 0;\r\n\r\n    if (axis.isHorizontal()) {\r\n      x = prev;\r\n      y = gridRect.y;\r\n      width = tickCoord - x;\r\n      height = gridRect.height;\r\n      prev = x + width;\r\n    } else {\r\n      x = gridRect.x;\r\n      y = prev;\r\n      width = gridRect.width;\r\n      height = tickCoord - y;\r\n      prev = y + height;\r\n    }\r\n\r\n    var tickValue = ticksCoords[i - 1].tickValue;\r\n    tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\r\n    axisGroup.add(new graphic.Rect({\r\n      anid: tickValue != null ? 'area_' + tickValue : null,\r\n      shape: {\r\n        x: x,\r\n        y: y,\r\n        width: width,\r\n        height: height\r\n      },\r\n      style: zrUtil.defaults({\r\n        fill: areaColors[colorIndex]\r\n      }, areaStyle),\r\n      autoBatch: true,\r\n      silent: true\r\n    }));\r\n    colorIndex = (colorIndex + 1) % areaColorsLen;\r\n  }\r\n\r\n  inner(axisView).splitAreaColors = newSplitAreaColors;\r\n}\r\nexport function rectCoordAxisHandleRemove(axisView) {\r\n  inner(axisView).splitAreaColors = null;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as graphic from '../../util/graphic';\r\nimport AxisBuilder from './AxisBuilder';\r\nimport AxisView from './AxisView';\r\nimport * as cartesianAxisHelper from '../../coord/cartesian/cartesianAxisHelper';\r\nimport { rectCoordAxisBuildSplitArea, rectCoordAxisHandleRemove } from './axisSplitHelper';\r\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\r\nvar selfBuilderAttrs = ['splitArea', 'splitLine', 'minorSplitLine'];\r\n\r\nvar CartesianAxisView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(CartesianAxisView, _super);\r\n\r\n  function CartesianAxisView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = CartesianAxisView.type;\r\n    _this.axisPointerClass = 'CartesianAxisPointer';\r\n    return _this;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  CartesianAxisView.prototype.render = function (axisModel, ecModel, api, payload) {\r\n    this.group.removeAll();\r\n    var oldAxisGroup = this._axisGroup;\r\n    this._axisGroup = new graphic.Group();\r\n    this.group.add(this._axisGroup);\r\n\r\n    if (!axisModel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var gridModel = axisModel.getCoordSysModel();\r\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\r\n    var axisBuilder = new AxisBuilder(axisModel, zrUtil.extend({\r\n      handleAutoShown: function (elementType) {\r\n        var cartesians = gridModel.coordinateSystem.getCartesians();\r\n\r\n        for (var i = 0; i < cartesians.length; i++) {\r\n          var otherAxisType = cartesians[i].getOtherAxis(axisModel.axis).type;\r\n\r\n          if (otherAxisType === 'value' || otherAxisType === 'log') {\r\n            // Still show axis tick or axisLine if other axis is value / log\r\n            return true;\r\n          }\r\n        } // Not show axisTick or axisLine if other axis is category / time\r\n\r\n\r\n        return false;\r\n      }\r\n    }, layout));\r\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\r\n\r\n    this._axisGroup.add(axisBuilder.getGroup());\r\n\r\n    zrUtil.each(selfBuilderAttrs, function (name) {\r\n      if (axisModel.get([name, 'show'])) {\r\n        axisElementBuilders[name](this, this._axisGroup, axisModel, gridModel);\r\n      }\r\n    }, this); // THIS is a special case for bar racing chart.\r\n    // Update the axis label from the natural initial layout to\r\n    // sorted layout should has no animation.\r\n\r\n    var isInitialSortFromBarRacing = payload && payload.type === 'changeAxisOrder' && payload.isInitSort;\r\n\r\n    if (!isInitialSortFromBarRacing) {\r\n      graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\r\n    }\r\n\r\n    _super.prototype.render.call(this, axisModel, ecModel, api, payload);\r\n  };\r\n\r\n  CartesianAxisView.prototype.remove = function () {\r\n    rectCoordAxisHandleRemove(this);\r\n  };\r\n\r\n  CartesianAxisView.type = 'cartesianAxis';\r\n  return CartesianAxisView;\r\n}(AxisView);\r\n\r\nvar axisElementBuilders = {\r\n  splitLine: function (axisView, axisGroup, axisModel, gridModel) {\r\n    var axis = axisModel.axis;\r\n\r\n    if (axis.scale.isBlank()) {\r\n      return;\r\n    }\r\n\r\n    var splitLineModel = axisModel.getModel('splitLine');\r\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\r\n    var lineColors = lineStyleModel.get('color');\r\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\r\n    var gridRect = gridModel.coordinateSystem.getRect();\r\n    var isHorizontal = axis.isHorizontal();\r\n    var lineCount = 0;\r\n    var ticksCoords = axis.getTicksCoords({\r\n      tickModel: splitLineModel\r\n    });\r\n    var p1 = [];\r\n    var p2 = [];\r\n    var lineStyle = lineStyleModel.getLineStyle();\r\n\r\n    for (var i = 0; i < ticksCoords.length; i++) {\r\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\r\n\r\n      if (isHorizontal) {\r\n        p1[0] = tickCoord;\r\n        p1[1] = gridRect.y;\r\n        p2[0] = tickCoord;\r\n        p2[1] = gridRect.y + gridRect.height;\r\n      } else {\r\n        p1[0] = gridRect.x;\r\n        p1[1] = tickCoord;\r\n        p2[0] = gridRect.x + gridRect.width;\r\n        p2[1] = tickCoord;\r\n      }\r\n\r\n      var colorIndex = lineCount++ % lineColors.length;\r\n      var tickValue = ticksCoords[i].tickValue;\r\n      axisGroup.add(new graphic.Line({\r\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\r\n        subPixelOptimize: true,\r\n        autoBatch: true,\r\n        shape: {\r\n          x1: p1[0],\r\n          y1: p1[1],\r\n          x2: p2[0],\r\n          y2: p2[1]\r\n        },\r\n        style: zrUtil.defaults({\r\n          stroke: lineColors[colorIndex]\r\n        }, lineStyle),\r\n        silent: true\r\n      }));\r\n    }\r\n  },\r\n  minorSplitLine: function (axisView, axisGroup, axisModel, gridModel) {\r\n    var axis = axisModel.axis;\r\n    var minorSplitLineModel = axisModel.getModel('minorSplitLine');\r\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\r\n    var gridRect = gridModel.coordinateSystem.getRect();\r\n    var isHorizontal = axis.isHorizontal();\r\n    var minorTicksCoords = axis.getMinorTicksCoords();\r\n\r\n    if (!minorTicksCoords.length) {\r\n      return;\r\n    }\r\n\r\n    var p1 = [];\r\n    var p2 = [];\r\n    var lineStyle = lineStyleModel.getLineStyle();\r\n\r\n    for (var i = 0; i < minorTicksCoords.length; i++) {\r\n      for (var k = 0; k < minorTicksCoords[i].length; k++) {\r\n        var tickCoord = axis.toGlobalCoord(minorTicksCoords[i][k].coord);\r\n\r\n        if (isHorizontal) {\r\n          p1[0] = tickCoord;\r\n          p1[1] = gridRect.y;\r\n          p2[0] = tickCoord;\r\n          p2[1] = gridRect.y + gridRect.height;\r\n        } else {\r\n          p1[0] = gridRect.x;\r\n          p1[1] = tickCoord;\r\n          p2[0] = gridRect.x + gridRect.width;\r\n          p2[1] = tickCoord;\r\n        }\r\n\r\n        axisGroup.add(new graphic.Line({\r\n          anid: 'minor_line_' + minorTicksCoords[i][k].tickValue,\r\n          subPixelOptimize: true,\r\n          autoBatch: true,\r\n          shape: {\r\n            x1: p1[0],\r\n            y1: p1[1],\r\n            x2: p2[0],\r\n            y2: p2[1]\r\n          },\r\n          style: lineStyle,\r\n          silent: true\r\n        }));\r\n      }\r\n    }\r\n  },\r\n  splitArea: function (axisView, axisGroup, axisModel, gridModel) {\r\n    rectCoordAxisBuildSplitArea(axisView, axisGroup, axisModel, gridModel);\r\n  }\r\n};\r\n\r\nvar CartesianXAxisView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(CartesianXAxisView, _super);\r\n\r\n  function CartesianXAxisView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = CartesianXAxisView.type;\r\n    return _this;\r\n  }\r\n\r\n  CartesianXAxisView.type = 'xAxis';\r\n  return CartesianXAxisView;\r\n}(CartesianAxisView);\r\n\r\nexport { CartesianXAxisView };\r\n\r\nvar CartesianYAxisView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(CartesianYAxisView, _super);\r\n\r\n  function CartesianYAxisView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = CartesianXAxisView.type;\r\n    return _this;\r\n  }\r\n\r\n  CartesianYAxisView.type = 'yAxis';\r\n  return CartesianYAxisView;\r\n}(CartesianAxisView);\r\n\r\nexport { CartesianYAxisView };\r\nexport default CartesianAxisView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport ComponentView from '../../view/Component';\r\nimport GridModel from '../../coord/cartesian/GridModel';\r\nimport { Rect } from '../../util/graphic';\r\nimport { defaults } from 'zrender/lib/core/util';\r\nimport { CartesianAxisModel } from '../../coord/cartesian/AxisModel';\r\nimport axisModelCreator from '../../coord/axisModelCreator';\r\nimport Grid from '../../coord/cartesian/Grid';\r\nimport { CartesianXAxisView, CartesianYAxisView } from '../axis/CartesianAxisView'; // Grid view\r\n\r\nvar GridView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(GridView, _super);\r\n\r\n  function GridView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = 'grid';\r\n    return _this;\r\n  }\r\n\r\n  GridView.prototype.render = function (gridModel, ecModel) {\r\n    this.group.removeAll();\r\n\r\n    if (gridModel.get('show')) {\r\n      this.group.add(new Rect({\r\n        shape: gridModel.coordinateSystem.getRect(),\r\n        style: defaults({\r\n          fill: gridModel.get('backgroundColor')\r\n        }, gridModel.getItemStyle()),\r\n        silent: true,\r\n        z2: -1\r\n      }));\r\n    }\r\n  };\r\n\r\n  GridView.type = 'grid';\r\n  return GridView;\r\n}(ComponentView);\r\n\r\nvar extraOption = {\r\n  // gridIndex: 0,\r\n  // gridId: '',\r\n  offset: 0\r\n};\r\nexport function install(registers) {\r\n  registers.registerComponentView(GridView);\r\n  registers.registerComponentModel(GridModel);\r\n  registers.registerCoordinateSystem('cartesian2d', Grid);\r\n  axisModelCreator(registers, 'x', CartesianAxisModel, extraOption);\r\n  axisModelCreator(registers, 'y', CartesianAxisModel, extraOption);\r\n  registers.registerComponentView(CartesianXAxisView);\r\n  registers.registerComponentView(CartesianYAxisView);\r\n  registers.registerPreprocessor(function (option) {\r\n    // Only create grid when need\r\n    if (option.xAxis && option.yAxis && !option.grid) {\r\n      option.grid = {};\r\n    }\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { use } from '../../extension';\r\nimport ScatterSeriesModel from './ScatterSeries';\r\nimport ScatterView from './ScatterView';\r\nimport { install as installGridSimple } from '../../component/grid/installSimple';\r\nimport layoutPoints from '../../layout/points';\r\nexport function install(registers) {\r\n  // In case developer forget to include grid component\r\n  use(installGridSimple);\r\n  registers.registerSeriesModel(ScatterSeriesModel);\r\n  registers.registerChartView(ScatterView);\r\n  registers.registerLayout(layoutPoints('scatter'));\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nexport default function radarLayout(ecModel) {\r\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var points = [];\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (!coordSys) {\r\n      return;\r\n    }\r\n\r\n    var axes = coordSys.getIndicatorAxes();\r\n    zrUtil.each(axes, function (axis, axisIndex) {\r\n      data.each(data.mapDimension(axes[axisIndex].dim), function (val, dataIndex) {\r\n        points[dataIndex] = points[dataIndex] || [];\r\n        var point = coordSys.dataToPoint(val, axisIndex);\r\n        points[dataIndex][axisIndex] = isValidPoint(point) ? point : getValueMissingPoint(coordSys);\r\n      });\r\n    }); // Close polygon\r\n\r\n    data.each(function (idx) {\r\n      // TODO\r\n      // Is it appropriate to connect to the next data when some data is missing?\r\n      // Or, should trade it like `connectNull` in line chart?\r\n      var firstPoint = zrUtil.find(points[idx], function (point) {\r\n        return isValidPoint(point);\r\n      }) || getValueMissingPoint(coordSys); // Copy the first actual point to the end of the array\r\n\r\n      points[idx].push(firstPoint.slice());\r\n      data.setItemLayout(idx, points[idx]);\r\n    });\r\n  });\r\n}\r\n\r\nfunction isValidPoint(point) {\r\n  return !isNaN(point[0]) && !isNaN(point[1]);\r\n}\r\n\r\nfunction getValueMissingPoint(coordSys) {\r\n  // It is error-prone to input [NaN, NaN] into polygon, polygon.\r\n  // (probably cause problem when refreshing or animating)\r\n  return [coordSys.cx, coordSys.cy];\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// @ts-nocheck\r\n// Backward compat for radar chart in 2\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nexport default function radarBackwardCompat(option) {\r\n  var polarOptArr = option.polar;\r\n\r\n  if (polarOptArr) {\r\n    if (!zrUtil.isArray(polarOptArr)) {\r\n      polarOptArr = [polarOptArr];\r\n    }\r\n\r\n    var polarNotRadar_1 = [];\r\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\r\n      if (polarOpt.indicator) {\r\n        if (polarOpt.type && !polarOpt.shape) {\r\n          polarOpt.shape = polarOpt.type;\r\n        }\r\n\r\n        option.radar = option.radar || [];\r\n\r\n        if (!zrUtil.isArray(option.radar)) {\r\n          option.radar = [option.radar];\r\n        }\r\n\r\n        option.radar.push(polarOpt);\r\n      } else {\r\n        polarNotRadar_1.push(polarOpt);\r\n      }\r\n    });\r\n    option.polar = polarNotRadar_1;\r\n  }\r\n\r\n  zrUtil.each(option.series, function (seriesOpt) {\r\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\r\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\r\n    }\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as graphic from '../../util/graphic';\r\nimport { setStatesStylesFromModel, enableHoverEmphasis } from '../../util/states';\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as symbolUtil from '../../util/symbol';\r\nimport ChartView from '../../view/Chart';\r\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle';\r\nimport ZRImage from 'zrender/lib/graphic/Image';\r\nimport { saveOldStyle } from '../../animation/basicTrasition';\r\n\r\nvar RadarView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(RadarView, _super);\r\n\r\n  function RadarView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = RadarView.type;\r\n    return _this;\r\n  }\r\n\r\n  RadarView.prototype.render = function (seriesModel, ecModel, api) {\r\n    var polar = seriesModel.coordinateSystem;\r\n    var group = this.group;\r\n    var data = seriesModel.getData();\r\n    var oldData = this._data;\r\n\r\n    function createSymbol(data, idx) {\r\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\r\n\r\n      if (symbolType === 'none') {\r\n        return;\r\n      }\r\n\r\n      var symbolSize = symbolUtil.normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\r\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2);\r\n      var symbolRotate = data.getItemVisual(idx, 'symbolRotate') || 0;\r\n      symbolPath.attr({\r\n        style: {\r\n          strokeNoScale: true\r\n        },\r\n        z2: 100,\r\n        scaleX: symbolSize[0] / 2,\r\n        scaleY: symbolSize[1] / 2,\r\n        rotation: symbolRotate * Math.PI / 180 || 0\r\n      });\r\n      return symbolPath;\r\n    }\r\n\r\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\r\n      // Simply rerender all\r\n      symbolGroup.removeAll();\r\n\r\n      for (var i = 0; i < newPoints.length - 1; i++) {\r\n        var symbolPath = createSymbol(data, idx);\r\n\r\n        if (symbolPath) {\r\n          symbolPath.__dimIdx = i;\r\n\r\n          if (oldPoints[i]) {\r\n            symbolPath.setPosition(oldPoints[i]);\r\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\r\n              x: newPoints[i][0],\r\n              y: newPoints[i][1]\r\n            }, seriesModel, idx);\r\n          } else {\r\n            symbolPath.setPosition(newPoints[i]);\r\n          }\r\n\r\n          symbolGroup.add(symbolPath);\r\n        }\r\n      }\r\n    }\r\n\r\n    function getInitialPoints(points) {\r\n      return zrUtil.map(points, function (pt) {\r\n        return [polar.cx, polar.cy];\r\n      });\r\n    }\r\n\r\n    data.diff(oldData).add(function (idx) {\r\n      var points = data.getItemLayout(idx);\r\n\r\n      if (!points) {\r\n        return;\r\n      }\r\n\r\n      var polygon = new graphic.Polygon();\r\n      var polyline = new graphic.Polyline();\r\n      var target = {\r\n        shape: {\r\n          points: points\r\n        }\r\n      };\r\n      polygon.shape.points = getInitialPoints(points);\r\n      polyline.shape.points = getInitialPoints(points);\r\n      graphic.initProps(polygon, target, seriesModel, idx);\r\n      graphic.initProps(polyline, target, seriesModel, idx);\r\n      var itemGroup = new graphic.Group();\r\n      var symbolGroup = new graphic.Group();\r\n      itemGroup.add(polyline);\r\n      itemGroup.add(polygon);\r\n      itemGroup.add(symbolGroup);\r\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\r\n      data.setItemGraphicEl(idx, itemGroup);\r\n    }).update(function (newIdx, oldIdx) {\r\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\r\n      var polyline = itemGroup.childAt(0);\r\n      var polygon = itemGroup.childAt(1);\r\n      var symbolGroup = itemGroup.childAt(2);\r\n      var target = {\r\n        shape: {\r\n          points: data.getItemLayout(newIdx)\r\n        }\r\n      };\r\n\r\n      if (!target.shape.points) {\r\n        return;\r\n      }\r\n\r\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\r\n      saveOldStyle(polygon);\r\n      saveOldStyle(polyline);\r\n      graphic.updateProps(polyline, target, seriesModel);\r\n      graphic.updateProps(polygon, target, seriesModel);\r\n      data.setItemGraphicEl(newIdx, itemGroup);\r\n    }).remove(function (idx) {\r\n      group.remove(oldData.getItemGraphicEl(idx));\r\n    }).execute();\r\n    data.eachItemGraphicEl(function (itemGroup, idx) {\r\n      var itemModel = data.getItemModel(idx);\r\n      var polyline = itemGroup.childAt(0);\r\n      var polygon = itemGroup.childAt(1);\r\n      var symbolGroup = itemGroup.childAt(2); // Radar uses the visual encoded from itemStyle.\r\n\r\n      var itemStyle = data.getItemVisual(idx, 'style');\r\n      var color = itemStyle.fill;\r\n      group.add(itemGroup);\r\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\r\n        fill: 'none',\r\n        stroke: color\r\n      }));\r\n      setStatesStylesFromModel(polyline, itemModel, 'lineStyle');\r\n      setStatesStylesFromModel(polygon, itemModel, 'areaStyle');\r\n      var areaStyleModel = itemModel.getModel('areaStyle');\r\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\r\n      polygon.ignore = polygonIgnore;\r\n      zrUtil.each(['emphasis', 'select', 'blur'], function (stateName) {\r\n        var stateModel = itemModel.getModel([stateName, 'areaStyle']);\r\n        var stateIgnore = stateModel.isEmpty() && stateModel.parentModel.isEmpty(); // Won't be ignore if normal state is not ignore.\r\n\r\n        polygon.ensureState(stateName).ignore = stateIgnore && polygonIgnore;\r\n      });\r\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\r\n        fill: color,\r\n        opacity: 0.7,\r\n        decal: itemStyle.decal\r\n      }));\r\n      var emphasisModel = itemModel.getModel('emphasis');\r\n      var itemHoverStyle = emphasisModel.getModel('itemStyle').getItemStyle();\r\n      symbolGroup.eachChild(function (symbolPath) {\r\n        if (symbolPath instanceof ZRImage) {\r\n          var pathStyle = symbolPath.style;\r\n          symbolPath.useStyle(zrUtil.extend({\r\n            // TODO other properties like x, y ?\r\n            image: pathStyle.image,\r\n            x: pathStyle.x,\r\n            y: pathStyle.y,\r\n            width: pathStyle.width,\r\n            height: pathStyle.height\r\n          }, itemStyle));\r\n        } else {\r\n          symbolPath.useStyle(itemStyle);\r\n          symbolPath.setColor(color);\r\n          symbolPath.style.strokeNoScale = true;\r\n        }\r\n\r\n        var pathEmphasisState = symbolPath.ensureState('emphasis');\r\n        pathEmphasisState.style = zrUtil.clone(itemHoverStyle);\r\n        var defaultText = data.getStore().get(data.getDimensionIndex(symbolPath.__dimIdx), idx);\r\n        (defaultText == null || isNaN(defaultText)) && (defaultText = '');\r\n        setLabelStyle(symbolPath, getLabelStatesModels(itemModel), {\r\n          labelFetcher: data.hostModel,\r\n          labelDataIndex: idx,\r\n          labelDimIndex: symbolPath.__dimIdx,\r\n          defaultText: defaultText,\r\n          inheritColor: color,\r\n          defaultOpacity: itemStyle.opacity\r\n        });\r\n      });\r\n      enableHoverEmphasis(itemGroup, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\r\n    });\r\n    this._data = data;\r\n  };\r\n\r\n  RadarView.prototype.remove = function () {\r\n    this.group.removeAll();\r\n    this._data = null;\r\n  };\r\n\r\n  RadarView.type = 'radar';\r\n  return RadarView;\r\n}(ChartView);\r\n\r\nexport default RadarView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport SeriesModel from '../../model/Series';\r\nimport createSeriesDataSimply from '../helper/createSeriesDataSimply';\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport LegendVisualProvider from '../../visual/LegendVisualProvider';\r\nimport { createTooltipMarkup, retrieveVisualColorForTooltipMarker } from '../../component/tooltip/tooltipMarkup';\r\n\r\nvar RadarSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(RadarSeriesModel, _super);\r\n\r\n  function RadarSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = RadarSeriesModel.type;\r\n    _this.hasSymbolVisual = true;\r\n    return _this;\r\n  } // Overwrite\r\n\r\n\r\n  RadarSeriesModel.prototype.init = function (option) {\r\n    _super.prototype.init.apply(this, arguments); // Enable legend selection for each data item\r\n    // Use a function instead of direct access because data reference may changed\r\n\r\n\r\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this));\r\n  };\r\n\r\n  RadarSeriesModel.prototype.getInitialData = function (option, ecModel) {\r\n    return createSeriesDataSimply(this, {\r\n      generateCoord: 'indicator_',\r\n      generateCoordCount: Infinity\r\n    });\r\n  };\r\n\r\n  RadarSeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\r\n    var data = this.getData();\r\n    var coordSys = this.coordinateSystem;\r\n    var indicatorAxes = coordSys.getIndicatorAxes();\r\n    var name = this.getData().getName(dataIndex);\r\n    var nameToDisplay = name === '' ? this.name : name;\r\n    var markerColor = retrieveVisualColorForTooltipMarker(this, dataIndex);\r\n    return createTooltipMarkup('section', {\r\n      header: nameToDisplay,\r\n      sortBlocks: true,\r\n      blocks: zrUtil.map(indicatorAxes, function (axis) {\r\n        var val = data.get(data.mapDimension(axis.dim), dataIndex);\r\n        return createTooltipMarkup('nameValue', {\r\n          markerType: 'subItem',\r\n          markerColor: markerColor,\r\n          name: axis.name,\r\n          value: val,\r\n          sortParam: val\r\n        });\r\n      })\r\n    });\r\n  };\r\n\r\n  RadarSeriesModel.prototype.getTooltipPosition = function (dataIndex) {\r\n    if (dataIndex != null) {\r\n      var data_1 = this.getData();\r\n      var coordSys = this.coordinateSystem;\r\n      var values = data_1.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\r\n        return data_1.mapDimension(dim);\r\n      }), dataIndex);\r\n\r\n      for (var i = 0, len = values.length; i < len; i++) {\r\n        if (!isNaN(values[i])) {\r\n          var indicatorAxes = coordSys.getIndicatorAxes();\r\n          return coordSys.coordToPoint(indicatorAxes[i].dataToCoord(values[i]), i);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  RadarSeriesModel.type = 'series.radar';\r\n  RadarSeriesModel.dependencies = ['radar'];\r\n  RadarSeriesModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 2,\r\n    colorBy: 'data',\r\n    coordinateSystem: 'radar',\r\n    legendHoverLink: true,\r\n    radarIndex: 0,\r\n    lineStyle: {\r\n      width: 2,\r\n      type: 'solid',\r\n      join: 'round'\r\n    },\r\n    label: {\r\n      position: 'top'\r\n    },\r\n    // areaStyle: {\r\n    // },\r\n    // itemStyle: {}\r\n    symbolSize: 8 // symbolRotate: null\r\n\r\n  };\r\n  return RadarSeriesModel;\r\n}(SeriesModel);\r\n\r\nexport default RadarSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport axisDefault from '../axisDefault';\r\nimport Model from '../../model/Model';\r\nimport { AxisModelCommonMixin } from '../axisModelCommonMixin';\r\nimport ComponentModel from '../../model/Component';\r\nvar valueAxisDefault = axisDefault.value;\r\n\r\nfunction defaultsShow(opt, show) {\r\n  return zrUtil.defaults({\r\n    show: show\r\n  }, opt);\r\n}\r\n\r\nvar RadarModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(RadarModel, _super);\r\n\r\n  function RadarModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = RadarModel.type;\r\n    return _this;\r\n  }\r\n\r\n  RadarModel.prototype.optionUpdated = function () {\r\n    var boundaryGap = this.get('boundaryGap');\r\n    var splitNumber = this.get('splitNumber');\r\n    var scale = this.get('scale');\r\n    var axisLine = this.get('axisLine');\r\n    var axisTick = this.get('axisTick'); // let axisType = this.get('axisType');\r\n\r\n    var axisLabel = this.get('axisLabel');\r\n    var nameTextStyle = this.get('axisName');\r\n    var showName = this.get(['axisName', 'show']);\r\n    var nameFormatter = this.get(['axisName', 'formatter']);\r\n    var nameGap = this.get('axisNameGap');\r\n    var triggerEvent = this.get('triggerEvent');\r\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\r\n      // PENDING\r\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\r\n        indicatorOpt.min = 0;\r\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\r\n        indicatorOpt.max = 0;\r\n      }\r\n\r\n      var iNameTextStyle = nameTextStyle;\r\n\r\n      if (indicatorOpt.color != null) {\r\n        iNameTextStyle = zrUtil.defaults({\r\n          color: indicatorOpt.color\r\n        }, nameTextStyle);\r\n      } // Use same configuration\r\n\r\n\r\n      var innerIndicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\r\n        boundaryGap: boundaryGap,\r\n        splitNumber: splitNumber,\r\n        scale: scale,\r\n        axisLine: axisLine,\r\n        axisTick: axisTick,\r\n        // axisType: axisType,\r\n        axisLabel: axisLabel,\r\n        // Compatible with 2 and use text\r\n        name: indicatorOpt.text,\r\n        nameLocation: 'end',\r\n        nameGap: nameGap,\r\n        // min: 0,\r\n        nameTextStyle: iNameTextStyle,\r\n        triggerEvent: triggerEvent\r\n      }, false);\r\n\r\n      if (!showName) {\r\n        innerIndicatorOpt.name = '';\r\n      }\r\n\r\n      if (typeof nameFormatter === 'string') {\r\n        var indName = innerIndicatorOpt.name;\r\n        innerIndicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\r\n      } else if (typeof nameFormatter === 'function') {\r\n        innerIndicatorOpt.name = nameFormatter(innerIndicatorOpt.name, innerIndicatorOpt);\r\n      }\r\n\r\n      var model = new Model(innerIndicatorOpt, null, this.ecModel);\r\n      zrUtil.mixin(model, AxisModelCommonMixin.prototype); // For triggerEvent.\r\n\r\n      model.mainType = 'radar';\r\n      model.componentIndex = this.componentIndex;\r\n      return model;\r\n    }, this);\r\n    this._indicatorModels = indicatorModels;\r\n  };\r\n\r\n  RadarModel.prototype.getIndicatorModels = function () {\r\n    return this._indicatorModels;\r\n  };\r\n\r\n  RadarModel.type = 'radar';\r\n  RadarModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 0,\r\n    center: ['50%', '50%'],\r\n    radius: '75%',\r\n    startAngle: 90,\r\n    axisName: {\r\n      show: true // formatter: null\r\n      // textStyle: {}\r\n\r\n    },\r\n    boundaryGap: [0, 0],\r\n    splitNumber: 5,\r\n    axisNameGap: 15,\r\n    scale: false,\r\n    // Polygon or circle\r\n    shape: 'polygon',\r\n    axisLine: zrUtil.merge({\r\n      lineStyle: {\r\n        color: '#bbb'\r\n      }\r\n    }, valueAxisDefault.axisLine),\r\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\r\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\r\n    // axisType: 'value',\r\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\r\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\r\n    // {text, min, max}\r\n    indicator: []\r\n  };\r\n  return RadarModel;\r\n}(ComponentModel);\r\n\r\nexport default RadarModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport AxisBuilder from '../axis/AxisBuilder';\r\nimport * as graphic from '../../util/graphic';\r\nimport ComponentView from '../../view/Component';\r\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\r\n\r\nvar RadarView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(RadarView, _super);\r\n\r\n  function RadarView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = RadarView.type;\r\n    return _this;\r\n  }\r\n\r\n  RadarView.prototype.render = function (radarModel, ecModel, api) {\r\n    var group = this.group;\r\n    group.removeAll();\r\n\r\n    this._buildAxes(radarModel);\r\n\r\n    this._buildSplitLineAndArea(radarModel);\r\n  };\r\n\r\n  RadarView.prototype._buildAxes = function (radarModel) {\r\n    var radar = radarModel.coordinateSystem;\r\n    var indicatorAxes = radar.getIndicatorAxes();\r\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\r\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\r\n        position: [radar.cx, radar.cy],\r\n        rotation: indicatorAxis.angle,\r\n        labelDirection: -1,\r\n        tickDirection: -1,\r\n        nameDirection: 1\r\n      });\r\n      return axisBuilder;\r\n    });\r\n    zrUtil.each(axisBuilders, function (axisBuilder) {\r\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\r\n      this.group.add(axisBuilder.getGroup());\r\n    }, this);\r\n  };\r\n\r\n  RadarView.prototype._buildSplitLineAndArea = function (radarModel) {\r\n    var radar = radarModel.coordinateSystem;\r\n    var indicatorAxes = radar.getIndicatorAxes();\r\n\r\n    if (!indicatorAxes.length) {\r\n      return;\r\n    }\r\n\r\n    var shape = radarModel.get('shape');\r\n    var splitLineModel = radarModel.getModel('splitLine');\r\n    var splitAreaModel = radarModel.getModel('splitArea');\r\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\r\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\r\n    var showSplitLine = splitLineModel.get('show');\r\n    var showSplitArea = splitAreaModel.get('show');\r\n    var splitLineColors = lineStyleModel.get('color');\r\n    var splitAreaColors = areaStyleModel.get('color');\r\n    var splitLineColorsArr = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\r\n    var splitAreaColorsArr = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\r\n    var splitLines = [];\r\n    var splitAreas = [];\r\n\r\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\r\n      var colorIndex = idx % areaOrLineColorList.length;\r\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\r\n      return colorIndex;\r\n    }\r\n\r\n    if (shape === 'circle') {\r\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\r\n      var cx = radar.cx;\r\n      var cy = radar.cy;\r\n\r\n      for (var i = 0; i < ticksRadius.length; i++) {\r\n        if (showSplitLine) {\r\n          var colorIndex = getColorIndex(splitLines, splitLineColorsArr, i);\r\n          splitLines[colorIndex].push(new graphic.Circle({\r\n            shape: {\r\n              cx: cx,\r\n              cy: cy,\r\n              r: ticksRadius[i].coord\r\n            }\r\n          }));\r\n        }\r\n\r\n        if (showSplitArea && i < ticksRadius.length - 1) {\r\n          var colorIndex = getColorIndex(splitAreas, splitAreaColorsArr, i);\r\n          splitAreas[colorIndex].push(new graphic.Ring({\r\n            shape: {\r\n              cx: cx,\r\n              cy: cy,\r\n              r0: ticksRadius[i].coord,\r\n              r: ticksRadius[i + 1].coord\r\n            }\r\n          }));\r\n        }\r\n      }\r\n    } // Polyyon\r\n    else {\r\n        var realSplitNumber_1;\r\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\r\n          var ticksCoords = indicatorAxis.getTicksCoords();\r\n          realSplitNumber_1 = realSplitNumber_1 == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber_1);\r\n          return zrUtil.map(ticksCoords, function (tickCoord) {\r\n            return radar.coordToPoint(tickCoord.coord, idx);\r\n          });\r\n        });\r\n        var prevPoints = [];\r\n\r\n        for (var i = 0; i <= realSplitNumber_1; i++) {\r\n          var points = [];\r\n\r\n          for (var j = 0; j < indicatorAxes.length; j++) {\r\n            points.push(axesTicksPoints[j][i]);\r\n          } // Close\r\n\r\n\r\n          if (points[0]) {\r\n            points.push(points[0].slice());\r\n          } else {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n              console.error('Can\\'t draw value axis ' + i);\r\n            }\r\n          }\r\n\r\n          if (showSplitLine) {\r\n            var colorIndex = getColorIndex(splitLines, splitLineColorsArr, i);\r\n            splitLines[colorIndex].push(new graphic.Polyline({\r\n              shape: {\r\n                points: points\r\n              }\r\n            }));\r\n          }\r\n\r\n          if (showSplitArea && prevPoints) {\r\n            var colorIndex = getColorIndex(splitAreas, splitAreaColorsArr, i - 1);\r\n            splitAreas[colorIndex].push(new graphic.Polygon({\r\n              shape: {\r\n                points: points.concat(prevPoints)\r\n              }\r\n            }));\r\n          }\r\n\r\n          prevPoints = points.slice().reverse();\r\n        }\r\n      }\r\n\r\n    var lineStyle = lineStyleModel.getLineStyle();\r\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\r\n\r\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\r\n      this.group.add(graphic.mergePath(splitAreas, {\r\n        style: zrUtil.defaults({\r\n          stroke: 'none',\r\n          fill: splitAreaColorsArr[idx % splitAreaColorsArr.length]\r\n        }, areaStyle),\r\n        silent: true\r\n      }));\r\n    }, this);\r\n    zrUtil.each(splitLines, function (splitLines, idx) {\r\n      this.group.add(graphic.mergePath(splitLines, {\r\n        style: zrUtil.defaults({\r\n          fill: 'none',\r\n          stroke: splitLineColorsArr[idx % splitLineColorsArr.length]\r\n        }, lineStyle),\r\n        silent: true\r\n      }));\r\n    }, this);\r\n  };\r\n\r\n  RadarView.type = 'radar';\r\n  return RadarView;\r\n}(ComponentView);\r\n\r\nexport default RadarView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport Axis from '../Axis';\r\n\r\nvar IndicatorAxis =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(IndicatorAxis, _super);\r\n\r\n  function IndicatorAxis(dim, scale, radiusExtent) {\r\n    var _this = _super.call(this, dim, scale, radiusExtent) || this;\r\n\r\n    _this.type = 'value';\r\n    _this.angle = 0;\r\n    _this.name = '';\r\n    return _this;\r\n  }\r\n\r\n  return IndicatorAxis;\r\n}(Axis);\r\n\r\nexport default IndicatorAxis;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// TODO clockwise\r\nimport IndicatorAxis from './IndicatorAxis';\r\nimport IntervalScale from '../../scale/Interval';\r\nimport * as numberUtil from '../../util/number';\r\nimport { getScaleExtent, niceScaleExtent } from '../axisHelper';\r\nimport { parseAxisModelMinMax } from '../scaleRawExtentInfo';\r\nimport { map, each } from 'zrender/lib/core/util';\r\n\r\nvar Radar =\r\n/** @class */\r\nfunction () {\r\n  function Radar(radarModel, ecModel, api) {\r\n    /**\r\n     *\r\n     * Radar dimensions\r\n     */\r\n    this.dimensions = [];\r\n    this._model = radarModel;\r\n    this._indicatorAxes = map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\r\n      var dim = 'indicator_' + idx;\r\n      var indicatorAxis = new IndicatorAxis(dim, new IntervalScale() // (indicatorModel.get('axisType') === 'log') ? new LogScale() : new IntervalScale()\r\n      );\r\n      indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\r\n\r\n      indicatorAxis.model = indicatorModel;\r\n      indicatorModel.axis = indicatorAxis;\r\n      this.dimensions.push(dim);\r\n      return indicatorAxis;\r\n    }, this);\r\n    this.resize(radarModel, api);\r\n  }\r\n\r\n  Radar.prototype.getIndicatorAxes = function () {\r\n    return this._indicatorAxes;\r\n  };\r\n\r\n  Radar.prototype.dataToPoint = function (value, indicatorIndex) {\r\n    var indicatorAxis = this._indicatorAxes[indicatorIndex];\r\n    return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\r\n  }; // TODO: API should be coordToPoint([coord, indicatorIndex])\r\n\r\n\r\n  Radar.prototype.coordToPoint = function (coord, indicatorIndex) {\r\n    var indicatorAxis = this._indicatorAxes[indicatorIndex];\r\n    var angle = indicatorAxis.angle;\r\n    var x = this.cx + coord * Math.cos(angle);\r\n    var y = this.cy - coord * Math.sin(angle);\r\n    return [x, y];\r\n  };\r\n\r\n  Radar.prototype.pointToData = function (pt) {\r\n    var dx = pt[0] - this.cx;\r\n    var dy = pt[1] - this.cy;\r\n    var radius = Math.sqrt(dx * dx + dy * dy);\r\n    dx /= radius;\r\n    dy /= radius;\r\n    var radian = Math.atan2(-dy, dx); // Find the closest angle\r\n    // FIXME index can calculated directly\r\n\r\n    var minRadianDiff = Infinity;\r\n    var closestAxis;\r\n    var closestAxisIdx = -1;\r\n\r\n    for (var i = 0; i < this._indicatorAxes.length; i++) {\r\n      var indicatorAxis = this._indicatorAxes[i];\r\n      var diff = Math.abs(radian - indicatorAxis.angle);\r\n\r\n      if (diff < minRadianDiff) {\r\n        closestAxis = indicatorAxis;\r\n        closestAxisIdx = i;\r\n        minRadianDiff = diff;\r\n      }\r\n    }\r\n\r\n    return [closestAxisIdx, +(closestAxis && closestAxis.coordToData(radius))];\r\n  };\r\n\r\n  Radar.prototype.resize = function (radarModel, api) {\r\n    var center = radarModel.get('center');\r\n    var viewWidth = api.getWidth();\r\n    var viewHeight = api.getHeight();\r\n    var viewSize = Math.min(viewWidth, viewHeight) / 2;\r\n    this.cx = numberUtil.parsePercent(center[0], viewWidth);\r\n    this.cy = numberUtil.parsePercent(center[1], viewHeight);\r\n    this.startAngle = radarModel.get('startAngle') * Math.PI / 180; // radius may be single value like `20`, `'80%'`, or array like `[10, '80%']`\r\n\r\n    var radius = radarModel.get('radius');\r\n\r\n    if (typeof radius === 'string' || typeof radius === 'number') {\r\n      radius = [0, radius];\r\n    }\r\n\r\n    this.r0 = numberUtil.parsePercent(radius[0], viewSize);\r\n    this.r = numberUtil.parsePercent(radius[1], viewSize);\r\n    each(this._indicatorAxes, function (indicatorAxis, idx) {\r\n      indicatorAxis.setExtent(this.r0, this.r);\r\n      var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\r\n\r\n      angle = Math.atan2(Math.sin(angle), Math.cos(angle));\r\n      indicatorAxis.angle = angle;\r\n    }, this);\r\n  };\r\n\r\n  Radar.prototype.update = function (ecModel, api) {\r\n    var indicatorAxes = this._indicatorAxes;\r\n    var radarModel = this._model;\r\n    each(indicatorAxes, function (indicatorAxis) {\r\n      indicatorAxis.scale.setExtent(Infinity, -Infinity);\r\n    });\r\n    ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\r\n      if (radarSeries.get('coordinateSystem') !== 'radar' // @ts-ignore\r\n      || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\r\n        return;\r\n      }\r\n\r\n      var data = radarSeries.getData();\r\n      each(indicatorAxes, function (indicatorAxis) {\r\n        indicatorAxis.scale.unionExtentFromData(data, data.mapDimension(indicatorAxis.dim));\r\n      });\r\n    }, this);\r\n    var splitNumber = radarModel.get('splitNumber');\r\n\r\n    function increaseInterval(interval) {\r\n      var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\r\n\r\n      var f = interval / exp10;\r\n\r\n      if (f === 2) {\r\n        f = 5;\r\n      } else {\r\n        // f is 2 or 5\r\n        f *= 2;\r\n      }\r\n\r\n      return f * exp10;\r\n    } // Force all the axis fixing the maxSplitNumber.\r\n\r\n\r\n    each(indicatorAxes, function (indicatorAxis, idx) {\r\n      var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model).extent;\r\n      niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\r\n      var axisModel = indicatorAxis.model;\r\n      var scale = indicatorAxis.scale;\r\n      var fixedMin = parseAxisModelMinMax(scale, axisModel.get('min', true));\r\n      var fixedMax = parseAxisModelMinMax(scale, axisModel.get('max', true));\r\n      var interval = scale.getInterval();\r\n\r\n      if (fixedMin != null && fixedMax != null) {\r\n        // User set min, max, divide to get new interval\r\n        scale.setExtent(+fixedMin, +fixedMax);\r\n        scale.setInterval((fixedMax - fixedMin) / splitNumber);\r\n      } else if (fixedMin != null) {\r\n        var max = void 0; // User set min, expand extent on the other side\r\n\r\n        do {\r\n          max = fixedMin + interval * splitNumber;\r\n          scale.setExtent(+fixedMin, max); // Interval must been set after extent\r\n          // FIXME\r\n\r\n          scale.setInterval(interval);\r\n          interval = increaseInterval(interval);\r\n        } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\r\n      } else if (fixedMax != null) {\r\n        var min = void 0; // User set min, expand extent on the other side\r\n\r\n        do {\r\n          min = fixedMax - interval * splitNumber;\r\n          scale.setExtent(min, +fixedMax);\r\n          scale.setInterval(interval);\r\n          interval = increaseInterval(interval);\r\n        } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\r\n      } else {\r\n        var nicedSplitNumber = scale.getTicks().length - 1;\r\n\r\n        if (nicedSplitNumber > splitNumber) {\r\n          interval = increaseInterval(interval);\r\n        } // TODO\r\n\r\n\r\n        var max = Math.ceil(rawExtent[1] / interval) * interval;\r\n        var min = numberUtil.round(max - interval * splitNumber);\r\n        scale.setExtent(min, max);\r\n        scale.setInterval(interval);\r\n      }\r\n    });\r\n  };\r\n\r\n  Radar.prototype.convertToPixel = function (ecModel, finder, value) {\r\n    console.warn('Not implemented.');\r\n    return null;\r\n  };\r\n\r\n  Radar.prototype.convertFromPixel = function (ecModel, finder, pixel) {\r\n    console.warn('Not implemented.');\r\n    return null;\r\n  };\r\n\r\n  Radar.prototype.containPoint = function (point) {\r\n    console.warn('Not implemented.');\r\n    return false;\r\n  };\r\n\r\n  Radar.create = function (ecModel, api) {\r\n    var radarList = [];\r\n    ecModel.eachComponent('radar', function (radarModel) {\r\n      var radar = new Radar(radarModel, ecModel, api);\r\n      radarList.push(radar);\r\n      radarModel.coordinateSystem = radar;\r\n    });\r\n    ecModel.eachSeriesByType('radar', function (radarSeries) {\r\n      if (radarSeries.get('coordinateSystem') === 'radar') {\r\n        // Inject coordinate system\r\n        // @ts-ignore\r\n        radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\r\n      }\r\n    });\r\n    return radarList;\r\n  };\r\n  /**\r\n   * Radar dimensions is based on the data\r\n   */\r\n\r\n\r\n  Radar.dimensions = [];\r\n  return Radar;\r\n}();\r\n\r\nexport default Radar;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport RadarModel from '../../coord/radar/RadarModel';\r\nimport RadarView from './RadarView';\r\nimport Radar from '../../coord/radar/Radar';\r\nexport function install(registers) {\r\n  registers.registerCoordinateSystem('radar', Radar);\r\n  registers.registerComponentModel(RadarModel);\r\n  registers.registerComponentView(RadarView);\r\n  registers.registerVisual({\r\n    seriesType: 'radar',\r\n    reset: function (seriesModel) {\r\n      var data = seriesModel.getData(); // itemVisual symbol is for selected data\r\n\r\n      data.each(function (idx) {\r\n        data.setItemVisual(idx, 'legendIcon', 'roundRect');\r\n      }); // visual is for unselected data\r\n\r\n      data.setVisual('legendIcon', 'roundRect');\r\n    }\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { use } from '../../extension';\r\nimport radarLayout from '../radar/radarLayout';\r\nimport dataFilter from '../../processor/dataFilter';\r\nimport backwardCompat from '../radar/backwardCompat';\r\nimport RadarView from './RadarView';\r\nimport RadarSeriesModel from './RadarSeries';\r\nimport { install as installRadarComponent } from '../../component/radar/install';\r\nexport function install(registers) {\r\n  use(installRadarComponent);\r\n  registers.registerChartView(RadarView);\r\n  registers.registerSeriesModel(RadarSeriesModel);\r\n  registers.registerLayout(radarLayout);\r\n  registers.registerProcessor(dataFilter('radar'));\r\n  registers.registerPreprocessor(backwardCompat);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// @ts-nocheck\r\nimport * as echarts from '../../core/echarts';\r\nvar ATTR = '\\0_ec_interaction_mutex';\r\nexport function take(zr, resourceKey, userKey) {\r\n  var store = getStore(zr);\r\n  store[resourceKey] = userKey;\r\n}\r\nexport function release(zr, resourceKey, userKey) {\r\n  var store = getStore(zr);\r\n  var uKey = store[resourceKey];\r\n\r\n  if (uKey === userKey) {\r\n    store[resourceKey] = null;\r\n  }\r\n}\r\nexport function isTaken(zr, resourceKey) {\r\n  return !!getStore(zr)[resourceKey];\r\n}\r\n\r\nfunction getStore(zr) {\r\n  return zr[ATTR] || (zr[ATTR] = {});\r\n}\r\n/**\r\n * payload: {\r\n *     type: 'takeGlobalCursor',\r\n *     key: 'dataZoomSelect', or 'brush', or ...,\r\n *         If no userKey, release global cursor.\r\n * }\r\n */\r\n// TODO: SELF REGISTERED.\r\n\r\n\r\necharts.registerAction({\r\n  type: 'takeGlobalCursor',\r\n  event: 'globalCursorTaken',\r\n  update: 'update'\r\n}, function () {});", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport Eventful from 'zrender/lib/core/Eventful';\r\nimport * as eventTool from 'zrender/lib/core/event';\r\nimport * as interactionMutex from './interactionMutex';\r\nimport { isString, bind, defaults, clone } from 'zrender/lib/core/util';\r\n;\r\n\r\nvar RoamController =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(RoamController, _super);\r\n\r\n  function RoamController(zr) {\r\n    var _this = _super.call(this) || this;\r\n\r\n    _this._zr = zr; // Avoid two roamController bind the same handler\r\n\r\n    var mousedownHandler = bind(_this._mousedownHandler, _this);\r\n    var mousemoveHandler = bind(_this._mousemoveHandler, _this);\r\n    var mouseupHandler = bind(_this._mouseupHandler, _this);\r\n    var mousewheelHandler = bind(_this._mousewheelHandler, _this);\r\n    var pinchHandler = bind(_this._pinchHandler, _this);\r\n    /**\r\n     * Notice: only enable needed types. For example, if 'zoom'\r\n     * is not needed, 'zoom' should not be enabled, otherwise\r\n     * default mousewheel behaviour (scroll page) will be disabled.\r\n     */\r\n\r\n    _this.enable = function (controlType, opt) {\r\n      // Disable previous first\r\n      this.disable();\r\n      this._opt = defaults(clone(opt) || {}, {\r\n        zoomOnMouseWheel: true,\r\n        moveOnMouseMove: true,\r\n        // By default, wheel do not trigger move.\r\n        moveOnMouseWheel: false,\r\n        preventDefaultMouseMove: true\r\n      });\r\n\r\n      if (controlType == null) {\r\n        controlType = true;\r\n      }\r\n\r\n      if (controlType === true || controlType === 'move' || controlType === 'pan') {\r\n        zr.on('mousedown', mousedownHandler);\r\n        zr.on('mousemove', mousemoveHandler);\r\n        zr.on('mouseup', mouseupHandler);\r\n      }\r\n\r\n      if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\r\n        zr.on('mousewheel', mousewheelHandler);\r\n        zr.on('pinch', pinchHandler);\r\n      }\r\n    };\r\n\r\n    _this.disable = function () {\r\n      zr.off('mousedown', mousedownHandler);\r\n      zr.off('mousemove', mousemoveHandler);\r\n      zr.off('mouseup', mouseupHandler);\r\n      zr.off('mousewheel', mousewheelHandler);\r\n      zr.off('pinch', pinchHandler);\r\n    };\r\n\r\n    return _this;\r\n  }\r\n\r\n  RoamController.prototype.isDragging = function () {\r\n    return this._dragging;\r\n  };\r\n\r\n  RoamController.prototype.isPinching = function () {\r\n    return this._pinching;\r\n  };\r\n\r\n  RoamController.prototype.setPointerChecker = function (pointerChecker) {\r\n    this.pointerChecker = pointerChecker;\r\n  };\r\n\r\n  RoamController.prototype.dispose = function () {\r\n    this.disable();\r\n  };\r\n\r\n  RoamController.prototype._mousedownHandler = function (e) {\r\n    if (eventTool.isMiddleOrRightButtonOnMouseUpDown(e) || e.target && e.target.draggable) {\r\n      return;\r\n    }\r\n\r\n    var x = e.offsetX;\r\n    var y = e.offsetY; // Only check on mosedown, but not mousemove.\r\n    // Mouse can be out of target when mouse moving.\r\n\r\n    if (this.pointerChecker && this.pointerChecker(e, x, y)) {\r\n      this._x = x;\r\n      this._y = y;\r\n      this._dragging = true;\r\n    }\r\n  };\r\n\r\n  RoamController.prototype._mousemoveHandler = function (e) {\r\n    if (!this._dragging || !isAvailableBehavior('moveOnMouseMove', e, this._opt) || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\r\n      return;\r\n    }\r\n\r\n    var x = e.offsetX;\r\n    var y = e.offsetY;\r\n    var oldX = this._x;\r\n    var oldY = this._y;\r\n    var dx = x - oldX;\r\n    var dy = y - oldY;\r\n    this._x = x;\r\n    this._y = y;\r\n    this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\r\n    trigger(this, 'pan', 'moveOnMouseMove', e, {\r\n      dx: dx,\r\n      dy: dy,\r\n      oldX: oldX,\r\n      oldY: oldY,\r\n      newX: x,\r\n      newY: y,\r\n      isAvailableBehavior: null\r\n    });\r\n  };\r\n\r\n  RoamController.prototype._mouseupHandler = function (e) {\r\n    if (!eventTool.isMiddleOrRightButtonOnMouseUpDown(e)) {\r\n      this._dragging = false;\r\n    }\r\n  };\r\n\r\n  RoamController.prototype._mousewheelHandler = function (e) {\r\n    var shouldZoom = isAvailableBehavior('zoomOnMouseWheel', e, this._opt);\r\n    var shouldMove = isAvailableBehavior('moveOnMouseWheel', e, this._opt);\r\n    var wheelDelta = e.wheelDelta;\r\n    var absWheelDeltaDelta = Math.abs(wheelDelta);\r\n    var originX = e.offsetX;\r\n    var originY = e.offsetY; // wheelDelta maybe -0 in chrome mac.\r\n\r\n    if (wheelDelta === 0 || !shouldZoom && !shouldMove) {\r\n      return;\r\n    } // If both `shouldZoom` and `shouldMove` is true, trigger\r\n    // their event both, and the final behavior is determined\r\n    // by event listener themselves.\r\n\r\n\r\n    if (shouldZoom) {\r\n      // Convenience:\r\n      // Mac and VM Windows on Mac: scroll up: zoom out.\r\n      // Windows: scroll up: zoom in.\r\n      // FIXME: Should do more test in different environment.\r\n      // wheelDelta is too complicated in difference nvironment\r\n      // (https://developer.mozilla.org/en-US/docs/Web/Events/mousewheel),\r\n      // although it has been normallized by zrender.\r\n      // wheelDelta of mouse wheel is bigger than touch pad.\r\n      var factor = absWheelDeltaDelta > 3 ? 1.4 : absWheelDeltaDelta > 1 ? 1.2 : 1.1;\r\n      var scale = wheelDelta > 0 ? factor : 1 / factor;\r\n      checkPointerAndTrigger(this, 'zoom', 'zoomOnMouseWheel', e, {\r\n        scale: scale,\r\n        originX: originX,\r\n        originY: originY,\r\n        isAvailableBehavior: null\r\n      });\r\n    }\r\n\r\n    if (shouldMove) {\r\n      // FIXME: Should do more test in different environment.\r\n      var absDelta = Math.abs(wheelDelta); // wheelDelta of mouse wheel is bigger than touch pad.\r\n\r\n      var scrollDelta = (wheelDelta > 0 ? 1 : -1) * (absDelta > 3 ? 0.4 : absDelta > 1 ? 0.15 : 0.05);\r\n      checkPointerAndTrigger(this, 'scrollMove', 'moveOnMouseWheel', e, {\r\n        scrollDelta: scrollDelta,\r\n        originX: originX,\r\n        originY: originY,\r\n        isAvailableBehavior: null\r\n      });\r\n    }\r\n  };\r\n\r\n  RoamController.prototype._pinchHandler = function (e) {\r\n    if (interactionMutex.isTaken(this._zr, 'globalPan')) {\r\n      return;\r\n    }\r\n\r\n    var scale = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\r\n    checkPointerAndTrigger(this, 'zoom', null, e, {\r\n      scale: scale,\r\n      originX: e.pinchX,\r\n      originY: e.pinchY,\r\n      isAvailableBehavior: null\r\n    });\r\n  };\r\n\r\n  return RoamController;\r\n}(Eventful);\r\n\r\nfunction checkPointerAndTrigger(controller, eventName, behaviorToCheck, e, contollerEvent) {\r\n  if (controller.pointerChecker && controller.pointerChecker(e, contollerEvent.originX, contollerEvent.originY)) {\r\n    // When mouse is out of roamController rect,\r\n    // default befavoius should not be be disabled, otherwise\r\n    // page sliding is disabled, contrary to expectation.\r\n    eventTool.stop(e.event);\r\n    trigger(controller, eventName, behaviorToCheck, e, contollerEvent);\r\n  }\r\n}\r\n\r\nfunction trigger(controller, eventName, behaviorToCheck, e, contollerEvent) {\r\n  // Also provide behavior checker for event listener, for some case that\r\n  // multiple components share one listener.\r\n  contollerEvent.isAvailableBehavior = bind(isAvailableBehavior, null, behaviorToCheck, e); // TODO should not have type issue.\r\n\r\n  controller.trigger(eventName, contollerEvent);\r\n} // settings: {\r\n//     zoomOnMouseWheel\r\n//     moveOnMouseMove\r\n//     moveOnMouseWheel\r\n// }\r\n// The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\r\n\r\n\r\nfunction isAvailableBehavior(behaviorToCheck, e, settings) {\r\n  var setting = settings[behaviorToCheck];\r\n  return !behaviorToCheck || setting && (!isString(setting) || e.event[setting + 'Key']);\r\n}\r\n\r\nexport default RoamController;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * For geo and graph.\r\n */\r\nexport function updateViewOnPan(controllerHost, dx, dy) {\r\n  var target = controllerHost.target;\r\n  target.x += dx;\r\n  target.y += dy;\r\n  target.dirty();\r\n}\r\n/**\r\n * For geo and graph.\r\n */\r\n\r\nexport function updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\r\n  var target = controllerHost.target;\r\n  var zoomLimit = controllerHost.zoomLimit;\r\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\r\n  newZoom *= zoomDelta;\r\n\r\n  if (zoomLimit) {\r\n    var zoomMin = zoomLimit.min || 0;\r\n    var zoomMax = zoomLimit.max || Infinity;\r\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\r\n  }\r\n\r\n  var zoomScale = newZoom / controllerHost.zoom;\r\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\r\n\r\n  target.x -= (zoomX - target.x) * (zoomScale - 1);\r\n  target.y -= (zoomY - target.y) * (zoomScale - 1);\r\n  target.scaleX *= zoomScale;\r\n  target.scaleY *= zoomScale;\r\n  target.dirty();\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar IRRELEVANT_EXCLUDES = {\r\n  'axisPointer': 1,\r\n  'tooltip': 1,\r\n  'brush': 1\r\n};\r\n/**\r\n * Avoid that: mouse click on a elements that is over geo or graph,\r\n * but roam is triggered.\r\n */\r\n\r\nexport function onIrrelevantElement(e, api, targetCoordSysModel) {\r\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\r\n\r\n  var coordSys = model && model.coordinateSystem;\r\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES.hasOwnProperty(model.mainType) && coordSys && coordSys.model !== targetCoordSysModel;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport RoamController from './RoamController';\r\nimport * as roamHelper from '../../component/helper/roamHelper';\r\nimport { onIrrelevantElement } from '../../component/helper/cursorHelper';\r\nimport * as graphic from '../../util/graphic';\r\nimport { enableHoverEmphasis, enableComponentHighDownFeatures, setDefaultStateProxy } from '../../util/states';\r\nimport geoSourceManager from '../../coord/geo/geoSourceManager';\r\nimport { getUID } from '../../util/component';\r\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle';\r\nimport { getECData } from '../../util/innerStore';\r\nimport { createOrUpdatePatternFromDecal } from '../../util/decal';\r\nimport Displayable from 'zrender/lib/graphic/Displayable';\r\nimport { makeInner } from '../../util/model';\r\n/**\r\n * Only these tags enable use `itemStyle` if they are named in SVG.\r\n * Other tags like <text> <tspan> <image> might not suitable for `itemStyle`.\r\n * They will not be considered to be styled until some requirements come.\r\n */\r\n\r\nvar OPTION_STYLE_ENABLED_TAGS = ['rect', 'circle', 'line', 'ellipse', 'polygon', 'polyline', 'path'];\r\nvar OPTION_STYLE_ENABLED_TAG_MAP = zrUtil.createHashMap(OPTION_STYLE_ENABLED_TAGS);\r\nvar STATE_TRIGGER_TAG_MAP = zrUtil.createHashMap(OPTION_STYLE_ENABLED_TAGS.concat(['g']));\r\nvar LABEL_HOST_MAP = zrUtil.createHashMap(OPTION_STYLE_ENABLED_TAGS.concat(['g']));\r\nvar mapLabelRaw = makeInner();\r\n\r\nfunction getFixedItemStyle(model) {\r\n  var itemStyle = model.getItemStyle();\r\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\r\n  // they should both set areaColor and color to be null.\r\n\r\n  if (areaColor != null) {\r\n    itemStyle.fill = areaColor;\r\n  }\r\n\r\n  return itemStyle;\r\n}\r\n\r\nvar MapDraw =\r\n/** @class */\r\nfunction () {\r\n  function MapDraw(api) {\r\n    var group = new graphic.Group();\r\n    this.uid = getUID('ec_map_draw');\r\n    this._controller = new RoamController(api.getZr());\r\n    this._controllerHost = {\r\n      target: group\r\n    };\r\n    this.group = group;\r\n    group.add(this._regionsGroup = new graphic.Group());\r\n    group.add(this._svgGroup = new graphic.Group());\r\n  }\r\n\r\n  MapDraw.prototype.draw = function (mapOrGeoModel, ecModel, api, fromView, payload) {\r\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\r\n    // will be assigned with map data. Other GEO model has no data.\r\n\r\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\r\n    isGeo && ecModel.eachComponent({\r\n      mainType: 'series',\r\n      subType: 'map'\r\n    }, function (mapSeries) {\r\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\r\n        data = mapSeries.getData();\r\n      }\r\n    });\r\n    var geo = mapOrGeoModel.coordinateSystem;\r\n    var regionsGroup = this._regionsGroup;\r\n    var group = this.group;\r\n    var transformInfo = geo.getTransformInfo();\r\n    var transformInfoRaw = transformInfo.raw;\r\n    var transformInfoRoam = transformInfo.roam; // No animation when first draw or in action\r\n\r\n    var isFirstDraw = !regionsGroup.childAt(0) || payload;\r\n\r\n    if (isFirstDraw) {\r\n      group.x = transformInfoRoam.x;\r\n      group.y = transformInfoRoam.y;\r\n      group.scaleX = transformInfoRoam.scaleX;\r\n      group.scaleY = transformInfoRoam.scaleY;\r\n      group.dirty();\r\n    } else {\r\n      graphic.updateProps(group, transformInfoRoam, mapOrGeoModel);\r\n    }\r\n\r\n    var isVisualEncodedByVisualMap = data && data.getVisual('visualMeta') && data.getVisual('visualMeta').length > 0;\r\n    var viewBuildCtx = {\r\n      api: api,\r\n      geo: geo,\r\n      mapOrGeoModel: mapOrGeoModel,\r\n      data: data,\r\n      isVisualEncodedByVisualMap: isVisualEncodedByVisualMap,\r\n      isGeo: isGeo,\r\n      transformInfoRaw: transformInfoRaw\r\n    };\r\n\r\n    if (geo.resourceType === 'geoJSON') {\r\n      this._buildGeoJSON(viewBuildCtx);\r\n    } else if (geo.resourceType === 'geoSVG') {\r\n      this._buildSVG(viewBuildCtx);\r\n    }\r\n\r\n    this._updateController(mapOrGeoModel, ecModel, api);\r\n\r\n    this._updateMapSelectHandler(mapOrGeoModel, regionsGroup, api, fromView);\r\n  };\r\n\r\n  MapDraw.prototype._buildGeoJSON = function (viewBuildCtx) {\r\n    var regionsGroupByName = this._regionsGroupByName = zrUtil.createHashMap();\r\n    var regionsInfoByName = zrUtil.createHashMap();\r\n    var regionsGroup = this._regionsGroup;\r\n    var transformInfoRaw = viewBuildCtx.transformInfoRaw;\r\n    var mapOrGeoModel = viewBuildCtx.mapOrGeoModel;\r\n    var data = viewBuildCtx.data;\r\n\r\n    var transformPoint = function (point) {\r\n      return [point[0] * transformInfoRaw.scaleX + transformInfoRaw.x, point[1] * transformInfoRaw.scaleY + transformInfoRaw.y];\r\n    };\r\n\r\n    regionsGroup.removeAll(); // Only when the resource is GeoJSON, there is `geo.regions`.\r\n\r\n    zrUtil.each(viewBuildCtx.geo.regions, function (region) {\r\n      var regionName = region.name; // Consider in GeoJson properties.name may be duplicated, for example,\r\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\r\n      // colonies). And it is not appropriate to merge them in geo, which\r\n      // will make them share the same label and bring trouble in label\r\n      // location calculation.\r\n\r\n      var regionGroup = regionsGroupByName.get(regionName);\r\n\r\n      var _a = regionsInfoByName.get(regionName) || {},\r\n          dataIdx = _a.dataIdx,\r\n          regionModel = _a.regionModel;\r\n\r\n      if (!regionGroup) {\r\n        regionGroup = regionsGroupByName.set(regionName, new graphic.Group());\r\n        regionsGroup.add(regionGroup);\r\n        dataIdx = data ? data.indexOfName(regionName) : null;\r\n        regionModel = viewBuildCtx.isGeo ? mapOrGeoModel.getRegionModel(regionName) : data ? data.getItemModel(dataIdx) : null;\r\n        regionsInfoByName.set(regionName, {\r\n          dataIdx: dataIdx,\r\n          regionModel: regionModel\r\n        });\r\n      }\r\n\r\n      var compoundPath = new graphic.CompoundPath({\r\n        segmentIgnoreThreshold: 1,\r\n        shape: {\r\n          paths: []\r\n        }\r\n      });\r\n      regionGroup.add(compoundPath);\r\n      zrUtil.each(region.geometries, function (geometry) {\r\n        if (geometry.type !== 'polygon') {\r\n          return;\r\n        }\r\n\r\n        var points = [];\r\n\r\n        for (var i = 0; i < geometry.exterior.length; ++i) {\r\n          points.push(transformPoint(geometry.exterior[i]));\r\n        }\r\n\r\n        compoundPath.shape.paths.push(new graphic.Polygon({\r\n          segmentIgnoreThreshold: 1,\r\n          shape: {\r\n            points: points\r\n          }\r\n        }));\r\n\r\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); ++i) {\r\n          var interior = geometry.interiors[i];\r\n          var points_1 = [];\r\n\r\n          for (var j = 0; j < interior.length; ++j) {\r\n            points_1.push(transformPoint(interior[j]));\r\n          }\r\n\r\n          compoundPath.shape.paths.push(new graphic.Polygon({\r\n            segmentIgnoreThreshold: 1,\r\n            shape: {\r\n              points: points_1\r\n            }\r\n          }));\r\n        }\r\n      });\r\n      applyOptionStyleForRegion(viewBuildCtx, compoundPath, dataIdx, regionModel);\r\n\r\n      if (compoundPath instanceof Displayable) {\r\n        compoundPath.culling = true;\r\n      }\r\n\r\n      var centerPt = transformPoint(region.getCenter());\r\n      resetLabelForRegion(viewBuildCtx, compoundPath, regionName, regionModel, mapOrGeoModel, dataIdx, centerPt);\r\n    }); // Ensure children have been added to `regionGroup` before calling them.\r\n\r\n    regionsGroupByName.each(function (regionGroup, regionName) {\r\n      var _a = regionsInfoByName.get(regionName),\r\n          dataIdx = _a.dataIdx,\r\n          regionModel = _a.regionModel;\r\n\r\n      resetEventTriggerForRegion(viewBuildCtx, regionGroup, regionName, regionModel, mapOrGeoModel, dataIdx);\r\n      resetTooltipForRegion(viewBuildCtx, regionGroup, regionName, regionModel, mapOrGeoModel);\r\n      resetStateTriggerForRegion(viewBuildCtx, regionGroup, regionName, regionModel, mapOrGeoModel);\r\n    }, this);\r\n  };\r\n\r\n  MapDraw.prototype._buildSVG = function (viewBuildCtx) {\r\n    var mapName = viewBuildCtx.geo.map;\r\n    var transformInfoRaw = viewBuildCtx.transformInfoRaw;\r\n    this._svgGroup.x = transformInfoRaw.x;\r\n    this._svgGroup.y = transformInfoRaw.y;\r\n    this._svgGroup.scaleX = transformInfoRaw.scaleX;\r\n    this._svgGroup.scaleY = transformInfoRaw.scaleY;\r\n\r\n    if (this._svgResourceChanged(mapName)) {\r\n      this._freeSVG();\r\n\r\n      this._useSVG(mapName);\r\n    }\r\n\r\n    var svgDispatcherMap = this._svgDispatcherMap = zrUtil.createHashMap();\r\n    var focusSelf = false;\r\n    zrUtil.each(this._svgGraphicRecord.named, function (namedItem) {\r\n      // Note that we also allow different elements have the same name.\r\n      // For example, a glyph of a city and the label of the city have\r\n      // the same name and their tooltip info can be defined in a single\r\n      // region option.\r\n      var regionName = namedItem.name;\r\n      var mapOrGeoModel = viewBuildCtx.mapOrGeoModel;\r\n      var data = viewBuildCtx.data;\r\n      var svgNodeTagLower = namedItem.svgNodeTagLower;\r\n      var el = namedItem.el;\r\n      var dataIdx = data ? data.indexOfName(regionName) : null;\r\n      var regionModel = mapOrGeoModel.getRegionModel(regionName);\r\n\r\n      if (OPTION_STYLE_ENABLED_TAG_MAP.get(svgNodeTagLower) != null && el instanceof Displayable) {\r\n        applyOptionStyleForRegion(viewBuildCtx, el, dataIdx, regionModel);\r\n      }\r\n\r\n      if (el instanceof Displayable) {\r\n        el.culling = true;\r\n      } // We do not know how the SVG like so we'd better not to change z2.\r\n      // Otherwise it might bring some unexpected result. For example,\r\n      // an area hovered that make some inner city can not be clicked.\r\n\r\n\r\n      el.z2EmphasisLift = 0; // If self named:\r\n\r\n      if (!namedItem.namedFrom) {\r\n        // label should batter to be displayed based on the center of <g>\r\n        // if it is named rather than displayed on each child.\r\n        if (LABEL_HOST_MAP.get(svgNodeTagLower) != null) {\r\n          resetLabelForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel, dataIdx, null);\r\n        }\r\n\r\n        resetEventTriggerForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel, dataIdx);\r\n        resetTooltipForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel);\r\n\r\n        if (STATE_TRIGGER_TAG_MAP.get(svgNodeTagLower) != null) {\r\n          var focus_1 = resetStateTriggerForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel);\r\n\r\n          if (focus_1 === 'self') {\r\n            focusSelf = true;\r\n          }\r\n\r\n          var els = svgDispatcherMap.get(regionName) || svgDispatcherMap.set(regionName, []);\r\n          els.push(el);\r\n        }\r\n      }\r\n    }, this);\r\n\r\n    this._enableBlurEntireSVG(focusSelf, viewBuildCtx);\r\n  };\r\n\r\n  MapDraw.prototype._enableBlurEntireSVG = function (focusSelf, viewBuildCtx) {\r\n    // It's a little complicated to support blurring the entire geoSVG in series-map.\r\n    // So do not suport it until some requirements come.\r\n    // At present, in series-map, only regions can be blurred.\r\n    if (focusSelf && viewBuildCtx.isGeo) {\r\n      var blurStyle = viewBuildCtx.mapOrGeoModel.getModel(['blur', 'itemStyle']).getItemStyle(); // Only suport `opacity` here. Because not sure that other props are suitable for\r\n      // all of the elements generated by SVG (especially for Text/TSpan/Image/... ).\r\n\r\n      var opacity_1 = blurStyle.opacity;\r\n\r\n      this._svgGraphicRecord.root.traverse(function (el) {\r\n        if (!el.isGroup) {\r\n          // PENDING: clear those settings to SVG elements when `_freeSVG`.\r\n          // (Currently it happen not to be needed.)\r\n          setDefaultStateProxy(el);\r\n          var style = el.ensureState('blur').style || {}; // Do not overwrite the region style that already set from region option.\r\n\r\n          if (style.opacity == null && opacity_1 != null) {\r\n            style.opacity = opacity_1;\r\n          } // If `ensureState('blur').style = {}`, there will be default opacity.\r\n          // Enable `stateTransition` (animation).\r\n\r\n\r\n          el.ensureState('emphasis');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  MapDraw.prototype.remove = function () {\r\n    this._regionsGroup.removeAll();\r\n\r\n    this._regionsGroupByName = null;\r\n\r\n    this._svgGroup.removeAll();\r\n\r\n    this._freeSVG();\r\n\r\n    this._controller.dispose();\r\n\r\n    this._controllerHost = null;\r\n  };\r\n\r\n  MapDraw.prototype.findHighDownDispatchers = function (name, geoModel) {\r\n    if (name == null) {\r\n      return [];\r\n    }\r\n\r\n    var geo = geoModel.coordinateSystem;\r\n\r\n    if (geo.resourceType === 'geoJSON') {\r\n      var regionsGroupByName = this._regionsGroupByName;\r\n\r\n      if (regionsGroupByName) {\r\n        var regionGroup = regionsGroupByName.get(name);\r\n        return regionGroup ? [regionGroup] : [];\r\n      }\r\n    } else if (geo.resourceType === 'geoSVG') {\r\n      return this._svgDispatcherMap && this._svgDispatcherMap.get(name) || [];\r\n    }\r\n  };\r\n\r\n  MapDraw.prototype._svgResourceChanged = function (mapName) {\r\n    return this._svgMapName !== mapName;\r\n  };\r\n\r\n  MapDraw.prototype._useSVG = function (mapName) {\r\n    var resource = geoSourceManager.getGeoResource(mapName);\r\n\r\n    if (resource && resource.type === 'geoSVG') {\r\n      var svgGraphic = resource.useGraphic(this.uid);\r\n\r\n      this._svgGroup.add(svgGraphic.root);\r\n\r\n      this._svgGraphicRecord = svgGraphic;\r\n      this._svgMapName = mapName;\r\n    }\r\n  };\r\n\r\n  MapDraw.prototype._freeSVG = function () {\r\n    var mapName = this._svgMapName;\r\n\r\n    if (mapName == null) {\r\n      return;\r\n    }\r\n\r\n    var resource = geoSourceManager.getGeoResource(mapName);\r\n\r\n    if (resource && resource.type === 'geoSVG') {\r\n      resource.freeGraphic(this.uid);\r\n    }\r\n\r\n    this._svgGraphicRecord = null;\r\n    this._svgDispatcherMap = null;\r\n\r\n    this._svgGroup.removeAll();\r\n\r\n    this._svgMapName = null;\r\n  };\r\n\r\n  MapDraw.prototype._updateController = function (mapOrGeoModel, ecModel, api) {\r\n    var geo = mapOrGeoModel.coordinateSystem;\r\n    var controller = this._controller;\r\n    var controllerHost = this._controllerHost; // @ts-ignore FIXME:TS\r\n\r\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\r\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\r\n    // @ts-ignore FIXME:TS\r\n\r\n    controller.enable(mapOrGeoModel.get('roam') || false);\r\n    var mainType = mapOrGeoModel.mainType;\r\n\r\n    function makeActionBase() {\r\n      var action = {\r\n        type: 'geoRoam',\r\n        componentType: mainType\r\n      };\r\n      action[mainType + 'Id'] = mapOrGeoModel.id;\r\n      return action;\r\n    }\r\n\r\n    controller.off('pan').on('pan', function (e) {\r\n      this._mouseDownFlag = false;\r\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\r\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\r\n        dx: e.dx,\r\n        dy: e.dy\r\n      }));\r\n    }, this);\r\n    controller.off('zoom').on('zoom', function (e) {\r\n      this._mouseDownFlag = false;\r\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\r\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\r\n        zoom: e.scale,\r\n        originX: e.originX,\r\n        originY: e.originY\r\n      }));\r\n    }, this);\r\n    controller.setPointerChecker(function (e, x, y) {\r\n      return geo.containPoint([x, y]) && !onIrrelevantElement(e, api, mapOrGeoModel);\r\n    });\r\n  };\r\n  /**\r\n   * FIXME: this is a temporarily workaround.\r\n   * When `geoRoam` the elements need to be reset in `MapView['render']`, because the props like\r\n   * `ignore` might have been modified by `LabelManager`, and `LabelManager#addLabelsOfSeries`\r\n   * will subsequently cache `defaultAttr` like `ignore`. If do not do this reset, the modified\r\n   * props will have no chance to be restored.\r\n   * Note: this reset should be after `clearStates` in `renderSeries` becuase `useStates` in\r\n   * `renderSeries` will cache the modified `ignore` to `el._normalState`.\r\n   * TODO:\r\n   * Use clone/immutable in `LabelManager`?\r\n   */\r\n\r\n\r\n  MapDraw.prototype.resetForLabelLayout = function () {\r\n    this.group.traverse(function (el) {\r\n      var label = el.getTextContent();\r\n\r\n      if (label) {\r\n        label.ignore = mapLabelRaw(label).ignore;\r\n      }\r\n    });\r\n  };\r\n\r\n  MapDraw.prototype._updateMapSelectHandler = function (mapOrGeoModel, regionsGroup, api, fromView) {\r\n    var mapDraw = this;\r\n    regionsGroup.off('mousedown');\r\n    regionsGroup.off('click'); // @ts-ignore FIXME:TS resolve type conflict\r\n\r\n    if (mapOrGeoModel.get('selectedMode')) {\r\n      regionsGroup.on('mousedown', function () {\r\n        mapDraw._mouseDownFlag = true;\r\n      });\r\n      regionsGroup.on('click', function (e) {\r\n        if (!mapDraw._mouseDownFlag) {\r\n          return;\r\n        }\r\n\r\n        mapDraw._mouseDownFlag = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  return MapDraw;\r\n}();\r\n\r\n;\r\n\r\nfunction applyOptionStyleForRegion(viewBuildCtx, el, dataIndex, regionModel) {\r\n  // All of the path are using `itemStyle`, becuase\r\n  // (1) Some SVG also use fill on polyline (The different between\r\n  // polyline and polygon is \"open\" or \"close\" but not fill or not).\r\n  // (2) For the common props like opacity, if some use itemStyle\r\n  // and some use `lineStyle`, it might confuse users.\r\n  // (3) Most SVG use <path>, where can not detect wether draw a \"line\"\r\n  // or a filled shape, so use `itemStyle` for <path>.\r\n  var normalStyleModel = regionModel.getModel('itemStyle');\r\n  var emphasisStyleModel = regionModel.getModel(['emphasis', 'itemStyle']);\r\n  var blurStyleModel = regionModel.getModel(['blur', 'itemStyle']);\r\n  var selectStyleModel = regionModel.getModel(['select', 'itemStyle']); // NOTE: DONT use 'style' in visual when drawing map.\r\n  // This component is used for drawing underlying map for both geo component and map series.\r\n\r\n  var normalStyle = getFixedItemStyle(normalStyleModel);\r\n  var emphasisStyle = getFixedItemStyle(emphasisStyleModel);\r\n  var selectStyle = getFixedItemStyle(selectStyleModel);\r\n  var blurStyle = getFixedItemStyle(blurStyleModel); // Update the itemStyle if has data visual\r\n\r\n  var data = viewBuildCtx.data;\r\n\r\n  if (data) {\r\n    // Only visual color of each item will be used. It can be encoded by visualMap\r\n    // But visual color of series is used in symbol drawing\r\n    // Visual color for each series is for the symbol draw\r\n    var style = data.getItemVisual(dataIndex, 'style');\r\n    var decal = data.getItemVisual(dataIndex, 'decal');\r\n\r\n    if (viewBuildCtx.isVisualEncodedByVisualMap && style.fill) {\r\n      normalStyle.fill = style.fill;\r\n    }\r\n\r\n    if (decal) {\r\n      normalStyle.decal = createOrUpdatePatternFromDecal(decal, viewBuildCtx.api);\r\n    }\r\n  } // SVG text, tspan and image can be named but not supporeted\r\n  // to be styled by region option yet.\r\n\r\n\r\n  el.setStyle(normalStyle);\r\n  el.style.strokeNoScale = true;\r\n  el.ensureState('emphasis').style = emphasisStyle;\r\n  el.ensureState('select').style = selectStyle;\r\n  el.ensureState('blur').style = blurStyle; // Enable blur\r\n\r\n  setDefaultStateProxy(el);\r\n}\r\n\r\nfunction resetLabelForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel, // Exist only if `viewBuildCtx.data` exists.\r\ndataIdx, // If labelXY not provided, use `textConfig.position: 'inside'`\r\nlabelXY) {\r\n  var data = viewBuildCtx.data;\r\n  var isGeo = viewBuildCtx.isGeo;\r\n  var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\r\n  var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\r\n  // 1. In map series and data value is NaN\r\n  // 2. In geo component\r\n  // 3. Region has no series legendIcon, which will be add a showLabel flag in mapSymbolLayout\r\n\r\n  if (isGeo || isDataNaN || itemLayout && itemLayout.showLabel) {\r\n    var query = !isGeo ? dataIdx : regionName;\r\n    var labelFetcher = void 0; // Consider dataIdx not found.\r\n\r\n    if (!data || dataIdx >= 0) {\r\n      labelFetcher = mapOrGeoModel;\r\n    }\r\n\r\n    var specifiedTextOpt = labelXY ? {\r\n      normal: {\r\n        align: 'center',\r\n        verticalAlign: 'middle'\r\n      }\r\n    } : null; // Caveat: must be called after `setDefaultStateProxy(el);` called.\r\n    // because textContent will be assign with `el.stateProxy` inside.\r\n\r\n    setLabelStyle(el, getLabelStatesModels(regionModel), {\r\n      labelFetcher: labelFetcher,\r\n      labelDataIndex: query,\r\n      defaultText: regionName\r\n    }, specifiedTextOpt);\r\n    var textEl = el.getTextContent();\r\n\r\n    if (textEl) {\r\n      mapLabelRaw(textEl).ignore = textEl.ignore;\r\n\r\n      if (el.textConfig && labelXY) {\r\n        // Compute a relative offset based on the el bounding rect.\r\n        var rect = el.getBoundingRect().clone(); // Need to make sure the percent position base on the same rect in normal and\r\n        // emphasis state. Otherwise if using boundingRect of el, but the emphasis state\r\n        // has borderWidth (even 0.5px), the text position will be changed obviously\r\n        // if the position is very big like ['1234%', '1345%'].\r\n\r\n        el.textConfig.layoutRect = rect;\r\n        el.textConfig.position = [(labelXY[0] - rect.x) / rect.width * 100 + '%', (labelXY[1] - rect.y) / rect.height * 100 + '%'];\r\n      }\r\n    } // PENDING:\r\n    // If labelLayout is enabled (test/label-layout.html), el.dataIndex should be specified.\r\n    // But el.dataIndex is also used to determine whether user event should be triggered,\r\n    // where el.seriesIndex or el.dataModel must be specified. At present for a single el\r\n    // there is not case that \"only label layout enabled but user event disabled\", so here\r\n    // we depends `resetEventTriggerForRegion` to do the job of setting `el.dataIndex`.\r\n\r\n\r\n    el.disableLabelAnimation = true;\r\n  } else {\r\n    el.removeTextContent();\r\n    el.removeTextConfig();\r\n    el.disableLabelAnimation = null;\r\n  }\r\n}\r\n\r\nfunction resetEventTriggerForRegion(viewBuildCtx, eventTrigger, regionName, regionModel, mapOrGeoModel, // Exist only if `viewBuildCtx.data` exists.\r\ndataIdx) {\r\n  // setItemGraphicEl, setHoverStyle after all polygons and labels\r\n  // are added to the rigionGroup\r\n  if (viewBuildCtx.data) {\r\n    // FIXME: when series-map use a SVG map, and there are duplicated name specified\r\n    // on different SVG elements, after `data.setItemGraphicEl(...)`:\r\n    // (1) all of them will be mounted with `dataIndex`, `seriesIndex`, so that tooltip\r\n    // can be triggered only mouse hover. That's correct.\r\n    // (2) only the last element will be kept in `data`, so that if trigger tooltip\r\n    // by `dispatchAction`, only the last one can be found and triggered. That might be\r\n    // not correct. We will fix it in future if anyone demanding that.\r\n    viewBuildCtx.data.setItemGraphicEl(dataIdx, eventTrigger);\r\n  } // series-map will not trigger \"geoselectchange\" no matter it is\r\n  // based on a declared geo component. Becuause series-map will\r\n  // trigger \"selectchange\". If it trigger both the two events,\r\n  // If users call `chart.dispatchAction({type: 'toggleSelect'})`,\r\n  // it not easy to also fire event \"geoselectchanged\".\r\n  else {\r\n      // Package custom mouse event for geo component\r\n      getECData(eventTrigger).eventData = {\r\n        componentType: 'geo',\r\n        componentIndex: mapOrGeoModel.componentIndex,\r\n        geoIndex: mapOrGeoModel.componentIndex,\r\n        name: regionName,\r\n        region: regionModel && regionModel.option || {}\r\n      };\r\n    }\r\n}\r\n\r\nfunction resetTooltipForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel) {\r\n  if (!viewBuildCtx.data) {\r\n    graphic.setTooltipConfig({\r\n      el: el,\r\n      componentModel: mapOrGeoModel,\r\n      itemName: regionName,\r\n      // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\r\n      itemTooltipOption: regionModel.get('tooltip')\r\n    });\r\n  }\r\n}\r\n\r\nfunction resetStateTriggerForRegion(viewBuildCtx, el, regionName, regionModel, mapOrGeoModel) {\r\n  // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\r\n  el.highDownSilentOnTouch = !!mapOrGeoModel.get('selectedMode'); // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\r\n\r\n  var emphasisModel = regionModel.getModel('emphasis');\r\n  var focus = emphasisModel.get('focus');\r\n  enableHoverEmphasis(el, focus, emphasisModel.get('blurScope'));\r\n\r\n  if (viewBuildCtx.isGeo) {\r\n    enableComponentHighDownFeatures(el, mapOrGeoModel, regionName);\r\n  }\r\n\r\n  return focus;\r\n}\r\n\r\nexport default MapDraw; // @ts-ignore FIXME:TS fix the \"compatible with each other\"?", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as graphic from '../../util/graphic';\r\nimport MapDraw from '../../component/helper/MapDraw';\r\nimport ChartView from '../../view/Chart';\r\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle';\r\nimport { setStatesFlag, Z2_EMPHASIS_LIFT } from '../../util/states';\r\n\r\nvar MapView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(MapView, _super);\r\n\r\n  function MapView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = MapView.type;\r\n    return _this;\r\n  }\r\n\r\n  MapView.prototype.render = function (mapModel, ecModel, api, payload) {\r\n    // Not render if it is an toggleSelect action from self\r\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\r\n      return;\r\n    }\r\n\r\n    var group = this.group;\r\n    group.removeAll();\r\n\r\n    if (mapModel.getHostGeoModel()) {\r\n      return;\r\n    }\r\n\r\n    if (this._mapDraw && payload && payload.type === 'geoRoam') {\r\n      this._mapDraw.resetForLabelLayout();\r\n    } // Not update map if it is an roam action from self\r\n\r\n\r\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\r\n      if (mapModel.needsDrawMap) {\r\n        var mapDraw = this._mapDraw || new MapDraw(api);\r\n        group.add(mapDraw.group);\r\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\r\n        this._mapDraw = mapDraw;\r\n      } else {\r\n        // Remove drawed map\r\n        this._mapDraw && this._mapDraw.remove();\r\n        this._mapDraw = null;\r\n      }\r\n    } else {\r\n      var mapDraw = this._mapDraw;\r\n      mapDraw && group.add(mapDraw.group);\r\n    }\r\n\r\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\r\n  };\r\n\r\n  MapView.prototype.remove = function () {\r\n    this._mapDraw && this._mapDraw.remove();\r\n    this._mapDraw = null;\r\n    this.group.removeAll();\r\n  };\r\n\r\n  MapView.prototype.dispose = function () {\r\n    this._mapDraw && this._mapDraw.remove();\r\n    this._mapDraw = null;\r\n  };\r\n\r\n  MapView.prototype._renderSymbols = function (mapModel, ecModel, api) {\r\n    var originalData = mapModel.originalData;\r\n    var group = this.group;\r\n    originalData.each(originalData.mapDimension('value'), function (value, originalDataIndex) {\r\n      if (isNaN(value)) {\r\n        return;\r\n      }\r\n\r\n      var layout = originalData.getItemLayout(originalDataIndex);\r\n\r\n      if (!layout || !layout.point) {\r\n        // Not exists in map\r\n        return;\r\n      }\r\n\r\n      var point = layout.point;\r\n      var offset = layout.offset;\r\n      var circle = new graphic.Circle({\r\n        style: {\r\n          // Because the special of map draw.\r\n          // Which needs statistic of multiple series and draw on one map.\r\n          // And each series also need a symbol with legend color\r\n          //\r\n          // Layout and visual are put one the different data\r\n          // TODO\r\n          fill: mapModel.getData().getVisual('style').fill\r\n        },\r\n        shape: {\r\n          cx: point[0] + offset * 9,\r\n          cy: point[1],\r\n          r: 3\r\n        },\r\n        silent: true,\r\n        // Do not overlap the first series, on which labels are displayed.\r\n        z2: 8 + (!offset ? Z2_EMPHASIS_LIFT + 1 : 0)\r\n      }); // Only the series that has the first value on the same region is in charge of rendering the label.\r\n      // But consider the case:\r\n      // series: [\r\n      //     {id: 'X', type: 'map', map: 'm', {data: [{name: 'A', value: 11}, {name: 'B', {value: 22}]},\r\n      //     {id: 'Y', type: 'map', map: 'm', {data: [{name: 'A', value: 21}, {name: 'C', {value: 33}]}\r\n      // ]\r\n      // The offset `0` of item `A` is at series `X`, but of item `C` is at series `Y`.\r\n      // For backward compatibility, we follow the rule that render label `A` by the\r\n      // settings on series `X` but render label `C` by the settings on series `Y`.\r\n\r\n      if (!offset) {\r\n        var fullData = mapModel.mainSeries.getData();\r\n        var name_1 = originalData.getName(originalDataIndex);\r\n        var fullIndex_1 = fullData.indexOfName(name_1);\r\n        var itemModel = originalData.getItemModel(originalDataIndex);\r\n        var labelModel = itemModel.getModel('label');\r\n        var regionGroup = fullData.getItemGraphicEl(fullIndex_1); // `getFormattedLabel` needs to use `getData` inside. Here\r\n        // `mapModel.getData()` is shallow cloned from `mainSeries.getData()`.\r\n        // FIXME\r\n        // If this is not the `mainSeries`, the item model (like label formatter)\r\n        // set on original data item will never get. But it has been working\r\n        // like that from the begining, and this scenario is rarely encountered.\r\n        // So it won't be fixed until have to.\r\n\r\n        setLabelStyle(circle, getLabelStatesModels(itemModel), {\r\n          labelFetcher: {\r\n            getFormattedLabel: function (idx, state) {\r\n              return mapModel.getFormattedLabel(fullIndex_1, state);\r\n            }\r\n          }\r\n        });\r\n        circle.disableLabelAnimation = true;\r\n\r\n        if (!labelModel.get('position')) {\r\n          circle.setTextConfig({\r\n            position: 'bottom'\r\n          });\r\n        }\r\n\r\n        regionGroup.onHoverStateChange = function (toState) {\r\n          setStatesFlag(circle, toState);\r\n        };\r\n      }\r\n\r\n      group.add(circle);\r\n    });\r\n  };\r\n\r\n  MapView.type = 'map';\r\n  return MapView;\r\n}(ChartView);\r\n\r\nexport default MapView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport createSeriesDataSimply from '../helper/createSeriesDataSimply';\r\nimport SeriesModel from '../../model/Series';\r\nimport geoSourceManager from '../../coord/geo/geoSourceManager';\r\nimport { makeSeriesEncodeForNameBased } from '../../data/helper/sourceHelper';\r\nimport { createTooltipMarkup } from '../../component/tooltip/tooltipMarkup';\r\nimport { createSymbol } from '../../util/symbol';\r\n\r\nvar MapSeries =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(MapSeries, _super);\r\n\r\n  function MapSeries() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = MapSeries.type; // Only first map series of same mapType will drawMap.\r\n\r\n    _this.needsDrawMap = false; // Group of all map series with same mapType\r\n\r\n    _this.seriesGroup = [];\r\n\r\n    _this.getTooltipPosition = function (dataIndex) {\r\n      if (dataIndex != null) {\r\n        var name_1 = this.getData().getName(dataIndex);\r\n        var geo = this.coordinateSystem;\r\n        var region = geo.getRegion(name_1);\r\n        return region && geo.dataToPoint(region.getCenter());\r\n      }\r\n    };\r\n\r\n    return _this;\r\n  }\r\n\r\n  MapSeries.prototype.getInitialData = function (option) {\r\n    var data = createSeriesDataSimply(this, {\r\n      coordDimensions: ['value'],\r\n      encodeDefaulter: zrUtil.curry(makeSeriesEncodeForNameBased, this)\r\n    });\r\n    var dataNameMap = zrUtil.createHashMap();\r\n    var toAppendNames = [];\r\n\r\n    for (var i = 0, len = data.count(); i < len; i++) {\r\n      var name_2 = data.getName(i);\r\n      dataNameMap.set(name_2, true);\r\n    }\r\n\r\n    var geoSource = geoSourceManager.load(this.getMapType(), this.option.nameMap, this.option.nameProperty);\r\n    zrUtil.each(geoSource.regions, function (region) {\r\n      var name = region.name;\r\n\r\n      if (!dataNameMap.get(name)) {\r\n        toAppendNames.push(name);\r\n      }\r\n    }); // Complete data with missing regions. The consequent processes (like visual\r\n    // map and render) can not be performed without a \"full data\". For example,\r\n    // find `dataIndex` by name.\r\n\r\n    data.appendValues([], toAppendNames);\r\n    return data;\r\n  };\r\n  /**\r\n   * If no host geo model, return null, which means using a\r\n   * inner exclusive geo model.\r\n   */\r\n\r\n\r\n  MapSeries.prototype.getHostGeoModel = function () {\r\n    var geoIndex = this.option.geoIndex;\r\n    return geoIndex != null ? this.ecModel.getComponent('geo', geoIndex) : null;\r\n  };\r\n\r\n  MapSeries.prototype.getMapType = function () {\r\n    return (this.getHostGeoModel() || this).option.map;\r\n  }; // _fillOption(option, mapName) {\r\n  // Shallow clone\r\n  // option = zrUtil.extend({}, option);\r\n  // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\r\n  // return option;\r\n  // }\r\n\r\n\r\n  MapSeries.prototype.getRawValue = function (dataIndex) {\r\n    // Use value stored in data instead because it is calculated from multiple series\r\n    // FIXME Provide all value of multiple series ?\r\n    var data = this.getData();\r\n    return data.get(data.mapDimension('value'), dataIndex);\r\n  };\r\n  /**\r\n   * Get model of region\r\n   */\r\n\r\n\r\n  MapSeries.prototype.getRegionModel = function (regionName) {\r\n    var data = this.getData();\r\n    return data.getItemModel(data.indexOfName(regionName));\r\n  };\r\n  /**\r\n   * Map tooltip formatter\r\n   */\r\n\r\n\r\n  MapSeries.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\r\n    // FIXME orignalData and data is a bit confusing\r\n    var data = this.getData();\r\n    var value = this.getRawValue(dataIndex);\r\n    var name = data.getName(dataIndex);\r\n    var seriesGroup = this.seriesGroup;\r\n    var seriesNames = [];\r\n\r\n    for (var i = 0; i < seriesGroup.length; i++) {\r\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\r\n      var valueDim = data.mapDimension('value');\r\n\r\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\r\n        seriesNames.push(seriesGroup[i].name);\r\n      }\r\n    }\r\n\r\n    return createTooltipMarkup('section', {\r\n      header: seriesNames.join(', '),\r\n      noHeader: !seriesNames.length,\r\n      blocks: [createTooltipMarkup('nameValue', {\r\n        name: name,\r\n        value: value\r\n      })]\r\n    });\r\n  };\r\n\r\n  MapSeries.prototype.setZoom = function (zoom) {\r\n    this.option.zoom = zoom;\r\n  };\r\n\r\n  MapSeries.prototype.setCenter = function (center) {\r\n    this.option.center = center;\r\n  };\r\n\r\n  MapSeries.prototype.getLegendIcon = function (opt) {\r\n    var iconType = opt.icon || 'roundRect';\r\n    var icon = createSymbol(iconType, 0, 0, opt.itemWidth, opt.itemHeight, opt.itemStyle.fill);\r\n    icon.setStyle(opt.itemStyle); // Map do not use itemStyle.borderWidth as border width\r\n\r\n    icon.style.stroke = 'none'; // No rotation because no series visual symbol for map\r\n\r\n    if (iconType.indexOf('empty') > -1) {\r\n      icon.style.stroke = icon.style.fill;\r\n      icon.style.fill = '#fff';\r\n      icon.style.lineWidth = 2;\r\n    }\r\n\r\n    return icon;\r\n  };\r\n\r\n  MapSeries.type = 'series.map';\r\n  MapSeries.dependencies = ['geo'];\r\n  MapSeries.layoutMode = 'box';\r\n  MapSeries.defaultOption = {\r\n    // \u4E00\u7EA7\u5C42\u53E0\r\n    zlevel: 0,\r\n    // \u4E8C\u7EA7\u5C42\u53E0\r\n    z: 2,\r\n    coordinateSystem: 'geo',\r\n    // map should be explicitly specified since ec3.\r\n    map: '',\r\n    // If `geoIndex` is not specified, a exclusive geo will be\r\n    // created. Otherwise use the specified geo component, and\r\n    // `map` and `mapType` are ignored.\r\n    // geoIndex: 0,\r\n    // 'center' | 'left' | 'right' | 'x%' | {number}\r\n    left: 'center',\r\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\r\n    top: 'center',\r\n    // right\r\n    // bottom\r\n    // width:\r\n    // height\r\n    // Aspect is width / height. Inited to be geoJson bbox aspect\r\n    // This parameter is used for scale this aspect\r\n    // Default value:\r\n    // for geoSVG source: 1,\r\n    // for geoJSON source: 0.75.\r\n    aspectScale: null,\r\n    ///// Layout with center and size\r\n    // If you wan't to put map in a fixed size box with right aspect ratio\r\n    // This two properties may more conveninet\r\n    // layoutCenter: [50%, 50%]\r\n    // layoutSize: 100\r\n    showLegendSymbol: true,\r\n    // Define left-top, right-bottom coords to control view\r\n    // For example, [ [180, 90], [-180, -90] ],\r\n    // higher priority than center and zoom\r\n    boundingCoords: null,\r\n    // Default on center of map\r\n    center: null,\r\n    zoom: 1,\r\n    scaleLimit: null,\r\n    selectedMode: true,\r\n    label: {\r\n      show: false,\r\n      color: '#000'\r\n    },\r\n    // scaleLimit: null,\r\n    itemStyle: {\r\n      borderWidth: 0.5,\r\n      borderColor: '#444',\r\n      areaColor: '#eee'\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true,\r\n        color: 'rgb(100,0,0)'\r\n      },\r\n      itemStyle: {\r\n        areaColor: 'rgba(255,215,0,0.8)'\r\n      }\r\n    },\r\n    select: {\r\n      label: {\r\n        show: true,\r\n        color: 'rgb(100,0,0)'\r\n      },\r\n      itemStyle: {\r\n        color: 'rgba(255,215,0,0.8)'\r\n      }\r\n    },\r\n    nameProperty: 'name'\r\n  };\r\n  return MapSeries;\r\n}(SeriesModel);\r\n\r\nexport default MapSeries;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util'; // FIXME \u516C\u7528\uFF1F\r\n\r\nfunction dataStatistics(datas, statisticType) {\r\n  var dataNameMap = {};\r\n  zrUtil.each(datas, function (data) {\r\n    data.each(data.mapDimension('value'), function (value, idx) {\r\n      // Add prefix to avoid conflict with Object.prototype.\r\n      var mapKey = 'ec-' + data.getName(idx);\r\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\r\n\r\n      if (!isNaN(value)) {\r\n        dataNameMap[mapKey].push(value);\r\n      }\r\n    });\r\n  });\r\n  return datas[0].map(datas[0].mapDimension('value'), function (value, idx) {\r\n    var mapKey = 'ec-' + datas[0].getName(idx);\r\n    var sum = 0;\r\n    var min = Infinity;\r\n    var max = -Infinity;\r\n    var len = dataNameMap[mapKey].length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      min = Math.min(min, dataNameMap[mapKey][i]);\r\n      max = Math.max(max, dataNameMap[mapKey][i]);\r\n      sum += dataNameMap[mapKey][i];\r\n    }\r\n\r\n    var result;\r\n\r\n    if (statisticType === 'min') {\r\n      result = min;\r\n    } else if (statisticType === 'max') {\r\n      result = max;\r\n    } else if (statisticType === 'average') {\r\n      result = sum / len;\r\n    } else {\r\n      result = sum;\r\n    }\r\n\r\n    return len === 0 ? NaN : result;\r\n  });\r\n}\r\n\r\nexport default function mapDataStatistic(ecModel) {\r\n  var seriesGroups = {};\r\n  ecModel.eachSeriesByType('map', function (seriesModel) {\r\n    var hostGeoModel = seriesModel.getHostGeoModel();\r\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\r\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\r\n  });\r\n  zrUtil.each(seriesGroups, function (seriesList, key) {\r\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\r\n      return seriesModel.getData();\r\n    }), seriesList[0].get('mapValueCalculation'));\r\n\r\n    for (var i = 0; i < seriesList.length; i++) {\r\n      seriesList[i].originalData = seriesList[i].getData();\r\n    } // FIXME Put where?\r\n\r\n\r\n    for (var i = 0; i < seriesList.length; i++) {\r\n      seriesList[i].seriesGroup = seriesList;\r\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\r\n      seriesList[i].setData(data.cloneShallow());\r\n      seriesList[i].mainSeries = seriesList[0];\r\n    }\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nexport default function mapSymbolLayout(ecModel) {\r\n  var processedMapType = {};\r\n  ecModel.eachSeriesByType('map', function (mapSeries) {\r\n    var mapType = mapSeries.getMapType();\r\n\r\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\r\n      return;\r\n    }\r\n\r\n    var mapSymbolOffsets = {};\r\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\r\n      var geo = subMapSeries.coordinateSystem;\r\n      var data = subMapSeries.originalData;\r\n\r\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\r\n        data.each(data.mapDimension('value'), function (value, idx) {\r\n          var name = data.getName(idx);\r\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\r\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\r\n          // not be drawn. So here must validate if value is NaN.\r\n\r\n          if (!region || isNaN(value)) {\r\n            return;\r\n          }\r\n\r\n          var offset = mapSymbolOffsets[name] || 0;\r\n          var point = geo.dataToPoint(region.getCenter());\r\n          mapSymbolOffsets[name] = offset + 1;\r\n          data.setItemLayout(idx, {\r\n            point: point,\r\n            offset: offset\r\n          });\r\n        });\r\n      }\r\n    }); // Show label of those region not has legendIcon (which is offset 0)\r\n\r\n    var data = mapSeries.getData();\r\n    data.each(function (idx) {\r\n      var name = data.getName(idx);\r\n      var layout = data.getItemLayout(idx) || {};\r\n      layout.showLabel = !mapSymbolOffsets[name];\r\n      data.setItemLayout(idx, layout);\r\n    });\r\n    processedMapType[mapType] = true;\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * Simple view coordinate system\r\n * Mapping given x, y to transformd view x, y\r\n */\r\n\r\nimport * as vector from 'zrender/lib/core/vector';\r\nimport * as matrix from 'zrender/lib/core/matrix';\r\nimport BoundingRect from 'zrender/lib/core/BoundingRect';\r\nimport Transformable from 'zrender/lib/core/Transformable';\r\nvar v2ApplyTransform = vector.applyTransform;\r\n\r\nvar View =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(View, _super);\r\n\r\n  function View(name) {\r\n    var _this = _super.call(this) || this;\r\n\r\n    _this.type = 'view';\r\n    _this.dimensions = ['x', 'y'];\r\n    /**\r\n     * Represents the transform brought by roam/zoom.\r\n     * If `View['_viewRect']` applies roam transform,\r\n     * we can get the final displayed rect.\r\n     */\r\n\r\n    _this._roamTransformable = new Transformable();\r\n    /**\r\n     * Represents the transform from `View['_rect']` to `View['_viewRect']`.\r\n     */\r\n\r\n    _this._rawTransformable = new Transformable();\r\n    _this.name = name;\r\n    return _this;\r\n  }\r\n\r\n  View.prototype.setBoundingRect = function (x, y, width, height) {\r\n    this._rect = new BoundingRect(x, y, width, height);\r\n    return this._rect;\r\n  };\r\n  /**\r\n   * @return {module:zrender/core/BoundingRect}\r\n   */\r\n\r\n\r\n  View.prototype.getBoundingRect = function () {\r\n    return this._rect;\r\n  };\r\n\r\n  View.prototype.setViewRect = function (x, y, width, height) {\r\n    this._transformTo(x, y, width, height);\r\n\r\n    this._viewRect = new BoundingRect(x, y, width, height);\r\n  };\r\n  /**\r\n   * Transformed to particular position and size\r\n   */\r\n\r\n\r\n  View.prototype._transformTo = function (x, y, width, height) {\r\n    var rect = this.getBoundingRect();\r\n    var rawTransform = this._rawTransformable;\r\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\r\n    var rawParent = rawTransform.parent;\r\n    rawTransform.parent = null;\r\n    rawTransform.decomposeTransform();\r\n    rawTransform.parent = rawParent;\r\n\r\n    this._updateTransform();\r\n  };\r\n  /**\r\n   * Set center of view\r\n   */\r\n\r\n\r\n  View.prototype.setCenter = function (centerCoord) {\r\n    if (!centerCoord) {\r\n      return;\r\n    }\r\n\r\n    this._center = centerCoord;\r\n\r\n    this._updateCenterAndZoom();\r\n  };\r\n\r\n  View.prototype.setZoom = function (zoom) {\r\n    zoom = zoom || 1;\r\n    var zoomLimit = this.zoomLimit;\r\n\r\n    if (zoomLimit) {\r\n      if (zoomLimit.max != null) {\r\n        zoom = Math.min(zoomLimit.max, zoom);\r\n      }\r\n\r\n      if (zoomLimit.min != null) {\r\n        zoom = Math.max(zoomLimit.min, zoom);\r\n      }\r\n    }\r\n\r\n    this._zoom = zoom;\r\n\r\n    this._updateCenterAndZoom();\r\n  };\r\n  /**\r\n   * Get default center without roam\r\n   */\r\n\r\n\r\n  View.prototype.getDefaultCenter = function () {\r\n    // Rect before any transform\r\n    var rawRect = this.getBoundingRect();\r\n    var cx = rawRect.x + rawRect.width / 2;\r\n    var cy = rawRect.y + rawRect.height / 2;\r\n    return [cx, cy];\r\n  };\r\n\r\n  View.prototype.getCenter = function () {\r\n    return this._center || this.getDefaultCenter();\r\n  };\r\n\r\n  View.prototype.getZoom = function () {\r\n    return this._zoom || 1;\r\n  };\r\n\r\n  View.prototype.getRoamTransform = function () {\r\n    return this._roamTransformable.getLocalTransform();\r\n  };\r\n  /**\r\n   * Remove roam\r\n   */\r\n\r\n\r\n  View.prototype._updateCenterAndZoom = function () {\r\n    // Must update after view transform updated\r\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\r\n\r\n    var roamTransform = this._roamTransformable;\r\n    var defaultCenter = this.getDefaultCenter();\r\n    var center = this.getCenter();\r\n    var zoom = this.getZoom();\r\n    center = vector.applyTransform([], center, rawTransformMatrix);\r\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\r\n    roamTransform.originX = center[0];\r\n    roamTransform.originY = center[1];\r\n    roamTransform.x = defaultCenter[0] - center[0];\r\n    roamTransform.y = defaultCenter[1] - center[1];\r\n    roamTransform.scaleX = roamTransform.scaleY = zoom;\r\n\r\n    this._updateTransform();\r\n  };\r\n  /**\r\n   * Update transform props on `this` based on the current\r\n   * `this._roamTransformable` and `this._rawTransformable`.\r\n   */\r\n\r\n\r\n  View.prototype._updateTransform = function () {\r\n    var roamTransformable = this._roamTransformable;\r\n    var rawTransformable = this._rawTransformable;\r\n    rawTransformable.parent = roamTransformable;\r\n    roamTransformable.updateTransform();\r\n    rawTransformable.updateTransform();\r\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\r\n    this._rawTransform = rawTransformable.getLocalTransform();\r\n    this.invTransform = this.invTransform || [];\r\n    matrix.invert(this.invTransform, this.transform);\r\n    this.decomposeTransform();\r\n  };\r\n\r\n  View.prototype.getTransformInfo = function () {\r\n    var rawTransformable = this._rawTransformable;\r\n    var roamTransformable = this._roamTransformable; // Becuase roamTransformabel has `originX/originY` modified,\r\n    // but the caller of `getTransformInfo` can not handle `originX/originY`,\r\n    // so need to recalcualte them.\r\n\r\n    var dummyTransformable = new Transformable();\r\n    dummyTransformable.transform = roamTransformable.transform;\r\n    dummyTransformable.decomposeTransform();\r\n    return {\r\n      roam: {\r\n        x: dummyTransformable.x,\r\n        y: dummyTransformable.y,\r\n        scaleX: dummyTransformable.scaleX,\r\n        scaleY: dummyTransformable.scaleY\r\n      },\r\n      raw: {\r\n        x: rawTransformable.x,\r\n        y: rawTransformable.y,\r\n        scaleX: rawTransformable.scaleX,\r\n        scaleY: rawTransformable.scaleY\r\n      }\r\n    };\r\n  };\r\n\r\n  View.prototype.getViewRect = function () {\r\n    return this._viewRect;\r\n  };\r\n  /**\r\n   * Get view rect after roam transform\r\n   */\r\n\r\n\r\n  View.prototype.getViewRectAfterRoam = function () {\r\n    var rect = this.getBoundingRect().clone();\r\n    rect.applyTransform(this.transform);\r\n    return rect;\r\n  };\r\n  /**\r\n   * Convert a single (lon, lat) data item to (x, y) point.\r\n   */\r\n\r\n\r\n  View.prototype.dataToPoint = function (data, noRoam, out) {\r\n    var transform = noRoam ? this._rawTransform : this.transform;\r\n    out = out || [];\r\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\r\n  };\r\n  /**\r\n   * Convert a (x, y) point to (lon, lat) data\r\n   */\r\n\r\n\r\n  View.prototype.pointToData = function (point) {\r\n    var invTransform = this.invTransform;\r\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\r\n  };\r\n\r\n  View.prototype.convertToPixel = function (ecModel, finder, value) {\r\n    var coordSys = getCoordSys(finder);\r\n    return coordSys === this ? coordSys.dataToPoint(value) : null;\r\n  };\r\n\r\n  View.prototype.convertFromPixel = function (ecModel, finder, pixel) {\r\n    var coordSys = getCoordSys(finder);\r\n    return coordSys === this ? coordSys.pointToData(pixel) : null;\r\n  };\r\n  /**\r\n   * @implements\r\n   */\r\n\r\n\r\n  View.prototype.containPoint = function (point) {\r\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\r\n  };\r\n\r\n  View.dimensions = ['x', 'y'];\r\n  return View;\r\n}(Transformable);\r\n\r\nfunction getCoordSys(finder) {\r\n  var seriesModel = finder.seriesModel;\r\n  return seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\r\n}\r\n\r\nexport default View;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport BoundingRect from 'zrender/lib/core/BoundingRect';\r\nimport View from '../View';\r\nimport geoSourceManager from './geoSourceManager';\r\nimport { SINGLE_REFERRING } from '../../util/model';\r\nvar GEO_DEFAULT_PARAMS = {\r\n  'geoJSON': {\r\n    aspectScale: 0.75,\r\n    invertLongitute: true\r\n  },\r\n  'geoSVG': {\r\n    aspectScale: 1,\r\n    invertLongitute: false\r\n  }\r\n};\r\nexport var geo2DDimensions = ['lng', 'lat'];\r\n\r\nvar Geo =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(Geo, _super);\r\n\r\n  function Geo(name, map, opt) {\r\n    var _this = _super.call(this, name) || this;\r\n\r\n    _this.dimensions = geo2DDimensions;\r\n    _this.type = 'geo'; // Only store specified name coord via `addGeoCoord`.\r\n\r\n    _this._nameCoordMap = zrUtil.createHashMap();\r\n    _this.map = map;\r\n    var source = geoSourceManager.load(map, opt.nameMap, opt.nameProperty);\r\n    var resource = geoSourceManager.getGeoResource(map);\r\n    _this.resourceType = resource ? resource.type : null;\r\n    var defaultParmas = GEO_DEFAULT_PARAMS[resource.type];\r\n    _this._regionsMap = source.regionsMap;\r\n    _this._invertLongitute = defaultParmas.invertLongitute;\r\n    _this.regions = source.regions;\r\n    _this.aspectScale = zrUtil.retrieve2(opt.aspectScale, defaultParmas.aspectScale);\r\n    var boundingRect = source.boundingRect;\r\n\r\n    _this.setBoundingRect(boundingRect.x, boundingRect.y, boundingRect.width, boundingRect.height);\r\n\r\n    return _this;\r\n  }\r\n  /**\r\n   * Whether contain the given [lng, lat] coord.\r\n   */\r\n  // Never used yet.\r\n  // containCoord(coord: number[]) {\r\n  //     const regions = this.regions;\r\n  //     for (let i = 0; i < regions.length; i++) {\r\n  //         const region = regions[i];\r\n  //         if (region.type === 'geoJSON' && (region as GeoJSONRegion).contain(coord)) {\r\n  //             return true;\r\n  //         }\r\n  //     }\r\n  //     return false;\r\n  // }\r\n\r\n\r\n  Geo.prototype._transformTo = function (x, y, width, height) {\r\n    var rect = this.getBoundingRect();\r\n    var invertLongitute = this._invertLongitute;\r\n    rect = rect.clone();\r\n\r\n    if (invertLongitute) {\r\n      // Longitute is inverted\r\n      rect.y = -rect.y - rect.height;\r\n    }\r\n\r\n    var rawTransformable = this._rawTransformable;\r\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\r\n    var rawParent = rawTransformable.parent;\r\n    rawTransformable.parent = null;\r\n    rawTransformable.decomposeTransform();\r\n    rawTransformable.parent = rawParent;\r\n\r\n    if (invertLongitute) {\r\n      rawTransformable.scaleY = -rawTransformable.scaleY;\r\n    }\r\n\r\n    this._updateTransform();\r\n  };\r\n\r\n  Geo.prototype.getRegion = function (name) {\r\n    return this._regionsMap.get(name);\r\n  };\r\n\r\n  Geo.prototype.getRegionByCoord = function (coord) {\r\n    var regions = this.regions;\r\n\r\n    for (var i = 0; i < regions.length; i++) {\r\n      var region = regions[i];\r\n\r\n      if (region.type === 'geoJSON' && region.contain(coord)) {\r\n        return regions[i];\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * Add geoCoord for indexing by name\r\n   */\r\n\r\n\r\n  Geo.prototype.addGeoCoord = function (name, geoCoord) {\r\n    this._nameCoordMap.set(name, geoCoord);\r\n  };\r\n  /**\r\n   * Get geoCoord by name\r\n   */\r\n\r\n\r\n  Geo.prototype.getGeoCoord = function (name) {\r\n    var region = this._regionsMap.get(name); // calcualte center only on demand.\r\n\r\n\r\n    return this._nameCoordMap.get(name) || region && region.getCenter();\r\n  };\r\n\r\n  Geo.prototype.dataToPoint = function (data, noRoam, out) {\r\n    if (typeof data === 'string') {\r\n      // Map area name to geoCoord\r\n      data = this.getGeoCoord(data);\r\n    }\r\n\r\n    if (data) {\r\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\r\n    }\r\n  };\r\n\r\n  Geo.prototype.convertToPixel = function (ecModel, finder, value) {\r\n    var coordSys = getCoordSys(finder);\r\n    return coordSys === this ? coordSys.dataToPoint(value) : null;\r\n  };\r\n\r\n  Geo.prototype.convertFromPixel = function (ecModel, finder, pixel) {\r\n    var coordSys = getCoordSys(finder);\r\n    return coordSys === this ? coordSys.pointToData(pixel) : null;\r\n  };\r\n\r\n  return Geo;\r\n}(View);\r\n\r\n;\r\nzrUtil.mixin(Geo, View);\r\n\r\nfunction getCoordSys(finder) {\r\n  var geoModel = finder.geoModel;\r\n  var seriesModel = finder.seriesModel;\r\n  return geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map series.\r\n  || (seriesModel.getReferringComponents('geo', SINGLE_REFERRING).models[0] || {}).coordinateSystem : null;\r\n}\r\n\r\nexport default Geo;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport Geo, { geo2DDimensions } from './Geo';\r\nimport * as layout from '../../util/layout';\r\nimport * as numberUtil from '../../util/number';\r\nimport geoSourceManager from './geoSourceManager';\r\n/**\r\n * Resize method bound to the geo\r\n */\r\n\r\nfunction resizeGeo(geoModel, api) {\r\n  var boundingCoords = geoModel.get('boundingCoords');\r\n\r\n  if (boundingCoords != null) {\r\n    var leftTop = boundingCoords[0];\r\n    var rightBottom = boundingCoords[1];\r\n\r\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.error('Invalid boundingCoords');\r\n      }\r\n    } else {\r\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\r\n    }\r\n  }\r\n\r\n  var rect = this.getBoundingRect();\r\n  var centerOption = geoModel.get('layoutCenter');\r\n  var sizeOption = geoModel.get('layoutSize');\r\n  var viewWidth = api.getWidth();\r\n  var viewHeight = api.getHeight();\r\n  var aspect = rect.width / rect.height * this.aspectScale;\r\n  var useCenterAndSize = false;\r\n  var center;\r\n  var size;\r\n\r\n  if (centerOption && sizeOption) {\r\n    center = [numberUtil.parsePercent(centerOption[0], viewWidth), numberUtil.parsePercent(centerOption[1], viewHeight)];\r\n    size = numberUtil.parsePercent(sizeOption, Math.min(viewWidth, viewHeight));\r\n\r\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\r\n      useCenterAndSize = true;\r\n    } else {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.warn('Given layoutCenter or layoutSize data are invalid. Use left/top/width/height instead.');\r\n      }\r\n    }\r\n  }\r\n\r\n  var viewRect;\r\n\r\n  if (useCenterAndSize) {\r\n    viewRect = {};\r\n\r\n    if (aspect > 1) {\r\n      // Width is same with size\r\n      viewRect.width = size;\r\n      viewRect.height = size / aspect;\r\n    } else {\r\n      viewRect.height = size;\r\n      viewRect.width = size * aspect;\r\n    }\r\n\r\n    viewRect.y = center[1] - viewRect.height / 2;\r\n    viewRect.x = center[0] - viewRect.width / 2;\r\n  } else {\r\n    // Use left/top/width/height\r\n    var boxLayoutOption = geoModel.getBoxLayoutParams();\r\n    boxLayoutOption.aspect = aspect;\r\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\r\n      width: viewWidth,\r\n      height: viewHeight\r\n    });\r\n  }\r\n\r\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\r\n  this.setCenter(geoModel.get('center'));\r\n  this.setZoom(geoModel.get('zoom'));\r\n} // Back compat for ECharts2, where the coord map is set on map series:\r\n// {type: 'map', geoCoord: {'cityA': [116.46,39.92], 'cityA': [119.12,24.61]}},\r\n\r\n\r\nfunction setGeoCoords(geo, model) {\r\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\r\n    geo.addGeoCoord(name, geoCoord);\r\n  });\r\n}\r\n\r\nvar GeoCreator =\r\n/** @class */\r\nfunction () {\r\n  function GeoCreator() {\r\n    // For deciding which dimensions to use when creating list data\r\n    this.dimensions = geo2DDimensions;\r\n  }\r\n\r\n  GeoCreator.prototype.create = function (ecModel, api) {\r\n    var geoList = []; // FIXME Create each time may be slow\r\n\r\n    ecModel.eachComponent('geo', function (geoModel, idx) {\r\n      var name = geoModel.get('map');\r\n      var geo = new Geo(name + idx, name, {\r\n        nameMap: geoModel.get('nameMap'),\r\n        nameProperty: geoModel.get('nameProperty'),\r\n        aspectScale: geoModel.get('aspectScale')\r\n      });\r\n      geo.zoomLimit = geoModel.get('scaleLimit');\r\n      geoList.push(geo); // setGeoCoords(geo, geoModel);\r\n\r\n      geoModel.coordinateSystem = geo;\r\n      geo.model = geoModel; // Inject resize method\r\n\r\n      geo.resize = resizeGeo;\r\n      geo.resize(geoModel, api);\r\n    });\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      var coordSys = seriesModel.get('coordinateSystem');\r\n\r\n      if (coordSys === 'geo') {\r\n        var geoIndex = seriesModel.get('geoIndex') || 0;\r\n        seriesModel.coordinateSystem = geoList[geoIndex];\r\n      }\r\n    }); // If has map series\r\n\r\n    var mapModelGroupBySeries = {};\r\n    ecModel.eachSeriesByType('map', function (seriesModel) {\r\n      if (!seriesModel.getHostGeoModel()) {\r\n        var mapType = seriesModel.getMapType();\r\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\r\n        mapModelGroupBySeries[mapType].push(seriesModel);\r\n      }\r\n    });\r\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\r\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\r\n        return singleMapSeries.get('nameMap');\r\n      });\r\n      var geo = new Geo(mapType, mapType, {\r\n        nameMap: zrUtil.mergeAll(nameMapList),\r\n        nameProperty: mapSeries[0].get('nameProperty'),\r\n        aspectScale: mapSeries[0].get('aspectScale')\r\n      });\r\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\r\n        return singleMapSeries.get('scaleLimit');\r\n      }));\r\n      geoList.push(geo); // Inject resize method\r\n\r\n      geo.resize = resizeGeo;\r\n      geo.resize(mapSeries[0], api);\r\n      zrUtil.each(mapSeries, function (singleMapSeries) {\r\n        singleMapSeries.coordinateSystem = geo;\r\n        setGeoCoords(geo, singleMapSeries);\r\n      });\r\n    });\r\n    return geoList;\r\n  };\r\n  /**\r\n   * Fill given regions array\r\n   */\r\n\r\n\r\n  GeoCreator.prototype.getFilledRegions = function (originRegionArr, mapName, nameMap, nameProperty) {\r\n    // Not use the original\r\n    var regionsArr = (originRegionArr || []).slice();\r\n    var dataNameMap = zrUtil.createHashMap();\r\n\r\n    for (var i = 0; i < regionsArr.length; i++) {\r\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\r\n    }\r\n\r\n    var source = geoSourceManager.load(mapName, nameMap, nameProperty);\r\n    zrUtil.each(source.regions, function (region) {\r\n      var name = region.name;\r\n      !dataNameMap.get(name) && regionsArr.push({\r\n        name: name\r\n      });\r\n    });\r\n    return regionsArr;\r\n  };\r\n\r\n  return GeoCreator;\r\n}();\r\n\r\nvar geoCreator = new GeoCreator();\r\nexport default geoCreator;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as modelUtil from '../../util/model';\r\nimport ComponentModel from '../../model/Component';\r\nimport Model from '../../model/Model';\r\nimport geoCreator from './geoCreator';\r\nimport geoSourceManager from './geoSourceManager';\r\n;\r\n\r\nvar GeoModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(GeoModel, _super);\r\n\r\n  function GeoModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = GeoModel.type;\r\n    return _this;\r\n  }\r\n\r\n  GeoModel.prototype.init = function (option, parentModel, ecModel) {\r\n    var source = geoSourceManager.getGeoResource(option.map);\r\n\r\n    if (source && source.type === 'geoJSON') {\r\n      var itemStyle = option.itemStyle = option.itemStyle || {};\r\n\r\n      if (!('color' in itemStyle)) {\r\n        itemStyle.color = '#eee';\r\n      }\r\n    }\r\n\r\n    this.mergeDefaultAndTheme(option, ecModel); // Default label emphasis `show`\r\n\r\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\r\n  };\r\n\r\n  GeoModel.prototype.optionUpdated = function () {\r\n    var _this = this;\r\n\r\n    var option = this.option;\r\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap, option.nameProperty);\r\n    var selectedMap = {};\r\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\r\n      var regionName = regionOpt.name;\r\n\r\n      if (regionName) {\r\n        optionModelMap.set(regionName, new Model(regionOpt, _this, _this.ecModel));\r\n\r\n        if (regionOpt.selected) {\r\n          selectedMap[regionName] = true;\r\n        }\r\n      }\r\n\r\n      return optionModelMap;\r\n    }, zrUtil.createHashMap());\r\n\r\n    if (!option.selectedMap) {\r\n      option.selectedMap = selectedMap;\r\n    }\r\n  };\r\n  /**\r\n   * Get model of region.\r\n   */\r\n\r\n\r\n  GeoModel.prototype.getRegionModel = function (name) {\r\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\r\n  };\r\n  /**\r\n   * Format label\r\n   * @param name Region name\r\n   */\r\n\r\n\r\n  GeoModel.prototype.getFormattedLabel = function (name, status) {\r\n    var regionModel = this.getRegionModel(name);\r\n    var formatter = status === 'normal' ? regionModel.get(['label', 'formatter']) : regionModel.get(['emphasis', 'label', 'formatter']);\r\n    var params = {\r\n      name: name\r\n    };\r\n\r\n    if (typeof formatter === 'function') {\r\n      params.status = status;\r\n      return formatter(params);\r\n    } else if (typeof formatter === 'string') {\r\n      return formatter.replace('{a}', name != null ? name : '');\r\n    }\r\n  };\r\n\r\n  GeoModel.prototype.setZoom = function (zoom) {\r\n    this.option.zoom = zoom;\r\n  };\r\n\r\n  GeoModel.prototype.setCenter = function (center) {\r\n    this.option.center = center;\r\n  }; // PENGING If selectedMode is null ?\r\n\r\n\r\n  GeoModel.prototype.select = function (name) {\r\n    var option = this.option;\r\n    var selectedMode = option.selectedMode;\r\n\r\n    if (!selectedMode) {\r\n      return;\r\n    }\r\n\r\n    if (selectedMode !== 'multiple') {\r\n      option.selectedMap = null;\r\n    }\r\n\r\n    var selectedMap = option.selectedMap || (option.selectedMap = {});\r\n    selectedMap[name] = true;\r\n  };\r\n\r\n  GeoModel.prototype.unSelect = function (name) {\r\n    var selectedMap = this.option.selectedMap;\r\n\r\n    if (selectedMap) {\r\n      selectedMap[name] = false;\r\n    }\r\n  };\r\n\r\n  GeoModel.prototype.toggleSelected = function (name) {\r\n    this[this.isSelected(name) ? 'unSelect' : 'select'](name);\r\n  };\r\n\r\n  GeoModel.prototype.isSelected = function (name) {\r\n    var selectedMap = this.option.selectedMap;\r\n    return !!(selectedMap && selectedMap[name]);\r\n  };\r\n\r\n  GeoModel.type = 'geo';\r\n  GeoModel.layoutMode = 'box';\r\n  GeoModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 0,\r\n    show: true,\r\n    left: 'center',\r\n    top: 'center',\r\n    // Default value:\r\n    // for geoSVG source: 1,\r\n    // for geoJSON source: 0.75.\r\n    aspectScale: null,\r\n    ///// Layout with center and size\r\n    // If you wan't to put map in a fixed size box with right aspect ratio\r\n    // This two properties may more conveninet\r\n    // layoutCenter: [50%, 50%]\r\n    // layoutSize: 100\r\n    silent: false,\r\n    // Map type\r\n    map: '',\r\n    // Define left-top, right-bottom coords to control view\r\n    // For example, [ [180, 90], [-180, -90] ]\r\n    boundingCoords: null,\r\n    // Default on center of map\r\n    center: null,\r\n    zoom: 1,\r\n    scaleLimit: null,\r\n    // selectedMode: false\r\n    label: {\r\n      show: false,\r\n      color: '#000'\r\n    },\r\n    itemStyle: {\r\n      borderWidth: 0.5,\r\n      borderColor: '#444' // Default color:\r\n      // + geoJSON: #eee\r\n      // + geoSVG: null (use SVG original `fill`)\r\n      // color: '#eee'\r\n\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true,\r\n        color: 'rgb(100,0,0)'\r\n      },\r\n      itemStyle: {\r\n        color: 'rgba(255,215,0,0.8)'\r\n      }\r\n    },\r\n    select: {\r\n      label: {\r\n        show: true,\r\n        color: 'rgb(100,0,0)'\r\n      },\r\n      itemStyle: {\r\n        color: 'rgba(255,215,0,0.8)'\r\n      }\r\n    },\r\n    regions: [] // tooltip: {\r\n    //     show: false\r\n    // }\r\n\r\n  };\r\n  return GeoModel;\r\n}(ComponentModel);\r\n\r\nexport default GeoModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nexport function updateCenterAndZoom(view, payload, zoomLimit) {\r\n  var previousZoom = view.getZoom();\r\n  var center = view.getCenter();\r\n  var zoom = payload.zoom;\r\n  var point = view.dataToPoint(center);\r\n\r\n  if (payload.dx != null && payload.dy != null) {\r\n    point[0] -= payload.dx;\r\n    point[1] -= payload.dy;\r\n    view.setCenter(view.pointToData(point));\r\n  }\r\n\r\n  if (zoom != null) {\r\n    if (zoomLimit) {\r\n      var zoomMin = zoomLimit.min || 0;\r\n      var zoomMax = zoomLimit.max || Infinity;\r\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\r\n    } // Zoom on given point(originX, originY)\r\n\r\n\r\n    view.scaleX *= zoom;\r\n    view.scaleY *= zoom;\r\n    var fixX = (payload.originX - view.x) * (zoom - 1);\r\n    var fixY = (payload.originY - view.y) * (zoom - 1);\r\n    view.x -= fixX;\r\n    view.y -= fixY;\r\n    view.updateTransform(); // Get the new center\r\n\r\n    view.setCenter(view.pointToData(point));\r\n    view.setZoom(zoom * previousZoom);\r\n  }\r\n\r\n  return {\r\n    center: view.getCenter(),\r\n    zoom: view.getZoom()\r\n  };\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport MapDraw from '../helper/MapDraw';\r\nimport ComponentView from '../../view/Component';\r\nimport { getECData } from '../../util/innerStore';\r\nimport { findEventDispatcher } from '../../util/event';\r\n\r\nvar GeoView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(GeoView, _super);\r\n\r\n  function GeoView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = GeoView.type;\r\n    _this.focusBlurEnabled = true;\r\n    return _this;\r\n  }\r\n\r\n  GeoView.prototype.init = function (ecModel, api) {\r\n    this._api = api;\r\n  };\r\n\r\n  GeoView.prototype.render = function (geoModel, ecModel, api, payload) {\r\n    this._model = geoModel;\r\n\r\n    if (!geoModel.get('show')) {\r\n      this._mapDraw && this._mapDraw.remove();\r\n      this._mapDraw = null;\r\n      return;\r\n    }\r\n\r\n    if (!this._mapDraw) {\r\n      this._mapDraw = new MapDraw(api);\r\n    }\r\n\r\n    var mapDraw = this._mapDraw;\r\n    mapDraw.draw(geoModel, ecModel, api, this, payload);\r\n    mapDraw.group.on('click', this._handleRegionClick, this);\r\n    mapDraw.group.silent = geoModel.get('silent');\r\n    this.group.add(mapDraw.group);\r\n    this.updateSelectStatus(geoModel, ecModel, api);\r\n  };\r\n\r\n  GeoView.prototype._handleRegionClick = function (e) {\r\n    var eventData;\r\n    findEventDispatcher(e.target, function (current) {\r\n      return (eventData = getECData(current).eventData) != null;\r\n    }, true);\r\n\r\n    if (eventData) {\r\n      this._api.dispatchAction({\r\n        type: 'geoToggleSelect',\r\n        geoId: this._model.id,\r\n        name: eventData.name\r\n      });\r\n    }\r\n  };\r\n\r\n  GeoView.prototype.updateSelectStatus = function (model, ecModel, api) {\r\n    var _this = this;\r\n\r\n    this._mapDraw.group.traverse(function (node) {\r\n      var eventData = getECData(node).eventData;\r\n\r\n      if (eventData) {\r\n        _this._model.isSelected(eventData.name) ? api.enterSelect(node) : api.leaveSelect(node); // No need to traverse children.\r\n\r\n        return true;\r\n      }\r\n    });\r\n  };\r\n\r\n  GeoView.prototype.findHighDownDispatchers = function (name) {\r\n    return this._mapDraw && this._mapDraw.findHighDownDispatchers(name, this._model);\r\n  };\r\n\r\n  GeoView.prototype.dispose = function () {\r\n    this._mapDraw && this._mapDraw.remove();\r\n  };\r\n\r\n  GeoView.type = 'geo';\r\n  return GeoView;\r\n}(ComponentView);\r\n\r\nexport default GeoView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport GeoModel from '../../coord/geo/GeoModel';\r\nimport geoCreator from '../../coord/geo/geoCreator';\r\nimport { each } from 'zrender/lib/core/util';\r\nimport { updateCenterAndZoom } from '../../action/roamHelper';\r\nimport GeoView from './GeoView';\r\nexport function install(registers) {\r\n  registers.registerCoordinateSystem('geo', geoCreator);\r\n  registers.registerComponentModel(GeoModel);\r\n  registers.registerComponentView(GeoView);\r\n\r\n  function makeAction(method, actionInfo) {\r\n    actionInfo.update = 'geo:updateSelectStatus';\r\n    registers.registerAction(actionInfo, function (payload, ecModel) {\r\n      var selected = {};\r\n      var allSelected = [];\r\n      ecModel.eachComponent({\r\n        mainType: 'geo',\r\n        query: payload\r\n      }, function (geoModel) {\r\n        geoModel[method](payload.name);\r\n        var geo = geoModel.coordinateSystem;\r\n        each(geo.regions, function (region) {\r\n          selected[region.name] = geoModel.isSelected(region.name) || false;\r\n        }); // Notice: there might be duplicated name in different regions.\r\n\r\n        var names = [];\r\n        each(selected, function (v, name) {\r\n          selected[name] && names.push(name);\r\n        });\r\n        allSelected.push({\r\n          geoIndex: geoModel.componentIndex,\r\n          // Use singular, the same naming convention as the event `selectchanged`.\r\n          name: names\r\n        });\r\n      });\r\n      return {\r\n        selected: selected,\r\n        allSelected: allSelected,\r\n        name: payload.name\r\n      };\r\n    });\r\n  }\r\n\r\n  makeAction('toggleSelected', {\r\n    type: 'geoToggleSelect',\r\n    event: 'geoselectchanged'\r\n  });\r\n  makeAction('select', {\r\n    type: 'geoSelect',\r\n    event: 'geoselected'\r\n  });\r\n  makeAction('unSelect', {\r\n    type: 'geoUnSelect',\r\n    event: 'geounselected'\r\n  });\r\n  /**\r\n   * @payload\r\n   * @property {string} [componentType=series]\r\n   * @property {number} [dx]\r\n   * @property {number} [dy]\r\n   * @property {number} [zoom]\r\n   * @property {number} [originX]\r\n   * @property {number} [originY]\r\n   */\r\n\r\n  registers.registerAction({\r\n    type: 'geoRoam',\r\n    event: 'geoRoam',\r\n    update: 'updateTransform'\r\n  }, function (payload, ecModel) {\r\n    var componentType = payload.componentType || 'series';\r\n    ecModel.eachComponent({\r\n      mainType: componentType,\r\n      query: payload\r\n    }, function (componentModel) {\r\n      var geo = componentModel.coordinateSystem;\r\n\r\n      if (geo.type !== 'geo') {\r\n        return;\r\n      }\r\n\r\n      var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\r\n      componentModel.setCenter && componentModel.setCenter(res.center);\r\n      componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\r\n      // So the center and zoom must be in sync. Include the series not selected by legend\r\n\r\n      if (componentType === 'series') {\r\n        each(componentModel.seriesGroup, function (seriesModel) {\r\n          seriesModel.setCenter(res.center);\r\n          seriesModel.setZoom(res.zoom);\r\n        });\r\n      }\r\n    });\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { use } from '../../extension';\r\nimport MapView from './MapView';\r\nimport MapSeries from './MapSeries';\r\nimport mapDataStatistic from './mapDataStatistic';\r\nimport mapSymbolLayout from './mapSymbolLayout';\r\nimport { createLegacyDataSelectAction } from '../../legacy/dataSelectAction';\r\nimport { install as installGeo } from '../../component/geo/install';\r\nexport function install(registers) {\r\n  use(installGeo);\r\n  registers.registerChartView(MapView);\r\n  registers.registerSeriesModel(MapSeries);\r\n  registers.registerLayout(mapSymbolLayout);\r\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\r\n  createLegacyDataSelectAction('map', registers.registerAction);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* A third-party license is embeded for some of the code in this file:\r\n* The tree layoutHelper implementation was originally copied from\r\n* \"d3.js\"(https://github.com/d3/d3-hierarchy) with\r\n* some modifications made for this project.\r\n* (see more details in the comment of the specific method below.)\r\n* The use of the source code of this file is also subject to the terms\r\n* and consitions of the licence of \"d3.js\" (BSD-3Clause, see\r\n* </licenses/LICENSE-d3>).\r\n*/\r\n\r\n/**\r\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\r\n *       the tree.\r\n */\r\nimport * as layout from '../../util/layout';\r\n/**\r\n * Initialize all computational message for following algorithm.\r\n */\r\n\r\nexport function init(inRoot) {\r\n  var root = inRoot;\r\n  root.hierNode = {\r\n    defaultAncestor: null,\r\n    ancestor: root,\r\n    prelim: 0,\r\n    modifier: 0,\r\n    change: 0,\r\n    shift: 0,\r\n    i: 0,\r\n    thread: null\r\n  };\r\n  var nodes = [root];\r\n  var node;\r\n  var children;\r\n\r\n  while (node = nodes.pop()) {\r\n    // jshint ignore:line\r\n    children = node.children;\r\n\r\n    if (node.isExpand && children.length) {\r\n      var n = children.length;\r\n\r\n      for (var i = n - 1; i >= 0; i--) {\r\n        var child = children[i];\r\n        child.hierNode = {\r\n          defaultAncestor: null,\r\n          ancestor: child,\r\n          prelim: 0,\r\n          modifier: 0,\r\n          change: 0,\r\n          shift: 0,\r\n          i: i,\r\n          thread: null\r\n        };\r\n        nodes.push(child);\r\n      }\r\n    }\r\n  }\r\n}\r\n/**\r\n * The implementation of this function was originally copied from \"d3.js\"\r\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\r\n * with some modifications made for this program.\r\n * See the license statement at the head of this file.\r\n *\r\n * Computes a preliminary x coordinate for node. Before that, this function is\r\n * applied recursively to the children of node, as well as the function\r\n * apportion(). After spacing out the children by calling executeShifts(), the\r\n * node is placed to the midpoint of its outermost children.\r\n */\r\n\r\nexport function firstWalk(node, separation) {\r\n  var children = node.isExpand ? node.children : [];\r\n  var siblings = node.parentNode.children;\r\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\r\n\r\n  if (children.length) {\r\n    executeShifts(node);\r\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\r\n\r\n    if (subtreeW) {\r\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\r\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\r\n    } else {\r\n      node.hierNode.prelim = midPoint;\r\n    }\r\n  } else if (subtreeW) {\r\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\r\n  }\r\n\r\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\r\n}\r\n/**\r\n * The implementation of this function was originally copied from \"d3.js\"\r\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\r\n * with some modifications made for this program.\r\n * See the license statement at the head of this file.\r\n *\r\n * Computes all real x-coordinates by summing up the modifiers recursively.\r\n */\r\n\r\nexport function secondWalk(node) {\r\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\r\n  node.setLayout({\r\n    x: nodeX\r\n  }, true);\r\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\r\n}\r\nexport function separation(cb) {\r\n  return arguments.length ? cb : defaultSeparation;\r\n}\r\n/**\r\n * Transform the common coordinate to radial coordinate.\r\n */\r\n\r\nexport function radialCoordinate(rad, r) {\r\n  rad -= Math.PI / 2;\r\n  return {\r\n    x: r * Math.cos(rad),\r\n    y: r * Math.sin(rad)\r\n  };\r\n}\r\n/**\r\n * Get the layout position of the whole view.\r\n */\r\n\r\nexport function getViewRect(seriesModel, api) {\r\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\r\n    width: api.getWidth(),\r\n    height: api.getHeight()\r\n  });\r\n}\r\n/**\r\n * All other shifts, applied to the smaller subtrees between w- and w+, are\r\n * performed by this function.\r\n *\r\n * The implementation of this function was originally copied from \"d3.js\"\r\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\r\n * with some modifications made for this program.\r\n * See the license statement at the head of this file.\r\n */\r\n\r\nfunction executeShifts(node) {\r\n  var children = node.children;\r\n  var n = children.length;\r\n  var shift = 0;\r\n  var change = 0;\r\n\r\n  while (--n >= 0) {\r\n    var child = children[n];\r\n    child.hierNode.prelim += shift;\r\n    child.hierNode.modifier += shift;\r\n    change += child.hierNode.change;\r\n    shift += child.hierNode.shift + change;\r\n  }\r\n}\r\n/**\r\n * The implementation of this function was originally copied from \"d3.js\"\r\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\r\n * with some modifications made for this program.\r\n * See the license statement at the head of this file.\r\n *\r\n * The core of the algorithm. Here, a new subtree is combined with the\r\n * previous subtrees. Threads are used to traverse the inside and outside\r\n * contours of the left and right subtree up to the highest common level.\r\n * Whenever two nodes of the inside contours conflict, we compute the left\r\n * one of the greatest uncommon ancestors using the function nextAncestor()\r\n * and call moveSubtree() to shift the subtree and prepare the shifts of\r\n * smaller subtrees. Finally, we add a new thread (if necessary).\r\n */\r\n\r\n\r\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\r\n  if (subtreeW) {\r\n    var nodeOutRight = subtreeV;\r\n    var nodeInRight = subtreeV;\r\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\r\n    var nodeInLeft = subtreeW;\r\n    var sumOutRight = nodeOutRight.hierNode.modifier;\r\n    var sumInRight = nodeInRight.hierNode.modifier;\r\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\r\n    var sumInLeft = nodeInLeft.hierNode.modifier;\r\n\r\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\r\n      nodeOutRight = nextRight(nodeOutRight);\r\n      nodeOutLeft = nextLeft(nodeOutLeft);\r\n      nodeOutRight.hierNode.ancestor = subtreeV;\r\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\r\n\r\n      if (shift > 0) {\r\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\r\n        sumInRight += shift;\r\n        sumOutRight += shift;\r\n      }\r\n\r\n      sumInLeft += nodeInLeft.hierNode.modifier;\r\n      sumInRight += nodeInRight.hierNode.modifier;\r\n      sumOutRight += nodeOutRight.hierNode.modifier;\r\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\r\n    }\r\n\r\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\r\n      nodeOutRight.hierNode.thread = nodeInLeft;\r\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\r\n    }\r\n\r\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\r\n      nodeOutLeft.hierNode.thread = nodeInRight;\r\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\r\n      ancestor = subtreeV;\r\n    }\r\n  }\r\n\r\n  return ancestor;\r\n}\r\n/**\r\n * This function is used to traverse the right contour of a subtree.\r\n * It returns the rightmost child of node or the thread of node. The function\r\n * returns null if and only if node is on the highest depth of its subtree.\r\n */\r\n\r\n\r\nfunction nextRight(node) {\r\n  var children = node.children;\r\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\r\n}\r\n/**\r\n * This function is used to traverse the left contour of a subtree (or a subforest).\r\n * It returns the leftmost child of node or the thread of node. The function\r\n * returns null if and only if node is on the highest depth of its subtree.\r\n */\r\n\r\n\r\nfunction nextLeft(node) {\r\n  var children = node.children;\r\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\r\n}\r\n/**\r\n * If nodeInLeft\u2019s ancestor is a sibling of node, returns nodeInLeft\u2019s ancestor.\r\n * Otherwise, returns the specified ancestor.\r\n */\r\n\r\n\r\nfunction nextAncestor(nodeInLeft, node, ancestor) {\r\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\r\n}\r\n/**\r\n * The implementation of this function was originally copied from \"d3.js\"\r\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\r\n * with some modifications made for this program.\r\n * See the license statement at the head of this file.\r\n *\r\n * Shifts the current subtree rooted at wr.\r\n * This is done by increasing prelim(w+) and modifier(w+) by shift.\r\n */\r\n\r\n\r\nfunction moveSubtree(wl, wr, shift) {\r\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\r\n  wr.hierNode.change -= change;\r\n  wr.hierNode.shift += shift;\r\n  wr.hierNode.modifier += shift;\r\n  wr.hierNode.prelim += shift;\r\n  wl.hierNode.change += change;\r\n}\r\n/**\r\n * The implementation of this function was originally copied from \"d3.js\"\r\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\r\n * with some modifications made for this program.\r\n * See the license statement at the head of this file.\r\n */\r\n\r\n\r\nfunction defaultSeparation(node1, node2) {\r\n  return node1.parentNode === node2.parentNode ? 1 : 2;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as graphic from '../../util/graphic';\r\nimport { getECData } from '../../util/innerStore';\r\nimport SymbolClz from '../helper/Symbol';\r\nimport { radialCoordinate } from './layoutHelper';\r\nimport * as bbox from 'zrender/lib/core/bbox';\r\nimport View from '../../coord/View';\r\nimport * as roamHelper from '../../component/helper/roamHelper';\r\nimport RoamController from '../../component/helper/RoamController';\r\nimport { onIrrelevantElement } from '../../component/helper/cursorHelper';\r\nimport { parsePercent } from '../../util/number';\r\nimport ChartView from '../../view/Chart';\r\nimport Path from 'zrender/lib/graphic/Path';\r\nimport { setStatesStylesFromModel, setStatesFlag, setDefaultStateProxy, HOVER_STATE_BLUR } from '../../util/states';\r\n\r\nvar TreeEdgeShape =\r\n/** @class */\r\nfunction () {\r\n  function TreeEdgeShape() {\r\n    this.parentPoint = [];\r\n    this.childPoints = [];\r\n  }\r\n\r\n  return TreeEdgeShape;\r\n}();\r\n\r\nvar TreePath =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(TreePath, _super);\r\n\r\n  function TreePath(opts) {\r\n    return _super.call(this, opts) || this;\r\n  }\r\n\r\n  TreePath.prototype.getDefaultStyle = function () {\r\n    return {\r\n      stroke: '#000',\r\n      fill: null\r\n    };\r\n  };\r\n\r\n  TreePath.prototype.getDefaultShape = function () {\r\n    return new TreeEdgeShape();\r\n  };\r\n\r\n  TreePath.prototype.buildPath = function (ctx, shape) {\r\n    var childPoints = shape.childPoints;\r\n    var childLen = childPoints.length;\r\n    var parentPoint = shape.parentPoint;\r\n    var firstChildPos = childPoints[0];\r\n    var lastChildPos = childPoints[childLen - 1];\r\n\r\n    if (childLen === 1) {\r\n      ctx.moveTo(parentPoint[0], parentPoint[1]);\r\n      ctx.lineTo(firstChildPos[0], firstChildPos[1]);\r\n      return;\r\n    }\r\n\r\n    var orient = shape.orient;\r\n    var forkDim = orient === 'TB' || orient === 'BT' ? 0 : 1;\r\n    var otherDim = 1 - forkDim;\r\n    var forkPosition = parsePercent(shape.forkPosition, 1);\r\n    var tmpPoint = [];\r\n    tmpPoint[forkDim] = parentPoint[forkDim];\r\n    tmpPoint[otherDim] = parentPoint[otherDim] + (lastChildPos[otherDim] - parentPoint[otherDim]) * forkPosition;\r\n    ctx.moveTo(parentPoint[0], parentPoint[1]);\r\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\r\n    ctx.moveTo(firstChildPos[0], firstChildPos[1]);\r\n    tmpPoint[forkDim] = firstChildPos[forkDim];\r\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\r\n    tmpPoint[forkDim] = lastChildPos[forkDim];\r\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\r\n    ctx.lineTo(lastChildPos[0], lastChildPos[1]);\r\n\r\n    for (var i = 1; i < childLen - 1; i++) {\r\n      var point = childPoints[i];\r\n      ctx.moveTo(point[0], point[1]);\r\n      tmpPoint[forkDim] = point[forkDim];\r\n      ctx.lineTo(tmpPoint[0], tmpPoint[1]);\r\n    }\r\n  };\r\n\r\n  return TreePath;\r\n}(Path);\r\n\r\nvar TreeView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(TreeView, _super);\r\n\r\n  function TreeView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = TreeView.type;\r\n    _this._mainGroup = new graphic.Group();\r\n    return _this;\r\n  }\r\n\r\n  TreeView.prototype.init = function (ecModel, api) {\r\n    this._controller = new RoamController(api.getZr());\r\n    this._controllerHost = {\r\n      target: this.group\r\n    };\r\n    this.group.add(this._mainGroup);\r\n  };\r\n\r\n  TreeView.prototype.render = function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n    var layoutInfo = seriesModel.layoutInfo;\r\n    var group = this._mainGroup;\r\n    var layout = seriesModel.get('layout');\r\n\r\n    if (layout === 'radial') {\r\n      group.x = layoutInfo.x + layoutInfo.width / 2;\r\n      group.y = layoutInfo.y + layoutInfo.height / 2;\r\n    } else {\r\n      group.x = layoutInfo.x;\r\n      group.y = layoutInfo.y;\r\n    }\r\n\r\n    this._updateViewCoordSys(seriesModel);\r\n\r\n    this._updateController(seriesModel, ecModel, api);\r\n\r\n    var oldData = this._data;\r\n    data.diff(oldData).add(function (newIdx) {\r\n      if (symbolNeedsDraw(data, newIdx)) {\r\n        // Create node and edge\r\n        updateNode(data, newIdx, null, group, seriesModel);\r\n      }\r\n    }).update(function (newIdx, oldIdx) {\r\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\r\n\r\n      if (!symbolNeedsDraw(data, newIdx)) {\r\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel);\r\n        return;\r\n      } // Update node and edge\r\n\r\n\r\n      updateNode(data, newIdx, symbolEl, group, seriesModel);\r\n    }).remove(function (oldIdx) {\r\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\r\n      // node haven't been initialized with a symbol element,\r\n      // you can't found it's symbol element through index.\r\n      // so if we want to remove the symbol element we should insure\r\n      // that the symbol element is not null.\r\n\r\n      if (symbolEl) {\r\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel);\r\n      }\r\n    }).execute();\r\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\r\n\r\n    this._updateNodeAndLinkScale(seriesModel);\r\n\r\n    if (seriesModel.get('expandAndCollapse') === true) {\r\n      data.eachItemGraphicEl(function (el, dataIndex) {\r\n        el.off('click').on('click', function () {\r\n          api.dispatchAction({\r\n            type: 'treeExpandAndCollapse',\r\n            seriesId: seriesModel.id,\r\n            dataIndex: dataIndex\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    this._data = data;\r\n  };\r\n\r\n  TreeView.prototype._updateViewCoordSys = function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var points = [];\r\n    data.each(function (idx) {\r\n      var layout = data.getItemLayout(idx);\r\n\r\n      if (layout && !isNaN(layout.x) && !isNaN(layout.y)) {\r\n        points.push([+layout.x, +layout.y]);\r\n      }\r\n    });\r\n    var min = [];\r\n    var max = [];\r\n    bbox.fromPoints(points, min, max); // If don't Store min max when collapse the root node after roam,\r\n    // the root node will disappear.\r\n\r\n    var oldMin = this._min;\r\n    var oldMax = this._max; // If width or height is 0\r\n\r\n    if (max[0] - min[0] === 0) {\r\n      min[0] = oldMin ? oldMin[0] : min[0] - 1;\r\n      max[0] = oldMax ? oldMax[0] : max[0] + 1;\r\n    }\r\n\r\n    if (max[1] - min[1] === 0) {\r\n      min[1] = oldMin ? oldMin[1] : min[1] - 1;\r\n      max[1] = oldMax ? oldMax[1] : max[1] + 1;\r\n    }\r\n\r\n    var viewCoordSys = seriesModel.coordinateSystem = new View();\r\n    viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\r\n    viewCoordSys.setBoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\r\n    viewCoordSys.setCenter(seriesModel.get('center'));\r\n    viewCoordSys.setZoom(seriesModel.get('zoom')); // Here we use viewCoordSys just for computing the 'position' and 'scale' of the group\r\n\r\n    this.group.attr({\r\n      x: viewCoordSys.x,\r\n      y: viewCoordSys.y,\r\n      scaleX: viewCoordSys.scaleX,\r\n      scaleY: viewCoordSys.scaleY\r\n    });\r\n    this._min = min;\r\n    this._max = max;\r\n  };\r\n\r\n  TreeView.prototype._updateController = function (seriesModel, ecModel, api) {\r\n    var _this = this;\r\n\r\n    var controller = this._controller;\r\n    var controllerHost = this._controllerHost;\r\n    var group = this.group;\r\n    controller.setPointerChecker(function (e, x, y) {\r\n      var rect = group.getBoundingRect();\r\n      rect.applyTransform(group.transform);\r\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\r\n    });\r\n    controller.enable(seriesModel.get('roam'));\r\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\r\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\r\n    controller.off('pan').off('zoom').on('pan', function (e) {\r\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\r\n      api.dispatchAction({\r\n        seriesId: seriesModel.id,\r\n        type: 'treeRoam',\r\n        dx: e.dx,\r\n        dy: e.dy\r\n      });\r\n    }).on('zoom', function (e) {\r\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\r\n      api.dispatchAction({\r\n        seriesId: seriesModel.id,\r\n        type: 'treeRoam',\r\n        zoom: e.scale,\r\n        originX: e.originX,\r\n        originY: e.originY\r\n      });\r\n\r\n      _this._updateNodeAndLinkScale(seriesModel); // Only update label layout on zoom\r\n\r\n\r\n      api.updateLabelLayout();\r\n    });\r\n  };\r\n\r\n  TreeView.prototype._updateNodeAndLinkScale = function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n\r\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\r\n\r\n    data.eachItemGraphicEl(function (el, idx) {\r\n      el.setSymbolScale(nodeScale);\r\n    });\r\n  };\r\n\r\n  TreeView.prototype._getNodeGlobalScale = function (seriesModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (coordSys.type !== 'view') {\r\n      return 1;\r\n    }\r\n\r\n    var nodeScaleRatio = this._nodeScaleRatio;\r\n    var groupZoom = coordSys.scaleX || 1; // Scale node when zoom changes\r\n\r\n    var roamZoom = coordSys.getZoom();\r\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\r\n    return nodeScale / groupZoom;\r\n  };\r\n\r\n  TreeView.prototype.dispose = function () {\r\n    this._controller && this._controller.dispose();\r\n    this._controllerHost = null;\r\n  };\r\n\r\n  TreeView.prototype.remove = function () {\r\n    this._mainGroup.removeAll();\r\n\r\n    this._data = null;\r\n  };\r\n\r\n  TreeView.type = 'tree';\r\n  return TreeView;\r\n}(ChartView);\r\n\r\nfunction symbolNeedsDraw(data, dataIndex) {\r\n  var layout = data.getItemLayout(dataIndex);\r\n  return layout && !isNaN(layout.x) && !isNaN(layout.y);\r\n}\r\n\r\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel) {\r\n  var isInit = !symbolEl;\r\n  var node = data.tree.getNodeByDataIndex(dataIndex);\r\n  var itemModel = node.getModel();\r\n  var visualColor = node.getVisual('style').fill;\r\n  var symbolInnerColor = node.isExpand === false && node.children.length !== 0 ? visualColor : '#fff';\r\n  var virtualRoot = data.tree.root;\r\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\r\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\r\n  var sourceLayout = source.getLayout();\r\n  var sourceOldLayout = sourceSymbolEl ? {\r\n    x: sourceSymbolEl.__oldX,\r\n    y: sourceSymbolEl.__oldY,\r\n    rawX: sourceSymbolEl.__radialOldRawX,\r\n    rawY: sourceSymbolEl.__radialOldRawY\r\n  } : sourceLayout;\r\n  var targetLayout = node.getLayout();\r\n\r\n  if (isInit) {\r\n    symbolEl = new SymbolClz(data, dataIndex, null, {\r\n      symbolInnerColor: symbolInnerColor,\r\n      useNameLabel: true\r\n    });\r\n    symbolEl.x = sourceOldLayout.x;\r\n    symbolEl.y = sourceOldLayout.y;\r\n  } else {\r\n    symbolEl.updateData(data, dataIndex, null, {\r\n      symbolInnerColor: symbolInnerColor,\r\n      useNameLabel: true\r\n    });\r\n  }\r\n\r\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\r\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\r\n  symbolEl.__radialRawX = targetLayout.rawX;\r\n  symbolEl.__radialRawY = targetLayout.rawY;\r\n  group.add(symbolEl);\r\n  data.setItemGraphicEl(dataIndex, symbolEl);\r\n  symbolEl.__oldX = symbolEl.x;\r\n  symbolEl.__oldY = symbolEl.y;\r\n  graphic.updateProps(symbolEl, {\r\n    x: targetLayout.x,\r\n    y: targetLayout.y\r\n  }, seriesModel);\r\n  var symbolPath = symbolEl.getSymbolPath();\r\n\r\n  if (seriesModel.get('layout') === 'radial') {\r\n    var realRoot = virtualRoot.children[0];\r\n    var rootLayout = realRoot.getLayout();\r\n    var length_1 = realRoot.children.length;\r\n    var rad = void 0;\r\n    var isLeft = void 0;\r\n\r\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\r\n      var center = {\r\n        x: (realRoot.children[0].getLayout().x + realRoot.children[length_1 - 1].getLayout().x) / 2,\r\n        y: (realRoot.children[0].getLayout().y + realRoot.children[length_1 - 1].getLayout().y) / 2\r\n      };\r\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\r\n\r\n      if (rad < 0) {\r\n        rad = Math.PI * 2 + rad;\r\n      }\r\n\r\n      isLeft = center.x < rootLayout.x;\r\n\r\n      if (isLeft) {\r\n        rad = rad - Math.PI;\r\n      }\r\n    } else {\r\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\r\n\r\n      if (rad < 0) {\r\n        rad = Math.PI * 2 + rad;\r\n      }\r\n\r\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\r\n        isLeft = targetLayout.x < rootLayout.x;\r\n\r\n        if (isLeft) {\r\n          rad = rad - Math.PI;\r\n        }\r\n      } else {\r\n        isLeft = targetLayout.x > rootLayout.x;\r\n\r\n        if (!isLeft) {\r\n          rad = rad - Math.PI;\r\n        }\r\n      }\r\n    }\r\n\r\n    var textPosition = isLeft ? 'left' : 'right';\r\n    var normalLabelModel = itemModel.getModel('label');\r\n    var rotate = normalLabelModel.get('rotate');\r\n    var labelRotateRadian = rotate * (Math.PI / 180);\r\n    var textContent = symbolPath.getTextContent();\r\n\r\n    if (textContent) {\r\n      symbolPath.setTextConfig({\r\n        position: normalLabelModel.get('position') || textPosition,\r\n        rotation: rotate == null ? -rad : labelRotateRadian,\r\n        origin: 'center'\r\n      });\r\n      textContent.setStyle('verticalAlign', 'middle');\r\n    }\r\n  } // Handle status\r\n\r\n\r\n  var focus = itemModel.get(['emphasis', 'focus']);\r\n  var focusDataIndices = focus === 'ancestor' ? node.getAncestorsIndices() : focus === 'descendant' ? node.getDescendantIndices() : null;\r\n\r\n  if (focusDataIndices) {\r\n    // Modify the focus to data indices.\r\n    getECData(symbolEl).focus = focusDataIndices;\r\n  }\r\n\r\n  drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group);\r\n\r\n  if (symbolEl.__edge) {\r\n    symbolEl.onHoverStateChange = function (toState) {\r\n      if (toState !== 'blur') {\r\n        // NOTE: Ensure the parent elements will been blurred firstly.\r\n        // According to the return of getAncestorsIndices and getDescendantIndices\r\n        // TODO: A bit tricky.\r\n        var parentEl = node.parentNode && data.getItemGraphicEl(node.parentNode.dataIndex);\r\n\r\n        if (!(parentEl && parentEl.hoverState === HOVER_STATE_BLUR)) {\r\n          setStatesFlag(symbolEl.__edge, toState);\r\n        }\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nfunction drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group) {\r\n  var itemModel = node.getModel();\r\n  var edgeShape = seriesModel.get('edgeShape');\r\n  var layout = seriesModel.get('layout');\r\n  var orient = seriesModel.getOrient();\r\n  var curvature = seriesModel.get(['lineStyle', 'curveness']);\r\n  var edgeForkPosition = seriesModel.get('edgeForkPosition');\r\n  var lineStyle = itemModel.getModel('lineStyle').getLineStyle();\r\n  var edge = symbolEl.__edge;\r\n\r\n  if (edgeShape === 'curve') {\r\n    if (node.parentNode && node.parentNode !== virtualRoot) {\r\n      if (!edge) {\r\n        edge = symbolEl.__edge = new graphic.BezierCurve({\r\n          shape: getEdgeShape(layout, orient, curvature, sourceOldLayout, sourceOldLayout)\r\n        });\r\n      }\r\n\r\n      graphic.updateProps(edge, {\r\n        shape: getEdgeShape(layout, orient, curvature, sourceLayout, targetLayout)\r\n      }, seriesModel);\r\n    }\r\n  } else if (edgeShape === 'polyline') {\r\n    if (layout === 'orthogonal') {\r\n      if (node !== virtualRoot && node.children && node.children.length !== 0 && node.isExpand === true) {\r\n        var children = node.children;\r\n        var childPoints = [];\r\n\r\n        for (var i = 0; i < children.length; i++) {\r\n          var childLayout = children[i].getLayout();\r\n          childPoints.push([childLayout.x, childLayout.y]);\r\n        }\r\n\r\n        if (!edge) {\r\n          edge = symbolEl.__edge = new TreePath({\r\n            shape: {\r\n              parentPoint: [targetLayout.x, targetLayout.y],\r\n              childPoints: [[targetLayout.x, targetLayout.y]],\r\n              orient: orient,\r\n              forkPosition: edgeForkPosition\r\n            }\r\n          });\r\n        }\r\n\r\n        graphic.updateProps(edge, {\r\n          shape: {\r\n            parentPoint: [targetLayout.x, targetLayout.y],\r\n            childPoints: childPoints\r\n          }\r\n        }, seriesModel);\r\n      }\r\n    } else {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        throw new Error('The polyline edgeShape can only be used in orthogonal layout');\r\n      }\r\n    }\r\n  }\r\n\r\n  if (edge) {\r\n    edge.useStyle(zrUtil.defaults({\r\n      strokeNoScale: true,\r\n      fill: null\r\n    }, lineStyle));\r\n    setStatesStylesFromModel(edge, itemModel, 'lineStyle');\r\n    setDefaultStateProxy(edge);\r\n    group.add(edge);\r\n  }\r\n}\r\n\r\nfunction removeNodeEdge(node, data, group, seriesModel, removeAnimationOpt) {\r\n  var virtualRoot = data.tree.root;\r\n\r\n  var _a = getSourceNode(virtualRoot, node),\r\n      source = _a.source,\r\n      sourceLayout = _a.sourceLayout;\r\n\r\n  var symbolEl = data.getItemGraphicEl(node.dataIndex);\r\n\r\n  if (!symbolEl) {\r\n    return;\r\n  }\r\n\r\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\r\n  var sourceEdge = sourceSymbolEl.__edge; // 1. when expand the sub tree, delete the children node should delete the edge of\r\n  // the source at the same time. because the polyline edge shape is only owned by the source.\r\n  // 2.when the node is the only children of the source, delete the node should delete the edge of\r\n  // the source at the same time. the same reason as above.\r\n\r\n  var edge = symbolEl.__edge || (source.isExpand === false || source.children.length === 1 ? sourceEdge : undefined);\r\n  var edgeShape = seriesModel.get('edgeShape');\r\n  var layoutOpt = seriesModel.get('layout');\r\n  var orient = seriesModel.get('orient');\r\n  var curvature = seriesModel.get(['lineStyle', 'curveness']);\r\n\r\n  if (edge) {\r\n    if (edgeShape === 'curve') {\r\n      graphic.removeElement(edge, {\r\n        shape: getEdgeShape(layoutOpt, orient, curvature, sourceLayout, sourceLayout),\r\n        style: {\r\n          opacity: 0\r\n        }\r\n      }, seriesModel, {\r\n        cb: function () {\r\n          group.remove(edge);\r\n        },\r\n        removeOpt: removeAnimationOpt\r\n      });\r\n    } else if (edgeShape === 'polyline' && seriesModel.get('layout') === 'orthogonal') {\r\n      graphic.removeElement(edge, {\r\n        shape: {\r\n          parentPoint: [sourceLayout.x, sourceLayout.y],\r\n          childPoints: [[sourceLayout.x, sourceLayout.y]]\r\n        },\r\n        style: {\r\n          opacity: 0\r\n        }\r\n      }, seriesModel, {\r\n        cb: function () {\r\n          group.remove(edge);\r\n        },\r\n        removeOpt: removeAnimationOpt\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction getSourceNode(virtualRoot, node) {\r\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\r\n  var sourceLayout;\r\n\r\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\r\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\r\n  }\r\n\r\n  return {\r\n    source: source,\r\n    sourceLayout: sourceLayout\r\n  };\r\n}\r\n\r\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel) {\r\n  var node = data.tree.getNodeByDataIndex(dataIndex);\r\n  var virtualRoot = data.tree.root;\r\n  var sourceLayout = getSourceNode(virtualRoot, node).sourceLayout; // Use same duration and easing with update to have more consistent animation.\r\n\r\n  var removeAnimationOpt = {\r\n    duration: seriesModel.get('animationDurationUpdate'),\r\n    easing: seriesModel.get('animationEasingUpdate')\r\n  };\r\n  graphic.removeElement(symbolEl, {\r\n    x: sourceLayout.x + 1,\r\n    y: sourceLayout.y + 1\r\n  }, seriesModel, {\r\n    cb: function () {\r\n      group.remove(symbolEl);\r\n      data.setItemGraphicEl(dataIndex, null);\r\n    },\r\n    removeOpt: removeAnimationOpt\r\n  });\r\n  symbolEl.fadeOut(null, {\r\n    fadeLabel: true,\r\n    animation: removeAnimationOpt\r\n  }); // remove edge as parent node\r\n\r\n  node.children.forEach(function (childNode) {\r\n    removeNodeEdge(childNode, data, group, seriesModel, removeAnimationOpt);\r\n  }); // remove edge as child node\r\n\r\n  removeNodeEdge(node, data, group, seriesModel, removeAnimationOpt);\r\n}\r\n\r\nfunction getEdgeShape(layoutOpt, orient, curvature, sourceLayout, targetLayout) {\r\n  var cpx1;\r\n  var cpy1;\r\n  var cpx2;\r\n  var cpy2;\r\n  var x1;\r\n  var x2;\r\n  var y1;\r\n  var y2;\r\n\r\n  if (layoutOpt === 'radial') {\r\n    x1 = sourceLayout.rawX;\r\n    y1 = sourceLayout.rawY;\r\n    x2 = targetLayout.rawX;\r\n    y2 = targetLayout.rawY;\r\n    var radialCoor1 = radialCoordinate(x1, y1);\r\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * curvature);\r\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * curvature);\r\n    var radialCoor4 = radialCoordinate(x2, y2);\r\n    return {\r\n      x1: radialCoor1.x || 0,\r\n      y1: radialCoor1.y || 0,\r\n      x2: radialCoor4.x || 0,\r\n      y2: radialCoor4.y || 0,\r\n      cpx1: radialCoor2.x || 0,\r\n      cpy1: radialCoor2.y || 0,\r\n      cpx2: radialCoor3.x || 0,\r\n      cpy2: radialCoor3.y || 0\r\n    };\r\n  } else {\r\n    x1 = sourceLayout.x;\r\n    y1 = sourceLayout.y;\r\n    x2 = targetLayout.x;\r\n    y2 = targetLayout.y;\r\n\r\n    if (orient === 'LR' || orient === 'RL') {\r\n      cpx1 = x1 + (x2 - x1) * curvature;\r\n      cpy1 = y1;\r\n      cpx2 = x2 + (x1 - x2) * curvature;\r\n      cpy2 = y2;\r\n    }\r\n\r\n    if (orient === 'TB' || orient === 'BT') {\r\n      cpx1 = x1;\r\n      cpy1 = y1 + (y2 - y1) * curvature;\r\n      cpx2 = x2;\r\n      cpy2 = y2 + (y1 - y2) * curvature;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x1: x1,\r\n    y1: y1,\r\n    x2: x2,\r\n    y2: y2,\r\n    cpx1: cpx1,\r\n    cpy1: cpy1,\r\n    cpx2: cpx2,\r\n    cpy2: cpy2\r\n  };\r\n}\r\n\r\nexport default TreeView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Tree data structure\r\n */\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport linkSeriesData from './helper/linkSeriesData';\r\nimport SeriesData from './SeriesData';\r\nimport prepareSeriesDataSchema from './helper/createDimensions';\r\nimport { convertOptionIdName } from '../util/model';\r\n\r\nvar TreeNode =\r\n/** @class */\r\nfunction () {\r\n  function TreeNode(name, hostTree) {\r\n    this.depth = 0;\r\n    this.height = 0;\r\n    /**\r\n     * Reference to list item.\r\n     * Do not persistent dataIndex outside,\r\n     * besause it may be changed by list.\r\n     * If dataIndex -1,\r\n     * this node is logical deleted (filtered) in list.\r\n     */\r\n\r\n    this.dataIndex = -1;\r\n    this.children = [];\r\n    this.viewChildren = [];\r\n    this.isExpand = false;\r\n    this.name = name || '';\r\n    this.hostTree = hostTree;\r\n  }\r\n  /**\r\n   * The node is removed.\r\n   */\r\n\r\n\r\n  TreeNode.prototype.isRemoved = function () {\r\n    return this.dataIndex < 0;\r\n  };\r\n\r\n  TreeNode.prototype.eachNode = function (options, cb, context) {\r\n    if (typeof options === 'function') {\r\n      context = cb;\r\n      cb = options;\r\n      options = null;\r\n    }\r\n\r\n    options = options || {};\r\n\r\n    if (zrUtil.isString(options)) {\r\n      options = {\r\n        order: options\r\n      };\r\n    }\r\n\r\n    var order = options.order || 'preorder';\r\n    var children = this[options.attr || 'children'];\r\n    var suppressVisitSub;\r\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\r\n\r\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\r\n      children[i].eachNode(options, cb, context);\r\n    }\r\n\r\n    order === 'postorder' && cb.call(context, this);\r\n  };\r\n  /**\r\n   * Update depth and height of this subtree.\r\n   */\r\n\r\n\r\n  TreeNode.prototype.updateDepthAndHeight = function (depth) {\r\n    var height = 0;\r\n    this.depth = depth;\r\n\r\n    for (var i = 0; i < this.children.length; i++) {\r\n      var child = this.children[i];\r\n      child.updateDepthAndHeight(depth + 1);\r\n\r\n      if (child.height > height) {\r\n        height = child.height;\r\n      }\r\n    }\r\n\r\n    this.height = height + 1;\r\n  };\r\n\r\n  TreeNode.prototype.getNodeById = function (id) {\r\n    if (this.getId() === id) {\r\n      return this;\r\n    }\r\n\r\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\r\n      var res = children[i].getNodeById(id);\r\n\r\n      if (res) {\r\n        return res;\r\n      }\r\n    }\r\n  };\r\n\r\n  TreeNode.prototype.contains = function (node) {\r\n    if (node === this) {\r\n      return true;\r\n    }\r\n\r\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\r\n      var res = children[i].contains(node);\r\n\r\n      if (res) {\r\n        return res;\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * @param includeSelf Default false.\r\n   * @return order: [root, child, grandchild, ...]\r\n   */\r\n\r\n\r\n  TreeNode.prototype.getAncestors = function (includeSelf) {\r\n    var ancestors = [];\r\n    var node = includeSelf ? this : this.parentNode;\r\n\r\n    while (node) {\r\n      ancestors.push(node);\r\n      node = node.parentNode;\r\n    }\r\n\r\n    ancestors.reverse();\r\n    return ancestors;\r\n  };\r\n\r\n  TreeNode.prototype.getAncestorsIndices = function () {\r\n    var indices = [];\r\n    var currNode = this;\r\n\r\n    while (currNode) {\r\n      indices.push(currNode.dataIndex);\r\n      currNode = currNode.parentNode;\r\n    }\r\n\r\n    indices.reverse();\r\n    return indices;\r\n  };\r\n\r\n  TreeNode.prototype.getDescendantIndices = function () {\r\n    var indices = [];\r\n    this.eachNode(function (childNode) {\r\n      indices.push(childNode.dataIndex);\r\n    });\r\n    return indices;\r\n  };\r\n\r\n  TreeNode.prototype.getValue = function (dimension) {\r\n    var data = this.hostTree.data;\r\n    return data.getStore().get(data.getDimensionIndex(dimension || 'value'), this.dataIndex);\r\n  };\r\n\r\n  TreeNode.prototype.setLayout = function (layout, merge) {\r\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\r\n  };\r\n  /**\r\n   * @return {Object} layout\r\n   */\r\n\r\n\r\n  TreeNode.prototype.getLayout = function () {\r\n    return this.hostTree.data.getItemLayout(this.dataIndex);\r\n  }; // @depcrecated\r\n  // getModel<T = unknown, S extends keyof T = keyof T>(path: S): Model<T[S]>\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\r\n\r\n  TreeNode.prototype.getModel = function (path) {\r\n    if (this.dataIndex < 0) {\r\n      return;\r\n    }\r\n\r\n    var hostTree = this.hostTree;\r\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\r\n    return itemModel.getModel(path);\r\n  }; // TODO: TYPE More specific model\r\n\r\n\r\n  TreeNode.prototype.getLevelModel = function () {\r\n    return (this.hostTree.levelModels || [])[this.depth];\r\n  };\r\n\r\n  TreeNode.prototype.setVisual = function (key, value) {\r\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\r\n  };\r\n  /**\r\n   * Get item visual\r\n   * FIXME: make return type better\r\n   */\r\n\r\n\r\n  TreeNode.prototype.getVisual = function (key) {\r\n    return this.hostTree.data.getItemVisual(this.dataIndex, key);\r\n  };\r\n\r\n  TreeNode.prototype.getRawIndex = function () {\r\n    return this.hostTree.data.getRawIndex(this.dataIndex);\r\n  };\r\n\r\n  TreeNode.prototype.getId = function () {\r\n    return this.hostTree.data.getId(this.dataIndex);\r\n  };\r\n  /**\r\n   * index in parent's children\r\n   */\r\n\r\n\r\n  TreeNode.prototype.getChildIndex = function () {\r\n    if (this.parentNode) {\r\n      var children = this.parentNode.children;\r\n\r\n      for (var i = 0; i < children.length; ++i) {\r\n        if (children[i] === this) {\r\n          return i;\r\n        }\r\n      }\r\n\r\n      return -1;\r\n    }\r\n\r\n    return -1;\r\n  };\r\n  /**\r\n   * if this is an ancestor of another node\r\n   *\r\n   * @param node another node\r\n   * @return if is ancestor\r\n   */\r\n\r\n\r\n  TreeNode.prototype.isAncestorOf = function (node) {\r\n    var parent = node.parentNode;\r\n\r\n    while (parent) {\r\n      if (parent === this) {\r\n        return true;\r\n      }\r\n\r\n      parent = parent.parentNode;\r\n    }\r\n\r\n    return false;\r\n  };\r\n  /**\r\n   * if this is an descendant of another node\r\n   *\r\n   * @param node another node\r\n   * @return if is descendant\r\n   */\r\n\r\n\r\n  TreeNode.prototype.isDescendantOf = function (node) {\r\n    return node !== this && node.isAncestorOf(this);\r\n  };\r\n\r\n  return TreeNode;\r\n}();\r\n\r\nexport { TreeNode };\r\n;\r\n\r\nvar Tree =\r\n/** @class */\r\nfunction () {\r\n  function Tree(hostModel) {\r\n    this.type = 'tree';\r\n    this._nodes = [];\r\n    this.hostModel = hostModel;\r\n  }\r\n\r\n  Tree.prototype.eachNode = function (options, cb, context) {\r\n    this.root.eachNode(options, cb, context);\r\n  };\r\n\r\n  Tree.prototype.getNodeByDataIndex = function (dataIndex) {\r\n    var rawIndex = this.data.getRawIndex(dataIndex);\r\n    return this._nodes[rawIndex];\r\n  };\r\n\r\n  Tree.prototype.getNodeById = function (name) {\r\n    return this.root.getNodeById(name);\r\n  };\r\n  /**\r\n   * Update item available by list,\r\n   * when list has been performed options like 'filterSelf' or 'map'.\r\n   */\r\n\r\n\r\n  Tree.prototype.update = function () {\r\n    var data = this.data;\r\n    var nodes = this._nodes;\r\n\r\n    for (var i = 0, len = nodes.length; i < len; i++) {\r\n      nodes[i].dataIndex = -1;\r\n    }\r\n\r\n    for (var i = 0, len = data.count(); i < len; i++) {\r\n      nodes[data.getRawIndex(i)].dataIndex = i;\r\n    }\r\n  };\r\n  /**\r\n   * Clear all layouts\r\n   */\r\n\r\n\r\n  Tree.prototype.clearLayouts = function () {\r\n    this.data.clearItemLayouts();\r\n  };\r\n  /**\r\n   * data node format:\r\n   * {\r\n   *     name: ...\r\n   *     value: ...\r\n   *     children: [\r\n   *         {\r\n   *             name: ...\r\n   *             value: ...\r\n   *             children: ...\r\n   *         },\r\n   *         ...\r\n   *     ]\r\n   * }\r\n   */\r\n\r\n\r\n  Tree.createTree = function (dataRoot, hostModel, beforeLink) {\r\n    var tree = new Tree(hostModel);\r\n    var listData = [];\r\n    var dimMax = 1;\r\n    buildHierarchy(dataRoot);\r\n\r\n    function buildHierarchy(dataNode, parentNode) {\r\n      var value = dataNode.value;\r\n      dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\r\n      listData.push(dataNode);\r\n      var node = new TreeNode(convertOptionIdName(dataNode.name, ''), tree);\r\n      parentNode ? addChild(node, parentNode) : tree.root = node;\r\n\r\n      tree._nodes.push(node);\r\n\r\n      var children = dataNode.children;\r\n\r\n      if (children) {\r\n        for (var i = 0; i < children.length; i++) {\r\n          buildHierarchy(children[i], node);\r\n        }\r\n      }\r\n    }\r\n\r\n    tree.root.updateDepthAndHeight(0);\r\n    var dimensions = prepareSeriesDataSchema(listData, {\r\n      coordDimensions: ['value'],\r\n      dimensionsCount: dimMax\r\n    }).dimensions;\r\n    var list = new SeriesData(dimensions, hostModel);\r\n    list.initData(listData);\r\n    beforeLink && beforeLink(list);\r\n    linkSeriesData({\r\n      mainData: list,\r\n      struct: tree,\r\n      structAttr: 'tree'\r\n    });\r\n    tree.update();\r\n    return tree;\r\n  };\r\n\r\n  return Tree;\r\n}();\r\n/**\r\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\r\n * so this function is not ready and not necessary to be public.\r\n */\r\n\r\n\r\nfunction addChild(child, node) {\r\n  var children = node.children;\r\n\r\n  if (child.parentNode === node) {\r\n    return;\r\n  }\r\n\r\n  children.push(child);\r\n  child.parentNode = node;\r\n}\r\n\r\nexport default Tree;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nexport function retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\r\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\r\n    var root = seriesModel.getData().tree.root;\r\n    var targetNode = payload.targetNode;\r\n\r\n    if (typeof targetNode === 'string') {\r\n      targetNode = root.getNodeById(targetNode);\r\n    }\r\n\r\n    if (targetNode && root.contains(targetNode)) {\r\n      return {\r\n        node: targetNode\r\n      };\r\n    }\r\n\r\n    var targetNodeId = payload.targetNodeId;\r\n\r\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\r\n      return {\r\n        node: targetNode\r\n      };\r\n    }\r\n  }\r\n} // Not includes the given node at the last item.\r\n\r\nexport function getPathToRoot(node) {\r\n  var path = [];\r\n\r\n  while (node) {\r\n    node = node.parentNode;\r\n    node && path.push(node);\r\n  }\r\n\r\n  return path.reverse();\r\n}\r\nexport function aboveViewRoot(viewRoot, node) {\r\n  var viewPath = getPathToRoot(viewRoot);\r\n  return zrUtil.indexOf(viewPath, node) >= 0;\r\n} // From root to the input node (the input node will be included).\r\n\r\nexport function wrapTreePathInfo(node, seriesModel) {\r\n  var treePathInfo = [];\r\n\r\n  while (node) {\r\n    var nodeDataIndex = node.dataIndex;\r\n    treePathInfo.push({\r\n      name: node.name,\r\n      dataIndex: nodeDataIndex,\r\n      value: seriesModel.getRawValue(nodeDataIndex)\r\n    });\r\n    node = node.parentNode;\r\n  }\r\n\r\n  treePathInfo.reverse();\r\n  return treePathInfo;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport SeriesModel from '../../model/Series';\r\nimport Tree from '../../data/Tree';\r\nimport Model from '../../model/Model';\r\nimport { createTooltipMarkup } from '../../component/tooltip/tooltipMarkup';\r\nimport { wrapTreePathInfo } from '../helper/treeHelper';\r\n\r\nvar TreeSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(TreeSeriesModel, _super);\r\n\r\n  function TreeSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.hasSymbolVisual = true; // Do it self.\r\n\r\n    _this.ignoreStyleOnData = true;\r\n    return _this;\r\n  }\r\n  /**\r\n   * Init a tree data structure from data in option series\r\n   */\r\n\r\n\r\n  TreeSeriesModel.prototype.getInitialData = function (option) {\r\n    //create an virtual root\r\n    var root = {\r\n      name: option.name,\r\n      children: option.data\r\n    };\r\n    var leaves = option.leaves || {};\r\n    var leavesModel = new Model(leaves, this, this.ecModel);\r\n    var tree = Tree.createTree(root, this, beforeLink);\r\n\r\n    function beforeLink(nodeData) {\r\n      nodeData.wrapMethod('getItemModel', function (model, idx) {\r\n        var node = tree.getNodeByDataIndex(idx);\r\n\r\n        if (!(node && node.children.length && node.isExpand)) {\r\n          model.parentModel = leavesModel;\r\n        }\r\n\r\n        return model;\r\n      });\r\n    }\r\n\r\n    var treeDepth = 0;\r\n    tree.eachNode('preorder', function (node) {\r\n      if (node.depth > treeDepth) {\r\n        treeDepth = node.depth;\r\n      }\r\n    });\r\n    var expandAndCollapse = option.expandAndCollapse;\r\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\r\n    tree.root.eachNode('preorder', function (node) {\r\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex); // Add item.collapsed != null, because users can collapse node original in the series.data.\r\n\r\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\r\n    });\r\n    return tree.data;\r\n  };\r\n  /**\r\n   * Make the configuration 'orient' backward compatibly, with 'horizontal = LR', 'vertical = TB'.\r\n   * @returns {string} orient\r\n   */\r\n\r\n\r\n  TreeSeriesModel.prototype.getOrient = function () {\r\n    var orient = this.get('orient');\r\n\r\n    if (orient === 'horizontal') {\r\n      orient = 'LR';\r\n    } else if (orient === 'vertical') {\r\n      orient = 'TB';\r\n    }\r\n\r\n    return orient;\r\n  };\r\n\r\n  TreeSeriesModel.prototype.setZoom = function (zoom) {\r\n    this.option.zoom = zoom;\r\n  };\r\n\r\n  TreeSeriesModel.prototype.setCenter = function (center) {\r\n    this.option.center = center;\r\n  };\r\n\r\n  TreeSeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\r\n    var tree = this.getData().tree;\r\n    var realRoot = tree.root.children[0];\r\n    var node = tree.getNodeByDataIndex(dataIndex);\r\n    var value = node.getValue();\r\n    var name = node.name;\r\n\r\n    while (node && node !== realRoot) {\r\n      name = node.parentNode.name + '.' + name;\r\n      node = node.parentNode;\r\n    }\r\n\r\n    return createTooltipMarkup('nameValue', {\r\n      name: name,\r\n      value: value,\r\n      noValue: isNaN(value) || value == null\r\n    });\r\n  }; // Add tree path to tooltip param\r\n\r\n\r\n  TreeSeriesModel.prototype.getDataParams = function (dataIndex) {\r\n    var params = _super.prototype.getDataParams.apply(this, arguments);\r\n\r\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\r\n    params.treeAncestors = wrapTreePathInfo(node, this);\r\n    return params;\r\n  };\r\n\r\n  TreeSeriesModel.type = 'series.tree'; // can support the position parameters 'left', 'top','right','bottom', 'width',\r\n  // 'height' in the setOption() with 'merge' mode normal.\r\n\r\n  TreeSeriesModel.layoutMode = 'box';\r\n  TreeSeriesModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 2,\r\n    coordinateSystem: 'view',\r\n    // the position of the whole view\r\n    left: '12%',\r\n    top: '12%',\r\n    right: '12%',\r\n    bottom: '12%',\r\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\r\n    layout: 'orthogonal',\r\n    // value can be 'polyline'\r\n    edgeShape: 'curve',\r\n    edgeForkPosition: '50%',\r\n    // true | false | 'move' | 'scale', see module:component/helper/RoamController.\r\n    roam: false,\r\n    // Symbol size scale ratio in roam\r\n    nodeScaleRatio: 0.4,\r\n    // Default on center of graph\r\n    center: null,\r\n    zoom: 1,\r\n    orient: 'LR',\r\n    symbol: 'emptyCircle',\r\n    symbolSize: 7,\r\n    expandAndCollapse: true,\r\n    initialTreeDepth: 2,\r\n    lineStyle: {\r\n      color: '#ccc',\r\n      width: 1.5,\r\n      curveness: 0.5\r\n    },\r\n    itemStyle: {\r\n      color: 'lightsteelblue',\r\n      // borderColor: '#c23531',\r\n      borderWidth: 1.5\r\n    },\r\n    label: {\r\n      show: true\r\n    },\r\n    animationEasing: 'linear',\r\n    animationDuration: 700,\r\n    animationDurationUpdate: 500\r\n  };\r\n  return TreeSeriesModel;\r\n}(SeriesModel);\r\n\r\nexport default TreeSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Traverse the tree from bottom to top and do something\r\n */\r\nfunction eachAfter(root, callback, separation) {\r\n  var nodes = [root];\r\n  var next = [];\r\n  var node;\r\n\r\n  while (node = nodes.pop()) {\r\n    // jshint ignore:line\r\n    next.push(node);\r\n\r\n    if (node.isExpand) {\r\n      var children = node.children;\r\n\r\n      if (children.length) {\r\n        for (var i = 0; i < children.length; i++) {\r\n          nodes.push(children[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  while (node = next.pop()) {\r\n    // jshint ignore:line\r\n    callback(node, separation);\r\n  }\r\n}\r\n/**\r\n * Traverse the tree from top to bottom and do something\r\n */\r\n\r\n\r\nfunction eachBefore(root, callback) {\r\n  var nodes = [root];\r\n  var node;\r\n\r\n  while (node = nodes.pop()) {\r\n    // jshint ignore:line\r\n    callback(node);\r\n\r\n    if (node.isExpand) {\r\n      var children = node.children;\r\n\r\n      if (children.length) {\r\n        for (var i = children.length - 1; i >= 0; i--) {\r\n          nodes.push(children[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport { eachAfter, eachBefore };", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { eachAfter, eachBefore } from './traversalHelper';\r\nimport { init, firstWalk, secondWalk, separation as sep, radialCoordinate, getViewRect } from './layoutHelper';\r\nexport default function treeLayout(ecModel, api) {\r\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\r\n    commonLayout(seriesModel, api);\r\n  });\r\n}\r\n\r\nfunction commonLayout(seriesModel, api) {\r\n  var layoutInfo = getViewRect(seriesModel, api);\r\n  seriesModel.layoutInfo = layoutInfo;\r\n  var layout = seriesModel.get('layout');\r\n  var width = 0;\r\n  var height = 0;\r\n  var separation = null;\r\n\r\n  if (layout === 'radial') {\r\n    width = 2 * Math.PI;\r\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\r\n    separation = sep(function (node1, node2) {\r\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\r\n    });\r\n  } else {\r\n    width = layoutInfo.width;\r\n    height = layoutInfo.height;\r\n    separation = sep();\r\n  }\r\n\r\n  var virtualRoot = seriesModel.getData().tree.root;\r\n  var realRoot = virtualRoot.children[0];\r\n\r\n  if (realRoot) {\r\n    init(virtualRoot);\r\n    eachAfter(realRoot, firstWalk, separation);\r\n    virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\r\n    eachBefore(realRoot, secondWalk);\r\n    var left_1 = realRoot;\r\n    var right_1 = realRoot;\r\n    var bottom_1 = realRoot;\r\n    eachBefore(realRoot, function (node) {\r\n      var x = node.getLayout().x;\r\n\r\n      if (x < left_1.getLayout().x) {\r\n        left_1 = node;\r\n      }\r\n\r\n      if (x > right_1.getLayout().x) {\r\n        right_1 = node;\r\n      }\r\n\r\n      if (node.depth > bottom_1.depth) {\r\n        bottom_1 = node;\r\n      }\r\n    });\r\n    var delta = left_1 === right_1 ? 1 : separation(left_1, right_1) / 2;\r\n    var tx_1 = delta - left_1.getLayout().x;\r\n    var kx_1 = 0;\r\n    var ky_1 = 0;\r\n    var coorX_1 = 0;\r\n    var coorY_1 = 0;\r\n\r\n    if (layout === 'radial') {\r\n      kx_1 = width / (right_1.getLayout().x + delta + tx_1); // here we use (node.depth - 1), bucause the real root's depth is 1\r\n\r\n      ky_1 = height / (bottom_1.depth - 1 || 1);\r\n      eachBefore(realRoot, function (node) {\r\n        coorX_1 = (node.getLayout().x + tx_1) * kx_1;\r\n        coorY_1 = (node.depth - 1) * ky_1;\r\n        var finalCoor = radialCoordinate(coorX_1, coorY_1);\r\n        node.setLayout({\r\n          x: finalCoor.x,\r\n          y: finalCoor.y,\r\n          rawX: coorX_1,\r\n          rawY: coorY_1\r\n        }, true);\r\n      });\r\n    } else {\r\n      var orient_1 = seriesModel.getOrient();\r\n\r\n      if (orient_1 === 'RL' || orient_1 === 'LR') {\r\n        ky_1 = height / (right_1.getLayout().x + delta + tx_1);\r\n        kx_1 = width / (bottom_1.depth - 1 || 1);\r\n        eachBefore(realRoot, function (node) {\r\n          coorY_1 = (node.getLayout().x + tx_1) * ky_1;\r\n          coorX_1 = orient_1 === 'LR' ? (node.depth - 1) * kx_1 : width - (node.depth - 1) * kx_1;\r\n          node.setLayout({\r\n            x: coorX_1,\r\n            y: coorY_1\r\n          }, true);\r\n        });\r\n      } else if (orient_1 === 'TB' || orient_1 === 'BT') {\r\n        kx_1 = width / (right_1.getLayout().x + delta + tx_1);\r\n        ky_1 = height / (bottom_1.depth - 1 || 1);\r\n        eachBefore(realRoot, function (node) {\r\n          coorX_1 = (node.getLayout().x + tx_1) * kx_1;\r\n          coorY_1 = orient_1 === 'TB' ? (node.depth - 1) * ky_1 : height - (node.depth - 1) * ky_1;\r\n          node.setLayout({\r\n            x: coorX_1,\r\n            y: coorY_1\r\n          }, true);\r\n        });\r\n      }\r\n    }\r\n  }\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { extend } from 'zrender/lib/core/util';\r\nexport default function treeVisual(ecModel) {\r\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var tree = data.tree;\r\n    tree.eachNode(function (node) {\r\n      var model = node.getModel(); // TODO Optimize\r\n\r\n      var style = model.getModel('itemStyle').getItemStyle();\r\n      var existsStyle = data.ensureUniqueItemVisual(node.dataIndex, 'style');\r\n      extend(existsStyle, style);\r\n    });\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { updateCenterAndZoom } from '../../action/roamHelper';\r\nexport function installTreeAction(registers) {\r\n  registers.registerAction({\r\n    type: 'treeExpandAndCollapse',\r\n    event: 'treeExpandAndCollapse',\r\n    update: 'update'\r\n  }, function (payload, ecModel) {\r\n    ecModel.eachComponent({\r\n      mainType: 'series',\r\n      subType: 'tree',\r\n      query: payload\r\n    }, function (seriesModel) {\r\n      var dataIndex = payload.dataIndex;\r\n      var tree = seriesModel.getData().tree;\r\n      var node = tree.getNodeByDataIndex(dataIndex);\r\n      node.isExpand = !node.isExpand;\r\n    });\r\n  });\r\n  registers.registerAction({\r\n    type: 'treeRoam',\r\n    event: 'treeRoam',\r\n    // Here we set 'none' instead of 'update', because roam action\r\n    // just need to update the transform matrix without having to recalculate\r\n    // the layout. So don't need to go through the whole update process, such\r\n    // as 'dataPrcocess', 'coordSystemUpdate', 'layout' and so on.\r\n    update: 'none'\r\n  }, function (payload, ecModel) {\r\n    ecModel.eachComponent({\r\n      mainType: 'series',\r\n      subType: 'tree',\r\n      query: payload\r\n    }, function (seriesModel) {\r\n      var coordSys = seriesModel.coordinateSystem;\r\n      var res = updateCenterAndZoom(coordSys, payload);\r\n      seriesModel.setCenter && seriesModel.setCenter(res.center);\r\n      seriesModel.setZoom && seriesModel.setZoom(res.zoom);\r\n    });\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport TreeView from './TreeView';\r\nimport TreeSeriesModel from './TreeSeries';\r\nimport treeLayout from './treeLayout';\r\nimport treeVisual from './treeVisual';\r\nimport { installTreeAction } from './treeAction';\r\nexport function install(registers) {\r\n  registers.registerChartView(TreeView);\r\n  registers.registerSeriesModel(TreeSeriesModel);\r\n  registers.registerLayout(treeLayout);\r\n  registers.registerVisual(treeVisual);\r\n  installTreeAction(registers);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as helper from '../helper/treeHelper';\r\n\r\nvar noop = function () {};\r\n\r\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\r\nexport function installTreemapAction(registers) {\r\n  for (var i = 0; i < actionTypes.length; i++) {\r\n    registers.registerAction({\r\n      type: actionTypes[i],\r\n      update: 'updateView'\r\n    }, noop);\r\n  }\r\n\r\n  registers.registerAction({\r\n    type: 'treemapRootToNode',\r\n    update: 'updateView'\r\n  }, function (payload, ecModel) {\r\n    ecModel.eachComponent({\r\n      mainType: 'series',\r\n      subType: 'treemap',\r\n      query: payload\r\n    }, handleRootToNode);\r\n\r\n    function handleRootToNode(model, index) {\r\n      var types = ['treemapZoomToNode', 'treemapRootToNode'];\r\n      var targetInfo = helper.retrieveTargetInfo(payload, types, model);\r\n\r\n      if (targetInfo) {\r\n        var originViewRoot = model.getViewRoot();\r\n\r\n        if (originViewRoot) {\r\n          payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\r\n        }\r\n\r\n        model.resetViewRoot(targetInfo.node);\r\n      }\r\n    }\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { getDecalFromPalette } from '../../model/mixin/palette';\r\nexport default function enableAriaDecalForTree(seriesModel) {\r\n  var data = seriesModel.getData();\r\n  var tree = data.tree;\r\n  var decalPaletteScope = {};\r\n  tree.eachNode(function (node) {\r\n    // Use decal of level 1 node\r\n    var current = node;\r\n\r\n    while (current && current.depth > 1) {\r\n      current = current.parentNode;\r\n    }\r\n\r\n    var decal = getDecalFromPalette(seriesModel.ecModel, current.name || current.dataIndex + '', decalPaletteScope);\r\n    node.setVisual('decal', decal);\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport SeriesModel from '../../model/Series';\r\nimport Tree from '../../data/Tree';\r\nimport Model from '../../model/Model';\r\nimport { wrapTreePathInfo } from '../helper/treeHelper';\r\nimport { normalizeToArray } from '../../util/model';\r\nimport { createTooltipMarkup } from '../../component/tooltip/tooltipMarkup';\r\nimport enableAriaDecalForTree from '../helper/enableAriaDecalForTree';\r\n\r\nvar TreemapSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(TreemapSeriesModel, _super);\r\n\r\n  function TreemapSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = TreemapSeriesModel.type;\r\n    _this.preventUsingHoverLayer = true;\r\n    return _this;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  TreemapSeriesModel.prototype.getInitialData = function (option, ecModel) {\r\n    // Create a virtual root.\r\n    var root = {\r\n      name: option.name,\r\n      children: option.data\r\n    };\r\n    completeTreeValue(root);\r\n    var levels = option.levels || []; // Used in \"visual priority\" in `treemapVisual.js`.\r\n    // This way is a little tricky, must satisfy the precondition:\r\n    //   1. There is no `treeNode.getModel('itemStyle.xxx')` used.\r\n    //   2. The `Model.prototype.getModel()` will not use any clone-like way.\r\n\r\n    var designatedVisualItemStyle = this.designatedVisualItemStyle = {};\r\n    var designatedVisualModel = new Model({\r\n      itemStyle: designatedVisualItemStyle\r\n    }, this, ecModel);\r\n    levels = option.levels = setDefault(levels, ecModel);\r\n    var levelModels = zrUtil.map(levels || [], function (levelDefine) {\r\n      return new Model(levelDefine, designatedVisualModel, ecModel);\r\n    }, this); // Make sure always a new tree is created when setOption,\r\n    // in TreemapView, we check whether oldTree === newTree\r\n    // to choose mappings approach among old shapes and new shapes.\r\n\r\n    var tree = Tree.createTree(root, this, beforeLink);\r\n\r\n    function beforeLink(nodeData) {\r\n      nodeData.wrapMethod('getItemModel', function (model, idx) {\r\n        var node = tree.getNodeByDataIndex(idx);\r\n        var levelModel = node ? levelModels[node.depth] : null; // If no levelModel, we also need `designatedVisualModel`.\r\n\r\n        model.parentModel = levelModel || designatedVisualModel;\r\n        return model;\r\n      });\r\n    }\r\n\r\n    return tree.data;\r\n  };\r\n\r\n  TreemapSeriesModel.prototype.optionUpdated = function () {\r\n    this.resetViewRoot();\r\n  };\r\n  /**\r\n   * @override\r\n   * @param {number} dataIndex\r\n   * @param {boolean} [mutipleSeries=false]\r\n   */\r\n\r\n\r\n  TreemapSeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\r\n    var data = this.getData();\r\n    var value = this.getRawValue(dataIndex);\r\n    var name = data.getName(dataIndex);\r\n    return createTooltipMarkup('nameValue', {\r\n      name: name,\r\n      value: value\r\n    });\r\n  };\r\n  /**\r\n   * Add tree path to tooltip param\r\n   *\r\n   * @override\r\n   * @param {number} dataIndex\r\n   * @return {Object}\r\n   */\r\n\r\n\r\n  TreemapSeriesModel.prototype.getDataParams = function (dataIndex) {\r\n    var params = _super.prototype.getDataParams.apply(this, arguments);\r\n\r\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\r\n    params.treeAncestors = wrapTreePathInfo(node, this); // compatitable the previous code.\r\n\r\n    params.treePathInfo = params.treeAncestors;\r\n    return params;\r\n  };\r\n  /**\r\n   * @public\r\n   * @param {Object} layoutInfo {\r\n   *                                x: containerGroup x\r\n   *                                y: containerGroup y\r\n   *                                width: containerGroup width\r\n   *                                height: containerGroup height\r\n   *                            }\r\n   */\r\n\r\n\r\n  TreemapSeriesModel.prototype.setLayoutInfo = function (layoutInfo) {\r\n    /**\r\n     * @readOnly\r\n     * @type {Object}\r\n     */\r\n    this.layoutInfo = this.layoutInfo || {};\r\n    zrUtil.extend(this.layoutInfo, layoutInfo);\r\n  };\r\n  /**\r\n   * @param  {string} id\r\n   * @return {number} index\r\n   */\r\n\r\n\r\n  TreemapSeriesModel.prototype.mapIdToIndex = function (id) {\r\n    // A feature is implemented:\r\n    // index is monotone increasing with the sequence of\r\n    // input id at the first time.\r\n    // This feature can make sure that each data item and its\r\n    // mapped color have the same index between data list and\r\n    // color list at the beginning, which is useful for user\r\n    // to adjust data-color mapping.\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    var idIndexMap = this._idIndexMap;\r\n\r\n    if (!idIndexMap) {\r\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\r\n      /**\r\n       * @private\r\n       * @type {number}\r\n       */\r\n\r\n      this._idIndexMapCount = 0;\r\n    }\r\n\r\n    var index = idIndexMap.get(id);\r\n\r\n    if (index == null) {\r\n      idIndexMap.set(id, index = this._idIndexMapCount++);\r\n    }\r\n\r\n    return index;\r\n  };\r\n\r\n  TreemapSeriesModel.prototype.getViewRoot = function () {\r\n    return this._viewRoot;\r\n  };\r\n\r\n  TreemapSeriesModel.prototype.resetViewRoot = function (viewRoot) {\r\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\r\n    var root = this.getRawData().tree.root;\r\n\r\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\r\n      this._viewRoot = root;\r\n    }\r\n  };\r\n\r\n  TreemapSeriesModel.prototype.enableAriaDecal = function () {\r\n    enableAriaDecalForTree(this);\r\n  };\r\n\r\n  TreemapSeriesModel.type = 'series.treemap';\r\n  TreemapSeriesModel.layoutMode = 'box';\r\n  TreemapSeriesModel.defaultOption = {\r\n    // Disable progressive rendering\r\n    progressive: 0,\r\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\r\n    left: 'center',\r\n    top: 'middle',\r\n    width: '80%',\r\n    height: '80%',\r\n    sort: true,\r\n    clipWindow: 'origin',\r\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\r\n    leafDepth: null,\r\n    drillDownIcon: '\u25B6',\r\n    // to align specialized icon. \u25B7\u25B6\u2752\u2750\u25BC\u271A\r\n    zoomToNodeRatio: 0.32 * 0.32,\r\n    roam: true,\r\n    nodeClick: 'zoomToNode',\r\n    animation: true,\r\n    animationDurationUpdate: 900,\r\n    animationEasing: 'quinticInOut',\r\n    breadcrumb: {\r\n      show: true,\r\n      height: 22,\r\n      left: 'center',\r\n      top: 'bottom',\r\n      // right\r\n      // bottom\r\n      emptyItemWidth: 25,\r\n      itemStyle: {\r\n        color: 'rgba(0,0,0,0.7)',\r\n        textStyle: {\r\n          color: '#fff'\r\n        }\r\n      }\r\n    },\r\n    label: {\r\n      show: true,\r\n      // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\r\n      distance: 0,\r\n      padding: 5,\r\n      position: 'inside',\r\n      // formatter: null,\r\n      color: '#fff',\r\n      overflow: 'truncate' // align\r\n      // verticalAlign\r\n\r\n    },\r\n    upperLabel: {\r\n      show: false,\r\n      position: [0, '50%'],\r\n      height: 20,\r\n      // formatter: null,\r\n      // color: '#fff',\r\n      overflow: 'truncate',\r\n      // align: null,\r\n      verticalAlign: 'middle'\r\n    },\r\n    itemStyle: {\r\n      color: null,\r\n      colorAlpha: null,\r\n      colorSaturation: null,\r\n      borderWidth: 0,\r\n      gapWidth: 0,\r\n      borderColor: '#fff',\r\n      borderColorSaturation: null // If specified, borderColor will be ineffective, and the\r\n      // border color is evaluated by color of current node and\r\n      // borderColorSaturation.\r\n\r\n    },\r\n    emphasis: {\r\n      upperLabel: {\r\n        show: true,\r\n        position: [0, '50%'],\r\n        ellipsis: true,\r\n        verticalAlign: 'middle'\r\n      }\r\n    },\r\n    visualDimension: 0,\r\n    visualMin: null,\r\n    visualMax: null,\r\n    color: [],\r\n    // level[n].color (if necessary).\r\n    // + Specify color list of each level. level[0].color would be global\r\n    // color list if not specified. (see method `setDefault`).\r\n    // + But set as a empty array to forbid fetch color from global palette\r\n    // when using nodeModel.get('color'), otherwise nodes on deep level\r\n    // will always has color palette set and are not able to inherit color\r\n    // from parent node.\r\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\r\n    // legend color fetching (see seriesColor.js).\r\n    colorAlpha: null,\r\n    colorSaturation: null,\r\n    colorMappingBy: 'index',\r\n    visibleMin: 10,\r\n    // be rendered. Only works when sort is 'asc' or 'desc'.\r\n    childrenVisibleMin: null,\r\n    // grandchildren will not show.\r\n    // Why grandchildren? If not grandchildren but children,\r\n    // some siblings show children and some not,\r\n    // the appearance may be mess and not consistent,\r\n    levels: [] // Each item: {\r\n    //     visibleMin, itemStyle, visualDimension, label\r\n    // }\r\n    // data: {\r\n    //      value: [],\r\n    //      children: [],\r\n    //      link: 'http://xxx.xxx.xxx',\r\n    //      target: 'blank' or 'self'\r\n    // }\r\n\r\n  };\r\n  return TreemapSeriesModel;\r\n}(SeriesModel);\r\n/**\r\n * @param {Object} dataNode\r\n */\r\n\r\n\r\nfunction completeTreeValue(dataNode) {\r\n  // Postorder travel tree.\r\n  // If value of none-leaf node is not set,\r\n  // calculate it by suming up the value of all children.\r\n  var sum = 0;\r\n  zrUtil.each(dataNode.children, function (child) {\r\n    completeTreeValue(child);\r\n    var childValue = child.value;\r\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\r\n    sum += childValue;\r\n  });\r\n  var thisValue = dataNode.value;\r\n\r\n  if (zrUtil.isArray(thisValue)) {\r\n    thisValue = thisValue[0];\r\n  }\r\n\r\n  if (thisValue == null || isNaN(thisValue)) {\r\n    thisValue = sum;\r\n  } // Value should not less than 0.\r\n\r\n\r\n  if (thisValue < 0) {\r\n    thisValue = 0;\r\n  }\r\n\r\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\r\n}\r\n/**\r\n * set default to level configuration\r\n */\r\n\r\n\r\nfunction setDefault(levels, ecModel) {\r\n  var globalColorList = normalizeToArray(ecModel.get('color'));\r\n  var globalDecalList = normalizeToArray(ecModel.get(['aria', 'decal', 'decals']));\r\n\r\n  if (!globalColorList) {\r\n    return;\r\n  }\r\n\r\n  levels = levels || [];\r\n  var hasColorDefine;\r\n  var hasDecalDefine;\r\n  zrUtil.each(levels, function (levelDefine) {\r\n    var model = new Model(levelDefine);\r\n    var modelColor = model.get('color');\r\n    var modelDecal = model.get('decal');\r\n\r\n    if (model.get(['itemStyle', 'color']) || modelColor && modelColor !== 'none') {\r\n      hasColorDefine = true;\r\n    }\r\n\r\n    if (model.get(['itemStyle', 'decal']) || modelDecal && modelDecal !== 'none') {\r\n      hasDecalDefine = true;\r\n    }\r\n  });\r\n  var level0 = levels[0] || (levels[0] = {});\r\n\r\n  if (!hasColorDefine) {\r\n    level0.color = globalColorList.slice();\r\n  }\r\n\r\n  if (!hasDecalDefine && globalDecalList) {\r\n    level0.decal = globalDecalList.slice();\r\n  }\r\n\r\n  return levels;\r\n}\r\n\r\nexport default TreemapSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as graphic from '../../util/graphic';\r\nimport { getECData } from '../../util/innerStore';\r\nimport * as layout from '../../util/layout';\r\nimport { wrapTreePathInfo } from '../helper/treeHelper';\r\nimport { curry, defaults } from 'zrender/lib/core/util';\r\nimport { convertOptionIdName } from '../../util/model';\r\nimport { Z2_EMPHASIS_LIFT } from '../../util/states';\r\nvar TEXT_PADDING = 8;\r\nvar ITEM_GAP = 8;\r\nvar ARRAY_LENGTH = 5;\r\n\r\nvar Breadcrumb =\r\n/** @class */\r\nfunction () {\r\n  function Breadcrumb(containerGroup) {\r\n    this.group = new graphic.Group();\r\n    containerGroup.add(this.group);\r\n  }\r\n\r\n  Breadcrumb.prototype.render = function (seriesModel, api, targetNode, onSelect) {\r\n    var model = seriesModel.getModel('breadcrumb');\r\n    var thisGroup = this.group;\r\n    thisGroup.removeAll();\r\n\r\n    if (!model.get('show') || !targetNode) {\r\n      return;\r\n    }\r\n\r\n    var normalStyleModel = model.getModel('itemStyle'); // let emphasisStyleModel = model.getModel('emphasis.itemStyle');\r\n\r\n    var textStyleModel = normalStyleModel.getModel('textStyle');\r\n    var layoutParam = {\r\n      pos: {\r\n        left: model.get('left'),\r\n        right: model.get('right'),\r\n        top: model.get('top'),\r\n        bottom: model.get('bottom')\r\n      },\r\n      box: {\r\n        width: api.getWidth(),\r\n        height: api.getHeight()\r\n      },\r\n      emptyItemWidth: model.get('emptyItemWidth'),\r\n      totalWidth: 0,\r\n      renderList: []\r\n    };\r\n\r\n    this._prepare(targetNode, layoutParam, textStyleModel);\r\n\r\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\r\n\r\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\r\n  };\r\n  /**\r\n   * Prepare render list and total width\r\n   * @private\r\n   */\r\n\r\n\r\n  Breadcrumb.prototype._prepare = function (targetNode, layoutParam, textStyleModel) {\r\n    for (var node = targetNode; node; node = node.parentNode) {\r\n      var text = convertOptionIdName(node.getModel().get('name'), '');\r\n      var textRect = textStyleModel.getTextRect(text);\r\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\r\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\r\n      layoutParam.renderList.push({\r\n        node: node,\r\n        text: text,\r\n        width: itemWidth\r\n      });\r\n    }\r\n  };\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  Breadcrumb.prototype._renderContent = function (seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\r\n    // Start rendering.\r\n    var lastX = 0;\r\n    var emptyItemWidth = layoutParam.emptyItemWidth;\r\n    var height = seriesModel.get(['breadcrumb', 'height']);\r\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\r\n    var totalWidth = layoutParam.totalWidth;\r\n    var renderList = layoutParam.renderList;\r\n\r\n    for (var i = renderList.length - 1; i >= 0; i--) {\r\n      var item = renderList[i];\r\n      var itemNode = item.node;\r\n      var itemWidth = item.width;\r\n      var text = item.text; // Hdie text and shorten width if necessary.\r\n\r\n      if (totalWidth > availableSize.width) {\r\n        totalWidth -= itemWidth - emptyItemWidth;\r\n        itemWidth = emptyItemWidth;\r\n        text = null;\r\n      }\r\n\r\n      var el = new graphic.Polygon({\r\n        shape: {\r\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\r\n        },\r\n        style: defaults(normalStyleModel.getItemStyle(), {\r\n          lineJoin: 'bevel'\r\n        }),\r\n        textContent: new graphic.Text({\r\n          style: {\r\n            text: text,\r\n            fill: textStyleModel.getTextColor(),\r\n            font: textStyleModel.getFont()\r\n          }\r\n        }),\r\n        textConfig: {\r\n          position: 'inside'\r\n        },\r\n        z2: Z2_EMPHASIS_LIFT * 1e4,\r\n        onclick: curry(onSelect, itemNode)\r\n      });\r\n      el.disableLabelAnimation = true;\r\n      this.group.add(el);\r\n      packEventData(el, seriesModel, itemNode);\r\n      lastX += itemWidth + ITEM_GAP;\r\n    }\r\n  };\r\n\r\n  Breadcrumb.prototype.remove = function () {\r\n    this.group.removeAll();\r\n  };\r\n\r\n  return Breadcrumb;\r\n}();\r\n\r\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\r\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\r\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\r\n  !head && points.push([x, y + itemHeight / 2]);\r\n  return points;\r\n} // Package custom mouse event.\r\n\r\n\r\nfunction packEventData(el, seriesModel, itemNode) {\r\n  getECData(el).eventData = {\r\n    componentType: 'series',\r\n    componentSubType: 'treemap',\r\n    componentIndex: seriesModel.componentIndex,\r\n    seriesIndex: seriesModel.seriesIndex,\r\n    seriesName: seriesModel.name,\r\n    seriesType: 'treemap',\r\n    selfType: 'breadcrumb',\r\n    nodeData: {\r\n      dataIndex: itemNode && itemNode.dataIndex,\r\n      name: itemNode && itemNode.name\r\n    },\r\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\r\n  };\r\n}\r\n\r\nexport default Breadcrumb;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Animate multiple elements with a single done-callback.\r\n *\r\n * @example\r\n *  animation\r\n *      .createWrap()\r\n *      .add(el1, {x: 10, y: 10})\r\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\r\n *      .done(function () { // done })\r\n *      .start('cubicOut');\r\n */\r\nvar AnimationWrap =\r\n/** @class */\r\nfunction () {\r\n  function AnimationWrap() {\r\n    this._storage = [];\r\n    this._elExistsMap = {};\r\n  }\r\n  /**\r\n   * Caution: a el can only be added once, otherwise 'done'\r\n   * might not be called. This method checks this (by el.id),\r\n   * suppresses adding and returns false when existing el found.\r\n   *\r\n   * @return Whether adding succeeded.\r\n   */\r\n\r\n\r\n  AnimationWrap.prototype.add = function (el, target, duration, delay, easing) {\r\n    if (this._elExistsMap[el.id]) {\r\n      return false;\r\n    }\r\n\r\n    this._elExistsMap[el.id] = true;\r\n\r\n    this._storage.push({\r\n      el: el,\r\n      target: target,\r\n      duration: duration,\r\n      delay: delay,\r\n      easing: easing\r\n    });\r\n\r\n    return true;\r\n  };\r\n  /**\r\n   * Only execute when animation done/aborted.\r\n   */\r\n\r\n\r\n  AnimationWrap.prototype.finished = function (callback) {\r\n    this._finishedCallback = callback;\r\n    return this;\r\n  };\r\n  /**\r\n   * Will stop exist animation firstly.\r\n   */\r\n\r\n\r\n  AnimationWrap.prototype.start = function () {\r\n    var _this = this;\r\n\r\n    var count = this._storage.length;\r\n\r\n    var checkTerminate = function () {\r\n      count--;\r\n\r\n      if (count <= 0) {\r\n        // Guard.\r\n        _this._storage.length = 0;\r\n        _this._elExistsMap = {};\r\n        _this._finishedCallback && _this._finishedCallback();\r\n      }\r\n    };\r\n\r\n    for (var i = 0, len = this._storage.length; i < len; i++) {\r\n      var item = this._storage[i];\r\n      item.el.animateTo(item.target, {\r\n        duration: item.duration,\r\n        delay: item.delay,\r\n        easing: item.easing,\r\n        setToFinal: true,\r\n        done: checkTerminate,\r\n        aborted: checkTerminate\r\n      });\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  return AnimationWrap;\r\n}();\r\n\r\nexport function createWrap() {\r\n  return new AnimationWrap();\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport { bind, each, indexOf, curry, extend, normalizeCssArray, isFunction } from 'zrender/lib/core/util';\r\nimport * as graphic from '../../util/graphic';\r\nimport { getECData } from '../../util/innerStore';\r\nimport { isHighDownDispatcher, setAsHighDownDispatcher, setDefaultStateProxy, enableHoverFocus, Z2_EMPHASIS_LIFT } from '../../util/states';\r\nimport DataDiffer from '../../data/DataDiffer';\r\nimport * as helper from '../helper/treeHelper';\r\nimport Breadcrumb from './Breadcrumb';\r\nimport RoamController from '../../component/helper/RoamController';\r\nimport BoundingRect from 'zrender/lib/core/BoundingRect';\r\nimport * as matrix from 'zrender/lib/core/matrix';\r\nimport * as animationUtil from '../../util/animation';\r\nimport makeStyleMapper from '../../model/mixin/makeStyleMapper';\r\nimport ChartView from '../../view/Chart';\r\nimport Displayable from 'zrender/lib/graphic/Displayable';\r\nimport { makeInner, convertOptionIdName } from '../../util/model';\r\nimport { windowOpen } from '../../util/format';\r\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle';\r\nvar Group = graphic.Group;\r\nvar Rect = graphic.Rect;\r\nvar DRAG_THRESHOLD = 3;\r\nvar PATH_LABEL_NOAMAL = 'label';\r\nvar PATH_UPPERLABEL_NORMAL = 'upperLabel'; // Should larger than emphasis states lift z\r\n\r\nvar Z2_BASE = Z2_EMPHASIS_LIFT * 10; // Should bigger than every z2.\r\n\r\nvar Z2_BG = Z2_EMPHASIS_LIFT * 2;\r\nvar Z2_CONTENT = Z2_EMPHASIS_LIFT * 3;\r\nvar getStateItemStyle = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\r\n// so use `stroke` to indicate the stroke of the rect.\r\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'] // Option decal is in `DecalObject` but style.decal is in `PatternObject`.\r\n// So do not transfer decal directly.\r\n]);\r\n\r\nvar getItemStyleNormal = function (model) {\r\n  // Normal style props should include emphasis style props.\r\n  var itemStyle = getStateItemStyle(model); // Clear styles set by emphasis.\r\n\r\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\r\n  return itemStyle;\r\n};\r\n\r\nvar inner = makeInner();\r\n\r\nvar TreemapView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(TreemapView, _super);\r\n\r\n  function TreemapView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = TreemapView.type;\r\n    _this._state = 'ready';\r\n    _this._storage = createStorage();\r\n    return _this;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  TreemapView.prototype.render = function (seriesModel, ecModel, api, payload) {\r\n    var models = ecModel.findComponents({\r\n      mainType: 'series',\r\n      subType: 'treemap',\r\n      query: payload\r\n    });\r\n\r\n    if (indexOf(models, seriesModel) < 0) {\r\n      return;\r\n    }\r\n\r\n    this.seriesModel = seriesModel;\r\n    this.api = api;\r\n    this.ecModel = ecModel;\r\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\r\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\r\n    var payloadType = payload && payload.type;\r\n    var layoutInfo = seriesModel.layoutInfo;\r\n    var isInit = !this._oldTree;\r\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\r\n\r\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\r\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\r\n      direction: payload.direction\r\n    } : null;\r\n\r\n    var containerGroup = this._giveContainerGroup(layoutInfo);\r\n\r\n    var hasAnimation = seriesModel.get('animation');\r\n\r\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\r\n\r\n    hasAnimation && !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\r\n\r\n    this._resetController(api);\r\n\r\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\r\n  };\r\n\r\n  TreemapView.prototype._giveContainerGroup = function (layoutInfo) {\r\n    var containerGroup = this._containerGroup;\r\n\r\n    if (!containerGroup) {\r\n      // FIXME\r\n      // \u52A0\u4E00\u5C42containerGroup\u662F\u4E3A\u4E86clip\uFF0C\u4F46\u662F\u73B0\u5728clip\u529F\u80FD\u5E76\u6CA1\u6709\u5B9E\u73B0\u3002\r\n      containerGroup = this._containerGroup = new Group();\r\n\r\n      this._initEvents(containerGroup);\r\n\r\n      this.group.add(containerGroup);\r\n    }\r\n\r\n    containerGroup.x = layoutInfo.x;\r\n    containerGroup.y = layoutInfo.y;\r\n    return containerGroup;\r\n  };\r\n\r\n  TreemapView.prototype._doRender = function (containerGroup, seriesModel, reRoot) {\r\n    var thisTree = seriesModel.getData().tree;\r\n    var oldTree = this._oldTree; // Clear last shape records.\r\n\r\n    var lastsForAnimation = createStorage();\r\n    var thisStorage = createStorage();\r\n    var oldStorage = this._storage;\r\n    var willInvisibleEls = [];\r\n\r\n    function doRenderNode(thisNode, oldNode, parentGroup, depth) {\r\n      return renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth);\r\n    } // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\r\n    // the oldTree is actually losted, so we can not find all of the old graphic\r\n    // elements from tree. So we use this stragegy: make element storage, move\r\n    // from old storage to new storage, clear old storage.\r\n\r\n\r\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\r\n\r\n    var willDeleteEls = clearStorage(oldStorage);\r\n    this._oldTree = thisTree;\r\n    this._storage = thisStorage;\r\n    return {\r\n      lastsForAnimation: lastsForAnimation,\r\n      willDeleteEls: willDeleteEls,\r\n      renderFinally: renderFinally\r\n    };\r\n\r\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\r\n      // When 'render' is triggered by action,\r\n      // 'this' and 'old' may be the same tree,\r\n      // we use rawIndex in that case.\r\n      if (sameTree) {\r\n        oldViewChildren = thisViewChildren;\r\n        each(thisViewChildren, function (child, index) {\r\n          !child.isRemoved() && processNode(index, index);\r\n        });\r\n      } // Diff hierarchically (diff only in each subtree, but not whole).\r\n      // because, consistency of view is important.\r\n      else {\r\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(curry(processNode, null)).execute();\r\n        }\r\n\r\n      function getKey(node) {\r\n        // Identify by name or raw index.\r\n        return node.getId();\r\n      }\r\n\r\n      function processNode(newIndex, oldIndex) {\r\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\r\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\r\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\r\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\r\n      }\r\n    }\r\n\r\n    function clearStorage(storage) {\r\n      var willDeleteEls = createStorage();\r\n      storage && each(storage, function (store, storageName) {\r\n        var delEls = willDeleteEls[storageName];\r\n        each(store, function (el) {\r\n          el && (delEls.push(el), inner(el).willDelete = true);\r\n        });\r\n      });\r\n      return willDeleteEls;\r\n    }\r\n\r\n    function renderFinally() {\r\n      each(willDeleteEls, function (els) {\r\n        each(els, function (el) {\r\n          el.parent && el.parent.remove(el);\r\n        });\r\n      });\r\n      each(willInvisibleEls, function (el) {\r\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\r\n        // just mark as invisible.\r\n\r\n        el.dirty();\r\n      });\r\n    }\r\n  };\r\n\r\n  TreemapView.prototype._doAnimation = function (containerGroup, renderResult, seriesModel, reRoot) {\r\n    var durationOption = seriesModel.get('animationDurationUpdate');\r\n    var easingOption = seriesModel.get('animationEasing'); // TODO: do not support function until necessary.\r\n\r\n    var duration = (isFunction(durationOption) ? 0 : durationOption) || 0;\r\n    var easing = (isFunction(easingOption) ? null : easingOption) || 'cubicOut';\r\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\r\n\r\n    each(renderResult.willDeleteEls, function (store, storageName) {\r\n      each(store, function (el, rawIndex) {\r\n        if (el.invisible) {\r\n          return;\r\n        }\r\n\r\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\r\n\r\n        var target;\r\n        var innerStore = inner(parent);\r\n\r\n        if (reRoot && reRoot.direction === 'drillDown') {\r\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\r\n          // Only `content` will enter this branch, because\r\n          // `background` and `nodeGroup` will not be deleted.\r\n          ? {\r\n            shape: {\r\n              x: 0,\r\n              y: 0,\r\n              width: innerStore.nodeWidth,\r\n              height: innerStore.nodeHeight\r\n            },\r\n            style: {\r\n              opacity: 0\r\n            }\r\n          } // Others.\r\n          : {\r\n            style: {\r\n              opacity: 0\r\n            }\r\n          };\r\n        } else {\r\n          var targetX = 0;\r\n          var targetY = 0;\r\n\r\n          if (!innerStore.willDelete) {\r\n            // Let node animate to right-bottom corner, cooperating with fadeout,\r\n            // which is appropriate for user understanding.\r\n            // Divided by 2 for reRoot rolling up effect.\r\n            targetX = innerStore.nodeWidth / 2;\r\n            targetY = innerStore.nodeHeight / 2;\r\n          }\r\n\r\n          target = storageName === 'nodeGroup' ? {\r\n            x: targetX,\r\n            y: targetY,\r\n            style: {\r\n              opacity: 0\r\n            }\r\n          } : {\r\n            shape: {\r\n              x: targetX,\r\n              y: targetY,\r\n              width: 0,\r\n              height: 0\r\n            },\r\n            style: {\r\n              opacity: 0\r\n            }\r\n          };\r\n        } // TODO: do not support delay until necessary.\r\n\r\n\r\n        target && animationWrap.add(el, target, duration, 0, easing);\r\n      });\r\n    }); // Make other animations\r\n\r\n    each(this._storage, function (store, storageName) {\r\n      each(store, function (el, rawIndex) {\r\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\r\n        var target = {};\r\n\r\n        if (!last) {\r\n          return;\r\n        }\r\n\r\n        if (el instanceof graphic.Group) {\r\n          if (last.oldX != null) {\r\n            target.x = el.x;\r\n            target.y = el.y;\r\n            el.x = last.oldX;\r\n            el.y = last.oldY;\r\n          }\r\n        } else {\r\n          if (last.oldShape) {\r\n            target.shape = extend({}, el.shape);\r\n            el.setShape(last.oldShape);\r\n          }\r\n\r\n          if (last.fadein) {\r\n            el.setStyle('opacity', 0);\r\n            target.style = {\r\n              opacity: 1\r\n            };\r\n          } // When animation is stopped for succedent animation starting,\r\n          // el.style.opacity might not be 1\r\n          else if (el.style.opacity !== 1) {\r\n              target.style = {\r\n                opacity: 1\r\n              };\r\n            }\r\n        }\r\n\r\n        animationWrap.add(el, target, duration, 0, easing);\r\n      });\r\n    }, this);\r\n    this._state = 'animating';\r\n    animationWrap.finished(bind(function () {\r\n      this._state = 'ready';\r\n      renderResult.renderFinally();\r\n    }, this)).start();\r\n  };\r\n\r\n  TreemapView.prototype._resetController = function (api) {\r\n    var controller = this._controller; // Init controller.\r\n\r\n    if (!controller) {\r\n      controller = this._controller = new RoamController(api.getZr());\r\n      controller.enable(this.seriesModel.get('roam'));\r\n      controller.on('pan', bind(this._onPan, this));\r\n      controller.on('zoom', bind(this._onZoom, this));\r\n    }\r\n\r\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\r\n    controller.setPointerChecker(function (e, x, y) {\r\n      return rect.contain(x, y);\r\n    });\r\n  };\r\n\r\n  TreemapView.prototype._clearController = function () {\r\n    var controller = this._controller;\r\n\r\n    if (controller) {\r\n      controller.dispose();\r\n      controller = null;\r\n    }\r\n  };\r\n\r\n  TreemapView.prototype._onPan = function (e) {\r\n    if (this._state !== 'animating' && (Math.abs(e.dx) > DRAG_THRESHOLD || Math.abs(e.dy) > DRAG_THRESHOLD)) {\r\n      // These param must not be cached.\r\n      var root = this.seriesModel.getData().tree.root;\r\n\r\n      if (!root) {\r\n        return;\r\n      }\r\n\r\n      var rootLayout = root.getLayout();\r\n\r\n      if (!rootLayout) {\r\n        return;\r\n      }\r\n\r\n      this.api.dispatchAction({\r\n        type: 'treemapMove',\r\n        from: this.uid,\r\n        seriesId: this.seriesModel.id,\r\n        rootRect: {\r\n          x: rootLayout.x + e.dx,\r\n          y: rootLayout.y + e.dy,\r\n          width: rootLayout.width,\r\n          height: rootLayout.height\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  TreemapView.prototype._onZoom = function (e) {\r\n    var mouseX = e.originX;\r\n    var mouseY = e.originY;\r\n\r\n    if (this._state !== 'animating') {\r\n      // These param must not be cached.\r\n      var root = this.seriesModel.getData().tree.root;\r\n\r\n      if (!root) {\r\n        return;\r\n      }\r\n\r\n      var rootLayout = root.getLayout();\r\n\r\n      if (!rootLayout) {\r\n        return;\r\n      }\r\n\r\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\r\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\r\n\r\n      mouseX -= layoutInfo.x;\r\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\r\n\r\n      var m = matrix.create();\r\n      matrix.translate(m, m, [-mouseX, -mouseY]);\r\n      matrix.scale(m, m, [e.scale, e.scale]);\r\n      matrix.translate(m, m, [mouseX, mouseY]);\r\n      rect.applyTransform(m);\r\n      this.api.dispatchAction({\r\n        type: 'treemapRender',\r\n        from: this.uid,\r\n        seriesId: this.seriesModel.id,\r\n        rootRect: {\r\n          x: rect.x,\r\n          y: rect.y,\r\n          width: rect.width,\r\n          height: rect.height\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  TreemapView.prototype._initEvents = function (containerGroup) {\r\n    var _this = this;\r\n\r\n    containerGroup.on('click', function (e) {\r\n      if (_this._state !== 'ready') {\r\n        return;\r\n      }\r\n\r\n      var nodeClick = _this.seriesModel.get('nodeClick', true);\r\n\r\n      if (!nodeClick) {\r\n        return;\r\n      }\r\n\r\n      var targetInfo = _this.findTarget(e.offsetX, e.offsetY);\r\n\r\n      if (!targetInfo) {\r\n        return;\r\n      }\r\n\r\n      var node = targetInfo.node;\r\n\r\n      if (node.getLayout().isLeafRoot) {\r\n        _this._rootToNode(targetInfo);\r\n      } else {\r\n        if (nodeClick === 'zoomToNode') {\r\n          _this._zoomToNode(targetInfo);\r\n        } else if (nodeClick === 'link') {\r\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\r\n          var link = itemModel.get('link', true);\r\n          var linkTarget = itemModel.get('target', true) || 'blank';\r\n          link && windowOpen(link, linkTarget);\r\n        }\r\n      }\r\n    }, this);\r\n  };\r\n\r\n  TreemapView.prototype._renderBreadcrumb = function (seriesModel, api, targetInfo) {\r\n    var _this = this;\r\n\r\n    if (!targetInfo) {\r\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\r\n        node: seriesModel.getViewRoot()\r\n      } // FIXME\r\n      // better way?\r\n      // Find breadcrumb tail on center of containerGroup.\r\n      : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\r\n\r\n      if (!targetInfo) {\r\n        targetInfo = {\r\n          node: seriesModel.getData().tree.root\r\n        };\r\n      }\r\n    }\r\n\r\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, function (node) {\r\n      if (_this._state !== 'animating') {\r\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? _this._rootToNode({\r\n          node: node\r\n        }) : _this._zoomToNode({\r\n          node: node\r\n        });\r\n      }\r\n    });\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  TreemapView.prototype.remove = function () {\r\n    this._clearController();\r\n\r\n    this._containerGroup && this._containerGroup.removeAll();\r\n    this._storage = createStorage();\r\n    this._state = 'ready';\r\n    this._breadcrumb && this._breadcrumb.remove();\r\n  };\r\n\r\n  TreemapView.prototype.dispose = function () {\r\n    this._clearController();\r\n  };\r\n\r\n  TreemapView.prototype._zoomToNode = function (targetInfo) {\r\n    this.api.dispatchAction({\r\n      type: 'treemapZoomToNode',\r\n      from: this.uid,\r\n      seriesId: this.seriesModel.id,\r\n      targetNode: targetInfo.node\r\n    });\r\n  };\r\n\r\n  TreemapView.prototype._rootToNode = function (targetInfo) {\r\n    this.api.dispatchAction({\r\n      type: 'treemapRootToNode',\r\n      from: this.uid,\r\n      seriesId: this.seriesModel.id,\r\n      targetNode: targetInfo.node\r\n    });\r\n  };\r\n  /**\r\n   * @public\r\n   * @param {number} x Global coord x.\r\n   * @param {number} y Global coord y.\r\n   * @return {Object} info If not found, return undefined;\r\n   * @return {number} info.node Target node.\r\n   * @return {number} info.offsetX x refer to target node.\r\n   * @return {number} info.offsetY y refer to target node.\r\n   */\r\n\r\n\r\n  TreemapView.prototype.findTarget = function (x, y) {\r\n    var targetInfo;\r\n    var viewRoot = this.seriesModel.getViewRoot();\r\n    viewRoot.eachNode({\r\n      attr: 'viewChildren',\r\n      order: 'preorder'\r\n    }, function (node) {\r\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\r\n\r\n\r\n      if (bgEl) {\r\n        var point = bgEl.transformCoordToLocal(x, y);\r\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\r\n\r\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\r\n          targetInfo = {\r\n            node: node,\r\n            offsetX: point[0],\r\n            offsetY: point[1]\r\n          };\r\n        } else {\r\n          return false; // Suppress visit subtree.\r\n        }\r\n      }\r\n    }, this);\r\n    return targetInfo;\r\n  };\r\n\r\n  TreemapView.type = 'treemap';\r\n  return TreemapView;\r\n}(ChartView);\r\n/**\r\n * @inner\r\n */\r\n\r\n\r\nfunction createStorage() {\r\n  return {\r\n    nodeGroup: [],\r\n    background: [],\r\n    content: []\r\n  };\r\n}\r\n/**\r\n * @inner\r\n * @return Return undefined means do not travel further.\r\n */\r\n\r\n\r\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\r\n  // Whether under viewRoot.\r\n  if (!thisNode) {\r\n    // Deleting nodes will be performed finally. This method just find\r\n    // element from old storage, or create new element, set them to new\r\n    // storage, and set styles.\r\n    return;\r\n  } // -------------------------------------------------------------------\r\n  // Start of closure variables available in \"Procedures in renderNode\".\r\n\r\n\r\n  var thisLayout = thisNode.getLayout();\r\n  var data = seriesModel.getData();\r\n  var nodeModel = thisNode.getModel(); // Only for enabling highlight/downplay. Clear firstly.\r\n  // Because some node will not be rendered.\r\n\r\n  data.setItemGraphicEl(thisNode.dataIndex, null);\r\n\r\n  if (!thisLayout || !thisLayout.isInView) {\r\n    return;\r\n  }\r\n\r\n  var thisWidth = thisLayout.width;\r\n  var thisHeight = thisLayout.height;\r\n  var borderWidth = thisLayout.borderWidth;\r\n  var thisInvisible = thisLayout.invisible;\r\n  var thisRawIndex = thisNode.getRawIndex();\r\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\r\n  var thisViewChildren = thisNode.viewChildren;\r\n  var upperHeight = thisLayout.upperHeight;\r\n  var isParent = thisViewChildren && thisViewChildren.length;\r\n  var itemStyleNormalModel = nodeModel.getModel('itemStyle');\r\n  var itemStyleEmphasisModel = nodeModel.getModel(['emphasis', 'itemStyle']);\r\n  var itemStyleBlurModel = nodeModel.getModel(['blur', 'itemStyle']);\r\n  var itemStyleSelectModel = nodeModel.getModel(['select', 'itemStyle']);\r\n  var borderRadius = itemStyleNormalModel.get('borderRadius') || 0; // End of closure ariables available in \"Procedures in renderNode\".\r\n  // -----------------------------------------------------------------\r\n  // Node group\r\n\r\n  var group = giveGraphic('nodeGroup', Group);\r\n\r\n  if (!group) {\r\n    return;\r\n  }\r\n\r\n  parentGroup.add(group); // x,y are not set when el is above view root.\r\n\r\n  group.x = thisLayout.x || 0;\r\n  group.y = thisLayout.y || 0;\r\n  group.markRedraw();\r\n  inner(group).nodeWidth = thisWidth;\r\n  inner(group).nodeHeight = thisHeight;\r\n\r\n  if (thisLayout.isAboveViewRoot) {\r\n    return group;\r\n  } // Background\r\n\r\n\r\n  var bg = giveGraphic('background', Rect, depth, Z2_BG);\r\n  bg && renderBackground(group, bg, isParent && thisLayout.upperLabelHeight);\r\n  var focus = nodeModel.get(['emphasis', 'focus']);\r\n  var blurScope = nodeModel.get(['emphasis', 'blurScope']);\r\n  var focusOrIndices = focus === 'ancestor' ? thisNode.getAncestorsIndices() : focus === 'descendant' ? thisNode.getDescendantIndices() : focus; // No children, render content.\r\n\r\n  if (isParent) {\r\n    // Because of the implementation about \"traverse\" in graphic hover style, we\r\n    // can not set hover listener on the \"group\" of non-leaf node. Otherwise the\r\n    // hover event from the descendents will be listenered.\r\n    if (isHighDownDispatcher(group)) {\r\n      setAsHighDownDispatcher(group, false);\r\n    }\r\n\r\n    if (bg) {\r\n      setAsHighDownDispatcher(bg, true); // Only for enabling highlight/downplay.\r\n\r\n      data.setItemGraphicEl(thisNode.dataIndex, bg);\r\n      enableHoverFocus(bg, focusOrIndices, blurScope);\r\n    }\r\n  } else {\r\n    var content = giveGraphic('content', Rect, depth, Z2_CONTENT);\r\n    content && renderContent(group, content);\r\n    bg.disableMorphing = true;\r\n\r\n    if (bg && isHighDownDispatcher(bg)) {\r\n      setAsHighDownDispatcher(bg, false);\r\n    }\r\n\r\n    setAsHighDownDispatcher(group, true); // Only for enabling highlight/downplay.\r\n\r\n    data.setItemGraphicEl(thisNode.dataIndex, group);\r\n    enableHoverFocus(group, focusOrIndices, blurScope);\r\n  }\r\n\r\n  return group; // ----------------------------\r\n  // | Procedures in renderNode |\r\n  // ----------------------------\r\n\r\n  function renderBackground(group, bg, useUpperLabel) {\r\n    var ecData = getECData(bg); // For tooltip.\r\n\r\n    ecData.dataIndex = thisNode.dataIndex;\r\n    ecData.seriesIndex = seriesModel.seriesIndex;\r\n    bg.setShape({\r\n      x: 0,\r\n      y: 0,\r\n      width: thisWidth,\r\n      height: thisHeight,\r\n      r: borderRadius\r\n    });\r\n\r\n    if (thisInvisible) {\r\n      // If invisible, do not set visual, otherwise the element will\r\n      // change immediately before animation. We think it is OK to\r\n      // remain its origin color when moving out of the view window.\r\n      processInvisible(bg);\r\n    } else {\r\n      bg.invisible = false;\r\n      var style = thisNode.getVisual('style');\r\n      var visualBorderColor = style.stroke;\r\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\r\n      normalStyle.fill = visualBorderColor;\r\n      var emphasisStyle = getStateItemStyle(itemStyleEmphasisModel);\r\n      emphasisStyle.fill = itemStyleEmphasisModel.get('borderColor');\r\n      var blurStyle = getStateItemStyle(itemStyleBlurModel);\r\n      blurStyle.fill = itemStyleBlurModel.get('borderColor');\r\n      var selectStyle = getStateItemStyle(itemStyleSelectModel);\r\n      selectStyle.fill = itemStyleSelectModel.get('borderColor');\r\n\r\n      if (useUpperLabel) {\r\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\r\n        prepareText( // PENDING: convert ZRColor to ColorString for text.\r\n        bg, visualBorderColor, style.opacity, {\r\n          x: borderWidth,\r\n          y: 0,\r\n          width: upperLabelWidth,\r\n          height: upperHeight\r\n        });\r\n      } // For old bg.\r\n      else {\r\n          bg.removeTextContent();\r\n        }\r\n\r\n      bg.setStyle(normalStyle);\r\n      bg.ensureState('emphasis').style = emphasisStyle;\r\n      bg.ensureState('blur').style = blurStyle;\r\n      bg.ensureState('select').style = selectStyle;\r\n      setDefaultStateProxy(bg);\r\n    }\r\n\r\n    group.add(bg);\r\n  }\r\n\r\n  function renderContent(group, content) {\r\n    var ecData = getECData(content); // For tooltip.\r\n\r\n    ecData.dataIndex = thisNode.dataIndex;\r\n    ecData.seriesIndex = seriesModel.seriesIndex;\r\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\r\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\r\n    content.culling = true;\r\n    content.setShape({\r\n      x: borderWidth,\r\n      y: borderWidth,\r\n      width: contentWidth,\r\n      height: contentHeight,\r\n      r: borderRadius\r\n    });\r\n\r\n    if (thisInvisible) {\r\n      // If invisible, do not set visual, otherwise the element will\r\n      // change immediately before animation. We think it is OK to\r\n      // remain its origin color when moving out of the view window.\r\n      processInvisible(content);\r\n    } else {\r\n      content.invisible = false;\r\n      var nodeStyle = thisNode.getVisual('style');\r\n      var visualColor = nodeStyle.fill;\r\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\r\n      normalStyle.fill = visualColor;\r\n      normalStyle.decal = nodeStyle.decal;\r\n      var emphasisStyle = getStateItemStyle(itemStyleEmphasisModel);\r\n      var blurStyle = getStateItemStyle(itemStyleBlurModel);\r\n      var selectStyle = getStateItemStyle(itemStyleSelectModel); // PENDING: convert ZRColor to ColorString for text.\r\n\r\n      prepareText(content, visualColor, nodeStyle.opacity, null);\r\n      content.setStyle(normalStyle);\r\n      content.ensureState('emphasis').style = emphasisStyle;\r\n      content.ensureState('blur').style = blurStyle;\r\n      content.ensureState('select').style = selectStyle;\r\n      setDefaultStateProxy(content);\r\n    }\r\n\r\n    group.add(content);\r\n  }\r\n\r\n  function processInvisible(element) {\r\n    // Delay invisible setting utill animation finished,\r\n    // avoid element vanish suddenly before animation.\r\n    !element.invisible && willInvisibleEls.push(element);\r\n  }\r\n\r\n  function prepareText(rectEl, visualColor, visualOpacity, // Can be null/undefined\r\n  upperLabelRect) {\r\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\r\n    var defaultText = convertOptionIdName(nodeModel.get('name'), null);\r\n    var isShow = normalLabelModel.getShallow('show');\r\n    setLabelStyle(rectEl, getLabelStatesModels(nodeModel, upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL), {\r\n      defaultText: isShow ? defaultText : null,\r\n      inheritColor: visualColor,\r\n      defaultOpacity: visualOpacity,\r\n      labelFetcher: seriesModel,\r\n      labelDataIndex: thisNode.dataIndex\r\n    });\r\n    var textEl = rectEl.getTextContent();\r\n\r\n    if (!textEl) {\r\n      return;\r\n    }\r\n\r\n    var textStyle = textEl.style;\r\n    var textPadding = normalizeCssArray(textStyle.padding || 0);\r\n\r\n    if (upperLabelRect) {\r\n      rectEl.setTextConfig({\r\n        layoutRect: upperLabelRect\r\n      });\r\n      textEl.disableLabelLayout = true;\r\n    }\r\n\r\n    textEl.beforeUpdate = function () {\r\n      var width = Math.max((upperLabelRect ? upperLabelRect.width : rectEl.shape.width) - textPadding[1] - textPadding[3], 0);\r\n      var height = Math.max((upperLabelRect ? upperLabelRect.height : rectEl.shape.height) - textPadding[0] - textPadding[2], 0);\r\n\r\n      if (textStyle.width !== width || textStyle.height !== height) {\r\n        textEl.setStyle({\r\n          width: width,\r\n          height: height\r\n        });\r\n      }\r\n    };\r\n\r\n    textStyle.truncateMinChar = 2;\r\n    textStyle.lineOverflow = 'truncate';\r\n    addDrillDownIcon(textStyle, upperLabelRect, thisLayout);\r\n    var textEmphasisState = textEl.getState('emphasis');\r\n    addDrillDownIcon(textEmphasisState ? textEmphasisState.style : null, upperLabelRect, thisLayout);\r\n  }\r\n\r\n  function addDrillDownIcon(style, upperLabelRect, thisLayout) {\r\n    var text = style ? style.text : null;\r\n\r\n    if (!upperLabelRect && thisLayout.isLeafRoot && text != null) {\r\n      var iconChar = seriesModel.get('drillDownIcon', true);\r\n      style.text = iconChar ? iconChar + ' ' + text : text;\r\n    }\r\n  }\r\n\r\n  function giveGraphic(storageName, Ctor, depth, z) {\r\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\r\n    var lasts = lastsForAnimation[storageName];\r\n\r\n    if (element) {\r\n      // Remove from oldStorage\r\n      oldStorage[storageName][oldRawIndex] = null;\r\n      prepareAnimationWhenHasOld(lasts, element);\r\n    } // If invisible and no old element, do not create new element (for optimizing).\r\n    else if (!thisInvisible) {\r\n        element = new Ctor();\r\n\r\n        if (element instanceof Displayable) {\r\n          element.z2 = calculateZ2(depth, z);\r\n        }\r\n\r\n        prepareAnimationWhenNoOld(lasts, element);\r\n      } // Set to thisStorage\r\n\r\n\r\n    return thisStorage[storageName][thisRawIndex] = element;\r\n  }\r\n\r\n  function prepareAnimationWhenHasOld(lasts, element) {\r\n    var lastCfg = lasts[thisRawIndex] = {};\r\n\r\n    if (element instanceof Group) {\r\n      lastCfg.oldX = element.x;\r\n      lastCfg.oldY = element.y;\r\n    } else {\r\n      lastCfg.oldShape = extend({}, element.shape);\r\n    }\r\n  } // If a element is new, we need to find the animation start point carefully,\r\n  // otherwise it will looks strange when 'zoomToNode'.\r\n\r\n\r\n  function prepareAnimationWhenNoOld(lasts, element) {\r\n    var lastCfg = lasts[thisRawIndex] = {};\r\n    var parentNode = thisNode.parentNode;\r\n    var isGroup = element instanceof graphic.Group;\r\n\r\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\r\n      var parentOldX = 0;\r\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\r\n      // For convenience, get old bounding rect from background.\r\n\r\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\r\n\r\n      if (!reRoot && parentOldBg && parentOldBg.oldShape) {\r\n        parentOldX = parentOldBg.oldShape.width;\r\n        parentOldY = parentOldBg.oldShape.height;\r\n      } // When no parent old shape found, its parent is new too,\r\n      // so we can just use {x:0, y:0}.\r\n\r\n\r\n      if (isGroup) {\r\n        lastCfg.oldX = 0;\r\n        lastCfg.oldY = parentOldY;\r\n      } else {\r\n        lastCfg.oldShape = {\r\n          x: parentOldX,\r\n          y: parentOldY,\r\n          width: 0,\r\n          height: 0\r\n        };\r\n      }\r\n    } // Fade in, user can be aware that these nodes are new.\r\n\r\n\r\n    lastCfg.fadein = !isGroup;\r\n  }\r\n} // We can not set all backgroud with the same z, Because the behaviour of\r\n// drill down and roll up differ background creation sequence from tree\r\n// hierarchy sequence, which cause that lowser background element overlap\r\n// upper ones. So we calculate z based on depth.\r\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\r\n// treemap with large z overlaps other components.\r\n\r\n\r\nfunction calculateZ2(depth, z2InLevel) {\r\n  return depth * Z2_BASE + z2InLevel;\r\n}\r\n\r\nexport default TreemapView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as zrColor from 'zrender/lib/tool/color';\r\nimport { linearMap } from '../util/number';\r\nvar each = zrUtil.each;\r\nvar isObject = zrUtil.isObject;\r\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\r\n\r\nvar VisualMapping =\r\n/** @class */\r\nfunction () {\r\n  function VisualMapping(option) {\r\n    var mappingMethod = option.mappingMethod;\r\n    var visualType = option.type;\r\n    var thisOption = this.option = zrUtil.clone(option);\r\n    this.type = visualType;\r\n    this.mappingMethod = mappingMethod;\r\n    this._normalizeData = normalizers[mappingMethod];\r\n    var visualHandler = VisualMapping.visualHandlers[visualType];\r\n    this.applyVisual = visualHandler.applyVisual;\r\n    this.getColorMapper = visualHandler.getColorMapper;\r\n    this._normalizedToVisual = visualHandler._normalizedToVisual[mappingMethod];\r\n\r\n    if (mappingMethod === 'piecewise') {\r\n      normalizeVisualRange(thisOption);\r\n      preprocessForPiecewise(thisOption);\r\n    } else if (mappingMethod === 'category') {\r\n      thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\r\n      // which need no more preprocess except normalize visual.\r\n      : normalizeVisualRange(thisOption, true);\r\n    } else {\r\n      // mappingMethod === 'linear' or 'fixed'\r\n      zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\r\n      normalizeVisualRange(thisOption);\r\n    }\r\n  }\r\n\r\n  VisualMapping.prototype.mapValueToVisual = function (value) {\r\n    var normalized = this._normalizeData(value);\r\n\r\n    return this._normalizedToVisual(normalized, value);\r\n  };\r\n\r\n  VisualMapping.prototype.getNormalizer = function () {\r\n    return zrUtil.bind(this._normalizeData, this);\r\n  };\r\n  /**\r\n   * List available visual types.\r\n   *\r\n   * @public\r\n   * @return {Array.<string>}\r\n   */\r\n\r\n\r\n  VisualMapping.listVisualTypes = function () {\r\n    return zrUtil.keys(VisualMapping.visualHandlers);\r\n  }; // /**\r\n  //  * @public\r\n  //  */\r\n  // static addVisualHandler(name, handler) {\r\n  //     visualHandlers[name] = handler;\r\n  // }\r\n\r\n  /**\r\n   * @public\r\n   */\r\n\r\n\r\n  VisualMapping.isValidType = function (visualType) {\r\n    return VisualMapping.visualHandlers.hasOwnProperty(visualType);\r\n  };\r\n  /**\r\n   * Convinent method.\r\n   * Visual can be Object or Array or primary type.\r\n   */\r\n\r\n\r\n  VisualMapping.eachVisual = function (visual, callback, context) {\r\n    if (zrUtil.isObject(visual)) {\r\n      zrUtil.each(visual, callback, context);\r\n    } else {\r\n      callback.call(context, visual);\r\n    }\r\n  };\r\n\r\n  VisualMapping.mapVisual = function (visual, callback, context) {\r\n    var isPrimary;\r\n    var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\r\n    VisualMapping.eachVisual(visual, function (v, key) {\r\n      var newVal = callback.call(context, v, key);\r\n      isPrimary ? newVisual = newVal : newVisual[key] = newVal;\r\n    });\r\n    return newVisual;\r\n  };\r\n  /**\r\n   * Retrieve visual properties from given object.\r\n   */\r\n\r\n\r\n  VisualMapping.retrieveVisuals = function (obj) {\r\n    var ret = {};\r\n    var hasVisual;\r\n    obj && each(VisualMapping.visualHandlers, function (h, visualType) {\r\n      if (obj.hasOwnProperty(visualType)) {\r\n        ret[visualType] = obj[visualType];\r\n        hasVisual = true;\r\n      }\r\n    });\r\n    return hasVisual ? ret : null;\r\n  };\r\n  /**\r\n   * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\r\n   *\r\n   * @public\r\n   * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\r\n   *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\r\n   * @return {Array.<string>} Sorted visual types.\r\n   */\r\n\r\n\r\n  VisualMapping.prepareVisualTypes = function (visualTypes) {\r\n    if (zrUtil.isArray(visualTypes)) {\r\n      visualTypes = visualTypes.slice();\r\n    } else if (isObject(visualTypes)) {\r\n      var types_1 = [];\r\n      each(visualTypes, function (item, type) {\r\n        types_1.push(type);\r\n      });\r\n      visualTypes = types_1;\r\n    } else {\r\n      return [];\r\n    }\r\n\r\n    visualTypes.sort(function (type1, type2) {\r\n      // color should be front of colorSaturation, colorAlpha, ...\r\n      // symbol and symbolSize do not matter.\r\n      return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\r\n    });\r\n    return visualTypes;\r\n  };\r\n  /**\r\n   * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\r\n   * Other visuals are only depends on themself.\r\n   */\r\n\r\n\r\n  VisualMapping.dependsOn = function (visualType1, visualType2) {\r\n    return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\r\n  };\r\n  /**\r\n   * @param value\r\n   * @param pieceList [{value: ..., interval: [min, max]}, ...]\r\n   *                         Always from small to big.\r\n   * @param findClosestWhenOutside Default to be false\r\n   * @return index\r\n   */\r\n\r\n\r\n  VisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\r\n    var possibleI;\r\n    var abs = Infinity; // value has the higher priority.\r\n\r\n    for (var i = 0, len = pieceList.length; i < len; i++) {\r\n      var pieceValue = pieceList[i].value;\r\n\r\n      if (pieceValue != null) {\r\n        if (pieceValue === value // FIXME\r\n        // It is supposed to compare value according to value type of dimension,\r\n        // but currently value type can exactly be string or number.\r\n        // Compromise for numeric-like string (like '12'), especially\r\n        // in the case that visualMap.categories is ['22', '33'].\r\n        || typeof pieceValue === 'string' && pieceValue === value + '') {\r\n          return i;\r\n        }\r\n\r\n        findClosestWhenOutside && updatePossible(pieceValue, i);\r\n      }\r\n    }\r\n\r\n    for (var i = 0, len = pieceList.length; i < len; i++) {\r\n      var piece = pieceList[i];\r\n      var interval = piece.interval;\r\n      var close_1 = piece.close;\r\n\r\n      if (interval) {\r\n        if (interval[0] === -Infinity) {\r\n          if (littleThan(close_1[1], value, interval[1])) {\r\n            return i;\r\n          }\r\n        } else if (interval[1] === Infinity) {\r\n          if (littleThan(close_1[0], interval[0], value)) {\r\n            return i;\r\n          }\r\n        } else if (littleThan(close_1[0], interval[0], value) && littleThan(close_1[1], value, interval[1])) {\r\n          return i;\r\n        }\r\n\r\n        findClosestWhenOutside && updatePossible(interval[0], i);\r\n        findClosestWhenOutside && updatePossible(interval[1], i);\r\n      }\r\n    }\r\n\r\n    if (findClosestWhenOutside) {\r\n      return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\r\n    }\r\n\r\n    function updatePossible(val, index) {\r\n      var newAbs = Math.abs(val - value);\r\n\r\n      if (newAbs < abs) {\r\n        abs = newAbs;\r\n        possibleI = index;\r\n      }\r\n    }\r\n  };\r\n\r\n  VisualMapping.visualHandlers = {\r\n    color: {\r\n      applyVisual: makeApplyVisual('color'),\r\n      getColorMapper: function () {\r\n        var thisOption = this.option;\r\n        return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\r\n          !isNormalized && (value = this._normalizeData(value));\r\n          return doMapCategory.call(this, value);\r\n        } : function (value, isNormalized, out) {\r\n          // If output rgb array\r\n          // which will be much faster and useful in pixel manipulation\r\n          var returnRGBArray = !!out;\r\n          !isNormalized && (value = this._normalizeData(value));\r\n          out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\r\n          return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\r\n        }, this);\r\n      },\r\n      _normalizedToVisual: {\r\n        linear: function (normalized) {\r\n          return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\r\n        },\r\n        category: doMapCategory,\r\n        piecewise: function (normalized, value) {\r\n          var result = getSpecifiedVisual.call(this, value);\r\n\r\n          if (result == null) {\r\n            result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\r\n          }\r\n\r\n          return result;\r\n        },\r\n        fixed: doMapFixed\r\n      }\r\n    },\r\n    colorHue: makePartialColorVisualHandler(function (color, value) {\r\n      return zrColor.modifyHSL(color, value);\r\n    }),\r\n    colorSaturation: makePartialColorVisualHandler(function (color, value) {\r\n      return zrColor.modifyHSL(color, null, value);\r\n    }),\r\n    colorLightness: makePartialColorVisualHandler(function (color, value) {\r\n      return zrColor.modifyHSL(color, null, null, value);\r\n    }),\r\n    colorAlpha: makePartialColorVisualHandler(function (color, value) {\r\n      return zrColor.modifyAlpha(color, value);\r\n    }),\r\n    decal: {\r\n      applyVisual: makeApplyVisual('decal'),\r\n      _normalizedToVisual: {\r\n        linear: null,\r\n        category: doMapCategory,\r\n        piecewise: null,\r\n        fixed: null\r\n      }\r\n    },\r\n    opacity: {\r\n      applyVisual: makeApplyVisual('opacity'),\r\n      _normalizedToVisual: createNormalizedToNumericVisual([0, 1])\r\n    },\r\n    liftZ: {\r\n      applyVisual: makeApplyVisual('liftZ'),\r\n      _normalizedToVisual: {\r\n        linear: doMapFixed,\r\n        category: doMapFixed,\r\n        piecewise: doMapFixed,\r\n        fixed: doMapFixed\r\n      }\r\n    },\r\n    symbol: {\r\n      applyVisual: function (value, getter, setter) {\r\n        var symbolCfg = this.mapValueToVisual(value);\r\n        setter('symbol', symbolCfg);\r\n      },\r\n      _normalizedToVisual: {\r\n        linear: doMapToArray,\r\n        category: doMapCategory,\r\n        piecewise: function (normalized, value) {\r\n          var result = getSpecifiedVisual.call(this, value);\r\n\r\n          if (result == null) {\r\n            result = doMapToArray.call(this, normalized);\r\n          }\r\n\r\n          return result;\r\n        },\r\n        fixed: doMapFixed\r\n      }\r\n    },\r\n    symbolSize: {\r\n      applyVisual: makeApplyVisual('symbolSize'),\r\n      _normalizedToVisual: createNormalizedToNumericVisual([0, 1])\r\n    }\r\n  };\r\n  return VisualMapping;\r\n}();\r\n\r\nfunction preprocessForPiecewise(thisOption) {\r\n  var pieceList = thisOption.pieceList;\r\n  thisOption.hasSpecialVisual = false;\r\n  zrUtil.each(pieceList, function (piece, index) {\r\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\r\n    // a visual range, so it does not need to be normalized.\r\n\r\n    if (piece.visual != null) {\r\n      thisOption.hasSpecialVisual = true;\r\n    }\r\n  });\r\n}\r\n\r\nfunction preprocessForSpecifiedCategory(thisOption) {\r\n  // Hash categories.\r\n  var categories = thisOption.categories;\r\n  var categoryMap = thisOption.categoryMap = {};\r\n  var visual = thisOption.visual;\r\n  each(categories, function (cate, index) {\r\n    categoryMap[cate] = index;\r\n  }); // Process visual map input.\r\n\r\n  if (!zrUtil.isArray(visual)) {\r\n    var visualArr_1 = [];\r\n\r\n    if (zrUtil.isObject(visual)) {\r\n      each(visual, function (v, cate) {\r\n        var index = categoryMap[cate];\r\n        visualArr_1[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\r\n      });\r\n    } else {\r\n      // Is primary type, represents default visual.\r\n      visualArr_1[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\r\n    }\r\n\r\n    visual = setVisualToOption(thisOption, visualArr_1);\r\n  } // Remove categories that has no visual,\r\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\r\n\r\n\r\n  for (var i = categories.length - 1; i >= 0; i--) {\r\n    if (visual[i] == null) {\r\n      delete categoryMap[categories[i]];\r\n      categories.pop();\r\n    }\r\n  }\r\n}\r\n\r\nfunction normalizeVisualRange(thisOption, isCategory) {\r\n  var visual = thisOption.visual;\r\n  var visualArr = [];\r\n\r\n  if (zrUtil.isObject(visual)) {\r\n    each(visual, function (v) {\r\n      visualArr.push(v);\r\n    });\r\n  } else if (visual != null) {\r\n    visualArr.push(visual);\r\n  }\r\n\r\n  var doNotNeedPair = {\r\n    color: 1,\r\n    symbol: 1\r\n  };\r\n\r\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\r\n    // Do not care visualArr.length === 0, which is illegal.\r\n    visualArr[1] = visualArr[0];\r\n  }\r\n\r\n  setVisualToOption(thisOption, visualArr);\r\n}\r\n\r\nfunction makePartialColorVisualHandler(applyValue) {\r\n  return {\r\n    applyVisual: function (value, getter, setter) {\r\n      // Only used in HSL\r\n      var colorChannel = this.mapValueToVisual(value); // Must not be array value\r\n\r\n      setter('color', applyValue(getter('color'), colorChannel));\r\n    },\r\n    _normalizedToVisual: createNormalizedToNumericVisual([0, 1])\r\n  };\r\n}\r\n\r\nfunction doMapToArray(normalized) {\r\n  var visual = this.option.visual;\r\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {}; // TODO {}?\r\n}\r\n\r\nfunction makeApplyVisual(visualType) {\r\n  return function (value, getter, setter) {\r\n    setter(visualType, this.mapValueToVisual(value));\r\n  };\r\n}\r\n\r\nfunction doMapCategory(normalized) {\r\n  var visual = this.option.visual;\r\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\r\n}\r\n\r\nfunction doMapFixed() {\r\n  // visual will be convert to array.\r\n  return this.option.visual[0];\r\n}\r\n/**\r\n * Create mapped to numeric visual\r\n */\r\n\r\n\r\nfunction createNormalizedToNumericVisual(sourceExtent) {\r\n  return {\r\n    linear: function (normalized) {\r\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\r\n    },\r\n    category: doMapCategory,\r\n    piecewise: function (normalized, value) {\r\n      var result = getSpecifiedVisual.call(this, value);\r\n\r\n      if (result == null) {\r\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\r\n      }\r\n\r\n      return result;\r\n    },\r\n    fixed: doMapFixed\r\n  };\r\n}\r\n\r\nfunction getSpecifiedVisual(value) {\r\n  var thisOption = this.option;\r\n  var pieceList = thisOption.pieceList;\r\n\r\n  if (thisOption.hasSpecialVisual) {\r\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\r\n    var piece = pieceList[pieceIndex];\r\n\r\n    if (piece && piece.visual) {\r\n      return piece.visual[this.type];\r\n    }\r\n  }\r\n}\r\n\r\nfunction setVisualToOption(thisOption, visualArr) {\r\n  thisOption.visual = visualArr;\r\n\r\n  if (thisOption.type === 'color') {\r\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\r\n      return zrColor.parse(item);\r\n    });\r\n  }\r\n\r\n  return visualArr;\r\n}\r\n/**\r\n * Normalizers by mapping methods.\r\n */\r\n\r\n\r\nvar normalizers = {\r\n  linear: function (value) {\r\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\r\n  },\r\n  piecewise: function (value) {\r\n    var pieceList = this.option.pieceList;\r\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\r\n\r\n    if (pieceIndex != null) {\r\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\r\n    }\r\n  },\r\n  category: function (value) {\r\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal value\r\n\r\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\r\n  },\r\n  fixed: zrUtil.noop\r\n};\r\n\r\nfunction littleThan(close, a, b) {\r\n  return close ? a <= b : a < b;\r\n}\r\n\r\nexport default VisualMapping;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport VisualMapping from '../../visual/VisualMapping';\r\nimport { each, extend, isArray } from 'zrender/lib/core/util';\r\nimport { modifyHSL, modifyAlpha } from 'zrender/lib/tool/color';\r\nimport { makeInner } from '../../util/model';\r\nvar ITEM_STYLE_NORMAL = 'itemStyle';\r\nvar inner = makeInner();\r\nexport default {\r\n  seriesType: 'treemap',\r\n  reset: function (seriesModel) {\r\n    var tree = seriesModel.getData().tree;\r\n    var root = tree.root;\r\n\r\n    if (root.isRemoved()) {\r\n      return;\r\n    }\r\n\r\n    travelTree(root, // Visual should calculate from tree root but not view root.\r\n    {}, seriesModel.getViewRoot().getAncestors(), seriesModel);\r\n  }\r\n};\r\n\r\nfunction travelTree(node, designatedVisual, viewRootAncestors, seriesModel) {\r\n  var nodeModel = node.getModel();\r\n  var nodeLayout = node.getLayout();\r\n  var data = node.hostTree.data; // Optimize\r\n\r\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\r\n    return;\r\n  }\r\n\r\n  var nodeItemStyleModel = nodeModel.getModel(ITEM_STYLE_NORMAL);\r\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, seriesModel);\r\n  var existsStyle = data.ensureUniqueItemVisual(node.dataIndex, 'style'); // calculate border color\r\n\r\n  var borderColor = nodeItemStyleModel.get('borderColor');\r\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\r\n  var thisNodeColor;\r\n\r\n  if (borderColorSaturation != null) {\r\n    // For performance, do not always execute 'calculateColor'.\r\n    thisNodeColor = calculateColor(visuals);\r\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\r\n  }\r\n\r\n  existsStyle.stroke = borderColor;\r\n  var viewChildren = node.viewChildren;\r\n\r\n  if (!viewChildren || !viewChildren.length) {\r\n    thisNodeColor = calculateColor(visuals); // Apply visual to this node.\r\n\r\n    existsStyle.fill = thisNodeColor;\r\n  } else {\r\n    var mapping_1 = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\r\n\r\n    each(viewChildren, function (child, index) {\r\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\r\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\r\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping_1, seriesModel);\r\n        travelTree(child, childVisual, viewRootAncestors, seriesModel);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, seriesModel) {\r\n  var visuals = extend({}, designatedVisual);\r\n  var designatedVisualItemStyle = seriesModel.designatedVisualItemStyle;\r\n  each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\r\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\r\n    designatedVisualItemStyle[visualName] = designatedVisual[visualName];\r\n    var val = nodeItemStyleModel.get(visualName);\r\n    designatedVisualItemStyle[visualName] = null;\r\n    val != null && (visuals[visualName] = val);\r\n  });\r\n  return visuals;\r\n}\r\n\r\nfunction calculateColor(visuals) {\r\n  var color = getValueVisualDefine(visuals, 'color');\r\n\r\n  if (color) {\r\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\r\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\r\n\r\n    if (colorSaturation) {\r\n      color = modifyHSL(color, null, null, colorSaturation);\r\n    }\r\n\r\n    if (colorAlpha) {\r\n      color = modifyAlpha(color, colorAlpha);\r\n    }\r\n\r\n    return color;\r\n  }\r\n}\r\n\r\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\r\n  return thisNodeColor != null // Can only be string\r\n  ? modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\r\n}\r\n\r\nfunction getValueVisualDefine(visuals, name) {\r\n  var value = visuals[name];\r\n\r\n  if (value != null && value !== 'none') {\r\n    return value;\r\n  }\r\n}\r\n\r\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\r\n  if (!viewChildren || !viewChildren.length) {\r\n    return;\r\n  }\r\n\r\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\r\n\r\n  if (!rangeVisual) {\r\n    return;\r\n  }\r\n\r\n  var visualMin = nodeModel.get('visualMin');\r\n  var visualMax = nodeModel.get('visualMax');\r\n  var dataExtent = nodeLayout.dataExtent.slice();\r\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\r\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\r\n  var colorMappingBy = nodeModel.get('colorMappingBy');\r\n  var opt = {\r\n    type: rangeVisual.name,\r\n    dataExtent: dataExtent,\r\n    visual: rangeVisual.range\r\n  };\r\n\r\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\r\n    opt.mappingMethod = 'category';\r\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\r\n  } else {\r\n    opt.mappingMethod = 'linear';\r\n  }\r\n\r\n  var mapping = new VisualMapping(opt);\r\n  inner(mapping).drColorMappingBy = colorMappingBy;\r\n  return mapping;\r\n} // Notice: If we dont have the attribute 'colorRange', but only use\r\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\r\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\r\n// this problem will be encountered:\r\n// If a level-1 node dont have children, and its siblings has children,\r\n// and colorRange is set on level-1, then the node can not be colored.\r\n// So we separate 'colorRange' and 'color' to different attributes.\r\n\r\n\r\nfunction getRangeVisual(nodeModel, name) {\r\n  // 'colorRange', 'colorARange', 'colorSRange'.\r\n  // If not exsits on this node, fetch from levels and series.\r\n  var range = nodeModel.get(name);\r\n  return isArray(range) && range.length ? {\r\n    name: name,\r\n    range: range\r\n  } : null;\r\n}\r\n\r\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\r\n  var childVisuals = extend({}, visuals);\r\n\r\n  if (mapping) {\r\n    // Only support color, colorAlpha, colorSaturation.\r\n    var mappingType = mapping.type;\r\n    var colorMappingBy = mappingType === 'color' && inner(mapping).drColorMappingBy;\r\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\r\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\r\n  }\r\n\r\n  return childVisuals;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* A third-party license is embeded for some of the code in this file:\r\n* The treemap layout implementation was originally copied from\r\n* \"d3.js\" with some modifications made for this project.\r\n* (See more details in the comment of the method \"squarify\" below.)\r\n* The use of the source code of this file is also subject to the terms\r\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\r\n* </licenses/LICENSE-d3>).\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport BoundingRect from 'zrender/lib/core/BoundingRect';\r\nimport { parsePercent, MAX_SAFE_INTEGER } from '../../util/number';\r\nimport * as layout from '../../util/layout';\r\nimport * as helper from '../helper/treeHelper';\r\nvar mathMax = Math.max;\r\nvar mathMin = Math.min;\r\nvar retrieveValue = zrUtil.retrieve;\r\nvar each = zrUtil.each;\r\nvar PATH_BORDER_WIDTH = ['itemStyle', 'borderWidth'];\r\nvar PATH_GAP_WIDTH = ['itemStyle', 'gapWidth'];\r\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'show'];\r\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'height'];\r\n;\r\n/**\r\n * @public\r\n */\r\n\r\nexport default {\r\n  seriesType: 'treemap',\r\n  reset: function (seriesModel, ecModel, api, payload) {\r\n    // Layout result in each node:\r\n    // {x, y, width, height, area, borderWidth}\r\n    var ecWidth = api.getWidth();\r\n    var ecHeight = api.getHeight();\r\n    var seriesOption = seriesModel.option;\r\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\r\n      width: api.getWidth(),\r\n      height: api.getHeight()\r\n    });\r\n    var size = seriesOption.size || []; // Compatible with ec2.\r\n\r\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\r\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\r\n\r\n    var payloadType = payload && payload.type;\r\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\r\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\r\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\r\n    var viewRoot = seriesModel.getViewRoot();\r\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\r\n\r\n    if (payloadType !== 'treemapMove') {\r\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\r\n      var sort_1 = seriesOption.sort;\r\n\r\n      if (sort_1 && sort_1 !== 'asc' && sort_1 !== 'desc') {\r\n        // Default to be desc order.\r\n        sort_1 = 'desc';\r\n      }\r\n\r\n      var options = {\r\n        squareRatio: seriesOption.squareRatio,\r\n        sort: sort_1,\r\n        leafDepth: seriesOption.leafDepth\r\n      }; // layout should be cleared because using updateView but not update.\r\n\r\n      viewRoot.hostTree.clearLayouts(); // TODO\r\n      // optimize: if out of view clip, do not layout.\r\n      // But take care that if do not render node out of view clip,\r\n      // how to calculate start po\r\n\r\n      var viewRootLayout_1 = {\r\n        x: 0,\r\n        y: 0,\r\n        width: rootSize[0],\r\n        height: rootSize[1],\r\n        area: rootSize[0] * rootSize[1]\r\n      };\r\n      viewRoot.setLayout(viewRootLayout_1);\r\n      squarify(viewRoot, options, false, 0); // Supplement layout.\r\n\r\n      viewRootLayout_1 = viewRoot.getLayout();\r\n      each(viewAbovePath, function (node, index) {\r\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\r\n        node.setLayout(zrUtil.extend({\r\n          dataExtent: [childValue, childValue],\r\n          borderWidth: 0,\r\n          upperHeight: 0\r\n        }, viewRootLayout_1));\r\n      });\r\n    }\r\n\r\n    var treeRoot = seriesModel.getData().tree.root;\r\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\r\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\r\n    // \u73B0\u5728\u6CA1\u6709clip\u529F\u80FD\uFF0C\u6682\u65F6\u53D6ec\u9AD8\u5BBD\u3002\r\n\r\n    prunning(treeRoot, // Transform to base element coordinate system.\r\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\r\n  }\r\n};\r\n/**\r\n * Layout treemap with squarify algorithm.\r\n * The original presentation of this algorithm\r\n * was made by Mark Bruls, Kees Huizing, and Jarke J. van Wijk\r\n * <https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf>.\r\n * The implementation of this algorithm was originally copied from \"d3.js\"\r\n * <https://github.com/d3/d3/blob/9cc9a875e636a1dcf36cc1e07bdf77e1ad6e2c74/src/layout/treemap.js>\r\n * with some modifications made for this program.\r\n * See the license statement at the head of this file.\r\n *\r\n * @protected\r\n * @param {module:echarts/data/Tree~TreeNode} node\r\n * @param {Object} options\r\n * @param {string} options.sort 'asc' or 'desc'\r\n * @param {number} options.squareRatio\r\n * @param {boolean} hideChildren\r\n * @param {number} depth\r\n */\r\n\r\nfunction squarify(node, options, hideChildren, depth) {\r\n  var width;\r\n  var height;\r\n\r\n  if (node.isRemoved()) {\r\n    return;\r\n  }\r\n\r\n  var thisLayout = node.getLayout();\r\n  width = thisLayout.width;\r\n  height = thisLayout.height; // Considering border and gap\r\n\r\n  var nodeModel = node.getModel();\r\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\r\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\r\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\r\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\r\n  var layoutOffset = borderWidth - halfGapWidth;\r\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\r\n  node.setLayout({\r\n    borderWidth: borderWidth,\r\n    upperHeight: upperHeight,\r\n    upperLabelHeight: upperLabelHeight\r\n  }, true);\r\n  width = mathMax(width - 2 * layoutOffset, 0);\r\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\r\n  var totalArea = width * height;\r\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\r\n\r\n  if (!viewChildren.length) {\r\n    return;\r\n  }\r\n\r\n  var rect = {\r\n    x: layoutOffset,\r\n    y: layoutOffsetUpper,\r\n    width: width,\r\n    height: height\r\n  };\r\n  var rowFixedLength = mathMin(width, height);\r\n  var best = Infinity; // the best row score so far\r\n\r\n  var row = [];\r\n  row.area = 0;\r\n\r\n  for (var i = 0, len = viewChildren.length; i < len;) {\r\n    var child = viewChildren[i];\r\n    row.push(child);\r\n    row.area += child.getLayout().area;\r\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\r\n\r\n    if (score <= best) {\r\n      i++;\r\n      best = score;\r\n    } // abort, and try a different orientation\r\n    else {\r\n        row.area -= row.pop().getLayout().area;\r\n        position(row, rowFixedLength, rect, halfGapWidth, false);\r\n        rowFixedLength = mathMin(rect.width, rect.height);\r\n        row.length = row.area = 0;\r\n        best = Infinity;\r\n      }\r\n  }\r\n\r\n  if (row.length) {\r\n    position(row, rowFixedLength, rect, halfGapWidth, true);\r\n  }\r\n\r\n  if (!hideChildren) {\r\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\r\n\r\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\r\n      hideChildren = true;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\r\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\r\n  }\r\n}\r\n/**\r\n * Set area to each child, and calculate data extent for visual coding.\r\n */\r\n\r\n\r\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\r\n  var viewChildren = node.children || [];\r\n  var orderBy = options.sort;\r\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\r\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\r\n\r\n  if (hideChildren && !overLeafDepth) {\r\n    return node.viewChildren = [];\r\n  } // Sort children, order by desc.\r\n\r\n\r\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\r\n    return !child.isRemoved();\r\n  });\r\n  sort(viewChildren, orderBy);\r\n  var info = statistic(nodeModel, viewChildren, orderBy);\r\n\r\n  if (info.sum === 0) {\r\n    return node.viewChildren = [];\r\n  }\r\n\r\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\r\n\r\n  if (info.sum === 0) {\r\n    return node.viewChildren = [];\r\n  } // Set area to each child.\r\n\r\n\r\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\r\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\r\n\r\n    viewChildren[i].setLayout({\r\n      area: area\r\n    });\r\n  }\r\n\r\n  if (overLeafDepth) {\r\n    viewChildren.length && node.setLayout({\r\n      isLeafRoot: true\r\n    }, true);\r\n    viewChildren.length = 0;\r\n  }\r\n\r\n  node.viewChildren = viewChildren;\r\n  node.setLayout({\r\n    dataExtent: info.dataExtent\r\n  }, true);\r\n  return viewChildren;\r\n}\r\n/**\r\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\r\n */\r\n\r\n\r\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\r\n  // visibleMin is not supported yet when no option.sort.\r\n  if (!orderBy) {\r\n    return sum;\r\n  }\r\n\r\n  var visibleMin = nodeModel.get('visibleMin');\r\n  var len = orderedChildren.length;\r\n  var deletePoint = len; // Always travel from little value to big value.\r\n\r\n  for (var i = len - 1; i >= 0; i--) {\r\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\r\n\r\n    if (value / sum * totalArea < visibleMin) {\r\n      deletePoint = i;\r\n      sum -= value;\r\n    }\r\n  }\r\n\r\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\r\n  return sum;\r\n}\r\n/**\r\n * Sort\r\n */\r\n\r\n\r\nfunction sort(viewChildren, orderBy) {\r\n  if (orderBy) {\r\n    viewChildren.sort(function (a, b) {\r\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\r\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\r\n    });\r\n  }\r\n\r\n  return viewChildren;\r\n}\r\n/**\r\n * Statistic\r\n */\r\n\r\n\r\nfunction statistic(nodeModel, children, orderBy) {\r\n  // Calculate sum.\r\n  var sum = 0;\r\n\r\n  for (var i = 0, len = children.length; i < len; i++) {\r\n    sum += children[i].getValue();\r\n  } // Statistic data extent for latter visual coding.\r\n  // Notice: data extent should be calculate based on raw children\r\n  // but not filtered view children, otherwise visual mapping will not\r\n  // be stable when zoom (where children is filtered by visibleMin).\r\n\r\n\r\n  var dimension = nodeModel.get('visualDimension');\r\n  var dataExtent; // The same as area dimension.\r\n\r\n  if (!children || !children.length) {\r\n    dataExtent = [NaN, NaN];\r\n  } else if (dimension === 'value' && orderBy) {\r\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\r\n    orderBy === 'asc' && dataExtent.reverse();\r\n  } // Other dimension.\r\n  else {\r\n      dataExtent = [Infinity, -Infinity];\r\n      each(children, function (child) {\r\n        var value = child.getValue(dimension);\r\n        value < dataExtent[0] && (dataExtent[0] = value);\r\n        value > dataExtent[1] && (dataExtent[1] = value);\r\n      });\r\n    }\r\n\r\n  return {\r\n    sum: sum,\r\n    dataExtent: dataExtent\r\n  };\r\n}\r\n/**\r\n * Computes the score for the specified row,\r\n * as the worst aspect ratio.\r\n */\r\n\r\n\r\nfunction worst(row, rowFixedLength, ratio) {\r\n  var areaMax = 0;\r\n  var areaMin = Infinity;\r\n\r\n  for (var i = 0, area = void 0, len = row.length; i < len; i++) {\r\n    area = row[i].getLayout().area;\r\n\r\n    if (area) {\r\n      area < areaMin && (areaMin = area);\r\n      area > areaMax && (areaMax = area);\r\n    }\r\n  }\r\n\r\n  var squareArea = row.area * row.area;\r\n  var f = rowFixedLength * rowFixedLength * ratio;\r\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\r\n}\r\n/**\r\n * Positions the specified row of nodes. Modifies `rect`.\r\n */\r\n\r\n\r\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\r\n  // When rowFixedLength === rect.width,\r\n  // it is horizontal subdivision,\r\n  // rowFixedLength is the width of the subdivision,\r\n  // rowOtherLength is the height of the subdivision,\r\n  // and nodes will be positioned from left to right.\r\n  // wh[idx0WhenH] means: when horizontal,\r\n  //      wh[idx0WhenH] => wh[0] => 'width'.\r\n  //      xy[idx1WhenH] => xy[1] => 'y'.\r\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\r\n  var idx1WhenH = 1 - idx0WhenH;\r\n  var xy = ['x', 'y'];\r\n  var wh = ['width', 'height'];\r\n  var last = rect[xy[idx0WhenH]];\r\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\r\n\r\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\r\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\r\n  }\r\n\r\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\r\n    var node = row[i];\r\n    var nodeLayout = {};\r\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\r\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\r\n\r\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\r\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\r\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\r\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\r\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\r\n    last += modWH;\r\n    node.setLayout(nodeLayout, true);\r\n  }\r\n\r\n  rect[xy[idx1WhenH]] += rowOtherLength;\r\n  rect[wh[idx1WhenH]] -= rowOtherLength;\r\n} // Return [containerWidth, containerHeight] as default.\r\n\r\n\r\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\r\n  // If targetInfo.node exists, we zoom to the node,\r\n  // so estimate whold width and heigth by target node.\r\n  var currNode = (targetInfo || {}).node;\r\n  var defaultSize = [containerWidth, containerHeight];\r\n\r\n  if (!currNode || currNode === viewRoot) {\r\n    return defaultSize;\r\n  }\r\n\r\n  var parent;\r\n  var viewArea = containerWidth * containerHeight;\r\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\r\n\r\n  while (parent = currNode.parentNode) {\r\n    // jshint ignore:line\r\n    var sum = 0;\r\n    var siblings = parent.children;\r\n\r\n    for (var i = 0, len = siblings.length; i < len; i++) {\r\n      sum += siblings[i].getValue();\r\n    }\r\n\r\n    var currNodeValue = currNode.getValue();\r\n\r\n    if (currNodeValue === 0) {\r\n      return defaultSize;\r\n    }\r\n\r\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\r\n\r\n    var parentModel = parent.getModel();\r\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\r\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel));\r\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\r\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\r\n    currNode = parent;\r\n  }\r\n\r\n  area < viewArea && (area = viewArea);\r\n  var scale = Math.pow(area / viewArea, 0.5);\r\n  return [containerWidth * scale, containerHeight * scale];\r\n} // Root postion base on coord of containerGroup\r\n\r\n\r\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\r\n  if (rootRect) {\r\n    return {\r\n      x: rootRect.x,\r\n      y: rootRect.y\r\n    };\r\n  }\r\n\r\n  var defaultPosition = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n\r\n  if (!targetInfo) {\r\n    return defaultPosition;\r\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\r\n  // old tree and new tree are the same tree,\r\n  // so the node still exists and we can visit it.\r\n\r\n\r\n  var targetNode = targetInfo.node;\r\n  var layout = targetNode.getLayout();\r\n\r\n  if (!layout) {\r\n    return defaultPosition;\r\n  } // Transform coord from local to container.\r\n\r\n\r\n  var targetCenter = [layout.width / 2, layout.height / 2];\r\n  var node = targetNode;\r\n\r\n  while (node) {\r\n    var nodeLayout = node.getLayout();\r\n    targetCenter[0] += nodeLayout.x;\r\n    targetCenter[1] += nodeLayout.y;\r\n    node = node.parentNode;\r\n  }\r\n\r\n  return {\r\n    x: layoutInfo.width / 2 - targetCenter[0],\r\n    y: layoutInfo.height / 2 - targetCenter[1]\r\n  };\r\n} // Mark nodes visible for prunning when visual coding and rendering.\r\n// Prunning depends on layout and root position, so we have to do it after layout.\r\n\r\n\r\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\r\n  var nodeLayout = node.getLayout();\r\n  var nodeInViewAbovePath = viewAbovePath[depth];\r\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\r\n\r\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\r\n    return;\r\n  }\r\n\r\n  node.setLayout({\r\n    // isInView means: viewRoot sub tree + viewAbovePath\r\n    isInView: true,\r\n    // invisible only means: outside view clip so that the node can not\r\n    // see but still layout for animation preparation but not render.\r\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\r\n    isAboveViewRoot: isAboveViewRoot\r\n  }, true); // Transform to child coordinate.\r\n\r\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\r\n  each(node.viewChildren || [], function (child) {\r\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\r\n  });\r\n}\r\n\r\nfunction getUpperLabelHeight(model) {\r\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { installTreemapAction } from './treemapAction';\r\nimport TreemapSeriesModel from './TreemapSeries';\r\nimport TreemapView from './TreemapView';\r\nimport treemapVisual from './treemapVisual';\r\nimport treemapLayout from './treemapLayout';\r\nexport function install(registers) {\r\n  registers.registerSeriesModel(TreemapSeriesModel);\r\n  registers.registerChartView(TreemapView);\r\n  registers.registerVisual(treemapVisual);\r\n  registers.registerLayout(treemapLayout);\r\n  installTreemapAction(registers);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nexport default function categoryFilter(ecModel) {\r\n  var legendModels = ecModel.findComponents({\r\n    mainType: 'legend'\r\n  });\r\n\r\n  if (!legendModels || !legendModels.length) {\r\n    return;\r\n  }\r\n\r\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\r\n    var categoriesData = graphSeries.getCategoriesData();\r\n    var graph = graphSeries.getGraph();\r\n    var data = graph.data;\r\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\r\n    data.filterSelf(function (idx) {\r\n      var model = data.getItemModel(idx);\r\n      var category = model.getShallow('category');\r\n\r\n      if (category != null) {\r\n        if (typeof category === 'number') {\r\n          category = categoryNames[category];\r\n        } // If in any legend component the status is not selected.\r\n\r\n\r\n        for (var i = 0; i < legendModels.length; i++) {\r\n          if (!legendModels[i].isSelected(category)) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n\r\n      return true;\r\n    });\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { extend } from 'zrender/lib/core/util';\r\nexport default function categoryVisual(ecModel) {\r\n  var paletteScope = {};\r\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\r\n    var categoriesData = seriesModel.getCategoriesData();\r\n    var data = seriesModel.getData();\r\n    var categoryNameIdxMap = {};\r\n    categoriesData.each(function (idx) {\r\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\r\n\r\n      categoryNameIdxMap['ec-' + name] = idx;\r\n      var itemModel = categoriesData.getItemModel(idx);\r\n      var style = itemModel.getModel('itemStyle').getItemStyle();\r\n\r\n      if (!style.fill) {\r\n        // Get color from palette.\r\n        style.fill = seriesModel.getColorFromPalette(name, paletteScope);\r\n      }\r\n\r\n      categoriesData.setItemVisual(idx, 'style', style);\r\n      var symbolVisualList = ['symbol', 'symbolSize', 'symbolKeepAspect'];\r\n\r\n      for (var i = 0; i < symbolVisualList.length; i++) {\r\n        var symbolVisual = itemModel.getShallow(symbolVisualList[i], true);\r\n\r\n        if (symbolVisual != null) {\r\n          categoriesData.setItemVisual(idx, symbolVisualList[i], symbolVisual);\r\n        }\r\n      }\r\n    }); // Assign category color to visual\r\n\r\n    if (categoriesData.count()) {\r\n      data.each(function (idx) {\r\n        var model = data.getItemModel(idx);\r\n        var categoryIdx = model.getShallow('category');\r\n\r\n        if (categoryIdx != null) {\r\n          if (typeof categoryIdx === 'string') {\r\n            categoryIdx = categoryNameIdxMap['ec-' + categoryIdx];\r\n          }\r\n\r\n          var categoryStyle = categoriesData.getItemVisual(categoryIdx, 'style');\r\n          var style = data.ensureUniqueItemVisual(idx, 'style');\r\n          extend(style, categoryStyle);\r\n          var visualList = ['symbol', 'symbolSize', 'symbolKeepAspect'];\r\n\r\n          for (var i = 0; i < visualList.length; i++) {\r\n            data.setItemVisual(idx, visualList[i], categoriesData.getItemVisual(categoryIdx, visualList[i]));\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { extend } from 'zrender/lib/core/util';\r\n\r\nfunction normalize(a) {\r\n  if (!(a instanceof Array)) {\r\n    a = [a, a];\r\n  }\r\n\r\n  return a;\r\n}\r\n\r\nexport default function graphEdgeVisual(ecModel) {\r\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\r\n    var graph = seriesModel.getGraph();\r\n    var edgeData = seriesModel.getEdgeData();\r\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\r\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize')); // const colorQuery = ['lineStyle', 'color'] as const;\r\n    // const opacityQuery = ['lineStyle', 'opacity'] as const;\r\n\r\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\r\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\r\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\r\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\r\n    edgeData.setVisual('style', seriesModel.getModel('lineStyle').getLineStyle());\r\n    edgeData.each(function (idx) {\r\n      var itemModel = edgeData.getItemModel(idx);\r\n      var edge = graph.getEdgeByIndex(idx);\r\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\r\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\r\n\r\n      var style = itemModel.getModel('lineStyle').getLineStyle();\r\n      var existsStyle = edgeData.ensureUniqueItemVisual(idx, 'style');\r\n      extend(existsStyle, style);\r\n\r\n      switch (existsStyle.stroke) {\r\n        case 'source':\r\n          {\r\n            var nodeStyle = edge.node1.getVisual('style');\r\n            existsStyle.stroke = nodeStyle && nodeStyle.fill;\r\n            break;\r\n          }\r\n\r\n        case 'target':\r\n          {\r\n            var nodeStyle = edge.node2.getVisual('style');\r\n            existsStyle.stroke = nodeStyle && nodeStyle.fill;\r\n            break;\r\n          }\r\n      }\r\n\r\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\r\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\r\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\r\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\r\n    });\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// @ts-nocheck\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nvar KEY_DELIMITER = '-->';\r\n/**\r\n * params handler\r\n * @param {module:echarts/model/SeriesModel} seriesModel\r\n * @returns {*}\r\n */\r\n\r\nvar getAutoCurvenessParams = function (seriesModel) {\r\n  return seriesModel.get('autoCurveness') || null;\r\n};\r\n/**\r\n * Generate a list of edge curvatures, 20 is the default\r\n * @param {module:echarts/model/SeriesModel} seriesModel\r\n * @param {number} appendLength\r\n * @return  20 => [0, -0.2, 0.2, -0.4, 0.4, -0.6, 0.6, -0.8, 0.8, -1, 1, -1.2, 1.2, -1.4, 1.4, -1.6, 1.6, -1.8, 1.8, -2]\r\n */\r\n\r\n\r\nvar createCurveness = function (seriesModel, appendLength) {\r\n  var autoCurvenessParmas = getAutoCurvenessParams(seriesModel);\r\n  var length = 20;\r\n  var curvenessList = []; // handler the function set\r\n\r\n  if (typeof autoCurvenessParmas === 'number') {\r\n    length = autoCurvenessParmas;\r\n  } else if (zrUtil.isArray(autoCurvenessParmas)) {\r\n    seriesModel.__curvenessList = autoCurvenessParmas;\r\n    return;\r\n  } // append length\r\n\r\n\r\n  if (appendLength > length) {\r\n    length = appendLength;\r\n  } // make sure the length is even\r\n\r\n\r\n  var len = length % 2 ? length + 2 : length + 3;\r\n  curvenessList = [];\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    curvenessList.push((i % 2 ? i + 1 : i) / 10 * (i % 2 ? -1 : 1));\r\n  }\r\n\r\n  seriesModel.__curvenessList = curvenessList;\r\n};\r\n/**\r\n * Create different cache key data in the positive and negative directions, in order to set the curvature later\r\n * @param {number|string|module:echarts/data/Graph.Node} n1\r\n * @param {number|string|module:echarts/data/Graph.Node} n2\r\n * @param {module:echarts/model/SeriesModel} seriesModel\r\n * @returns {string} key\r\n */\r\n\r\n\r\nvar getKeyOfEdges = function (n1, n2, seriesModel) {\r\n  var source = [n1.id, n1.dataIndex].join('.');\r\n  var target = [n2.id, n2.dataIndex].join('.');\r\n  return [seriesModel.uid, source, target].join(KEY_DELIMITER);\r\n};\r\n/**\r\n * get opposite key\r\n * @param {string} key\r\n * @returns {string}\r\n */\r\n\r\n\r\nvar getOppositeKey = function (key) {\r\n  var keys = key.split(KEY_DELIMITER);\r\n  return [keys[0], keys[2], keys[1]].join(KEY_DELIMITER);\r\n};\r\n/**\r\n * get edgeMap with key\r\n * @param edge\r\n * @param {module:echarts/model/SeriesModel} seriesModel\r\n */\r\n\r\n\r\nvar getEdgeFromMap = function (edge, seriesModel) {\r\n  var key = getKeyOfEdges(edge.node1, edge.node2, seriesModel);\r\n  return seriesModel.__edgeMap[key];\r\n};\r\n/**\r\n * calculate all cases total length\r\n * @param edge\r\n * @param seriesModel\r\n * @returns {number}\r\n */\r\n\r\n\r\nvar getTotalLengthBetweenNodes = function (edge, seriesModel) {\r\n  var len = getEdgeMapLengthWithKey(getKeyOfEdges(edge.node1, edge.node2, seriesModel), seriesModel);\r\n  var lenV = getEdgeMapLengthWithKey(getKeyOfEdges(edge.node2, edge.node1, seriesModel), seriesModel);\r\n  return len + lenV;\r\n};\r\n/**\r\n *\r\n * @param key\r\n */\r\n\r\n\r\nvar getEdgeMapLengthWithKey = function (key, seriesModel) {\r\n  var edgeMap = seriesModel.__edgeMap;\r\n  return edgeMap[key] ? edgeMap[key].length : 0;\r\n};\r\n/**\r\n * Count the number of edges between the same two points, used to obtain the curvature table and the parity of the edge\r\n * @see /graph/GraphSeries.js@getInitialData\r\n * @param {module:echarts/model/SeriesModel} seriesModel\r\n */\r\n\r\n\r\nexport function initCurvenessList(seriesModel) {\r\n  if (!getAutoCurvenessParams(seriesModel)) {\r\n    return;\r\n  }\r\n\r\n  seriesModel.__curvenessList = [];\r\n  seriesModel.__edgeMap = {}; // calc the array of curveness List\r\n\r\n  createCurveness(seriesModel);\r\n}\r\n/**\r\n * set edgeMap with key\r\n * @param {number|string|module:echarts/data/Graph.Node} n1\r\n * @param {number|string|module:echarts/data/Graph.Node} n2\r\n * @param {module:echarts/model/SeriesModel} seriesModel\r\n * @param {number} index\r\n */\r\n\r\nexport function createEdgeMapForCurveness(n1, n2, seriesModel, index) {\r\n  if (!getAutoCurvenessParams(seriesModel)) {\r\n    return;\r\n  }\r\n\r\n  var key = getKeyOfEdges(n1, n2, seriesModel);\r\n  var edgeMap = seriesModel.__edgeMap;\r\n  var oppositeEdges = edgeMap[getOppositeKey(key)]; // set direction\r\n\r\n  if (edgeMap[key] && !oppositeEdges) {\r\n    edgeMap[key].isForward = true;\r\n  } else if (oppositeEdges && edgeMap[key]) {\r\n    oppositeEdges.isForward = true;\r\n    edgeMap[key].isForward = false;\r\n  }\r\n\r\n  edgeMap[key] = edgeMap[key] || [];\r\n  edgeMap[key].push(index);\r\n}\r\n/**\r\n * get curvature for edge\r\n * @param edge\r\n * @param {module:echarts/model/SeriesModel} seriesModel\r\n * @param index\r\n */\r\n\r\nexport function getCurvenessForEdge(edge, seriesModel, index, needReverse) {\r\n  var autoCurvenessParams = getAutoCurvenessParams(seriesModel);\r\n  var isArrayParam = zrUtil.isArray(autoCurvenessParams);\r\n\r\n  if (!autoCurvenessParams) {\r\n    return null;\r\n  }\r\n\r\n  var edgeArray = getEdgeFromMap(edge, seriesModel);\r\n\r\n  if (!edgeArray) {\r\n    return null;\r\n  }\r\n\r\n  var edgeIndex = -1;\r\n\r\n  for (var i = 0; i < edgeArray.length; i++) {\r\n    if (edgeArray[i] === index) {\r\n      edgeIndex = i;\r\n      break;\r\n    }\r\n  } // if totalLen is Longer createCurveness\r\n\r\n\r\n  var totalLen = getTotalLengthBetweenNodes(edge, seriesModel);\r\n  createCurveness(seriesModel, totalLen);\r\n  edge.lineStyle = edge.lineStyle || {}; // if is opposite edge, must set curvenss to opposite number\r\n\r\n  var curKey = getKeyOfEdges(edge.node1, edge.node2, seriesModel);\r\n  var curvenessList = seriesModel.__curvenessList; // if pass array no need parity\r\n\r\n  var parityCorrection = isArrayParam ? 0 : totalLen % 2 ? 0 : 1;\r\n\r\n  if (!edgeArray.isForward) {\r\n    // the opposite edge show outside\r\n    var oppositeKey = getOppositeKey(curKey);\r\n    var len = getEdgeMapLengthWithKey(oppositeKey, seriesModel);\r\n    var resValue = curvenessList[edgeIndex + len + parityCorrection]; // isNeedReverse, simple, force type need reverse the curveness in the junction of the forword and the opposite\r\n\r\n    if (needReverse) {\r\n      // set as array may make the parity handle with the len of opposite\r\n      if (isArrayParam) {\r\n        if (autoCurvenessParams && autoCurvenessParams[0] === 0) {\r\n          return (len + parityCorrection) % 2 ? resValue : -resValue;\r\n        } else {\r\n          return ((len % 2 ? 0 : 1) + parityCorrection) % 2 ? resValue : -resValue;\r\n        }\r\n      } else {\r\n        return (len + parityCorrection) % 2 ? resValue : -resValue;\r\n      }\r\n    } else {\r\n      return curvenessList[edgeIndex + len + parityCorrection];\r\n    }\r\n  } else {\r\n    return curvenessList[parityCorrection + edgeIndex];\r\n  }\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as vec2 from 'zrender/lib/core/vector';\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { getCurvenessForEdge } from '../helper/multipleGraphEdgeHelper';\r\nexport function simpleLayout(seriesModel) {\r\n  var coordSys = seriesModel.coordinateSystem;\r\n\r\n  if (coordSys && coordSys.type !== 'view') {\r\n    return;\r\n  }\r\n\r\n  var graph = seriesModel.getGraph();\r\n  graph.eachNode(function (node) {\r\n    var model = node.getModel();\r\n    node.setLayout([+model.get('x'), +model.get('y')]);\r\n  });\r\n  simpleLayoutEdge(graph, seriesModel);\r\n}\r\nexport function simpleLayoutEdge(graph, seriesModel) {\r\n  graph.eachEdge(function (edge, index) {\r\n    var curveness = zrUtil.retrieve3(edge.getModel().get(['lineStyle', 'curveness']), -getCurvenessForEdge(edge, seriesModel, index, true), 0);\r\n    var p1 = vec2.clone(edge.node1.getLayout());\r\n    var p2 = vec2.clone(edge.node2.getLayout());\r\n    var points = [p1, p2];\r\n\r\n    if (+curveness) {\r\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\r\n    }\r\n\r\n    edge.setLayout(points);\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { each } from 'zrender/lib/core/util';\r\nimport { simpleLayout, simpleLayoutEdge } from './simpleLayoutHelper';\r\nexport default function graphSimpleLayout(ecModel, api) {\r\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\r\n    var layout = seriesModel.get('layout');\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (coordSys && coordSys.type !== 'view') {\r\n      var data_1 = seriesModel.getData();\r\n      var dimensions_1 = [];\r\n      each(coordSys.dimensions, function (coordDim) {\r\n        dimensions_1 = dimensions_1.concat(data_1.mapDimensionsAll(coordDim));\r\n      });\r\n\r\n      for (var dataIndex = 0; dataIndex < data_1.count(); dataIndex++) {\r\n        var value = [];\r\n        var hasValue = false;\r\n\r\n        for (var i = 0; i < dimensions_1.length; i++) {\r\n          var val = data_1.get(dimensions_1[i], dataIndex);\r\n\r\n          if (!isNaN(val)) {\r\n            hasValue = true;\r\n          }\r\n\r\n          value.push(val);\r\n        }\r\n\r\n        if (hasValue) {\r\n          data_1.setItemLayout(dataIndex, coordSys.dataToPoint(value));\r\n        } else {\r\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\r\n          data_1.setItemLayout(dataIndex, [NaN, NaN]);\r\n        }\r\n      }\r\n\r\n      simpleLayoutEdge(data_1.graph, seriesModel);\r\n    } else if (!layout || layout === 'none') {\r\n      simpleLayout(seriesModel);\r\n    }\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nexport function getNodeGlobalScale(seriesModel) {\r\n  var coordSys = seriesModel.coordinateSystem;\r\n\r\n  if (coordSys.type !== 'view') {\r\n    return 1;\r\n  }\r\n\r\n  var nodeScaleRatio = seriesModel.option.nodeScaleRatio;\r\n  var groupZoom = coordSys.scaleX; // Scale node when zoom changes\r\n\r\n  var roamZoom = coordSys.getZoom();\r\n  var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\r\n  return nodeScale / groupZoom;\r\n}\r\nexport function getSymbolSize(node) {\r\n  var symbolSize = node.getVisual('symbolSize');\r\n\r\n  if (symbolSize instanceof Array) {\r\n    symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\r\n  }\r\n\r\n  return +symbolSize;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as vec2 from 'zrender/lib/core/vector';\r\nimport { getSymbolSize, getNodeGlobalScale } from './graphHelper';\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { getCurvenessForEdge } from '../helper/multipleGraphEdgeHelper';\r\nvar PI = Math.PI;\r\nvar _symbolRadiansHalf = [];\r\n/**\r\n * `basedOn` can be:\r\n * 'value':\r\n *     This layout is not accurate and have same bad case. For example,\r\n *     if the min value is very smaller than the max value, the nodes\r\n *     with the min value probably overlap even though there is enough\r\n *     space to layout them. So we only use this approach in the as the\r\n *     init layout of the force layout.\r\n *     FIXME\r\n *     Probably we do not need this method any more but use\r\n *     `basedOn: 'symbolSize'` in force layout if\r\n *     delay its init operations to GraphView.\r\n * 'symbolSize':\r\n *     This approach work only if all of the symbol size calculated.\r\n *     That is, the progressive rendering is not applied to graph.\r\n *     FIXME\r\n *     If progressive rendering is applied to graph some day,\r\n *     probably we have to use `basedOn: 'value'`.\r\n */\r\n\r\nexport function circularLayout(seriesModel, basedOn) {\r\n  var coordSys = seriesModel.coordinateSystem;\r\n\r\n  if (coordSys && coordSys.type !== 'view') {\r\n    return;\r\n  }\r\n\r\n  var rect = coordSys.getBoundingRect();\r\n  var nodeData = seriesModel.getData();\r\n  var graph = nodeData.graph;\r\n  var cx = rect.width / 2 + rect.x;\r\n  var cy = rect.height / 2 + rect.y;\r\n  var r = Math.min(rect.width, rect.height) / 2;\r\n  var count = nodeData.count();\r\n  nodeData.setLayout({\r\n    cx: cx,\r\n    cy: cy\r\n  });\r\n\r\n  if (!count) {\r\n    return;\r\n  }\r\n\r\n  _layoutNodesBasedOn[basedOn](seriesModel, graph, nodeData, r, cx, cy, count);\r\n\r\n  graph.eachEdge(function (edge, index) {\r\n    var curveness = zrUtil.retrieve3(edge.getModel().get(['lineStyle', 'curveness']), getCurvenessForEdge(edge, seriesModel, index), 0);\r\n    var p1 = vec2.clone(edge.node1.getLayout());\r\n    var p2 = vec2.clone(edge.node2.getLayout());\r\n    var cp1;\r\n    var x12 = (p1[0] + p2[0]) / 2;\r\n    var y12 = (p1[1] + p2[1]) / 2;\r\n\r\n    if (+curveness) {\r\n      curveness *= 3;\r\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\r\n    }\r\n\r\n    edge.setLayout([p1, p2, cp1]);\r\n  });\r\n}\r\nvar _layoutNodesBasedOn = {\r\n  value: function (seriesModel, graph, nodeData, r, cx, cy, count) {\r\n    var angle = 0;\r\n    var sum = nodeData.getSum('value');\r\n    var unitAngle = Math.PI * 2 / (sum || count);\r\n    graph.eachNode(function (node) {\r\n      var value = node.getValue('value');\r\n      var radianHalf = unitAngle * (sum ? value : 1) / 2;\r\n      angle += radianHalf;\r\n      node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\r\n      angle += radianHalf;\r\n    });\r\n  },\r\n  symbolSize: function (seriesModel, graph, nodeData, r, cx, cy, count) {\r\n    var sumRadian = 0;\r\n    _symbolRadiansHalf.length = count;\r\n    var nodeScale = getNodeGlobalScale(seriesModel);\r\n    graph.eachNode(function (node) {\r\n      var symbolSize = getSymbolSize(node); // Normally this case will not happen, but we still add\r\n      // some the defensive code (2px is an arbitrary value).\r\n\r\n      isNaN(symbolSize) && (symbolSize = 2);\r\n      symbolSize < 0 && (symbolSize = 0);\r\n      symbolSize *= nodeScale;\r\n      var symbolRadianHalf = Math.asin(symbolSize / 2 / r); // when `symbolSize / 2` is bigger than `r`.\r\n\r\n      isNaN(symbolRadianHalf) && (symbolRadianHalf = PI / 2);\r\n      _symbolRadiansHalf[node.dataIndex] = symbolRadianHalf;\r\n      sumRadian += symbolRadianHalf * 2;\r\n    });\r\n    var halfRemainRadian = (2 * PI - sumRadian) / count / 2;\r\n    var angle = 0;\r\n    graph.eachNode(function (node) {\r\n      var radianHalf = halfRemainRadian + _symbolRadiansHalf[node.dataIndex];\r\n      angle += radianHalf;\r\n      node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\r\n      angle += radianHalf;\r\n    });\r\n  }\r\n};", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { circularLayout } from './circularLayoutHelper';\r\nexport default function graphCircularLayout(ecModel) {\r\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\r\n    if (seriesModel.get('layout') === 'circular') {\r\n      circularLayout(seriesModel, 'symbolSize');\r\n    }\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/*\r\n* A third-party license is embeded for some of the code in this file:\r\n* Some formulas were originally copied from \"d3.js\" with some\r\n* modifications made for this project.\r\n* (See more details in the comment of the method \"step\" below.)\r\n* The use of the source code of this file is also subject to the terms\r\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\r\n* </licenses/LICENSE-d3>).\r\n*/\r\nimport * as vec2 from 'zrender/lib/core/vector';\r\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\r\n//     return e.n1 === n ? e.n2 : e.n1;\r\n// }\r\n\r\nexport function forceLayout(inNodes, inEdges, opts) {\r\n  var nodes = inNodes;\r\n  var edges = inEdges;\r\n  var rect = opts.rect;\r\n  var width = rect.width;\r\n  var height = rect.height;\r\n  var center = [rect.x + width / 2, rect.y + height / 2]; // let scale = opts.scale || 1;\r\n\r\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (let i = 0; i < edges.length; i++) {\r\n  //     let e = edges[i];\r\n  //     let n1 = e.n1;\r\n  //     let n2 = e.n2;\r\n  //     n1.edges = n1.edges || [];\r\n  //     n2.edges = n2.edges || [];\r\n  //     n1.edges.push(e);\r\n  //     n2.edges.push(e);\r\n  // }\r\n  // Init position\r\n\r\n  for (var i = 0; i < nodes.length; i++) {\r\n    var n = nodes[i];\r\n\r\n    if (!n.p) {\r\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]);\r\n    }\r\n\r\n    n.pp = vec2.clone(n.p);\r\n    n.edges = null;\r\n  } // Formula in 'Graph Drawing by Force-directed Placement'\r\n  // let k = scale * Math.sqrt(width * height / nodes.length);\r\n  // let k2 = k * k;\r\n\r\n\r\n  var initialFriction = opts.friction == null ? 0.6 : opts.friction;\r\n  var friction = initialFriction;\r\n  var beforeStepCallback;\r\n  var afterStepCallback;\r\n  return {\r\n    warmUp: function () {\r\n      friction = initialFriction * 0.8;\r\n    },\r\n    setFixed: function (idx) {\r\n      nodes[idx].fixed = true;\r\n    },\r\n    setUnfixed: function (idx) {\r\n      nodes[idx].fixed = false;\r\n    },\r\n\r\n    /**\r\n     * Before step hook\r\n     */\r\n    beforeStep: function (cb) {\r\n      beforeStepCallback = cb;\r\n    },\r\n\r\n    /**\r\n     * After step hook\r\n     */\r\n    afterStep: function (cb) {\r\n      afterStepCallback = cb;\r\n    },\r\n\r\n    /**\r\n     * Some formulas were originally copied from \"d3.js\"\r\n     * https://github.com/d3/d3/blob/b516d77fb8566b576088e73410437494717ada26/src/layout/force.js\r\n     * with some modifications made for this project.\r\n     * See the license statement at the head of this file.\r\n     */\r\n    step: function (cb) {\r\n      beforeStepCallback && beforeStepCallback(nodes, edges);\r\n      var v12 = [];\r\n      var nLen = nodes.length;\r\n\r\n      for (var i = 0; i < edges.length; i++) {\r\n        var e = edges[i];\r\n\r\n        if (e.ignoreForceLayout) {\r\n          continue;\r\n        }\r\n\r\n        var n1 = e.n1;\r\n        var n2 = e.n2;\r\n        vec2.sub(v12, n2.p, n1.p);\r\n        var d = vec2.len(v12) - e.d;\r\n        var w = n2.w / (n1.w + n2.w);\r\n\r\n        if (isNaN(w)) {\r\n          w = 0;\r\n        }\r\n\r\n        vec2.normalize(v12, v12);\r\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\r\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\r\n      } // Gravity\r\n\r\n\r\n      for (var i = 0; i < nLen; i++) {\r\n        var n = nodes[i];\r\n\r\n        if (!n.fixed) {\r\n          vec2.sub(v12, center, n.p); // let d = vec2.len(v12);\r\n          // vec2.scale(v12, v12, 1 / d);\r\n          // let gravityFactor = gravity;\r\n\r\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\r\n        }\r\n      } // Repulsive\r\n      // PENDING\r\n\r\n\r\n      for (var i = 0; i < nLen; i++) {\r\n        var n1 = nodes[i];\r\n\r\n        for (var j = i + 1; j < nLen; j++) {\r\n          var n2 = nodes[j];\r\n          vec2.sub(v12, n2.p, n1.p);\r\n          var d = vec2.len(v12);\r\n\r\n          if (d === 0) {\r\n            // Random repulse\r\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\r\n            d = 1;\r\n          }\r\n\r\n          var repFact = (n1.rep + n2.rep) / d / d;\r\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\r\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\r\n        }\r\n      }\r\n\r\n      var v = [];\r\n\r\n      for (var i = 0; i < nLen; i++) {\r\n        var n = nodes[i];\r\n\r\n        if (!n.fixed) {\r\n          vec2.sub(v, n.p, n.pp);\r\n          scaleAndAdd(n.p, n.p, v, friction);\r\n          vec2.copy(n.pp, n.p);\r\n        }\r\n      }\r\n\r\n      friction = friction * 0.992;\r\n      var finished = friction < 0.01;\r\n      afterStepCallback && afterStepCallback(nodes, edges, finished);\r\n      cb && cb(finished);\r\n    }\r\n  };\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { forceLayout } from './forceHelper';\r\nimport { simpleLayout } from './simpleLayoutHelper';\r\nimport { circularLayout } from './circularLayoutHelper';\r\nimport { linearMap } from '../../util/number';\r\nimport * as vec2 from 'zrender/lib/core/vector';\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { getCurvenessForEdge } from '../helper/multipleGraphEdgeHelper';\r\nexport default function graphForceLayout(ecModel) {\r\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\r\n    var coordSys = graphSeries.coordinateSystem;\r\n\r\n    if (coordSys && coordSys.type !== 'view') {\r\n      return;\r\n    }\r\n\r\n    if (graphSeries.get('layout') === 'force') {\r\n      var preservedPoints_1 = graphSeries.preservedPoints || {};\r\n      var graph_1 = graphSeries.getGraph();\r\n      var nodeData_1 = graph_1.data;\r\n      var edgeData = graph_1.edgeData;\r\n      var forceModel = graphSeries.getModel('force');\r\n      var initLayout = forceModel.get('initLayout');\r\n\r\n      if (graphSeries.preservedPoints) {\r\n        nodeData_1.each(function (idx) {\r\n          var id = nodeData_1.getId(idx);\r\n          nodeData_1.setItemLayout(idx, preservedPoints_1[id] || [NaN, NaN]);\r\n        });\r\n      } else if (!initLayout || initLayout === 'none') {\r\n        simpleLayout(graphSeries);\r\n      } else if (initLayout === 'circular') {\r\n        circularLayout(graphSeries, 'value');\r\n      }\r\n\r\n      var nodeDataExtent_1 = nodeData_1.getDataExtent('value');\r\n      var edgeDataExtent_1 = edgeData.getDataExtent('value'); // let edgeDataExtent = edgeData.getDataExtent('value');\r\n\r\n      var repulsion = forceModel.get('repulsion');\r\n      var edgeLength = forceModel.get('edgeLength');\r\n      var repulsionArr_1 = zrUtil.isArray(repulsion) ? repulsion : [repulsion, repulsion];\r\n      var edgeLengthArr_1 = zrUtil.isArray(edgeLength) ? edgeLength : [edgeLength, edgeLength]; // Larger value has smaller length\r\n\r\n      edgeLengthArr_1 = [edgeLengthArr_1[1], edgeLengthArr_1[0]];\r\n      var nodes_1 = nodeData_1.mapArray('value', function (value, idx) {\r\n        var point = nodeData_1.getItemLayout(idx);\r\n        var rep = linearMap(value, nodeDataExtent_1, repulsionArr_1);\r\n\r\n        if (isNaN(rep)) {\r\n          rep = (repulsionArr_1[0] + repulsionArr_1[1]) / 2;\r\n        }\r\n\r\n        return {\r\n          w: rep,\r\n          rep: rep,\r\n          fixed: nodeData_1.getItemModel(idx).get('fixed'),\r\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\r\n        };\r\n      });\r\n      var edges = edgeData.mapArray('value', function (value, idx) {\r\n        var edge = graph_1.getEdgeByIndex(idx);\r\n        var d = linearMap(value, edgeDataExtent_1, edgeLengthArr_1);\r\n\r\n        if (isNaN(d)) {\r\n          d = (edgeLengthArr_1[0] + edgeLengthArr_1[1]) / 2;\r\n        }\r\n\r\n        var edgeModel = edge.getModel();\r\n        var curveness = zrUtil.retrieve3(edge.getModel().get(['lineStyle', 'curveness']), -getCurvenessForEdge(edge, graphSeries, idx, true), 0);\r\n        return {\r\n          n1: nodes_1[edge.node1.dataIndex],\r\n          n2: nodes_1[edge.node2.dataIndex],\r\n          d: d,\r\n          curveness: curveness,\r\n          ignoreForceLayout: edgeModel.get('ignoreForceLayout')\r\n        };\r\n      }); // let coordSys = graphSeries.coordinateSystem;\r\n\r\n      var rect = coordSys.getBoundingRect();\r\n      var forceInstance = forceLayout(nodes_1, edges, {\r\n        rect: rect,\r\n        gravity: forceModel.get('gravity'),\r\n        friction: forceModel.get('friction')\r\n      });\r\n      forceInstance.beforeStep(function (nodes, edges) {\r\n        for (var i = 0, l = nodes.length; i < l; i++) {\r\n          if (nodes[i].fixed) {\r\n            // Write back to layout instance\r\n            vec2.copy(nodes[i].p, graph_1.getNodeByIndex(i).getLayout());\r\n          }\r\n        }\r\n      });\r\n      forceInstance.afterStep(function (nodes, edges, stopped) {\r\n        for (var i = 0, l = nodes.length; i < l; i++) {\r\n          if (!nodes[i].fixed) {\r\n            graph_1.getNodeByIndex(i).setLayout(nodes[i].p);\r\n          }\r\n\r\n          preservedPoints_1[nodeData_1.getId(i)] = nodes[i].p;\r\n        }\r\n\r\n        for (var i = 0, l = edges.length; i < l; i++) {\r\n          var e = edges[i];\r\n          var edge = graph_1.getEdgeByIndex(i);\r\n          var p1 = e.n1.p;\r\n          var p2 = e.n2.p;\r\n          var points = edge.getLayout();\r\n          points = points ? points.slice() : [];\r\n          points[0] = points[0] || [];\r\n          points[1] = points[1] || [];\r\n          vec2.copy(points[0], p1);\r\n          vec2.copy(points[1], p2);\r\n\r\n          if (+e.curveness) {\r\n            points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\r\n          }\r\n\r\n          edge.setLayout(points);\r\n        }\r\n      });\r\n      graphSeries.forceLayout = forceInstance;\r\n      graphSeries.preservedPoints = preservedPoints_1; // Step to get the layout\r\n\r\n      forceInstance.step();\r\n    } else {\r\n      // Remove prev injected forceLayout instance\r\n      graphSeries.forceLayout = null;\r\n    }\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// FIXME Where to create the simple view coordinate system\r\nimport View from '../../coord/View';\r\nimport { getLayoutRect } from '../../util/layout';\r\nimport * as bbox from 'zrender/lib/core/bbox';\r\nimport { extend } from 'zrender/lib/core/util';\r\n\r\nfunction getViewRect(seriesModel, api, aspect) {\r\n  var option = extend(seriesModel.getBoxLayoutParams(), {\r\n    aspect: aspect\r\n  });\r\n  return getLayoutRect(option, {\r\n    width: api.getWidth(),\r\n    height: api.getHeight()\r\n  });\r\n}\r\n\r\nexport default function createViewCoordSys(ecModel, api) {\r\n  var viewList = [];\r\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\r\n    var coordSysType = seriesModel.get('coordinateSystem');\r\n\r\n    if (!coordSysType || coordSysType === 'view') {\r\n      var data_1 = seriesModel.getData();\r\n      var positions = data_1.mapArray(function (idx) {\r\n        var itemModel = data_1.getItemModel(idx);\r\n        return [+itemModel.get('x'), +itemModel.get('y')];\r\n      });\r\n      var min = [];\r\n      var max = [];\r\n      bbox.fromPoints(positions, min, max); // If width or height is 0\r\n\r\n      if (max[0] - min[0] === 0) {\r\n        max[0] += 1;\r\n        min[0] -= 1;\r\n      }\r\n\r\n      if (max[1] - min[1] === 0) {\r\n        max[1] += 1;\r\n        min[1] -= 1;\r\n      }\r\n\r\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\r\n\r\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\r\n\r\n      if (isNaN(aspect)) {\r\n        min = [viewRect.x, viewRect.y];\r\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\r\n      }\r\n\r\n      var bbWidth = max[0] - min[0];\r\n      var bbHeight = max[1] - min[1];\r\n      var viewWidth = viewRect.width;\r\n      var viewHeight = viewRect.height;\r\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\r\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\r\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\r\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\r\n\r\n      viewCoordSys.setCenter(seriesModel.get('center'));\r\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\r\n      viewList.push(viewCoordSys);\r\n    }\r\n  });\r\n  return viewList;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * Line path for bezier and straight line draw\r\n */\r\n\r\nimport * as graphic from '../../util/graphic';\r\nimport * as vec2 from 'zrender/lib/core/vector';\r\nvar straightLineProto = graphic.Line.prototype;\r\nvar bezierCurveProto = graphic.BezierCurve.prototype;\r\n\r\nvar StraightLineShape =\r\n/** @class */\r\nfunction () {\r\n  function StraightLineShape() {\r\n    // Start point\r\n    this.x1 = 0;\r\n    this.y1 = 0; // End point\r\n\r\n    this.x2 = 0;\r\n    this.y2 = 0;\r\n    this.percent = 1;\r\n  }\r\n\r\n  return StraightLineShape;\r\n}();\r\n\r\nvar CurveShape =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(CurveShape, _super);\r\n\r\n  function CurveShape() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  return CurveShape;\r\n}(StraightLineShape);\r\n\r\nfunction isStraightLine(shape) {\r\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\r\n}\r\n\r\nvar ECLinePath =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ECLinePath, _super);\r\n\r\n  function ECLinePath(opts) {\r\n    var _this = _super.call(this, opts) || this;\r\n\r\n    _this.type = 'ec-line';\r\n    return _this;\r\n  }\r\n\r\n  ECLinePath.prototype.getDefaultStyle = function () {\r\n    return {\r\n      stroke: '#000',\r\n      fill: null\r\n    };\r\n  };\r\n\r\n  ECLinePath.prototype.getDefaultShape = function () {\r\n    return new StraightLineShape();\r\n  };\r\n\r\n  ECLinePath.prototype.buildPath = function (ctx, shape) {\r\n    if (isStraightLine(shape)) {\r\n      straightLineProto.buildPath.call(this, ctx, shape);\r\n    } else {\r\n      bezierCurveProto.buildPath.call(this, ctx, shape);\r\n    }\r\n  };\r\n\r\n  ECLinePath.prototype.pointAt = function (t) {\r\n    if (isStraightLine(this.shape)) {\r\n      return straightLineProto.pointAt.call(this, t);\r\n    } else {\r\n      return bezierCurveProto.pointAt.call(this, t);\r\n    }\r\n  };\r\n\r\n  ECLinePath.prototype.tangentAt = function (t) {\r\n    var shape = this.shape;\r\n    var p = isStraightLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\r\n    return vec2.normalize(p, p);\r\n  };\r\n\r\n  return ECLinePath;\r\n}(graphic.Path);\r\n\r\nexport default ECLinePath;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport { isArray, each } from 'zrender/lib/core/util';\r\nimport * as vector from 'zrender/lib/core/vector';\r\nimport * as symbolUtil from '../../util/symbol';\r\nimport ECLinePath from './LinePath';\r\nimport * as graphic from '../../util/graphic';\r\nimport { enableHoverEmphasis, enterEmphasis, leaveEmphasis, SPECIAL_STATES } from '../../util/states';\r\nimport { getLabelStatesModels, setLabelStyle } from '../../label/labelStyle';\r\nimport { round } from '../../util/number';\r\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\r\n\r\nfunction makeSymbolTypeKey(symbolCategory) {\r\n  return '_' + symbolCategory + 'Type';\r\n}\r\n/**\r\n * @inner\r\n */\r\n\r\n\r\nfunction createSymbol(name, lineData, idx) {\r\n  var symbolType = lineData.getItemVisual(idx, name);\r\n\r\n  if (!symbolType || symbolType === 'none') {\r\n    return;\r\n  }\r\n\r\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\r\n  var symbolRotate = lineData.getItemVisual(idx, name + 'Rotate');\r\n  var symbolOffset = lineData.getItemVisual(idx, name + 'Offset');\r\n  var symbolKeepAspect = lineData.getItemVisual(idx, name + 'KeepAspect');\r\n  var symbolSizeArr = symbolUtil.normalizeSymbolSize(symbolSize);\r\n  var symbolOffsetArr = symbolUtil.normalizeSymbolOffset(symbolOffset || 0, symbolSizeArr);\r\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSizeArr[0] / 2 + symbolOffsetArr[0], -symbolSizeArr[1] / 2 + symbolOffsetArr[1], symbolSizeArr[0], symbolSizeArr[1], null, symbolKeepAspect);\r\n  symbolPath.__specifiedRotation = symbolRotate == null || isNaN(symbolRotate) ? void 0 : +symbolRotate * Math.PI / 180 || 0;\r\n  symbolPath.name = name;\r\n  return symbolPath;\r\n}\r\n\r\nfunction createLine(points) {\r\n  var line = new ECLinePath({\r\n    name: 'line',\r\n    subPixelOptimize: true\r\n  });\r\n  setLinePoints(line.shape, points);\r\n  return line;\r\n}\r\n\r\nfunction setLinePoints(targetShape, points) {\r\n  targetShape.x1 = points[0][0];\r\n  targetShape.y1 = points[0][1];\r\n  targetShape.x2 = points[1][0];\r\n  targetShape.y2 = points[1][1];\r\n  targetShape.percent = 1;\r\n  var cp1 = points[2];\r\n\r\n  if (cp1) {\r\n    targetShape.cpx1 = cp1[0];\r\n    targetShape.cpy1 = cp1[1];\r\n  } else {\r\n    targetShape.cpx1 = NaN;\r\n    targetShape.cpy1 = NaN;\r\n  }\r\n}\r\n\r\nvar Line =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(Line, _super);\r\n\r\n  function Line(lineData, idx, seriesScope) {\r\n    var _this = _super.call(this) || this;\r\n\r\n    _this._createLine(lineData, idx, seriesScope);\r\n\r\n    return _this;\r\n  }\r\n\r\n  Line.prototype._createLine = function (lineData, idx, seriesScope) {\r\n    var seriesModel = lineData.hostModel;\r\n    var linePoints = lineData.getItemLayout(idx);\r\n    var line = createLine(linePoints);\r\n    line.shape.percent = 0;\r\n    graphic.initProps(line, {\r\n      shape: {\r\n        percent: 1\r\n      }\r\n    }, seriesModel, idx);\r\n    this.add(line);\r\n    each(SYMBOL_CATEGORIES, function (symbolCategory) {\r\n      var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\r\n      // it will be updated after line#update.\r\n      // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\r\n\r\n      this.add(symbol);\r\n      this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\r\n    }, this);\r\n\r\n    this._updateCommonStl(lineData, idx, seriesScope);\r\n  }; // TODO More strict on the List type in parameters?\r\n\r\n\r\n  Line.prototype.updateData = function (lineData, idx, seriesScope) {\r\n    var seriesModel = lineData.hostModel;\r\n    var line = this.childOfName('line');\r\n    var linePoints = lineData.getItemLayout(idx);\r\n    var target = {\r\n      shape: {}\r\n    };\r\n    setLinePoints(target.shape, linePoints);\r\n    graphic.updateProps(line, target, seriesModel, idx);\r\n    each(SYMBOL_CATEGORIES, function (symbolCategory) {\r\n      var symbolType = lineData.getItemVisual(idx, symbolCategory);\r\n      var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\r\n\r\n      if (this[key] !== symbolType) {\r\n        this.remove(this.childOfName(symbolCategory));\r\n        var symbol = createSymbol(symbolCategory, lineData, idx);\r\n        this.add(symbol);\r\n      }\r\n\r\n      this[key] = symbolType;\r\n    }, this);\r\n\r\n    this._updateCommonStl(lineData, idx, seriesScope);\r\n  };\r\n\r\n  ;\r\n\r\n  Line.prototype.getLinePath = function () {\r\n    return this.childAt(0);\r\n  };\r\n\r\n  Line.prototype._updateCommonStl = function (lineData, idx, seriesScope) {\r\n    var seriesModel = lineData.hostModel;\r\n    var line = this.childOfName('line');\r\n    var emphasisLineStyle = seriesScope && seriesScope.emphasisLineStyle;\r\n    var blurLineStyle = seriesScope && seriesScope.blurLineStyle;\r\n    var selectLineStyle = seriesScope && seriesScope.selectLineStyle;\r\n    var labelStatesModels = seriesScope && seriesScope.labelStatesModels; // Optimization for large dataset\r\n\r\n    if (!seriesScope || lineData.hasItemOption) {\r\n      var itemModel = lineData.getItemModel(idx);\r\n      emphasisLineStyle = itemModel.getModel(['emphasis', 'lineStyle']).getLineStyle();\r\n      blurLineStyle = itemModel.getModel(['blur', 'lineStyle']).getLineStyle();\r\n      selectLineStyle = itemModel.getModel(['select', 'lineStyle']).getLineStyle();\r\n      labelStatesModels = getLabelStatesModels(itemModel);\r\n    }\r\n\r\n    var lineStyle = lineData.getItemVisual(idx, 'style');\r\n    var visualColor = lineStyle.stroke;\r\n    line.useStyle(lineStyle);\r\n    line.style.fill = null;\r\n    line.style.strokeNoScale = true;\r\n    line.ensureState('emphasis').style = emphasisLineStyle;\r\n    line.ensureState('blur').style = blurLineStyle;\r\n    line.ensureState('select').style = selectLineStyle; // Update symbol\r\n\r\n    each(SYMBOL_CATEGORIES, function (symbolCategory) {\r\n      var symbol = this.childOfName(symbolCategory);\r\n\r\n      if (symbol) {\r\n        // Share opacity and color with line.\r\n        symbol.setColor(visualColor);\r\n        symbol.style.opacity = lineStyle.opacity;\r\n\r\n        for (var i = 0; i < SPECIAL_STATES.length; i++) {\r\n          var stateName = SPECIAL_STATES[i];\r\n          var lineState = line.getState(stateName);\r\n\r\n          if (lineState) {\r\n            var lineStateStyle = lineState.style || {};\r\n            var state = symbol.ensureState(stateName);\r\n            var stateStyle = state.style || (state.style = {});\r\n\r\n            if (lineStateStyle.stroke != null) {\r\n              stateStyle[symbol.__isEmptyBrush ? 'stroke' : 'fill'] = lineStateStyle.stroke;\r\n            }\r\n\r\n            if (lineStateStyle.opacity != null) {\r\n              stateStyle.opacity = lineStateStyle.opacity;\r\n            }\r\n          }\r\n        }\r\n\r\n        symbol.markRedraw();\r\n      }\r\n    }, this);\r\n    var rawVal = seriesModel.getRawValue(idx);\r\n    setLabelStyle(this, labelStatesModels, {\r\n      labelDataIndex: idx,\r\n      labelFetcher: {\r\n        getFormattedLabel: function (dataIndex, stateName) {\r\n          return seriesModel.getFormattedLabel(dataIndex, stateName, lineData.dataType);\r\n        }\r\n      },\r\n      inheritColor: visualColor || '#000',\r\n      defaultOpacity: lineStyle.opacity,\r\n      defaultText: (rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal) + ''\r\n    });\r\n    var label = this.getTextContent(); // Always set `textStyle` even if `normalStyle.text` is null, because default\r\n    // values have to be set on `normalStyle`.\r\n\r\n    if (label) {\r\n      var labelNormalModel = labelStatesModels.normal;\r\n      label.__align = label.style.align;\r\n      label.__verticalAlign = label.style.verticalAlign; // 'start', 'middle', 'end'\r\n\r\n      label.__position = labelNormalModel.get('position') || 'middle';\r\n      var distance = labelNormalModel.get('distance');\r\n\r\n      if (!isArray(distance)) {\r\n        distance = [distance, distance];\r\n      }\r\n\r\n      label.__labelDistance = distance;\r\n    }\r\n\r\n    this.setTextConfig({\r\n      position: null,\r\n      local: true,\r\n      inside: false // Can't be inside for stroke element.\r\n\r\n    });\r\n    enableHoverEmphasis(this);\r\n  };\r\n\r\n  Line.prototype.highlight = function () {\r\n    enterEmphasis(this);\r\n  };\r\n\r\n  Line.prototype.downplay = function () {\r\n    leaveEmphasis(this);\r\n  };\r\n\r\n  Line.prototype.updateLayout = function (lineData, idx) {\r\n    this.setLinePoints(lineData.getItemLayout(idx));\r\n  };\r\n\r\n  Line.prototype.setLinePoints = function (points) {\r\n    var linePath = this.childOfName('line');\r\n    setLinePoints(linePath.shape, points);\r\n    linePath.dirty();\r\n  };\r\n\r\n  Line.prototype.beforeUpdate = function () {\r\n    var lineGroup = this;\r\n    var symbolFrom = lineGroup.childOfName('fromSymbol');\r\n    var symbolTo = lineGroup.childOfName('toSymbol');\r\n    var label = lineGroup.getTextContent(); // Quick reject\r\n\r\n    if (!symbolFrom && !symbolTo && (!label || label.ignore)) {\r\n      return;\r\n    }\r\n\r\n    var invScale = 1;\r\n    var parentNode = this.parent;\r\n\r\n    while (parentNode) {\r\n      if (parentNode.scaleX) {\r\n        invScale /= parentNode.scaleX;\r\n      }\r\n\r\n      parentNode = parentNode.parent;\r\n    }\r\n\r\n    var line = lineGroup.childOfName('line'); // If line not changed\r\n    // FIXME Parent scale changed\r\n\r\n    if (!this.__dirty && !line.__dirty) {\r\n      return;\r\n    }\r\n\r\n    var percent = line.shape.percent;\r\n    var fromPos = line.pointAt(0);\r\n    var toPos = line.pointAt(percent);\r\n    var d = vector.sub([], toPos, fromPos);\r\n    vector.normalize(d, d);\r\n\r\n    function setSymbolRotation(symbol, percent) {\r\n      // Fix #12388\r\n      // when symbol is set to be 'arrow' in markLine,\r\n      // symbolRotate value will be ignored, and compulsively use tangent angle.\r\n      // rotate by default if symbol rotation is not specified\r\n      var specifiedRotation = symbol.__specifiedRotation;\r\n\r\n      if (specifiedRotation == null) {\r\n        var tangent = line.tangentAt(percent);\r\n        symbol.attr('rotation', (percent === 1 ? -1 : 1) * Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\r\n      } else {\r\n        symbol.attr('rotation', specifiedRotation);\r\n      }\r\n    }\r\n\r\n    if (symbolFrom) {\r\n      symbolFrom.setPosition(fromPos);\r\n      setSymbolRotation(symbolFrom, 0);\r\n      symbolFrom.scaleX = symbolFrom.scaleY = invScale * percent;\r\n      symbolFrom.markRedraw();\r\n    }\r\n\r\n    if (symbolTo) {\r\n      symbolTo.setPosition(toPos);\r\n      setSymbolRotation(symbolTo, 1);\r\n      symbolTo.scaleX = symbolTo.scaleY = invScale * percent;\r\n      symbolTo.markRedraw();\r\n    }\r\n\r\n    if (label && !label.ignore) {\r\n      label.x = label.y = 0;\r\n      label.originX = label.originY = 0;\r\n      var textAlign = void 0;\r\n      var textVerticalAlign = void 0;\r\n      var distance = label.__labelDistance;\r\n      var distanceX = distance[0] * invScale;\r\n      var distanceY = distance[1] * invScale;\r\n      var halfPercent = percent / 2;\r\n      var tangent = line.tangentAt(halfPercent);\r\n      var n = [tangent[1], -tangent[0]];\r\n      var cp = line.pointAt(halfPercent);\r\n\r\n      if (n[1] > 0) {\r\n        n[0] = -n[0];\r\n        n[1] = -n[1];\r\n      }\r\n\r\n      var dir = tangent[0] < 0 ? -1 : 1;\r\n\r\n      if (label.__position !== 'start' && label.__position !== 'end') {\r\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\r\n\r\n        if (toPos[0] < fromPos[0]) {\r\n          rotation = Math.PI + rotation;\r\n        }\r\n\r\n        label.rotation = rotation;\r\n      }\r\n\r\n      var dy = void 0;\r\n\r\n      switch (label.__position) {\r\n        case 'insideStartTop':\r\n        case 'insideMiddleTop':\r\n        case 'insideEndTop':\r\n        case 'middle':\r\n          dy = -distanceY;\r\n          textVerticalAlign = 'bottom';\r\n          break;\r\n\r\n        case 'insideStartBottom':\r\n        case 'insideMiddleBottom':\r\n        case 'insideEndBottom':\r\n          dy = distanceY;\r\n          textVerticalAlign = 'top';\r\n          break;\r\n\r\n        default:\r\n          dy = 0;\r\n          textVerticalAlign = 'middle';\r\n      }\r\n\r\n      switch (label.__position) {\r\n        case 'end':\r\n          label.x = d[0] * distanceX + toPos[0];\r\n          label.y = d[1] * distanceY + toPos[1];\r\n          textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\r\n          textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\r\n          break;\r\n\r\n        case 'start':\r\n          label.x = -d[0] * distanceX + fromPos[0];\r\n          label.y = -d[1] * distanceY + fromPos[1];\r\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\r\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\r\n          break;\r\n\r\n        case 'insideStartTop':\r\n        case 'insideStart':\r\n        case 'insideStartBottom':\r\n          label.x = distanceX * dir + fromPos[0];\r\n          label.y = fromPos[1] + dy;\r\n          textAlign = tangent[0] < 0 ? 'right' : 'left';\r\n          label.originX = -distanceX * dir;\r\n          label.originY = -dy;\r\n          break;\r\n\r\n        case 'insideMiddleTop':\r\n        case 'insideMiddle':\r\n        case 'insideMiddleBottom':\r\n        case 'middle':\r\n          label.x = cp[0];\r\n          label.y = cp[1] + dy;\r\n          textAlign = 'center';\r\n          label.originY = -dy;\r\n          break;\r\n\r\n        case 'insideEndTop':\r\n        case 'insideEnd':\r\n        case 'insideEndBottom':\r\n          label.x = -distanceX * dir + toPos[0];\r\n          label.y = toPos[1] + dy;\r\n          textAlign = tangent[0] >= 0 ? 'right' : 'left';\r\n          label.originX = distanceX * dir;\r\n          label.originY = -dy;\r\n          break;\r\n      }\r\n\r\n      label.scaleX = label.scaleY = invScale;\r\n      label.setStyle({\r\n        // Use the user specified text align and baseline first\r\n        verticalAlign: label.__verticalAlign || textVerticalAlign,\r\n        align: label.__align || textAlign\r\n      });\r\n    }\r\n  };\r\n\r\n  return Line;\r\n}(graphic.Group);\r\n\r\nexport default Line;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as graphic from '../../util/graphic';\r\nimport LineGroup from './Line';\r\nimport { getLabelStatesModels } from '../../label/labelStyle';\r\n\r\nvar LineDraw =\r\n/** @class */\r\nfunction () {\r\n  function LineDraw(LineCtor) {\r\n    this.group = new graphic.Group();\r\n    this._LineCtor = LineCtor || LineGroup;\r\n  }\r\n\r\n  LineDraw.prototype.isPersistent = function () {\r\n    return true;\r\n  };\r\n\r\n  ;\r\n\r\n  LineDraw.prototype.updateData = function (lineData) {\r\n    var _this = this;\r\n\r\n    var lineDraw = this;\r\n    var group = lineDraw.group;\r\n    var oldLineData = lineDraw._lineData;\r\n    lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\r\n    // stream mode to normal mode, where previous elements should be removed.\r\n\r\n    if (!oldLineData) {\r\n      group.removeAll();\r\n    }\r\n\r\n    var seriesScope = makeSeriesScope(lineData);\r\n    lineData.diff(oldLineData).add(function (idx) {\r\n      _this._doAdd(lineData, idx, seriesScope);\r\n    }).update(function (newIdx, oldIdx) {\r\n      _this._doUpdate(oldLineData, lineData, oldIdx, newIdx, seriesScope);\r\n    }).remove(function (idx) {\r\n      group.remove(oldLineData.getItemGraphicEl(idx));\r\n    }).execute();\r\n  };\r\n\r\n  ;\r\n\r\n  LineDraw.prototype.updateLayout = function () {\r\n    var lineData = this._lineData; // Do not support update layout in incremental mode.\r\n\r\n    if (!lineData) {\r\n      return;\r\n    }\r\n\r\n    lineData.eachItemGraphicEl(function (el, idx) {\r\n      el.updateLayout(lineData, idx);\r\n    }, this);\r\n  };\r\n\r\n  ;\r\n\r\n  LineDraw.prototype.incrementalPrepareUpdate = function (lineData) {\r\n    this._seriesScope = makeSeriesScope(lineData);\r\n    this._lineData = null;\r\n    this.group.removeAll();\r\n  };\r\n\r\n  ;\r\n\r\n  LineDraw.prototype.incrementalUpdate = function (taskParams, lineData) {\r\n    function updateIncrementalAndHover(el) {\r\n      if (!el.isGroup && !isEffectObject(el)) {\r\n        el.incremental = true;\r\n        el.ensureState('emphasis').hoverLayer = true;\r\n      }\r\n    }\r\n\r\n    for (var idx = taskParams.start; idx < taskParams.end; idx++) {\r\n      var itemLayout = lineData.getItemLayout(idx);\r\n\r\n      if (lineNeedsDraw(itemLayout)) {\r\n        var el = new this._LineCtor(lineData, idx, this._seriesScope);\r\n        el.traverse(updateIncrementalAndHover);\r\n        this.group.add(el);\r\n        lineData.setItemGraphicEl(idx, el);\r\n      }\r\n    }\r\n  };\r\n\r\n  ;\r\n\r\n  LineDraw.prototype.remove = function () {\r\n    this.group.removeAll();\r\n  };\r\n\r\n  ;\r\n\r\n  LineDraw.prototype._doAdd = function (lineData, idx, seriesScope) {\r\n    var itemLayout = lineData.getItemLayout(idx);\r\n\r\n    if (!lineNeedsDraw(itemLayout)) {\r\n      return;\r\n    }\r\n\r\n    var el = new this._LineCtor(lineData, idx, seriesScope);\r\n    lineData.setItemGraphicEl(idx, el);\r\n    this.group.add(el);\r\n  };\r\n\r\n  LineDraw.prototype._doUpdate = function (oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\r\n    var itemEl = oldLineData.getItemGraphicEl(oldIdx);\r\n\r\n    if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\r\n      this.group.remove(itemEl);\r\n      return;\r\n    }\r\n\r\n    if (!itemEl) {\r\n      itemEl = new this._LineCtor(newLineData, newIdx, seriesScope);\r\n    } else {\r\n      itemEl.updateData(newLineData, newIdx, seriesScope);\r\n    }\r\n\r\n    newLineData.setItemGraphicEl(newIdx, itemEl);\r\n    this.group.add(itemEl);\r\n  };\r\n\r\n  return LineDraw;\r\n}();\r\n\r\nfunction isEffectObject(el) {\r\n  return el.animators && el.animators.length > 0;\r\n}\r\n\r\nfunction makeSeriesScope(lineData) {\r\n  var hostModel = lineData.hostModel;\r\n  return {\r\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\r\n    emphasisLineStyle: hostModel.getModel(['emphasis', 'lineStyle']).getLineStyle(),\r\n    blurLineStyle: hostModel.getModel(['blur', 'lineStyle']).getLineStyle(),\r\n    selectLineStyle: hostModel.getModel(['select', 'lineStyle']).getLineStyle(),\r\n    labelStatesModels: getLabelStatesModels(hostModel)\r\n  };\r\n}\r\n\r\nfunction isPointNaN(pt) {\r\n  return isNaN(pt[0]) || isNaN(pt[1]);\r\n}\r\n\r\nfunction lineNeedsDraw(pts) {\r\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\r\n}\r\n\r\nexport default LineDraw;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as curveTool from 'zrender/lib/core/curve';\r\nimport * as vec2 from 'zrender/lib/core/vector';\r\nimport { getSymbolSize } from './graphHelper';\r\nvar v1 = [];\r\nvar v2 = [];\r\nvar v3 = [];\r\nvar quadraticAt = curveTool.quadraticAt;\r\nvar v2DistSquare = vec2.distSquare;\r\nvar mathAbs = Math.abs;\r\n\r\nfunction intersectCurveCircle(curvePoints, center, radius) {\r\n  var p0 = curvePoints[0];\r\n  var p1 = curvePoints[1];\r\n  var p2 = curvePoints[2];\r\n  var d = Infinity;\r\n  var t;\r\n  var radiusSquare = radius * radius;\r\n  var interval = 0.1;\r\n\r\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\r\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\r\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\r\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\r\n\r\n    if (diff < d) {\r\n      d = diff;\r\n      t = _t;\r\n    }\r\n  } // Assume the segment is monotone\uFF0CFind root through Bisection method\r\n  // At most 32 iteration\r\n\r\n\r\n  for (var i = 0; i < 32; i++) {\r\n    // let prev = t - interval;\r\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\r\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\r\n\r\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\r\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\r\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\r\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\r\n    var diff = v2DistSquare(v2, center) - radiusSquare;\r\n\r\n    if (mathAbs(diff) < 1e-2) {\r\n      break;\r\n    } // let prevDiff = v2DistSquare(v1, center) - radiusSquare;\r\n\r\n\r\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\r\n    interval /= 2;\r\n\r\n    if (diff < 0) {\r\n      if (nextDiff >= 0) {\r\n        t = t + interval;\r\n      } else {\r\n        t = t - interval;\r\n      }\r\n    } else {\r\n      if (nextDiff >= 0) {\r\n        t = t - interval;\r\n      } else {\r\n        t = t + interval;\r\n      }\r\n    }\r\n  }\r\n\r\n  return t;\r\n} // Adjust edge to avoid\r\n\r\n\r\nexport default function adjustEdge(graph, scale) {\r\n  var tmp0 = [];\r\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\r\n  var pts = [[], [], []];\r\n  var pts2 = [[], []];\r\n  var v = [];\r\n  scale /= 2;\r\n  graph.eachEdge(function (edge, idx) {\r\n    var linePoints = edge.getLayout();\r\n    var fromSymbol = edge.getVisual('fromSymbol');\r\n    var toSymbol = edge.getVisual('toSymbol');\r\n\r\n    if (!linePoints.__original) {\r\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\r\n\r\n      if (linePoints[2]) {\r\n        linePoints.__original.push(vec2.clone(linePoints[2]));\r\n      }\r\n    }\r\n\r\n    var originalPoints = linePoints.__original; // Quadratic curve\r\n\r\n    if (linePoints[2] != null) {\r\n      vec2.copy(pts[0], originalPoints[0]);\r\n      vec2.copy(pts[1], originalPoints[2]);\r\n      vec2.copy(pts[2], originalPoints[1]);\r\n\r\n      if (fromSymbol && fromSymbol !== 'none') {\r\n        var symbolSize = getSymbolSize(edge.node1);\r\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\r\n\r\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\r\n        pts[0][0] = tmp0[3];\r\n        pts[1][0] = tmp0[4];\r\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\r\n        pts[0][1] = tmp0[3];\r\n        pts[1][1] = tmp0[4];\r\n      }\r\n\r\n      if (toSymbol && toSymbol !== 'none') {\r\n        var symbolSize = getSymbolSize(edge.node2);\r\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\r\n\r\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\r\n        pts[1][0] = tmp0[1];\r\n        pts[2][0] = tmp0[2];\r\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\r\n        pts[1][1] = tmp0[1];\r\n        pts[2][1] = tmp0[2];\r\n      } // Copy back to layout\r\n\r\n\r\n      vec2.copy(linePoints[0], pts[0]);\r\n      vec2.copy(linePoints[1], pts[2]);\r\n      vec2.copy(linePoints[2], pts[1]);\r\n    } // Line\r\n    else {\r\n        vec2.copy(pts2[0], originalPoints[0]);\r\n        vec2.copy(pts2[1], originalPoints[1]);\r\n        vec2.sub(v, pts2[1], pts2[0]);\r\n        vec2.normalize(v, v);\r\n\r\n        if (fromSymbol && fromSymbol !== 'none') {\r\n          var symbolSize = getSymbolSize(edge.node1);\r\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\r\n        }\r\n\r\n        if (toSymbol && toSymbol !== 'none') {\r\n          var symbolSize = getSymbolSize(edge.node2);\r\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\r\n        }\r\n\r\n        vec2.copy(linePoints[0], pts2[0]);\r\n        vec2.copy(linePoints[1], pts2[1]);\r\n      }\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport SymbolDraw from '../helper/SymbolDraw';\r\nimport LineDraw from '../helper/LineDraw';\r\nimport RoamController from '../../component/helper/RoamController';\r\nimport * as roamHelper from '../../component/helper/roamHelper';\r\nimport { onIrrelevantElement } from '../../component/helper/cursorHelper';\r\nimport * as graphic from '../../util/graphic';\r\nimport adjustEdge from './adjustEdge';\r\nimport { getNodeGlobalScale } from './graphHelper';\r\nimport ChartView from '../../view/Chart';\r\nimport { getECData } from '../../util/innerStore';\r\n\r\nfunction isViewCoordSys(coordSys) {\r\n  return coordSys.type === 'view';\r\n}\r\n\r\nvar GraphView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(GraphView, _super);\r\n\r\n  function GraphView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = GraphView.type;\r\n    return _this;\r\n  }\r\n\r\n  GraphView.prototype.init = function (ecModel, api) {\r\n    var symbolDraw = new SymbolDraw();\r\n    var lineDraw = new LineDraw();\r\n    var group = this.group;\r\n    this._controller = new RoamController(api.getZr());\r\n    this._controllerHost = {\r\n      target: group\r\n    };\r\n    group.add(symbolDraw.group);\r\n    group.add(lineDraw.group);\r\n    this._symbolDraw = symbolDraw;\r\n    this._lineDraw = lineDraw;\r\n    this._firstRender = true;\r\n  };\r\n\r\n  GraphView.prototype.render = function (seriesModel, ecModel, api) {\r\n    var _this = this;\r\n\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    this._model = seriesModel;\r\n    var symbolDraw = this._symbolDraw;\r\n    var lineDraw = this._lineDraw;\r\n    var group = this.group;\r\n\r\n    if (isViewCoordSys(coordSys)) {\r\n      var groupNewProp = {\r\n        x: coordSys.x,\r\n        y: coordSys.y,\r\n        scaleX: coordSys.scaleX,\r\n        scaleY: coordSys.scaleY\r\n      };\r\n\r\n      if (this._firstRender) {\r\n        group.attr(groupNewProp);\r\n      } else {\r\n        graphic.updateProps(group, groupNewProp, seriesModel);\r\n      }\r\n    } // Fix edge contact point with node\r\n\r\n\r\n    adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\r\n    var data = seriesModel.getData();\r\n    symbolDraw.updateData(data);\r\n    var edgeData = seriesModel.getEdgeData(); // TODO: TYPE\r\n\r\n    lineDraw.updateData(edgeData);\r\n\r\n    this._updateNodeAndLinkScale();\r\n\r\n    this._updateController(seriesModel, ecModel, api);\r\n\r\n    clearTimeout(this._layoutTimeout);\r\n    var forceLayout = seriesModel.forceLayout;\r\n    var layoutAnimation = seriesModel.get(['force', 'layoutAnimation']);\r\n\r\n    if (forceLayout) {\r\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\r\n    }\r\n\r\n    data.graph.eachNode(function (node) {\r\n      var idx = node.dataIndex;\r\n      var el = node.getGraphicEl();\r\n      var itemModel = node.getModel(); // Update draggable\r\n\r\n      el.off('drag').off('dragend');\r\n      var draggable = itemModel.get('draggable');\r\n\r\n      if (draggable) {\r\n        el.on('drag', function () {\r\n          if (forceLayout) {\r\n            forceLayout.warmUp();\r\n            !_this._layouting && _this._startForceLayoutIteration(forceLayout, layoutAnimation);\r\n            forceLayout.setFixed(idx); // Write position back to layout\r\n\r\n            data.setItemLayout(idx, [el.x, el.y]);\r\n          }\r\n        }).on('dragend', function () {\r\n          if (forceLayout) {\r\n            forceLayout.setUnfixed(idx);\r\n          }\r\n        });\r\n      }\r\n\r\n      el.setDraggable(draggable && !!forceLayout);\r\n      var focus = itemModel.get(['emphasis', 'focus']);\r\n\r\n      if (focus === 'adjacency') {\r\n        getECData(el).focus = node.getAdjacentDataIndices();\r\n      }\r\n    });\r\n    data.graph.eachEdge(function (edge) {\r\n      var el = edge.getGraphicEl();\r\n      var focus = edge.getModel().get(['emphasis', 'focus']);\r\n\r\n      if (focus === 'adjacency') {\r\n        getECData(el).focus = {\r\n          edge: [edge.dataIndex],\r\n          node: [edge.node1.dataIndex, edge.node2.dataIndex]\r\n        };\r\n      }\r\n    });\r\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get(['circular', 'rotateLabel']);\r\n    var cx = data.getLayout('cx');\r\n    var cy = data.getLayout('cy');\r\n    data.eachItemGraphicEl(function (el, idx) {\r\n      var itemModel = data.getItemModel(idx);\r\n      var labelRotate = itemModel.get(['label', 'rotate']) || 0;\r\n      var symbolPath = el.getSymbolPath();\r\n\r\n      if (circularRotateLabel) {\r\n        var pos = data.getItemLayout(idx);\r\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\r\n\r\n        if (rad < 0) {\r\n          rad = Math.PI * 2 + rad;\r\n        }\r\n\r\n        var isLeft = pos[0] < cx;\r\n\r\n        if (isLeft) {\r\n          rad = rad - Math.PI;\r\n        }\r\n\r\n        var textPosition = isLeft ? 'left' : 'right';\r\n        symbolPath.setTextConfig({\r\n          rotation: -rad,\r\n          position: textPosition,\r\n          origin: 'center'\r\n        });\r\n        var emphasisState = symbolPath.ensureState('emphasis');\r\n        zrUtil.extend(emphasisState.textConfig || (emphasisState.textConfig = {}), {\r\n          position: textPosition\r\n        });\r\n      } else {\r\n        symbolPath.setTextConfig({\r\n          rotation: labelRotate *= Math.PI / 180\r\n        });\r\n      }\r\n    });\r\n    this._firstRender = false;\r\n  };\r\n\r\n  GraphView.prototype.dispose = function () {\r\n    this._controller && this._controller.dispose();\r\n    this._controllerHost = null;\r\n  };\r\n\r\n  GraphView.prototype._startForceLayoutIteration = function (forceLayout, layoutAnimation) {\r\n    var self = this;\r\n\r\n    (function step() {\r\n      forceLayout.step(function (stopped) {\r\n        self.updateLayout(self._model);\r\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\r\n      });\r\n    })();\r\n  };\r\n\r\n  GraphView.prototype._updateController = function (seriesModel, ecModel, api) {\r\n    var _this = this;\r\n\r\n    var controller = this._controller;\r\n    var controllerHost = this._controllerHost;\r\n    var group = this.group;\r\n    controller.setPointerChecker(function (e, x, y) {\r\n      var rect = group.getBoundingRect();\r\n      rect.applyTransform(group.transform);\r\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\r\n    });\r\n\r\n    if (!isViewCoordSys(seriesModel.coordinateSystem)) {\r\n      controller.disable();\r\n      return;\r\n    }\r\n\r\n    controller.enable(seriesModel.get('roam'));\r\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\r\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\r\n    controller.off('pan').off('zoom').on('pan', function (e) {\r\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\r\n      api.dispatchAction({\r\n        seriesId: seriesModel.id,\r\n        type: 'graphRoam',\r\n        dx: e.dx,\r\n        dy: e.dy\r\n      });\r\n    }).on('zoom', function (e) {\r\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\r\n      api.dispatchAction({\r\n        seriesId: seriesModel.id,\r\n        type: 'graphRoam',\r\n        zoom: e.scale,\r\n        originX: e.originX,\r\n        originY: e.originY\r\n      });\r\n\r\n      _this._updateNodeAndLinkScale();\r\n\r\n      adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\r\n\r\n      _this._lineDraw.updateLayout(); // Only update label layout on zoom\r\n\r\n\r\n      api.updateLabelLayout();\r\n    });\r\n  };\r\n\r\n  GraphView.prototype._updateNodeAndLinkScale = function () {\r\n    var seriesModel = this._model;\r\n    var data = seriesModel.getData();\r\n    var nodeScale = getNodeGlobalScale(seriesModel);\r\n    data.eachItemGraphicEl(function (el, idx) {\r\n      el.setSymbolScale(nodeScale);\r\n    });\r\n  };\r\n\r\n  GraphView.prototype.updateLayout = function (seriesModel) {\r\n    adjustEdge(seriesModel.getGraph(), getNodeGlobalScale(seriesModel));\r\n\r\n    this._symbolDraw.updateLayout();\r\n\r\n    this._lineDraw.updateLayout();\r\n  };\r\n\r\n  GraphView.prototype.remove = function (ecModel, api) {\r\n    this._symbolDraw && this._symbolDraw.remove();\r\n    this._lineDraw && this._lineDraw.remove();\r\n  };\r\n\r\n  GraphView.type = 'graph';\r\n  return GraphView;\r\n}(ChartView);\r\n\r\nexport default GraphView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport SeriesData from '../../data/SeriesData';\r\nimport Graph from '../../data/Graph';\r\nimport linkSeriesData from '../../data/helper/linkSeriesData';\r\nimport prepareSeriesDataSchema from '../../data/helper/createDimensions';\r\nimport CoordinateSystem from '../../core/CoordinateSystem';\r\nimport createSeriesData from './createSeriesData';\r\nimport { convertOptionIdName } from '../../util/model';\r\nexport default function createGraphFromNodeEdge(nodes, edges, seriesModel, directed, beforeLink) {\r\n  // ??? TODO\r\n  // support dataset?\r\n  var graph = new Graph(directed);\r\n\r\n  for (var i = 0; i < nodes.length; i++) {\r\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\r\n    nodes[i].id, nodes[i].name, i), i);\r\n  }\r\n\r\n  var linkNameList = [];\r\n  var validEdges = [];\r\n  var linkCount = 0;\r\n\r\n  for (var i = 0; i < edges.length; i++) {\r\n    var link = edges[i];\r\n    var source = link.source;\r\n    var target = link.target; // addEdge may fail when source or target not exists\r\n\r\n    if (graph.addEdge(source, target, linkCount)) {\r\n      validEdges.push(link);\r\n      linkNameList.push(zrUtil.retrieve(convertOptionIdName(link.id, null), source + ' > ' + target));\r\n      linkCount++;\r\n    }\r\n  }\r\n\r\n  var coordSys = seriesModel.get('coordinateSystem');\r\n  var nodeData;\r\n\r\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\r\n    nodeData = createSeriesData(nodes, seriesModel);\r\n  } else {\r\n    var coordSysCtor = CoordinateSystem.get(coordSys);\r\n    var coordDimensions = coordSysCtor ? coordSysCtor.dimensions || [] : []; // FIXME: Some geo do not need `value` dimenson, whereas `calendar` needs\r\n    // `value` dimension, but graph need `value` dimension. It's better to\r\n    // uniform this behavior.\r\n\r\n    if (zrUtil.indexOf(coordDimensions, 'value') < 0) {\r\n      coordDimensions.concat(['value']);\r\n    }\r\n\r\n    var dimensions = prepareSeriesDataSchema(nodes, {\r\n      coordDimensions: coordDimensions,\r\n      encodeDefine: seriesModel.getEncode()\r\n    }).dimensions;\r\n    nodeData = new SeriesData(dimensions, seriesModel);\r\n    nodeData.initData(nodes);\r\n  }\r\n\r\n  var edgeData = new SeriesData(['value'], seriesModel);\r\n  edgeData.initData(validEdges, linkNameList);\r\n  beforeLink && beforeLink(nodeData, edgeData);\r\n  linkSeriesData({\r\n    mainData: nodeData,\r\n    struct: graph,\r\n    structAttr: 'graph',\r\n    datas: {\r\n      node: nodeData,\r\n      edge: edgeData\r\n    },\r\n    datasAttr: {\r\n      node: 'data',\r\n      edge: 'edgeData'\r\n    }\r\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\r\n\r\n  graph.update();\r\n  return graph;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport SeriesData from '../../data/SeriesData';\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { defaultEmphasis } from '../../util/model';\r\nimport Model from '../../model/Model';\r\nimport createGraphFromNodeEdge from '../helper/createGraphFromNodeEdge';\r\nimport LegendVisualProvider from '../../visual/LegendVisualProvider';\r\nimport SeriesModel from '../../model/Series';\r\nimport { createTooltipMarkup } from '../../component/tooltip/tooltipMarkup';\r\nimport { defaultSeriesFormatTooltip } from '../../component/tooltip/seriesFormatTooltip';\r\nimport { initCurvenessList, createEdgeMapForCurveness } from '../helper/multipleGraphEdgeHelper';\r\n\r\nvar GraphSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(GraphSeriesModel, _super);\r\n\r\n  function GraphSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = GraphSeriesModel.type;\r\n    _this.hasSymbolVisual = true;\r\n    return _this;\r\n  }\r\n\r\n  GraphSeriesModel.prototype.init = function (option) {\r\n    _super.prototype.init.apply(this, arguments);\r\n\r\n    var self = this;\r\n\r\n    function getCategoriesData() {\r\n      return self._categoriesData;\r\n    } // Provide data for legend select\r\n\r\n\r\n    this.legendVisualProvider = new LegendVisualProvider(getCategoriesData, getCategoriesData);\r\n    this.fillDataTextStyle(option.edges || option.links);\r\n\r\n    this._updateCategoriesData();\r\n  };\r\n\r\n  GraphSeriesModel.prototype.mergeOption = function (option) {\r\n    _super.prototype.mergeOption.apply(this, arguments);\r\n\r\n    this.fillDataTextStyle(option.edges || option.links);\r\n\r\n    this._updateCategoriesData();\r\n  };\r\n\r\n  GraphSeriesModel.prototype.mergeDefaultAndTheme = function (option) {\r\n    _super.prototype.mergeDefaultAndTheme.apply(this, arguments);\r\n\r\n    defaultEmphasis(option, 'edgeLabel', ['show']);\r\n  };\r\n\r\n  GraphSeriesModel.prototype.getInitialData = function (option, ecModel) {\r\n    var edges = option.edges || option.links || [];\r\n    var nodes = option.data || option.nodes || [];\r\n    var self = this;\r\n\r\n    if (nodes && edges) {\r\n      // auto curveness\r\n      initCurvenessList(this);\r\n      var graph = createGraphFromNodeEdge(nodes, edges, this, true, beforeLink);\r\n      zrUtil.each(graph.edges, function (edge) {\r\n        createEdgeMapForCurveness(edge.node1, edge.node2, this, edge.dataIndex);\r\n      }, this);\r\n      return graph.data;\r\n    }\r\n\r\n    function beforeLink(nodeData, edgeData) {\r\n      // Overwrite nodeData.getItemModel to\r\n      nodeData.wrapMethod('getItemModel', function (model) {\r\n        var categoriesModels = self._categoriesModels;\r\n        var categoryIdx = model.getShallow('category');\r\n        var categoryModel = categoriesModels[categoryIdx];\r\n\r\n        if (categoryModel) {\r\n          categoryModel.parentModel = model.parentModel;\r\n          model.parentModel = categoryModel;\r\n        }\r\n\r\n        return model;\r\n      }); // TODO Inherit resolveParentPath by default in Model#getModel?\r\n\r\n      var oldGetModel = Model.prototype.getModel;\r\n\r\n      function newGetModel(path, parentModel) {\r\n        var model = oldGetModel.call(this, path, parentModel);\r\n        model.resolveParentPath = resolveParentPath;\r\n        return model;\r\n      }\r\n\r\n      edgeData.wrapMethod('getItemModel', function (model) {\r\n        model.resolveParentPath = resolveParentPath;\r\n        model.getModel = newGetModel;\r\n        return model;\r\n      });\r\n\r\n      function resolveParentPath(pathArr) {\r\n        if (pathArr && (pathArr[0] === 'label' || pathArr[1] === 'label')) {\r\n          var newPathArr = pathArr.slice();\r\n\r\n          if (pathArr[0] === 'label') {\r\n            newPathArr[0] = 'edgeLabel';\r\n          } else if (pathArr[1] === 'label') {\r\n            newPathArr[1] = 'edgeLabel';\r\n          }\r\n\r\n          return newPathArr;\r\n        }\r\n\r\n        return pathArr;\r\n      }\r\n    }\r\n  };\r\n\r\n  GraphSeriesModel.prototype.getGraph = function () {\r\n    return this.getData().graph;\r\n  };\r\n\r\n  GraphSeriesModel.prototype.getEdgeData = function () {\r\n    return this.getGraph().edgeData;\r\n  };\r\n\r\n  GraphSeriesModel.prototype.getCategoriesData = function () {\r\n    return this._categoriesData;\r\n  };\r\n\r\n  GraphSeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\r\n    if (dataType === 'edge') {\r\n      var nodeData = this.getData();\r\n      var params = this.getDataParams(dataIndex, dataType);\r\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\r\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\r\n      var targetName = nodeData.getName(edge.node2.dataIndex);\r\n      var nameArr = [];\r\n      sourceName != null && nameArr.push(sourceName);\r\n      targetName != null && nameArr.push(targetName);\r\n      return createTooltipMarkup('nameValue', {\r\n        name: nameArr.join(' > '),\r\n        value: params.value,\r\n        noValue: params.value == null\r\n      });\r\n    } // dataType === 'node' or empty\r\n\r\n\r\n    var nodeMarkup = defaultSeriesFormatTooltip({\r\n      series: this,\r\n      dataIndex: dataIndex,\r\n      multipleSeries: multipleSeries\r\n    });\r\n    return nodeMarkup;\r\n  };\r\n\r\n  GraphSeriesModel.prototype._updateCategoriesData = function () {\r\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\r\n      // Data must has value\r\n      return category.value != null ? category : zrUtil.extend({\r\n        value: 0\r\n      }, category);\r\n    });\r\n    var categoriesData = new SeriesData(['value'], this);\r\n    categoriesData.initData(categories);\r\n    this._categoriesData = categoriesData;\r\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\r\n      return categoriesData.getItemModel(idx);\r\n    });\r\n  };\r\n\r\n  GraphSeriesModel.prototype.setZoom = function (zoom) {\r\n    this.option.zoom = zoom;\r\n  };\r\n\r\n  GraphSeriesModel.prototype.setCenter = function (center) {\r\n    this.option.center = center;\r\n  };\r\n\r\n  GraphSeriesModel.prototype.isAnimationEnabled = function () {\r\n    return _super.prototype.isAnimationEnabled.call(this) // Not enable animation when do force layout\r\n    && !(this.get('layout') === 'force' && this.get(['force', 'layoutAnimation']));\r\n  };\r\n\r\n  GraphSeriesModel.type = 'series.graph';\r\n  GraphSeriesModel.dependencies = ['grid', 'polar', 'geo', 'singleAxis', 'calendar'];\r\n  GraphSeriesModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 2,\r\n    coordinateSystem: 'view',\r\n    // Default option for all coordinate systems\r\n    // xAxisIndex: 0,\r\n    // yAxisIndex: 0,\r\n    // polarIndex: 0,\r\n    // geoIndex: 0,\r\n    legendHoverLink: true,\r\n    layout: null,\r\n    // Configuration of circular layout\r\n    circular: {\r\n      rotateLabel: false\r\n    },\r\n    // Configuration of force directed layout\r\n    force: {\r\n      initLayout: null,\r\n      // Node repulsion. Can be an array to represent range.\r\n      repulsion: [0, 50],\r\n      gravity: 0.1,\r\n      // Initial friction\r\n      friction: 0.6,\r\n      // Edge length. Can be an array to represent range.\r\n      edgeLength: 30,\r\n      layoutAnimation: true\r\n    },\r\n    left: 'center',\r\n    top: 'center',\r\n    // right: null,\r\n    // bottom: null,\r\n    // width: '80%',\r\n    // height: '80%',\r\n    symbol: 'circle',\r\n    symbolSize: 10,\r\n    edgeSymbol: ['none', 'none'],\r\n    edgeSymbolSize: 10,\r\n    edgeLabel: {\r\n      position: 'middle',\r\n      distance: 5\r\n    },\r\n    draggable: false,\r\n    roam: false,\r\n    // Default on center of graph\r\n    center: null,\r\n    zoom: 1,\r\n    // Symbol size scale ratio in roam\r\n    nodeScaleRatio: 0.6,\r\n    // cursor: null,\r\n    // categories: [],\r\n    // data: []\r\n    // Or\r\n    // nodes: []\r\n    //\r\n    // links: []\r\n    // Or\r\n    // edges: []\r\n    label: {\r\n      show: false,\r\n      formatter: '{b}'\r\n    },\r\n    itemStyle: {},\r\n    lineStyle: {\r\n      color: '#aaa',\r\n      width: 1,\r\n      opacity: 0.5\r\n    },\r\n    emphasis: {\r\n      scale: true,\r\n      label: {\r\n        show: true\r\n      }\r\n    },\r\n    select: {\r\n      itemStyle: {\r\n        borderColor: '#212121'\r\n      }\r\n    }\r\n  };\r\n  return GraphSeriesModel;\r\n}(SeriesModel);\r\n\r\nexport default GraphSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport categoryFilter from './categoryFilter';\r\nimport categoryVisual from './categoryVisual';\r\nimport edgeVisual from './edgeVisual';\r\nimport simpleLayout from './simpleLayout';\r\nimport circularLayout from './circularLayout';\r\nimport forceLayout from './forceLayout';\r\nimport createView from './createView';\r\nimport View from '../../coord/View';\r\nimport GraphView from './GraphView';\r\nimport GraphSeriesModel from './GraphSeries';\r\nimport { updateCenterAndZoom } from '../../action/roamHelper';\r\nvar actionInfo = {\r\n  type: 'graphRoam',\r\n  event: 'graphRoam',\r\n  update: 'none'\r\n};\r\nexport function install(registers) {\r\n  registers.registerChartView(GraphView);\r\n  registers.registerSeriesModel(GraphSeriesModel);\r\n  registers.registerProcessor(categoryFilter);\r\n  registers.registerVisual(categoryVisual);\r\n  registers.registerVisual(edgeVisual);\r\n  registers.registerLayout(simpleLayout);\r\n  registers.registerLayout(registers.PRIORITY.VISUAL.POST_CHART_LAYOUT, circularLayout);\r\n  registers.registerLayout(forceLayout);\r\n  registers.registerCoordinateSystem('graphView', {\r\n    dimensions: View.dimensions,\r\n    create: createView\r\n  }); // Register legacy focus actions\r\n\r\n  registers.registerAction({\r\n    type: 'focusNodeAdjacency',\r\n    event: 'focusNodeAdjacency',\r\n    update: 'series:focusNodeAdjacency'\r\n  }, function () {});\r\n  registers.registerAction({\r\n    type: 'unfocusNodeAdjacency',\r\n    event: 'unfocusNodeAdjacency',\r\n    update: 'series:unfocusNodeAdjacency'\r\n  }, function () {}); // Register roam action.\r\n\r\n  registers.registerAction(actionInfo, function (payload, ecModel) {\r\n    ecModel.eachComponent({\r\n      mainType: 'series',\r\n      query: payload\r\n    }, function (seriesModel) {\r\n      var coordSys = seriesModel.coordinateSystem;\r\n      var res = updateCenterAndZoom(coordSys, payload);\r\n      seriesModel.setCenter && seriesModel.setCenter(res.center);\r\n      seriesModel.setZoom && seriesModel.setZoom(res.zoom);\r\n    });\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport Path from 'zrender/lib/graphic/Path';\r\n\r\nvar PointerShape =\r\n/** @class */\r\nfunction () {\r\n  function PointerShape() {\r\n    this.angle = 0;\r\n    this.width = 10;\r\n    this.r = 10;\r\n    this.x = 0;\r\n    this.y = 0;\r\n  }\r\n\r\n  return PointerShape;\r\n}();\r\n\r\nvar PointerPath =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(PointerPath, _super);\r\n\r\n  function PointerPath(opts) {\r\n    var _this = _super.call(this, opts) || this;\r\n\r\n    _this.type = 'pointer';\r\n    return _this;\r\n  }\r\n\r\n  PointerPath.prototype.getDefaultShape = function () {\r\n    return new PointerShape();\r\n  };\r\n\r\n  PointerPath.prototype.buildPath = function (ctx, shape) {\r\n    var mathCos = Math.cos;\r\n    var mathSin = Math.sin;\r\n    var r = shape.r;\r\n    var width = shape.width;\r\n    var angle = shape.angle;\r\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\r\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\r\n    angle = shape.angle - Math.PI / 2;\r\n    ctx.moveTo(x, y);\r\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\r\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\r\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\r\n    ctx.lineTo(x, y);\r\n  };\r\n\r\n  return PointerPath;\r\n}(Path);\r\n\r\nexport default PointerPath;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport PointerPath from './PointerPath';\r\nimport * as graphic from '../../util/graphic';\r\nimport { setStatesStylesFromModel, enableHoverEmphasis } from '../../util/states';\r\nimport { createTextStyle, setLabelValueAnimation, animateLabelValue } from '../../label/labelStyle';\r\nimport ChartView from '../../view/Chart';\r\nimport { parsePercent, round, linearMap } from '../../util/number';\r\nimport Sausage from '../../util/shape/sausage';\r\nimport { createSymbol } from '../../util/symbol';\r\nimport ZRImage from 'zrender/lib/graphic/Image';\r\nimport { extend } from 'zrender/lib/core/util';\r\nimport { setCommonECData } from '../../util/innerStore';\r\n\r\nfunction parsePosition(seriesModel, api) {\r\n  var center = seriesModel.get('center');\r\n  var width = api.getWidth();\r\n  var height = api.getHeight();\r\n  var size = Math.min(width, height);\r\n  var cx = parsePercent(center[0], api.getWidth());\r\n  var cy = parsePercent(center[1], api.getHeight());\r\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\r\n  return {\r\n    cx: cx,\r\n    cy: cy,\r\n    r: r\r\n  };\r\n}\r\n\r\nfunction formatLabel(value, labelFormatter) {\r\n  var label = value == null ? '' : value + '';\r\n\r\n  if (labelFormatter) {\r\n    if (typeof labelFormatter === 'string') {\r\n      label = labelFormatter.replace('{value}', label);\r\n    } else if (typeof labelFormatter === 'function') {\r\n      label = labelFormatter(value);\r\n    }\r\n  }\r\n\r\n  return label;\r\n}\r\n\r\nvar PI2 = Math.PI * 2;\r\n\r\nvar GaugeView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(GaugeView, _super);\r\n\r\n  function GaugeView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = GaugeView.type;\r\n    return _this;\r\n  }\r\n\r\n  GaugeView.prototype.render = function (seriesModel, ecModel, api) {\r\n    this.group.removeAll();\r\n    var colorList = seriesModel.get(['axisLine', 'lineStyle', 'color']);\r\n    var posInfo = parsePosition(seriesModel, api);\r\n\r\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\r\n\r\n    this._data = seriesModel.getData();\r\n  };\r\n\r\n  GaugeView.prototype.dispose = function () {};\r\n\r\n  GaugeView.prototype._renderMain = function (seriesModel, ecModel, api, colorList, posInfo) {\r\n    var group = this.group;\r\n    var clockwise = seriesModel.get('clockwise');\r\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\r\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\r\n    var axisLineModel = seriesModel.getModel('axisLine');\r\n    var roundCap = axisLineModel.get('roundCap');\r\n    var MainPath = roundCap ? Sausage : graphic.Sector;\r\n    var showAxis = axisLineModel.get('show');\r\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\r\n    var axisLineWidth = lineStyleModel.get('width');\r\n    var angleRangeSpan = !((endAngle - startAngle) % PI2) && endAngle !== startAngle ? PI2 : (endAngle - startAngle) % PI2;\r\n    var prevEndAngle = startAngle;\r\n\r\n    for (var i = 0; showAxis && i < colorList.length; i++) {\r\n      // Clamp\r\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\r\n      endAngle = startAngle + angleRangeSpan * percent;\r\n      var sector = new MainPath({\r\n        shape: {\r\n          startAngle: prevEndAngle,\r\n          endAngle: endAngle,\r\n          cx: posInfo.cx,\r\n          cy: posInfo.cy,\r\n          clockwise: clockwise,\r\n          r0: posInfo.r - axisLineWidth,\r\n          r: posInfo.r\r\n        },\r\n        silent: true\r\n      });\r\n      sector.setStyle({\r\n        fill: colorList[i][1]\r\n      });\r\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\r\n      // so the properties for stroking are useless\r\n      ['color', 'width']));\r\n      group.add(sector);\r\n      prevEndAngle = endAngle;\r\n    }\r\n\r\n    var getColor = function (percent) {\r\n      // Less than 0\r\n      if (percent <= 0) {\r\n        return colorList[0][1];\r\n      }\r\n\r\n      var i;\r\n\r\n      for (i = 0; i < colorList.length; i++) {\r\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\r\n          return colorList[i][1];\r\n        }\r\n      } // More than 1\r\n\r\n\r\n      return colorList[i - 1][1];\r\n    };\r\n\r\n    if (!clockwise) {\r\n      var tmp = startAngle;\r\n      startAngle = endAngle;\r\n      endAngle = tmp;\r\n    }\r\n\r\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise, axisLineWidth);\r\n\r\n    this._renderTitleAndDetail(seriesModel, ecModel, api, getColor, posInfo);\r\n\r\n    this._renderAnchor(seriesModel, posInfo);\r\n\r\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise, axisLineWidth);\r\n  };\r\n\r\n  GaugeView.prototype._renderTicks = function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise, axisLineWidth) {\r\n    var group = this.group;\r\n    var cx = posInfo.cx;\r\n    var cy = posInfo.cy;\r\n    var r = posInfo.r;\r\n    var minVal = +seriesModel.get('min');\r\n    var maxVal = +seriesModel.get('max');\r\n    var splitLineModel = seriesModel.getModel('splitLine');\r\n    var tickModel = seriesModel.getModel('axisTick');\r\n    var labelModel = seriesModel.getModel('axisLabel');\r\n    var splitNumber = seriesModel.get('splitNumber');\r\n    var subSplitNumber = tickModel.get('splitNumber');\r\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\r\n    var tickLen = parsePercent(tickModel.get('length'), r);\r\n    var angle = startAngle;\r\n    var step = (endAngle - startAngle) / splitNumber;\r\n    var subStep = step / subSplitNumber;\r\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\r\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\r\n    var splitLineDistance = splitLineModel.get('distance');\r\n    var unitX;\r\n    var unitY;\r\n\r\n    for (var i = 0; i <= splitNumber; i++) {\r\n      unitX = Math.cos(angle);\r\n      unitY = Math.sin(angle); // Split line\r\n\r\n      if (splitLineModel.get('show')) {\r\n        var distance = splitLineDistance ? splitLineDistance + axisLineWidth : axisLineWidth;\r\n        var splitLine = new graphic.Line({\r\n          shape: {\r\n            x1: unitX * (r - distance) + cx,\r\n            y1: unitY * (r - distance) + cy,\r\n            x2: unitX * (r - splitLineLen - distance) + cx,\r\n            y2: unitY * (r - splitLineLen - distance) + cy\r\n          },\r\n          style: splitLineStyle,\r\n          silent: true\r\n        });\r\n\r\n        if (splitLineStyle.stroke === 'auto') {\r\n          splitLine.setStyle({\r\n            stroke: getColor(i / splitNumber)\r\n          });\r\n        }\r\n\r\n        group.add(splitLine);\r\n      } // Label\r\n\r\n\r\n      if (labelModel.get('show')) {\r\n        var distance = labelModel.get('distance') + splitLineDistance;\r\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\r\n        var autoColor = getColor(i / splitNumber);\r\n        group.add(new graphic.Text({\r\n          style: createTextStyle(labelModel, {\r\n            text: label,\r\n            x: unitX * (r - splitLineLen - distance) + cx,\r\n            y: unitY * (r - splitLineLen - distance) + cy,\r\n            verticalAlign: unitY < -0.8 ? 'top' : unitY > 0.8 ? 'bottom' : 'middle',\r\n            align: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\r\n          }, {\r\n            inheritColor: autoColor\r\n          }),\r\n          silent: true\r\n        }));\r\n      } // Axis tick\r\n\r\n\r\n      if (tickModel.get('show') && i !== splitNumber) {\r\n        var distance = tickModel.get('distance');\r\n        distance = distance ? distance + axisLineWidth : axisLineWidth;\r\n\r\n        for (var j = 0; j <= subSplitNumber; j++) {\r\n          unitX = Math.cos(angle);\r\n          unitY = Math.sin(angle);\r\n          var tickLine = new graphic.Line({\r\n            shape: {\r\n              x1: unitX * (r - distance) + cx,\r\n              y1: unitY * (r - distance) + cy,\r\n              x2: unitX * (r - tickLen - distance) + cx,\r\n              y2: unitY * (r - tickLen - distance) + cy\r\n            },\r\n            silent: true,\r\n            style: tickLineStyle\r\n          });\r\n\r\n          if (tickLineStyle.stroke === 'auto') {\r\n            tickLine.setStyle({\r\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\r\n            });\r\n          }\r\n\r\n          group.add(tickLine);\r\n          angle += subStep;\r\n        }\r\n\r\n        angle -= subStep;\r\n      } else {\r\n        angle += step;\r\n      }\r\n    }\r\n  };\r\n\r\n  GaugeView.prototype._renderPointer = function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise, axisLineWidth) {\r\n    var group = this.group;\r\n    var oldData = this._data;\r\n    var oldProgressData = this._progressEls;\r\n    var progressList = [];\r\n    var showPointer = seriesModel.get(['pointer', 'show']);\r\n    var progressModel = seriesModel.getModel('progress');\r\n    var showProgress = progressModel.get('show');\r\n    var data = seriesModel.getData();\r\n    var valueDim = data.mapDimension('value');\r\n    var minVal = +seriesModel.get('min');\r\n    var maxVal = +seriesModel.get('max');\r\n    var valueExtent = [minVal, maxVal];\r\n    var angleExtent = [startAngle, endAngle];\r\n\r\n    function createPointer(idx, angle) {\r\n      var itemModel = data.getItemModel(idx);\r\n      var pointerModel = itemModel.getModel('pointer');\r\n      var pointerWidth = parsePercent(pointerModel.get('width'), posInfo.r);\r\n      var pointerLength = parsePercent(pointerModel.get('length'), posInfo.r);\r\n      var pointerStr = seriesModel.get(['pointer', 'icon']);\r\n      var pointerOffset = pointerModel.get('offsetCenter');\r\n      var pointerOffsetX = parsePercent(pointerOffset[0], posInfo.r);\r\n      var pointerOffsetY = parsePercent(pointerOffset[1], posInfo.r);\r\n      var pointerKeepAspect = pointerModel.get('keepAspect');\r\n      var pointer; // not exist icon type will be set 'rect'\r\n\r\n      if (pointerStr) {\r\n        pointer = createSymbol(pointerStr, pointerOffsetX - pointerWidth / 2, pointerOffsetY - pointerLength, pointerWidth, pointerLength, null, pointerKeepAspect);\r\n      } else {\r\n        pointer = new PointerPath({\r\n          shape: {\r\n            angle: -Math.PI / 2,\r\n            width: pointerWidth,\r\n            r: pointerLength,\r\n            x: pointerOffsetX,\r\n            y: pointerOffsetY\r\n          }\r\n        });\r\n      }\r\n\r\n      pointer.rotation = -(angle + Math.PI / 2);\r\n      pointer.x = posInfo.cx;\r\n      pointer.y = posInfo.cy;\r\n      return pointer;\r\n    }\r\n\r\n    function createProgress(idx, endAngle) {\r\n      var roundCap = progressModel.get('roundCap');\r\n      var ProgressPath = roundCap ? Sausage : graphic.Sector;\r\n      var isOverlap = progressModel.get('overlap');\r\n      var progressWidth = isOverlap ? progressModel.get('width') : axisLineWidth / data.count();\r\n      var r0 = isOverlap ? posInfo.r - progressWidth : posInfo.r - (idx + 1) * progressWidth;\r\n      var r = isOverlap ? posInfo.r : posInfo.r - idx * progressWidth;\r\n      var progress = new ProgressPath({\r\n        shape: {\r\n          startAngle: startAngle,\r\n          endAngle: endAngle,\r\n          cx: posInfo.cx,\r\n          cy: posInfo.cy,\r\n          clockwise: clockwise,\r\n          r0: r0,\r\n          r: r\r\n        }\r\n      });\r\n      isOverlap && (progress.z2 = maxVal - data.get(valueDim, idx) % maxVal);\r\n      return progress;\r\n    }\r\n\r\n    if (showProgress || showPointer) {\r\n      data.diff(oldData).add(function (idx) {\r\n        if (showPointer) {\r\n          var pointer = createPointer(idx, startAngle);\r\n          graphic.initProps(pointer, {\r\n            rotation: -(linearMap(data.get(valueDim, idx), valueExtent, angleExtent, true) + Math.PI / 2)\r\n          }, seriesModel);\r\n          group.add(pointer);\r\n          data.setItemGraphicEl(idx, pointer);\r\n        }\r\n\r\n        if (showProgress) {\r\n          var progress = createProgress(idx, startAngle);\r\n          var isClip = progressModel.get('clip');\r\n          graphic.initProps(progress, {\r\n            shape: {\r\n              endAngle: linearMap(data.get(valueDim, idx), valueExtent, angleExtent, isClip)\r\n            }\r\n          }, seriesModel);\r\n          group.add(progress); // Add data index and series index for indexing the data by element\r\n          // Useful in tooltip\r\n\r\n          setCommonECData(seriesModel.seriesIndex, data.dataType, idx, progress);\r\n          progressList[idx] = progress;\r\n        }\r\n      }).update(function (newIdx, oldIdx) {\r\n        if (showPointer) {\r\n          var previousPointer = oldData.getItemGraphicEl(oldIdx);\r\n          var previousRotate = previousPointer ? previousPointer.rotation : startAngle;\r\n          var pointer = createPointer(newIdx, previousRotate);\r\n          pointer.rotation = previousRotate;\r\n          graphic.updateProps(pointer, {\r\n            rotation: -(linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, true) + Math.PI / 2)\r\n          }, seriesModel);\r\n          group.add(pointer);\r\n          data.setItemGraphicEl(newIdx, pointer);\r\n        }\r\n\r\n        if (showProgress) {\r\n          var previousProgress = oldProgressData[oldIdx];\r\n          var previousEndAngle = previousProgress ? previousProgress.shape.endAngle : startAngle;\r\n          var progress = createProgress(newIdx, previousEndAngle);\r\n          var isClip = progressModel.get('clip');\r\n          graphic.updateProps(progress, {\r\n            shape: {\r\n              endAngle: linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, isClip)\r\n            }\r\n          }, seriesModel);\r\n          group.add(progress); // Add data index and series index for indexing the data by element\r\n          // Useful in tooltip\r\n\r\n          setCommonECData(seriesModel.seriesIndex, data.dataType, newIdx, progress);\r\n          progressList[newIdx] = progress;\r\n        }\r\n      }).execute();\r\n      data.each(function (idx) {\r\n        var itemModel = data.getItemModel(idx);\r\n        var emphasisModel = itemModel.getModel('emphasis');\r\n\r\n        if (showPointer) {\r\n          var pointer = data.getItemGraphicEl(idx);\r\n          var symbolStyle = data.getItemVisual(idx, 'style');\r\n          var visualColor = symbolStyle.fill;\r\n\r\n          if (pointer instanceof ZRImage) {\r\n            var pathStyle = pointer.style;\r\n            pointer.useStyle(extend({\r\n              image: pathStyle.image,\r\n              x: pathStyle.x,\r\n              y: pathStyle.y,\r\n              width: pathStyle.width,\r\n              height: pathStyle.height\r\n            }, symbolStyle));\r\n          } else {\r\n            pointer.useStyle(symbolStyle);\r\n            pointer.type !== 'pointer' && pointer.setColor(visualColor);\r\n          }\r\n\r\n          pointer.setStyle(itemModel.getModel(['pointer', 'itemStyle']).getItemStyle());\r\n\r\n          if (pointer.style.fill === 'auto') {\r\n            pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\r\n          }\r\n\r\n          pointer.z2EmphasisLift = 0;\r\n          setStatesStylesFromModel(pointer, itemModel);\r\n          enableHoverEmphasis(pointer, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\r\n        }\r\n\r\n        if (showProgress) {\r\n          var progress = progressList[idx];\r\n          progress.useStyle(data.getItemVisual(idx, 'style'));\r\n          progress.setStyle(itemModel.getModel(['progress', 'itemStyle']).getItemStyle());\r\n          progress.z2EmphasisLift = 0;\r\n          setStatesStylesFromModel(progress, itemModel);\r\n          enableHoverEmphasis(progress, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\r\n        }\r\n      });\r\n      this._progressEls = progressList;\r\n    }\r\n  };\r\n\r\n  GaugeView.prototype._renderAnchor = function (seriesModel, posInfo) {\r\n    var anchorModel = seriesModel.getModel('anchor');\r\n    var showAnchor = anchorModel.get('show');\r\n\r\n    if (showAnchor) {\r\n      var anchorSize = anchorModel.get('size');\r\n      var anchorType = anchorModel.get('icon');\r\n      var offsetCenter = anchorModel.get('offsetCenter');\r\n      var anchorKeepAspect = anchorModel.get('keepAspect');\r\n      var anchor = createSymbol(anchorType, posInfo.cx - anchorSize / 2 + parsePercent(offsetCenter[0], posInfo.r), posInfo.cy - anchorSize / 2 + parsePercent(offsetCenter[1], posInfo.r), anchorSize, anchorSize, null, anchorKeepAspect);\r\n      anchor.z2 = anchorModel.get('showAbove') ? 1 : 0;\r\n      anchor.setStyle(anchorModel.getModel('itemStyle').getItemStyle());\r\n      this.group.add(anchor);\r\n    }\r\n  };\r\n\r\n  GaugeView.prototype._renderTitleAndDetail = function (seriesModel, ecModel, api, getColor, posInfo) {\r\n    var _this = this;\r\n\r\n    var data = seriesModel.getData();\r\n    var valueDim = data.mapDimension('value');\r\n    var minVal = +seriesModel.get('min');\r\n    var maxVal = +seriesModel.get('max');\r\n    var contentGroup = new graphic.Group();\r\n    var newTitleEls = [];\r\n    var newDetailEls = [];\r\n    var hasAnimation = seriesModel.isAnimationEnabled();\r\n    var showPointerAbove = seriesModel.get(['pointer', 'showAbove']);\r\n    data.diff(this._data).add(function (idx) {\r\n      newTitleEls[idx] = new graphic.Text({\r\n        silent: true\r\n      });\r\n      newDetailEls[idx] = new graphic.Text({\r\n        silent: true\r\n      });\r\n    }).update(function (idx, oldIdx) {\r\n      newTitleEls[idx] = _this._titleEls[oldIdx];\r\n      newDetailEls[idx] = _this._detailEls[oldIdx];\r\n    }).execute();\r\n    data.each(function (idx) {\r\n      var itemModel = data.getItemModel(idx);\r\n      var value = data.get(valueDim, idx);\r\n      var itemGroup = new graphic.Group();\r\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\r\n      var itemTitleModel = itemModel.getModel('title');\r\n\r\n      if (itemTitleModel.get('show')) {\r\n        var titleOffsetCenter = itemTitleModel.get('offsetCenter');\r\n        var titleX = posInfo.cx + parsePercent(titleOffsetCenter[0], posInfo.r);\r\n        var titleY = posInfo.cy + parsePercent(titleOffsetCenter[1], posInfo.r);\r\n        var labelEl = newTitleEls[idx];\r\n        labelEl.attr({\r\n          z2: showPointerAbove ? 0 : 2,\r\n          style: createTextStyle(itemTitleModel, {\r\n            x: titleX,\r\n            y: titleY,\r\n            text: data.getName(idx),\r\n            align: 'center',\r\n            verticalAlign: 'middle'\r\n          }, {\r\n            inheritColor: autoColor\r\n          })\r\n        });\r\n        itemGroup.add(labelEl);\r\n      }\r\n\r\n      var itemDetailModel = itemModel.getModel('detail');\r\n\r\n      if (itemDetailModel.get('show')) {\r\n        var detailOffsetCenter = itemDetailModel.get('offsetCenter');\r\n        var detailX = posInfo.cx + parsePercent(detailOffsetCenter[0], posInfo.r);\r\n        var detailY = posInfo.cy + parsePercent(detailOffsetCenter[1], posInfo.r);\r\n        var width = parsePercent(itemDetailModel.get('width'), posInfo.r);\r\n        var height = parsePercent(itemDetailModel.get('height'), posInfo.r);\r\n        var detailColor = seriesModel.get(['progress', 'show']) ? data.getItemVisual(idx, 'style').fill : autoColor;\r\n        var labelEl = newDetailEls[idx];\r\n        var formatter_1 = itemDetailModel.get('formatter');\r\n        labelEl.attr({\r\n          z2: showPointerAbove ? 0 : 2,\r\n          style: createTextStyle(itemDetailModel, {\r\n            x: detailX,\r\n            y: detailY,\r\n            text: formatLabel(value, formatter_1),\r\n            width: isNaN(width) ? null : width,\r\n            height: isNaN(height) ? null : height,\r\n            align: 'center',\r\n            verticalAlign: 'middle'\r\n          }, {\r\n            inheritColor: detailColor\r\n          })\r\n        });\r\n        setLabelValueAnimation(labelEl, {\r\n          normal: itemDetailModel\r\n        }, value, function (value) {\r\n          return formatLabel(value, formatter_1);\r\n        });\r\n        hasAnimation && animateLabelValue(labelEl, idx, data, seriesModel, {\r\n          getFormattedLabel: function (labelDataIndex, status, dataType, labelDimIndex, fmt, extendParams) {\r\n            return formatLabel(extendParams ? extendParams.interpolatedValue : value, formatter_1);\r\n          }\r\n        });\r\n        itemGroup.add(labelEl);\r\n      }\r\n\r\n      contentGroup.add(itemGroup);\r\n    });\r\n    this.group.add(contentGroup);\r\n    this._titleEls = newTitleEls;\r\n    this._detailEls = newDetailEls;\r\n  };\r\n\r\n  GaugeView.type = 'gauge';\r\n  return GaugeView;\r\n}(ChartView);\r\n\r\nexport default GaugeView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport createSeriesDataSimply from '../helper/createSeriesDataSimply';\r\nimport SeriesModel from '../../model/Series';\r\n\r\nvar GaugeSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(GaugeSeriesModel, _super);\r\n\r\n  function GaugeSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = GaugeSeriesModel.type;\r\n    _this.visualStyleAccessPath = 'itemStyle';\r\n    return _this;\r\n  }\r\n\r\n  GaugeSeriesModel.prototype.getInitialData = function (option, ecModel) {\r\n    return createSeriesDataSimply(this, ['value']);\r\n  };\r\n\r\n  GaugeSeriesModel.type = 'series.gauge';\r\n  GaugeSeriesModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 2,\r\n    colorBy: 'data',\r\n    // \u9ED8\u8BA4\u5168\u5C40\u5C45\u4E2D\r\n    center: ['50%', '50%'],\r\n    legendHoverLink: true,\r\n    radius: '75%',\r\n    startAngle: 225,\r\n    endAngle: -45,\r\n    clockwise: true,\r\n    // \u6700\u5C0F\u503C\r\n    min: 0,\r\n    // \u6700\u5927\u503C\r\n    max: 100,\r\n    // \u5206\u5272\u6BB5\u6570\uFF0C\u9ED8\u8BA4\u4E3A10\r\n    splitNumber: 10,\r\n    // \u5750\u6807\u8F74\u7EBF\r\n    axisLine: {\r\n      // \u9ED8\u8BA4\u663E\u793A\uFF0C\u5C5E\u6027show\u63A7\u5236\u663E\u793A\u4E0E\u5426\r\n      show: true,\r\n      roundCap: false,\r\n      lineStyle: {\r\n        color: [[1, '#E6EBF8']],\r\n        width: 10\r\n      }\r\n    },\r\n    // \u5750\u6807\u8F74\u7EBF\r\n    progress: {\r\n      // \u9ED8\u8BA4\u663E\u793A\uFF0C\u5C5E\u6027show\u63A7\u5236\u663E\u793A\u4E0E\u5426\r\n      show: false,\r\n      overlap: true,\r\n      width: 10,\r\n      roundCap: false,\r\n      clip: true\r\n    },\r\n    // \u5206\u9694\u7EBF\r\n    splitLine: {\r\n      // \u9ED8\u8BA4\u663E\u793A\uFF0C\u5C5E\u6027show\u63A7\u5236\u663E\u793A\u4E0E\u5426\r\n      show: true,\r\n      // \u5C5E\u6027length\u63A7\u5236\u7EBF\u957F\r\n      length: 10,\r\n      distance: 10,\r\n      // \u5C5E\u6027lineStyle\uFF08\u8BE6\u89C1lineStyle\uFF09\u63A7\u5236\u7EBF\u6761\u6837\u5F0F\r\n      lineStyle: {\r\n        color: '#63677A',\r\n        width: 3,\r\n        type: 'solid'\r\n      }\r\n    },\r\n    // \u5750\u6807\u8F74\u5C0F\u6807\u8BB0\r\n    axisTick: {\r\n      // \u5C5E\u6027show\u63A7\u5236\u663E\u793A\u4E0E\u5426\uFF0C\u9ED8\u8BA4\u4E0D\u663E\u793A\r\n      show: true,\r\n      // \u6BCF\u4EFDsplit\u7EC6\u5206\u591A\u5C11\u6BB5\r\n      splitNumber: 5,\r\n      // \u5C5E\u6027length\u63A7\u5236\u7EBF\u957F\r\n      length: 6,\r\n      distance: 10,\r\n      // \u5C5E\u6027lineStyle\u63A7\u5236\u7EBF\u6761\u6837\u5F0F\r\n      lineStyle: {\r\n        color: '#63677A',\r\n        width: 1,\r\n        type: 'solid'\r\n      }\r\n    },\r\n    axisLabel: {\r\n      show: true,\r\n      distance: 15,\r\n      // formatter: null,\r\n      color: '#464646',\r\n      fontSize: 12\r\n    },\r\n    pointer: {\r\n      icon: null,\r\n      offsetCenter: [0, 0],\r\n      show: true,\r\n      showAbove: true,\r\n      length: '60%',\r\n      width: 6,\r\n      keepAspect: false\r\n    },\r\n    anchor: {\r\n      show: false,\r\n      showAbove: false,\r\n      size: 6,\r\n      icon: 'circle',\r\n      offsetCenter: [0, 0],\r\n      keepAspect: false,\r\n      itemStyle: {\r\n        color: '#fff',\r\n        borderWidth: 0,\r\n        borderColor: '#5470c6'\r\n      }\r\n    },\r\n    title: {\r\n      show: true,\r\n      // x, y\uFF0C\u5355\u4F4Dpx\r\n      offsetCenter: [0, '20%'],\r\n      // \u5176\u4F59\u5C5E\u6027\u9ED8\u8BA4\u4F7F\u7528\u5168\u5C40\u6587\u672C\u6837\u5F0F\uFF0C\u8BE6\u89C1TEXTSTYLE\r\n      color: '#464646',\r\n      fontSize: 16,\r\n      valueAnimation: false\r\n    },\r\n    detail: {\r\n      show: true,\r\n      backgroundColor: 'rgba(0,0,0,0)',\r\n      borderWidth: 0,\r\n      borderColor: '#ccc',\r\n      width: 100,\r\n      height: null,\r\n      padding: [5, 10],\r\n      // x, y\uFF0C\u5355\u4F4Dpx\r\n      offsetCenter: [0, '40%'],\r\n      // formatter: null,\r\n      // \u5176\u4F59\u5C5E\u6027\u9ED8\u8BA4\u4F7F\u7528\u5168\u5C40\u6587\u672C\u6837\u5F0F\uFF0C\u8BE6\u89C1TEXTSTYLE\r\n      color: '#464646',\r\n      fontSize: 30,\r\n      fontWeight: 'bold',\r\n      lineHeight: 30,\r\n      valueAnimation: false\r\n    }\r\n  };\r\n  return GaugeSeriesModel;\r\n}(SeriesModel);\r\n\r\nexport default GaugeSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport GaugeView from './GaugeView';\r\nimport GaugeSeriesModel from './GaugeSeries';\r\nexport function install(registers) {\r\n  registers.registerChartView(GaugeView);\r\n  registers.registerSeriesModel(GaugeSeriesModel);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as graphic from '../../util/graphic';\r\nimport { setStatesStylesFromModel, enableHoverEmphasis } from '../../util/states';\r\nimport ChartView from '../../view/Chart';\r\nimport { setLabelLineStyle, getLabelLineStatesModels } from '../../label/labelGuideHelper';\r\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle';\r\nimport { saveOldStyle } from '../../animation/basicTrasition';\r\nvar opacityAccessPath = ['itemStyle', 'opacity'];\r\n/**\r\n * Piece of pie including Sector, Label, LabelLine\r\n */\r\n\r\nvar FunnelPiece =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(FunnelPiece, _super);\r\n\r\n  function FunnelPiece(data, idx) {\r\n    var _this = _super.call(this) || this;\r\n\r\n    var polygon = _this;\r\n    var labelLine = new graphic.Polyline();\r\n    var text = new graphic.Text();\r\n    polygon.setTextContent(text);\r\n\r\n    _this.setTextGuideLine(labelLine);\r\n\r\n    _this.updateData(data, idx, true);\r\n\r\n    return _this;\r\n  }\r\n\r\n  FunnelPiece.prototype.updateData = function (data, idx, firstCreate) {\r\n    var polygon = this;\r\n    var seriesModel = data.hostModel;\r\n    var itemModel = data.getItemModel(idx);\r\n    var layout = data.getItemLayout(idx);\r\n    var emphasisModel = itemModel.getModel('emphasis');\r\n    var opacity = itemModel.get(opacityAccessPath);\r\n    opacity = opacity == null ? 1 : opacity;\r\n\r\n    if (!firstCreate) {\r\n      saveOldStyle(polygon);\r\n    } // Update common style\r\n\r\n\r\n    polygon.useStyle(data.getItemVisual(idx, 'style'));\r\n    polygon.style.lineJoin = 'round';\r\n\r\n    if (firstCreate) {\r\n      polygon.setShape({\r\n        points: layout.points\r\n      });\r\n      polygon.style.opacity = 0;\r\n      graphic.initProps(polygon, {\r\n        style: {\r\n          opacity: opacity\r\n        }\r\n      }, seriesModel, idx);\r\n    } else {\r\n      graphic.updateProps(polygon, {\r\n        style: {\r\n          opacity: opacity\r\n        },\r\n        shape: {\r\n          points: layout.points\r\n        }\r\n      }, seriesModel, idx);\r\n    }\r\n\r\n    setStatesStylesFromModel(polygon, itemModel);\r\n\r\n    this._updateLabel(data, idx);\r\n\r\n    enableHoverEmphasis(this, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\r\n  };\r\n\r\n  FunnelPiece.prototype._updateLabel = function (data, idx) {\r\n    var polygon = this;\r\n    var labelLine = this.getTextGuideLine();\r\n    var labelText = polygon.getTextContent();\r\n    var seriesModel = data.hostModel;\r\n    var itemModel = data.getItemModel(idx);\r\n    var layout = data.getItemLayout(idx);\r\n    var labelLayout = layout.label;\r\n    var style = data.getItemVisual(idx, 'style');\r\n    var visualColor = style.fill;\r\n    setLabelStyle( // position will not be used in setLabelStyle\r\n    labelText, getLabelStatesModels(itemModel), {\r\n      labelFetcher: data.hostModel,\r\n      labelDataIndex: idx,\r\n      defaultOpacity: style.opacity,\r\n      defaultText: data.getName(idx)\r\n    }, {\r\n      normal: {\r\n        align: labelLayout.textAlign,\r\n        verticalAlign: labelLayout.verticalAlign\r\n      }\r\n    });\r\n    polygon.setTextConfig({\r\n      local: true,\r\n      inside: !!labelLayout.inside,\r\n      insideStroke: visualColor,\r\n      // insideFill: 'auto',\r\n      outsideFill: visualColor\r\n    });\r\n    var linePoints = labelLayout.linePoints;\r\n    labelLine.setShape({\r\n      points: linePoints\r\n    });\r\n    polygon.textGuideLineConfig = {\r\n      anchor: linePoints ? new graphic.Point(linePoints[0][0], linePoints[0][1]) : null\r\n    }; // Make sure update style on labelText after setLabelStyle.\r\n    // Because setLabelStyle will replace a new style on it.\r\n\r\n    graphic.updateProps(labelText, {\r\n      style: {\r\n        x: labelLayout.x,\r\n        y: labelLayout.y\r\n      }\r\n    }, seriesModel, idx);\r\n    labelText.attr({\r\n      rotation: labelLayout.rotation,\r\n      originX: labelLayout.x,\r\n      originY: labelLayout.y,\r\n      z2: 10\r\n    });\r\n    setLabelLineStyle(polygon, getLabelLineStatesModels(itemModel), {\r\n      // Default use item visual color\r\n      stroke: visualColor\r\n    });\r\n  };\r\n\r\n  return FunnelPiece;\r\n}(graphic.Polygon);\r\n\r\nvar FunnelView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(FunnelView, _super);\r\n\r\n  function FunnelView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = FunnelView.type;\r\n    _this.ignoreLabelLineUpdate = true;\r\n    return _this;\r\n  }\r\n\r\n  FunnelView.prototype.render = function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n    var oldData = this._data;\r\n    var group = this.group;\r\n    data.diff(oldData).add(function (idx) {\r\n      var funnelPiece = new FunnelPiece(data, idx);\r\n      data.setItemGraphicEl(idx, funnelPiece);\r\n      group.add(funnelPiece);\r\n    }).update(function (newIdx, oldIdx) {\r\n      var piece = oldData.getItemGraphicEl(oldIdx);\r\n      piece.updateData(data, newIdx);\r\n      group.add(piece);\r\n      data.setItemGraphicEl(newIdx, piece);\r\n    }).remove(function (idx) {\r\n      var piece = oldData.getItemGraphicEl(idx);\r\n      graphic.removeElementWithFadeOut(piece, seriesModel, idx);\r\n    }).execute();\r\n    this._data = data;\r\n  };\r\n\r\n  FunnelView.prototype.remove = function () {\r\n    this.group.removeAll();\r\n    this._data = null;\r\n  };\r\n\r\n  FunnelView.prototype.dispose = function () {};\r\n\r\n  FunnelView.type = 'funnel';\r\n  return FunnelView;\r\n}(ChartView);\r\n\r\nexport default FunnelView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport createSeriesDataSimply from '../helper/createSeriesDataSimply';\r\nimport { defaultEmphasis } from '../../util/model';\r\nimport { makeSeriesEncodeForNameBased } from '../../data/helper/sourceHelper';\r\nimport LegendVisualProvider from '../../visual/LegendVisualProvider';\r\nimport SeriesModel from '../../model/Series';\r\n\r\nvar FunnelSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(FunnelSeriesModel, _super);\r\n\r\n  function FunnelSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = FunnelSeriesModel.type;\r\n    return _this;\r\n  }\r\n\r\n  FunnelSeriesModel.prototype.init = function (option) {\r\n    _super.prototype.init.apply(this, arguments); // Enable legend selection for each data item\r\n    // Use a function instead of direct access because data reference may changed\r\n\r\n\r\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this)); // Extend labelLine emphasis\r\n\r\n    this._defaultLabelLine(option);\r\n  };\r\n\r\n  FunnelSeriesModel.prototype.getInitialData = function (option, ecModel) {\r\n    return createSeriesDataSimply(this, {\r\n      coordDimensions: ['value'],\r\n      encodeDefaulter: zrUtil.curry(makeSeriesEncodeForNameBased, this)\r\n    });\r\n  };\r\n\r\n  FunnelSeriesModel.prototype._defaultLabelLine = function (option) {\r\n    // Extend labelLine emphasis\r\n    defaultEmphasis(option, 'labelLine', ['show']);\r\n    var labelLineNormalOpt = option.labelLine;\r\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\r\n\r\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\r\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\r\n  }; // Overwrite\r\n\r\n\r\n  FunnelSeriesModel.prototype.getDataParams = function (dataIndex) {\r\n    var data = this.getData();\r\n\r\n    var params = _super.prototype.getDataParams.call(this, dataIndex);\r\n\r\n    var valueDim = data.mapDimension('value');\r\n    var sum = data.getSum(valueDim); // Percent is 0 if sum is 0\r\n\r\n    params.percent = !sum ? 0 : +(data.get(valueDim, dataIndex) / sum * 100).toFixed(2);\r\n    params.$vars.push('percent');\r\n    return params;\r\n  };\r\n\r\n  FunnelSeriesModel.type = 'series.funnel';\r\n  FunnelSeriesModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 2,\r\n    legendHoverLink: true,\r\n    colorBy: 'data',\r\n    left: 80,\r\n    top: 60,\r\n    right: 80,\r\n    bottom: 60,\r\n    // width: {totalWidth} - left - right,\r\n    // height: {totalHeight} - top - bottom,\r\n    // \u9ED8\u8BA4\u53D6\u6570\u636E\u6700\u5C0F\u6700\u5927\u503C\r\n    // min: 0,\r\n    // max: 100,\r\n    minSize: '0%',\r\n    maxSize: '100%',\r\n    sort: 'descending',\r\n    orient: 'vertical',\r\n    gap: 0,\r\n    funnelAlign: 'center',\r\n    label: {\r\n      show: true,\r\n      position: 'outer' // formatter: \u6807\u7B7E\u6587\u672C\u683C\u5F0F\u5668\uFF0C\u540CTooltip.formatter\uFF0C\u4E0D\u652F\u6301\u5F02\u6B65\u56DE\u8C03\r\n\r\n    },\r\n    labelLine: {\r\n      show: true,\r\n      length: 20,\r\n      lineStyle: {\r\n        // color: \u5404\u5F02,\r\n        width: 1\r\n      }\r\n    },\r\n    itemStyle: {\r\n      // color: \u5404\u5F02,\r\n      borderColor: '#fff',\r\n      borderWidth: 1\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true\r\n      }\r\n    },\r\n    select: {\r\n      itemStyle: {\r\n        borderColor: '#212121'\r\n      }\r\n    }\r\n  };\r\n  return FunnelSeriesModel;\r\n}(SeriesModel);\r\n\r\nexport default FunnelSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as layout from '../../util/layout';\r\nimport { parsePercent, linearMap } from '../../util/number';\r\n\r\nfunction getViewRect(seriesModel, api) {\r\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\r\n    width: api.getWidth(),\r\n    height: api.getHeight()\r\n  });\r\n}\r\n\r\nfunction getSortedIndices(data, sort) {\r\n  var valueDim = data.mapDimension('value');\r\n  var valueArr = data.mapArray(valueDim, function (val) {\r\n    return val;\r\n  });\r\n  var indices = [];\r\n  var isAscending = sort === 'ascending';\r\n\r\n  for (var i = 0, len = data.count(); i < len; i++) {\r\n    indices[i] = i;\r\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\r\n\r\n\r\n  if (typeof sort === 'function') {\r\n    indices.sort(sort);\r\n  } else if (sort !== 'none') {\r\n    indices.sort(function (a, b) {\r\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\r\n    });\r\n  }\r\n\r\n  return indices;\r\n}\r\n\r\nfunction labelLayout(data) {\r\n  var seriesModel = data.hostModel;\r\n  var orient = seriesModel.get('orient');\r\n  data.each(function (idx) {\r\n    var itemModel = data.getItemModel(idx);\r\n    var labelModel = itemModel.getModel('label');\r\n    var labelPosition = labelModel.get('position');\r\n    var labelLineModel = itemModel.getModel('labelLine');\r\n    var layout = data.getItemLayout(idx);\r\n    var points = layout.points;\r\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center' || labelPosition === 'insideLeft' || labelPosition === 'insideRight';\r\n    var textAlign;\r\n    var textX;\r\n    var textY;\r\n    var linePoints;\r\n\r\n    if (isLabelInside) {\r\n      if (labelPosition === 'insideLeft') {\r\n        textX = (points[0][0] + points[3][0]) / 2 + 5;\r\n        textY = (points[0][1] + points[3][1]) / 2;\r\n        textAlign = 'left';\r\n      } else if (labelPosition === 'insideRight') {\r\n        textX = (points[1][0] + points[2][0]) / 2 - 5;\r\n        textY = (points[1][1] + points[2][1]) / 2;\r\n        textAlign = 'right';\r\n      } else {\r\n        textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\r\n        textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\r\n        textAlign = 'center';\r\n      }\r\n\r\n      linePoints = [[textX, textY], [textX, textY]];\r\n    } else {\r\n      var x1 = void 0;\r\n      var y1 = void 0;\r\n      var x2 = void 0;\r\n      var y2 = void 0;\r\n      var labelLineLen = labelLineModel.get('length');\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (orient === 'vertical' && ['top', 'bottom'].indexOf(labelPosition) > -1) {\r\n          labelPosition = 'left';\r\n          console.warn('Position error: Funnel chart on vertical orient dose not support top and bottom.');\r\n        }\r\n\r\n        if (orient === 'horizontal' && ['left', 'right'].indexOf(labelPosition) > -1) {\r\n          labelPosition = 'bottom';\r\n          console.warn('Position error: Funnel chart on horizontal orient dose not support left and right.');\r\n        }\r\n      }\r\n\r\n      if (labelPosition === 'left') {\r\n        // Left side\r\n        x1 = (points[3][0] + points[0][0]) / 2;\r\n        y1 = (points[3][1] + points[0][1]) / 2;\r\n        x2 = x1 - labelLineLen;\r\n        textX = x2 - 5;\r\n        textAlign = 'right';\r\n      } else if (labelPosition === 'right') {\r\n        // Right side\r\n        x1 = (points[1][0] + points[2][0]) / 2;\r\n        y1 = (points[1][1] + points[2][1]) / 2;\r\n        x2 = x1 + labelLineLen;\r\n        textX = x2 + 5;\r\n        textAlign = 'left';\r\n      } else if (labelPosition === 'top') {\r\n        // Top side\r\n        x1 = (points[3][0] + points[0][0]) / 2;\r\n        y1 = (points[3][1] + points[0][1]) / 2;\r\n        y2 = y1 - labelLineLen;\r\n        textY = y2 - 5;\r\n        textAlign = 'center';\r\n      } else if (labelPosition === 'bottom') {\r\n        // Bottom side\r\n        x1 = (points[1][0] + points[2][0]) / 2;\r\n        y1 = (points[1][1] + points[2][1]) / 2;\r\n        y2 = y1 + labelLineLen;\r\n        textY = y2 + 5;\r\n        textAlign = 'center';\r\n      } else if (labelPosition === 'rightTop') {\r\n        // RightTop side\r\n        x1 = orient === 'horizontal' ? points[3][0] : points[1][0];\r\n        y1 = orient === 'horizontal' ? points[3][1] : points[1][1];\r\n\r\n        if (orient === 'horizontal') {\r\n          y2 = y1 - labelLineLen;\r\n          textY = y2 - 5;\r\n          textAlign = 'center';\r\n        } else {\r\n          x2 = x1 + labelLineLen;\r\n          textX = x2 + 5;\r\n          textAlign = 'top';\r\n        }\r\n      } else if (labelPosition === 'rightBottom') {\r\n        // RightBottom side\r\n        x1 = points[2][0];\r\n        y1 = points[2][1];\r\n\r\n        if (orient === 'horizontal') {\r\n          y2 = y1 + labelLineLen;\r\n          textY = y2 + 5;\r\n          textAlign = 'center';\r\n        } else {\r\n          x2 = x1 + labelLineLen;\r\n          textX = x2 + 5;\r\n          textAlign = 'bottom';\r\n        }\r\n      } else if (labelPosition === 'leftTop') {\r\n        // LeftTop side\r\n        x1 = points[0][0];\r\n        y1 = orient === 'horizontal' ? points[0][1] : points[1][1];\r\n\r\n        if (orient === 'horizontal') {\r\n          y2 = y1 - labelLineLen;\r\n          textY = y2 - 5;\r\n          textAlign = 'center';\r\n        } else {\r\n          x2 = x1 - labelLineLen;\r\n          textX = x2 - 5;\r\n          textAlign = 'right';\r\n        }\r\n      } else if (labelPosition === 'leftBottom') {\r\n        // LeftBottom side\r\n        x1 = orient === 'horizontal' ? points[1][0] : points[3][0];\r\n        y1 = orient === 'horizontal' ? points[1][1] : points[2][1];\r\n\r\n        if (orient === 'horizontal') {\r\n          y2 = y1 + labelLineLen;\r\n          textY = y2 + 5;\r\n          textAlign = 'center';\r\n        } else {\r\n          x2 = x1 - labelLineLen;\r\n          textX = x2 - 5;\r\n          textAlign = 'right';\r\n        }\r\n      } else {\r\n        // Right side or Bottom side\r\n        x1 = (points[1][0] + points[2][0]) / 2;\r\n        y1 = (points[1][1] + points[2][1]) / 2;\r\n\r\n        if (orient === 'horizontal') {\r\n          y2 = y1 + labelLineLen;\r\n          textY = y2 + 5;\r\n          textAlign = 'center';\r\n        } else {\r\n          x2 = x1 + labelLineLen;\r\n          textX = x2 + 5;\r\n          textAlign = 'left';\r\n        }\r\n      }\r\n\r\n      if (orient === 'horizontal') {\r\n        x2 = x1;\r\n        textX = x2;\r\n      } else {\r\n        y2 = y1;\r\n        textY = y2;\r\n      }\r\n\r\n      linePoints = [[x1, y1], [x2, y2]];\r\n    }\r\n\r\n    layout.label = {\r\n      linePoints: linePoints,\r\n      x: textX,\r\n      y: textY,\r\n      verticalAlign: 'middle',\r\n      textAlign: textAlign,\r\n      inside: isLabelInside\r\n    };\r\n  });\r\n}\r\n\r\nexport default function funnelLayout(ecModel, api) {\r\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var valueDim = data.mapDimension('value');\r\n    var sort = seriesModel.get('sort');\r\n    var viewRect = getViewRect(seriesModel, api);\r\n    var orient = seriesModel.get('orient');\r\n    var viewWidth = viewRect.width;\r\n    var viewHeight = viewRect.height;\r\n    var indices = getSortedIndices(data, sort);\r\n    var x = viewRect.x;\r\n    var y = viewRect.y;\r\n    var sizeExtent = orient === 'horizontal' ? [parsePercent(seriesModel.get('minSize'), viewHeight), parsePercent(seriesModel.get('maxSize'), viewHeight)] : [parsePercent(seriesModel.get('minSize'), viewWidth), parsePercent(seriesModel.get('maxSize'), viewWidth)];\r\n    var dataExtent = data.getDataExtent(valueDim);\r\n    var min = seriesModel.get('min');\r\n    var max = seriesModel.get('max');\r\n\r\n    if (min == null) {\r\n      min = Math.min(dataExtent[0], 0);\r\n    }\r\n\r\n    if (max == null) {\r\n      max = dataExtent[1];\r\n    }\r\n\r\n    var funnelAlign = seriesModel.get('funnelAlign');\r\n    var gap = seriesModel.get('gap');\r\n    var viewSize = orient === 'horizontal' ? viewWidth : viewHeight;\r\n    var itemSize = (viewSize - gap * (data.count() - 1)) / data.count();\r\n\r\n    var getLinePoints = function (idx, offset) {\r\n      // End point index is data.count() and we assign it 0\r\n      if (orient === 'horizontal') {\r\n        var val_1 = data.get(valueDim, idx) || 0;\r\n        var itemHeight = linearMap(val_1, [min, max], sizeExtent, true);\r\n        var y0 = void 0;\r\n\r\n        switch (funnelAlign) {\r\n          case 'top':\r\n            y0 = y;\r\n            break;\r\n\r\n          case 'center':\r\n            y0 = y + (viewHeight - itemHeight) / 2;\r\n            break;\r\n\r\n          case 'bottom':\r\n            y0 = y + (viewHeight - itemHeight);\r\n            break;\r\n        }\r\n\r\n        return [[offset, y0], [offset, y0 + itemHeight]];\r\n      }\r\n\r\n      var val = data.get(valueDim, idx) || 0;\r\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\r\n      var x0;\r\n\r\n      switch (funnelAlign) {\r\n        case 'left':\r\n          x0 = x;\r\n          break;\r\n\r\n        case 'center':\r\n          x0 = x + (viewWidth - itemWidth) / 2;\r\n          break;\r\n\r\n        case 'right':\r\n          x0 = x + viewWidth - itemWidth;\r\n          break;\r\n      }\r\n\r\n      return [[x0, offset], [x0 + itemWidth, offset]];\r\n    };\r\n\r\n    if (sort === 'ascending') {\r\n      // From bottom to top\r\n      itemSize = -itemSize;\r\n      gap = -gap;\r\n\r\n      if (orient === 'horizontal') {\r\n        x += viewWidth;\r\n      } else {\r\n        y += viewHeight;\r\n      }\r\n\r\n      indices = indices.reverse();\r\n    }\r\n\r\n    for (var i = 0; i < indices.length; i++) {\r\n      var idx = indices[i];\r\n      var nextIdx = indices[i + 1];\r\n      var itemModel = data.getItemModel(idx);\r\n\r\n      if (orient === 'horizontal') {\r\n        var width = itemModel.get(['itemStyle', 'width']);\r\n\r\n        if (width == null) {\r\n          width = itemSize;\r\n        } else {\r\n          width = parsePercent(width, viewWidth);\r\n\r\n          if (sort === 'ascending') {\r\n            width = -width;\r\n          }\r\n        }\r\n\r\n        var start = getLinePoints(idx, x);\r\n        var end = getLinePoints(nextIdx, x + width);\r\n        x += width + gap;\r\n        data.setItemLayout(idx, {\r\n          points: start.concat(end.slice().reverse())\r\n        });\r\n      } else {\r\n        var height = itemModel.get(['itemStyle', 'height']);\r\n\r\n        if (height == null) {\r\n          height = itemSize;\r\n        } else {\r\n          height = parsePercent(height, viewHeight);\r\n\r\n          if (sort === 'ascending') {\r\n            height = -height;\r\n          }\r\n        }\r\n\r\n        var start = getLinePoints(idx, y);\r\n        var end = getLinePoints(nextIdx, y + height);\r\n        y += height + gap;\r\n        data.setItemLayout(idx, {\r\n          points: start.concat(end.slice().reverse())\r\n        });\r\n      }\r\n    }\r\n\r\n    labelLayout(data);\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport FunnelView from './FunnelView';\r\nimport FunnelSeriesModel from './FunnelSeries';\r\nimport funnelLayout from './funnelLayout';\r\nimport dataFilter from '../../processor/dataFilter';\r\nexport function install(registers) {\r\n  registers.registerChartView(FunnelView);\r\n  registers.registerSeriesModel(FunnelSeriesModel);\r\n  registers.registerLayout(funnelLayout);\r\n  registers.registerProcessor(dataFilter('funnel'));\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as graphic from '../../util/graphic';\r\nimport { setStatesStylesFromModel, enableHoverEmphasis } from '../../util/states';\r\nimport ChartView from '../../view/Chart';\r\nimport { numericToNumber } from '../../util/number';\r\nimport { eqNaN } from 'zrender/lib/core/util';\r\nimport { saveOldStyle } from '../../animation/basicTrasition';\r\nvar DEFAULT_SMOOTH = 0.3;\r\n\r\nvar ParallelView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ParallelView, _super);\r\n\r\n  function ParallelView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = ParallelView.type;\r\n    _this._dataGroup = new graphic.Group();\r\n    _this._initialized = false;\r\n    return _this;\r\n  }\r\n\r\n  ParallelView.prototype.init = function () {\r\n    this.group.add(this._dataGroup);\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  ParallelView.prototype.render = function (seriesModel, ecModel, api, payload) {\r\n    var dataGroup = this._dataGroup;\r\n    var data = seriesModel.getData();\r\n    var oldData = this._data;\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var dimensions = coordSys.dimensions;\r\n    var seriesScope = makeSeriesScope(seriesModel);\r\n    data.diff(oldData).add(add).update(update).remove(remove).execute();\r\n\r\n    function add(newDataIndex) {\r\n      var line = addEl(data, dataGroup, newDataIndex, dimensions, coordSys);\r\n      updateElCommon(line, data, newDataIndex, seriesScope);\r\n    }\r\n\r\n    function update(newDataIndex, oldDataIndex) {\r\n      var line = oldData.getItemGraphicEl(oldDataIndex);\r\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\r\n      data.setItemGraphicEl(newDataIndex, line);\r\n      graphic.updateProps(line, {\r\n        shape: {\r\n          points: points\r\n        }\r\n      }, seriesModel, newDataIndex);\r\n      saveOldStyle(line);\r\n      updateElCommon(line, data, newDataIndex, seriesScope);\r\n    }\r\n\r\n    function remove(oldDataIndex) {\r\n      var line = oldData.getItemGraphicEl(oldDataIndex);\r\n      dataGroup.remove(line);\r\n    } // First create\r\n\r\n\r\n    if (!this._initialized) {\r\n      this._initialized = true;\r\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\r\n        // Callback will be invoked immediately if there is no animation\r\n        setTimeout(function () {\r\n          dataGroup.removeClipPath();\r\n        });\r\n      });\r\n      dataGroup.setClipPath(clipPath);\r\n    }\r\n\r\n    this._data = data;\r\n  };\r\n\r\n  ParallelView.prototype.incrementalPrepareRender = function (seriesModel, ecModel, api) {\r\n    this._initialized = true;\r\n    this._data = null;\r\n\r\n    this._dataGroup.removeAll();\r\n  };\r\n\r\n  ParallelView.prototype.incrementalRender = function (taskParams, seriesModel, ecModel) {\r\n    var data = seriesModel.getData();\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var dimensions = coordSys.dimensions;\r\n    var seriesScope = makeSeriesScope(seriesModel);\r\n\r\n    for (var dataIndex = taskParams.start; dataIndex < taskParams.end; dataIndex++) {\r\n      var line = addEl(data, this._dataGroup, dataIndex, dimensions, coordSys);\r\n      line.incremental = true;\r\n      updateElCommon(line, data, dataIndex, seriesScope);\r\n    }\r\n  };\r\n\r\n  ParallelView.prototype.remove = function () {\r\n    this._dataGroup && this._dataGroup.removeAll();\r\n    this._data = null;\r\n  };\r\n\r\n  ParallelView.type = 'parallel';\r\n  return ParallelView;\r\n}(ChartView);\r\n\r\nfunction createGridClipShape(coordSys, seriesModel, cb) {\r\n  var parallelModel = coordSys.model;\r\n  var rect = coordSys.getRect();\r\n  var rectEl = new graphic.Rect({\r\n    shape: {\r\n      x: rect.x,\r\n      y: rect.y,\r\n      width: rect.width,\r\n      height: rect.height\r\n    }\r\n  });\r\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\r\n  rectEl.setShape(dim, 0);\r\n  graphic.initProps(rectEl, {\r\n    shape: {\r\n      width: rect.width,\r\n      height: rect.height\r\n    }\r\n  }, seriesModel, cb);\r\n  return rectEl;\r\n}\r\n\r\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\r\n  var points = [];\r\n\r\n  for (var i = 0; i < dimensions.length; i++) {\r\n    var dimName = dimensions[i];\r\n    var value = data.get(data.mapDimension(dimName), dataIndex);\r\n\r\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\r\n      points.push(coordSys.dataToPoint(value, dimName));\r\n    }\r\n  }\r\n\r\n  return points;\r\n}\r\n\r\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\r\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\r\n  var line = new graphic.Polyline({\r\n    shape: {\r\n      points: points\r\n    },\r\n    // silent: true,\r\n    z2: 10\r\n  });\r\n  dataGroup.add(line);\r\n  data.setItemGraphicEl(dataIndex, line);\r\n  return line;\r\n}\r\n\r\nfunction makeSeriesScope(seriesModel) {\r\n  var smooth = seriesModel.get('smooth', true);\r\n  smooth === true && (smooth = DEFAULT_SMOOTH);\r\n  smooth = numericToNumber(smooth);\r\n  eqNaN(smooth) && (smooth = 0);\r\n  return {\r\n    smooth: smooth\r\n  };\r\n}\r\n\r\nfunction updateElCommon(el, data, dataIndex, seriesScope) {\r\n  el.useStyle(data.getItemVisual(dataIndex, 'style'));\r\n  el.style.fill = null;\r\n  el.setShape('smooth', seriesScope.smooth);\r\n  var itemModel = data.getItemModel(dataIndex);\r\n  var emphasisModel = itemModel.getModel('emphasis');\r\n  setStatesStylesFromModel(el, itemModel, 'lineStyle');\r\n  enableHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\r\n} // function simpleDiff(oldData, newData, dimensions) {\r\n//     let oldLen;\r\n//     if (!oldData\r\n//         || !oldData.__plProgressive\r\n//         || (oldLen = oldData.count()) !== newData.count()\r\n//     ) {\r\n//         return true;\r\n//     }\r\n//     let dimLen = dimensions.length;\r\n//     for (let i = 0; i < oldLen; i++) {\r\n//         for (let j = 0; j < dimLen; j++) {\r\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\r\n//                 return true;\r\n//             }\r\n//         }\r\n//     }\r\n//     return false;\r\n// }\r\n// FIXME put in common util?\r\n\r\n\r\nfunction isEmptyValue(val, axisType) {\r\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\r\n}\r\n\r\nexport default ParallelView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport { each, bind } from 'zrender/lib/core/util';\r\nimport SeriesModel from '../../model/Series';\r\nimport createSeriesData from '../helper/createSeriesData';\r\n\r\nvar ParallelSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ParallelSeriesModel, _super);\r\n\r\n  function ParallelSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = ParallelSeriesModel.type;\r\n    _this.visualStyleAccessPath = 'lineStyle';\r\n    _this.visualDrawType = 'stroke';\r\n    return _this;\r\n  }\r\n\r\n  ParallelSeriesModel.prototype.getInitialData = function (option, ecModel) {\r\n    return createSeriesData(null, this, {\r\n      useEncodeDefaulter: bind(makeDefaultEncode, null, this)\r\n    });\r\n  };\r\n  /**\r\n   * User can get data raw indices on 'axisAreaSelected' event received.\r\n   *\r\n   * @return Raw indices\r\n   */\r\n\r\n\r\n  ParallelSeriesModel.prototype.getRawIndicesByActiveState = function (activeState) {\r\n    var coordSys = this.coordinateSystem;\r\n    var data = this.getData();\r\n    var indices = [];\r\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\r\n      if (activeState === theActiveState) {\r\n        indices.push(data.getRawIndex(dataIndex));\r\n      }\r\n    });\r\n    return indices;\r\n  };\r\n\r\n  ParallelSeriesModel.type = 'series.parallel';\r\n  ParallelSeriesModel.dependencies = ['parallel'];\r\n  ParallelSeriesModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 2,\r\n    coordinateSystem: 'parallel',\r\n    parallelIndex: 0,\r\n    label: {\r\n      show: false\r\n    },\r\n    inactiveOpacity: 0.05,\r\n    activeOpacity: 1,\r\n    lineStyle: {\r\n      width: 1,\r\n      opacity: 0.45,\r\n      type: 'solid'\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: false\r\n      }\r\n    },\r\n    progressive: 500,\r\n    smooth: false,\r\n    animationEasing: 'linear'\r\n  };\r\n  return ParallelSeriesModel;\r\n}(SeriesModel);\r\n\r\nfunction makeDefaultEncode(seriesModel) {\r\n  // The mapping of parallelAxis dimension to data dimension can\r\n  // be specified in parallelAxis.option.dim. For example, if\r\n  // parallelAxis.option.dim is 'dim3', it mapping to the third\r\n  // dimension of data. But `data.encode` has higher priority.\r\n  // Moreover, parallelModel.dimension should not be regarded as data\r\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\r\n  var parallelModel = seriesModel.ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\r\n\r\n  if (!parallelModel) {\r\n    return;\r\n  }\r\n\r\n  var encodeDefine = {};\r\n  each(parallelModel.dimensions, function (axisDim) {\r\n    var dataDimIndex = convertDimNameToNumber(axisDim);\r\n    encodeDefine[axisDim] = dataDimIndex;\r\n  });\r\n  return encodeDefine;\r\n}\r\n\r\nfunction convertDimNameToNumber(dimName) {\r\n  return +dimName.replace('dim', '');\r\n}\r\n\r\nexport default ParallelSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar opacityAccessPath = ['lineStyle', 'opacity'];\r\nvar parallelVisual = {\r\n  seriesType: 'parallel',\r\n  reset: function (seriesModel, ecModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var opacityMap = {\r\n      normal: seriesModel.get(['lineStyle', 'opacity']),\r\n      active: seriesModel.get('activeOpacity'),\r\n      inactive: seriesModel.get('inactiveOpacity')\r\n    };\r\n    return {\r\n      progress: function (params, data) {\r\n        coordSys.eachActiveState(data, function (activeState, dataIndex) {\r\n          var opacity = opacityMap[activeState];\r\n\r\n          if (activeState === 'normal' && data.hasItemOption) {\r\n            var itemOpacity = data.getItemModel(dataIndex).get(opacityAccessPath, true);\r\n            itemOpacity != null && (opacity = itemOpacity);\r\n          }\r\n\r\n          var existsStyle = data.ensureUniqueItemVisual(dataIndex, 'style');\r\n          existsStyle.opacity = opacity;\r\n        }, params.start, params.end);\r\n      }\r\n    };\r\n  }\r\n};\r\nexport default parallelVisual;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as modelUtil from '../../util/model';\r\nexport default function parallelPreprocessor(option) {\r\n  createParallelIfNeeded(option);\r\n  mergeAxisOptionFromParallel(option);\r\n}\r\n/**\r\n * Create a parallel coordinate if not exists.\r\n * @inner\r\n */\r\n\r\nfunction createParallelIfNeeded(option) {\r\n  if (option.parallel) {\r\n    return;\r\n  }\r\n\r\n  var hasParallelSeries = false;\r\n  zrUtil.each(option.series, function (seriesOpt) {\r\n    if (seriesOpt && seriesOpt.type === 'parallel') {\r\n      hasParallelSeries = true;\r\n    }\r\n  });\r\n\r\n  if (hasParallelSeries) {\r\n    option.parallel = [{}];\r\n  }\r\n}\r\n/**\r\n * Merge aixs definition from parallel option (if exists) to axis option.\r\n * @inner\r\n */\r\n\r\n\r\nfunction mergeAxisOptionFromParallel(option) {\r\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\r\n  zrUtil.each(axes, function (axisOption) {\r\n    if (!zrUtil.isObject(axisOption)) {\r\n      return;\r\n    }\r\n\r\n    var parallelIndex = axisOption.parallelIndex || 0;\r\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\r\n\r\n    if (parallelOption && parallelOption.parallelAxisDefault) {\r\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\r\n    }\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport ComponentView from '../../view/Component';\r\nimport { each, bind, extend } from 'zrender/lib/core/util';\r\nimport { createOrUpdate } from '../../util/throttle';\r\nvar CLICK_THRESHOLD = 5; // > 4\r\n\r\nvar ParallelView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ParallelView, _super);\r\n\r\n  function ParallelView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = ParallelView.type;\r\n    return _this;\r\n  }\r\n\r\n  ParallelView.prototype.render = function (parallelModel, ecModel, api) {\r\n    this._model = parallelModel;\r\n    this._api = api;\r\n\r\n    if (!this._handlers) {\r\n      this._handlers = {};\r\n      each(handlers, function (handler, eventName) {\r\n        api.getZr().on(eventName, this._handlers[eventName] = bind(handler, this));\r\n      }, this);\r\n    }\r\n\r\n    createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\r\n  };\r\n\r\n  ParallelView.prototype.dispose = function (ecModel, api) {\r\n    each(this._handlers, function (handler, eventName) {\r\n      api.getZr().off(eventName, handler);\r\n    });\r\n    this._handlers = null;\r\n  };\r\n  /**\r\n   * @internal\r\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\r\n   */\r\n\r\n\r\n  ParallelView.prototype._throttledDispatchExpand = function (opt) {\r\n    this._dispatchExpand(opt);\r\n  };\r\n  /**\r\n   * @internal\r\n   */\r\n\r\n\r\n  ParallelView.prototype._dispatchExpand = function (opt) {\r\n    opt && this._api.dispatchAction(extend({\r\n      type: 'parallelAxisExpand'\r\n    }, opt));\r\n  };\r\n\r\n  ParallelView.type = 'parallel';\r\n  return ParallelView;\r\n}(ComponentView);\r\n\r\nvar handlers = {\r\n  mousedown: function (e) {\r\n    if (checkTrigger(this, 'click')) {\r\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\r\n    }\r\n  },\r\n  mouseup: function (e) {\r\n    var mouseDownPoint = this._mouseDownPoint;\r\n\r\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\r\n      var point = [e.offsetX, e.offsetY];\r\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\r\n\r\n      if (dist > CLICK_THRESHOLD) {\r\n        return;\r\n      }\r\n\r\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\r\n\r\n      result.behavior !== 'none' && this._dispatchExpand({\r\n        axisExpandWindow: result.axisExpandWindow\r\n      });\r\n    }\r\n\r\n    this._mouseDownPoint = null;\r\n  },\r\n  mousemove: function (e) {\r\n    // Should do nothing when brushing.\r\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\r\n      return;\r\n    }\r\n\r\n    var model = this._model;\r\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\r\n    var behavior = result.behavior;\r\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\r\n\r\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\r\n    : {\r\n      axisExpandWindow: result.axisExpandWindow,\r\n      // Jumping uses animation, and sliding suppresses animation.\r\n      animation: behavior === 'jump' ? null : {\r\n        duration: 0 // Disable animation.\r\n\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nfunction checkTrigger(view, triggerOn) {\r\n  var model = view._model;\r\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\r\n}\r\n\r\nexport default ParallelView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport ComponentModel from '../../model/Component';\r\n\r\nvar ParallelModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ParallelModel, _super);\r\n\r\n  function ParallelModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = ParallelModel.type;\r\n    return _this;\r\n  }\r\n\r\n  ParallelModel.prototype.init = function () {\r\n    _super.prototype.init.apply(this, arguments);\r\n\r\n    this.mergeOption({});\r\n  };\r\n\r\n  ParallelModel.prototype.mergeOption = function (newOption) {\r\n    var thisOption = this.option;\r\n    newOption && zrUtil.merge(thisOption, newOption, true);\r\n\r\n    this._initDimensions();\r\n  };\r\n  /**\r\n   * Whether series or axis is in this coordinate system.\r\n   */\r\n\r\n\r\n  ParallelModel.prototype.contains = function (model, ecModel) {\r\n    var parallelIndex = model.get('parallelIndex');\r\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\r\n  };\r\n\r\n  ParallelModel.prototype.setAxisExpand = function (opt) {\r\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\r\n      if (opt.hasOwnProperty(name)) {\r\n        // @ts-ignore FIXME: why \"never\" inferred in this.option[name]?\r\n        this.option[name] = opt[name];\r\n      }\r\n    }, this);\r\n  };\r\n\r\n  ParallelModel.prototype._initDimensions = function () {\r\n    var dimensions = this.dimensions = [];\r\n    var parallelAxisIndex = this.parallelAxisIndex = [];\r\n    var axisModels = zrUtil.filter(this.ecModel.queryComponents({\r\n      mainType: 'parallelAxis'\r\n    }), function (axisModel) {\r\n      // Can not use this.contains here, because\r\n      // initialization has not been completed yet.\r\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\r\n    }, this);\r\n    zrUtil.each(axisModels, function (axisModel) {\r\n      dimensions.push('dim' + axisModel.get('dim'));\r\n      parallelAxisIndex.push(axisModel.componentIndex);\r\n    });\r\n  };\r\n\r\n  ParallelModel.type = 'parallel';\r\n  ParallelModel.dependencies = ['parallelAxis'];\r\n  ParallelModel.layoutMode = 'box';\r\n  ParallelModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 0,\r\n    left: 80,\r\n    top: 60,\r\n    right: 80,\r\n    bottom: 60,\r\n    // width: {totalWidth} - left - right,\r\n    // height: {totalHeight} - top - bottom,\r\n    layout: 'horizontal',\r\n    // FIXME\r\n    // naming?\r\n    axisExpandable: false,\r\n    axisExpandCenter: null,\r\n    axisExpandCount: 0,\r\n    axisExpandWidth: 50,\r\n    axisExpandRate: 17,\r\n    axisExpandDebounce: 50,\r\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\r\n    // Do not doc to user until necessary.\r\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\r\n    axisExpandTriggerOn: 'click',\r\n    parallelAxisDefault: null\r\n  };\r\n  return ParallelModel;\r\n}(ComponentModel);\r\n\r\nexport default ParallelModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport Axis from '../Axis';\r\n\r\nvar ParallelAxis =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ParallelAxis, _super);\r\n\r\n  function ParallelAxis(dim, scale, coordExtent, axisType, axisIndex) {\r\n    var _this = _super.call(this, dim, scale, coordExtent) || this;\r\n\r\n    _this.type = axisType || 'value';\r\n    _this.axisIndex = axisIndex;\r\n    return _this;\r\n  }\r\n\r\n  ParallelAxis.prototype.isHorizontal = function () {\r\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\r\n  };\r\n\r\n  return ParallelAxis;\r\n}(Axis);\r\n\r\nexport default ParallelAxis;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Calculate slider move result.\r\n * Usage:\r\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\r\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\r\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\r\n *\r\n * @param delta Move length.\r\n * @param handleEnds handleEnds[0] can be bigger then handleEnds[1].\r\n *              handleEnds will be modified in this method.\r\n * @param extent handleEnds is restricted by extent.\r\n *              extent[0] should less or equals than extent[1].\r\n * @param handleIndex Can be 'all', means that both move the two handleEnds.\r\n * @param minSpan The range of dataZoom can not be smaller than that.\r\n *              If not set, handle0 and cross handle1. If set as a non-negative\r\n *              number (including `0`), handles will push each other when reaching\r\n *              the minSpan.\r\n * @param maxSpan The range of dataZoom can not be larger than that.\r\n * @return The input handleEnds.\r\n */\r\nexport default function sliderMove(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\r\n  delta = delta || 0;\r\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\r\n\r\n  if (minSpan != null) {\r\n    minSpan = restrict(minSpan, [0, extentSpan]);\r\n  }\r\n\r\n  if (maxSpan != null) {\r\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\r\n  }\r\n\r\n  if (handleIndex === 'all') {\r\n    var handleSpan = Math.abs(handleEnds[1] - handleEnds[0]);\r\n    handleSpan = restrict(handleSpan, [0, extentSpan]);\r\n    minSpan = maxSpan = restrict(handleSpan, [minSpan, maxSpan]);\r\n    handleIndex = 0;\r\n  }\r\n\r\n  handleEnds[0] = restrict(handleEnds[0], extent);\r\n  handleEnds[1] = restrict(handleEnds[1], extent);\r\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\r\n  handleEnds[handleIndex] += delta; // Restrict in extent.\r\n\r\n  var extentMinSpan = minSpan || 0;\r\n  var realExtent = extent.slice();\r\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\r\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\r\n\r\n  var currDistSign;\r\n  currDistSign = getSpanSign(handleEnds, handleIndex);\r\n\r\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\r\n    // If minSpan exists, 'cross' is forbidden.\r\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\r\n  } // Shrink span.\r\n\r\n\r\n  currDistSign = getSpanSign(handleEnds, handleIndex);\r\n\r\n  if (maxSpan != null && currDistSign.span > maxSpan) {\r\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\r\n  }\r\n\r\n  return handleEnds;\r\n}\r\n\r\nfunction getSpanSign(handleEnds, handleIndex) {\r\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\r\n  // is at left of handleEnds[1] for non-cross case.\r\n\r\n  return {\r\n    span: Math.abs(dist),\r\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\r\n  };\r\n}\r\n\r\nfunction restrict(value, extend) {\r\n  return Math.min(extend[1] != null ? extend[1] : Infinity, Math.max(extend[0] != null ? extend[0] : -Infinity, value));\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Parallel Coordinates\r\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\r\n */\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as matrix from 'zrender/lib/core/matrix';\r\nimport * as layoutUtil from '../../util/layout';\r\nimport * as axisHelper from '../../coord/axisHelper';\r\nimport ParallelAxis from './ParallelAxis';\r\nimport * as graphic from '../../util/graphic';\r\nimport * as numberUtil from '../../util/number';\r\nimport sliderMove from '../../component/helper/sliderMove';\r\nvar each = zrUtil.each;\r\nvar mathMin = Math.min;\r\nvar mathMax = Math.max;\r\nvar mathFloor = Math.floor;\r\nvar mathCeil = Math.ceil;\r\nvar round = numberUtil.round;\r\nvar PI = Math.PI;\r\n\r\nvar Parallel =\r\n/** @class */\r\nfunction () {\r\n  function Parallel(parallelModel, ecModel, api) {\r\n    this.type = 'parallel';\r\n    /**\r\n     * key: dimension\r\n     */\r\n\r\n    this._axesMap = zrUtil.createHashMap();\r\n    /**\r\n     * key: dimension\r\n     * value: {position: [], rotation, }\r\n     */\r\n\r\n    this._axesLayout = {};\r\n    this.dimensions = parallelModel.dimensions;\r\n    this._model = parallelModel;\r\n\r\n    this._init(parallelModel, ecModel, api);\r\n  }\r\n\r\n  Parallel.prototype._init = function (parallelModel, ecModel, api) {\r\n    var dimensions = parallelModel.dimensions;\r\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\r\n    each(dimensions, function (dim, idx) {\r\n      var axisIndex = parallelAxisIndex[idx];\r\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\r\n\r\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\r\n\r\n      var isCategory = axis.type === 'category';\r\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\r\n      axis.inverse = axisModel.get('inverse'); // Injection\r\n\r\n      axisModel.axis = axis;\r\n      axis.model = axisModel;\r\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\r\n    }, this);\r\n  };\r\n  /**\r\n   * Update axis scale after data processed\r\n   */\r\n\r\n\r\n  Parallel.prototype.update = function (ecModel, api) {\r\n    this._updateAxesFromSeries(this._model, ecModel);\r\n  };\r\n\r\n  Parallel.prototype.containPoint = function (point) {\r\n    var layoutInfo = this._makeLayoutInfo();\r\n\r\n    var axisBase = layoutInfo.axisBase;\r\n    var layoutBase = layoutInfo.layoutBase;\r\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\r\n    var pAxis = point[1 - pixelDimIndex];\r\n    var pLayout = point[pixelDimIndex];\r\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\r\n  };\r\n\r\n  Parallel.prototype.getModel = function () {\r\n    return this._model;\r\n  };\r\n  /**\r\n   * Update properties from series\r\n   */\r\n\r\n\r\n  Parallel.prototype._updateAxesFromSeries = function (parallelModel, ecModel) {\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      if (!parallelModel.contains(seriesModel, ecModel)) {\r\n        return;\r\n      }\r\n\r\n      var data = seriesModel.getData();\r\n      each(this.dimensions, function (dim) {\r\n        var axis = this._axesMap.get(dim);\r\n\r\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\r\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\r\n      }, this);\r\n    }, this);\r\n  };\r\n  /**\r\n   * Resize the parallel coordinate system.\r\n   */\r\n\r\n\r\n  Parallel.prototype.resize = function (parallelModel, api) {\r\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\r\n      width: api.getWidth(),\r\n      height: api.getHeight()\r\n    });\r\n\r\n    this._layoutAxes();\r\n  };\r\n\r\n  Parallel.prototype.getRect = function () {\r\n    return this._rect;\r\n  };\r\n\r\n  Parallel.prototype._makeLayoutInfo = function () {\r\n    var parallelModel = this._model;\r\n    var rect = this._rect;\r\n    var xy = ['x', 'y'];\r\n    var wh = ['width', 'height'];\r\n    var layout = parallelModel.get('layout');\r\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\r\n    var layoutLength = rect[wh[pixelDimIndex]];\r\n    var layoutExtent = [0, layoutLength];\r\n    var axisCount = this.dimensions.length;\r\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\r\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\r\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\r\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\r\n    // where collapsed axes should be overlapped.\r\n\r\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\r\n    var winSize;\r\n\r\n    if (!axisExpandWindow) {\r\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\r\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\r\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\r\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\r\n    } else {\r\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\r\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\r\n    }\r\n\r\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\r\n\r\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\r\n\r\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\r\n\r\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\r\n    return {\r\n      layout: layout,\r\n      pixelDimIndex: pixelDimIndex,\r\n      layoutBase: rect[xy[pixelDimIndex]],\r\n      layoutLength: layoutLength,\r\n      axisBase: rect[xy[1 - pixelDimIndex]],\r\n      axisLength: rect[wh[1 - pixelDimIndex]],\r\n      axisExpandable: axisExpandable,\r\n      axisExpandWidth: axisExpandWidth,\r\n      axisCollapseWidth: axisCollapseWidth,\r\n      axisExpandWindow: axisExpandWindow,\r\n      axisCount: axisCount,\r\n      winInnerIndices: winInnerIndices,\r\n      axisExpandWindow0Pos: axisExpandWindow0Pos\r\n    };\r\n  };\r\n\r\n  Parallel.prototype._layoutAxes = function () {\r\n    var rect = this._rect;\r\n    var axes = this._axesMap;\r\n    var dimensions = this.dimensions;\r\n\r\n    var layoutInfo = this._makeLayoutInfo();\r\n\r\n    var layout = layoutInfo.layout;\r\n    axes.each(function (axis) {\r\n      var axisExtent = [0, layoutInfo.axisLength];\r\n      var idx = axis.inverse ? 1 : 0;\r\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\r\n    });\r\n    each(dimensions, function (dim, idx) {\r\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\r\n      var positionTable = {\r\n        horizontal: {\r\n          x: posInfo.position,\r\n          y: layoutInfo.axisLength\r\n        },\r\n        vertical: {\r\n          x: 0,\r\n          y: posInfo.position\r\n        }\r\n      };\r\n      var rotationTable = {\r\n        horizontal: PI / 2,\r\n        vertical: 0\r\n      };\r\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\r\n      var rotation = rotationTable[layout];\r\n      var transform = matrix.create();\r\n      matrix.rotate(transform, transform, rotation);\r\n      matrix.translate(transform, transform, position); // TODO\r\n      // tick layout info\r\n      // TODO\r\n      // update dimensions info based on axis order.\r\n\r\n      this._axesLayout[dim] = {\r\n        position: position,\r\n        rotation: rotation,\r\n        transform: transform,\r\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\r\n        axisLabelShow: posInfo.axisLabelShow,\r\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\r\n        tickDirection: 1,\r\n        labelDirection: 1\r\n      };\r\n    }, this);\r\n  };\r\n  /**\r\n   * Get axis by dim.\r\n   */\r\n\r\n\r\n  Parallel.prototype.getAxis = function (dim) {\r\n    return this._axesMap.get(dim);\r\n  };\r\n  /**\r\n   * Convert a dim value of a single item of series data to Point.\r\n   */\r\n\r\n\r\n  Parallel.prototype.dataToPoint = function (value, dim) {\r\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\r\n  };\r\n  /**\r\n   * Travel data for one time, get activeState of each data item.\r\n   * @param start the start dataIndex that travel from.\r\n   * @param end the next dataIndex of the last dataIndex will be travel.\r\n   */\r\n\r\n\r\n  Parallel.prototype.eachActiveState = function (data, callback, start, end) {\r\n    start == null && (start = 0);\r\n    end == null && (end = data.count());\r\n    var axesMap = this._axesMap;\r\n    var dimensions = this.dimensions;\r\n    var dataDimensions = [];\r\n    var axisModels = [];\r\n    zrUtil.each(dimensions, function (axisDim) {\r\n      dataDimensions.push(data.mapDimension(axisDim));\r\n      axisModels.push(axesMap.get(axisDim).model);\r\n    });\r\n    var hasActiveSet = this.hasAxisBrushed();\r\n\r\n    for (var dataIndex = start; dataIndex < end; dataIndex++) {\r\n      var activeState = void 0;\r\n\r\n      if (!hasActiveSet) {\r\n        activeState = 'normal';\r\n      } else {\r\n        activeState = 'active';\r\n        var values = data.getValues(dataDimensions, dataIndex);\r\n\r\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\r\n          var state = axisModels[j].getActiveState(values[j]);\r\n\r\n          if (state === 'inactive') {\r\n            activeState = 'inactive';\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      callback(activeState, dataIndex);\r\n    }\r\n  };\r\n  /**\r\n   * Whether has any activeSet.\r\n   */\r\n\r\n\r\n  Parallel.prototype.hasAxisBrushed = function () {\r\n    var dimensions = this.dimensions;\r\n    var axesMap = this._axesMap;\r\n    var hasActiveSet = false;\r\n\r\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\r\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\r\n        hasActiveSet = true;\r\n      }\r\n    }\r\n\r\n    return hasActiveSet;\r\n  };\r\n  /**\r\n   * Convert coords of each axis to Point.\r\n   *  Return point. For example: [10, 20]\r\n   */\r\n\r\n\r\n  Parallel.prototype.axisCoordToPoint = function (coord, dim) {\r\n    var axisLayout = this._axesLayout[dim];\r\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\r\n  };\r\n  /**\r\n   * Get axis layout.\r\n   */\r\n\r\n\r\n  Parallel.prototype.getAxisLayout = function (dim) {\r\n    return zrUtil.clone(this._axesLayout[dim]);\r\n  };\r\n  /**\r\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\r\n   */\r\n\r\n\r\n  Parallel.prototype.getSlidedAxisExpandWindow = function (point) {\r\n    var layoutInfo = this._makeLayoutInfo();\r\n\r\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\r\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\r\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\r\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\r\n\r\n    if (!this.containPoint(point)) {\r\n      return {\r\n        behavior: 'none',\r\n        axisExpandWindow: axisExpandWindow\r\n      };\r\n    } // Conver the point from global to expand coordinates.\r\n\r\n\r\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\r\n    // slided when mouse is the center area of the window.\r\n\r\n    var delta;\r\n    var behavior = 'slide';\r\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\r\n\r\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\r\n\r\n\r\n    var useJump = triggerArea[0] != null;\r\n\r\n    if (axisCollapseWidth) {\r\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\r\n        behavior = 'jump';\r\n        delta = pointCoord - winSize * triggerArea[2];\r\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\r\n        behavior = 'jump';\r\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\r\n      } else {\r\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\r\n      }\r\n\r\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\r\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\r\n      : behavior = 'none';\r\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\r\n    else {\r\n        var winSize2 = axisExpandWindow[1] - axisExpandWindow[0];\r\n        var pos = extent[1] * pointCoord / winSize2;\r\n        axisExpandWindow = [mathMax(0, pos - winSize2 / 2)];\r\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize2);\r\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize2;\r\n      }\r\n\r\n    return {\r\n      axisExpandWindow: axisExpandWindow,\r\n      behavior: behavior\r\n    };\r\n  };\r\n\r\n  return Parallel;\r\n}();\r\n\r\nfunction restrict(len, extent) {\r\n  return mathMin(mathMax(len, extent[0]), extent[1]);\r\n}\r\n\r\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\r\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\r\n  return {\r\n    position: step * axisIndex,\r\n    axisNameAvailableWidth: step,\r\n    axisLabelShow: true\r\n  };\r\n}\r\n\r\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\r\n  var layoutLength = layoutInfo.layoutLength;\r\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\r\n  var axisCount = layoutInfo.axisCount;\r\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\r\n  var winInnerIndices = layoutInfo.winInnerIndices;\r\n  var position;\r\n  var axisNameAvailableWidth = axisCollapseWidth;\r\n  var axisLabelShow = false;\r\n  var nameTruncateMaxWidth;\r\n\r\n  if (axisIndex < winInnerIndices[0]) {\r\n    position = axisIndex * axisCollapseWidth;\r\n    nameTruncateMaxWidth = axisCollapseWidth;\r\n  } else if (axisIndex <= winInnerIndices[1]) {\r\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\r\n    axisNameAvailableWidth = axisExpandWidth;\r\n    axisLabelShow = true;\r\n  } else {\r\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\r\n    nameTruncateMaxWidth = axisCollapseWidth;\r\n  }\r\n\r\n  return {\r\n    position: position,\r\n    axisNameAvailableWidth: axisNameAvailableWidth,\r\n    axisLabelShow: axisLabelShow,\r\n    nameTruncateMaxWidth: nameTruncateMaxWidth\r\n  };\r\n}\r\n\r\nexport default Parallel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Parallel coordinate system creater.\r\n */\r\nimport Parallel from './Parallel';\r\nimport { SINGLE_REFERRING } from '../../util/model';\r\n\r\nfunction createParallelCoordSys(ecModel, api) {\r\n  var coordSysList = [];\r\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\r\n    var coordSys = new Parallel(parallelModel, ecModel, api);\r\n    coordSys.name = 'parallel_' + idx;\r\n    coordSys.resize(parallelModel, api);\r\n    parallelModel.coordinateSystem = coordSys;\r\n    coordSys.model = parallelModel;\r\n    coordSysList.push(coordSys);\r\n  }); // Inject the coordinateSystems into seriesModel\r\n\r\n  ecModel.eachSeries(function (seriesModel) {\r\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\r\n      var parallelModel = seriesModel.getReferringComponents('parallel', SINGLE_REFERRING).models[0];\r\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\r\n    }\r\n  });\r\n  return coordSysList;\r\n}\r\n\r\nvar parallelCoordSysCreator = {\r\n  create: createParallelCoordSys\r\n};\r\nexport default parallelCoordSysCreator;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport ComponentModel from '../../model/Component';\r\nimport makeStyleMapper from '../../model/mixin/makeStyleMapper';\r\nimport * as numberUtil from '../../util/number';\r\nimport { AxisModelCommonMixin } from '../axisModelCommonMixin';\r\n\r\nvar ParallelAxisModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ParallelAxisModel, _super);\r\n\r\n  function ParallelAxisModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = ParallelAxisModel.type;\r\n    /**\r\n     * @readOnly\r\n     */\r\n\r\n    _this.activeIntervals = [];\r\n    return _this;\r\n  }\r\n\r\n  ParallelAxisModel.prototype.getAreaSelectStyle = function () {\r\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity'] // Option decal is in `DecalObject` but style.decal is in `PatternObject`.\r\n    // So do not transfer decal directly.\r\n    ])(this.getModel('areaSelectStyle'));\r\n  };\r\n  /**\r\n   * The code of this feature is put on AxisModel but not ParallelAxis,\r\n   * because axisModel can be alive after echarts updating but instance of\r\n   * ParallelAxis having been disposed. this._activeInterval should be kept\r\n   * when action dispatched (i.e. legend click).\r\n   *\r\n   * @param intervals `interval.length === 0` means set all active.\r\n   */\r\n\r\n\r\n  ParallelAxisModel.prototype.setActiveIntervals = function (intervals) {\r\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\r\n\r\n    if (activeIntervals) {\r\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\r\n        numberUtil.asc(activeIntervals[i]);\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * @param value When only attempting detect whether 'no activeIntervals set',\r\n   *        `value` is not needed to be input.\r\n   */\r\n\r\n\r\n  ParallelAxisModel.prototype.getActiveState = function (value) {\r\n    var activeIntervals = this.activeIntervals;\r\n\r\n    if (!activeIntervals.length) {\r\n      return 'normal';\r\n    }\r\n\r\n    if (value == null || isNaN(+value)) {\r\n      return 'inactive';\r\n    } // Simple optimization\r\n\r\n\r\n    if (activeIntervals.length === 1) {\r\n      var interval = activeIntervals[0];\r\n\r\n      if (interval[0] <= value && value <= interval[1]) {\r\n        return 'active';\r\n      }\r\n    } else {\r\n      for (var i = 0, len = activeIntervals.length; i < len; i++) {\r\n        if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\r\n          return 'active';\r\n        }\r\n      }\r\n    }\r\n\r\n    return 'inactive';\r\n  };\r\n\r\n  return ParallelAxisModel;\r\n}(ComponentModel);\r\n\r\nzrUtil.mixin(ParallelAxisModel, AxisModelCommonMixin);\r\nexport default ParallelAxisModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport { curry, each, map, bind, merge, clone, defaults, assert } from 'zrender/lib/core/util';\r\nimport Eventful from 'zrender/lib/core/Eventful';\r\nimport * as graphic from '../../util/graphic';\r\nimport * as interactionMutex from './interactionMutex';\r\nimport DataDiffer from '../../data/DataDiffer';\r\nvar BRUSH_PANEL_GLOBAL = true;\r\nvar mathMin = Math.min;\r\nvar mathMax = Math.max;\r\nvar mathPow = Math.pow;\r\nvar COVER_Z = 10000;\r\nvar UNSELECT_THRESHOLD = 6;\r\nvar MIN_RESIZE_LINE_WIDTH = 6;\r\nvar MUTEX_RESOURCE_KEY = 'globalPan';\r\nvar DIRECTION_MAP = {\r\n  w: [0, 0],\r\n  e: [0, 1],\r\n  n: [1, 0],\r\n  s: [1, 1]\r\n};\r\nvar CURSOR_MAP = {\r\n  w: 'ew',\r\n  e: 'ew',\r\n  n: 'ns',\r\n  s: 'ns',\r\n  ne: 'nesw',\r\n  sw: 'nesw',\r\n  nw: 'nwse',\r\n  se: 'nwse'\r\n};\r\nvar DEFAULT_BRUSH_OPT = {\r\n  brushStyle: {\r\n    lineWidth: 2,\r\n    stroke: 'rgba(210,219,238,0.3)',\r\n    fill: '#D2DBEE'\r\n  },\r\n  transformable: true,\r\n  brushMode: 'single',\r\n  removeOnClick: false\r\n};\r\nvar baseUID = 0;\r\n/**\r\n * params:\r\n *     areas: Array.<Array>, coord relates to container group,\r\n *                             If no container specified, to global.\r\n *     opt {\r\n *         isEnd: boolean,\r\n *         removeOnClick: boolean\r\n *     }\r\n */\r\n\r\nvar BrushController =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(BrushController, _super);\r\n\r\n  function BrushController(zr) {\r\n    var _this = _super.call(this) || this;\r\n    /**\r\n     * @internal\r\n     */\r\n\r\n\r\n    _this._track = [];\r\n    /**\r\n     * @internal\r\n     */\r\n\r\n    _this._covers = [];\r\n    _this._handlers = {};\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      assert(zr);\r\n    }\r\n\r\n    _this._zr = zr;\r\n    _this.group = new graphic.Group();\r\n    _this._uid = 'brushController_' + baseUID++;\r\n    each(pointerHandlers, function (handler, eventName) {\r\n      this._handlers[eventName] = bind(handler, this);\r\n    }, _this);\r\n    return _this;\r\n  }\r\n  /**\r\n   * If set to `false`, select disabled.\r\n   */\r\n\r\n\r\n  BrushController.prototype.enableBrush = function (brushOption) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      assert(this._mounted);\r\n    }\r\n\r\n    this._brushType && this._doDisableBrush();\r\n    brushOption.brushType && this._doEnableBrush(brushOption);\r\n    return this;\r\n  };\r\n\r\n  BrushController.prototype._doEnableBrush = function (brushOption) {\r\n    var zr = this._zr; // Consider roam, which takes globalPan too.\r\n\r\n    if (!this._enableGlobalPan) {\r\n      interactionMutex.take(zr, MUTEX_RESOURCE_KEY, this._uid);\r\n    }\r\n\r\n    each(this._handlers, function (handler, eventName) {\r\n      zr.on(eventName, handler);\r\n    });\r\n    this._brushType = brushOption.brushType;\r\n    this._brushOption = merge(clone(DEFAULT_BRUSH_OPT), brushOption, true);\r\n  };\r\n\r\n  BrushController.prototype._doDisableBrush = function () {\r\n    var zr = this._zr;\r\n    interactionMutex.release(zr, MUTEX_RESOURCE_KEY, this._uid);\r\n    each(this._handlers, function (handler, eventName) {\r\n      zr.off(eventName, handler);\r\n    });\r\n    this._brushType = this._brushOption = null;\r\n  };\r\n  /**\r\n   * @param panelOpts If not pass, it is global brush.\r\n   */\r\n\r\n\r\n  BrushController.prototype.setPanels = function (panelOpts) {\r\n    if (panelOpts && panelOpts.length) {\r\n      var panels_1 = this._panels = {};\r\n      each(panelOpts, function (panelOpts) {\r\n        panels_1[panelOpts.panelId] = clone(panelOpts);\r\n      });\r\n    } else {\r\n      this._panels = null;\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  BrushController.prototype.mount = function (opt) {\r\n    opt = opt || {};\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      this._mounted = true; // should be at first.\r\n    }\r\n\r\n    this._enableGlobalPan = opt.enableGlobalPan;\r\n    var thisGroup = this.group;\r\n\r\n    this._zr.add(thisGroup);\r\n\r\n    thisGroup.attr({\r\n      x: opt.x || 0,\r\n      y: opt.y || 0,\r\n      rotation: opt.rotation || 0,\r\n      scaleX: opt.scaleX || 1,\r\n      scaleY: opt.scaleY || 1\r\n    });\r\n    this._transform = thisGroup.getLocalTransform();\r\n    return this;\r\n  }; // eachCover(cb, context): void {\r\n  //     each(this._covers, cb, context);\r\n  // }\r\n\r\n  /**\r\n   * Update covers.\r\n   * @param coverConfigList\r\n   *        If coverConfigList is null/undefined, all covers removed.\r\n   */\r\n\r\n\r\n  BrushController.prototype.updateCovers = function (coverConfigList) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      assert(this._mounted);\r\n    }\r\n\r\n    coverConfigList = map(coverConfigList, function (coverConfig) {\r\n      return merge(clone(DEFAULT_BRUSH_OPT), coverConfig, true);\r\n    });\r\n    var tmpIdPrefix = '\\0-brush-index-';\r\n    var oldCovers = this._covers;\r\n    var newCovers = this._covers = [];\r\n    var controller = this;\r\n    var creatingCover = this._creatingCover;\r\n    new DataDiffer(oldCovers, coverConfigList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\r\n    return this;\r\n\r\n    function getKey(brushOption, index) {\r\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\r\n    }\r\n\r\n    function oldGetKey(cover, index) {\r\n      return getKey(cover.__brushOption, index);\r\n    }\r\n\r\n    function addOrUpdate(newIndex, oldIndex) {\r\n      var newBrushInternal = coverConfigList[newIndex]; // Consider setOption in event listener of brushSelect,\r\n      // where updating cover when creating should be forbiden.\r\n\r\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\r\n        newCovers[newIndex] = oldCovers[oldIndex];\r\n      } else {\r\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushInternal, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushInternal));\r\n        updateCoverAfterCreation(controller, cover);\r\n      }\r\n    }\r\n\r\n    function remove(oldIndex) {\r\n      if (oldCovers[oldIndex] !== creatingCover) {\r\n        controller.group.remove(oldCovers[oldIndex]);\r\n      }\r\n    }\r\n  };\r\n\r\n  BrushController.prototype.unmount = function () {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (!this._mounted) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.enableBrush(false); // container may 'removeAll' outside.\r\n\r\n    clearCovers(this);\r\n\r\n    this._zr.remove(this.group);\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      this._mounted = false; // should be at last.\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  BrushController.prototype.dispose = function () {\r\n    this.unmount();\r\n    this.off();\r\n  };\r\n\r\n  return BrushController;\r\n}(Eventful);\r\n\r\nfunction createCover(controller, brushOption) {\r\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\r\n  cover.__brushOption = brushOption;\r\n  updateZ(cover, brushOption);\r\n  controller.group.add(cover);\r\n  return cover;\r\n}\r\n\r\nfunction endCreating(controller, creatingCover) {\r\n  var coverRenderer = getCoverRenderer(creatingCover);\r\n\r\n  if (coverRenderer.endCreating) {\r\n    coverRenderer.endCreating(controller, creatingCover);\r\n    updateZ(creatingCover, creatingCover.__brushOption);\r\n  }\r\n\r\n  return creatingCover;\r\n}\r\n\r\nfunction updateCoverShape(controller, cover) {\r\n  var brushOption = cover.__brushOption;\r\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\r\n}\r\n\r\nfunction updateZ(cover, brushOption) {\r\n  var z = brushOption.z;\r\n  z == null && (z = COVER_Z);\r\n  cover.traverse(function (el) {\r\n    el.z = z;\r\n    el.z2 = z; // Consider in given container.\r\n  });\r\n}\r\n\r\nfunction updateCoverAfterCreation(controller, cover) {\r\n  getCoverRenderer(cover).updateCommon(controller, cover);\r\n  updateCoverShape(controller, cover);\r\n}\r\n\r\nfunction getCoverRenderer(cover) {\r\n  return coverRenderers[cover.__brushOption.brushType];\r\n} // return target panel or `true` (means global panel)\r\n\r\n\r\nfunction getPanelByPoint(controller, e, localCursorPoint) {\r\n  var panels = controller._panels;\r\n\r\n  if (!panels) {\r\n    return BRUSH_PANEL_GLOBAL; // Global panel\r\n  }\r\n\r\n  var panel;\r\n  var transform = controller._transform;\r\n  each(panels, function (pn) {\r\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\r\n  });\r\n  return panel;\r\n} // Return a panel or true\r\n\r\n\r\nfunction getPanelByCover(controller, cover) {\r\n  var panels = controller._panels;\r\n\r\n  if (!panels) {\r\n    return BRUSH_PANEL_GLOBAL; // Global panel\r\n  }\r\n\r\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\r\n  // which is then treated as global panel.\r\n\r\n  return panelId != null ? panels[panelId] : BRUSH_PANEL_GLOBAL;\r\n}\r\n\r\nfunction clearCovers(controller) {\r\n  var covers = controller._covers;\r\n  var originalLength = covers.length;\r\n  each(covers, function (cover) {\r\n    controller.group.remove(cover);\r\n  }, controller);\r\n  covers.length = 0;\r\n  return !!originalLength;\r\n}\r\n\r\nfunction trigger(controller, opt) {\r\n  var areas = map(controller._covers, function (cover) {\r\n    var brushOption = cover.__brushOption;\r\n    var range = clone(brushOption.range);\r\n    return {\r\n      brushType: brushOption.brushType,\r\n      panelId: brushOption.panelId,\r\n      range: range\r\n    };\r\n  });\r\n  controller.trigger('brush', {\r\n    areas: areas,\r\n    isEnd: !!opt.isEnd,\r\n    removeOnClick: !!opt.removeOnClick\r\n  });\r\n}\r\n\r\nfunction shouldShowCover(controller) {\r\n  var track = controller._track;\r\n\r\n  if (!track.length) {\r\n    return false;\r\n  }\r\n\r\n  var p2 = track[track.length - 1];\r\n  var p1 = track[0];\r\n  var dx = p2[0] - p1[0];\r\n  var dy = p2[1] - p1[1];\r\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\r\n  return dist > UNSELECT_THRESHOLD;\r\n}\r\n\r\nfunction getTrackEnds(track) {\r\n  var tail = track.length - 1;\r\n  tail < 0 && (tail = 0);\r\n  return [track[0], track[tail]];\r\n}\r\n\r\n;\r\n\r\nfunction createBaseRectCover(rectRangeConverter, controller, brushOption, edgeNameSequences) {\r\n  var cover = new graphic.Group();\r\n  cover.add(new graphic.Rect({\r\n    name: 'main',\r\n    style: makeStyle(brushOption),\r\n    silent: true,\r\n    draggable: true,\r\n    cursor: 'move',\r\n    drift: curry(driftRect, rectRangeConverter, controller, cover, ['n', 's', 'w', 'e']),\r\n    ondragend: curry(trigger, controller, {\r\n      isEnd: true\r\n    })\r\n  }));\r\n  each(edgeNameSequences, function (nameSequence) {\r\n    cover.add(new graphic.Rect({\r\n      name: nameSequence.join(''),\r\n      style: {\r\n        opacity: 0\r\n      },\r\n      draggable: true,\r\n      silent: true,\r\n      invisible: true,\r\n      drift: curry(driftRect, rectRangeConverter, controller, cover, nameSequence),\r\n      ondragend: curry(trigger, controller, {\r\n        isEnd: true\r\n      })\r\n    }));\r\n  });\r\n  return cover;\r\n}\r\n\r\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\r\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\r\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\r\n  var x = localRange[0][0];\r\n  var y = localRange[1][0];\r\n  var xa = x - lineWidth / 2;\r\n  var ya = y - lineWidth / 2;\r\n  var x2 = localRange[0][1];\r\n  var y2 = localRange[1][1];\r\n  var x2a = x2 - handleSize + lineWidth / 2;\r\n  var y2a = y2 - handleSize + lineWidth / 2;\r\n  var width = x2 - x;\r\n  var height = y2 - y;\r\n  var widtha = width + lineWidth;\r\n  var heighta = height + lineWidth;\r\n  updateRectShape(controller, cover, 'main', x, y, width, height);\r\n\r\n  if (brushOption.transformable) {\r\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\r\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\r\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\r\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\r\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\r\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\r\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\r\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\r\n  }\r\n}\r\n\r\nfunction updateCommon(controller, cover) {\r\n  var brushOption = cover.__brushOption;\r\n  var transformable = brushOption.transformable;\r\n  var mainEl = cover.childAt(0);\r\n  mainEl.useStyle(makeStyle(brushOption));\r\n  mainEl.attr({\r\n    silent: !transformable,\r\n    cursor: transformable ? 'move' : 'default'\r\n  });\r\n  each([['w'], ['e'], ['n'], ['s'], ['s', 'e'], ['s', 'w'], ['n', 'e'], ['n', 'w']], function (nameSequence) {\r\n    var el = cover.childOfName(nameSequence.join(''));\r\n    var globalDir = nameSequence.length === 1 ? getGlobalDirection1(controller, nameSequence[0]) : getGlobalDirection2(controller, nameSequence);\r\n    el && el.attr({\r\n      silent: !transformable,\r\n      invisible: !transformable,\r\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\r\n    });\r\n  });\r\n}\r\n\r\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\r\n  var el = cover.childOfName(name);\r\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\r\n}\r\n\r\nfunction makeStyle(brushOption) {\r\n  return defaults({\r\n    strokeNoScale: true\r\n  }, brushOption.brushStyle);\r\n}\r\n\r\nfunction formatRectRange(x, y, x2, y2) {\r\n  var min = [mathMin(x, x2), mathMin(y, y2)];\r\n  var max = [mathMax(x, x2), mathMax(y, y2)];\r\n  return [[min[0], max[0]], [min[1], max[1]] // y range\r\n  ];\r\n}\r\n\r\nfunction getTransform(controller) {\r\n  return graphic.getTransform(controller.group);\r\n}\r\n\r\nfunction getGlobalDirection1(controller, localDirName) {\r\n  var map = {\r\n    w: 'left',\r\n    e: 'right',\r\n    n: 'top',\r\n    s: 'bottom'\r\n  };\r\n  var inverseMap = {\r\n    left: 'w',\r\n    right: 'e',\r\n    top: 'n',\r\n    bottom: 's'\r\n  };\r\n  var dir = graphic.transformDirection(map[localDirName], getTransform(controller));\r\n  return inverseMap[dir];\r\n}\r\n\r\nfunction getGlobalDirection2(controller, localDirNameSeq) {\r\n  var globalDir = [getGlobalDirection1(controller, localDirNameSeq[0]), getGlobalDirection1(controller, localDirNameSeq[1])];\r\n  (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\r\n  return globalDir.join('');\r\n}\r\n\r\nfunction driftRect(rectRangeConverter, controller, cover, dirNameSequence, dx, dy) {\r\n  var brushOption = cover.__brushOption;\r\n  var rectRange = rectRangeConverter.toRectRange(brushOption.range);\r\n  var localDelta = toLocalDelta(controller, dx, dy);\r\n  each(dirNameSequence, function (dirName) {\r\n    var ind = DIRECTION_MAP[dirName];\r\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\r\n  });\r\n  brushOption.range = rectRangeConverter.fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\r\n  updateCoverAfterCreation(controller, cover);\r\n  trigger(controller, {\r\n    isEnd: false\r\n  });\r\n}\r\n\r\nfunction driftPolygon(controller, cover, dx, dy) {\r\n  var range = cover.__brushOption.range;\r\n  var localDelta = toLocalDelta(controller, dx, dy);\r\n  each(range, function (point) {\r\n    point[0] += localDelta[0];\r\n    point[1] += localDelta[1];\r\n  });\r\n  updateCoverAfterCreation(controller, cover);\r\n  trigger(controller, {\r\n    isEnd: false\r\n  });\r\n}\r\n\r\nfunction toLocalDelta(controller, dx, dy) {\r\n  var thisGroup = controller.group;\r\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\r\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\r\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\r\n}\r\n\r\nfunction clipByPanel(controller, cover, data) {\r\n  var panel = getPanelByCover(controller, cover);\r\n  return panel && panel !== BRUSH_PANEL_GLOBAL ? panel.clipPath(data, controller._transform) : clone(data);\r\n}\r\n\r\nfunction pointsToRect(points) {\r\n  var xmin = mathMin(points[0][0], points[1][0]);\r\n  var ymin = mathMin(points[0][1], points[1][1]);\r\n  var xmax = mathMax(points[0][0], points[1][0]);\r\n  var ymax = mathMax(points[0][1], points[1][1]);\r\n  return {\r\n    x: xmin,\r\n    y: ymin,\r\n    width: xmax - xmin,\r\n    height: ymax - ymin\r\n  };\r\n}\r\n\r\nfunction resetCursor(controller, e, localCursorPoint) {\r\n  if ( // Check active\r\n  !controller._brushType // resetCursor should be always called when mouse is in zr area,\r\n  // but not called when mouse is out of zr area to avoid bad influence\r\n  // if `mousemove`, `mouseup` are triggered from `document` event.\r\n  || isOutsideZrArea(controller, e.offsetX, e.offsetY)) {\r\n    return;\r\n  }\r\n\r\n  var zr = controller._zr;\r\n  var covers = controller._covers;\r\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\r\n\r\n  if (!controller._dragging) {\r\n    for (var i = 0; i < covers.length; i++) {\r\n      var brushOption = covers[i].__brushOption;\r\n\r\n      if (currPanel && (currPanel === BRUSH_PANEL_GLOBAL || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\r\n        // Use cursor style set on cover.\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  currPanel && zr.setCursorStyle('crosshair');\r\n}\r\n\r\nfunction preventDefault(e) {\r\n  var rawE = e.event;\r\n  rawE.preventDefault && rawE.preventDefault();\r\n}\r\n\r\nfunction mainShapeContain(cover, x, y) {\r\n  return cover.childOfName('main').contain(x, y);\r\n}\r\n\r\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\r\n  var creatingCover = controller._creatingCover;\r\n  var panel = controller._creatingPanel;\r\n  var thisBrushOption = controller._brushOption;\r\n  var eventParams;\r\n\r\n  controller._track.push(localCursorPoint.slice());\r\n\r\n  if (shouldShowCover(controller) || creatingCover) {\r\n    if (panel && !creatingCover) {\r\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\r\n      var brushOption = clone(thisBrushOption);\r\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\r\n      brushOption.panelId = panel === BRUSH_PANEL_GLOBAL ? null : panel.panelId;\r\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\r\n\r\n      controller._covers.push(creatingCover);\r\n    }\r\n\r\n    if (creatingCover) {\r\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\r\n      var coverBrushOption = creatingCover.__brushOption;\r\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\r\n\r\n      if (isEnd) {\r\n        endCreating(controller, creatingCover);\r\n        coverRenderer.updateCommon(controller, creatingCover);\r\n      }\r\n\r\n      updateCoverShape(controller, creatingCover);\r\n      eventParams = {\r\n        isEnd: isEnd\r\n      };\r\n    }\r\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\r\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\r\n    // But a single click do not clear covers, because user may have casual\r\n    // clicks (for example, click on other component and do not expect covers\r\n    // disappear).\r\n    // Only some cover removed, trigger action, but not every click trigger action.\r\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\r\n      eventParams = {\r\n        isEnd: isEnd,\r\n        removeOnClick: true\r\n      };\r\n    }\r\n  }\r\n\r\n  return eventParams;\r\n}\r\n\r\nfunction determineBrushType(brushType, panel) {\r\n  if (brushType === 'auto') {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      assert(panel && panel.defaultBrushType, 'MUST have defaultBrushType when brushType is \"atuo\"');\r\n    }\r\n\r\n    return panel.defaultBrushType;\r\n  }\r\n\r\n  return brushType;\r\n}\r\n\r\nvar pointerHandlers = {\r\n  mousedown: function (e) {\r\n    if (this._dragging) {\r\n      // In case some browser do not support globalOut,\r\n      // and release mouse out side the browser.\r\n      handleDragEnd(this, e);\r\n    } else if (!e.target || !e.target.draggable) {\r\n      preventDefault(e);\r\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\r\n      this._creatingCover = null;\r\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\r\n\r\n      if (panel) {\r\n        this._dragging = true;\r\n        this._track = [localCursorPoint.slice()];\r\n      }\r\n    }\r\n  },\r\n  mousemove: function (e) {\r\n    var x = e.offsetX;\r\n    var y = e.offsetY;\r\n    var localCursorPoint = this.group.transformCoordToLocal(x, y);\r\n    resetCursor(this, e, localCursorPoint);\r\n\r\n    if (this._dragging) {\r\n      preventDefault(e);\r\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\r\n      eventParams && trigger(this, eventParams);\r\n    }\r\n  },\r\n  mouseup: function (e) {\r\n    handleDragEnd(this, e);\r\n  }\r\n};\r\n\r\nfunction handleDragEnd(controller, e) {\r\n  if (controller._dragging) {\r\n    preventDefault(e);\r\n    var x = e.offsetX;\r\n    var y = e.offsetY;\r\n    var localCursorPoint = controller.group.transformCoordToLocal(x, y);\r\n    var eventParams = updateCoverByMouse(controller, e, localCursorPoint, true);\r\n    controller._dragging = false;\r\n    controller._track = [];\r\n    controller._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\r\n\r\n    eventParams && trigger(controller, eventParams);\r\n  }\r\n}\r\n\r\nfunction isOutsideZrArea(controller, x, y) {\r\n  var zr = controller._zr;\r\n  return x < 0 || x > zr.getWidth() || y < 0 || y > zr.getHeight();\r\n}\r\n/**\r\n * key: brushType\r\n */\r\n\r\n\r\nvar coverRenderers = {\r\n  lineX: getLineRenderer(0),\r\n  lineY: getLineRenderer(1),\r\n  rect: {\r\n    createCover: function (controller, brushOption) {\r\n      function returnInput(range) {\r\n        return range;\r\n      }\r\n\r\n      return createBaseRectCover({\r\n        toRectRange: returnInput,\r\n        fromRectRange: returnInput\r\n      }, controller, brushOption, [['w'], ['e'], ['n'], ['s'], ['s', 'e'], ['s', 'w'], ['n', 'e'], ['n', 'w']]);\r\n    },\r\n    getCreatingRange: function (localTrack) {\r\n      var ends = getTrackEnds(localTrack);\r\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\r\n    },\r\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\r\n      updateBaseRect(controller, cover, localRange, brushOption);\r\n    },\r\n    updateCommon: updateCommon,\r\n    contain: mainShapeContain\r\n  },\r\n  polygon: {\r\n    createCover: function (controller, brushOption) {\r\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\r\n      // border of the shape when drawing, which is a better experience for user.\r\n\r\n      cover.add(new graphic.Polyline({\r\n        name: 'main',\r\n        style: makeStyle(brushOption),\r\n        silent: true\r\n      }));\r\n      return cover;\r\n    },\r\n    getCreatingRange: function (localTrack) {\r\n      return localTrack;\r\n    },\r\n    endCreating: function (controller, cover) {\r\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\r\n\r\n      cover.add(new graphic.Polygon({\r\n        name: 'main',\r\n        draggable: true,\r\n        drift: curry(driftPolygon, controller, cover),\r\n        ondragend: curry(trigger, controller, {\r\n          isEnd: true\r\n        })\r\n      }));\r\n    },\r\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\r\n      cover.childAt(0).setShape({\r\n        points: clipByPanel(controller, cover, localRange)\r\n      });\r\n    },\r\n    updateCommon: updateCommon,\r\n    contain: mainShapeContain\r\n  }\r\n};\r\n\r\nfunction getLineRenderer(xyIndex) {\r\n  return {\r\n    createCover: function (controller, brushOption) {\r\n      return createBaseRectCover({\r\n        toRectRange: function (range) {\r\n          var rectRange = [range, [0, 100]];\r\n          xyIndex && rectRange.reverse();\r\n          return rectRange;\r\n        },\r\n        fromRectRange: function (rectRange) {\r\n          return rectRange[xyIndex];\r\n        }\r\n      }, controller, brushOption, [[['w'], ['e']], [['n'], ['s']]][xyIndex]);\r\n    },\r\n    getCreatingRange: function (localTrack) {\r\n      var ends = getTrackEnds(localTrack);\r\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\r\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\r\n      return [min, max];\r\n    },\r\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\r\n      var otherExtent; // If brushWidth not specified, fit the panel.\r\n\r\n      var panel = getPanelByCover(controller, cover);\r\n\r\n      if (panel !== BRUSH_PANEL_GLOBAL && panel.getLinearBrushOtherExtent) {\r\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex);\r\n      } else {\r\n        var zr = controller._zr;\r\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\r\n      }\r\n\r\n      var rectRange = [localRange, otherExtent];\r\n      xyIndex && rectRange.reverse();\r\n      updateBaseRect(controller, cover, rectRange, brushOption);\r\n    },\r\n    updateCommon: updateCommon,\r\n    contain: mainShapeContain\r\n  };\r\n}\r\n\r\nexport default BrushController;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport BoundingRect from 'zrender/lib/core/BoundingRect';\r\nimport { onIrrelevantElement } from './cursorHelper';\r\nimport * as graphicUtil from '../../util/graphic';\r\nexport function makeRectPanelClipPath(rect) {\r\n  rect = normalizeRect(rect);\r\n  return function (localPoints) {\r\n    return graphicUtil.clipPointsByRect(localPoints, rect);\r\n  };\r\n}\r\nexport function makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\r\n  rect = normalizeRect(rect);\r\n  return function (xyIndex) {\r\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\r\n    var brushWidth = idx ? rect.width : rect.height;\r\n    var base = idx ? rect.x : rect.y;\r\n    return [base, base + (brushWidth || 0)];\r\n  };\r\n}\r\nexport function makeRectIsTargetByCursor(rect, api, targetModel) {\r\n  var boundingRect = normalizeRect(rect);\r\n  return function (e, localCursorPoint) {\r\n    return boundingRect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\r\n  };\r\n} // Consider width/height is negative.\r\n\r\nfunction normalizeRect(rect) {\r\n  return BoundingRect.create(rect);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport AxisBuilder from './AxisBuilder';\r\nimport BrushController from '../helper/BrushController';\r\nimport * as brushHelper from '../helper/brushHelper';\r\nimport * as graphic from '../../util/graphic';\r\nimport ComponentView from '../../view/Component';\r\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\r\n\r\nvar ParallelAxisView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ParallelAxisView, _super);\r\n\r\n  function ParallelAxisView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = ParallelAxisView.type;\r\n    return _this;\r\n  }\r\n\r\n  ParallelAxisView.prototype.init = function (ecModel, api) {\r\n    _super.prototype.init.apply(this, arguments);\r\n\r\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\r\n  };\r\n\r\n  ParallelAxisView.prototype.render = function (axisModel, ecModel, api, payload) {\r\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\r\n      return;\r\n    }\r\n\r\n    this.axisModel = axisModel;\r\n    this.api = api;\r\n    this.group.removeAll();\r\n    var oldAxisGroup = this._axisGroup;\r\n    this._axisGroup = new graphic.Group();\r\n    this.group.add(this._axisGroup);\r\n\r\n    if (!axisModel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\r\n    var coordSys = coordSysModel.coordinateSystem;\r\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\r\n    var areaWidth = areaSelectStyle.width;\r\n    var dim = axisModel.axis.dim;\r\n    var axisLayout = coordSys.getAxisLayout(dim);\r\n    var builderOpt = zrUtil.extend({\r\n      strokeContainThreshold: areaWidth\r\n    }, axisLayout);\r\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\r\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\r\n\r\n    this._axisGroup.add(axisBuilder.getGroup());\r\n\r\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\r\n\r\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\r\n  }; // /**\r\n  //  * @override\r\n  //  */\r\n  // updateVisual(axisModel, ecModel, api, payload) {\r\n  //     this._brushController && this._brushController\r\n  //         .updateCovers(getCoverInfoList(axisModel));\r\n  // }\r\n\r\n\r\n  ParallelAxisView.prototype._refreshBrushController = function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\r\n    // After filtering, axis may change, select area needs to be update.\r\n    var extent = axisModel.axis.getExtent();\r\n    var extentLen = extent[1] - extent[0];\r\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\r\n    // width/height might be negative, which will be\r\n    // normalized in BoundingRect.\r\n\r\n    var rect = graphic.BoundingRect.create({\r\n      x: extent[0],\r\n      y: -areaWidth / 2,\r\n      width: extentLen,\r\n      height: areaWidth\r\n    });\r\n    rect.x -= extra;\r\n    rect.width += 2 * extra;\r\n\r\n    this._brushController.mount({\r\n      enableGlobalPan: true,\r\n      rotation: builderOpt.rotation,\r\n      x: builderOpt.position[0],\r\n      y: builderOpt.position[1]\r\n    }).setPanels([{\r\n      panelId: 'pl',\r\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\r\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\r\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\r\n    }]).enableBrush({\r\n      brushType: 'lineX',\r\n      brushStyle: areaSelectStyle,\r\n      removeOnClick: true\r\n    }).updateCovers(getCoverInfoList(axisModel));\r\n  };\r\n\r\n  ParallelAxisView.prototype._onBrush = function (eventParam) {\r\n    var coverInfoList = eventParam.areas; // Do not cache these object, because the mey be changed.\r\n\r\n    var axisModel = this.axisModel;\r\n    var axis = axisModel.axis;\r\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\r\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\r\n    }); // If realtime is true, action is not dispatched on drag end, because\r\n    // the drag end emits the same params with the last drag move event,\r\n    // and may have some delay when using touch pad.\r\n\r\n    if (!axisModel.option.realtime === eventParam.isEnd || eventParam.removeOnClick) {\r\n      // jshint ignore:line\r\n      this.api.dispatchAction({\r\n        type: 'axisAreaSelect',\r\n        parallelAxisId: axisModel.id,\r\n        intervals: intervals\r\n      });\r\n    }\r\n  };\r\n\r\n  ParallelAxisView.prototype.dispose = function () {\r\n    this._brushController.dispose();\r\n  };\r\n\r\n  ParallelAxisView.type = 'parallelAxis';\r\n  return ParallelAxisView;\r\n}(ComponentView);\r\n\r\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\r\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\r\n    mainType: 'parallelAxis',\r\n    query: payload\r\n  })[0] === axisModel;\r\n}\r\n\r\nfunction getCoverInfoList(axisModel) {\r\n  var axis = axisModel.axis;\r\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\r\n    return {\r\n      brushType: 'lineX',\r\n      panelId: 'pl',\r\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\r\n    };\r\n  });\r\n}\r\n\r\nfunction getCoordSysModel(axisModel, ecModel) {\r\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\r\n}\r\n\r\nexport default ParallelAxisView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nvar actionInfo = {\r\n  type: 'axisAreaSelect',\r\n  event: 'axisAreaSelected' // update: 'updateVisual'\r\n\r\n};\r\nexport function installParallelActions(registers) {\r\n  registers.registerAction(actionInfo, function (payload, ecModel) {\r\n    ecModel.eachComponent({\r\n      mainType: 'parallelAxis',\r\n      query: payload\r\n    }, function (parallelAxisModel) {\r\n      parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\r\n    });\r\n  });\r\n  /**\r\n   * @payload\r\n   */\r\n\r\n  registers.registerAction('parallelAxisExpand', function (payload, ecModel) {\r\n    ecModel.eachComponent({\r\n      mainType: 'parallel',\r\n      query: payload\r\n    }, function (parallelModel) {\r\n      parallelModel.setAxisExpand(payload);\r\n    });\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport parallelPreprocessor from '../../coord/parallel/parallelPreprocessor';\r\nimport ParallelView from './ParallelView';\r\nimport ParallelModel from '../../coord/parallel/ParallelModel';\r\nimport parallelCoordSysCreator from '../../coord/parallel/parallelCreator';\r\nimport axisModelCreator from '../../coord/axisModelCreator';\r\nimport ParallelAxisModel from '../../coord/parallel/AxisModel';\r\nimport ParallelAxisView from '../axis/ParallelAxisView';\r\nimport { installParallelActions } from '../axis/parallelAxisAction';\r\nvar defaultAxisOption = {\r\n  type: 'value',\r\n  areaSelectStyle: {\r\n    width: 20,\r\n    borderWidth: 1,\r\n    borderColor: 'rgba(160,197,232)',\r\n    color: 'rgba(160,197,232)',\r\n    opacity: 0.3\r\n  },\r\n  realtime: true,\r\n  z: 10\r\n};\r\nexport function install(registers) {\r\n  registers.registerComponentView(ParallelView);\r\n  registers.registerComponentModel(ParallelModel);\r\n  registers.registerCoordinateSystem('parallel', parallelCoordSysCreator);\r\n  registers.registerPreprocessor(parallelPreprocessor);\r\n  registers.registerComponentModel(ParallelAxisModel);\r\n  registers.registerComponentView(ParallelAxisView);\r\n  axisModelCreator(registers, 'parallel', ParallelAxisModel, defaultAxisOption);\r\n  installParallelActions(registers);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { use } from '../../extension';\r\nimport ParallelView from './ParallelView';\r\nimport ParallelSeriesModel from './ParallelSeries';\r\nimport parallelVisual from './parallelVisual';\r\nimport { install as installParallelComponent } from '../../component/parallel/install';\r\nexport function install(registers) {\r\n  use(installParallelComponent);\r\n  registers.registerChartView(ParallelView);\r\n  registers.registerSeriesModel(ParallelSeriesModel);\r\n  registers.registerVisual(registers.PRIORITY.VISUAL.BRUSH, parallelVisual);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as graphic from '../../util/graphic';\r\nimport { enterEmphasis, leaveEmphasis, enableHoverEmphasis, setStatesStylesFromModel } from '../../util/states';\r\nimport ChartView from '../../view/Chart';\r\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle';\r\nimport { getECData } from '../../util/innerStore';\r\n\r\nvar SankeyPathShape =\r\n/** @class */\r\nfunction () {\r\n  function SankeyPathShape() {\r\n    this.x1 = 0;\r\n    this.y1 = 0;\r\n    this.x2 = 0;\r\n    this.y2 = 0;\r\n    this.cpx1 = 0;\r\n    this.cpy1 = 0;\r\n    this.cpx2 = 0;\r\n    this.cpy2 = 0;\r\n    this.extent = 0;\r\n  }\r\n\r\n  return SankeyPathShape;\r\n}();\r\n\r\nvar SankeyPath =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(SankeyPath, _super);\r\n\r\n  function SankeyPath(opts) {\r\n    return _super.call(this, opts) || this;\r\n  }\r\n\r\n  SankeyPath.prototype.getDefaultShape = function () {\r\n    return new SankeyPathShape();\r\n  };\r\n\r\n  SankeyPath.prototype.buildPath = function (ctx, shape) {\r\n    var extent = shape.extent;\r\n    ctx.moveTo(shape.x1, shape.y1);\r\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1, shape.cpx2, shape.cpy2, shape.x2, shape.y2);\r\n\r\n    if (shape.orient === 'vertical') {\r\n      ctx.lineTo(shape.x2 + extent, shape.y2);\r\n      ctx.bezierCurveTo(shape.cpx2 + extent, shape.cpy2, shape.cpx1 + extent, shape.cpy1, shape.x1 + extent, shape.y1);\r\n    } else {\r\n      ctx.lineTo(shape.x2, shape.y2 + extent);\r\n      ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + extent, shape.cpx1, shape.cpy1 + extent, shape.x1, shape.y1 + extent);\r\n    }\r\n\r\n    ctx.closePath();\r\n  };\r\n\r\n  SankeyPath.prototype.highlight = function () {\r\n    enterEmphasis(this);\r\n  };\r\n\r\n  SankeyPath.prototype.downplay = function () {\r\n    leaveEmphasis(this);\r\n  };\r\n\r\n  return SankeyPath;\r\n}(graphic.Path);\r\n\r\nvar SankeyView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(SankeyView, _super);\r\n\r\n  function SankeyView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = SankeyView.type;\r\n    _this._focusAdjacencyDisabled = false;\r\n    return _this;\r\n  }\r\n\r\n  SankeyView.prototype.render = function (seriesModel, ecModel, api) {\r\n    var sankeyView = this;\r\n    var graph = seriesModel.getGraph();\r\n    var group = this.group;\r\n    var layoutInfo = seriesModel.layoutInfo; // view width\r\n\r\n    var width = layoutInfo.width; // view height\r\n\r\n    var height = layoutInfo.height;\r\n    var nodeData = seriesModel.getData();\r\n    var edgeData = seriesModel.getData('edge');\r\n    var orient = seriesModel.get('orient');\r\n    this._model = seriesModel;\r\n    group.removeAll();\r\n    group.x = layoutInfo.x;\r\n    group.y = layoutInfo.y; // generate a bezire Curve for each edge\r\n\r\n    graph.eachEdge(function (edge) {\r\n      var curve = new SankeyPath();\r\n      var ecData = getECData(curve);\r\n      ecData.dataIndex = edge.dataIndex;\r\n      ecData.seriesIndex = seriesModel.seriesIndex;\r\n      ecData.dataType = 'edge';\r\n      var edgeModel = edge.getModel();\r\n      var lineStyleModel = edgeModel.getModel('lineStyle');\r\n      var curvature = lineStyleModel.get('curveness');\r\n      var n1Layout = edge.node1.getLayout();\r\n      var node1Model = edge.node1.getModel();\r\n      var dragX1 = node1Model.get('localX');\r\n      var dragY1 = node1Model.get('localY');\r\n      var n2Layout = edge.node2.getLayout();\r\n      var node2Model = edge.node2.getModel();\r\n      var dragX2 = node2Model.get('localX');\r\n      var dragY2 = node2Model.get('localY');\r\n      var edgeLayout = edge.getLayout();\r\n      var x1;\r\n      var y1;\r\n      var x2;\r\n      var y2;\r\n      var cpx1;\r\n      var cpy1;\r\n      var cpx2;\r\n      var cpy2;\r\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\r\n      curve.shape.orient = orient;\r\n\r\n      if (orient === 'vertical') {\r\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + edgeLayout.sy;\r\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + n1Layout.dy;\r\n        x2 = (dragX2 != null ? dragX2 * width : n2Layout.x) + edgeLayout.ty;\r\n        y2 = dragY2 != null ? dragY2 * height : n2Layout.y;\r\n        cpx1 = x1;\r\n        cpy1 = y1 * (1 - curvature) + y2 * curvature;\r\n        cpx2 = x2;\r\n        cpy2 = y1 * curvature + y2 * (1 - curvature);\r\n      } else {\r\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + n1Layout.dx;\r\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + edgeLayout.sy;\r\n        x2 = dragX2 != null ? dragX2 * width : n2Layout.x;\r\n        y2 = (dragY2 != null ? dragY2 * height : n2Layout.y) + edgeLayout.ty;\r\n        cpx1 = x1 * (1 - curvature) + x2 * curvature;\r\n        cpy1 = y1;\r\n        cpx2 = x1 * curvature + x2 * (1 - curvature);\r\n        cpy2 = y2;\r\n      }\r\n\r\n      curve.setShape({\r\n        x1: x1,\r\n        y1: y1,\r\n        x2: x2,\r\n        y2: y2,\r\n        cpx1: cpx1,\r\n        cpy1: cpy1,\r\n        cpx2: cpx2,\r\n        cpy2: cpy2\r\n      });\r\n      curve.useStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\r\n\r\n      switch (curve.style.fill) {\r\n        case 'source':\r\n          curve.style.fill = edge.node1.getVisual('color');\r\n          curve.style.decal = edge.node1.getVisual('style').decal;\r\n          break;\r\n\r\n        case 'target':\r\n          curve.style.fill = edge.node2.getVisual('color');\r\n          curve.style.decal = edge.node2.getVisual('style').decal;\r\n          break;\r\n\r\n        case 'gradient':\r\n          var sourceColor = edge.node1.getVisual('color');\r\n          var targetColor = edge.node2.getVisual('color');\r\n\r\n          if (typeof sourceColor === 'string' && typeof targetColor === 'string') {\r\n            curve.style.fill = new graphic.LinearGradient(0, 0, +(orient === 'horizontal'), +(orient === 'vertical'), [{\r\n              color: sourceColor,\r\n              offset: 0\r\n            }, {\r\n              color: targetColor,\r\n              offset: 1\r\n            }]);\r\n          }\r\n\r\n      }\r\n\r\n      var emphasisModel = edgeModel.getModel('emphasis');\r\n      setStatesStylesFromModel(curve, edgeModel, 'lineStyle', function (model) {\r\n        return model.getItemStyle();\r\n      });\r\n      group.add(curve);\r\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\r\n      var focus = emphasisModel.get('focus');\r\n      enableHoverEmphasis(curve, focus === 'adjacency' ? edge.getAdjacentDataIndices() : focus, emphasisModel.get('blurScope'));\r\n      getECData(curve).dataType = 'edge';\r\n    }); // Generate a rect for each node\r\n\r\n    graph.eachNode(function (node) {\r\n      var layout = node.getLayout();\r\n      var itemModel = node.getModel();\r\n      var dragX = itemModel.get('localX');\r\n      var dragY = itemModel.get('localY');\r\n      var emphasisModel = itemModel.getModel('emphasis');\r\n      var rect = new graphic.Rect({\r\n        shape: {\r\n          x: dragX != null ? dragX * width : layout.x,\r\n          y: dragY != null ? dragY * height : layout.y,\r\n          width: layout.dx,\r\n          height: layout.dy\r\n        },\r\n        style: itemModel.getModel('itemStyle').getItemStyle(),\r\n        z2: 10\r\n      });\r\n      setLabelStyle(rect, getLabelStatesModels(itemModel), {\r\n        labelFetcher: seriesModel,\r\n        labelDataIndex: node.dataIndex,\r\n        defaultText: node.id\r\n      });\r\n      rect.disableLabelAnimation = true;\r\n      rect.setStyle('fill', node.getVisual('color'));\r\n      rect.setStyle('decal', node.getVisual('style').decal);\r\n      setStatesStylesFromModel(rect, itemModel);\r\n      group.add(rect);\r\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\r\n      getECData(rect).dataType = 'node';\r\n      var focus = emphasisModel.get('focus');\r\n      enableHoverEmphasis(rect, focus === 'adjacency' ? node.getAdjacentDataIndices() : focus, emphasisModel.get('blurScope'));\r\n    });\r\n    nodeData.eachItemGraphicEl(function (el, dataIndex) {\r\n      var itemModel = nodeData.getItemModel(dataIndex);\r\n\r\n      if (itemModel.get('draggable')) {\r\n        el.drift = function (dx, dy) {\r\n          sankeyView._focusAdjacencyDisabled = true;\r\n          this.shape.x += dx;\r\n          this.shape.y += dy;\r\n          this.dirty();\r\n          api.dispatchAction({\r\n            type: 'dragNode',\r\n            seriesId: seriesModel.id,\r\n            dataIndex: nodeData.getRawIndex(dataIndex),\r\n            localX: this.shape.x / width,\r\n            localY: this.shape.y / height\r\n          });\r\n        };\r\n\r\n        el.ondragend = function () {\r\n          sankeyView._focusAdjacencyDisabled = false;\r\n        };\r\n\r\n        el.draggable = true;\r\n        el.cursor = 'move';\r\n      }\r\n    });\r\n\r\n    if (!this._data && seriesModel.isAnimationEnabled()) {\r\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\r\n        group.removeClipPath();\r\n      }));\r\n    }\r\n\r\n    this._data = seriesModel.getData();\r\n  };\r\n\r\n  SankeyView.prototype.dispose = function () {};\r\n\r\n  SankeyView.type = 'sankey';\r\n  return SankeyView;\r\n}(ChartView); // Add animation to the view\r\n\r\n\r\nfunction createGridClipShape(rect, seriesModel, cb) {\r\n  var rectEl = new graphic.Rect({\r\n    shape: {\r\n      x: rect.x - 10,\r\n      y: rect.y - 10,\r\n      width: 0,\r\n      height: rect.height + 20\r\n    }\r\n  });\r\n  graphic.initProps(rectEl, {\r\n    shape: {\r\n      width: rect.width + 20\r\n    }\r\n  }, seriesModel, cb);\r\n  return rectEl;\r\n}\r\n\r\nexport default SankeyView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport SeriesModel from '../../model/Series';\r\nimport createGraphFromNodeEdge from '../helper/createGraphFromNodeEdge';\r\nimport Model from '../../model/Model';\r\nimport { createTooltipMarkup } from '../../component/tooltip/tooltipMarkup';\r\n\r\nvar SankeySeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(SankeySeriesModel, _super);\r\n\r\n  function SankeySeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = SankeySeriesModel.type;\r\n    return _this;\r\n  }\r\n  /**\r\n   * Init a graph data structure from data in option series\r\n   */\r\n\r\n\r\n  SankeySeriesModel.prototype.getInitialData = function (option, ecModel) {\r\n    var links = option.edges || option.links;\r\n    var nodes = option.data || option.nodes;\r\n    var levels = option.levels;\r\n    this.levelModels = [];\r\n    var levelModels = this.levelModels;\r\n\r\n    for (var i = 0; i < levels.length; i++) {\r\n      if (levels[i].depth != null && levels[i].depth >= 0) {\r\n        levelModels[levels[i].depth] = new Model(levels[i], this, ecModel);\r\n      } else {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          throw new Error('levels[i].depth is mandatory and should be natural number');\r\n        }\r\n      }\r\n    }\r\n\r\n    if (nodes && links) {\r\n      var graph = createGraphFromNodeEdge(nodes, links, this, true, beforeLink);\r\n      return graph.data;\r\n    }\r\n\r\n    function beforeLink(nodeData, edgeData) {\r\n      nodeData.wrapMethod('getItemModel', function (model, idx) {\r\n        var seriesModel = model.parentModel;\r\n        var layout = seriesModel.getData().getItemLayout(idx);\r\n\r\n        if (layout) {\r\n          var nodeDepth = layout.depth;\r\n          var levelModel = seriesModel.levelModels[nodeDepth];\r\n\r\n          if (levelModel) {\r\n            model.parentModel = levelModel;\r\n          }\r\n        }\r\n\r\n        return model;\r\n      });\r\n      edgeData.wrapMethod('getItemModel', function (model, idx) {\r\n        var seriesModel = model.parentModel;\r\n        var edge = seriesModel.getGraph().getEdgeByIndex(idx);\r\n        var layout = edge.node1.getLayout();\r\n\r\n        if (layout) {\r\n          var depth = layout.depth;\r\n          var levelModel = seriesModel.levelModels[depth];\r\n\r\n          if (levelModel) {\r\n            model.parentModel = levelModel;\r\n          }\r\n        }\r\n\r\n        return model;\r\n      });\r\n    }\r\n  };\r\n\r\n  SankeySeriesModel.prototype.setNodePosition = function (dataIndex, localPosition) {\r\n    var nodes = this.option.data || this.option.nodes;\r\n    var dataItem = nodes[dataIndex];\r\n    dataItem.localX = localPosition[0];\r\n    dataItem.localY = localPosition[1];\r\n  };\r\n  /**\r\n   * Return the graphic data structure\r\n   *\r\n   * @return graphic data structure\r\n   */\r\n\r\n\r\n  SankeySeriesModel.prototype.getGraph = function () {\r\n    return this.getData().graph;\r\n  };\r\n  /**\r\n   * Get edge data of graphic data structure\r\n   *\r\n   * @return data structure of list\r\n   */\r\n\r\n\r\n  SankeySeriesModel.prototype.getEdgeData = function () {\r\n    return this.getGraph().edgeData;\r\n  };\r\n\r\n  SankeySeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\r\n    function noValue(val) {\r\n      return isNaN(val) || val == null;\r\n    } // dataType === 'node' or empty do not show tooltip by default\r\n\r\n\r\n    if (dataType === 'edge') {\r\n      var params = this.getDataParams(dataIndex, dataType);\r\n      var rawDataOpt = params.data;\r\n      var edgeValue = params.value;\r\n      var edgeName = rawDataOpt.source + ' -- ' + rawDataOpt.target;\r\n      return createTooltipMarkup('nameValue', {\r\n        name: edgeName,\r\n        value: edgeValue,\r\n        noValue: noValue(edgeValue)\r\n      });\r\n    } // dataType === 'node'\r\n    else {\r\n        var node = this.getGraph().getNodeByIndex(dataIndex);\r\n        var value = node.getLayout().value;\r\n        var name_1 = this.getDataParams(dataIndex, dataType).data.name;\r\n        return createTooltipMarkup('nameValue', {\r\n          name: name_1 != null ? name_1 + '' : null,\r\n          value: value,\r\n          noValue: noValue(value)\r\n        });\r\n      }\r\n  };\r\n\r\n  SankeySeriesModel.prototype.optionUpdated = function () {}; // Override Series.getDataParams()\r\n\r\n\r\n  SankeySeriesModel.prototype.getDataParams = function (dataIndex, dataType) {\r\n    var params = _super.prototype.getDataParams.call(this, dataIndex, dataType);\r\n\r\n    if (params.value == null && dataType === 'node') {\r\n      var node = this.getGraph().getNodeByIndex(dataIndex);\r\n      var nodeValue = node.getLayout().value;\r\n      params.value = nodeValue;\r\n    }\r\n\r\n    return params;\r\n  };\r\n\r\n  SankeySeriesModel.type = 'series.sankey';\r\n  SankeySeriesModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 2,\r\n    coordinateSystem: 'view',\r\n    left: '5%',\r\n    top: '5%',\r\n    right: '20%',\r\n    bottom: '5%',\r\n    orient: 'horizontal',\r\n    nodeWidth: 20,\r\n    nodeGap: 8,\r\n    draggable: true,\r\n    layoutIterations: 32,\r\n    label: {\r\n      show: true,\r\n      position: 'right',\r\n      fontSize: 12\r\n    },\r\n    levels: [],\r\n    nodeAlign: 'justify',\r\n    lineStyle: {\r\n      color: '#314656',\r\n      opacity: 0.2,\r\n      curveness: 0.5\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true\r\n      },\r\n      lineStyle: {\r\n        opacity: 0.5\r\n      }\r\n    },\r\n    select: {\r\n      itemStyle: {\r\n        borderColor: '#212121'\r\n      }\r\n    },\r\n    animationEasing: 'linear',\r\n    animationDuration: 1000\r\n  };\r\n  return SankeySeriesModel;\r\n}(SeriesModel);\r\n\r\nexport default SankeySeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as layout from '../../util/layout';\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { groupData } from '../../util/model';\r\nexport default function sankeyLayout(ecModel, api) {\r\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\r\n    var nodeWidth = seriesModel.get('nodeWidth');\r\n    var nodeGap = seriesModel.get('nodeGap');\r\n    var layoutInfo = getViewRect(seriesModel, api);\r\n    seriesModel.layoutInfo = layoutInfo;\r\n    var width = layoutInfo.width;\r\n    var height = layoutInfo.height;\r\n    var graph = seriesModel.getGraph();\r\n    var nodes = graph.nodes;\r\n    var edges = graph.edges;\r\n    computeNodeValues(nodes);\r\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\r\n      return node.getLayout().value === 0;\r\n    });\r\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\r\n    var orient = seriesModel.get('orient');\r\n    var nodeAlign = seriesModel.get('nodeAlign');\r\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations, orient, nodeAlign);\r\n  });\r\n}\r\n/**\r\n * Get the layout position of the whole view\r\n */\r\n\r\nfunction getViewRect(seriesModel, api) {\r\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\r\n    width: api.getWidth(),\r\n    height: api.getHeight()\r\n  });\r\n}\r\n\r\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations, orient, nodeAlign) {\r\n  computeNodeBreadths(nodes, edges, nodeWidth, width, height, orient, nodeAlign);\r\n  computeNodeDepths(nodes, edges, height, width, nodeGap, iterations, orient);\r\n  computeEdgeDepths(nodes, orient);\r\n}\r\n/**\r\n * Compute the value of each node by summing the associated edge's value\r\n */\r\n\r\n\r\nfunction computeNodeValues(nodes) {\r\n  zrUtil.each(nodes, function (node) {\r\n    var value1 = sum(node.outEdges, getEdgeValue);\r\n    var value2 = sum(node.inEdges, getEdgeValue);\r\n    var nodeRawValue = node.getValue() || 0;\r\n    var value = Math.max(value1, value2, nodeRawValue);\r\n    node.setLayout({\r\n      value: value\r\n    }, true);\r\n  });\r\n}\r\n/**\r\n * Compute the x-position for each node.\r\n *\r\n * Here we use Kahn algorithm to detect cycle when we traverse\r\n * the node to computer the initial x position.\r\n */\r\n\r\n\r\nfunction computeNodeBreadths(nodes, edges, nodeWidth, width, height, orient, nodeAlign) {\r\n  // Used to mark whether the edge is deleted. if it is deleted,\r\n  // the value is 0, otherwise it is 1.\r\n  var remainEdges = []; // Storage each node's indegree.\r\n\r\n  var indegreeArr = []; //Used to storage the node with indegree is equal to 0.\r\n\r\n  var zeroIndegrees = [];\r\n  var nextTargetNode = [];\r\n  var x = 0; // let kx = 0;\r\n\r\n  for (var i = 0; i < edges.length; i++) {\r\n    remainEdges[i] = 1;\r\n  }\r\n\r\n  for (var i = 0; i < nodes.length; i++) {\r\n    indegreeArr[i] = nodes[i].inEdges.length;\r\n\r\n    if (indegreeArr[i] === 0) {\r\n      zeroIndegrees.push(nodes[i]);\r\n    }\r\n  }\r\n\r\n  var maxNodeDepth = -1; // Traversing nodes using topological sorting to calculate the\r\n  // horizontal(if orient === 'horizontal') or vertical(if orient === 'vertical')\r\n  // position of the nodes.\r\n\r\n  while (zeroIndegrees.length) {\r\n    for (var idx = 0; idx < zeroIndegrees.length; idx++) {\r\n      var node = zeroIndegrees[idx];\r\n      var item = node.hostGraph.data.getRawDataItem(node.dataIndex);\r\n      var isItemDepth = item.depth != null && item.depth >= 0;\r\n\r\n      if (isItemDepth && item.depth > maxNodeDepth) {\r\n        maxNodeDepth = item.depth;\r\n      }\r\n\r\n      node.setLayout({\r\n        depth: isItemDepth ? item.depth : x\r\n      }, true);\r\n      orient === 'vertical' ? node.setLayout({\r\n        dy: nodeWidth\r\n      }, true) : node.setLayout({\r\n        dx: nodeWidth\r\n      }, true);\r\n\r\n      for (var edgeIdx = 0; edgeIdx < node.outEdges.length; edgeIdx++) {\r\n        var edge = node.outEdges[edgeIdx];\r\n        var indexEdge = edges.indexOf(edge);\r\n        remainEdges[indexEdge] = 0;\r\n        var targetNode = edge.node2;\r\n        var nodeIndex = nodes.indexOf(targetNode);\r\n\r\n        if (--indegreeArr[nodeIndex] === 0 && nextTargetNode.indexOf(targetNode) < 0) {\r\n          nextTargetNode.push(targetNode);\r\n        }\r\n      }\r\n    }\r\n\r\n    ++x;\r\n    zeroIndegrees = nextTargetNode;\r\n    nextTargetNode = [];\r\n  }\r\n\r\n  for (var i = 0; i < remainEdges.length; i++) {\r\n    if (remainEdges[i] === 1) {\r\n      throw new Error('Sankey is a DAG, the original data has cycle!');\r\n    }\r\n  }\r\n\r\n  var maxDepth = maxNodeDepth > x - 1 ? maxNodeDepth : x - 1;\r\n\r\n  if (nodeAlign && nodeAlign !== 'left') {\r\n    adjustNodeWithNodeAlign(nodes, nodeAlign, orient, maxDepth);\r\n  }\r\n\r\n  var kx = orient === 'vertical' ? (height - nodeWidth) / maxDepth : (width - nodeWidth) / maxDepth;\r\n  scaleNodeBreadths(nodes, kx, orient);\r\n}\r\n\r\nfunction isNodeDepth(node) {\r\n  var item = node.hostGraph.data.getRawDataItem(node.dataIndex);\r\n  return item.depth != null && item.depth >= 0;\r\n}\r\n\r\nfunction adjustNodeWithNodeAlign(nodes, nodeAlign, orient, maxDepth) {\r\n  if (nodeAlign === 'right') {\r\n    var nextSourceNode = [];\r\n    var remainNodes = nodes;\r\n    var nodeHeight = 0;\r\n\r\n    while (remainNodes.length) {\r\n      for (var i = 0; i < remainNodes.length; i++) {\r\n        var node = remainNodes[i];\r\n        node.setLayout({\r\n          skNodeHeight: nodeHeight\r\n        }, true);\r\n\r\n        for (var j = 0; j < node.inEdges.length; j++) {\r\n          var edge = node.inEdges[j];\r\n\r\n          if (nextSourceNode.indexOf(edge.node1) < 0) {\r\n            nextSourceNode.push(edge.node1);\r\n          }\r\n        }\r\n      }\r\n\r\n      remainNodes = nextSourceNode;\r\n      nextSourceNode = [];\r\n      ++nodeHeight;\r\n    }\r\n\r\n    zrUtil.each(nodes, function (node) {\r\n      if (!isNodeDepth(node)) {\r\n        node.setLayout({\r\n          depth: Math.max(0, maxDepth - node.getLayout().skNodeHeight)\r\n        }, true);\r\n      }\r\n    });\r\n  } else if (nodeAlign === 'justify') {\r\n    moveSinksRight(nodes, maxDepth);\r\n  }\r\n}\r\n/**\r\n * All the node without outEgdes are assigned maximum x-position and\r\n *     be aligned in the last column.\r\n *\r\n * @param nodes.  node of sankey view.\r\n * @param maxDepth.  use to assign to node without outEdges as x-position.\r\n */\r\n\r\n\r\nfunction moveSinksRight(nodes, maxDepth) {\r\n  zrUtil.each(nodes, function (node) {\r\n    if (!isNodeDepth(node) && !node.outEdges.length) {\r\n      node.setLayout({\r\n        depth: maxDepth\r\n      }, true);\r\n    }\r\n  });\r\n}\r\n/**\r\n * Scale node x-position to the width\r\n *\r\n * @param nodes  node of sankey view\r\n * @param kx   multiple used to scale nodes\r\n */\r\n\r\n\r\nfunction scaleNodeBreadths(nodes, kx, orient) {\r\n  zrUtil.each(nodes, function (node) {\r\n    var nodeDepth = node.getLayout().depth * kx;\r\n    orient === 'vertical' ? node.setLayout({\r\n      y: nodeDepth\r\n    }, true) : node.setLayout({\r\n      x: nodeDepth\r\n    }, true);\r\n  });\r\n}\r\n/**\r\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\r\n *\r\n * @param nodes  node of sankey view\r\n * @param edges  edge of sankey view\r\n * @param height  the whole height of the area to draw the view\r\n * @param nodeGap  the vertical distance between two nodes\r\n *     in the same column.\r\n * @param iterations  the number of iterations for the algorithm\r\n */\r\n\r\n\r\nfunction computeNodeDepths(nodes, edges, height, width, nodeGap, iterations, orient) {\r\n  var nodesByBreadth = prepareNodesByBreadth(nodes, orient);\r\n  initializeNodeDepth(nodesByBreadth, edges, height, width, nodeGap, orient);\r\n  resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\r\n\r\n  for (var alpha = 1; iterations > 0; iterations--) {\r\n    // 0.99 is a experience parameter, ensure that each iterations of\r\n    // changes as small as possible.\r\n    alpha *= 0.99;\r\n    relaxRightToLeft(nodesByBreadth, alpha, orient);\r\n    resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\r\n    relaxLeftToRight(nodesByBreadth, alpha, orient);\r\n    resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\r\n  }\r\n}\r\n\r\nfunction prepareNodesByBreadth(nodes, orient) {\r\n  var nodesByBreadth = [];\r\n  var keyAttr = orient === 'vertical' ? 'y' : 'x';\r\n  var groupResult = groupData(nodes, function (node) {\r\n    return node.getLayout()[keyAttr];\r\n  });\r\n  groupResult.keys.sort(function (a, b) {\r\n    return a - b;\r\n  });\r\n  zrUtil.each(groupResult.keys, function (key) {\r\n    nodesByBreadth.push(groupResult.buckets.get(key));\r\n  });\r\n  return nodesByBreadth;\r\n}\r\n/**\r\n * Compute the original y-position for each node\r\n */\r\n\r\n\r\nfunction initializeNodeDepth(nodesByBreadth, edges, height, width, nodeGap, orient) {\r\n  var minKy = Infinity;\r\n  zrUtil.each(nodesByBreadth, function (nodes) {\r\n    var n = nodes.length;\r\n    var sum = 0;\r\n    zrUtil.each(nodes, function (node) {\r\n      sum += node.getLayout().value;\r\n    });\r\n    var ky = orient === 'vertical' ? (width - (n - 1) * nodeGap) / sum : (height - (n - 1) * nodeGap) / sum;\r\n\r\n    if (ky < minKy) {\r\n      minKy = ky;\r\n    }\r\n  });\r\n  zrUtil.each(nodesByBreadth, function (nodes) {\r\n    zrUtil.each(nodes, function (node, i) {\r\n      var nodeDy = node.getLayout().value * minKy;\r\n\r\n      if (orient === 'vertical') {\r\n        node.setLayout({\r\n          x: i\r\n        }, true);\r\n        node.setLayout({\r\n          dx: nodeDy\r\n        }, true);\r\n      } else {\r\n        node.setLayout({\r\n          y: i\r\n        }, true);\r\n        node.setLayout({\r\n          dy: nodeDy\r\n        }, true);\r\n      }\r\n    });\r\n  });\r\n  zrUtil.each(edges, function (edge) {\r\n    var edgeDy = +edge.getValue() * minKy;\r\n    edge.setLayout({\r\n      dy: edgeDy\r\n    }, true);\r\n  });\r\n}\r\n/**\r\n * Resolve the collision of initialized depth (y-position)\r\n */\r\n\r\n\r\nfunction resolveCollisions(nodesByBreadth, nodeGap, height, width, orient) {\r\n  var keyAttr = orient === 'vertical' ? 'x' : 'y';\r\n  zrUtil.each(nodesByBreadth, function (nodes) {\r\n    nodes.sort(function (a, b) {\r\n      return a.getLayout()[keyAttr] - b.getLayout()[keyAttr];\r\n    });\r\n    var nodeX;\r\n    var node;\r\n    var dy;\r\n    var y0 = 0;\r\n    var n = nodes.length;\r\n    var nodeDyAttr = orient === 'vertical' ? 'dx' : 'dy';\r\n\r\n    for (var i = 0; i < n; i++) {\r\n      node = nodes[i];\r\n      dy = y0 - node.getLayout()[keyAttr];\r\n\r\n      if (dy > 0) {\r\n        nodeX = node.getLayout()[keyAttr] + dy;\r\n        orient === 'vertical' ? node.setLayout({\r\n          x: nodeX\r\n        }, true) : node.setLayout({\r\n          y: nodeX\r\n        }, true);\r\n      }\r\n\r\n      y0 = node.getLayout()[keyAttr] + node.getLayout()[nodeDyAttr] + nodeGap;\r\n    }\r\n\r\n    var viewWidth = orient === 'vertical' ? width : height; // If the bottommost node goes outside the bounds, push it back up\r\n\r\n    dy = y0 - nodeGap - viewWidth;\r\n\r\n    if (dy > 0) {\r\n      nodeX = node.getLayout()[keyAttr] - dy;\r\n      orient === 'vertical' ? node.setLayout({\r\n        x: nodeX\r\n      }, true) : node.setLayout({\r\n        y: nodeX\r\n      }, true);\r\n      y0 = nodeX;\r\n\r\n      for (var i = n - 2; i >= 0; --i) {\r\n        node = nodes[i];\r\n        dy = node.getLayout()[keyAttr] + node.getLayout()[nodeDyAttr] + nodeGap - y0;\r\n\r\n        if (dy > 0) {\r\n          nodeX = node.getLayout()[keyAttr] - dy;\r\n          orient === 'vertical' ? node.setLayout({\r\n            x: nodeX\r\n          }, true) : node.setLayout({\r\n            y: nodeX\r\n          }, true);\r\n        }\r\n\r\n        y0 = node.getLayout()[keyAttr];\r\n      }\r\n    }\r\n  });\r\n}\r\n/**\r\n * Change the y-position of the nodes, except most the right side nodes\r\n * @param nodesByBreadth\r\n * @param alpha  parameter used to adjust the nodes y-position\r\n */\r\n\r\n\r\nfunction relaxRightToLeft(nodesByBreadth, alpha, orient) {\r\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\r\n    zrUtil.each(nodes, function (node) {\r\n      if (node.outEdges.length) {\r\n        var y = sum(node.outEdges, weightedTarget, orient) / sum(node.outEdges, getEdgeValue);\r\n\r\n        if (isNaN(y)) {\r\n          var len = node.outEdges.length;\r\n          y = len ? sum(node.outEdges, centerTarget, orient) / len : 0;\r\n        }\r\n\r\n        if (orient === 'vertical') {\r\n          var nodeX = node.getLayout().x + (y - center(node, orient)) * alpha;\r\n          node.setLayout({\r\n            x: nodeX\r\n          }, true);\r\n        } else {\r\n          var nodeY = node.getLayout().y + (y - center(node, orient)) * alpha;\r\n          node.setLayout({\r\n            y: nodeY\r\n          }, true);\r\n        }\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction weightedTarget(edge, orient) {\r\n  return center(edge.node2, orient) * edge.getValue();\r\n}\r\n\r\nfunction centerTarget(edge, orient) {\r\n  return center(edge.node2, orient);\r\n}\r\n\r\nfunction weightedSource(edge, orient) {\r\n  return center(edge.node1, orient) * edge.getValue();\r\n}\r\n\r\nfunction centerSource(edge, orient) {\r\n  return center(edge.node1, orient);\r\n}\r\n\r\nfunction center(node, orient) {\r\n  return orient === 'vertical' ? node.getLayout().x + node.getLayout().dx / 2 : node.getLayout().y + node.getLayout().dy / 2;\r\n}\r\n\r\nfunction getEdgeValue(edge) {\r\n  return edge.getValue();\r\n}\r\n\r\nfunction sum(array, cb, orient) {\r\n  var sum = 0;\r\n  var len = array.length;\r\n  var i = -1;\r\n\r\n  while (++i < len) {\r\n    var value = +cb(array[i], orient);\r\n\r\n    if (!isNaN(value)) {\r\n      sum += value;\r\n    }\r\n  }\r\n\r\n  return sum;\r\n}\r\n/**\r\n * Change the y-position of the nodes, except most the left side nodes\r\n */\r\n\r\n\r\nfunction relaxLeftToRight(nodesByBreadth, alpha, orient) {\r\n  zrUtil.each(nodesByBreadth, function (nodes) {\r\n    zrUtil.each(nodes, function (node) {\r\n      if (node.inEdges.length) {\r\n        var y = sum(node.inEdges, weightedSource, orient) / sum(node.inEdges, getEdgeValue);\r\n\r\n        if (isNaN(y)) {\r\n          var len = node.inEdges.length;\r\n          y = len ? sum(node.inEdges, centerSource, orient) / len : 0;\r\n        }\r\n\r\n        if (orient === 'vertical') {\r\n          var nodeX = node.getLayout().x + (y - center(node, orient)) * alpha;\r\n          node.setLayout({\r\n            x: nodeX\r\n          }, true);\r\n        } else {\r\n          var nodeY = node.getLayout().y + (y - center(node, orient)) * alpha;\r\n          node.setLayout({\r\n            y: nodeY\r\n          }, true);\r\n        }\r\n      }\r\n    });\r\n  });\r\n}\r\n/**\r\n * Compute the depth(y-position) of each edge\r\n */\r\n\r\n\r\nfunction computeEdgeDepths(nodes, orient) {\r\n  var keyAttr = orient === 'vertical' ? 'x' : 'y';\r\n  zrUtil.each(nodes, function (node) {\r\n    node.outEdges.sort(function (a, b) {\r\n      return a.node2.getLayout()[keyAttr] - b.node2.getLayout()[keyAttr];\r\n    });\r\n    node.inEdges.sort(function (a, b) {\r\n      return a.node1.getLayout()[keyAttr] - b.node1.getLayout()[keyAttr];\r\n    });\r\n  });\r\n  zrUtil.each(nodes, function (node) {\r\n    var sy = 0;\r\n    var ty = 0;\r\n    zrUtil.each(node.outEdges, function (edge) {\r\n      edge.setLayout({\r\n        sy: sy\r\n      }, true);\r\n      sy += edge.getLayout().dy;\r\n    });\r\n    zrUtil.each(node.inEdges, function (edge) {\r\n      edge.setLayout({\r\n        ty: ty\r\n      }, true);\r\n      ty += edge.getLayout().dy;\r\n    });\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport VisualMapping from '../../visual/VisualMapping';\r\nexport default function sankeyVisual(ecModel) {\r\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\r\n    var graph = seriesModel.getGraph();\r\n    var nodes = graph.nodes;\r\n\r\n    if (nodes.length) {\r\n      var minValue_1 = Infinity;\r\n      var maxValue_1 = -Infinity;\r\n      zrUtil.each(nodes, function (node) {\r\n        var nodeValue = node.getLayout().value;\r\n\r\n        if (nodeValue < minValue_1) {\r\n          minValue_1 = nodeValue;\r\n        }\r\n\r\n        if (nodeValue > maxValue_1) {\r\n          maxValue_1 = nodeValue;\r\n        }\r\n      });\r\n      zrUtil.each(nodes, function (node) {\r\n        var mapping = new VisualMapping({\r\n          type: 'color',\r\n          mappingMethod: 'linear',\r\n          dataExtent: [minValue_1, maxValue_1],\r\n          visual: seriesModel.get('color')\r\n        });\r\n        var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\r\n        var customColor = node.getModel().get(['itemStyle', 'color']);\r\n\r\n        if (customColor != null) {\r\n          node.setVisual('color', customColor);\r\n          node.setVisual('style', {\r\n            fill: customColor\r\n          });\r\n        } else {\r\n          node.setVisual('color', mapValueToColor);\r\n          node.setVisual('style', {\r\n            fill: mapValueToColor\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport SankeyView from './SankeyView';\r\nimport SankeySeriesModel from './SankeySeries';\r\nimport sankeyLayout from './sankeyLayout';\r\nimport sankeyVisual from './sankeyVisual';\r\nexport function install(registers) {\r\n  registers.registerChartView(SankeyView);\r\n  registers.registerSeriesModel(SankeySeriesModel);\r\n  registers.registerLayout(sankeyLayout);\r\n  registers.registerVisual(sankeyVisual);\r\n  registers.registerAction({\r\n    type: 'dragNode',\r\n    event: 'dragnode',\r\n    // here can only use 'update' now, other value is not support in echarts.\r\n    update: 'update'\r\n  }, function (payload, ecModel) {\r\n    ecModel.eachComponent({\r\n      mainType: 'series',\r\n      subType: 'sankey',\r\n      query: payload\r\n    }, function (seriesModel) {\r\n      seriesModel.setNodePosition(payload.dataIndex, [payload.localX, payload.localY]);\r\n    });\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport createSeriesDataSimply from './createSeriesDataSimply';\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { getDimensionTypeByAxis } from '../../data/helper/dimensionHelper';\r\nimport { makeSeriesEncodeForAxisCoordSys } from '../../data/helper/sourceHelper';\r\n\r\nvar WhiskerBoxCommonMixin =\r\n/** @class */\r\nfunction () {\r\n  function WhiskerBoxCommonMixin() {}\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  WhiskerBoxCommonMixin.prototype.getInitialData = function (option, ecModel) {\r\n    // When both types of xAxis and yAxis are 'value', layout is\r\n    // needed to be specified by user. Otherwise, layout can be\r\n    // judged by which axis is category.\r\n    var ordinalMeta;\r\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\r\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\r\n    var xAxisType = xAxisModel.get('type');\r\n    var yAxisType = yAxisModel.get('type');\r\n    var addOrdinal; // FIXME\r\n    // Consider time axis.\r\n\r\n    if (xAxisType === 'category') {\r\n      option.layout = 'horizontal';\r\n      ordinalMeta = xAxisModel.getOrdinalMeta();\r\n      addOrdinal = true;\r\n    } else if (yAxisType === 'category') {\r\n      option.layout = 'vertical';\r\n      ordinalMeta = yAxisModel.getOrdinalMeta();\r\n      addOrdinal = true;\r\n    } else {\r\n      option.layout = option.layout || 'horizontal';\r\n    }\r\n\r\n    var coordDims = ['x', 'y'];\r\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\r\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\r\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\r\n    var axisModels = [xAxisModel, yAxisModel];\r\n    var baseAxisType = axisModels[baseAxisDimIndex].get('type');\r\n    var otherAxisType = axisModels[1 - baseAxisDimIndex].get('type');\r\n    var data = option.data; // Clone a new data for next setOption({}) usage.\r\n    // Avoid modifying current data will affect further update.\r\n\r\n    if (data && addOrdinal) {\r\n      var newOptionData_1 = [];\r\n      zrUtil.each(data, function (item, index) {\r\n        var newItem;\r\n\r\n        if (zrUtil.isArray(item)) {\r\n          newItem = item.slice(); // Modify current using data.\r\n\r\n          item.unshift(index);\r\n        } else if (zrUtil.isArray(item.value)) {\r\n          newItem = zrUtil.extend({}, item);\r\n          newItem.value = newItem.value.slice(); // Modify current using data.\r\n\r\n          item.value.unshift(index);\r\n        } else {\r\n          newItem = item;\r\n        }\r\n\r\n        newOptionData_1.push(newItem);\r\n      });\r\n      option.data = newOptionData_1;\r\n    }\r\n\r\n    var defaultValueDimensions = this.defaultValueDimensions;\r\n    var coordDimensions = [{\r\n      name: baseAxisDim,\r\n      type: getDimensionTypeByAxis(baseAxisType),\r\n      ordinalMeta: ordinalMeta,\r\n      otherDims: {\r\n        tooltip: false,\r\n        itemName: 0\r\n      },\r\n      dimsDef: ['base']\r\n    }, {\r\n      name: otherAxisDim,\r\n      type: getDimensionTypeByAxis(otherAxisType),\r\n      dimsDef: defaultValueDimensions.slice()\r\n    }];\r\n    return createSeriesDataSimply(this, {\r\n      coordDimensions: coordDimensions,\r\n      dimensionsCount: defaultValueDimensions.length + 1,\r\n      encodeDefaulter: zrUtil.curry(makeSeriesEncodeForAxisCoordSys, coordDimensions, this)\r\n    });\r\n  };\r\n  /**\r\n   * If horizontal, base axis is x, otherwise y.\r\n   * @override\r\n   */\r\n\r\n\r\n  WhiskerBoxCommonMixin.prototype.getBaseAxis = function () {\r\n    var dim = this._baseAxisDim;\r\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\r\n  };\r\n\r\n  return WhiskerBoxCommonMixin;\r\n}();\r\n\r\n;\r\nexport { WhiskerBoxCommonMixin };", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport SeriesModel from '../../model/Series';\r\nimport { WhiskerBoxCommonMixin } from '../helper/whiskerBoxCommon';\r\nimport { mixin } from 'zrender/lib/core/util';\r\n\r\nvar BoxplotSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(BoxplotSeriesModel, _super);\r\n\r\n  function BoxplotSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = BoxplotSeriesModel.type; // TODO\r\n    // box width represents group size, so dimension should have 'size'.\r\n\r\n    /**\r\n     * @see <https://en.wikipedia.org/wiki/Box_plot>\r\n     * The meanings of 'min' and 'max' depend on user,\r\n     * and echarts do not need to know it.\r\n     * @readOnly\r\n     */\r\n\r\n    _this.defaultValueDimensions = [{\r\n      name: 'min',\r\n      defaultTooltip: true\r\n    }, {\r\n      name: 'Q1',\r\n      defaultTooltip: true\r\n    }, {\r\n      name: 'median',\r\n      defaultTooltip: true\r\n    }, {\r\n      name: 'Q3',\r\n      defaultTooltip: true\r\n    }, {\r\n      name: 'max',\r\n      defaultTooltip: true\r\n    }];\r\n    _this.visualDrawType = 'stroke';\r\n    return _this;\r\n  }\r\n\r\n  BoxplotSeriesModel.type = 'series.boxplot';\r\n  BoxplotSeriesModel.dependencies = ['xAxis', 'yAxis', 'grid'];\r\n  BoxplotSeriesModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 2,\r\n    coordinateSystem: 'cartesian2d',\r\n    legendHoverLink: true,\r\n    layout: null,\r\n    boxWidth: [7, 50],\r\n    itemStyle: {\r\n      color: '#fff',\r\n      borderWidth: 1\r\n    },\r\n    emphasis: {\r\n      scale: true,\r\n      itemStyle: {\r\n        borderWidth: 2,\r\n        shadowBlur: 5,\r\n        shadowOffsetX: 1,\r\n        shadowOffsetY: 1,\r\n        shadowColor: 'rgba(0,0,0,0.2)'\r\n      }\r\n    },\r\n    animationDuration: 800\r\n  };\r\n  return BoxplotSeriesModel;\r\n}(SeriesModel);\r\n\r\nmixin(BoxplotSeriesModel, WhiskerBoxCommonMixin, true);\r\nexport default BoxplotSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport ChartView from '../../view/Chart';\r\nimport * as graphic from '../../util/graphic';\r\nimport { setStatesStylesFromModel, enableHoverEmphasis } from '../../util/states';\r\nimport Path from 'zrender/lib/graphic/Path';\r\nimport { saveOldStyle } from '../../animation/basicTrasition';\r\n\r\nvar BoxplotView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(BoxplotView, _super);\r\n\r\n  function BoxplotView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = BoxplotView.type;\r\n    return _this;\r\n  }\r\n\r\n  BoxplotView.prototype.render = function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n    var group = this.group;\r\n    var oldData = this._data; // There is no old data only when first rendering or switching from\r\n    // stream mode to normal mode, where previous elements should be removed.\r\n\r\n    if (!this._data) {\r\n      group.removeAll();\r\n    }\r\n\r\n    var constDim = seriesModel.get('layout') === 'horizontal' ? 1 : 0;\r\n    data.diff(oldData).add(function (newIdx) {\r\n      if (data.hasValue(newIdx)) {\r\n        var itemLayout = data.getItemLayout(newIdx);\r\n        var symbolEl = createNormalBox(itemLayout, data, newIdx, constDim, true);\r\n        data.setItemGraphicEl(newIdx, symbolEl);\r\n        group.add(symbolEl);\r\n      }\r\n    }).update(function (newIdx, oldIdx) {\r\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\r\n\r\n      if (!data.hasValue(newIdx)) {\r\n        group.remove(symbolEl);\r\n        return;\r\n      }\r\n\r\n      var itemLayout = data.getItemLayout(newIdx);\r\n\r\n      if (!symbolEl) {\r\n        symbolEl = createNormalBox(itemLayout, data, newIdx, constDim);\r\n      } else {\r\n        saveOldStyle(symbolEl);\r\n        updateNormalBoxData(itemLayout, symbolEl, data, newIdx);\r\n      }\r\n\r\n      group.add(symbolEl);\r\n      data.setItemGraphicEl(newIdx, symbolEl);\r\n    }).remove(function (oldIdx) {\r\n      var el = oldData.getItemGraphicEl(oldIdx);\r\n      el && group.remove(el);\r\n    }).execute();\r\n    this._data = data;\r\n  };\r\n\r\n  BoxplotView.prototype.remove = function (ecModel) {\r\n    var group = this.group;\r\n    var data = this._data;\r\n    this._data = null;\r\n    data && data.eachItemGraphicEl(function (el) {\r\n      el && group.remove(el);\r\n    });\r\n  };\r\n\r\n  BoxplotView.type = 'boxplot';\r\n  return BoxplotView;\r\n}(ChartView);\r\n\r\nvar BoxPathShape =\r\n/** @class */\r\nfunction () {\r\n  function BoxPathShape() {}\r\n\r\n  return BoxPathShape;\r\n}();\r\n\r\nvar BoxPath =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(BoxPath, _super);\r\n\r\n  function BoxPath(opts) {\r\n    var _this = _super.call(this, opts) || this;\r\n\r\n    _this.type = 'boxplotBoxPath';\r\n    return _this;\r\n  }\r\n\r\n  BoxPath.prototype.getDefaultShape = function () {\r\n    return new BoxPathShape();\r\n  };\r\n\r\n  BoxPath.prototype.buildPath = function (ctx, shape) {\r\n    var ends = shape.points;\r\n    var i = 0;\r\n    ctx.moveTo(ends[i][0], ends[i][1]);\r\n    i++;\r\n\r\n    for (; i < 4; i++) {\r\n      ctx.lineTo(ends[i][0], ends[i][1]);\r\n    }\r\n\r\n    ctx.closePath();\r\n\r\n    for (; i < ends.length; i++) {\r\n      ctx.moveTo(ends[i][0], ends[i][1]);\r\n      i++;\r\n      ctx.lineTo(ends[i][0], ends[i][1]);\r\n    }\r\n  };\r\n\r\n  return BoxPath;\r\n}(Path);\r\n\r\nfunction createNormalBox(itemLayout, data, dataIndex, constDim, isInit) {\r\n  var ends = itemLayout.ends;\r\n  var el = new BoxPath({\r\n    shape: {\r\n      points: isInit ? transInit(ends, constDim, itemLayout) : ends\r\n    }\r\n  });\r\n  updateNormalBoxData(itemLayout, el, data, dataIndex, isInit);\r\n  return el;\r\n}\r\n\r\nfunction updateNormalBoxData(itemLayout, el, data, dataIndex, isInit) {\r\n  var seriesModel = data.hostModel;\r\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\r\n  updateMethod(el, {\r\n    shape: {\r\n      points: itemLayout.ends\r\n    }\r\n  }, seriesModel, dataIndex);\r\n  el.useStyle(data.getItemVisual(dataIndex, 'style'));\r\n  el.style.strokeNoScale = true;\r\n  el.z2 = 100;\r\n  var itemModel = data.getItemModel(dataIndex);\r\n  setStatesStylesFromModel(el, itemModel);\r\n  enableHoverEmphasis(el, itemModel.get(['emphasis', 'focus']), itemModel.get(['emphasis', 'blurScope']));\r\n}\r\n\r\nfunction transInit(points, dim, itemLayout) {\r\n  return zrUtil.map(points, function (point) {\r\n    point = point.slice();\r\n    point[dim] = itemLayout.initBaseline;\r\n    return point;\r\n  });\r\n}\r\n\r\nexport default BoxplotView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nexport default function boxplotVisual(ecModel, api) {}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { parsePercent } from '../../util/number';\r\nvar each = zrUtil.each;\r\nexport default function boxplotLayout(ecModel) {\r\n  var groupResult = groupSeriesByAxis(ecModel);\r\n  each(groupResult, function (groupItem) {\r\n    var seriesModels = groupItem.seriesModels;\r\n\r\n    if (!seriesModels.length) {\r\n      return;\r\n    }\r\n\r\n    calculateBase(groupItem);\r\n    each(seriesModels, function (seriesModel, idx) {\r\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\r\n    });\r\n  });\r\n}\r\n/**\r\n * Group series by axis.\r\n */\r\n\r\nfunction groupSeriesByAxis(ecModel) {\r\n  var result = [];\r\n  var axisList = [];\r\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\r\n    var baseAxis = seriesModel.getBaseAxis();\r\n    var idx = zrUtil.indexOf(axisList, baseAxis);\r\n\r\n    if (idx < 0) {\r\n      idx = axisList.length;\r\n      axisList[idx] = baseAxis;\r\n      result[idx] = {\r\n        axis: baseAxis,\r\n        seriesModels: []\r\n      };\r\n    }\r\n\r\n    result[idx].seriesModels.push(seriesModel);\r\n  });\r\n  return result;\r\n}\r\n/**\r\n * Calculate offset and box width for each series.\r\n */\r\n\r\n\r\nfunction calculateBase(groupItem) {\r\n  var extent;\r\n  var baseAxis = groupItem.axis;\r\n  var seriesModels = groupItem.seriesModels;\r\n  var seriesCount = seriesModels.length;\r\n  var boxWidthList = groupItem.boxWidthList = [];\r\n  var boxOffsetList = groupItem.boxOffsetList = [];\r\n  var boundList = [];\r\n  var bandWidth;\r\n\r\n  if (baseAxis.type === 'category') {\r\n    bandWidth = baseAxis.getBandWidth();\r\n  } else {\r\n    var maxDataCount_1 = 0;\r\n    each(seriesModels, function (seriesModel) {\r\n      maxDataCount_1 = Math.max(maxDataCount_1, seriesModel.getData().count());\r\n    });\r\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount_1;\r\n  }\r\n\r\n  each(seriesModels, function (seriesModel) {\r\n    var boxWidthBound = seriesModel.get('boxWidth');\r\n\r\n    if (!zrUtil.isArray(boxWidthBound)) {\r\n      boxWidthBound = [boxWidthBound, boxWidthBound];\r\n    }\r\n\r\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\r\n  });\r\n  var availableWidth = bandWidth * 0.8 - 2;\r\n  var boxGap = availableWidth / seriesCount * 0.3;\r\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\r\n  var base = boxWidth / 2 - availableWidth / 2;\r\n  each(seriesModels, function (seriesModel, idx) {\r\n    boxOffsetList.push(base);\r\n    base += boxGap + boxWidth;\r\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\r\n  });\r\n}\r\n/**\r\n * Calculate points location for each series.\r\n */\r\n\r\n\r\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\r\n  var coordSys = seriesModel.coordinateSystem;\r\n  var data = seriesModel.getData();\r\n  var halfWidth = boxWidth / 2;\r\n  var cDimIdx = seriesModel.get('layout') === 'horizontal' ? 0 : 1;\r\n  var vDimIdx = 1 - cDimIdx;\r\n  var coordDims = ['x', 'y'];\r\n  var cDim = data.mapDimension(coordDims[cDimIdx]);\r\n  var vDims = data.mapDimensionsAll(coordDims[vDimIdx]);\r\n\r\n  if (cDim == null || vDims.length < 5) {\r\n    return;\r\n  }\r\n\r\n  for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\r\n    var axisDimVal = data.get(cDim, dataIndex);\r\n    var median = getPoint(axisDimVal, vDims[2], dataIndex);\r\n    var end1 = getPoint(axisDimVal, vDims[0], dataIndex);\r\n    var end2 = getPoint(axisDimVal, vDims[1], dataIndex);\r\n    var end4 = getPoint(axisDimVal, vDims[3], dataIndex);\r\n    var end5 = getPoint(axisDimVal, vDims[4], dataIndex);\r\n    var ends = [];\r\n    addBodyEnd(ends, end2, false);\r\n    addBodyEnd(ends, end4, true);\r\n    ends.push(end1, end2, end5, end4);\r\n    layEndLine(ends, end1);\r\n    layEndLine(ends, end5);\r\n    layEndLine(ends, median);\r\n    data.setItemLayout(dataIndex, {\r\n      initBaseline: median[vDimIdx],\r\n      ends: ends\r\n    });\r\n  }\r\n\r\n  function getPoint(axisDimVal, dim, dataIndex) {\r\n    var val = data.get(dim, dataIndex);\r\n    var p = [];\r\n    p[cDimIdx] = axisDimVal;\r\n    p[vDimIdx] = val;\r\n    var point;\r\n\r\n    if (isNaN(axisDimVal) || isNaN(val)) {\r\n      point = [NaN, NaN];\r\n    } else {\r\n      point = coordSys.dataToPoint(p);\r\n      point[cDimIdx] += offset;\r\n    }\r\n\r\n    return point;\r\n  }\r\n\r\n  function addBodyEnd(ends, point, start) {\r\n    var point1 = point.slice();\r\n    var point2 = point.slice();\r\n    point1[cDimIdx] += halfWidth;\r\n    point2[cDimIdx] -= halfWidth;\r\n    start ? ends.push(point1, point2) : ends.push(point2, point1);\r\n  }\r\n\r\n  function layEndLine(ends, endCenter) {\r\n    var from = endCenter.slice();\r\n    var to = endCenter.slice();\r\n    from[cDimIdx] -= halfWidth;\r\n    to[cDimIdx] += halfWidth;\r\n    ends.push(from, to);\r\n  }\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { quantile, asc } from '../../util/number';\r\nimport { isFunction, isString } from 'zrender/lib/core/util';\r\n/**\r\n * See:\r\n *  <https://en.wikipedia.org/wiki/Box_plot#cite_note-frigge_hoaglin_iglewicz-2>\r\n *  <http://stat.ethz.ch/R-manual/R-devel/library/grDevices/html/boxplot.stats.html>\r\n *\r\n * Helper method for preparing data.\r\n *\r\n * @param rawData like\r\n *        [\r\n *            [12,232,443], (raw data set for the first box)\r\n *            [3843,5545,1232], (raw data set for the second box)\r\n *            ...\r\n *        ]\r\n * @param opt.boundIQR=1.5 Data less than min bound is outlier.\r\n *      default 1.5, means Q1 - 1.5 * (Q3 - Q1).\r\n *      If 'none'/0 passed, min bound will not be used.\r\n */\r\n\r\nexport default function prepareBoxplotData(rawData, opt) {\r\n  opt = opt || {};\r\n  var boxData = [];\r\n  var outliers = [];\r\n  var boundIQR = opt.boundIQR;\r\n  var useExtreme = boundIQR === 'none' || boundIQR === 0;\r\n\r\n  for (var i = 0; i < rawData.length; i++) {\r\n    var ascList = asc(rawData[i].slice());\r\n    var Q1 = quantile(ascList, 0.25);\r\n    var Q2 = quantile(ascList, 0.5);\r\n    var Q3 = quantile(ascList, 0.75);\r\n    var min = ascList[0];\r\n    var max = ascList[ascList.length - 1];\r\n    var bound = (boundIQR == null ? 1.5 : boundIQR) * (Q3 - Q1);\r\n    var low = useExtreme ? min : Math.max(min, Q1 - bound);\r\n    var high = useExtreme ? max : Math.min(max, Q3 + bound);\r\n    var itemNameFormatter = opt.itemNameFormatter;\r\n    var itemName = isFunction(itemNameFormatter) ? itemNameFormatter({\r\n      value: i\r\n    }) : isString(itemNameFormatter) ? itemNameFormatter.replace('{value}', i + '') : i + '';\r\n    boxData.push([itemName, low, Q1, Q2, Q3, high]);\r\n\r\n    for (var j = 0; j < ascList.length; j++) {\r\n      var dataItem = ascList[j];\r\n\r\n      if (dataItem < low || dataItem > high) {\r\n        var outlier = [itemName, dataItem];\r\n        outliers.push(outlier);\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    boxData: boxData,\r\n    outliers: outliers\r\n  };\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport prepareBoxplotData from './prepareBoxplotData';\r\nimport { throwError, makePrintable } from '../../util/log';\r\nimport { SOURCE_FORMAT_ARRAY_ROWS } from '../../util/types';\r\nexport var boxplotTransform = {\r\n  type: 'echarts:boxplot',\r\n  transform: function transform(params) {\r\n    var upstream = params.upstream;\r\n\r\n    if (upstream.sourceFormat !== SOURCE_FORMAT_ARRAY_ROWS) {\r\n      var errMsg = '';\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        errMsg = makePrintable('source data is not applicable for this boxplot transform. Expect number[][].');\r\n      }\r\n\r\n      throwError(errMsg);\r\n    }\r\n\r\n    var result = prepareBoxplotData(upstream.getRawData(), params.config);\r\n    return [{\r\n      dimensions: ['ItemName', 'Low', 'Q1', 'Q2', 'Q3', 'High'],\r\n      data: result.boxData\r\n    }, {\r\n      data: result.outliers\r\n    }];\r\n  }\r\n};", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport BoxplotSeriesModel from './BoxplotSeries';\r\nimport BoxplotView from './BoxplotView';\r\nimport boxplotVisual from './boxplotVisual';\r\nimport boxplotLayout from './boxplotLayout';\r\nimport { boxplotTransform } from './boxplotTransform';\r\nexport function install(registers) {\r\n  registers.registerSeriesModel(BoxplotSeriesModel);\r\n  registers.registerChartView(BoxplotView);\r\n  registers.registerVisual(boxplotVisual);\r\n  registers.registerLayout(boxplotLayout);\r\n  registers.registerTransform(boxplotTransform);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport ChartView from '../../view/Chart';\r\nimport * as graphic from '../../util/graphic';\r\nimport { setStatesStylesFromModel } from '../../util/states';\r\nimport Path from 'zrender/lib/graphic/Path';\r\nimport { createClipPath } from '../helper/createClipPathFromCoordSys';\r\nimport { saveOldStyle } from '../../animation/basicTrasition';\r\nvar SKIP_PROPS = ['color', 'borderColor'];\r\n\r\nvar CandlestickView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(CandlestickView, _super);\r\n\r\n  function CandlestickView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = CandlestickView.type;\r\n    return _this;\r\n  }\r\n\r\n  CandlestickView.prototype.render = function (seriesModel, ecModel, api) {\r\n    // If there is clipPath created in large mode. Remove it.\r\n    this.group.removeClipPath();\r\n\r\n    this._updateDrawMode(seriesModel);\r\n\r\n    this._isLargeDraw ? this._renderLarge(seriesModel) : this._renderNormal(seriesModel);\r\n  };\r\n\r\n  CandlestickView.prototype.incrementalPrepareRender = function (seriesModel, ecModel, api) {\r\n    this._clear();\r\n\r\n    this._updateDrawMode(seriesModel);\r\n  };\r\n\r\n  CandlestickView.prototype.incrementalRender = function (params, seriesModel, ecModel, api) {\r\n    this._isLargeDraw ? this._incrementalRenderLarge(params, seriesModel) : this._incrementalRenderNormal(params, seriesModel);\r\n  };\r\n\r\n  CandlestickView.prototype._updateDrawMode = function (seriesModel) {\r\n    var isLargeDraw = seriesModel.pipelineContext.large;\r\n\r\n    if (this._isLargeDraw == null || isLargeDraw !== this._isLargeDraw) {\r\n      this._isLargeDraw = isLargeDraw;\r\n\r\n      this._clear();\r\n    }\r\n  };\r\n\r\n  CandlestickView.prototype._renderNormal = function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var oldData = this._data;\r\n    var group = this.group;\r\n    var isSimpleBox = data.getLayout('isSimpleBox');\r\n    var needsClip = seriesModel.get('clip', true);\r\n    var coord = seriesModel.coordinateSystem;\r\n    var clipArea = coord.getArea && coord.getArea(); // There is no old data only when first rendering or switching from\r\n    // stream mode to normal mode, where previous elements should be removed.\r\n\r\n    if (!this._data) {\r\n      group.removeAll();\r\n    }\r\n\r\n    data.diff(oldData).add(function (newIdx) {\r\n      if (data.hasValue(newIdx)) {\r\n        var itemLayout = data.getItemLayout(newIdx);\r\n\r\n        if (needsClip && isNormalBoxClipped(clipArea, itemLayout)) {\r\n          return;\r\n        }\r\n\r\n        var el = createNormalBox(itemLayout, newIdx, true);\r\n        graphic.initProps(el, {\r\n          shape: {\r\n            points: itemLayout.ends\r\n          }\r\n        }, seriesModel, newIdx);\r\n        setBoxCommon(el, data, newIdx, isSimpleBox);\r\n        group.add(el);\r\n        data.setItemGraphicEl(newIdx, el);\r\n      }\r\n    }).update(function (newIdx, oldIdx) {\r\n      var el = oldData.getItemGraphicEl(oldIdx); // Empty data\r\n\r\n      if (!data.hasValue(newIdx)) {\r\n        group.remove(el);\r\n        return;\r\n      }\r\n\r\n      var itemLayout = data.getItemLayout(newIdx);\r\n\r\n      if (needsClip && isNormalBoxClipped(clipArea, itemLayout)) {\r\n        group.remove(el);\r\n        return;\r\n      }\r\n\r\n      if (!el) {\r\n        el = createNormalBox(itemLayout, newIdx);\r\n      } else {\r\n        graphic.updateProps(el, {\r\n          shape: {\r\n            points: itemLayout.ends\r\n          }\r\n        }, seriesModel, newIdx);\r\n        saveOldStyle(el);\r\n      }\r\n\r\n      setBoxCommon(el, data, newIdx, isSimpleBox);\r\n      group.add(el);\r\n      data.setItemGraphicEl(newIdx, el);\r\n    }).remove(function (oldIdx) {\r\n      var el = oldData.getItemGraphicEl(oldIdx);\r\n      el && group.remove(el);\r\n    }).execute();\r\n    this._data = data;\r\n  };\r\n\r\n  CandlestickView.prototype._renderLarge = function (seriesModel) {\r\n    this._clear();\r\n\r\n    createLarge(seriesModel, this.group);\r\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\r\n\r\n    if (clipPath) {\r\n      this.group.setClipPath(clipPath);\r\n    } else {\r\n      this.group.removeClipPath();\r\n    }\r\n  };\r\n\r\n  CandlestickView.prototype._incrementalRenderNormal = function (params, seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var isSimpleBox = data.getLayout('isSimpleBox');\r\n    var dataIndex;\r\n\r\n    while ((dataIndex = params.next()) != null) {\r\n      var itemLayout = data.getItemLayout(dataIndex);\r\n      var el = createNormalBox(itemLayout, dataIndex);\r\n      setBoxCommon(el, data, dataIndex, isSimpleBox);\r\n      el.incremental = true;\r\n      this.group.add(el);\r\n    }\r\n  };\r\n\r\n  CandlestickView.prototype._incrementalRenderLarge = function (params, seriesModel) {\r\n    createLarge(seriesModel, this.group, true);\r\n  };\r\n\r\n  CandlestickView.prototype.remove = function (ecModel) {\r\n    this._clear();\r\n  };\r\n\r\n  CandlestickView.prototype._clear = function () {\r\n    this.group.removeAll();\r\n    this._data = null;\r\n  };\r\n\r\n  CandlestickView.type = 'candlestick';\r\n  return CandlestickView;\r\n}(ChartView);\r\n\r\nvar NormalBoxPathShape =\r\n/** @class */\r\nfunction () {\r\n  function NormalBoxPathShape() {}\r\n\r\n  return NormalBoxPathShape;\r\n}();\r\n\r\nvar NormalBoxPath =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(NormalBoxPath, _super);\r\n\r\n  function NormalBoxPath(opts) {\r\n    var _this = _super.call(this, opts) || this;\r\n\r\n    _this.type = 'normalCandlestickBox';\r\n    return _this;\r\n  }\r\n\r\n  NormalBoxPath.prototype.getDefaultShape = function () {\r\n    return new NormalBoxPathShape();\r\n  };\r\n\r\n  NormalBoxPath.prototype.buildPath = function (ctx, shape) {\r\n    var ends = shape.points;\r\n\r\n    if (this.__simpleBox) {\r\n      ctx.moveTo(ends[4][0], ends[4][1]);\r\n      ctx.lineTo(ends[6][0], ends[6][1]);\r\n    } else {\r\n      ctx.moveTo(ends[0][0], ends[0][1]);\r\n      ctx.lineTo(ends[1][0], ends[1][1]);\r\n      ctx.lineTo(ends[2][0], ends[2][1]);\r\n      ctx.lineTo(ends[3][0], ends[3][1]);\r\n      ctx.closePath();\r\n      ctx.moveTo(ends[4][0], ends[4][1]);\r\n      ctx.lineTo(ends[5][0], ends[5][1]);\r\n      ctx.moveTo(ends[6][0], ends[6][1]);\r\n      ctx.lineTo(ends[7][0], ends[7][1]);\r\n    }\r\n  };\r\n\r\n  return NormalBoxPath;\r\n}(Path);\r\n\r\nfunction createNormalBox(itemLayout, dataIndex, isInit) {\r\n  var ends = itemLayout.ends;\r\n  return new NormalBoxPath({\r\n    shape: {\r\n      points: isInit ? transInit(ends, itemLayout) : ends\r\n    },\r\n    z2: 100\r\n  });\r\n}\r\n\r\nfunction isNormalBoxClipped(clipArea, itemLayout) {\r\n  var clipped = true;\r\n\r\n  for (var i = 0; i < itemLayout.ends.length; i++) {\r\n    // If any point are in the region.\r\n    if (clipArea.contain(itemLayout.ends[i][0], itemLayout.ends[i][1])) {\r\n      clipped = false;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return clipped;\r\n}\r\n\r\nfunction setBoxCommon(el, data, dataIndex, isSimpleBox) {\r\n  var itemModel = data.getItemModel(dataIndex);\r\n  el.useStyle(data.getItemVisual(dataIndex, 'style'));\r\n  el.style.strokeNoScale = true;\r\n  el.__simpleBox = isSimpleBox;\r\n  setStatesStylesFromModel(el, itemModel);\r\n}\r\n\r\nfunction transInit(points, itemLayout) {\r\n  return zrUtil.map(points, function (point) {\r\n    point = point.slice();\r\n    point[1] = itemLayout.initBaseline;\r\n    return point;\r\n  });\r\n}\r\n\r\nvar LargeBoxPathShape =\r\n/** @class */\r\nfunction () {\r\n  function LargeBoxPathShape() {}\r\n\r\n  return LargeBoxPathShape;\r\n}();\r\n\r\nvar LargeBoxPath =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(LargeBoxPath, _super);\r\n\r\n  function LargeBoxPath(opts) {\r\n    var _this = _super.call(this, opts) || this;\r\n\r\n    _this.type = 'largeCandlestickBox';\r\n    return _this;\r\n  }\r\n\r\n  LargeBoxPath.prototype.getDefaultShape = function () {\r\n    return new LargeBoxPathShape();\r\n  };\r\n\r\n  LargeBoxPath.prototype.buildPath = function (ctx, shape) {\r\n    // Drawing lines is more efficient than drawing\r\n    // a whole line or drawing rects.\r\n    var points = shape.points;\r\n\r\n    for (var i = 0; i < points.length;) {\r\n      if (this.__sign === points[i++]) {\r\n        var x = points[i++];\r\n        ctx.moveTo(x, points[i++]);\r\n        ctx.lineTo(x, points[i++]);\r\n      } else {\r\n        i += 3;\r\n      }\r\n    }\r\n  };\r\n\r\n  return LargeBoxPath;\r\n}(Path);\r\n\r\nfunction createLarge(seriesModel, group, incremental) {\r\n  var data = seriesModel.getData();\r\n  var largePoints = data.getLayout('largePoints');\r\n  var elP = new LargeBoxPath({\r\n    shape: {\r\n      points: largePoints\r\n    },\r\n    __sign: 1\r\n  });\r\n  group.add(elP);\r\n  var elN = new LargeBoxPath({\r\n    shape: {\r\n      points: largePoints\r\n    },\r\n    __sign: -1\r\n  });\r\n  group.add(elN);\r\n  setLargeStyle(1, elP, seriesModel, data);\r\n  setLargeStyle(-1, elN, seriesModel, data);\r\n\r\n  if (incremental) {\r\n    elP.incremental = true;\r\n    elN.incremental = true;\r\n  }\r\n}\r\n\r\nfunction setLargeStyle(sign, el, seriesModel, data) {\r\n  // TODO put in visual?\r\n  var borderColor = seriesModel.get(['itemStyle', sign > 0 ? 'borderColor' : 'borderColor0']) || seriesModel.get(['itemStyle', sign > 0 ? 'color' : 'color0']); // Color must be excluded.\r\n  // Because symbol provide setColor individually to set fill and stroke\r\n\r\n  var itemStyle = seriesModel.getModel('itemStyle').getItemStyle(SKIP_PROPS);\r\n  el.useStyle(itemStyle);\r\n  el.style.fill = null;\r\n  el.style.stroke = borderColor;\r\n}\r\n\r\nexport default CandlestickView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport SeriesModel from '../../model/Series';\r\nimport { WhiskerBoxCommonMixin } from '../helper/whiskerBoxCommon';\r\nimport { mixin } from 'zrender/lib/core/util';\r\n\r\nvar CandlestickSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(CandlestickSeriesModel, _super);\r\n\r\n  function CandlestickSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = CandlestickSeriesModel.type;\r\n    _this.defaultValueDimensions = [{\r\n      name: 'open',\r\n      defaultTooltip: true\r\n    }, {\r\n      name: 'close',\r\n      defaultTooltip: true\r\n    }, {\r\n      name: 'lowest',\r\n      defaultTooltip: true\r\n    }, {\r\n      name: 'highest',\r\n      defaultTooltip: true\r\n    }];\r\n    return _this;\r\n  }\r\n  /**\r\n   * Get dimension for shadow in dataZoom\r\n   * @return dimension name\r\n   */\r\n\r\n\r\n  CandlestickSeriesModel.prototype.getShadowDim = function () {\r\n    return 'open';\r\n  };\r\n\r\n  CandlestickSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\r\n    var itemLayout = data.getItemLayout(dataIndex);\r\n    return itemLayout && selectors.rect(itemLayout.brushRect);\r\n  };\r\n\r\n  CandlestickSeriesModel.type = 'series.candlestick';\r\n  CandlestickSeriesModel.dependencies = ['xAxis', 'yAxis', 'grid'];\r\n  CandlestickSeriesModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 2,\r\n    coordinateSystem: 'cartesian2d',\r\n    legendHoverLink: true,\r\n    // xAxisIndex: 0,\r\n    // yAxisIndex: 0,\r\n    layout: null,\r\n    clip: true,\r\n    itemStyle: {\r\n      color: '#eb5454',\r\n      color0: '#47b262',\r\n      borderColor: '#eb5454',\r\n      borderColor0: '#47b262',\r\n      // borderColor: '#d24040',\r\n      // borderColor0: '#398f4f',\r\n      borderWidth: 1\r\n    },\r\n    emphasis: {\r\n      scale: true,\r\n      itemStyle: {\r\n        borderWidth: 2\r\n      }\r\n    },\r\n    barMaxWidth: null,\r\n    barMinWidth: null,\r\n    barWidth: null,\r\n    large: true,\r\n    largeThreshold: 600,\r\n    progressive: 3e3,\r\n    progressiveThreshold: 1e4,\r\n    progressiveChunkMode: 'mod',\r\n    animationEasing: 'linear',\r\n    animationDuration: 300\r\n  };\r\n  return CandlestickSeriesModel;\r\n}(SeriesModel);\r\n\r\nmixin(CandlestickSeriesModel, WhiskerBoxCommonMixin, true);\r\nexport default CandlestickSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nexport default function candlestickPreprocessor(option) {\r\n  if (!option || !zrUtil.isArray(option.series)) {\r\n    return;\r\n  } // Translate 'k' to 'candlestick'.\r\n\r\n\r\n  zrUtil.each(option.series, function (seriesItem) {\r\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\r\n      seriesItem.type = 'candlestick';\r\n    }\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport createRenderPlanner from '../helper/createRenderPlanner';\r\nimport { extend } from 'zrender/lib/core/util';\r\nvar positiveBorderColorQuery = ['itemStyle', 'borderColor'];\r\nvar negativeBorderColorQuery = ['itemStyle', 'borderColor0'];\r\nvar positiveColorQuery = ['itemStyle', 'color'];\r\nvar negativeColorQuery = ['itemStyle', 'color0'];\r\nvar candlestickVisual = {\r\n  seriesType: 'candlestick',\r\n  plan: createRenderPlanner(),\r\n  // For legend.\r\n  performRawSeries: true,\r\n  reset: function (seriesModel, ecModel) {\r\n    function getColor(sign, model) {\r\n      return model.get(sign > 0 ? positiveColorQuery : negativeColorQuery);\r\n    }\r\n\r\n    function getBorderColor(sign, model) {\r\n      return model.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery);\r\n    } // Only visible series has each data be visual encoded\r\n\r\n\r\n    if (ecModel.isSeriesFiltered(seriesModel)) {\r\n      return;\r\n    }\r\n\r\n    var isLargeRender = seriesModel.pipelineContext.large;\r\n    return !isLargeRender && {\r\n      progress: function (params, data) {\r\n        var dataIndex;\r\n\r\n        while ((dataIndex = params.next()) != null) {\r\n          var itemModel = data.getItemModel(dataIndex);\r\n          var sign = data.getItemLayout(dataIndex).sign;\r\n          var style = itemModel.getItemStyle();\r\n          style.fill = getColor(sign, itemModel);\r\n          style.stroke = getBorderColor(sign, itemModel) || style.fill;\r\n          var existsStyle = data.ensureUniqueItemVisual(dataIndex, 'style');\r\n          extend(existsStyle, style);\r\n        }\r\n      }\r\n    };\r\n  }\r\n};\r\nexport default candlestickVisual;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/* global Float32Array */\r\nimport { subPixelOptimize } from '../../util/graphic';\r\nimport createRenderPlanner from '../helper/createRenderPlanner';\r\nimport { parsePercent } from '../../util/number';\r\nimport { map, retrieve2 } from 'zrender/lib/core/util';\r\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\nvar candlestickLayout = {\r\n  seriesType: 'candlestick',\r\n  plan: createRenderPlanner(),\r\n  reset: function (seriesModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var data = seriesModel.getData();\r\n    var candleWidth = calculateCandleWidth(seriesModel, data);\r\n    var cDimIdx = 0;\r\n    var vDimIdx = 1;\r\n    var coordDims = ['x', 'y'];\r\n    var cDimI = data.getDimensionIndex(data.mapDimension(coordDims[cDimIdx]));\r\n    var vDimsI = map(data.mapDimensionsAll(coordDims[vDimIdx]), data.getDimensionIndex, data);\r\n    var openDimI = vDimsI[0];\r\n    var closeDimI = vDimsI[1];\r\n    var lowestDimI = vDimsI[2];\r\n    var highestDimI = vDimsI[3];\r\n    data.setLayout({\r\n      candleWidth: candleWidth,\r\n      // The value is experimented visually.\r\n      isSimpleBox: candleWidth <= 1.3\r\n    });\r\n\r\n    if (cDimI < 0 || vDimsI.length < 4) {\r\n      return;\r\n    }\r\n\r\n    return {\r\n      progress: seriesModel.pipelineContext.large ? largeProgress : normalProgress\r\n    };\r\n\r\n    function normalProgress(params, data) {\r\n      var dataIndex;\r\n      var store = data.getStore();\r\n\r\n      while ((dataIndex = params.next()) != null) {\r\n        var axisDimVal = store.get(cDimI, dataIndex);\r\n        var openVal = store.get(openDimI, dataIndex);\r\n        var closeVal = store.get(closeDimI, dataIndex);\r\n        var lowestVal = store.get(lowestDimI, dataIndex);\r\n        var highestVal = store.get(highestDimI, dataIndex);\r\n        var ocLow = Math.min(openVal, closeVal);\r\n        var ocHigh = Math.max(openVal, closeVal);\r\n        var ocLowPoint = getPoint(ocLow, axisDimVal);\r\n        var ocHighPoint = getPoint(ocHigh, axisDimVal);\r\n        var lowestPoint = getPoint(lowestVal, axisDimVal);\r\n        var highestPoint = getPoint(highestVal, axisDimVal);\r\n        var ends = [];\r\n        addBodyEnd(ends, ocHighPoint, 0);\r\n        addBodyEnd(ends, ocLowPoint, 1);\r\n        ends.push(subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint), subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint));\r\n        data.setItemLayout(dataIndex, {\r\n          sign: getSign(store, dataIndex, openVal, closeVal, closeDimI),\r\n          initBaseline: openVal > closeVal ? ocHighPoint[vDimIdx] : ocLowPoint[vDimIdx],\r\n          ends: ends,\r\n          brushRect: makeBrushRect(lowestVal, highestVal, axisDimVal)\r\n        });\r\n      }\r\n\r\n      function getPoint(val, axisDimVal) {\r\n        var p = [];\r\n        p[cDimIdx] = axisDimVal;\r\n        p[vDimIdx] = val;\r\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\r\n      }\r\n\r\n      function addBodyEnd(ends, point, start) {\r\n        var point1 = point.slice();\r\n        var point2 = point.slice();\r\n        point1[cDimIdx] = subPixelOptimize(point1[cDimIdx] + candleWidth / 2, 1, false);\r\n        point2[cDimIdx] = subPixelOptimize(point2[cDimIdx] - candleWidth / 2, 1, true);\r\n        start ? ends.push(point1, point2) : ends.push(point2, point1);\r\n      }\r\n\r\n      function makeBrushRect(lowestVal, highestVal, axisDimVal) {\r\n        var pmin = getPoint(lowestVal, axisDimVal);\r\n        var pmax = getPoint(highestVal, axisDimVal);\r\n        pmin[cDimIdx] -= candleWidth / 2;\r\n        pmax[cDimIdx] -= candleWidth / 2;\r\n        return {\r\n          x: pmin[0],\r\n          y: pmin[1],\r\n          width: vDimIdx ? candleWidth : pmax[0] - pmin[0],\r\n          height: vDimIdx ? pmax[1] - pmin[1] : candleWidth\r\n        };\r\n      }\r\n\r\n      function subPixelOptimizePoint(point) {\r\n        point[cDimIdx] = subPixelOptimize(point[cDimIdx], 1);\r\n        return point;\r\n      }\r\n    }\r\n\r\n    function largeProgress(params, data) {\r\n      // Structure: [sign, x, yhigh, ylow, sign, x, yhigh, ylow, ...]\r\n      var points = new LargeArr(params.count * 4);\r\n      var offset = 0;\r\n      var point;\r\n      var tmpIn = [];\r\n      var tmpOut = [];\r\n      var dataIndex;\r\n      var store = data.getStore();\r\n\r\n      while ((dataIndex = params.next()) != null) {\r\n        var axisDimVal = store.get(cDimI, dataIndex);\r\n        var openVal = store.get(openDimI, dataIndex);\r\n        var closeVal = store.get(closeDimI, dataIndex);\r\n        var lowestVal = store.get(lowestDimI, dataIndex);\r\n        var highestVal = store.get(highestDimI, dataIndex);\r\n\r\n        if (isNaN(axisDimVal) || isNaN(lowestVal) || isNaN(highestVal)) {\r\n          points[offset++] = NaN;\r\n          offset += 3;\r\n          continue;\r\n        }\r\n\r\n        points[offset++] = getSign(store, dataIndex, openVal, closeVal, closeDimI);\r\n        tmpIn[cDimIdx] = axisDimVal;\r\n        tmpIn[vDimIdx] = lowestVal;\r\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\r\n        points[offset++] = point ? point[0] : NaN;\r\n        points[offset++] = point ? point[1] : NaN;\r\n        tmpIn[vDimIdx] = highestVal;\r\n        point = coordSys.dataToPoint(tmpIn, null, tmpOut);\r\n        points[offset++] = point ? point[1] : NaN;\r\n      }\r\n\r\n      data.setLayout('largePoints', points);\r\n    }\r\n  }\r\n};\r\n\r\nfunction getSign(store, dataIndex, openVal, closeVal, closeDimI) {\r\n  var sign;\r\n\r\n  if (openVal > closeVal) {\r\n    sign = -1;\r\n  } else if (openVal < closeVal) {\r\n    sign = 1;\r\n  } else {\r\n    sign = dataIndex > 0 // If close === open, compare with close of last record\r\n    ? store.get(closeDimI, dataIndex - 1) <= closeVal ? 1 : -1 : // No record of previous, set to be positive\r\n    1;\r\n  }\r\n\r\n  return sign;\r\n}\r\n\r\nfunction calculateCandleWidth(seriesModel, data) {\r\n  var baseAxis = seriesModel.getBaseAxis();\r\n  var extent;\r\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\r\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\r\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\r\n  var barWidth = seriesModel.get('barWidth');\r\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\r\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\r\n}\r\n\r\nexport default candlestickLayout;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport CandlestickView from './CandlestickView';\r\nimport CandlestickSeriesModel from './CandlestickSeries';\r\nimport preprocessor from './preprocessor';\r\nimport candlestickVisual from './candlestickVisual';\r\nimport candlestickLayout from './candlestickLayout';\r\nexport function install(registers) {\r\n  registers.registerChartView(CandlestickView);\r\n  registers.registerSeriesModel(CandlestickSeriesModel);\r\n  registers.registerPreprocessor(preprocessor);\r\n  registers.registerVisual(candlestickVisual);\r\n  registers.registerLayout(candlestickLayout);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport { createSymbol, normalizeSymbolOffset, normalizeSymbolSize } from '../../util/symbol';\r\nimport { Group } from '../../util/graphic';\r\nimport { enterEmphasis, leaveEmphasis, enableHoverEmphasis } from '../../util/states';\r\nimport SymbolClz from './Symbol';\r\n\r\nfunction updateRipplePath(rippleGroup, effectCfg) {\r\n  var color = effectCfg.rippleEffectColor || effectCfg.color;\r\n  rippleGroup.eachChild(function (ripplePath) {\r\n    ripplePath.attr({\r\n      z: effectCfg.z,\r\n      zlevel: effectCfg.zlevel,\r\n      style: {\r\n        stroke: effectCfg.brushType === 'stroke' ? color : null,\r\n        fill: effectCfg.brushType === 'fill' ? color : null\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nvar EffectSymbol =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(EffectSymbol, _super);\r\n\r\n  function EffectSymbol(data, idx) {\r\n    var _this = _super.call(this) || this;\r\n\r\n    var symbol = new SymbolClz(data, idx);\r\n    var rippleGroup = new Group();\r\n\r\n    _this.add(symbol);\r\n\r\n    _this.add(rippleGroup);\r\n\r\n    _this.updateData(data, idx);\r\n\r\n    return _this;\r\n  }\r\n\r\n  EffectSymbol.prototype.stopEffectAnimation = function () {\r\n    this.childAt(1).removeAll();\r\n  };\r\n\r\n  EffectSymbol.prototype.startEffectAnimation = function (effectCfg) {\r\n    var symbolType = effectCfg.symbolType;\r\n    var color = effectCfg.color;\r\n    var rippleNumber = effectCfg.rippleNumber;\r\n    var rippleGroup = this.childAt(1);\r\n\r\n    for (var i = 0; i < rippleNumber; i++) {\r\n      // If width/height are set too small (e.g., set to 1) on ios10\r\n      // and macOS Sierra, a circle stroke become a rect, no matter what\r\n      // the scale is set. So we set width/height as 2. See #4136.\r\n      var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\r\n      ripplePath.attr({\r\n        style: {\r\n          strokeNoScale: true\r\n        },\r\n        z2: 99,\r\n        silent: true,\r\n        scaleX: 0.5,\r\n        scaleY: 0.5\r\n      });\r\n      var delay = -i / rippleNumber * effectCfg.period + effectCfg.effectOffset;\r\n      ripplePath.animate('', true).when(effectCfg.period, {\r\n        scaleX: effectCfg.rippleScale / 2,\r\n        scaleY: effectCfg.rippleScale / 2\r\n      }).delay(delay).start();\r\n      ripplePath.animateStyle(true).when(effectCfg.period, {\r\n        opacity: 0\r\n      }).delay(delay).start();\r\n      rippleGroup.add(ripplePath);\r\n    }\r\n\r\n    updateRipplePath(rippleGroup, effectCfg);\r\n  };\r\n  /**\r\n   * Update effect symbol\r\n   */\r\n\r\n\r\n  EffectSymbol.prototype.updateEffectAnimation = function (effectCfg) {\r\n    var oldEffectCfg = this._effectCfg;\r\n    var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\r\n\r\n    var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale', 'rippleNumber'];\r\n\r\n    for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\r\n      var propName = DIFFICULT_PROPS[i];\r\n\r\n      if (oldEffectCfg[propName] !== effectCfg[propName]) {\r\n        this.stopEffectAnimation();\r\n        this.startEffectAnimation(effectCfg);\r\n        return;\r\n      }\r\n    }\r\n\r\n    updateRipplePath(rippleGroup, effectCfg);\r\n  };\r\n  /**\r\n   * Highlight symbol\r\n   */\r\n\r\n\r\n  EffectSymbol.prototype.highlight = function () {\r\n    enterEmphasis(this);\r\n  };\r\n  /**\r\n   * Downplay symbol\r\n   */\r\n\r\n\r\n  EffectSymbol.prototype.downplay = function () {\r\n    leaveEmphasis(this);\r\n  };\r\n\r\n  EffectSymbol.prototype.getSymbolType = function () {\r\n    var symbol = this.childAt(0);\r\n    return symbol && symbol.getSymbolType();\r\n  };\r\n  /**\r\n   * Update symbol properties\r\n   */\r\n\r\n\r\n  EffectSymbol.prototype.updateData = function (data, idx) {\r\n    var _this = this;\r\n\r\n    var seriesModel = data.hostModel;\r\n    this.childAt(0).updateData(data, idx);\r\n    var rippleGroup = this.childAt(1);\r\n    var itemModel = data.getItemModel(idx);\r\n    var symbolType = data.getItemVisual(idx, 'symbol');\r\n    var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\r\n    var symbolStyle = data.getItemVisual(idx, 'style');\r\n    var color = symbolStyle && symbolStyle.fill;\r\n    rippleGroup.setScale(symbolSize);\r\n    rippleGroup.traverse(function (ripplePath) {\r\n      ripplePath.setStyle('fill', color);\r\n    });\r\n    var symbolOffset = normalizeSymbolOffset(data.getItemVisual(idx, 'symbolOffset'), symbolSize);\r\n\r\n    if (symbolOffset) {\r\n      rippleGroup.x = symbolOffset[0];\r\n      rippleGroup.y = symbolOffset[1];\r\n    }\r\n\r\n    var symbolRotate = data.getItemVisual(idx, 'symbolRotate');\r\n    rippleGroup.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\r\n    var effectCfg = {};\r\n    effectCfg.showEffectOn = seriesModel.get('showEffectOn');\r\n    effectCfg.rippleScale = itemModel.get(['rippleEffect', 'scale']);\r\n    effectCfg.brushType = itemModel.get(['rippleEffect', 'brushType']);\r\n    effectCfg.period = itemModel.get(['rippleEffect', 'period']) * 1000;\r\n    effectCfg.effectOffset = idx / data.count();\r\n    effectCfg.z = seriesModel.getShallow('z') || 0;\r\n    effectCfg.zlevel = seriesModel.getShallow('zlevel') || 0;\r\n    effectCfg.symbolType = symbolType;\r\n    effectCfg.color = color;\r\n    effectCfg.rippleEffectColor = itemModel.get(['rippleEffect', 'color']);\r\n    effectCfg.rippleNumber = itemModel.get(['rippleEffect', 'number']);\r\n    this.off('mouseover').off('mouseout').off('emphasis').off('normal');\r\n\r\n    if (effectCfg.showEffectOn === 'render') {\r\n      this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\r\n      this._effectCfg = effectCfg;\r\n    } else {\r\n      // Not keep old effect config\r\n      this._effectCfg = null;\r\n      this.stopEffectAnimation();\r\n\r\n      this.onHoverStateChange = function (toState) {\r\n        if (toState === 'emphasis') {\r\n          if (effectCfg.showEffectOn !== 'render') {\r\n            _this.startEffectAnimation(effectCfg);\r\n          }\r\n        } else if (toState === 'normal') {\r\n          if (effectCfg.showEffectOn !== 'render') {\r\n            _this.stopEffectAnimation();\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    this._effectCfg = effectCfg;\r\n    enableHoverEmphasis(this);\r\n  };\r\n\r\n  ;\r\n\r\n  EffectSymbol.prototype.fadeOut = function (cb) {\r\n    this.off('mouseover').off('mouseout');\r\n    cb && cb();\r\n  };\r\n\r\n  ;\r\n  return EffectSymbol;\r\n}(Group);\r\n\r\nexport default EffectSymbol;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport SymbolDraw from '../helper/SymbolDraw';\r\nimport EffectSymbol from '../helper/EffectSymbol';\r\nimport * as matrix from 'zrender/lib/core/matrix';\r\nimport pointsLayout from '../../layout/points';\r\nimport ChartView from '../../view/Chart';\r\n\r\nvar EffectScatterView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(EffectScatterView, _super);\r\n\r\n  function EffectScatterView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = EffectScatterView.type;\r\n    return _this;\r\n  }\r\n\r\n  EffectScatterView.prototype.init = function () {\r\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\r\n  };\r\n\r\n  EffectScatterView.prototype.render = function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n    var effectSymbolDraw = this._symbolDraw;\r\n    effectSymbolDraw.updateData(data, {\r\n      clipShape: this._getClipShape(seriesModel)\r\n    });\r\n    this.group.add(effectSymbolDraw.group);\r\n  };\r\n\r\n  EffectScatterView.prototype._getClipShape = function (seriesModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var clipArea = coordSys && coordSys.getArea && coordSys.getArea();\r\n    return seriesModel.get('clip', true) ? clipArea : null;\r\n  };\r\n\r\n  EffectScatterView.prototype.updateTransform = function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n    this.group.dirty();\r\n    var res = pointsLayout('').reset(seriesModel, ecModel, api);\r\n\r\n    if (res.progress) {\r\n      res.progress({\r\n        start: 0,\r\n        end: data.count(),\r\n        count: data.count()\r\n      }, data);\r\n    }\r\n\r\n    this._symbolDraw.updateLayout();\r\n  };\r\n\r\n  EffectScatterView.prototype._updateGroupTransform = function (seriesModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (coordSys && coordSys.getRoamTransform) {\r\n      this.group.transform = matrix.clone(coordSys.getRoamTransform());\r\n      this.group.decomposeTransform();\r\n    }\r\n  };\r\n\r\n  EffectScatterView.prototype.remove = function (ecModel, api) {\r\n    this._symbolDraw && this._symbolDraw.remove(true);\r\n  };\r\n\r\n  EffectScatterView.type = 'effectScatter';\r\n  return EffectScatterView;\r\n}(ChartView);\r\n\r\nexport default EffectScatterView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport createSeriesData from '../helper/createSeriesData';\r\nimport SeriesModel from '../../model/Series';\r\n\r\nvar EffectScatterSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(EffectScatterSeriesModel, _super);\r\n\r\n  function EffectScatterSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = EffectScatterSeriesModel.type;\r\n    _this.hasSymbolVisual = true;\r\n    return _this;\r\n  }\r\n\r\n  EffectScatterSeriesModel.prototype.getInitialData = function (option, ecModel) {\r\n    return createSeriesData(null, this, {\r\n      useEncodeDefaulter: true\r\n    });\r\n  };\r\n\r\n  EffectScatterSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\r\n    return selectors.point(data.getItemLayout(dataIndex));\r\n  };\r\n\r\n  EffectScatterSeriesModel.type = 'series.effectScatter';\r\n  EffectScatterSeriesModel.dependencies = ['grid', 'polar'];\r\n  EffectScatterSeriesModel.defaultOption = {\r\n    coordinateSystem: 'cartesian2d',\r\n    zlevel: 0,\r\n    z: 2,\r\n    legendHoverLink: true,\r\n    effectType: 'ripple',\r\n    progressive: 0,\r\n    // When to show the effect, option: 'render'|'emphasis'\r\n    showEffectOn: 'render',\r\n    clip: true,\r\n    // Ripple effect config\r\n    rippleEffect: {\r\n      period: 4,\r\n      // Scale of ripple\r\n      scale: 2.5,\r\n      // Brush type can be fill or stroke\r\n      brushType: 'fill',\r\n      // Ripple number\r\n      number: 3\r\n    },\r\n    universalTransition: {\r\n      divideShape: 'clone'\r\n    },\r\n    // Cartesian coordinate system\r\n    // xAxisIndex: 0,\r\n    // yAxisIndex: 0,\r\n    // Polar coordinate system\r\n    // polarIndex: 0,\r\n    // Geo coordinate system\r\n    // geoIndex: 0,\r\n    // symbol: null,        // \u56FE\u5F62\u7C7B\u578B\r\n    symbolSize: 10 // \u56FE\u5F62\u5927\u5C0F\uFF0C\u534A\u5BBD\uFF08\u534A\u5F84\uFF09\u53C2\u6570\uFF0C\u5F53\u56FE\u5F62\u4E3A\u65B9\u5411\u6216\u83F1\u5F62\u5219\u603B\u5BBD\u5EA6\u4E3AsymbolSize * 2\r\n    // symbolRotate: null,  // \u56FE\u5F62\u65CB\u8F6C\u63A7\u5236\r\n    // itemStyle: {\r\n    //     opacity: 1\r\n    // }\r\n\r\n  };\r\n  return EffectScatterSeriesModel;\r\n}(SeriesModel);\r\n\r\nexport default EffectScatterSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport EffectScatterView from './EffectScatterView';\r\nimport EffectScatterSeriesModel from './EffectScatterSeries';\r\nimport layoutPoints from '../../layout/points';\r\nexport function install(registers) {\r\n  registers.registerChartView(EffectScatterView);\r\n  registers.registerSeriesModel(EffectScatterSeriesModel);\r\n  registers.registerLayout(layoutPoints('effectScatter'));\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * Provide effect for line\r\n */\r\n\r\nimport * as graphic from '../../util/graphic';\r\nimport Line from './Line';\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { createSymbol } from '../../util/symbol';\r\nimport * as vec2 from 'zrender/lib/core/vector';\r\nimport * as curveUtil from 'zrender/lib/core/curve';\r\n\r\nvar EffectLine =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(EffectLine, _super);\r\n\r\n  function EffectLine(lineData, idx, seriesScope) {\r\n    var _this = _super.call(this) || this;\r\n\r\n    _this.add(_this.createLine(lineData, idx, seriesScope));\r\n\r\n    _this._updateEffectSymbol(lineData, idx);\r\n\r\n    return _this;\r\n  }\r\n\r\n  EffectLine.prototype.createLine = function (lineData, idx, seriesScope) {\r\n    return new Line(lineData, idx, seriesScope);\r\n  };\r\n\r\n  EffectLine.prototype._updateEffectSymbol = function (lineData, idx) {\r\n    var itemModel = lineData.getItemModel(idx);\r\n    var effectModel = itemModel.getModel('effect');\r\n    var size = effectModel.get('symbolSize');\r\n    var symbolType = effectModel.get('symbol');\r\n\r\n    if (!zrUtil.isArray(size)) {\r\n      size = [size, size];\r\n    }\r\n\r\n    var lineStyle = lineData.getItemVisual(idx, 'style');\r\n    var color = effectModel.get('color') || lineStyle && lineStyle.stroke;\r\n    var symbol = this.childAt(1);\r\n\r\n    if (this._symbolType !== symbolType) {\r\n      // Remove previous\r\n      this.remove(symbol);\r\n      symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\r\n      symbol.z2 = 100;\r\n      symbol.culling = true;\r\n      this.add(symbol);\r\n    } // Symbol may be removed if loop is false\r\n\r\n\r\n    if (!symbol) {\r\n      return;\r\n    } // Shadow color is same with color in default\r\n\r\n\r\n    symbol.setStyle('shadowColor', color);\r\n    symbol.setStyle(effectModel.getItemStyle(['color']));\r\n    symbol.scaleX = size[0];\r\n    symbol.scaleY = size[1];\r\n    symbol.setColor(color);\r\n    this._symbolType = symbolType;\r\n    this._symbolScale = size;\r\n\r\n    this._updateEffectAnimation(lineData, effectModel, idx);\r\n  };\r\n\r\n  EffectLine.prototype._updateEffectAnimation = function (lineData, effectModel, idx) {\r\n    var symbol = this.childAt(1);\r\n\r\n    if (!symbol) {\r\n      return;\r\n    }\r\n\r\n    var self = this;\r\n    var points = lineData.getItemLayout(idx);\r\n    var period = effectModel.get('period') * 1000;\r\n    var loop = effectModel.get('loop');\r\n    var constantSpeed = effectModel.get('constantSpeed');\r\n    var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\r\n      return idx / lineData.count() * period / 3;\r\n    }); // Ignore when updating\r\n\r\n    symbol.ignore = true;\r\n\r\n    this._updateAnimationPoints(symbol, points);\r\n\r\n    if (constantSpeed > 0) {\r\n      period = this._getLineLength(symbol) / constantSpeed * 1000;\r\n    }\r\n\r\n    if (period !== this._period || loop !== this._loop) {\r\n      symbol.stopAnimation();\r\n\r\n      if (period > 0) {\r\n        var delayNum = void 0;\r\n\r\n        if (typeof delayExpr === 'function') {\r\n          delayNum = delayExpr(idx);\r\n        } else {\r\n          delayNum = delayExpr;\r\n        }\r\n\r\n        if (symbol.__t > 0) {\r\n          delayNum = -period * symbol.__t;\r\n        }\r\n\r\n        symbol.__t = 0;\r\n        var animator = symbol.animate('', loop).when(period, {\r\n          __t: 1\r\n        }).delay(delayNum).during(function () {\r\n          self._updateSymbolPosition(symbol);\r\n        });\r\n\r\n        if (!loop) {\r\n          animator.done(function () {\r\n            self.remove(symbol);\r\n          });\r\n        }\r\n\r\n        animator.start();\r\n      }\r\n    }\r\n\r\n    this._period = period;\r\n    this._loop = loop;\r\n  };\r\n\r\n  EffectLine.prototype._getLineLength = function (symbol) {\r\n    // Not so accurate\r\n    return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\r\n  };\r\n\r\n  EffectLine.prototype._updateAnimationPoints = function (symbol, points) {\r\n    symbol.__p1 = points[0];\r\n    symbol.__p2 = points[1];\r\n    symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\r\n  };\r\n\r\n  EffectLine.prototype.updateData = function (lineData, idx, seriesScope) {\r\n    this.childAt(0).updateData(lineData, idx, seriesScope);\r\n\r\n    this._updateEffectSymbol(lineData, idx);\r\n  };\r\n\r\n  EffectLine.prototype._updateSymbolPosition = function (symbol) {\r\n    var p1 = symbol.__p1;\r\n    var p2 = symbol.__p2;\r\n    var cp1 = symbol.__cp1;\r\n    var t = symbol.__t;\r\n    var pos = [symbol.x, symbol.y];\r\n    var lastPos = pos.slice();\r\n    var quadraticAt = curveUtil.quadraticAt;\r\n    var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\r\n    pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\r\n    pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\r\n\r\n    var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\r\n    var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\r\n    symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2; // enable continuity trail for 'line', 'rect', 'roundRect' symbolType\r\n\r\n    if (this._symbolType === 'line' || this._symbolType === 'rect' || this._symbolType === 'roundRect') {\r\n      if (symbol.__lastT !== undefined && symbol.__lastT < symbol.__t) {\r\n        symbol.scaleY = vec2.dist(lastPos, pos) * 1.05; // make sure the last segment render within endPoint\r\n\r\n        if (t === 1) {\r\n          pos[0] = lastPos[0] + (pos[0] - lastPos[0]) / 2;\r\n          pos[1] = lastPos[1] + (pos[1] - lastPos[1]) / 2;\r\n        }\r\n      } else if (symbol.__lastT === 1) {\r\n        // After first loop, symbol.__t does NOT start with 0, so connect p1 to pos directly.\r\n        symbol.scaleY = 2 * vec2.dist(p1, pos);\r\n      } else {\r\n        symbol.scaleY = this._symbolScale[1];\r\n      }\r\n    }\r\n\r\n    symbol.__lastT = symbol.__t;\r\n    symbol.ignore = false;\r\n    symbol.x = pos[0];\r\n    symbol.y = pos[1];\r\n  };\r\n\r\n  EffectLine.prototype.updateLayout = function (lineData, idx) {\r\n    this.childAt(0).updateLayout(lineData, idx);\r\n    var effectModel = lineData.getItemModel(idx).getModel('effect');\r\n\r\n    this._updateEffectAnimation(lineData, effectModel, idx);\r\n  };\r\n\r\n  return EffectLine;\r\n}(graphic.Group);\r\n\r\nexport default EffectLine;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as graphic from '../../util/graphic';\r\nimport { enableHoverEmphasis } from '../../util/states';\r\n\r\nvar Polyline =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(Polyline, _super);\r\n\r\n  function Polyline(lineData, idx, seriesScope) {\r\n    var _this = _super.call(this) || this;\r\n\r\n    _this._createPolyline(lineData, idx, seriesScope);\r\n\r\n    return _this;\r\n  }\r\n\r\n  Polyline.prototype._createPolyline = function (lineData, idx, seriesScope) {\r\n    // let seriesModel = lineData.hostModel;\r\n    var points = lineData.getItemLayout(idx);\r\n    var line = new graphic.Polyline({\r\n      shape: {\r\n        points: points\r\n      }\r\n    });\r\n    this.add(line);\r\n\r\n    this._updateCommonStl(lineData, idx, seriesScope);\r\n  };\r\n\r\n  ;\r\n\r\n  Polyline.prototype.updateData = function (lineData, idx, seriesScope) {\r\n    var seriesModel = lineData.hostModel;\r\n    var line = this.childAt(0);\r\n    var target = {\r\n      shape: {\r\n        points: lineData.getItemLayout(idx)\r\n      }\r\n    };\r\n    graphic.updateProps(line, target, seriesModel, idx);\r\n\r\n    this._updateCommonStl(lineData, idx, seriesScope);\r\n  };\r\n\r\n  ;\r\n\r\n  Polyline.prototype._updateCommonStl = function (lineData, idx, seriesScope) {\r\n    var line = this.childAt(0);\r\n    var itemModel = lineData.getItemModel(idx);\r\n    var hoverLineStyle = seriesScope && seriesScope.emphasisLineStyle;\r\n\r\n    if (!seriesScope || lineData.hasItemOption) {\r\n      hoverLineStyle = itemModel.getModel(['emphasis', 'lineStyle']).getLineStyle();\r\n    }\r\n\r\n    line.useStyle(lineData.getItemVisual(idx, 'style'));\r\n    line.style.fill = null;\r\n    line.style.strokeNoScale = true;\r\n    var lineEmphasisState = line.ensureState('emphasis');\r\n    lineEmphasisState.style = hoverLineStyle;\r\n    enableHoverEmphasis(this);\r\n  };\r\n\r\n  ;\r\n\r\n  Polyline.prototype.updateLayout = function (lineData, idx) {\r\n    var polyline = this.childAt(0);\r\n    polyline.setShape('points', lineData.getItemLayout(idx));\r\n  };\r\n\r\n  ;\r\n  return Polyline;\r\n}(graphic.Group);\r\n\r\nexport default Polyline;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport Polyline from './Polyline';\r\nimport EffectLine from './EffectLine';\r\nimport * as vec2 from 'zrender/lib/core/vector';\r\n\r\nvar EffectPolyline =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(EffectPolyline, _super);\r\n\r\n  function EffectPolyline() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this._lastFrame = 0;\r\n    _this._lastFramePercent = 0;\r\n    return _this;\r\n  } // Override\r\n\r\n\r\n  EffectPolyline.prototype.createLine = function (lineData, idx, seriesScope) {\r\n    return new Polyline(lineData, idx, seriesScope);\r\n  };\r\n\r\n  ; // Override\r\n\r\n  EffectPolyline.prototype._updateAnimationPoints = function (symbol, points) {\r\n    this._points = points;\r\n    var accLenArr = [0];\r\n    var len = 0;\r\n\r\n    for (var i = 1; i < points.length; i++) {\r\n      var p1 = points[i - 1];\r\n      var p2 = points[i];\r\n      len += vec2.dist(p1, p2);\r\n      accLenArr.push(len);\r\n    }\r\n\r\n    if (len === 0) {\r\n      this._length = 0;\r\n      return;\r\n    }\r\n\r\n    for (var i = 0; i < accLenArr.length; i++) {\r\n      accLenArr[i] /= len;\r\n    }\r\n\r\n    this._offsets = accLenArr;\r\n    this._length = len;\r\n  };\r\n\r\n  ; // Override\r\n\r\n  EffectPolyline.prototype._getLineLength = function () {\r\n    return this._length;\r\n  };\r\n\r\n  ; // Override\r\n\r\n  EffectPolyline.prototype._updateSymbolPosition = function (symbol) {\r\n    var t = symbol.__t;\r\n    var points = this._points;\r\n    var offsets = this._offsets;\r\n    var len = points.length;\r\n\r\n    if (!offsets) {\r\n      // Has length 0\r\n      return;\r\n    }\r\n\r\n    var lastFrame = this._lastFrame;\r\n    var frame;\r\n\r\n    if (t < this._lastFramePercent) {\r\n      // Start from the next frame\r\n      // PENDING start from lastFrame ?\r\n      var start = Math.min(lastFrame + 1, len - 1);\r\n\r\n      for (frame = start; frame >= 0; frame--) {\r\n        if (offsets[frame] <= t) {\r\n          break;\r\n        }\r\n      } // PENDING really need to do this ?\r\n\r\n\r\n      frame = Math.min(frame, len - 2);\r\n    } else {\r\n      for (frame = lastFrame; frame < len; frame++) {\r\n        if (offsets[frame] > t) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      frame = Math.min(frame - 1, len - 2);\r\n    }\r\n\r\n    var p = (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]);\r\n    var p0 = points[frame];\r\n    var p1 = points[frame + 1];\r\n    symbol.x = p0[0] * (1 - p) + p * p1[0];\r\n    symbol.y = p0[1] * (1 - p) + p * p1[1];\r\n    var tx = p1[0] - p0[0];\r\n    var ty = p1[1] - p0[1];\r\n    symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\r\n    this._lastFrame = frame;\r\n    this._lastFramePercent = t;\r\n    symbol.ignore = false;\r\n  };\r\n\r\n  ;\r\n  return EffectPolyline;\r\n}(EffectLine);\r\n\r\nexport default EffectPolyline;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\"; // TODO Batch by color\r\n\r\nimport * as graphic from '../../util/graphic';\r\nimport IncrementalDisplayable from 'zrender/lib/graphic/IncrementalDisplayable';\r\nimport * as lineContain from 'zrender/lib/contain/line';\r\nimport * as quadraticContain from 'zrender/lib/contain/quadratic';\r\nimport { getECData } from '../../util/innerStore';\r\n\r\nvar LargeLinesPathShape =\r\n/** @class */\r\nfunction () {\r\n  function LargeLinesPathShape() {\r\n    this.polyline = false;\r\n    this.curveness = 0;\r\n    this.segs = [];\r\n  }\r\n\r\n  return LargeLinesPathShape;\r\n}();\r\n\r\nvar LargeLinesPath =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(LargeLinesPath, _super);\r\n\r\n  function LargeLinesPath(opts) {\r\n    return _super.call(this, opts) || this;\r\n  }\r\n\r\n  LargeLinesPath.prototype.getDefaultStyle = function () {\r\n    return {\r\n      stroke: '#000',\r\n      fill: null\r\n    };\r\n  };\r\n\r\n  LargeLinesPath.prototype.getDefaultShape = function () {\r\n    return new LargeLinesPathShape();\r\n  };\r\n\r\n  LargeLinesPath.prototype.buildPath = function (ctx, shape) {\r\n    var segs = shape.segs;\r\n    var curveness = shape.curveness;\r\n\r\n    if (shape.polyline) {\r\n      for (var i = 0; i < segs.length;) {\r\n        var count = segs[i++];\r\n\r\n        if (count > 0) {\r\n          ctx.moveTo(segs[i++], segs[i++]);\r\n\r\n          for (var k = 1; k < count; k++) {\r\n            ctx.lineTo(segs[i++], segs[i++]);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      for (var i = 0; i < segs.length;) {\r\n        var x0 = segs[i++];\r\n        var y0 = segs[i++];\r\n        var x1 = segs[i++];\r\n        var y1 = segs[i++];\r\n        ctx.moveTo(x0, y0);\r\n\r\n        if (curveness > 0) {\r\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\r\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\r\n          ctx.quadraticCurveTo(x2, y2, x1, y1);\r\n        } else {\r\n          ctx.lineTo(x1, y1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  LargeLinesPath.prototype.findDataIndex = function (x, y) {\r\n    var shape = this.shape;\r\n    var segs = shape.segs;\r\n    var curveness = shape.curveness;\r\n    var lineWidth = this.style.lineWidth;\r\n\r\n    if (shape.polyline) {\r\n      var dataIndex = 0;\r\n\r\n      for (var i = 0; i < segs.length;) {\r\n        var count = segs[i++];\r\n\r\n        if (count > 0) {\r\n          var x0 = segs[i++];\r\n          var y0 = segs[i++];\r\n\r\n          for (var k = 1; k < count; k++) {\r\n            var x1 = segs[i++];\r\n            var y1 = segs[i++];\r\n\r\n            if (lineContain.containStroke(x0, y0, x1, y1, lineWidth, x, y)) {\r\n              return dataIndex;\r\n            }\r\n          }\r\n        }\r\n\r\n        dataIndex++;\r\n      }\r\n    } else {\r\n      var dataIndex = 0;\r\n\r\n      for (var i = 0; i < segs.length;) {\r\n        var x0 = segs[i++];\r\n        var y0 = segs[i++];\r\n        var x1 = segs[i++];\r\n        var y1 = segs[i++];\r\n\r\n        if (curveness > 0) {\r\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\r\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\r\n\r\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1, lineWidth, x, y)) {\r\n            return dataIndex;\r\n          }\r\n        } else {\r\n          if (lineContain.containStroke(x0, y0, x1, y1, lineWidth, x, y)) {\r\n            return dataIndex;\r\n          }\r\n        }\r\n\r\n        dataIndex++;\r\n      }\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  return LargeLinesPath;\r\n}(graphic.Path);\r\n\r\nvar LargeLineDraw =\r\n/** @class */\r\nfunction () {\r\n  function LargeLineDraw() {\r\n    this.group = new graphic.Group();\r\n  }\r\n\r\n  LargeLineDraw.prototype.isPersistent = function () {\r\n    return !this._incremental;\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Update symbols draw by new data\r\n   */\r\n\r\n  LargeLineDraw.prototype.updateData = function (data) {\r\n    this.group.removeAll();\r\n    var lineEl = new LargeLinesPath({\r\n      rectHover: true,\r\n      cursor: 'default'\r\n    });\r\n    lineEl.setShape({\r\n      segs: data.getLayout('linesPoints')\r\n    });\r\n\r\n    this._setCommon(lineEl, data); // Add back\r\n\r\n\r\n    this.group.add(lineEl);\r\n    this._incremental = null;\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * @override\r\n   */\r\n\r\n  LargeLineDraw.prototype.incrementalPrepareUpdate = function (data) {\r\n    this.group.removeAll();\r\n\r\n    this._clearIncremental();\r\n\r\n    if (data.count() > 5e5) {\r\n      if (!this._incremental) {\r\n        this._incremental = new IncrementalDisplayable({\r\n          silent: true\r\n        });\r\n      }\r\n\r\n      this.group.add(this._incremental);\r\n    } else {\r\n      this._incremental = null;\r\n    }\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * @override\r\n   */\r\n\r\n  LargeLineDraw.prototype.incrementalUpdate = function (taskParams, data) {\r\n    var lineEl = new LargeLinesPath();\r\n    lineEl.setShape({\r\n      segs: data.getLayout('linesPoints')\r\n    });\r\n\r\n    this._setCommon(lineEl, data, !!this._incremental);\r\n\r\n    if (!this._incremental) {\r\n      lineEl.rectHover = true;\r\n      lineEl.cursor = 'default';\r\n      lineEl.__startIndex = taskParams.start;\r\n      this.group.add(lineEl);\r\n    } else {\r\n      this._incremental.addDisplayable(lineEl, true);\r\n    }\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * @override\r\n   */\r\n\r\n  LargeLineDraw.prototype.remove = function () {\r\n    this._clearIncremental();\r\n\r\n    this._incremental = null;\r\n    this.group.removeAll();\r\n  };\r\n\r\n  ;\r\n\r\n  LargeLineDraw.prototype._setCommon = function (lineEl, data, isIncremental) {\r\n    var hostModel = data.hostModel;\r\n    lineEl.setShape({\r\n      polyline: hostModel.get('polyline'),\r\n      curveness: hostModel.get(['lineStyle', 'curveness'])\r\n    });\r\n    lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\r\n    lineEl.style.strokeNoScale = true;\r\n    var style = data.getVisual('style');\r\n\r\n    if (style && style.stroke) {\r\n      lineEl.setStyle('stroke', style.stroke);\r\n    }\r\n\r\n    lineEl.setStyle('fill', null);\r\n\r\n    if (!isIncremental) {\r\n      var ecData_1 = getECData(lineEl); // Enable tooltip\r\n      // PENDING May have performance issue when path is extremely large\r\n\r\n      ecData_1.seriesIndex = hostModel.seriesIndex;\r\n      lineEl.on('mousemove', function (e) {\r\n        ecData_1.dataIndex = null;\r\n        var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\r\n\r\n        if (dataIndex > 0) {\r\n          // Provide dataIndex for tooltip\r\n          ecData_1.dataIndex = dataIndex + lineEl.__startIndex;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  ;\r\n\r\n  LargeLineDraw.prototype._clearIncremental = function () {\r\n    var incremental = this._incremental;\r\n\r\n    if (incremental) {\r\n      incremental.clearDisplaybles();\r\n    }\r\n  };\r\n\r\n  ;\r\n  return LargeLineDraw;\r\n}();\r\n\r\nexport default LargeLineDraw;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/* global Float32Array */\r\nimport createRenderPlanner from '../helper/createRenderPlanner';\r\nvar linesLayout = {\r\n  seriesType: 'lines',\r\n  plan: createRenderPlanner(),\r\n  reset: function (seriesModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var isPolyline = seriesModel.get('polyline');\r\n    var isLarge = seriesModel.pipelineContext.large;\r\n    return {\r\n      progress: function (params, lineData) {\r\n        var lineCoords = [];\r\n\r\n        if (isLarge) {\r\n          var points = void 0;\r\n          var segCount = params.end - params.start;\r\n\r\n          if (isPolyline) {\r\n            var totalCoordsCount = 0;\r\n\r\n            for (var i = params.start; i < params.end; i++) {\r\n              totalCoordsCount += seriesModel.getLineCoordsCount(i);\r\n            }\r\n\r\n            points = new Float32Array(segCount + totalCoordsCount * 2);\r\n          } else {\r\n            points = new Float32Array(segCount * 4);\r\n          }\r\n\r\n          var offset = 0;\r\n          var pt = [];\r\n\r\n          for (var i = params.start; i < params.end; i++) {\r\n            var len = seriesModel.getLineCoords(i, lineCoords);\r\n\r\n            if (isPolyline) {\r\n              points[offset++] = len;\r\n            }\r\n\r\n            for (var k = 0; k < len; k++) {\r\n              pt = coordSys.dataToPoint(lineCoords[k], false, pt);\r\n              points[offset++] = pt[0];\r\n              points[offset++] = pt[1];\r\n            }\r\n          }\r\n\r\n          lineData.setLayout('linesPoints', points);\r\n        } else {\r\n          for (var i = params.start; i < params.end; i++) {\r\n            var itemModel = lineData.getItemModel(i);\r\n            var len = seriesModel.getLineCoords(i, lineCoords);\r\n            var pts = [];\r\n\r\n            if (isPolyline) {\r\n              for (var j = 0; j < len; j++) {\r\n                pts.push(coordSys.dataToPoint(lineCoords[j]));\r\n              }\r\n            } else {\r\n              pts[0] = coordSys.dataToPoint(lineCoords[0]);\r\n              pts[1] = coordSys.dataToPoint(lineCoords[1]);\r\n              var curveness = itemModel.get(['lineStyle', 'curveness']);\r\n\r\n              if (+curveness) {\r\n                pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\r\n              }\r\n            }\r\n\r\n            lineData.setItemLayout(i, pts);\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n};\r\nexport default linesLayout;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport LineDraw from '../helper/LineDraw';\r\nimport EffectLine from '../helper/EffectLine';\r\nimport Line from '../helper/Line';\r\nimport Polyline from '../helper/Polyline';\r\nimport EffectPolyline from '../helper/EffectPolyline';\r\nimport LargeLineDraw from '../helper/LargeLineDraw';\r\nimport linesLayout from './linesLayout';\r\nimport { createClipPath } from '../helper/createClipPathFromCoordSys';\r\nimport ChartView from '../../view/Chart';\r\n\r\nvar LinesView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(LinesView, _super);\r\n\r\n  function LinesView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = LinesView.type;\r\n    return _this;\r\n  }\r\n\r\n  LinesView.prototype.render = function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n\r\n    var lineDraw = this._updateLineDraw(data, seriesModel);\r\n\r\n    var zlevel = seriesModel.get('zlevel');\r\n    var trailLength = seriesModel.get(['effect', 'trailLength']);\r\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\r\n    // FIXME Better way ?\r\n    // SVG doesn't support\r\n\r\n    var isSvg = zr.painter.getType() === 'svg';\r\n\r\n    if (!isSvg) {\r\n      zr.painter.getLayer(zlevel).clear(true);\r\n    } // Config layer with motion blur\r\n\r\n\r\n    if (this._lastZlevel != null && !isSvg) {\r\n      zr.configLayer(this._lastZlevel, {\r\n        motionBlur: false\r\n      });\r\n    }\r\n\r\n    if (this._showEffect(seriesModel) && trailLength) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        var notInIndividual_1 = false;\r\n        ecModel.eachSeries(function (otherSeriesModel) {\r\n          if (otherSeriesModel !== seriesModel && otherSeriesModel.get('zlevel') === zlevel) {\r\n            notInIndividual_1 = true;\r\n          }\r\n        });\r\n        notInIndividual_1 && console.warn('Lines with trail effect should have an individual zlevel');\r\n      }\r\n\r\n      if (!isSvg) {\r\n        zr.configLayer(zlevel, {\r\n          motionBlur: true,\r\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\r\n        });\r\n      }\r\n    }\r\n\r\n    lineDraw.updateData(data);\r\n    var clipPath = seriesModel.get('clip', true) && createClipPath(seriesModel.coordinateSystem, false, seriesModel);\r\n\r\n    if (clipPath) {\r\n      this.group.setClipPath(clipPath);\r\n    } else {\r\n      this.group.removeClipPath();\r\n    }\r\n\r\n    this._lastZlevel = zlevel;\r\n    this._finished = true;\r\n  };\r\n\r\n  LinesView.prototype.incrementalPrepareRender = function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n\r\n    var lineDraw = this._updateLineDraw(data, seriesModel);\r\n\r\n    lineDraw.incrementalPrepareUpdate(data);\r\n\r\n    this._clearLayer(api);\r\n\r\n    this._finished = false;\r\n  };\r\n\r\n  LinesView.prototype.incrementalRender = function (taskParams, seriesModel, ecModel) {\r\n    this._lineDraw.incrementalUpdate(taskParams, seriesModel.getData());\r\n\r\n    this._finished = taskParams.end === seriesModel.getData().count();\r\n  };\r\n\r\n  LinesView.prototype.updateTransform = function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n    var pipelineContext = seriesModel.pipelineContext;\r\n\r\n    if (!this._finished || pipelineContext.large || pipelineContext.progressiveRender) {\r\n      // TODO Don't have to do update in large mode. Only do it when there are millions of data.\r\n      return {\r\n        update: true\r\n      };\r\n    } else {\r\n      // TODO Use same logic with ScatterView.\r\n      // Manually update layout\r\n      var res = linesLayout.reset(seriesModel, ecModel, api);\r\n\r\n      if (res.progress) {\r\n        res.progress({\r\n          start: 0,\r\n          end: data.count(),\r\n          count: data.count()\r\n        }, data);\r\n      } // Not in large mode\r\n\r\n\r\n      this._lineDraw.updateLayout();\r\n\r\n      this._clearLayer(api);\r\n    }\r\n  };\r\n\r\n  LinesView.prototype._updateLineDraw = function (data, seriesModel) {\r\n    var lineDraw = this._lineDraw;\r\n\r\n    var hasEffect = this._showEffect(seriesModel);\r\n\r\n    var isPolyline = !!seriesModel.get('polyline');\r\n    var pipelineContext = seriesModel.pipelineContext;\r\n    var isLargeDraw = pipelineContext.large;\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (hasEffect && isLargeDraw) {\r\n        console.warn('Large lines not support effect');\r\n      }\r\n    }\r\n\r\n    if (!lineDraw || hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLargeDraw !== this._isLargeDraw) {\r\n      if (lineDraw) {\r\n        lineDraw.remove();\r\n      }\r\n\r\n      lineDraw = this._lineDraw = isLargeDraw ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\r\n      this._hasEffet = hasEffect;\r\n      this._isPolyline = isPolyline;\r\n      this._isLargeDraw = isLargeDraw;\r\n    }\r\n\r\n    this.group.add(lineDraw.group);\r\n    return lineDraw;\r\n  };\r\n\r\n  LinesView.prototype._showEffect = function (seriesModel) {\r\n    return !!seriesModel.get(['effect', 'show']);\r\n  };\r\n\r\n  LinesView.prototype._clearLayer = function (api) {\r\n    // Not use motion when dragging or zooming\r\n    var zr = api.getZr();\r\n    var isSvg = zr.painter.getType() === 'svg';\r\n\r\n    if (!isSvg && this._lastZlevel != null) {\r\n      zr.painter.getLayer(this._lastZlevel).clear(true);\r\n    }\r\n  };\r\n\r\n  LinesView.prototype.remove = function (ecModel, api) {\r\n    this._lineDraw && this._lineDraw.remove();\r\n    this._lineDraw = null; // Clear motion when lineDraw is removed\r\n\r\n    this._clearLayer(api);\r\n  };\r\n\r\n  LinesView.prototype.dispose = function (ecModel, api) {\r\n    this.remove(ecModel, api);\r\n  };\r\n\r\n  LinesView.type = 'lines';\r\n  return LinesView;\r\n}(ChartView);\r\n\r\nexport default LinesView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\n/* global Uint32Array, Float64Array, Float32Array */\r\n\r\nimport SeriesModel from '../../model/Series';\r\nimport SeriesData from '../../data/SeriesData';\r\nimport { concatArray, mergeAll, map } from 'zrender/lib/core/util';\r\nimport CoordinateSystem from '../../core/CoordinateSystem';\r\nimport { createTooltipMarkup } from '../../component/tooltip/tooltipMarkup';\r\nvar Uint32Arr = typeof Uint32Array === 'undefined' ? Array : Uint32Array;\r\nvar Float64Arr = typeof Float64Array === 'undefined' ? Array : Float64Array;\r\n\r\nfunction compatEc2(seriesOpt) {\r\n  var data = seriesOpt.data;\r\n\r\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      console.warn('Lines data configuration has been changed to' + ' { coords:[[1,2],[2,3]] }');\r\n    }\r\n\r\n    seriesOpt.data = map(data, function (itemOpt) {\r\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\r\n      var target = {\r\n        coords: coords\r\n      };\r\n\r\n      if (itemOpt[0].name) {\r\n        target.fromName = itemOpt[0].name;\r\n      }\r\n\r\n      if (itemOpt[1].name) {\r\n        target.toName = itemOpt[1].name;\r\n      }\r\n\r\n      return mergeAll([target, itemOpt[0], itemOpt[1]]);\r\n    });\r\n  }\r\n}\r\n\r\nvar LinesSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(LinesSeriesModel, _super);\r\n\r\n  function LinesSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = LinesSeriesModel.type;\r\n    _this.visualStyleAccessPath = 'lineStyle';\r\n    _this.visualDrawType = 'stroke';\r\n    return _this;\r\n  }\r\n\r\n  LinesSeriesModel.prototype.init = function (option) {\r\n    // The input data may be null/undefined.\r\n    option.data = option.data || []; // Not using preprocessor because mergeOption may not have series.type\r\n\r\n    compatEc2(option);\r\n\r\n    var result = this._processFlatCoordsArray(option.data);\r\n\r\n    this._flatCoords = result.flatCoords;\r\n    this._flatCoordsOffset = result.flatCoordsOffset;\r\n\r\n    if (result.flatCoords) {\r\n      option.data = new Float32Array(result.count);\r\n    }\r\n\r\n    _super.prototype.init.apply(this, arguments);\r\n  };\r\n\r\n  LinesSeriesModel.prototype.mergeOption = function (option) {\r\n    compatEc2(option);\r\n\r\n    if (option.data) {\r\n      // Only update when have option data to merge.\r\n      var result = this._processFlatCoordsArray(option.data);\r\n\r\n      this._flatCoords = result.flatCoords;\r\n      this._flatCoordsOffset = result.flatCoordsOffset;\r\n\r\n      if (result.flatCoords) {\r\n        option.data = new Float32Array(result.count);\r\n      }\r\n    }\r\n\r\n    _super.prototype.mergeOption.apply(this, arguments);\r\n  };\r\n\r\n  LinesSeriesModel.prototype.appendData = function (params) {\r\n    var result = this._processFlatCoordsArray(params.data);\r\n\r\n    if (result.flatCoords) {\r\n      if (!this._flatCoords) {\r\n        this._flatCoords = result.flatCoords;\r\n        this._flatCoordsOffset = result.flatCoordsOffset;\r\n      } else {\r\n        this._flatCoords = concatArray(this._flatCoords, result.flatCoords);\r\n        this._flatCoordsOffset = concatArray(this._flatCoordsOffset, result.flatCoordsOffset);\r\n      }\r\n\r\n      params.data = new Float32Array(result.count);\r\n    }\r\n\r\n    this.getRawData().appendData(params.data);\r\n  };\r\n\r\n  LinesSeriesModel.prototype._getCoordsFromItemModel = function (idx) {\r\n    var itemModel = this.getData().getItemModel(idx);\r\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (!(coords instanceof Array && coords.length > 0 && coords[0] instanceof Array)) {\r\n        throw new Error('Invalid coords ' + JSON.stringify(coords) + '. Lines must have 2d coords array in data item.');\r\n      }\r\n    }\r\n\r\n    return coords;\r\n  };\r\n\r\n  LinesSeriesModel.prototype.getLineCoordsCount = function (idx) {\r\n    if (this._flatCoordsOffset) {\r\n      return this._flatCoordsOffset[idx * 2 + 1];\r\n    } else {\r\n      return this._getCoordsFromItemModel(idx).length;\r\n    }\r\n  };\r\n\r\n  LinesSeriesModel.prototype.getLineCoords = function (idx, out) {\r\n    if (this._flatCoordsOffset) {\r\n      var offset = this._flatCoordsOffset[idx * 2];\r\n      var len = this._flatCoordsOffset[idx * 2 + 1];\r\n\r\n      for (var i = 0; i < len; i++) {\r\n        out[i] = out[i] || [];\r\n        out[i][0] = this._flatCoords[offset + i * 2];\r\n        out[i][1] = this._flatCoords[offset + i * 2 + 1];\r\n      }\r\n\r\n      return len;\r\n    } else {\r\n      var coords = this._getCoordsFromItemModel(idx);\r\n\r\n      for (var i = 0; i < coords.length; i++) {\r\n        out[i] = out[i] || [];\r\n        out[i][0] = coords[i][0];\r\n        out[i][1] = coords[i][1];\r\n      }\r\n\r\n      return coords.length;\r\n    }\r\n  };\r\n\r\n  LinesSeriesModel.prototype._processFlatCoordsArray = function (data) {\r\n    var startOffset = 0;\r\n\r\n    if (this._flatCoords) {\r\n      startOffset = this._flatCoords.length;\r\n    } // Stored as a typed array. In format\r\n    // Points Count(2) | x | y | x | y | Points Count(3) | x |  y | x | y | x | y |\r\n\r\n\r\n    if (typeof data[0] === 'number') {\r\n      var len = data.length; // Store offset and len of each segment\r\n\r\n      var coordsOffsetAndLenStorage = new Uint32Arr(len);\r\n      var coordsStorage = new Float64Arr(len);\r\n      var coordsCursor = 0;\r\n      var offsetCursor = 0;\r\n      var dataCount = 0;\r\n\r\n      for (var i = 0; i < len;) {\r\n        dataCount++;\r\n        var count = data[i++]; // Offset\r\n\r\n        coordsOffsetAndLenStorage[offsetCursor++] = coordsCursor + startOffset; // Len\r\n\r\n        coordsOffsetAndLenStorage[offsetCursor++] = count;\r\n\r\n        for (var k = 0; k < count; k++) {\r\n          var x = data[i++];\r\n          var y = data[i++];\r\n          coordsStorage[coordsCursor++] = x;\r\n          coordsStorage[coordsCursor++] = y;\r\n\r\n          if (i > len) {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n              throw new Error('Invalid data format.');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        flatCoordsOffset: new Uint32Array(coordsOffsetAndLenStorage.buffer, 0, offsetCursor),\r\n        flatCoords: coordsStorage,\r\n        count: dataCount\r\n      };\r\n    }\r\n\r\n    return {\r\n      flatCoordsOffset: null,\r\n      flatCoords: null,\r\n      count: data.length\r\n    };\r\n  };\r\n\r\n  LinesSeriesModel.prototype.getInitialData = function (option, ecModel) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      var CoordSys = CoordinateSystem.get(option.coordinateSystem);\r\n\r\n      if (!CoordSys) {\r\n        throw new Error('Unkown coordinate system ' + option.coordinateSystem);\r\n      }\r\n    }\r\n\r\n    var lineData = new SeriesData(['value'], this);\r\n    lineData.hasItemOption = false;\r\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\r\n      // dataItem is simply coords\r\n      if (dataItem instanceof Array) {\r\n        return NaN;\r\n      } else {\r\n        lineData.hasItemOption = true;\r\n        var value = dataItem.value;\r\n\r\n        if (value != null) {\r\n          return value instanceof Array ? value[dimIndex] : value;\r\n        }\r\n      }\r\n    });\r\n    return lineData;\r\n  };\r\n\r\n  LinesSeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\r\n    var data = this.getData();\r\n    var itemModel = data.getItemModel(dataIndex);\r\n    var name = itemModel.get('name');\r\n\r\n    if (name) {\r\n      return name;\r\n    }\r\n\r\n    var fromName = itemModel.get('fromName');\r\n    var toName = itemModel.get('toName');\r\n    var nameArr = [];\r\n    fromName != null && nameArr.push(fromName);\r\n    toName != null && nameArr.push(toName);\r\n    return createTooltipMarkup('nameValue', {\r\n      name: nameArr.join(' > ')\r\n    });\r\n  };\r\n\r\n  LinesSeriesModel.prototype.preventIncremental = function () {\r\n    return !!this.get(['effect', 'show']);\r\n  };\r\n\r\n  LinesSeriesModel.prototype.getProgressive = function () {\r\n    var progressive = this.option.progressive;\r\n\r\n    if (progressive == null) {\r\n      return this.option.large ? 1e4 : this.get('progressive');\r\n    }\r\n\r\n    return progressive;\r\n  };\r\n\r\n  LinesSeriesModel.prototype.getProgressiveThreshold = function () {\r\n    var progressiveThreshold = this.option.progressiveThreshold;\r\n\r\n    if (progressiveThreshold == null) {\r\n      return this.option.large ? 2e4 : this.get('progressiveThreshold');\r\n    }\r\n\r\n    return progressiveThreshold;\r\n  };\r\n\r\n  LinesSeriesModel.type = 'series.lines';\r\n  LinesSeriesModel.dependencies = ['grid', 'polar', 'geo', 'calendar'];\r\n  LinesSeriesModel.defaultOption = {\r\n    coordinateSystem: 'geo',\r\n    zlevel: 0,\r\n    z: 2,\r\n    legendHoverLink: true,\r\n    // Cartesian coordinate system\r\n    xAxisIndex: 0,\r\n    yAxisIndex: 0,\r\n    symbol: ['none', 'none'],\r\n    symbolSize: [10, 10],\r\n    // Geo coordinate system\r\n    geoIndex: 0,\r\n    effect: {\r\n      show: false,\r\n      period: 4,\r\n      constantSpeed: 0,\r\n      symbol: 'circle',\r\n      symbolSize: 3,\r\n      loop: true,\r\n      trailLength: 0.2\r\n    },\r\n    large: false,\r\n    // Available when large is true\r\n    largeThreshold: 2000,\r\n    polyline: false,\r\n    clip: true,\r\n    label: {\r\n      show: false,\r\n      position: 'end' // distance: 5,\r\n      // formatter: \u6807\u7B7E\u6587\u672C\u683C\u5F0F\u5668\uFF0C\u540CTooltip.formatter\uFF0C\u4E0D\u652F\u6301\u5F02\u6B65\u56DE\u8C03\r\n\r\n    },\r\n    lineStyle: {\r\n      opacity: 0.5\r\n    }\r\n  };\r\n  return LinesSeriesModel;\r\n}(SeriesModel);\r\n\r\nexport default LinesSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nfunction normalize(a) {\r\n  if (!(a instanceof Array)) {\r\n    a = [a, a];\r\n  }\r\n\r\n  return a;\r\n}\r\n\r\nvar linesVisual = {\r\n  seriesType: 'lines',\r\n  reset: function (seriesModel) {\r\n    var symbolType = normalize(seriesModel.get('symbol'));\r\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\r\n    var data = seriesModel.getData();\r\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\r\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\r\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\r\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\r\n\r\n    function dataEach(data, idx) {\r\n      var itemModel = data.getItemModel(idx);\r\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\r\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\r\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\r\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\r\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\r\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\r\n    }\r\n\r\n    return {\r\n      dataEach: data.hasItemOption ? dataEach : null\r\n    };\r\n  }\r\n};\r\nexport default linesVisual;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport LinesView from './LinesView';\r\nimport LinesSeriesModel from './LinesSeries';\r\nimport linesLayout from './linesLayout';\r\nimport linesVisual from './linesVisual';\r\nexport function install(registers) {\r\n  registers.registerChartView(LinesView);\r\n  registers.registerSeriesModel(LinesSeriesModel);\r\n  registers.registerLayout(linesLayout);\r\n  registers.registerVisual(linesVisual);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/* global Uint8ClampedArray */\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nvar GRADIENT_LEVELS = 256;\r\n\r\nvar HeatmapLayer =\r\n/** @class */\r\nfunction () {\r\n  function HeatmapLayer() {\r\n    this.blurSize = 30;\r\n    this.pointSize = 20;\r\n    this.maxOpacity = 1;\r\n    this.minOpacity = 0;\r\n    this._gradientPixels = {\r\n      inRange: null,\r\n      outOfRange: null\r\n    };\r\n    var canvas = zrUtil.createCanvas();\r\n    this.canvas = canvas;\r\n  }\r\n  /**\r\n   * Renders Heatmap and returns the rendered canvas\r\n   * @param data array of data, each has x, y, value\r\n   * @param width canvas width\r\n   * @param height canvas height\r\n   */\r\n\r\n\r\n  HeatmapLayer.prototype.update = function (data, width, height, normalize, colorFunc, isInRange) {\r\n    var brush = this._getBrush();\r\n\r\n    var gradientInRange = this._getGradient(colorFunc, 'inRange');\r\n\r\n    var gradientOutOfRange = this._getGradient(colorFunc, 'outOfRange');\r\n\r\n    var r = this.pointSize + this.blurSize;\r\n    var canvas = this.canvas;\r\n    var ctx = canvas.getContext('2d');\r\n    var len = data.length;\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    for (var i = 0; i < len; ++i) {\r\n      var p = data[i];\r\n      var x = p[0];\r\n      var y = p[1];\r\n      var value = p[2]; // calculate alpha using value\r\n\r\n      var alpha = normalize(value); // draw with the circle brush with alpha\r\n\r\n      ctx.globalAlpha = alpha;\r\n      ctx.drawImage(brush, x - r, y - r);\r\n    }\r\n\r\n    if (!canvas.width || !canvas.height) {\r\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\r\n      // 'CanvasRenderingContext2D': The source height is 0.\"\r\n      return canvas;\r\n    } // colorize the canvas using alpha value and set with gradient\r\n\r\n\r\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n    var pixels = imageData.data;\r\n    var offset = 0;\r\n    var pixelLen = pixels.length;\r\n    var minOpacity = this.minOpacity;\r\n    var maxOpacity = this.maxOpacity;\r\n    var diffOpacity = maxOpacity - minOpacity;\r\n\r\n    while (offset < pixelLen) {\r\n      var alpha = pixels[offset + 3] / 256;\r\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\r\n\r\n      if (alpha > 0) {\r\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\r\n\r\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\r\n        pixels[offset++] = gradient[gradientOffset];\r\n        pixels[offset++] = gradient[gradientOffset + 1];\r\n        pixels[offset++] = gradient[gradientOffset + 2];\r\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\r\n      } else {\r\n        offset += 4;\r\n      }\r\n    }\r\n\r\n    ctx.putImageData(imageData, 0, 0);\r\n    return canvas;\r\n  };\r\n  /**\r\n   * get canvas of a black circle brush used for canvas to draw later\r\n   */\r\n\r\n\r\n  HeatmapLayer.prototype._getBrush = function () {\r\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\r\n\r\n    var r = this.pointSize + this.blurSize;\r\n    var d = r * 2;\r\n    brushCanvas.width = d;\r\n    brushCanvas.height = d;\r\n    var ctx = brushCanvas.getContext('2d');\r\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\r\n    // draw the distinct circle in an invisible place,\r\n    // and use shadowOffset to draw shadow in the center of the canvas\r\n\r\n    ctx.shadowOffsetX = d;\r\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\r\n    // color in color map\r\n\r\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    return brushCanvas;\r\n  };\r\n  /**\r\n   * get gradient color map\r\n   * @private\r\n   */\r\n\r\n\r\n  HeatmapLayer.prototype._getGradient = function (colorFunc, state) {\r\n    var gradientPixels = this._gradientPixels;\r\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\r\n    var color = [0, 0, 0, 0];\r\n    var off = 0;\r\n\r\n    for (var i = 0; i < 256; i++) {\r\n      colorFunc[state](i / 255, true, color);\r\n      pixelsSingleState[off++] = color[0];\r\n      pixelsSingleState[off++] = color[1];\r\n      pixelsSingleState[off++] = color[2];\r\n      pixelsSingleState[off++] = color[3];\r\n    }\r\n\r\n    return pixelsSingleState;\r\n  };\r\n\r\n  return HeatmapLayer;\r\n}();\r\n\r\nexport default HeatmapLayer;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as graphic from '../../util/graphic';\r\nimport { enableHoverEmphasis } from '../../util/states';\r\nimport HeatmapLayer from './HeatmapLayer';\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport ChartView from '../../view/Chart';\r\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem';\r\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle';\r\n\r\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\r\n  var dataSpan = dataExtent[1] - dataExtent[0];\r\n  pieceList = zrUtil.map(pieceList, function (piece) {\r\n    return {\r\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\r\n    };\r\n  });\r\n  var len = pieceList.length;\r\n  var lastIndex = 0;\r\n  return function (val) {\r\n    var i; // Try to find in the location of the last found\r\n\r\n    for (i = lastIndex; i < len; i++) {\r\n      var interval = pieceList[i].interval;\r\n\r\n      if (interval[0] <= val && val <= interval[1]) {\r\n        lastIndex = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (i === len) {\r\n      // Not found, back interation\r\n      for (i = lastIndex - 1; i >= 0; i--) {\r\n        var interval = pieceList[i].interval;\r\n\r\n        if (interval[0] <= val && val <= interval[1]) {\r\n          lastIndex = i;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return i >= 0 && i < len && selected[i];\r\n  };\r\n}\r\n\r\nfunction getIsInContinuousRange(dataExtent, range) {\r\n  var dataSpan = dataExtent[1] - dataExtent[0];\r\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\r\n  return function (val) {\r\n    return val >= range[0] && val <= range[1];\r\n  };\r\n}\r\n\r\nfunction isGeoCoordSys(coordSys) {\r\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\r\n\r\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\r\n}\r\n\r\nvar HeatmapView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(HeatmapView, _super);\r\n\r\n  function HeatmapView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = HeatmapView.type;\r\n    return _this;\r\n  }\r\n\r\n  HeatmapView.prototype.render = function (seriesModel, ecModel, api) {\r\n    var visualMapOfThisSeries;\r\n    ecModel.eachComponent('visualMap', function (visualMap) {\r\n      visualMap.eachTargetSeries(function (targetSeries) {\r\n        if (targetSeries === seriesModel) {\r\n          visualMapOfThisSeries = visualMap;\r\n        }\r\n      });\r\n    });\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (!visualMapOfThisSeries) {\r\n        throw new Error('Heatmap must use with visualMap');\r\n      }\r\n    }\r\n\r\n    this.group.removeAll();\r\n    this._incrementalDisplayable = null;\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\r\n      this._renderOnCartesianAndCalendar(seriesModel, api, 0, seriesModel.getData().count());\r\n    } else if (isGeoCoordSys(coordSys)) {\r\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\r\n    }\r\n  };\r\n\r\n  HeatmapView.prototype.incrementalPrepareRender = function (seriesModel, ecModel, api) {\r\n    this.group.removeAll();\r\n  };\r\n\r\n  HeatmapView.prototype.incrementalRender = function (params, seriesModel, ecModel, api) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (coordSys) {\r\n      // geo does not support incremental rendering?\r\n      if (isGeoCoordSys(coordSys)) {\r\n        this.render(seriesModel, ecModel, api);\r\n      } else {\r\n        this._renderOnCartesianAndCalendar(seriesModel, api, params.start, params.end, true);\r\n      }\r\n    }\r\n  };\r\n\r\n  HeatmapView.prototype._renderOnCartesianAndCalendar = function (seriesModel, api, start, end, incremental) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var width;\r\n    var height;\r\n    var xAxisExtent;\r\n    var yAxisExtent;\r\n\r\n    if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\r\n      var xAxis = coordSys.getAxis('x');\r\n      var yAxis = coordSys.getAxis('y');\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (!(xAxis.type === 'category' && yAxis.type === 'category')) {\r\n          throw new Error('Heatmap on cartesian must have two category axes');\r\n        }\r\n\r\n        if (!(xAxis.onBand && yAxis.onBand)) {\r\n          throw new Error('Heatmap on cartesian must have two axes with boundaryGap true');\r\n        }\r\n      }\r\n\r\n      width = xAxis.getBandWidth();\r\n      height = yAxis.getBandWidth();\r\n      xAxisExtent = xAxis.scale.getExtent();\r\n      yAxisExtent = yAxis.scale.getExtent();\r\n    }\r\n\r\n    var group = this.group;\r\n    var data = seriesModel.getData();\r\n    var emphasisStyle = seriesModel.getModel(['emphasis', 'itemStyle']).getItemStyle();\r\n    var blurStyle = seriesModel.getModel(['blur', 'itemStyle']).getItemStyle();\r\n    var selectStyle = seriesModel.getModel(['select', 'itemStyle']).getItemStyle();\r\n    var labelStatesModels = getLabelStatesModels(seriesModel);\r\n    var focus = seriesModel.get(['emphasis', 'focus']);\r\n    var blurScope = seriesModel.get(['emphasis', 'blurScope']);\r\n    var dataDims = isCoordinateSystemType(coordSys, 'cartesian2d') ? [data.mapDimension('x'), data.mapDimension('y'), data.mapDimension('value')] : [data.mapDimension('time'), data.mapDimension('value')];\r\n\r\n    for (var idx = start; idx < end; idx++) {\r\n      var rect = void 0;\r\n      var style = data.getItemVisual(idx, 'style');\r\n\r\n      if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\r\n        var dataDimX = data.get(dataDims[0], idx);\r\n        var dataDimY = data.get(dataDims[1], idx); // Ignore empty data and out of extent data\r\n\r\n        if (isNaN(data.get(dataDims[2], idx)) || dataDimX < xAxisExtent[0] || dataDimX > xAxisExtent[1] || dataDimY < yAxisExtent[0] || dataDimY > yAxisExtent[1]) {\r\n          continue;\r\n        }\r\n\r\n        var point = coordSys.dataToPoint([dataDimX, dataDimY]);\r\n        rect = new graphic.Rect({\r\n          shape: {\r\n            x: Math.floor(Math.round(point[0]) - width / 2),\r\n            y: Math.floor(Math.round(point[1]) - height / 2),\r\n            width: Math.ceil(width),\r\n            height: Math.ceil(height)\r\n          },\r\n          style: style\r\n        });\r\n      } else {\r\n        // Ignore empty data\r\n        if (isNaN(data.get(dataDims[1], idx))) {\r\n          continue;\r\n        }\r\n\r\n        rect = new graphic.Rect({\r\n          z2: 1,\r\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\r\n          style: style\r\n        });\r\n      }\r\n\r\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\r\n\r\n      if (data.hasItemOption) {\r\n        var emphasisModel = itemModel.getModel('emphasis');\r\n        emphasisStyle = emphasisModel.getModel('itemStyle').getItemStyle();\r\n        blurStyle = itemModel.getModel(['blur', 'itemStyle']).getItemStyle();\r\n        selectStyle = itemModel.getModel(['select', 'itemStyle']).getItemStyle();\r\n        focus = emphasisModel.get('focus');\r\n        blurScope = emphasisModel.get('blurScope');\r\n        labelStatesModels = getLabelStatesModels(itemModel);\r\n      }\r\n\r\n      var rawValue = seriesModel.getRawValue(idx);\r\n      var defaultText = '-';\r\n\r\n      if (rawValue && rawValue[2] != null) {\r\n        defaultText = rawValue[2] + '';\r\n      }\r\n\r\n      setLabelStyle(rect, labelStatesModels, {\r\n        labelFetcher: seriesModel,\r\n        labelDataIndex: idx,\r\n        defaultOpacity: style.opacity,\r\n        defaultText: defaultText\r\n      });\r\n      rect.ensureState('emphasis').style = emphasisStyle;\r\n      rect.ensureState('blur').style = blurStyle;\r\n      rect.ensureState('select').style = selectStyle;\r\n      enableHoverEmphasis(rect, focus, blurScope);\r\n      rect.incremental = incremental; // PENDING\r\n\r\n      if (incremental) {\r\n        // Rect must use hover layer if it's incremental.\r\n        rect.states.emphasis.hoverLayer = true;\r\n      }\r\n\r\n      group.add(rect);\r\n      data.setItemGraphicEl(idx, rect);\r\n    }\r\n  };\r\n\r\n  HeatmapView.prototype._renderOnGeo = function (geo, seriesModel, visualMapModel, api) {\r\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\r\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\r\n    //     throw new Error('Data range must have color visuals');\r\n    // }\r\n\r\n    var data = seriesModel.getData();\r\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\r\n    hmLayer.blurSize = seriesModel.get('blurSize');\r\n    hmLayer.pointSize = seriesModel.get('pointSize');\r\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\r\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\r\n    var rect = geo.getViewRect().clone();\r\n    var roamTransform = geo.getRoamTransform();\r\n    rect.applyTransform(roamTransform); // Clamp on viewport\r\n\r\n    var x = Math.max(rect.x, 0);\r\n    var y = Math.max(rect.y, 0);\r\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\r\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\r\n    var width = x2 - x;\r\n    var height = y2 - y;\r\n    var dims = [data.mapDimension('lng'), data.mapDimension('lat'), data.mapDimension('value')];\r\n    var points = data.mapArray(dims, function (lng, lat, value) {\r\n      var pt = geo.dataToPoint([lng, lat]);\r\n      pt[0] -= x;\r\n      pt[1] -= y;\r\n      pt.push(value);\r\n      return pt;\r\n    });\r\n    var dataExtent = visualMapModel.getExtent();\r\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\r\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\r\n      inRange: inRangeVisuals.color.getColorMapper(),\r\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\r\n    }, isInRange);\r\n    var img = new graphic.Image({\r\n      style: {\r\n        width: width,\r\n        height: height,\r\n        x: x,\r\n        y: y,\r\n        image: hmLayer.canvas\r\n      },\r\n      silent: true\r\n    });\r\n    this.group.add(img);\r\n  };\r\n\r\n  HeatmapView.type = 'heatmap';\r\n  return HeatmapView;\r\n}(ChartView);\r\n\r\nexport default HeatmapView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport SeriesModel from '../../model/Series';\r\nimport createSeriesData from '../helper/createSeriesData';\r\nimport CoordinateSystem from '../../core/CoordinateSystem';\r\n\r\nvar HeatmapSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(HeatmapSeriesModel, _super);\r\n\r\n  function HeatmapSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = HeatmapSeriesModel.type;\r\n    return _this;\r\n  }\r\n\r\n  HeatmapSeriesModel.prototype.getInitialData = function (option, ecModel) {\r\n    return createSeriesData(null, this, {\r\n      generateCoord: 'value'\r\n    });\r\n  };\r\n\r\n  HeatmapSeriesModel.prototype.preventIncremental = function () {\r\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\r\n\r\n    if (coordSysCreator && coordSysCreator.dimensions) {\r\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\r\n    }\r\n  };\r\n\r\n  HeatmapSeriesModel.type = 'series.heatmap';\r\n  HeatmapSeriesModel.dependencies = ['grid', 'geo', 'calendar'];\r\n  HeatmapSeriesModel.defaultOption = {\r\n    coordinateSystem: 'cartesian2d',\r\n    zlevel: 0,\r\n    z: 2,\r\n    // Cartesian coordinate system\r\n    // xAxisIndex: 0,\r\n    // yAxisIndex: 0,\r\n    // Geo coordinate system\r\n    geoIndex: 0,\r\n    blurSize: 30,\r\n    pointSize: 20,\r\n    maxOpacity: 1,\r\n    minOpacity: 0,\r\n    select: {\r\n      itemStyle: {\r\n        borderColor: '#212121'\r\n      }\r\n    }\r\n  };\r\n  return HeatmapSeriesModel;\r\n}(SeriesModel);\r\n\r\nexport default HeatmapSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport HeatmapView from './HeatmapView';\r\nimport HeatmapSeriesModel from './HeatmapSeries';\r\nexport function install(registers) {\r\n  registers.registerChartView(HeatmapView);\r\n  registers.registerSeriesModel(HeatmapSeriesModel);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as graphic from '../../util/graphic';\r\nimport { enableHoverEmphasis } from '../../util/states';\r\nimport { createSymbol, normalizeSymbolOffset } from '../../util/symbol';\r\nimport { parsePercent, isNumeric } from '../../util/number';\r\nimport ChartView from '../../view/Chart';\r\nimport { getDefaultLabel } from '../helper/labelHelper';\r\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle';\r\nimport ZRImage from 'zrender/lib/graphic/Image';\r\nimport { getECData } from '../../util/innerStore';\r\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth']; // index: +isHorizontal\r\n\r\nvar LAYOUT_ATTRS = [{\r\n  xy: 'x',\r\n  wh: 'width',\r\n  index: 0,\r\n  posDesc: ['left', 'right']\r\n}, {\r\n  xy: 'y',\r\n  wh: 'height',\r\n  index: 1,\r\n  posDesc: ['top', 'bottom']\r\n}];\r\nvar pathForLineWidth = new graphic.Circle();\r\n\r\nvar PictorialBarView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(PictorialBarView, _super);\r\n\r\n  function PictorialBarView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = PictorialBarView.type;\r\n    return _this;\r\n  }\r\n\r\n  PictorialBarView.prototype.render = function (seriesModel, ecModel, api) {\r\n    var group = this.group;\r\n    var data = seriesModel.getData();\r\n    var oldData = this._data;\r\n    var cartesian = seriesModel.coordinateSystem;\r\n    var baseAxis = cartesian.getBaseAxis();\r\n    var isHorizontal = baseAxis.isHorizontal();\r\n    var coordSysRect = cartesian.master.getRect();\r\n    var opt = {\r\n      ecSize: {\r\n        width: api.getWidth(),\r\n        height: api.getHeight()\r\n      },\r\n      seriesModel: seriesModel,\r\n      coordSys: cartesian,\r\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\r\n      isHorizontal: isHorizontal,\r\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\r\n      categoryDim: LAYOUT_ATTRS[1 - +isHorizontal]\r\n    };\r\n    data.diff(oldData).add(function (dataIndex) {\r\n      if (!data.hasValue(dataIndex)) {\r\n        return;\r\n      }\r\n\r\n      var itemModel = getItemModel(data, dataIndex);\r\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\r\n      var bar = createBar(data, opt, symbolMeta);\r\n      data.setItemGraphicEl(dataIndex, bar);\r\n      group.add(bar);\r\n      updateCommon(bar, opt, symbolMeta);\r\n    }).update(function (newIndex, oldIndex) {\r\n      var bar = oldData.getItemGraphicEl(oldIndex);\r\n\r\n      if (!data.hasValue(newIndex)) {\r\n        group.remove(bar);\r\n        return;\r\n      }\r\n\r\n      var itemModel = getItemModel(data, newIndex);\r\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\r\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\r\n\r\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\r\n        group.remove(bar);\r\n        data.setItemGraphicEl(newIndex, null);\r\n        bar = null;\r\n      }\r\n\r\n      if (bar) {\r\n        updateBar(bar, opt, symbolMeta);\r\n      } else {\r\n        bar = createBar(data, opt, symbolMeta, true);\r\n      }\r\n\r\n      data.setItemGraphicEl(newIndex, bar);\r\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\r\n\r\n      group.add(bar);\r\n      updateCommon(bar, opt, symbolMeta);\r\n    }).remove(function (dataIndex) {\r\n      var bar = oldData.getItemGraphicEl(dataIndex);\r\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\r\n    }).execute();\r\n    this._data = data;\r\n    return this.group;\r\n  };\r\n\r\n  PictorialBarView.prototype.remove = function (ecModel, api) {\r\n    var group = this.group;\r\n    var data = this._data;\r\n\r\n    if (ecModel.get('animation')) {\r\n      if (data) {\r\n        data.eachItemGraphicEl(function (bar) {\r\n          removeBar(data, getECData(bar).dataIndex, ecModel, bar);\r\n        });\r\n      }\r\n    } else {\r\n      group.removeAll();\r\n    }\r\n  };\r\n\r\n  PictorialBarView.type = 'pictorialBar';\r\n  return PictorialBarView;\r\n}(ChartView); // Set or calculate default value about symbol, and calculate layout info.\r\n\r\n\r\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\r\n  var layout = data.getItemLayout(dataIndex);\r\n  var symbolRepeat = itemModel.get('symbolRepeat');\r\n  var symbolClip = itemModel.get('symbolClip');\r\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\r\n  var symbolRotate = itemModel.get('symbolRotate');\r\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\r\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\r\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\r\n  var symbolMeta = {\r\n    dataIndex: dataIndex,\r\n    layout: layout,\r\n    itemModel: itemModel,\r\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\r\n    style: data.getItemVisual(dataIndex, 'style'),\r\n    symbolClip: symbolClip,\r\n    symbolRepeat: symbolRepeat,\r\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\r\n    symbolPatternSize: symbolPatternSize,\r\n    rotation: rotation,\r\n    animationModel: isAnimationEnabled ? itemModel : null,\r\n    hoverScale: isAnimationEnabled && itemModel.get(['emphasis', 'scale']),\r\n    z2: itemModel.getShallow('z', true) || 0\r\n  };\r\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\r\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\r\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\r\n  var symbolSize = symbolMeta.symbolSize;\r\n  var symbolOffset = normalizeSymbolOffset(itemModel.get('symbolOffset'), symbolSize);\r\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\r\n  return symbolMeta;\r\n} // bar length can be negative.\r\n\r\n\r\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, outputSymbolMeta) {\r\n  var valueDim = opt.valueDim;\r\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\r\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\r\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\r\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\r\n  var boundingLength;\r\n\r\n  if (zrUtil.isArray(symbolBoundingData)) {\r\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\r\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\r\n    boundingLength = symbolBoundingExtent[pxSignIdx];\r\n  } else if (symbolBoundingData != null) {\r\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\r\n  } else if (symbolRepeat) {\r\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\r\n  } else {\r\n    boundingLength = layout[valueDim.wh];\r\n  }\r\n\r\n  outputSymbolMeta.boundingLength = boundingLength;\r\n\r\n  if (symbolRepeat) {\r\n    outputSymbolMeta.repeatCutLength = layout[valueDim.wh];\r\n  }\r\n\r\n  outputSymbolMeta.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\r\n}\r\n\r\nfunction convertToCoordOnAxis(axis, value) {\r\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\r\n} // Support ['100%', '100%']\r\n\r\n\r\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, outputSymbolMeta) {\r\n  var valueDim = opt.valueDim;\r\n  var categoryDim = opt.categoryDim;\r\n  var categorySize = Math.abs(layout[categoryDim.wh]);\r\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\r\n  var parsedSymbolSize;\r\n\r\n  if (zrUtil.isArray(symbolSize)) {\r\n    parsedSymbolSize = symbolSize.slice();\r\n  } else {\r\n    if (symbolSize == null) {\r\n      // will parse to number below\r\n      parsedSymbolSize = ['100%', '100%'];\r\n    } else {\r\n      parsedSymbolSize = [symbolSize, symbolSize];\r\n    }\r\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\r\n  // to complicated to calculate real percent value if considering scaled lineWidth.\r\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\r\n  // which can be tolerated in pictorial chart.\r\n\r\n\r\n  parsedSymbolSize[categoryDim.index] = parsePercent(parsedSymbolSize[categoryDim.index], categorySize);\r\n  parsedSymbolSize[valueDim.index] = parsePercent(parsedSymbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\r\n  outputSymbolMeta.symbolSize = parsedSymbolSize; // If x or y is less than zero, show reversed shape.\r\n\r\n  var symbolScale = outputSymbolMeta.symbolScale = [parsedSymbolSize[0] / symbolPatternSize, parsedSymbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\r\n\r\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\r\n}\r\n\r\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, outputSymbolMeta) {\r\n  // In symbols are drawn with scale, so do not need to care about the case that width\r\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\r\n  // be calculated.\r\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\r\n\r\n  if (valueLineWidth) {\r\n    pathForLineWidth.attr({\r\n      scaleX: symbolScale[0],\r\n      scaleY: symbolScale[1],\r\n      rotation: rotation\r\n    });\r\n    pathForLineWidth.updateTransform();\r\n    valueLineWidth /= pathForLineWidth.getLineScale();\r\n    valueLineWidth *= symbolScale[opt.valueDim.index];\r\n  }\r\n\r\n  outputSymbolMeta.valueLineWidth = valueLineWidth;\r\n}\r\n\r\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, outputSymbolMeta) {\r\n  var categoryDim = opt.categoryDim;\r\n  var valueDim = opt.valueDim;\r\n  var pxSign = outputSymbolMeta.pxSign;\r\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\r\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\r\n  // want symbols to rotate on its center, which should not be translated\r\n  // when rotating.\r\n\r\n  if (symbolRepeat) {\r\n    var absBoundingLength = Math.abs(boundingLength);\r\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\r\n    var hasEndGap = false;\r\n\r\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\r\n      hasEndGap = true;\r\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\r\n    }\r\n\r\n    var symbolMarginNumeric = parsePercent(symbolMargin, symbolSize[valueDim.index]);\r\n    var uLenWithMargin = Math.max(unitLength + symbolMarginNumeric * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\r\n    // to ensure that all of the symbols will not be overflow the given area.\r\n\r\n    var endFix = hasEndGap ? 0 : symbolMarginNumeric * 2; // Both final repeatTimes and final symbolMarginNumeric area calculated based on\r\n    // boundingLength.\r\n\r\n    var repeatSpecified = isNumeric(symbolRepeat);\r\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\r\n    // entirely in the given layout area.\r\n\r\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\r\n    symbolMarginNumeric = mDiff / 2 / (hasEndGap ? repeatTimes : Math.max(repeatTimes - 1, 1));\r\n    uLenWithMargin = unitLength + symbolMarginNumeric * 2;\r\n    endFix = hasEndGap ? 0 : symbolMarginNumeric * 2; // Update repeatTimes when not all symbol will be shown.\r\n\r\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\r\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\r\n    }\r\n\r\n    pathLen = repeatTimes * uLenWithMargin - endFix;\r\n    outputSymbolMeta.repeatTimes = repeatTimes;\r\n    outputSymbolMeta.symbolMargin = symbolMarginNumeric;\r\n  }\r\n\r\n  var sizeFix = pxSign * (pathLen / 2);\r\n  var pathPosition = outputSymbolMeta.pathPosition = [];\r\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\r\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\r\n\r\n  if (symbolOffset) {\r\n    pathPosition[0] += symbolOffset[0];\r\n    pathPosition[1] += symbolOffset[1];\r\n  }\r\n\r\n  var bundlePosition = outputSymbolMeta.bundlePosition = [];\r\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\r\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\r\n  var barRectShape = outputSymbolMeta.barRectShape = zrUtil.extend({}, layout);\r\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\r\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\r\n  var clipShape = outputSymbolMeta.clipShape = {}; // Consider that symbol may be overflow layout rect.\r\n\r\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\r\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\r\n  clipShape[valueDim.xy] = 0;\r\n  clipShape[valueDim.wh] = layout[valueDim.wh];\r\n}\r\n\r\nfunction createPath(symbolMeta) {\r\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\r\n  var path = createSymbol( // Consider texture img, make a big size.\r\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize);\r\n  path.attr({\r\n    culling: true\r\n  });\r\n  path.type !== 'image' && path.setStyle({\r\n    strokeNoScale: true\r\n  });\r\n  return path;\r\n}\r\n\r\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\r\n  var bundle = bar.__pictorialBundle;\r\n  var symbolSize = symbolMeta.symbolSize;\r\n  var valueLineWidth = symbolMeta.valueLineWidth;\r\n  var pathPosition = symbolMeta.pathPosition;\r\n  var valueDim = opt.valueDim;\r\n  var repeatTimes = symbolMeta.repeatTimes || 0;\r\n  var index = 0;\r\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\r\n  eachPath(bar, function (path) {\r\n    path.__pictorialAnimationIndex = index;\r\n    path.__pictorialRepeatTimes = repeatTimes;\r\n\r\n    if (index < repeatTimes) {\r\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\r\n    } else {\r\n      updateAttr(path, null, {\r\n        scaleX: 0,\r\n        scaleY: 0\r\n      }, symbolMeta, isUpdate, function () {\r\n        bundle.remove(path);\r\n      });\r\n    } // updateHoverAnimation(path, symbolMeta);\r\n\r\n\r\n    index++;\r\n  });\r\n\r\n  for (; index < repeatTimes; index++) {\r\n    var path = createPath(symbolMeta);\r\n    path.__pictorialAnimationIndex = index;\r\n    path.__pictorialRepeatTimes = repeatTimes;\r\n    bundle.add(path);\r\n    var target = makeTarget(index);\r\n    updateAttr(path, {\r\n      x: target.x,\r\n      y: target.y,\r\n      scaleX: 0,\r\n      scaleY: 0\r\n    }, {\r\n      scaleX: target.scaleX,\r\n      scaleY: target.scaleY,\r\n      rotation: target.rotation\r\n    }, symbolMeta, isUpdate);\r\n  }\r\n\r\n  function makeTarget(index) {\r\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\r\n    // Otherwise: i = index;\r\n\r\n    var pxSign = symbolMeta.pxSign;\r\n    var i = index;\r\n\r\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\r\n      i = repeatTimes - 1 - index;\r\n    }\r\n\r\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\r\n    return {\r\n      x: position[0],\r\n      y: position[1],\r\n      scaleX: symbolMeta.symbolScale[0],\r\n      scaleY: symbolMeta.symbolScale[1],\r\n      rotation: symbolMeta.rotation\r\n    };\r\n  }\r\n}\r\n\r\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\r\n  var bundle = bar.__pictorialBundle;\r\n  var mainPath = bar.__pictorialMainPath;\r\n\r\n  if (!mainPath) {\r\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\r\n    bundle.add(mainPath);\r\n    updateAttr(mainPath, {\r\n      x: symbolMeta.pathPosition[0],\r\n      y: symbolMeta.pathPosition[1],\r\n      scaleX: 0,\r\n      scaleY: 0,\r\n      rotation: symbolMeta.rotation\r\n    }, {\r\n      scaleX: symbolMeta.symbolScale[0],\r\n      scaleY: symbolMeta.symbolScale[1]\r\n    }, symbolMeta, isUpdate);\r\n  } else {\r\n    updateAttr(mainPath, null, {\r\n      x: symbolMeta.pathPosition[0],\r\n      y: symbolMeta.pathPosition[1],\r\n      scaleX: symbolMeta.symbolScale[0],\r\n      scaleY: symbolMeta.symbolScale[1],\r\n      rotation: symbolMeta.rotation\r\n    }, symbolMeta, isUpdate);\r\n  }\r\n} // bar rect is used for label.\r\n\r\n\r\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\r\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\r\n  var barRect = bar.__pictorialBarRect;\r\n\r\n  if (!barRect) {\r\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\r\n      z2: 2,\r\n      shape: rectShape,\r\n      silent: true,\r\n      style: {\r\n        stroke: 'transparent',\r\n        fill: 'transparent',\r\n        lineWidth: 0\r\n      }\r\n    });\r\n    barRect.disableMorphing = true;\r\n    bar.add(barRect);\r\n  } else {\r\n    updateAttr(barRect, null, {\r\n      shape: rectShape\r\n    }, symbolMeta, isUpdate);\r\n  }\r\n}\r\n\r\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\r\n  // If not clip, symbol will be remove and rebuilt.\r\n  if (symbolMeta.symbolClip) {\r\n    var clipPath = bar.__pictorialClipPath;\r\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\r\n    var valueDim = opt.valueDim;\r\n    var animationModel = symbolMeta.animationModel;\r\n    var dataIndex = symbolMeta.dataIndex;\r\n\r\n    if (clipPath) {\r\n      graphic.updateProps(clipPath, {\r\n        shape: clipShape\r\n      }, animationModel, dataIndex);\r\n    } else {\r\n      clipShape[valueDim.wh] = 0;\r\n      clipPath = new graphic.Rect({\r\n        shape: clipShape\r\n      });\r\n\r\n      bar.__pictorialBundle.setClipPath(clipPath);\r\n\r\n      bar.__pictorialClipPath = clipPath;\r\n      var target = {};\r\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\r\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\r\n        shape: target\r\n      }, animationModel, dataIndex);\r\n    }\r\n  }\r\n}\r\n\r\nfunction getItemModel(data, dataIndex) {\r\n  var itemModel = data.getItemModel(dataIndex);\r\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\r\n  itemModel.isAnimationEnabled = isAnimationEnabled;\r\n  return itemModel;\r\n}\r\n\r\nfunction getAnimationDelayParams(path) {\r\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\r\n  return {\r\n    index: path.__pictorialAnimationIndex,\r\n    count: path.__pictorialRepeatTimes\r\n  };\r\n}\r\n\r\nfunction isAnimationEnabled() {\r\n  // `animation` prop can be set on itemModel in pictorial bar chart.\r\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\r\n}\r\n\r\nfunction createBar(data, opt, symbolMeta, isUpdate) {\r\n  // bar is the main element for each data.\r\n  var bar = new graphic.Group(); // bundle is used for location and clip.\r\n\r\n  var bundle = new graphic.Group();\r\n  bar.add(bundle);\r\n  bar.__pictorialBundle = bundle;\r\n  bundle.x = symbolMeta.bundlePosition[0];\r\n  bundle.y = symbolMeta.bundlePosition[1];\r\n\r\n  if (symbolMeta.symbolRepeat) {\r\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\r\n  } else {\r\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\r\n  }\r\n\r\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\r\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\r\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\r\n  bar.__pictorialSymbolMeta = symbolMeta;\r\n  return bar;\r\n}\r\n\r\nfunction updateBar(bar, opt, symbolMeta) {\r\n  var animationModel = symbolMeta.animationModel;\r\n  var dataIndex = symbolMeta.dataIndex;\r\n  var bundle = bar.__pictorialBundle;\r\n  graphic.updateProps(bundle, {\r\n    x: symbolMeta.bundlePosition[0],\r\n    y: symbolMeta.bundlePosition[1]\r\n  }, animationModel, dataIndex);\r\n\r\n  if (symbolMeta.symbolRepeat) {\r\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\r\n  } else {\r\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\r\n  }\r\n\r\n  createOrUpdateBarRect(bar, symbolMeta, true);\r\n  createOrUpdateClip(bar, opt, symbolMeta, true);\r\n}\r\n\r\nfunction removeBar(data, dataIndex, animationModel, bar) {\r\n  // Not show text when animating\r\n  var labelRect = bar.__pictorialBarRect;\r\n  labelRect && labelRect.removeTextContent();\r\n  var pathes = [];\r\n  eachPath(bar, function (path) {\r\n    pathes.push(path);\r\n  });\r\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\r\n\r\n  bar.__pictorialClipPath && (animationModel = null);\r\n  zrUtil.each(pathes, function (path) {\r\n    graphic.removeElement(path, {\r\n      scaleX: 0,\r\n      scaleY: 0\r\n    }, animationModel, dataIndex, function () {\r\n      bar.parent && bar.parent.remove(bar);\r\n    });\r\n  });\r\n  data.setItemGraphicEl(dataIndex, null);\r\n}\r\n\r\nfunction getShapeStr(data, symbolMeta) {\r\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\r\n}\r\n\r\nfunction eachPath(bar, cb, context) {\r\n  // Do not use Group#eachChild, because it do not support remove.\r\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\r\n    el !== bar.__pictorialBarRect && cb.call(context, el);\r\n  });\r\n}\r\n\r\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\r\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\r\n\r\n  if (symbolMeta.symbolClip && !isUpdate) {\r\n    animationAttrs && el.attr(animationAttrs);\r\n  } else {\r\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\r\n  }\r\n}\r\n\r\nfunction updateCommon(bar, opt, symbolMeta) {\r\n  var dataIndex = symbolMeta.dataIndex;\r\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\r\n  // Because symbol provide setColor individually to set fill and stroke\r\n\r\n  var emphasisModel = itemModel.getModel('emphasis');\r\n  var emphasisStyle = emphasisModel.getModel('itemStyle').getItemStyle();\r\n  var blurStyle = itemModel.getModel(['blur', 'itemStyle']).getItemStyle();\r\n  var selectStyle = itemModel.getModel(['select', 'itemStyle']).getItemStyle();\r\n  var cursorStyle = itemModel.getShallow('cursor');\r\n  var focus = emphasisModel.get('focus');\r\n  var blurScope = emphasisModel.get('blurScope');\r\n  var hoverScale = emphasisModel.get('scale');\r\n  eachPath(bar, function (path) {\r\n    if (path instanceof ZRImage) {\r\n      var pathStyle = path.style;\r\n      path.useStyle(zrUtil.extend({\r\n        // TODO other properties like dx, dy ?\r\n        image: pathStyle.image,\r\n        x: pathStyle.x,\r\n        y: pathStyle.y,\r\n        width: pathStyle.width,\r\n        height: pathStyle.height\r\n      }, symbolMeta.style));\r\n    } else {\r\n      path.useStyle(symbolMeta.style);\r\n    }\r\n\r\n    var emphasisState = path.ensureState('emphasis');\r\n    emphasisState.style = emphasisStyle;\r\n\r\n    if (hoverScale) {\r\n      // NOTE: Must after scale is set after updateAttr\r\n      emphasisState.scaleX = path.scaleX * 1.1;\r\n      emphasisState.scaleY = path.scaleY * 1.1;\r\n    }\r\n\r\n    path.ensureState('blur').style = blurStyle;\r\n    path.ensureState('select').style = selectStyle;\r\n    cursorStyle && (path.cursor = cursorStyle);\r\n    path.z2 = symbolMeta.z2;\r\n  });\r\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\r\n  var barRect = bar.__pictorialBarRect;\r\n  setLabelStyle(barRect, getLabelStatesModels(itemModel), {\r\n    labelFetcher: opt.seriesModel,\r\n    labelDataIndex: dataIndex,\r\n    defaultText: getDefaultLabel(opt.seriesModel.getData(), dataIndex),\r\n    inheritColor: symbolMeta.style.fill,\r\n    defaultOpacity: symbolMeta.style.opacity,\r\n    defaultOutsidePosition: barPositionOutside\r\n  });\r\n  enableHoverEmphasis(bar, focus, blurScope);\r\n}\r\n\r\nfunction toIntTimes(times) {\r\n  var roundedTimes = Math.round(times); // Escapse accurate error\r\n\r\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\r\n}\r\n\r\nexport default PictorialBarView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport BaseBarSeriesModel from './BaseBarSeries';\r\nimport { inheritDefaultOption } from '../../util/component';\r\n\r\nvar PictorialBarSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(PictorialBarSeriesModel, _super);\r\n\r\n  function PictorialBarSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = PictorialBarSeriesModel.type;\r\n    _this.hasSymbolVisual = true;\r\n    _this.defaultSymbol = 'roundRect';\r\n    return _this;\r\n  }\r\n\r\n  PictorialBarSeriesModel.prototype.getInitialData = function (option) {\r\n    // Disable stack.\r\n    option.stack = null;\r\n    return _super.prototype.getInitialData.apply(this, arguments);\r\n  };\r\n\r\n  PictorialBarSeriesModel.type = 'series.pictorialBar';\r\n  PictorialBarSeriesModel.dependencies = ['grid'];\r\n  PictorialBarSeriesModel.defaultOption = inheritDefaultOption(BaseBarSeriesModel.defaultOption, {\r\n    symbol: 'circle',\r\n    symbolSize: null,\r\n    symbolRotate: null,\r\n    symbolPosition: null,\r\n    symbolOffset: null,\r\n    symbolMargin: null,\r\n    symbolRepeat: false,\r\n    symbolRepeatDirection: 'end',\r\n    symbolClip: false,\r\n    symbolBoundingData: null,\r\n    symbolPatternSize: 400,\r\n    barGap: '-100%',\r\n    // z can be set in data item, which is z2 actually.\r\n    // Disable progressive\r\n    progressive: 0,\r\n    emphasis: {\r\n      // By default pictorialBar do not hover scale. Hover scale is not suitable\r\n      // for the case that both has foreground and background.\r\n      scale: false\r\n    },\r\n    select: {\r\n      itemStyle: {\r\n        borderColor: '#212121'\r\n      }\r\n    }\r\n  });\r\n  return PictorialBarSeriesModel;\r\n}(BaseBarSeriesModel);\r\n\r\nexport default PictorialBarSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport PictorialBarView from './PictorialBarView';\r\nimport PictorialBarSeriesModel from './PictorialBarSeries';\r\nimport { layout } from '../../layout/barGrid';\r\nimport { curry } from 'zrender/lib/core/util';\r\nexport function install(registers) {\r\n  registers.registerChartView(PictorialBarView);\r\n  registers.registerSeriesModel(PictorialBarSeriesModel);\r\n  registers.registerLayout(curry(layout, 'pictorialBar'));\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport { ECPolygon } from '../line/poly';\r\nimport * as graphic from '../../util/graphic';\r\nimport { setStatesStylesFromModel, enableHoverEmphasis } from '../../util/states';\r\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle';\r\nimport { bind } from 'zrender/lib/core/util';\r\nimport DataDiffer from '../../data/DataDiffer';\r\nimport ChartView from '../../view/Chart';\r\nimport { saveOldStyle } from '../../animation/basicTrasition';\r\n\r\nvar ThemeRiverView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ThemeRiverView, _super);\r\n\r\n  function ThemeRiverView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = ThemeRiverView.type;\r\n    _this._layers = [];\r\n    return _this;\r\n  }\r\n\r\n  ThemeRiverView.prototype.render = function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n    var self = this;\r\n    var group = this.group;\r\n    var layersSeries = seriesModel.getLayerSeries();\r\n    var layoutInfo = data.getLayout('layoutInfo');\r\n    var rect = layoutInfo.rect;\r\n    var boundaryGap = layoutInfo.boundaryGap;\r\n    group.x = 0;\r\n    group.y = rect.y + boundaryGap[0];\r\n\r\n    function keyGetter(item) {\r\n      return item.name;\r\n    }\r\n\r\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layersSeries, keyGetter, keyGetter);\r\n    var newLayersGroups = [];\r\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\r\n\r\n    function process(status, idx, oldIdx) {\r\n      var oldLayersGroups = self._layers;\r\n\r\n      if (status === 'remove') {\r\n        group.remove(oldLayersGroups[idx]);\r\n        return;\r\n      }\r\n\r\n      var points0 = [];\r\n      var points1 = [];\r\n      var style;\r\n      var indices = layersSeries[idx].indices;\r\n      var j = 0;\r\n\r\n      for (; j < indices.length; j++) {\r\n        var layout = data.getItemLayout(indices[j]);\r\n        var x = layout.x;\r\n        var y0 = layout.y0;\r\n        var y = layout.y;\r\n        points0.push(x, y0);\r\n        points1.push(x, y0 + y);\r\n        style = data.getItemVisual(indices[j], 'style');\r\n      }\r\n\r\n      var polygon;\r\n      var textLayout = data.getItemLayout(indices[0]);\r\n      var labelModel = seriesModel.getModel('label');\r\n      var margin = labelModel.get('margin');\r\n      var emphasisModel = seriesModel.getModel('emphasis');\r\n\r\n      if (status === 'add') {\r\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\r\n        polygon = new ECPolygon({\r\n          shape: {\r\n            points: points0,\r\n            stackedOnPoints: points1,\r\n            smooth: 0.4,\r\n            stackedOnSmooth: 0.4,\r\n            smoothConstraint: false\r\n          },\r\n          z2: 0\r\n        });\r\n        layerGroup.add(polygon);\r\n        group.add(layerGroup);\r\n\r\n        if (seriesModel.isAnimationEnabled()) {\r\n          polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\r\n            polygon.removeClipPath();\r\n          }));\r\n        }\r\n      } else {\r\n        var layerGroup = oldLayersGroups[oldIdx];\r\n        polygon = layerGroup.childAt(0);\r\n        group.add(layerGroup);\r\n        newLayersGroups[idx] = layerGroup;\r\n        graphic.updateProps(polygon, {\r\n          shape: {\r\n            points: points0,\r\n            stackedOnPoints: points1\r\n          }\r\n        }, seriesModel);\r\n        saveOldStyle(polygon);\r\n      }\r\n\r\n      setLabelStyle(polygon, getLabelStatesModels(seriesModel), {\r\n        labelDataIndex: indices[j - 1],\r\n        defaultText: data.getName(indices[j - 1]),\r\n        inheritColor: style.fill\r\n      }, {\r\n        normal: {\r\n          verticalAlign: 'middle' // align: 'right'\r\n\r\n        }\r\n      });\r\n      polygon.setTextConfig({\r\n        position: null,\r\n        local: true\r\n      });\r\n      var labelEl = polygon.getTextContent(); // TODO More label position options.\r\n\r\n      if (labelEl) {\r\n        labelEl.x = textLayout.x - margin;\r\n        labelEl.y = textLayout.y0 + textLayout.y / 2;\r\n      }\r\n\r\n      polygon.useStyle(style);\r\n      data.setItemGraphicEl(idx, polygon);\r\n      setStatesStylesFromModel(polygon, seriesModel);\r\n      enableHoverEmphasis(polygon, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\r\n    }\r\n\r\n    this._layersSeries = layersSeries;\r\n    this._layers = newLayersGroups;\r\n  };\r\n\r\n  ThemeRiverView.type = 'themeRiver';\r\n  return ThemeRiverView;\r\n}(ChartView);\r\n\r\n; // add animation to the view\r\n\r\nfunction createGridClipShape(rect, seriesModel, cb) {\r\n  var rectEl = new graphic.Rect({\r\n    shape: {\r\n      x: rect.x - 10,\r\n      y: rect.y - 10,\r\n      width: 0,\r\n      height: rect.height + 20\r\n    }\r\n  });\r\n  graphic.initProps(rectEl, {\r\n    shape: {\r\n      x: rect.x - 50,\r\n      width: rect.width + 100,\r\n      height: rect.height + 20\r\n    }\r\n  }, seriesModel, cb);\r\n  return rectEl;\r\n}\r\n\r\nexport default ThemeRiverView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport SeriesModel from '../../model/Series';\r\nimport prepareSeriesDataSchema from '../../data/helper/createDimensions';\r\nimport { getDimensionTypeByAxis } from '../../data/helper/dimensionHelper';\r\nimport SeriesData from '../../data/SeriesData';\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { groupData, SINGLE_REFERRING } from '../../util/model';\r\nimport LegendVisualProvider from '../../visual/LegendVisualProvider';\r\nimport { createTooltipMarkup } from '../../component/tooltip/tooltipMarkup';\r\nvar DATA_NAME_INDEX = 2;\r\n\r\nvar ThemeRiverSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ThemeRiverSeriesModel, _super);\r\n\r\n  function ThemeRiverSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = ThemeRiverSeriesModel.type;\r\n    return _this;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  ThemeRiverSeriesModel.prototype.init = function (option) {\r\n    // eslint-disable-next-line\r\n    _super.prototype.init.apply(this, arguments); // Put this function here is for the sake of consistency of code style.\r\n    // Enable legend selection for each data item\r\n    // Use a function instead of direct access because data reference may changed\r\n\r\n\r\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this));\r\n  };\r\n  /**\r\n   * If there is no value of a certain point in the time for some event,set it value to 0.\r\n   *\r\n   * @param {Array} data  initial data in the option\r\n   * @return {Array}\r\n   */\r\n\r\n\r\n  ThemeRiverSeriesModel.prototype.fixData = function (data) {\r\n    var rawDataLength = data.length;\r\n    /**\r\n     * Make sure every layer data get the same keys.\r\n     * The value index tells which layer has visited.\r\n     * {\r\n     *  2014/01/01: -1\r\n     * }\r\n     */\r\n\r\n    var timeValueKeys = {}; // grouped data by name\r\n\r\n    var groupResult = groupData(data, function (item) {\r\n      if (!timeValueKeys.hasOwnProperty(item[0] + '')) {\r\n        timeValueKeys[item[0] + ''] = -1;\r\n      }\r\n\r\n      return item[2];\r\n    });\r\n    var layerData = [];\r\n    groupResult.buckets.each(function (items, key) {\r\n      layerData.push({\r\n        name: key,\r\n        dataList: items\r\n      });\r\n    });\r\n    var layerNum = layerData.length;\r\n\r\n    for (var k = 0; k < layerNum; ++k) {\r\n      var name_1 = layerData[k].name;\r\n\r\n      for (var j = 0; j < layerData[k].dataList.length; ++j) {\r\n        var timeValue = layerData[k].dataList[j][0] + '';\r\n        timeValueKeys[timeValue] = k;\r\n      }\r\n\r\n      for (var timeValue in timeValueKeys) {\r\n        if (timeValueKeys.hasOwnProperty(timeValue) && timeValueKeys[timeValue] !== k) {\r\n          timeValueKeys[timeValue] = k;\r\n          data[rawDataLength] = [timeValue, 0, name_1];\r\n          rawDataLength++;\r\n        }\r\n      }\r\n    }\r\n\r\n    return data;\r\n  };\r\n  /**\r\n   * @override\r\n   * @param  option  the initial option that user gived\r\n   * @param  ecModel  the model object for themeRiver option\r\n   */\r\n\r\n\r\n  ThemeRiverSeriesModel.prototype.getInitialData = function (option, ecModel) {\r\n    var singleAxisModel = this.getReferringComponents('singleAxis', SINGLE_REFERRING).models[0];\r\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\r\n\r\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\r\n      return dataItem[2] !== undefined;\r\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\r\n\r\n    var data = this.fixData(filterData || []);\r\n    var nameList = [];\r\n    var nameMap = this.nameMap = zrUtil.createHashMap();\r\n    var count = 0;\r\n\r\n    for (var i = 0; i < data.length; ++i) {\r\n      nameList.push(data[i][DATA_NAME_INDEX]);\r\n\r\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\r\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\r\n        count++;\r\n      }\r\n    }\r\n\r\n    var dimensions = prepareSeriesDataSchema(data, {\r\n      coordDimensions: ['single'],\r\n      dimensionsDefine: [{\r\n        name: 'time',\r\n        type: getDimensionTypeByAxis(axisType)\r\n      }, {\r\n        name: 'value',\r\n        type: 'float'\r\n      }, {\r\n        name: 'name',\r\n        type: 'ordinal'\r\n      }],\r\n      encodeDefine: {\r\n        single: 0,\r\n        value: 1,\r\n        itemName: 2\r\n      }\r\n    }).dimensions;\r\n    var list = new SeriesData(dimensions, this);\r\n    list.initData(data);\r\n    return list;\r\n  };\r\n  /**\r\n   * The raw data is divided into multiple layers and each layer\r\n   *     has same name.\r\n   */\r\n\r\n\r\n  ThemeRiverSeriesModel.prototype.getLayerSeries = function () {\r\n    var data = this.getData();\r\n    var lenCount = data.count();\r\n    var indexArr = [];\r\n\r\n    for (var i = 0; i < lenCount; ++i) {\r\n      indexArr[i] = i;\r\n    }\r\n\r\n    var timeDim = data.mapDimension('single'); // data group by name\r\n\r\n    var groupResult = groupData(indexArr, function (index) {\r\n      return data.get('name', index);\r\n    });\r\n    var layerSeries = [];\r\n    groupResult.buckets.each(function (items, key) {\r\n      items.sort(function (index1, index2) {\r\n        return data.get(timeDim, index1) - data.get(timeDim, index2);\r\n      });\r\n      layerSeries.push({\r\n        name: key,\r\n        indices: items\r\n      });\r\n    });\r\n    return layerSeries;\r\n  };\r\n  /**\r\n   * Get data indices for show tooltip content\r\n   */\r\n\r\n\r\n  ThemeRiverSeriesModel.prototype.getAxisTooltipData = function (dim, value, baseAxis) {\r\n    if (!zrUtil.isArray(dim)) {\r\n      dim = dim ? [dim] : [];\r\n    }\r\n\r\n    var data = this.getData();\r\n    var layerSeries = this.getLayerSeries();\r\n    var indices = [];\r\n    var layerNum = layerSeries.length;\r\n    var nestestValue;\r\n\r\n    for (var i = 0; i < layerNum; ++i) {\r\n      var minDist = Number.MAX_VALUE;\r\n      var nearestIdx = -1;\r\n      var pointNum = layerSeries[i].indices.length;\r\n\r\n      for (var j = 0; j < pointNum; ++j) {\r\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\r\n        var dist = Math.abs(theValue - value);\r\n\r\n        if (dist <= minDist) {\r\n          nestestValue = theValue;\r\n          minDist = dist;\r\n          nearestIdx = layerSeries[i].indices[j];\r\n        }\r\n      }\r\n\r\n      indices.push(nearestIdx);\r\n    }\r\n\r\n    return {\r\n      dataIndices: indices,\r\n      nestestValue: nestestValue\r\n    };\r\n  };\r\n\r\n  ThemeRiverSeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\r\n    var data = this.getData();\r\n    var name = data.getName(dataIndex);\r\n    var value = data.get(data.mapDimension('value'), dataIndex);\r\n    return createTooltipMarkup('nameValue', {\r\n      name: name,\r\n      value: value\r\n    });\r\n  };\r\n\r\n  ThemeRiverSeriesModel.type = 'series.themeRiver';\r\n  ThemeRiverSeriesModel.dependencies = ['singleAxis'];\r\n  ThemeRiverSeriesModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 2,\r\n    colorBy: 'data',\r\n    coordinateSystem: 'singleAxis',\r\n    // gap in axis's orthogonal orientation\r\n    boundaryGap: ['10%', '10%'],\r\n    // legendHoverLink: true,\r\n    singleAxisIndex: 0,\r\n    animationEasing: 'linear',\r\n    label: {\r\n      margin: 4,\r\n      show: true,\r\n      position: 'left',\r\n      fontSize: 11\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true\r\n      }\r\n    }\r\n  };\r\n  return ThemeRiverSeriesModel;\r\n}(SeriesModel);\r\n\r\nexport default ThemeRiverSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as numberUtil from '../../util/number';\r\nexport default function themeRiverLayout(ecModel, api) {\r\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var single = seriesModel.coordinateSystem;\r\n    var layoutInfo = {}; // use the axis boundingRect for view\r\n\r\n    var rect = single.getRect();\r\n    layoutInfo.rect = rect;\r\n    var boundaryGap = seriesModel.get('boundaryGap');\r\n    var axis = single.getAxis();\r\n    layoutInfo.boundaryGap = boundaryGap;\r\n\r\n    if (axis.orient === 'horizontal') {\r\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\r\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\r\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\r\n      doThemeRiverLayout(data, seriesModel, height);\r\n    } else {\r\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\r\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\r\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\r\n      doThemeRiverLayout(data, seriesModel, width);\r\n    }\r\n\r\n    data.setLayout('layoutInfo', layoutInfo);\r\n  });\r\n}\r\n/**\r\n * The layout information about themeriver\r\n *\r\n * @param data  data in the series\r\n * @param seriesModel  the model object of themeRiver series\r\n * @param height  value used to compute every series height\r\n */\r\n\r\nfunction doThemeRiverLayout(data, seriesModel, height) {\r\n  if (!data.count()) {\r\n    return;\r\n  }\r\n\r\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\r\n\r\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\r\n\r\n  var timeDim = data.mapDimension('single');\r\n  var valueDim = data.mapDimension('value');\r\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\r\n    return zrUtil.map(singleLayer.indices, function (idx) {\r\n      var pt = coordSys.dataToPoint(data.get(timeDim, idx));\r\n      pt[1] = data.get(valueDim, idx);\r\n      return pt;\r\n    });\r\n  });\r\n  var base = computeBaseline(layerPoints);\r\n  var baseLine = base.y0;\r\n  var ky = height / base.max; // set layout information for each item.\r\n\r\n  var n = layerSeries.length;\r\n  var m = layerSeries[0].indices.length;\r\n  var baseY0;\r\n\r\n  for (var j = 0; j < m; ++j) {\r\n    baseY0 = baseLine[j] * ky;\r\n    data.setItemLayout(layerSeries[0].indices[j], {\r\n      layerIndex: 0,\r\n      x: layerPoints[0][j][0],\r\n      y0: baseY0,\r\n      y: layerPoints[0][j][1] * ky\r\n    });\r\n\r\n    for (var i = 1; i < n; ++i) {\r\n      baseY0 += layerPoints[i - 1][j][1] * ky;\r\n      data.setItemLayout(layerSeries[i].indices[j], {\r\n        layerIndex: i,\r\n        x: layerPoints[i][j][0],\r\n        y0: baseY0,\r\n        y: layerPoints[i][j][1] * ky\r\n      });\r\n    }\r\n  }\r\n}\r\n/**\r\n * Compute the baseLine of the rawdata\r\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\r\n *\r\n * @param  data  the points in each layer\r\n */\r\n\r\n\r\nfunction computeBaseline(data) {\r\n  var layerNum = data.length;\r\n  var pointNum = data[0].length;\r\n  var sums = [];\r\n  var y0 = [];\r\n  var max = 0;\r\n\r\n  for (var i = 0; i < pointNum; ++i) {\r\n    var temp = 0;\r\n\r\n    for (var j = 0; j < layerNum; ++j) {\r\n      temp += data[j][i][1];\r\n    }\r\n\r\n    if (temp > max) {\r\n      max = temp;\r\n    }\r\n\r\n    sums.push(temp);\r\n  }\r\n\r\n  for (var k = 0; k < pointNum; ++k) {\r\n    y0[k] = (max - sums[k]) / 2;\r\n  }\r\n\r\n  max = 0;\r\n\r\n  for (var l = 0; l < pointNum; ++l) {\r\n    var sum = sums[l] + y0[l];\r\n\r\n    if (sum > max) {\r\n      max = sum;\r\n    }\r\n  }\r\n\r\n  return {\r\n    y0: y0,\r\n    max: max\r\n  };\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\nimport ThemeRiverView from './ThemeRiverView';\r\nimport ThemeRiverSeriesModel from './ThemeRiverSeries';\r\nimport themeRiverLayout from './themeRiverLayout';\r\nimport dataFilter from '../../processor/dataFilter';\r\nexport function install(registers) {\r\n  registers.registerChartView(ThemeRiverView);\r\n  registers.registerSeriesModel(ThemeRiverSeriesModel);\r\n  registers.registerLayout(themeRiverLayout);\r\n  registers.registerProcessor(dataFilter('themeRiver'));\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as graphic from '../../util/graphic';\r\nimport { enableHoverEmphasis, SPECIAL_STATES, DISPLAY_STATES } from '../../util/states';\r\nimport { createTextStyle } from '../../label/labelStyle';\r\nimport { getECData } from '../../util/innerStore';\r\nimport { getSectorCornerRadius } from '../helper/pieHelper';\r\nimport { createOrUpdatePatternFromDecal } from '../../util/decal';\r\nimport { saveOldStyle } from '../../animation/basicTrasition';\r\nvar DEFAULT_SECTOR_Z = 2;\r\nvar DEFAULT_TEXT_Z = 4;\r\n/**\r\n * Sunburstce of Sunburst including Sector, Label, LabelLine\r\n */\r\n\r\nvar SunburstPiece =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(SunburstPiece, _super);\r\n\r\n  function SunburstPiece(node, seriesModel, ecModel, api) {\r\n    var _this = _super.call(this) || this;\r\n\r\n    _this.z2 = DEFAULT_SECTOR_Z;\r\n    _this.textConfig = {\r\n      inside: true\r\n    };\r\n    getECData(_this).seriesIndex = seriesModel.seriesIndex;\r\n    var text = new graphic.Text({\r\n      z2: DEFAULT_TEXT_Z,\r\n      silent: node.getModel().get(['label', 'silent'])\r\n    });\r\n\r\n    _this.setTextContent(text);\r\n\r\n    _this.updateData(true, node, seriesModel, ecModel, api);\r\n\r\n    return _this;\r\n  }\r\n\r\n  SunburstPiece.prototype.updateData = function (firstCreate, node, // state: 'emphasis' | 'normal' | 'highlight' | 'downplay',\r\n  seriesModel, ecModel, api) {\r\n    this.node = node;\r\n    node.piece = this;\r\n    seriesModel = seriesModel || this._seriesModel;\r\n    ecModel = ecModel || this._ecModel;\r\n    var sector = this;\r\n    getECData(sector).dataIndex = node.dataIndex;\r\n    var itemModel = node.getModel();\r\n    var emphasisModel = itemModel.getModel('emphasis');\r\n    var layout = node.getLayout();\r\n    var sectorShape = zrUtil.extend({}, layout);\r\n    sectorShape.label = null;\r\n    var normalStyle = node.getVisual('style');\r\n    normalStyle.lineJoin = 'bevel';\r\n    var decal = node.getVisual('decal');\r\n\r\n    if (decal) {\r\n      normalStyle.decal = createOrUpdatePatternFromDecal(decal, api);\r\n    }\r\n\r\n    var cornerRadius = getSectorCornerRadius(itemModel.getModel('itemStyle'), sectorShape, true);\r\n    zrUtil.extend(sectorShape, cornerRadius);\r\n    zrUtil.each(SPECIAL_STATES, function (stateName) {\r\n      var state = sector.ensureState(stateName);\r\n      var itemStyleModel = itemModel.getModel([stateName, 'itemStyle']);\r\n      state.style = itemStyleModel.getItemStyle(); // border radius\r\n\r\n      var cornerRadius = getSectorCornerRadius(itemStyleModel, sectorShape);\r\n\r\n      if (cornerRadius) {\r\n        state.shape = cornerRadius;\r\n      }\r\n    });\r\n\r\n    if (firstCreate) {\r\n      sector.setShape(sectorShape);\r\n      sector.shape.r = layout.r0;\r\n      graphic.updateProps(sector, {\r\n        shape: {\r\n          r: layout.r\r\n        }\r\n      }, seriesModel, node.dataIndex);\r\n    } else {\r\n      // Disable animation for gradient since no interpolation method\r\n      // is supported for gradient\r\n      graphic.updateProps(sector, {\r\n        shape: sectorShape\r\n      }, seriesModel);\r\n      saveOldStyle(sector);\r\n    }\r\n\r\n    sector.useStyle(normalStyle);\r\n\r\n    this._updateLabel(seriesModel);\r\n\r\n    var cursorStyle = itemModel.getShallow('cursor');\r\n    cursorStyle && sector.attr('cursor', cursorStyle);\r\n    this._seriesModel = seriesModel || this._seriesModel;\r\n    this._ecModel = ecModel || this._ecModel;\r\n    var focus = emphasisModel.get('focus');\r\n    var focusOrIndices = focus === 'ancestor' ? node.getAncestorsIndices() : focus === 'descendant' ? node.getDescendantIndices() : focus;\r\n    enableHoverEmphasis(this, focusOrIndices, emphasisModel.get('blurScope'));\r\n  };\r\n\r\n  SunburstPiece.prototype._updateLabel = function (seriesModel) {\r\n    var _this = this;\r\n\r\n    var itemModel = this.node.getModel();\r\n    var normalLabelModel = itemModel.getModel('label');\r\n    var layout = this.node.getLayout();\r\n    var angle = layout.endAngle - layout.startAngle;\r\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\r\n    var dx = Math.cos(midAngle);\r\n    var dy = Math.sin(midAngle);\r\n    var sector = this;\r\n    var label = sector.getTextContent();\r\n    var dataIndex = this.node.dataIndex;\r\n    var labelMinAngle = normalLabelModel.get('minAngle') / 180 * Math.PI;\r\n    var isNormalShown = normalLabelModel.get('show') && !(labelMinAngle != null && Math.abs(angle) < labelMinAngle);\r\n    label.ignore = !isNormalShown; // TODO use setLabelStyle\r\n\r\n    zrUtil.each(DISPLAY_STATES, function (stateName) {\r\n      var labelStateModel = stateName === 'normal' ? itemModel.getModel('label') : itemModel.getModel([stateName, 'label']);\r\n      var isNormal = stateName === 'normal';\r\n      var state = isNormal ? label : label.ensureState(stateName);\r\n      var text = seriesModel.getFormattedLabel(dataIndex, stateName);\r\n\r\n      if (isNormal) {\r\n        text = text || _this.node.name;\r\n      }\r\n\r\n      state.style = createTextStyle(labelStateModel, {}, null, stateName !== 'normal', true);\r\n\r\n      if (text) {\r\n        state.style.text = text;\r\n      } // Not displaying text when angle is too small\r\n\r\n\r\n      var isShown = labelStateModel.get('show');\r\n\r\n      if (isShown != null && !isNormal) {\r\n        state.ignore = !isShown;\r\n      }\r\n\r\n      var labelPosition = getLabelAttr(labelStateModel, 'position');\r\n      var sectorState = isNormal ? sector : sector.states[stateName];\r\n      var labelColor = sectorState.style.fill;\r\n      sectorState.textConfig = {\r\n        outsideFill: labelStateModel.get('color') === 'inherit' ? labelColor : null,\r\n        inside: labelPosition !== 'outside'\r\n      };\r\n      var r;\r\n      var labelPadding = getLabelAttr(labelStateModel, 'distance') || 0;\r\n      var textAlign = getLabelAttr(labelStateModel, 'align');\r\n\r\n      if (labelPosition === 'outside') {\r\n        r = layout.r + labelPadding;\r\n        textAlign = midAngle > Math.PI / 2 ? 'right' : 'left';\r\n      } else {\r\n        if (!textAlign || textAlign === 'center') {\r\n          r = (layout.r + layout.r0) / 2;\r\n          textAlign = 'center';\r\n        } else if (textAlign === 'left') {\r\n          r = layout.r0 + labelPadding;\r\n\r\n          if (midAngle > Math.PI / 2) {\r\n            textAlign = 'right';\r\n          }\r\n        } else if (textAlign === 'right') {\r\n          r = layout.r - labelPadding;\r\n\r\n          if (midAngle > Math.PI / 2) {\r\n            textAlign = 'left';\r\n          }\r\n        }\r\n      }\r\n\r\n      state.style.align = textAlign;\r\n      state.style.verticalAlign = getLabelAttr(labelStateModel, 'verticalAlign') || 'middle';\r\n      state.x = r * dx + layout.cx;\r\n      state.y = r * dy + layout.cy;\r\n      var rotateType = getLabelAttr(labelStateModel, 'rotate');\r\n      var rotate = 0;\r\n\r\n      if (rotateType === 'radial') {\r\n        rotate = -midAngle;\r\n\r\n        if (rotate < -Math.PI / 2) {\r\n          rotate += Math.PI;\r\n        }\r\n      } else if (rotateType === 'tangential') {\r\n        rotate = Math.PI / 2 - midAngle;\r\n\r\n        if (rotate > Math.PI / 2) {\r\n          rotate -= Math.PI;\r\n        } else if (rotate < -Math.PI / 2) {\r\n          rotate += Math.PI;\r\n        }\r\n      } else if (typeof rotateType === 'number') {\r\n        rotate = rotateType * Math.PI / 180;\r\n      }\r\n\r\n      state.rotation = rotate;\r\n    });\r\n\r\n    function getLabelAttr(model, name) {\r\n      var stateAttr = model.get(name);\r\n\r\n      if (stateAttr == null) {\r\n        return normalLabelModel.get(name);\r\n      }\r\n\r\n      return stateAttr;\r\n    }\r\n\r\n    label.dirtyStyle();\r\n  };\r\n\r\n  return SunburstPiece;\r\n}(graphic.Sector);\r\n\r\nexport default SunburstPiece;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { extend } from 'zrender/lib/core/util';\r\nimport { deprecateReplaceLog } from '../../util/log';\r\nimport { retrieveTargetInfo, aboveViewRoot } from '../helper/treeHelper';\r\nexport var ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\r\nvar HIGHLIGHT_ACTION = 'sunburstHighlight';\r\nvar UNHIGHLIGHT_ACTION = 'sunburstUnhighlight';\r\nexport function installSunburstAction(registers) {\r\n  registers.registerAction({\r\n    type: ROOT_TO_NODE_ACTION,\r\n    update: 'updateView'\r\n  }, function (payload, ecModel) {\r\n    ecModel.eachComponent({\r\n      mainType: 'series',\r\n      subType: 'sunburst',\r\n      query: payload\r\n    }, handleRootToNode);\r\n\r\n    function handleRootToNode(model, index) {\r\n      var targetInfo = retrieveTargetInfo(payload, [ROOT_TO_NODE_ACTION], model);\r\n\r\n      if (targetInfo) {\r\n        var originViewRoot = model.getViewRoot();\r\n\r\n        if (originViewRoot) {\r\n          payload.direction = aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\r\n        }\r\n\r\n        model.resetViewRoot(targetInfo.node);\r\n      }\r\n    }\r\n  });\r\n  registers.registerAction({\r\n    type: HIGHLIGHT_ACTION,\r\n    update: 'none'\r\n  }, function (payload, ecModel, api) {\r\n    // Clone\r\n    payload = extend({}, payload);\r\n    ecModel.eachComponent({\r\n      mainType: 'series',\r\n      subType: 'sunburst',\r\n      query: payload\r\n    }, handleHighlight);\r\n\r\n    function handleHighlight(model) {\r\n      var targetInfo = retrieveTargetInfo(payload, [HIGHLIGHT_ACTION], model);\r\n\r\n      if (targetInfo) {\r\n        payload.dataIndex = targetInfo.node.dataIndex;\r\n      }\r\n    }\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      deprecateReplaceLog('highlight', 'sunburstHighlight');\r\n    } // Fast forward action\r\n\r\n\r\n    api.dispatchAction(extend(payload, {\r\n      type: 'highlight'\r\n    }));\r\n  });\r\n  registers.registerAction({\r\n    type: UNHIGHLIGHT_ACTION,\r\n    update: 'updateView'\r\n  }, function (payload, ecModel, api) {\r\n    payload = extend({}, payload);\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      deprecateReplaceLog('downplay', 'sunburstUnhighlight');\r\n    }\r\n\r\n    api.dispatchAction(extend(payload, {\r\n      type: 'downplay'\r\n    }));\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport ChartView from '../../view/Chart';\r\nimport SunburstPiece from './SunburstPiece';\r\nimport DataDiffer from '../../data/DataDiffer';\r\nimport { ROOT_TO_NODE_ACTION } from './sunburstAction';\r\nimport { windowOpen } from '../../util/format';\r\n\r\nvar SunburstView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(SunburstView, _super);\r\n\r\n  function SunburstView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = SunburstView.type;\r\n    return _this;\r\n  }\r\n\r\n  SunburstView.prototype.render = function (seriesModel, ecModel, api, // @ts-ignore\r\n  payload) {\r\n    var self = this;\r\n    this.seriesModel = seriesModel;\r\n    this.api = api;\r\n    this.ecModel = ecModel;\r\n    var data = seriesModel.getData();\r\n    var virtualRoot = data.tree.root;\r\n    var newRoot = seriesModel.getViewRoot();\r\n    var group = this.group;\r\n    var renderLabelForZeroData = seriesModel.get('renderLabelForZeroData');\r\n    var newChildren = [];\r\n    newRoot.eachNode(function (node) {\r\n      newChildren.push(node);\r\n    });\r\n    var oldChildren = this._oldChildren || [];\r\n    dualTravel(newChildren, oldChildren);\r\n    renderRollUp(virtualRoot, newRoot);\r\n\r\n    this._initEvents();\r\n\r\n    this._oldChildren = newChildren;\r\n\r\n    function dualTravel(newChildren, oldChildren) {\r\n      if (newChildren.length === 0 && oldChildren.length === 0) {\r\n        return;\r\n      }\r\n\r\n      new DataDiffer(oldChildren, newChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\r\n\r\n      function getKey(node) {\r\n        return node.getId();\r\n      }\r\n\r\n      function processNode(newIdx, oldIdx) {\r\n        var newNode = newIdx == null ? null : newChildren[newIdx];\r\n        var oldNode = oldIdx == null ? null : oldChildren[oldIdx];\r\n        doRenderNode(newNode, oldNode);\r\n      }\r\n    }\r\n\r\n    function doRenderNode(newNode, oldNode) {\r\n      if (!renderLabelForZeroData && newNode && !newNode.getValue()) {\r\n        // Not render data with value 0\r\n        newNode = null;\r\n      }\r\n\r\n      if (newNode !== virtualRoot && oldNode !== virtualRoot) {\r\n        if (oldNode && oldNode.piece) {\r\n          if (newNode) {\r\n            // Update\r\n            oldNode.piece.updateData(false, newNode, seriesModel, ecModel, api); // For tooltip\r\n\r\n            data.setItemGraphicEl(newNode.dataIndex, oldNode.piece);\r\n          } else {\r\n            // Remove\r\n            removeNode(oldNode);\r\n          }\r\n        } else if (newNode) {\r\n          // Add\r\n          var piece = new SunburstPiece(newNode, seriesModel, ecModel, api);\r\n          group.add(piece); // For tooltip\r\n\r\n          data.setItemGraphicEl(newNode.dataIndex, piece);\r\n        }\r\n      }\r\n    }\r\n\r\n    function removeNode(node) {\r\n      if (!node) {\r\n        return;\r\n      }\r\n\r\n      if (node.piece) {\r\n        group.remove(node.piece);\r\n        node.piece = null;\r\n      }\r\n    }\r\n\r\n    function renderRollUp(virtualRoot, viewRoot) {\r\n      if (viewRoot.depth > 0) {\r\n        // Render\r\n        if (self.virtualPiece) {\r\n          // Update\r\n          self.virtualPiece.updateData(false, virtualRoot, seriesModel, ecModel, api);\r\n        } else {\r\n          // Add\r\n          self.virtualPiece = new SunburstPiece(virtualRoot, seriesModel, ecModel, api);\r\n          group.add(self.virtualPiece);\r\n        } // TODO event scope\r\n\r\n\r\n        viewRoot.piece.off('click');\r\n        self.virtualPiece.on('click', function (e) {\r\n          self._rootToNode(viewRoot.parentNode);\r\n        });\r\n      } else if (self.virtualPiece) {\r\n        // Remove\r\n        group.remove(self.virtualPiece);\r\n        self.virtualPiece = null;\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  SunburstView.prototype._initEvents = function () {\r\n    var _this = this;\r\n\r\n    this.group.off('click');\r\n    this.group.on('click', function (e) {\r\n      var targetFound = false;\r\n\r\n      var viewRoot = _this.seriesModel.getViewRoot();\r\n\r\n      viewRoot.eachNode(function (node) {\r\n        if (!targetFound && node.piece && node.piece === e.target) {\r\n          var nodeClick = node.getModel().get('nodeClick');\r\n\r\n          if (nodeClick === 'rootToNode') {\r\n            _this._rootToNode(node);\r\n          } else if (nodeClick === 'link') {\r\n            var itemModel = node.getModel();\r\n            var link = itemModel.get('link');\r\n\r\n            if (link) {\r\n              var linkTarget = itemModel.get('target', true) || '_blank';\r\n              windowOpen(link, linkTarget);\r\n            }\r\n          }\r\n\r\n          targetFound = true;\r\n        }\r\n      });\r\n    });\r\n  };\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  SunburstView.prototype._rootToNode = function (node) {\r\n    if (node !== this.seriesModel.getViewRoot()) {\r\n      this.api.dispatchAction({\r\n        type: ROOT_TO_NODE_ACTION,\r\n        from: this.uid,\r\n        seriesId: this.seriesModel.id,\r\n        targetNode: node\r\n      });\r\n    }\r\n  };\r\n  /**\r\n   * @implement\r\n   */\r\n\r\n\r\n  SunburstView.prototype.containPoint = function (point, seriesModel) {\r\n    var treeRoot = seriesModel.getData();\r\n    var itemLayout = treeRoot.getItemLayout(0);\r\n\r\n    if (itemLayout) {\r\n      var dx = point[0] - itemLayout.cx;\r\n      var dy = point[1] - itemLayout.cy;\r\n      var radius = Math.sqrt(dx * dx + dy * dy);\r\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\r\n    }\r\n  };\r\n\r\n  SunburstView.type = 'sunburst';\r\n  return SunburstView;\r\n}(ChartView);\r\n\r\nexport default SunburstView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport SeriesModel from '../../model/Series';\r\nimport Tree from '../../data/Tree';\r\nimport { wrapTreePathInfo } from '../helper/treeHelper';\r\nimport Model from '../../model/Model';\r\nimport enableAriaDecalForTree from '../helper/enableAriaDecalForTree';\r\n\r\nvar SunburstSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(SunburstSeriesModel, _super);\r\n\r\n  function SunburstSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = SunburstSeriesModel.type;\r\n    _this.ignoreStyleOnData = true;\r\n    return _this;\r\n  }\r\n\r\n  SunburstSeriesModel.prototype.getInitialData = function (option, ecModel) {\r\n    // Create a virtual root.\r\n    var root = {\r\n      name: option.name,\r\n      children: option.data\r\n    };\r\n    completeTreeValue(root);\r\n    var levelModels = this._levelModels = zrUtil.map(option.levels || [], function (levelDefine) {\r\n      return new Model(levelDefine, this, ecModel);\r\n    }, this); // Make sure always a new tree is created when setOption,\r\n    // in TreemapView, we check whether oldTree === newTree\r\n    // to choose mappings approach among old shapes and new shapes.\r\n\r\n    var tree = Tree.createTree(root, this, beforeLink);\r\n\r\n    function beforeLink(nodeData) {\r\n      nodeData.wrapMethod('getItemModel', function (model, idx) {\r\n        var node = tree.getNodeByDataIndex(idx);\r\n        var levelModel = levelModels[node.depth];\r\n        levelModel && (model.parentModel = levelModel);\r\n        return model;\r\n      });\r\n    }\r\n\r\n    return tree.data;\r\n  };\r\n\r\n  SunburstSeriesModel.prototype.optionUpdated = function () {\r\n    this.resetViewRoot();\r\n  };\r\n  /*\r\n   * @override\r\n   */\r\n\r\n\r\n  SunburstSeriesModel.prototype.getDataParams = function (dataIndex) {\r\n    var params = _super.prototype.getDataParams.apply(this, arguments);\r\n\r\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\r\n    params.treePathInfo = wrapTreePathInfo(node, this);\r\n    return params;\r\n  };\r\n\r\n  SunburstSeriesModel.prototype.getLevelModel = function (node) {\r\n    return this._levelModels && this._levelModels[node.depth];\r\n  };\r\n\r\n  SunburstSeriesModel.prototype.getViewRoot = function () {\r\n    return this._viewRoot;\r\n  };\r\n\r\n  SunburstSeriesModel.prototype.resetViewRoot = function (viewRoot) {\r\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\r\n    var root = this.getRawData().tree.root;\r\n\r\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\r\n      this._viewRoot = root;\r\n    }\r\n  };\r\n\r\n  SunburstSeriesModel.prototype.enableAriaDecal = function () {\r\n    enableAriaDecalForTree(this);\r\n  };\r\n\r\n  SunburstSeriesModel.type = 'series.sunburst';\r\n  SunburstSeriesModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 2,\r\n    // \u9ED8\u8BA4\u5168\u5C40\u5C45\u4E2D\r\n    center: ['50%', '50%'],\r\n    radius: [0, '75%'],\r\n    // \u9ED8\u8BA4\u987A\u65F6\u9488\r\n    clockwise: true,\r\n    startAngle: 90,\r\n    // \u6700\u5C0F\u89D2\u5EA6\u6539\u4E3A0\r\n    minAngle: 0,\r\n    // If still show when all data zero.\r\n    stillShowZeroSum: true,\r\n    // 'rootToNode', 'link', or false\r\n    nodeClick: 'rootToNode',\r\n    renderLabelForZeroData: false,\r\n    label: {\r\n      // could be: 'radial', 'tangential', or 'none'\r\n      rotate: 'radial',\r\n      show: true,\r\n      opacity: 1,\r\n      // 'left' is for inner side of inside, and 'right' is for outter\r\n      // side for inside\r\n      align: 'center',\r\n      position: 'inside',\r\n      distance: 5,\r\n      silent: true\r\n    },\r\n    itemStyle: {\r\n      borderWidth: 1,\r\n      borderColor: 'white',\r\n      borderType: 'solid',\r\n      shadowBlur: 0,\r\n      shadowColor: 'rgba(0, 0, 0, 0.2)',\r\n      shadowOffsetX: 0,\r\n      shadowOffsetY: 0,\r\n      opacity: 1\r\n    },\r\n    emphasis: {\r\n      focus: 'descendant'\r\n    },\r\n    blur: {\r\n      itemStyle: {\r\n        opacity: 0.2\r\n      },\r\n      label: {\r\n        opacity: 0.1\r\n      }\r\n    },\r\n    // Animation type canbe expansion, scale\r\n    animationType: 'expansion',\r\n    animationDuration: 1000,\r\n    animationDurationUpdate: 500,\r\n    data: [],\r\n\r\n    /**\r\n     * Sort order.\r\n     *\r\n     * Valid values: 'desc', 'asc', null, or callback function.\r\n     * 'desc' and 'asc' for descend and ascendant order;\r\n     * null for not sorting;\r\n     * example of callback function:\r\n     * function(nodeA, nodeB) {\r\n     *     return nodeA.getValue() - nodeB.getValue();\r\n     * }\r\n     */\r\n    sort: 'desc'\r\n  };\r\n  return SunburstSeriesModel;\r\n}(SeriesModel);\r\n\r\nfunction completeTreeValue(dataNode) {\r\n  // Postorder travel tree.\r\n  // If value of none-leaf node is not set,\r\n  // calculate it by suming up the value of all children.\r\n  var sum = 0;\r\n  zrUtil.each(dataNode.children, function (child) {\r\n    completeTreeValue(child);\r\n    var childValue = child.value; // TODO First value of array must be a number\r\n\r\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\r\n    sum += childValue;\r\n  });\r\n  var thisValue = dataNode.value;\r\n\r\n  if (zrUtil.isArray(thisValue)) {\r\n    thisValue = thisValue[0];\r\n  }\r\n\r\n  if (thisValue == null || isNaN(thisValue)) {\r\n    thisValue = sum;\r\n  } // Value should not less than 0.\r\n\r\n\r\n  if (thisValue < 0) {\r\n    thisValue = 0;\r\n  }\r\n\r\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\r\n}\r\n\r\nexport default SunburstSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { parsePercent } from '../../util/number';\r\nimport * as zrUtil from 'zrender/lib/core/util'; // let PI2 = Math.PI * 2;\r\n\r\nvar RADIAN = Math.PI / 180;\r\nexport default function sunburstLayout(seriesType, ecModel, api) {\r\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\r\n    var center = seriesModel.get('center');\r\n    var radius = seriesModel.get('radius');\r\n\r\n    if (!zrUtil.isArray(radius)) {\r\n      radius = [0, radius];\r\n    }\r\n\r\n    if (!zrUtil.isArray(center)) {\r\n      center = [center, center];\r\n    }\r\n\r\n    var width = api.getWidth();\r\n    var height = api.getHeight();\r\n    var size = Math.min(width, height);\r\n    var cx = parsePercent(center[0], width);\r\n    var cy = parsePercent(center[1], height);\r\n    var r0 = parsePercent(radius[0], size / 2);\r\n    var r = parsePercent(radius[1], size / 2);\r\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\r\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\r\n    var virtualRoot = seriesModel.getData().tree.root;\r\n    var treeRoot = seriesModel.getViewRoot();\r\n    var rootDepth = treeRoot.depth;\r\n    var sort = seriesModel.get('sort');\r\n\r\n    if (sort != null) {\r\n      initChildren(treeRoot, sort);\r\n    }\r\n\r\n    var validDataCount = 0;\r\n    zrUtil.each(treeRoot.children, function (child) {\r\n      !isNaN(child.getValue()) && validDataCount++;\r\n    });\r\n    var sum = treeRoot.getValue(); // Sum may be 0\r\n\r\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\r\n    var renderRollupNode = treeRoot.depth > 0;\r\n    var levels = treeRoot.height - (renderRollupNode ? -1 : 1);\r\n    var rPerLevel = (r - r0) / (levels || 1);\r\n    var clockwise = seriesModel.get('clockwise');\r\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // In the case some sector angle is smaller than minAngle\r\n    // let restAngle = PI2;\r\n    // let valueSumLargerThanMinAngle = 0;\r\n\r\n    var dir = clockwise ? 1 : -1;\r\n    /**\r\n     * Render a tree\r\n     * @return increased angle\r\n     */\r\n\r\n    var renderNode = function (node, startAngle) {\r\n      if (!node) {\r\n        return;\r\n      }\r\n\r\n      var endAngle = startAngle; // Render self\r\n\r\n      if (node !== virtualRoot) {\r\n        // Tree node is virtual, so it doesn't need to be drawn\r\n        var value = node.getValue();\r\n        var angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\r\n\r\n        if (angle < minAngle) {\r\n          angle = minAngle; // restAngle -= minAngle;\r\n        } // else {\r\n        //     valueSumLargerThanMinAngle += value;\r\n        // }\r\n\r\n\r\n        endAngle = startAngle + dir * angle;\r\n        var depth = node.depth - rootDepth - (renderRollupNode ? -1 : 1);\r\n        var rStart = r0 + rPerLevel * depth;\r\n        var rEnd = r0 + rPerLevel * (depth + 1);\r\n        var levelModel = seriesModel.getLevelModel(node);\r\n\r\n        if (levelModel) {\r\n          var r0_1 = levelModel.get('r0', true);\r\n          var r_1 = levelModel.get('r', true);\r\n          var radius_1 = levelModel.get('radius', true);\r\n\r\n          if (radius_1 != null) {\r\n            r0_1 = radius_1[0];\r\n            r_1 = radius_1[1];\r\n          }\r\n\r\n          r0_1 != null && (rStart = parsePercent(r0_1, size / 2));\r\n          r_1 != null && (rEnd = parsePercent(r_1, size / 2));\r\n        }\r\n\r\n        node.setLayout({\r\n          angle: angle,\r\n          startAngle: startAngle,\r\n          endAngle: endAngle,\r\n          clockwise: clockwise,\r\n          cx: cx,\r\n          cy: cy,\r\n          r0: rStart,\r\n          r: rEnd\r\n        });\r\n      } // Render children\r\n\r\n\r\n      if (node.children && node.children.length) {\r\n        // currentAngle = startAngle;\r\n        var siblingAngle_1 = 0;\r\n        zrUtil.each(node.children, function (node) {\r\n          siblingAngle_1 += renderNode(node, startAngle + siblingAngle_1);\r\n        });\r\n      }\r\n\r\n      return endAngle - startAngle;\r\n    }; // Virtual root node for roll up\r\n\r\n\r\n    if (renderRollupNode) {\r\n      var rStart = r0;\r\n      var rEnd = r0 + rPerLevel;\r\n      var angle = Math.PI * 2;\r\n      virtualRoot.setLayout({\r\n        angle: angle,\r\n        startAngle: startAngle,\r\n        endAngle: startAngle + angle,\r\n        clockwise: clockwise,\r\n        cx: cx,\r\n        cy: cy,\r\n        r0: rStart,\r\n        r: rEnd\r\n      });\r\n    }\r\n\r\n    renderNode(treeRoot, startAngle);\r\n  });\r\n}\r\n/**\r\n * Init node children by order and update visual\r\n */\r\n\r\nfunction initChildren(node, sortOrder) {\r\n  var children = node.children || [];\r\n  node.children = sort(children, sortOrder); // Init children recursively\r\n\r\n  if (children.length) {\r\n    zrUtil.each(node.children, function (child) {\r\n      initChildren(child, sortOrder);\r\n    });\r\n  }\r\n}\r\n/**\r\n * Sort children nodes\r\n *\r\n * @param {TreeNode[]}               children children of node to be sorted\r\n * @param {string | function | null} sort sort method\r\n *                                   See SunburstSeries.js for details.\r\n */\r\n\r\n\r\nfunction sort(children, sortOrder) {\r\n  if (typeof sortOrder === 'function') {\r\n    var sortTargets = zrUtil.map(children, function (child, idx) {\r\n      var value = child.getValue();\r\n      return {\r\n        params: {\r\n          depth: child.depth,\r\n          height: child.height,\r\n          dataIndex: child.dataIndex,\r\n          getValue: function () {\r\n            return value;\r\n          }\r\n        },\r\n        index: idx\r\n      };\r\n    });\r\n    sortTargets.sort(function (a, b) {\r\n      return sortOrder(a.params, b.params);\r\n    });\r\n    return zrUtil.map(sortTargets, function (target) {\r\n      return children[target.index];\r\n    });\r\n  } else {\r\n    var isAsc_1 = sortOrder === 'asc';\r\n    return children.sort(function (a, b) {\r\n      var diff = (a.getValue() - b.getValue()) * (isAsc_1 ? 1 : -1);\r\n      return diff === 0 ? (a.dataIndex - b.dataIndex) * (isAsc_1 ? -1 : 1) : diff;\r\n    });\r\n  }\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { lift } from 'zrender/lib/tool/color';\r\nimport { extend } from 'zrender/lib/core/util';\r\nexport default function sunburstVisual(ecModel) {\r\n  var paletteScope = {}; // Default color strategy\r\n\r\n  function pickColor(node, seriesModel, treeHeight) {\r\n    // Choose color from palette based on the first level.\r\n    var current = node;\r\n\r\n    while (current && current.depth > 1) {\r\n      current = current.parentNode;\r\n    }\r\n\r\n    var color = seriesModel.getColorFromPalette(current.name || current.dataIndex + '', paletteScope);\r\n\r\n    if (node.depth > 1 && typeof color === 'string') {\r\n      // Lighter on the deeper level.\r\n      color = lift(color, (node.depth - 1) / (treeHeight - 1) * 0.5);\r\n    }\r\n\r\n    return color;\r\n  }\r\n\r\n  ecModel.eachSeriesByType('sunburst', function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var tree = data.tree;\r\n    tree.eachNode(function (node) {\r\n      var model = node.getModel();\r\n      var style = model.getModel('itemStyle').getItemStyle();\r\n\r\n      if (!style.fill) {\r\n        style.fill = pickColor(node, seriesModel, tree.root.height);\r\n      }\r\n\r\n      var existsStyle = data.ensureUniqueItemVisual(node.dataIndex, 'style');\r\n      extend(existsStyle, style);\r\n    });\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport SunburstView from './SunburstView';\r\nimport SunburstSeriesModel from './SunburstSeries';\r\nimport sunburstLayout from './sunburstLayout';\r\nimport sunburstVisual from './sunburstVisual';\r\nimport dataFilter from '../../processor/dataFilter';\r\nimport { curry } from 'zrender/lib/core/util';\r\nimport { installSunburstAction } from './sunburstAction';\r\nexport function install(registers) {\r\n  registers.registerChartView(SunburstView);\r\n  registers.registerSeriesModel(SunburstSeriesModel);\r\n  registers.registerLayout(curry(sunburstLayout, 'sunburst'));\r\n  registers.registerProcessor(curry(dataFilter, 'sunburst'));\r\n  registers.registerVisual(sunburstVisual);\r\n  installSunburstAction(registers);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport createSeriesData from '../helper/createSeriesData';\r\nimport { makeInner } from '../../util/model';\r\nimport SeriesModel from '../../model/Series';\r\nexport var TRANSFORM_PROPS = {\r\n  x: 1,\r\n  y: 1,\r\n  scaleX: 1,\r\n  scaleY: 1,\r\n  originX: 1,\r\n  originY: 1,\r\n  rotation: 1\r\n}; // Also compat with ec4, where\r\n// `visual('color') visual('borderColor')` is supported.\r\n\r\nexport var STYLE_VISUAL_TYPE = {\r\n  color: 'fill',\r\n  borderColor: 'stroke'\r\n};\r\nexport var NON_STYLE_VISUAL_PROPS = {\r\n  symbol: 1,\r\n  symbolSize: 1,\r\n  symbolKeepAspect: 1,\r\n  legendIcon: 1,\r\n  visualMeta: 1,\r\n  liftZ: 1,\r\n  decal: 1\r\n};\r\n;\r\n;\r\nexport var customInnerStore = makeInner();\r\n\r\nvar CustomSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(CustomSeriesModel, _super);\r\n\r\n  function CustomSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = CustomSeriesModel.type;\r\n    return _this;\r\n  }\r\n\r\n  CustomSeriesModel.prototype.optionUpdated = function () {\r\n    this.currentZLevel = this.get('zlevel', true);\r\n    this.currentZ = this.get('z', true);\r\n  };\r\n\r\n  CustomSeriesModel.prototype.getInitialData = function (option, ecModel) {\r\n    return createSeriesData(null, this);\r\n  };\r\n\r\n  CustomSeriesModel.prototype.getDataParams = function (dataIndex, dataType, el) {\r\n    var params = _super.prototype.getDataParams.call(this, dataIndex, dataType);\r\n\r\n    el && (params.info = customInnerStore(el).info);\r\n    return params;\r\n  };\r\n\r\n  CustomSeriesModel.type = 'series.custom';\r\n  CustomSeriesModel.dependencies = ['grid', 'polar', 'geo', 'singleAxis', 'calendar'];\r\n  CustomSeriesModel.defaultOption = {\r\n    coordinateSystem: 'cartesian2d',\r\n    zlevel: 0,\r\n    z: 2,\r\n    legendHoverLink: true,\r\n    // Custom series will not clip by default.\r\n    // Some case will use custom series to draw label\r\n    // For example https://echarts.apache.org/examples/en/editor.html?c=custom-gantt-flight\r\n    clip: false // Cartesian coordinate system\r\n    // xAxisIndex: 0,\r\n    // yAxisIndex: 0,\r\n    // Polar coordinate system\r\n    // polarIndex: 0,\r\n    // Geo coordinate system\r\n    // geoIndex: 0,\r\n\r\n  };\r\n  return CustomSeriesModel;\r\n}(SeriesModel);\r\n\r\nexport default CustomSeriesModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\n\r\nfunction dataToCoordSize(dataSize, dataItem) {\r\n  // dataItem is necessary in log axis.\r\n  dataItem = dataItem || [0, 0];\r\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\r\n    var axis = this.getAxis(dim);\r\n    var val = dataItem[dimIdx];\r\n    var halfSize = dataSize[dimIdx] / 2;\r\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\r\n  }, this);\r\n}\r\n\r\nexport default function cartesianPrepareCustom(coordSys) {\r\n  var rect = coordSys.master.getRect();\r\n  return {\r\n    coordSys: {\r\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\r\n      type: 'cartesian2d',\r\n      x: rect.x,\r\n      y: rect.y,\r\n      width: rect.width,\r\n      height: rect.height\r\n    },\r\n    api: {\r\n      coord: function (data) {\r\n        // do not provide \"out\" param\r\n        return coordSys.dataToPoint(data);\r\n      },\r\n      size: zrUtil.bind(dataToCoordSize, coordSys)\r\n    }\r\n  };\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\n\r\nfunction dataToCoordSize(dataSize, dataItem) {\r\n  dataItem = dataItem || [0, 0];\r\n  return zrUtil.map([0, 1], function (dimIdx) {\r\n    var val = dataItem[dimIdx];\r\n    var halfSize = dataSize[dimIdx] / 2;\r\n    var p1 = [];\r\n    var p2 = [];\r\n    p1[dimIdx] = val - halfSize;\r\n    p2[dimIdx] = val + halfSize;\r\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\r\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\r\n  }, this);\r\n}\r\n\r\nexport default function geoPrepareCustom(coordSys) {\r\n  var rect = coordSys.getBoundingRect();\r\n  return {\r\n    coordSys: {\r\n      type: 'geo',\r\n      x: rect.x,\r\n      y: rect.y,\r\n      width: rect.width,\r\n      height: rect.height,\r\n      zoom: coordSys.getZoom()\r\n    },\r\n    api: {\r\n      coord: function (data) {\r\n        // do not provide \"out\" and noRoam param,\r\n        // Compatible with this usage:\r\n        // echarts.util.map(item.points, api.coord)\r\n        return coordSys.dataToPoint(data);\r\n      },\r\n      size: zrUtil.bind(dataToCoordSize, coordSys)\r\n    }\r\n  };\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { bind } from 'zrender/lib/core/util';\r\n\r\nfunction dataToCoordSize(dataSize, dataItem) {\r\n  // dataItem is necessary in log axis.\r\n  var axis = this.getAxis();\r\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\r\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\r\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\r\n}\r\n\r\nexport default function singlePrepareCustom(coordSys) {\r\n  var rect = coordSys.getRect();\r\n  return {\r\n    coordSys: {\r\n      type: 'singleAxis',\r\n      x: rect.x,\r\n      y: rect.y,\r\n      width: rect.width,\r\n      height: rect.height\r\n    },\r\n    api: {\r\n      coord: function (val) {\r\n        // do not provide \"out\" param\r\n        return coordSys.dataToPoint(val);\r\n      },\r\n      size: bind(dataToCoordSize, coordSys)\r\n    }\r\n  };\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util'; // import AngleAxis from './AngleAxis';\r\n\r\nfunction dataToCoordSize(dataSize, dataItem) {\r\n  // dataItem is necessary in log axis.\r\n  dataItem = dataItem || [0, 0];\r\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\r\n    var getterName = 'get' + dim + 'Axis'; // TODO: TYPE Check Angle Axis\r\n\r\n    var axis = this[getterName]();\r\n    var val = dataItem[dimIdx];\r\n    var halfSize = dataSize[dimIdx] / 2;\r\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\r\n\r\n    if (dim === 'Angle') {\r\n      result = result * Math.PI / 180;\r\n    }\r\n\r\n    return result;\r\n  }, this);\r\n}\r\n\r\nexport default function polarPrepareCustom(coordSys) {\r\n  var radiusAxis = coordSys.getRadiusAxis();\r\n  var angleAxis = coordSys.getAngleAxis();\r\n  var radius = radiusAxis.getExtent();\r\n  radius[0] > radius[1] && radius.reverse();\r\n  return {\r\n    coordSys: {\r\n      type: 'polar',\r\n      cx: coordSys.cx,\r\n      cy: coordSys.cy,\r\n      r: radius[1],\r\n      r0: radius[0]\r\n    },\r\n    api: {\r\n      coord: function (data) {\r\n        var radius = radiusAxis.dataToRadius(data[0]);\r\n        var angle = angleAxis.dataToAngle(data[1]);\r\n        var coord = coordSys.coordToPoint([radius, angle]);\r\n        coord.push(radius, angle * Math.PI / 180);\r\n        return coord;\r\n      },\r\n      size: zrUtil.bind(dataToCoordSize, coordSys)\r\n    }\r\n  };\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nexport default function calendarPrepareCustom(coordSys) {\r\n  var rect = coordSys.getRect();\r\n  var rangeInfo = coordSys.getRangeInfo();\r\n  return {\r\n    coordSys: {\r\n      type: 'calendar',\r\n      x: rect.x,\r\n      y: rect.y,\r\n      width: rect.width,\r\n      height: rect.height,\r\n      cellWidth: coordSys.getCellWidth(),\r\n      cellHeight: coordSys.getCellHeight(),\r\n      rangeInfo: {\r\n        start: rangeInfo.start,\r\n        end: rangeInfo.end,\r\n        weeks: rangeInfo.weeks,\r\n        dayCount: rangeInfo.allDay\r\n      }\r\n    },\r\n    api: {\r\n      coord: function (data, clamp) {\r\n        return coordSys.dataToPoint(data, clamp);\r\n      }\r\n    }\r\n  };\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { each, hasOwn } from 'zrender/lib/core/util';\r\nvar deprecatedLogs = {};\r\n/**\r\n * Whether need to call `convertEC4CompatibleStyle`.\r\n */\r\n\r\nexport function isEC4CompatibleStyle(style, elType, hasOwnTextContentOption, hasOwnTextConfig) {\r\n  // Since echarts5, `RectText` is separated from its host element and style.text\r\n  // does not exist any more. The compat work brings some extra burden on performance.\r\n  // So we provide:\r\n  // `legacy: true` force make compat.\r\n  // `legacy: false`, force do not compat.\r\n  // `legacy` not set: auto detect wheter legacy.\r\n  //     But in this case we do not compat (difficult to detect and rare case):\r\n  //     Becuse custom series and graphic component support \"merge\", users may firstly\r\n  //     only set `textStrokeWidth` style or secondly only set `text`.\r\n  return style && (style.legacy || style.legacy !== false && !hasOwnTextContentOption && !hasOwnTextConfig && elType !== 'tspan' // Difficult to detect whether legacy for a \"text\" el.\r\n  && (elType === 'text' || hasOwn(style, 'text')));\r\n}\r\n/**\r\n * `EC4CompatibleStyle` is style that might be in echarts4 format or echarts5 format.\r\n * @param hostStyle The properties might be modified.\r\n * @return If be text el, `textContentStyle` and `textConfig` will not be retured.\r\n *         Otherwise a `textContentStyle` and `textConfig` will be created, whose props area\r\n *         retried from the `hostStyle`.\r\n */\r\n\r\nexport function convertFromEC4CompatibleStyle(hostStyle, elType, isNormal) {\r\n  var srcStyle = hostStyle;\r\n  var textConfig;\r\n  var textContent;\r\n  var textContentStyle;\r\n\r\n  if (elType === 'text') {\r\n    textContentStyle = srcStyle;\r\n  } else {\r\n    textContentStyle = {};\r\n    hasOwn(srcStyle, 'text') && (textContentStyle.text = srcStyle.text);\r\n    hasOwn(srcStyle, 'rich') && (textContentStyle.rich = srcStyle.rich);\r\n    hasOwn(srcStyle, 'textFill') && (textContentStyle.fill = srcStyle.textFill);\r\n    hasOwn(srcStyle, 'textStroke') && (textContentStyle.stroke = srcStyle.textStroke);\r\n    hasOwn(srcStyle, 'fontFamily') && (textContentStyle.fontFamily = srcStyle.fontFamily);\r\n    hasOwn(srcStyle, 'fontSize') && (textContentStyle.fontSize = srcStyle.fontSize);\r\n    hasOwn(srcStyle, 'fontStyle') && (textContentStyle.fontStyle = srcStyle.fontStyle);\r\n    hasOwn(srcStyle, 'fontWeight') && (textContentStyle.fontWeight = srcStyle.fontWeight);\r\n    textContent = {\r\n      type: 'text',\r\n      style: textContentStyle,\r\n      // ec4 do not support rectText trigger.\r\n      // And when text postion is different in normal and emphasis\r\n      // => hover text trigger emphasis;\r\n      // => text position changed, leave mouse pointer immediately;\r\n      // That might cause state incorrect.\r\n      silent: true\r\n    };\r\n    textConfig = {};\r\n    var hasOwnPos = hasOwn(srcStyle, 'textPosition');\r\n\r\n    if (isNormal) {\r\n      textConfig.position = hasOwnPos ? srcStyle.textPosition : 'inside';\r\n    } else {\r\n      hasOwnPos && (textConfig.position = srcStyle.textPosition);\r\n    }\r\n\r\n    hasOwn(srcStyle, 'textPosition') && (textConfig.position = srcStyle.textPosition);\r\n    hasOwn(srcStyle, 'textOffset') && (textConfig.offset = srcStyle.textOffset);\r\n    hasOwn(srcStyle, 'textRotation') && (textConfig.rotation = srcStyle.textRotation);\r\n    hasOwn(srcStyle, 'textDistance') && (textConfig.distance = srcStyle.textDistance);\r\n  }\r\n\r\n  convertEC4CompatibleRichItem(textContentStyle, hostStyle);\r\n  each(textContentStyle.rich, function (richItem) {\r\n    convertEC4CompatibleRichItem(richItem, richItem);\r\n  });\r\n  return {\r\n    textConfig: textConfig,\r\n    textContent: textContent\r\n  };\r\n}\r\n/**\r\n * The result will be set to `out`.\r\n */\r\n\r\nfunction convertEC4CompatibleRichItem(out, richItem) {\r\n  if (!richItem) {\r\n    return;\r\n  } // (1) For simplicity, make textXXX properties (deprecated since ec5) has\r\n  // higher priority. For example, consider in ec4 `borderColor: 5, textBorderColor: 10`\r\n  // on a rect means `borderColor: 4` on the rect and `borderColor: 10` on an attached\r\n  // richText in ec5.\r\n  // (2) `out === richItem` if and only if `out` is text el or rich item.\r\n  // So we can overwite existing props in `out` since textXXX has higher priority.\r\n\r\n\r\n  richItem.font = richItem.textFont || richItem.font;\r\n  hasOwn(richItem, 'textStrokeWidth') && (out.lineWidth = richItem.textStrokeWidth);\r\n  hasOwn(richItem, 'textAlign') && (out.align = richItem.textAlign);\r\n  hasOwn(richItem, 'textVerticalAlign') && (out.verticalAlign = richItem.textVerticalAlign);\r\n  hasOwn(richItem, 'textLineHeight') && (out.lineHeight = richItem.textLineHeight);\r\n  hasOwn(richItem, 'textWidth') && (out.width = richItem.textWidth);\r\n  hasOwn(richItem, 'textHeight') && (out.height = richItem.textHeight);\r\n  hasOwn(richItem, 'textBackgroundColor') && (out.backgroundColor = richItem.textBackgroundColor);\r\n  hasOwn(richItem, 'textPadding') && (out.padding = richItem.textPadding);\r\n  hasOwn(richItem, 'textBorderColor') && (out.borderColor = richItem.textBorderColor);\r\n  hasOwn(richItem, 'textBorderWidth') && (out.borderWidth = richItem.textBorderWidth);\r\n  hasOwn(richItem, 'textBorderRadius') && (out.borderRadius = richItem.textBorderRadius);\r\n  hasOwn(richItem, 'textBoxShadowColor') && (out.shadowColor = richItem.textBoxShadowColor);\r\n  hasOwn(richItem, 'textBoxShadowBlur') && (out.shadowBlur = richItem.textBoxShadowBlur);\r\n  hasOwn(richItem, 'textBoxShadowOffsetX') && (out.shadowOffsetX = richItem.textBoxShadowOffsetX);\r\n  hasOwn(richItem, 'textBoxShadowOffsetY') && (out.shadowOffsetY = richItem.textBoxShadowOffsetY);\r\n}\r\n/**\r\n * Convert to pure echarts4 format style.\r\n * `itemStyle` will be modified, added with ec4 style properties from\r\n * `textStyle` and `textConfig`.\r\n *\r\n * [Caveat]: For simplicity, `insideRollback` in ec4 does not compat, where\r\n * `styleEmphasis: {textFill: 'red'}` will remove the normal auto added stroke.\r\n */\r\n\r\n\r\nexport function convertToEC4StyleForCustomSerise(itemStl, txStl, txCfg) {\r\n  var out = itemStl; // See `custom.ts`, a trick to set extra `textPosition` firstly.\r\n\r\n  out.textPosition = out.textPosition || txCfg.position || 'inside';\r\n  txCfg.offset != null && (out.textOffset = txCfg.offset);\r\n  txCfg.rotation != null && (out.textRotation = txCfg.rotation);\r\n  txCfg.distance != null && (out.textDistance = txCfg.distance);\r\n  var isInside = out.textPosition.indexOf('inside') >= 0;\r\n  var hostFill = itemStl.fill || '#000';\r\n  convertToEC4RichItem(out, txStl);\r\n  var textFillNotSet = out.textFill == null;\r\n\r\n  if (isInside) {\r\n    if (textFillNotSet) {\r\n      out.textFill = txCfg.insideFill || '#fff';\r\n      !out.textStroke && txCfg.insideStroke && (out.textStroke = txCfg.insideStroke);\r\n      !out.textStroke && (out.textStroke = hostFill);\r\n      out.textStrokeWidth == null && (out.textStrokeWidth = 2);\r\n    }\r\n  } else {\r\n    if (textFillNotSet) {\r\n      out.textFill = itemStl.fill || txCfg.outsideFill || '#000';\r\n    }\r\n\r\n    !out.textStroke && txCfg.outsideStroke && (out.textStroke = txCfg.outsideStroke);\r\n  }\r\n\r\n  out.text = txStl.text;\r\n  out.rich = txStl.rich;\r\n  each(txStl.rich, function (richItem) {\r\n    convertToEC4RichItem(richItem, richItem);\r\n  });\r\n  return out;\r\n}\r\n\r\nfunction convertToEC4RichItem(out, richItem) {\r\n  if (!richItem) {\r\n    return;\r\n  }\r\n\r\n  hasOwn(richItem, 'fill') && (out.textFill = richItem.fill);\r\n  hasOwn(richItem, 'stroke') && (out.textStroke = richItem.fill);\r\n  hasOwn(richItem, 'lineWidth') && (out.textStrokeWidth = richItem.lineWidth);\r\n  hasOwn(richItem, 'font') && (out.font = richItem.font);\r\n  hasOwn(richItem, 'fontStyle') && (out.fontStyle = richItem.fontStyle);\r\n  hasOwn(richItem, 'fontWeight') && (out.fontWeight = richItem.fontWeight);\r\n  hasOwn(richItem, 'fontSize') && (out.fontSize = richItem.fontSize);\r\n  hasOwn(richItem, 'fontFamily') && (out.fontFamily = richItem.fontFamily);\r\n  hasOwn(richItem, 'align') && (out.textAlign = richItem.align);\r\n  hasOwn(richItem, 'verticalAlign') && (out.textVerticalAlign = richItem.verticalAlign);\r\n  hasOwn(richItem, 'lineHeight') && (out.textLineHeight = richItem.lineHeight);\r\n  hasOwn(richItem, 'width') && (out.textWidth = richItem.width);\r\n  hasOwn(richItem, 'height') && (out.textHeight = richItem.height);\r\n  hasOwn(richItem, 'backgroundColor') && (out.textBackgroundColor = richItem.backgroundColor);\r\n  hasOwn(richItem, 'padding') && (out.textPadding = richItem.padding);\r\n  hasOwn(richItem, 'borderColor') && (out.textBorderColor = richItem.borderColor);\r\n  hasOwn(richItem, 'borderWidth') && (out.textBorderWidth = richItem.borderWidth);\r\n  hasOwn(richItem, 'borderRadius') && (out.textBorderRadius = richItem.borderRadius);\r\n  hasOwn(richItem, 'shadowColor') && (out.textBoxShadowColor = richItem.shadowColor);\r\n  hasOwn(richItem, 'shadowBlur') && (out.textBoxShadowBlur = richItem.shadowBlur);\r\n  hasOwn(richItem, 'shadowOffsetX') && (out.textBoxShadowOffsetX = richItem.shadowOffsetX);\r\n  hasOwn(richItem, 'shadowOffsetY') && (out.textBoxShadowOffsetY = richItem.shadowOffsetY);\r\n  hasOwn(richItem, 'textShadowColor') && (out.textShadowColor = richItem.textShadowColor);\r\n  hasOwn(richItem, 'textShadowBlur') && (out.textShadowBlur = richItem.textShadowBlur);\r\n  hasOwn(richItem, 'textShadowOffsetX') && (out.textShadowOffsetX = richItem.textShadowOffsetX);\r\n  hasOwn(richItem, 'textShadowOffsetY') && (out.textShadowOffsetY = richItem.textShadowOffsetY);\r\n}\r\n\r\nexport function warnDeprecated(deprecated, insteadApproach) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    var key = deprecated + '^_^' + insteadApproach;\r\n\r\n    if (!deprecatedLogs[key]) {\r\n      console.warn(\"[ECharts] DEPRECATED: \\\"\" + deprecated + \"\\\" has been deprecated. \" + insteadApproach);\r\n      deprecatedLogs[key] = true;\r\n    }\r\n  }\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { customInnerStore, TRANSFORM_PROPS } from './CustomSeries';\r\nimport { normalizeToArray } from '../../util/model';\r\nimport { assert, hasOwn, indexOf, isArrayLike, keys } from 'zrender/lib/core/util';\r\nimport { cloneValue } from 'zrender/lib/animation/Animator';\r\nvar LEGACY_TRANSFORM_PROPS = {\r\n  position: ['x', 'y'],\r\n  scale: ['scaleX', 'scaleY'],\r\n  origin: ['originX', 'originY']\r\n};\r\n\r\nfunction setLegacyTransformProp(elOption, targetProps, legacyName) {\r\n  var legacyArr = elOption[legacyName];\r\n  var xyName = LEGACY_TRANSFORM_PROPS[legacyName];\r\n\r\n  if (legacyArr) {\r\n    targetProps[xyName[0]] = legacyArr[0];\r\n    targetProps[xyName[1]] = legacyArr[1];\r\n  }\r\n}\r\n\r\nfunction setTransformProp(elOption, allProps, name) {\r\n  if (elOption[name] != null) {\r\n    allProps[name] = elOption[name];\r\n  }\r\n}\r\n\r\nfunction setTransformPropToTransitionFrom(transitionFrom, name, fromTransformable // If provided, retrieve from the element.\r\n) {\r\n  if (fromTransformable) {\r\n    transitionFrom[name] = fromTransformable[name];\r\n  }\r\n} // See [STRATEGY_TRANSITION]\r\n\r\n\r\nexport function prepareShapeOrExtraTransitionFrom(mainAttr, fromEl, elOption, transFromProps, isInit) {\r\n  var attrOpt = elOption[mainAttr];\r\n\r\n  if (!attrOpt) {\r\n    return;\r\n  }\r\n\r\n  var elPropsInAttr = fromEl[mainAttr];\r\n  var transFromPropsInAttr;\r\n  var enterFrom = attrOpt.enterFrom;\r\n\r\n  if (isInit && enterFrom) {\r\n    !transFromPropsInAttr && (transFromPropsInAttr = transFromProps[mainAttr] = {});\r\n    var enterFromKeys = keys(enterFrom);\r\n\r\n    for (var i = 0; i < enterFromKeys.length; i++) {\r\n      // `enterFrom` props are not necessarily also declared in `shape`/`style`/...,\r\n      // for example, `opacity` can only declared in `enterFrom` but not in `style`.\r\n      var key = enterFromKeys[i]; // Do not clone, animator will perform that clone.\r\n\r\n      transFromPropsInAttr[key] = enterFrom[key];\r\n    }\r\n  }\r\n\r\n  if (!isInit && elPropsInAttr) {\r\n    if (attrOpt.transition) {\r\n      !transFromPropsInAttr && (transFromPropsInAttr = transFromProps[mainAttr] = {});\r\n      var transitionKeys = normalizeToArray(attrOpt.transition);\r\n\r\n      for (var i = 0; i < transitionKeys.length; i++) {\r\n        var key = transitionKeys[i];\r\n        var elVal = elPropsInAttr[key];\r\n\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          checkNonStyleTansitionRefer(key, attrOpt[key], elVal);\r\n        } // Do not clone, see `checkNonStyleTansitionRefer`.\r\n\r\n\r\n        transFromPropsInAttr[key] = elVal;\r\n      }\r\n    } else if (indexOf(elOption.transition, mainAttr) >= 0) {\r\n      !transFromPropsInAttr && (transFromPropsInAttr = transFromProps[mainAttr] = {});\r\n      var elPropsInAttrKeys = keys(elPropsInAttr);\r\n\r\n      for (var i = 0; i < elPropsInAttrKeys.length; i++) {\r\n        var key = elPropsInAttrKeys[i];\r\n        var elVal = elPropsInAttr[key];\r\n\r\n        if (isNonStyleTransitionEnabled(attrOpt[key], elVal)) {\r\n          transFromPropsInAttr[key] = elVal;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  var leaveTo = attrOpt.leaveTo;\r\n\r\n  if (leaveTo) {\r\n    var leaveToProps = getOrCreateLeaveToPropsFromEl(fromEl);\r\n    var leaveToPropsInAttr = leaveToProps[mainAttr] || (leaveToProps[mainAttr] = {});\r\n    var leaveToKeys = keys(leaveTo);\r\n\r\n    for (var i = 0; i < leaveToKeys.length; i++) {\r\n      var key = leaveToKeys[i];\r\n      leaveToPropsInAttr[key] = leaveTo[key];\r\n    }\r\n  }\r\n}\r\nexport function prepareShapeOrExtraAllPropsFinal(mainAttr, elOption, allProps) {\r\n  var attrOpt = elOption[mainAttr];\r\n\r\n  if (!attrOpt) {\r\n    return;\r\n  }\r\n\r\n  var allPropsInAttr = allProps[mainAttr] = {};\r\n  var keysInAttr = keys(attrOpt);\r\n\r\n  for (var i = 0; i < keysInAttr.length; i++) {\r\n    var key = keysInAttr[i]; // To avoid share one object with different element, and\r\n    // to avoid user modify the object inexpectedly, have to clone.\r\n\r\n    allPropsInAttr[key] = cloneValue(attrOpt[key]);\r\n  }\r\n} // See [STRATEGY_TRANSITION].\r\n\r\nexport function prepareTransformTransitionFrom(el, elOption, transFromProps, isInit) {\r\n  var enterFrom = elOption.enterFrom;\r\n\r\n  if (isInit && enterFrom) {\r\n    var enterFromKeys = keys(enterFrom);\r\n\r\n    for (var i = 0; i < enterFromKeys.length; i++) {\r\n      var key = enterFromKeys[i];\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        checkTransformPropRefer(key, 'el.enterFrom');\r\n      } // Do not clone, animator will perform that clone.\r\n\r\n\r\n      transFromProps[key] = enterFrom[key];\r\n    }\r\n  }\r\n\r\n  if (!isInit) {\r\n    if (elOption.transition) {\r\n      var transitionKeys = normalizeToArray(elOption.transition);\r\n\r\n      for (var i = 0; i < transitionKeys.length; i++) {\r\n        var key = transitionKeys[i];\r\n\r\n        if (key === 'style' || key === 'shape' || key === 'extra') {\r\n          continue;\r\n        }\r\n\r\n        var elVal = el[key];\r\n\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          checkTransformPropRefer(key, 'el.transition');\r\n          checkNonStyleTansitionRefer(key, elOption[key], elVal);\r\n        } // Do not clone, see `checkNonStyleTansitionRefer`.\r\n\r\n\r\n        transFromProps[key] = elVal;\r\n      }\r\n    } // This default transition see [STRATEGY_TRANSITION]\r\n    else {\r\n        setTransformPropToTransitionFrom(transFromProps, 'x', el);\r\n        setTransformPropToTransitionFrom(transFromProps, 'y', el);\r\n      }\r\n  }\r\n\r\n  var leaveTo = elOption.leaveTo;\r\n\r\n  if (leaveTo) {\r\n    var leaveToProps = getOrCreateLeaveToPropsFromEl(el);\r\n    var leaveToKeys = keys(leaveTo);\r\n\r\n    for (var i = 0; i < leaveToKeys.length; i++) {\r\n      var key = leaveToKeys[i];\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        checkTransformPropRefer(key, 'el.leaveTo');\r\n      }\r\n\r\n      leaveToProps[key] = leaveTo[key];\r\n    }\r\n  }\r\n}\r\nexport function prepareTransformAllPropsFinal(el, elOption, allProps) {\r\n  setLegacyTransformProp(elOption, allProps, 'position');\r\n  setLegacyTransformProp(elOption, allProps, 'scale');\r\n  setLegacyTransformProp(elOption, allProps, 'origin');\r\n  setTransformProp(elOption, allProps, 'x');\r\n  setTransformProp(elOption, allProps, 'y');\r\n  setTransformProp(elOption, allProps, 'scaleX');\r\n  setTransformProp(elOption, allProps, 'scaleY');\r\n  setTransformProp(elOption, allProps, 'originX');\r\n  setTransformProp(elOption, allProps, 'originY');\r\n  setTransformProp(elOption, allProps, 'rotation');\r\n} // See [STRATEGY_TRANSITION].\r\n\r\nexport function prepareStyleTransitionFrom(fromEl, elOption, styleOpt, transFromProps, isInit) {\r\n  if (!styleOpt) {\r\n    return;\r\n  }\r\n\r\n  var fromElStyle = fromEl.style;\r\n  var transFromStyleProps;\r\n  var enterFrom = styleOpt.enterFrom;\r\n\r\n  if (isInit && enterFrom) {\r\n    var enterFromKeys = keys(enterFrom);\r\n    !transFromStyleProps && (transFromStyleProps = transFromProps.style = {});\r\n\r\n    for (var i = 0; i < enterFromKeys.length; i++) {\r\n      var key = enterFromKeys[i]; // Do not clone, animator will perform that clone.\r\n\r\n      transFromStyleProps[key] = enterFrom[key];\r\n    }\r\n  }\r\n\r\n  if (!isInit && fromElStyle) {\r\n    if (styleOpt.transition) {\r\n      var transitionKeys = normalizeToArray(styleOpt.transition);\r\n      !transFromStyleProps && (transFromStyleProps = transFromProps.style = {});\r\n\r\n      for (var i = 0; i < transitionKeys.length; i++) {\r\n        var key = transitionKeys[i];\r\n        var elVal = fromElStyle[key]; // Do not clone, see `checkNonStyleTansitionRefer`.\r\n\r\n        transFromStyleProps[key] = elVal;\r\n      }\r\n    } else if (fromEl.getAnimationStyleProps && indexOf(elOption.transition, 'style') >= 0) {\r\n      var animationProps = fromEl.getAnimationStyleProps();\r\n      var animationStyleProps = animationProps ? animationProps.style : null;\r\n\r\n      if (animationStyleProps) {\r\n        !transFromStyleProps && (transFromStyleProps = transFromProps.style = {});\r\n        var styleKeys = keys(styleOpt);\r\n\r\n        for (var i = 0; i < styleKeys.length; i++) {\r\n          var key = styleKeys[i];\r\n\r\n          if (animationStyleProps[key]) {\r\n            var elVal = fromElStyle[key];\r\n            transFromStyleProps[key] = elVal;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  var leaveTo = styleOpt.leaveTo;\r\n\r\n  if (leaveTo) {\r\n    var leaveToKeys = keys(leaveTo);\r\n    var leaveToProps = getOrCreateLeaveToPropsFromEl(fromEl);\r\n    var leaveToStyleProps = leaveToProps.style || (leaveToProps.style = {});\r\n\r\n    for (var i = 0; i < leaveToKeys.length; i++) {\r\n      var key = leaveToKeys[i];\r\n      leaveToStyleProps[key] = leaveTo[key];\r\n    }\r\n  }\r\n}\r\nvar checkNonStyleTansitionRefer;\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  checkNonStyleTansitionRefer = function (propName, optVal, elVal) {\r\n    if (!isArrayLike(optVal)) {\r\n      assert(optVal != null && isFinite(optVal), 'Prop `' + propName + '` must refer to a finite number or ArrayLike for transition.');\r\n    } else {\r\n      // Try not to copy array for performance, but if user use the same object in different\r\n      // call of `renderItem`, it will casue animation transition fail.\r\n      assert(optVal !== elVal, 'Prop `' + propName + '` must use different Array object each time for transition.');\r\n    }\r\n  };\r\n}\r\n\r\nfunction isNonStyleTransitionEnabled(optVal, elVal) {\r\n  // The same as `checkNonStyleTansitionRefer`.\r\n  return !isArrayLike(optVal) ? optVal != null && isFinite(optVal) : optVal !== elVal;\r\n}\r\n\r\nvar checkTransformPropRefer;\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  checkTransformPropRefer = function (key, usedIn) {\r\n    assert(hasOwn(TRANSFORM_PROPS, key), 'Prop `' + key + '` is not a permitted in `' + usedIn + '`. ' + 'Only `' + keys(TRANSFORM_PROPS).join('`, `') + '` are permitted.');\r\n  };\r\n}\r\n\r\nfunction getOrCreateLeaveToPropsFromEl(el) {\r\n  var innerEl = customInnerStore(el);\r\n  return innerEl.leaveToProps || (innerEl.leaveToProps = {});\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport { hasOwn, assert, isString, retrieve2, retrieve3, defaults, each, keys, bind, eqNaN, indexOf } from 'zrender/lib/core/util';\r\nimport * as graphicUtil from '../../util/graphic';\r\nimport { setDefaultStateProxy, enableHoverEmphasis } from '../../util/states';\r\nimport * as labelStyleHelper from '../../label/labelStyle';\r\nimport { getDefaultLabel } from '../helper/labelHelper';\r\nimport { getLayoutOnAxis } from '../../layout/barGrid';\r\nimport DataDiffer from '../../data/DataDiffer';\r\nimport ChartView from '../../view/Chart';\r\nimport { createClipPath } from '../helper/createClipPathFromCoordSys';\r\nimport prepareCartesian2d from '../../coord/cartesian/prepareCustom';\r\nimport prepareGeo from '../../coord/geo/prepareCustom';\r\nimport prepareSingleAxis from '../../coord/single/prepareCustom';\r\nimport preparePolar from '../../coord/polar/prepareCustom';\r\nimport prepareCalendar from '../../coord/calendar/prepareCustom';\r\nimport Displayable from 'zrender/lib/graphic/Displayable';\r\nimport { convertToEC4StyleForCustomSerise, isEC4CompatibleStyle, convertFromEC4CompatibleStyle, warnDeprecated } from '../../util/styleCompat';\r\nimport { warn, throwError } from '../../util/log';\r\nimport { createOrUpdatePatternFromDecal } from '../../util/decal';\r\nimport { TRANSFORM_PROPS, STYLE_VISUAL_TYPE, NON_STYLE_VISUAL_PROPS, customInnerStore } from './CustomSeries';\r\nimport { prepareShapeOrExtraAllPropsFinal, prepareShapeOrExtraTransitionFrom, prepareStyleTransitionFrom, prepareTransformAllPropsFinal, prepareTransformTransitionFrom } from './prepare';\r\nvar transformPropNamesStr = keys(TRANSFORM_PROPS).join(', ');\r\nvar EMPHASIS = 'emphasis';\r\nvar NORMAL = 'normal';\r\nvar BLUR = 'blur';\r\nvar SELECT = 'select';\r\nvar STATES = [NORMAL, EMPHASIS, BLUR, SELECT];\r\nvar PATH_ITEM_STYLE = {\r\n  normal: ['itemStyle'],\r\n  emphasis: [EMPHASIS, 'itemStyle'],\r\n  blur: [BLUR, 'itemStyle'],\r\n  select: [SELECT, 'itemStyle']\r\n};\r\nvar PATH_LABEL = {\r\n  normal: ['label'],\r\n  emphasis: [EMPHASIS, 'label'],\r\n  blur: [BLUR, 'label'],\r\n  select: [SELECT, 'label']\r\n}; // Use prefix to avoid index to be the same as el.name,\r\n// which will cause weird update animation.\r\n\r\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\r\nvar attachedTxInfoTmp = {\r\n  normal: {},\r\n  emphasis: {},\r\n  blur: {},\r\n  select: {}\r\n};\r\n/**\r\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\r\n * of each coordinate systems are not required by each coordinate systems directly, but\r\n * required by the module `custom`.\r\n *\r\n * prepareInfoForCustomSeries {Function}: optional\r\n *     @return {Object} {coordSys: {...}, api: {\r\n *         coord: function (data, clamp) {}, // return point in global.\r\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\r\n *     }}\r\n */\r\n\r\nvar prepareCustoms = {\r\n  cartesian2d: prepareCartesian2d,\r\n  geo: prepareGeo,\r\n  singleAxis: prepareSingleAxis,\r\n  polar: preparePolar,\r\n  calendar: prepareCalendar\r\n};\r\n\r\nfunction isPath(el) {\r\n  return el instanceof graphicUtil.Path;\r\n}\r\n\r\nfunction isDisplayable(el) {\r\n  return el instanceof Displayable;\r\n}\r\n\r\nfunction copyElement(sourceEl, targetEl) {\r\n  targetEl.copyTransform(sourceEl);\r\n\r\n  if (isDisplayable(targetEl) && isDisplayable(sourceEl)) {\r\n    targetEl.setStyle(sourceEl.style);\r\n    targetEl.z = sourceEl.z;\r\n    targetEl.z2 = sourceEl.z2;\r\n    targetEl.zlevel = sourceEl.zlevel;\r\n    targetEl.invisible = sourceEl.invisible;\r\n    targetEl.ignore = sourceEl.ignore;\r\n\r\n    if (isPath(targetEl) && isPath(sourceEl)) {\r\n      targetEl.setShape(sourceEl.shape);\r\n    }\r\n  }\r\n}\r\n\r\nvar CustomChartView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(CustomChartView, _super);\r\n\r\n  function CustomChartView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = CustomChartView.type;\r\n    return _this;\r\n  }\r\n\r\n  CustomChartView.prototype.render = function (customSeries, ecModel, api, payload) {\r\n    var oldData = this._data;\r\n    var data = customSeries.getData();\r\n    var group = this.group;\r\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\r\n\r\n    if (!oldData) {\r\n      // Previous render is incremental render or first render.\r\n      // Needs remove the incremental rendered elements.\r\n      group.removeAll();\r\n    }\r\n\r\n    data.diff(oldData).add(function (newIdx) {\r\n      createOrUpdateItem(api, null, newIdx, renderItem(newIdx, payload), customSeries, group, data);\r\n    }).remove(function (oldIdx) {\r\n      doRemoveEl(oldData.getItemGraphicEl(oldIdx), customSeries, group);\r\n    }).update(function (newIdx, oldIdx) {\r\n      var oldEl = oldData.getItemGraphicEl(oldIdx);\r\n      createOrUpdateItem(api, oldEl, newIdx, renderItem(newIdx, payload), customSeries, group, data);\r\n    }).execute(); // Do clipping\r\n\r\n    var clipPath = customSeries.get('clip', true) ? createClipPath(customSeries.coordinateSystem, false, customSeries) : null;\r\n\r\n    if (clipPath) {\r\n      group.setClipPath(clipPath);\r\n    } else {\r\n      group.removeClipPath();\r\n    }\r\n\r\n    this._data = data;\r\n  };\r\n\r\n  CustomChartView.prototype.incrementalPrepareRender = function (customSeries, ecModel, api) {\r\n    this.group.removeAll();\r\n    this._data = null;\r\n  };\r\n\r\n  CustomChartView.prototype.incrementalRender = function (params, customSeries, ecModel, api, payload) {\r\n    var data = customSeries.getData();\r\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\r\n\r\n    function setIncrementalAndHoverLayer(el) {\r\n      if (!el.isGroup) {\r\n        el.incremental = true;\r\n        el.ensureState('emphasis').hoverLayer = true;\r\n      }\r\n    }\r\n\r\n    for (var idx = params.start; idx < params.end; idx++) {\r\n      var el = createOrUpdateItem(null, null, idx, renderItem(idx, payload), customSeries, this.group, data);\r\n      el && el.traverse(setIncrementalAndHoverLayer);\r\n    }\r\n  };\r\n\r\n  CustomChartView.prototype.filterForExposedEvent = function (eventType, query, targetEl, packedEvent) {\r\n    var elementName = query.element;\r\n\r\n    if (elementName == null || targetEl.name === elementName) {\r\n      return true;\r\n    } // Enable to give a name on a group made by `renderItem`, and listen\r\n    // events that triggerd by its descendents.\r\n\r\n\r\n    while ((targetEl = targetEl.__hostTarget || targetEl.parent) && targetEl !== this.group) {\r\n      if (targetEl.name === elementName) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  CustomChartView.type = 'custom';\r\n  return CustomChartView;\r\n}(ChartView);\r\n\r\nexport default CustomChartView;\r\n\r\nfunction createEl(elOption) {\r\n  var graphicType = elOption.type;\r\n  var el; // Those graphic elements are not shapes. They should not be\r\n  // overwritten by users, so do them first.\r\n\r\n  if (graphicType === 'path') {\r\n    var shape = elOption.shape; // Using pathRect brings convenience to users sacle svg path.\r\n\r\n    var pathRect = shape.width != null && shape.height != null ? {\r\n      x: shape.x || 0,\r\n      y: shape.y || 0,\r\n      width: shape.width,\r\n      height: shape.height\r\n    } : null;\r\n    var pathData = getPathData(shape); // Path is also used for icon, so layout 'center' by default.\r\n\r\n    el = graphicUtil.makePath(pathData, null, pathRect, shape.layout || 'center');\r\n    customInnerStore(el).customPathData = pathData;\r\n  } else if (graphicType === 'image') {\r\n    el = new graphicUtil.Image({});\r\n    customInnerStore(el).customImagePath = elOption.style.image;\r\n  } else if (graphicType === 'text') {\r\n    el = new graphicUtil.Text({}); // customInnerStore(el).customText = (elOption.style as TextStyleProps).text;\r\n  } else if (graphicType === 'group') {\r\n    el = new graphicUtil.Group();\r\n  } else if (graphicType === 'compoundPath') {\r\n    throw new Error('\"compoundPath\" is not supported yet.');\r\n  } else {\r\n    var Clz = graphicUtil.getShapeClass(graphicType);\r\n\r\n    if (!Clz) {\r\n      var errMsg = '';\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        errMsg = 'graphic type \"' + graphicType + '\" can not be found.';\r\n      }\r\n\r\n      throwError(errMsg);\r\n    }\r\n\r\n    el = new Clz();\r\n  }\r\n\r\n  customInnerStore(el).customGraphicType = graphicType;\r\n  el.name = elOption.name; // Compat ec4: the default z2 lift is 1. If changing the number,\r\n  // some cases probably be broken: hierarchy layout along z, like circle packing,\r\n  // where emphasis only intending to modify color/border rather than lift z2.\r\n\r\n  el.z2EmphasisLift = 1;\r\n  el.z2SelectLift = 1;\r\n  return el;\r\n}\r\n\r\nfunction updateElNormal( // Can be null/undefined\r\napi, el, dataIndex, elOption, attachedTxInfo, seriesModel, isInit, isTextContent) {\r\n  var txCfgOpt = attachedTxInfo && attachedTxInfo.normal.cfg;\r\n\r\n  if (txCfgOpt) {\r\n    // PENDING: whether use user object directly rather than clone?\r\n    // TODO:5.0 textConfig transition animation?\r\n    el.setTextConfig(txCfgOpt);\r\n  } // Do some normalization on style.\r\n\r\n\r\n  var styleOpt = elOption && elOption.style;\r\n\r\n  if (styleOpt) {\r\n    if (el.type === 'text') {\r\n      var textOptionStyle = styleOpt; // Compatible with ec4: if `textFill` or `textStroke` exists use them.\r\n\r\n      hasOwn(textOptionStyle, 'textFill') && (textOptionStyle.fill = textOptionStyle.textFill);\r\n      hasOwn(textOptionStyle, 'textStroke') && (textOptionStyle.stroke = textOptionStyle.textStroke);\r\n    }\r\n\r\n    var decalPattern = void 0;\r\n    var decalObj = isPath(el) ? styleOpt.decal : null;\r\n\r\n    if (api && decalObj) {\r\n      decalObj.dirty = true;\r\n      decalPattern = createOrUpdatePatternFromDecal(decalObj, api);\r\n    } // Always overwrite in case user specify this prop.\r\n\r\n\r\n    styleOpt.__decalPattern = decalPattern;\r\n  } // Save the meta info for further morphing. Like apply on the sub morphing elements.\r\n\r\n\r\n  var store = customInnerStore(el);\r\n  store.userDuring = elOption.during;\r\n  var transFromProps = {};\r\n  var propsToSet = {};\r\n  prepareShapeOrExtraTransitionFrom('shape', el, elOption, transFromProps, isInit);\r\n  prepareShapeOrExtraAllPropsFinal('shape', elOption, propsToSet);\r\n  prepareTransformTransitionFrom(el, elOption, transFromProps, isInit);\r\n  prepareTransformAllPropsFinal(el, elOption, propsToSet);\r\n  prepareShapeOrExtraTransitionFrom('extra', el, elOption, transFromProps, isInit);\r\n  prepareShapeOrExtraAllPropsFinal('extra', elOption, propsToSet);\r\n  prepareStyleTransitionFrom(el, elOption, styleOpt, transFromProps, isInit);\r\n  propsToSet.style = styleOpt;\r\n  applyPropsDirectly(el, propsToSet);\r\n  applyPropsTransition(el, dataIndex, seriesModel, transFromProps, isInit);\r\n  applyMiscProps(el, elOption, isTextContent);\r\n  styleOpt ? el.dirty() : el.markRedraw();\r\n}\r\n\r\nfunction applyMiscProps(el, elOption, isTextContent) {\r\n  // Merge by default.\r\n  hasOwn(elOption, 'silent') && (el.silent = elOption.silent);\r\n  hasOwn(elOption, 'ignore') && (el.ignore = elOption.ignore);\r\n\r\n  if (isDisplayable(el)) {\r\n    hasOwn(elOption, 'invisible') && (el.invisible = elOption.invisible);\r\n  }\r\n\r\n  if (isPath(el)) {\r\n    hasOwn(elOption, 'autoBatch') && (el.autoBatch = elOption.autoBatch);\r\n  }\r\n\r\n  if (!isTextContent) {\r\n    // `elOption.info` enables user to mount some info on\r\n    // elements and use them in event handlers.\r\n    // Update them only when user specified, otherwise, remain.\r\n    hasOwn(elOption, 'info') && (customInnerStore(el).info = elOption.info);\r\n  }\r\n}\r\n\r\nfunction applyPropsDirectly(el, // Can be null/undefined\r\nallPropsFinal) {\r\n  var elDisplayable = el.isGroup ? null : el;\r\n  var styleOpt = allPropsFinal.style;\r\n\r\n  if (elDisplayable && styleOpt) {\r\n    // PENDING: here the input style object is used directly.\r\n    // Good for performance but bad for compatibility control.\r\n    elDisplayable.useStyle(styleOpt);\r\n    var decalPattern = styleOpt.__decalPattern;\r\n\r\n    if (decalPattern) {\r\n      elDisplayable.style.decal = decalPattern;\r\n    } // When style object changed, how to trade the existing animation?\r\n    // It is probably complicated and not needed to cover all the cases.\r\n    // But still need consider the case:\r\n    // (1) When using init animation on `style.opacity`, and before the animation\r\n    //     ended users triggers an update by mousewhel. At that time the init\r\n    //     animation should better be continued rather than terminated.\r\n    //     So after `useStyle` called, we should change the animation target manually\r\n    //     to continue the effect of the init animation.\r\n    // (2) PENDING: If the previous animation targeted at a `val1`, and currently we need\r\n    //     to update the value to `val2` and no animation declared, should be terminate\r\n    //     the previous animation or just modify the target of the animation?\r\n    //     Therotically That will happen not only on `style` but also on `shape` and\r\n    //     `transfrom` props. But we haven't handle this case at present yet.\r\n    // (3) PENDING: Is it proper to visit `animators` and `targetName`?\r\n\r\n\r\n    var animators = elDisplayable.animators;\r\n\r\n    for (var i = 0; i < animators.length; i++) {\r\n      var animator = animators[i]; // targetName is the \"topKey\".\r\n\r\n      if (animator.targetName === 'style') {\r\n        animator.changeTarget(elDisplayable.style);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (allPropsFinal) {\r\n    // Not set style here.\r\n    allPropsFinal.style = null; // Set el to the final state firstly.\r\n\r\n    allPropsFinal && el.attr(allPropsFinal);\r\n    allPropsFinal.style = styleOpt;\r\n  }\r\n}\r\n\r\nfunction applyPropsTransition(el, dataIndex, seriesModel, // Can be null/undefined\r\ntransFromProps, isInit) {\r\n  if (transFromProps) {\r\n    // NOTE: Do not use `el.updateDuringAnimation` here becuase `el.updateDuringAnimation` will\r\n    // be called mutiple time in each animation frame. For example, if both \"transform\" props\r\n    // and shape props and style props changed, it will generate three animator and called\r\n    // one-by-one in each animation frame.\r\n    // We use the during in `animateTo/From` params.\r\n    var userDuring = customInnerStore(el).userDuring; // For simplicity, if during not specified, the previous during will not work any more.\r\n\r\n    var cfgDuringCall = userDuring ? bind(duringCall, {\r\n      el: el,\r\n      userDuring: userDuring\r\n    }) : null;\r\n    var cfg = {\r\n      dataIndex: dataIndex,\r\n      isFrom: true,\r\n      during: cfgDuringCall\r\n    };\r\n    isInit ? graphicUtil.initProps(el, transFromProps, seriesModel, cfg) : graphicUtil.updateProps(el, transFromProps, seriesModel, cfg);\r\n  }\r\n} // Use it to avoid it be exposed to user.\r\n\r\n\r\nvar tmpDuringScope = {};\r\nvar customDuringAPI = {\r\n  // Usually other props do not need to be changed in animation during.\r\n  setTransform: function (key, val) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      assert(hasOwn(TRANSFORM_PROPS, key), 'Only ' + transformPropNamesStr + ' available in `setTransform`.');\r\n    }\r\n\r\n    tmpDuringScope.el[key] = val;\r\n    return this;\r\n  },\r\n  getTransform: function (key) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      assert(hasOwn(TRANSFORM_PROPS, key), 'Only ' + transformPropNamesStr + ' available in `getTransform`.');\r\n    }\r\n\r\n    return tmpDuringScope.el[key];\r\n  },\r\n  setShape: function (key, val) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      assertNotReserved(key);\r\n    }\r\n\r\n    var shape = tmpDuringScope.el.shape || (tmpDuringScope.el.shape = {});\r\n    shape[key] = val;\r\n    tmpDuringScope.isShapeDirty = true;\r\n    return this;\r\n  },\r\n  getShape: function (key) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      assertNotReserved(key);\r\n    }\r\n\r\n    var shape = tmpDuringScope.el.shape;\r\n\r\n    if (shape) {\r\n      return shape[key];\r\n    }\r\n  },\r\n  setStyle: function (key, val) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      assertNotReserved(key);\r\n    }\r\n\r\n    var style = tmpDuringScope.el.style;\r\n\r\n    if (style) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (eqNaN(val)) {\r\n          warn('style.' + key + ' must not be assigned with NaN.');\r\n        }\r\n      }\r\n\r\n      style[key] = val;\r\n      tmpDuringScope.isStyleDirty = true;\r\n    }\r\n\r\n    return this;\r\n  },\r\n  getStyle: function (key) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      assertNotReserved(key);\r\n    }\r\n\r\n    var style = tmpDuringScope.el.style;\r\n\r\n    if (style) {\r\n      return style[key];\r\n    }\r\n  },\r\n  setExtra: function (key, val) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      assertNotReserved(key);\r\n    }\r\n\r\n    var extra = tmpDuringScope.el.extra || (tmpDuringScope.el.extra = {});\r\n    extra[key] = val;\r\n    return this;\r\n  },\r\n  getExtra: function (key) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      assertNotReserved(key);\r\n    }\r\n\r\n    var extra = tmpDuringScope.el.extra;\r\n\r\n    if (extra) {\r\n      return extra[key];\r\n    }\r\n  }\r\n};\r\n\r\nfunction assertNotReserved(key) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (key === 'transition' || key === 'enterFrom' || key === 'leaveTo') {\r\n      throw new Error('key must not be \"' + key + '\"');\r\n    }\r\n  }\r\n}\r\n\r\nfunction duringCall() {\r\n  // Do not provide \"percent\" until some requirements come.\r\n  // Because consider thies case:\r\n  // enterFrom: {x: 100, y: 30}, transition: 'x'.\r\n  // And enter duration is different from update duration.\r\n  // Thus it might be confused about the meaning of \"percent\" in during callback.\r\n  var scope = this;\r\n  var el = scope.el;\r\n\r\n  if (!el) {\r\n    return;\r\n  } // If el is remove from zr by reason like legend, during still need to called,\r\n  // becuase el will be added back to zr and the prop value should not be incorrect.\r\n\r\n\r\n  var latestUserDuring = customInnerStore(el).userDuring;\r\n  var scopeUserDuring = scope.userDuring; // Ensured a during is only called once in each animation frame.\r\n  // If a during is called multiple times in one frame, maybe some users' calulation logic\r\n  // might be wrong (not sure whether this usage exists).\r\n  // The case of a during might be called twice can be: by default there is a animator for\r\n  // 'x', 'y' when init. Before the init animation finished, call `setOption` to start\r\n  // another animators for 'style'/'shape'/'extra'.\r\n\r\n  if (latestUserDuring !== scopeUserDuring) {\r\n    // release\r\n    scope.el = scope.userDuring = null;\r\n    return;\r\n  }\r\n\r\n  tmpDuringScope.el = el;\r\n  tmpDuringScope.isShapeDirty = false;\r\n  tmpDuringScope.isStyleDirty = false; // Give no `this` to user in \"during\" calling.\r\n\r\n  scopeUserDuring(customDuringAPI);\r\n\r\n  if (tmpDuringScope.isShapeDirty && el.dirtyShape) {\r\n    el.dirtyShape();\r\n  }\r\n\r\n  if (tmpDuringScope.isStyleDirty && el.dirtyStyle) {\r\n    el.dirtyStyle();\r\n  } // markRedraw() will be called by default in during.\r\n  // FIXME `this.markRedraw();` directly ?\r\n  // FIXME: if in future meet the case that some prop will be both modified in `during` and `state`,\r\n  // consider the issue that the prop might be incorrect when return to \"normal\" state.\r\n\r\n}\r\n\r\nfunction updateElOnState(state, el, elStateOpt, styleOpt, attachedTxInfo, isRoot, isTextContent) {\r\n  var elDisplayable = el.isGroup ? null : el;\r\n  var txCfgOpt = attachedTxInfo && attachedTxInfo[state].cfg; // PENDING:5.0 support customize scale change and transition animation?\r\n\r\n  if (elDisplayable) {\r\n    // By default support auto lift color when hover whether `emphasis` specified.\r\n    var stateObj = elDisplayable.ensureState(state);\r\n\r\n    if (styleOpt === false) {\r\n      var existingEmphasisState = elDisplayable.getState(state);\r\n\r\n      if (existingEmphasisState) {\r\n        existingEmphasisState.style = null;\r\n      }\r\n    } else {\r\n      // style is needed to enable defaut emphasis.\r\n      stateObj.style = styleOpt || null;\r\n    } // If `elOption.styleEmphasis` or `elOption.emphasis.style` is `false`,\r\n    // remove hover style.\r\n    // If `elOption.textConfig` or `elOption.emphasis.textConfig` is null/undefined, it does not\r\n    // make sense. So for simplicity, we do not ditinguish `hasOwnProperty` and null/undefined.\r\n\r\n\r\n    if (txCfgOpt) {\r\n      stateObj.textConfig = txCfgOpt;\r\n    }\r\n\r\n    setDefaultStateProxy(elDisplayable);\r\n  }\r\n}\r\n\r\nfunction updateZ(el, elOption, seriesModel) {\r\n  // Group not support textContent and not support z yet.\r\n  if (el.isGroup) {\r\n    return;\r\n  }\r\n\r\n  var elDisplayable = el;\r\n  var currentZ = seriesModel.currentZ;\r\n  var currentZLevel = seriesModel.currentZLevel; // Always erase.\r\n\r\n  elDisplayable.z = currentZ;\r\n  elDisplayable.zlevel = currentZLevel; // z2 must not be null/undefined, otherwise sort error may occur.\r\n\r\n  var optZ2 = elOption.z2;\r\n  optZ2 != null && (elDisplayable.z2 = optZ2 || 0);\r\n\r\n  for (var i = 0; i < STATES.length; i++) {\r\n    updateZForEachState(elDisplayable, elOption, STATES[i]);\r\n  }\r\n}\r\n\r\nfunction updateZForEachState(elDisplayable, elOption, state) {\r\n  var isNormal = state === NORMAL;\r\n  var elStateOpt = isNormal ? elOption : retrieveStateOption(elOption, state);\r\n  var optZ2 = elStateOpt ? elStateOpt.z2 : null;\r\n  var stateObj;\r\n\r\n  if (optZ2 != null) {\r\n    // Do not `ensureState` until required.\r\n    stateObj = isNormal ? elDisplayable : elDisplayable.ensureState(state);\r\n    stateObj.z2 = optZ2 || 0;\r\n  }\r\n}\r\n\r\nfunction makeRenderItem(customSeries, data, ecModel, api) {\r\n  var renderItem = customSeries.get('renderItem');\r\n  var coordSys = customSeries.coordinateSystem;\r\n  var prepareResult = {};\r\n\r\n  if (coordSys) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      assert(renderItem, 'series.render is required.');\r\n      assert(coordSys.prepareCustoms || prepareCustoms[coordSys.type], 'This coordSys does not support custom series.');\r\n    } // `coordSys.prepareCustoms` is used for external coord sys like bmap.\r\n\r\n\r\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms(coordSys) : prepareCustoms[coordSys.type](coordSys);\r\n  }\r\n\r\n  var userAPI = defaults({\r\n    getWidth: api.getWidth,\r\n    getHeight: api.getHeight,\r\n    getZr: api.getZr,\r\n    getDevicePixelRatio: api.getDevicePixelRatio,\r\n    value: value,\r\n    style: style,\r\n    ordinalRawValue: ordinalRawValue,\r\n    styleEmphasis: styleEmphasis,\r\n    visual: visual,\r\n    barLayout: barLayout,\r\n    currentSeriesIndices: currentSeriesIndices,\r\n    font: font\r\n  }, prepareResult.api || {});\r\n  var userParams = {\r\n    // The life cycle of context: current round of rendering.\r\n    // The global life cycle is probably not necessary, because\r\n    // user can store global status by themselves.\r\n    context: {},\r\n    seriesId: customSeries.id,\r\n    seriesName: customSeries.name,\r\n    seriesIndex: customSeries.seriesIndex,\r\n    coordSys: prepareResult.coordSys,\r\n    dataInsideLength: data.count(),\r\n    encode: wrapEncodeDef(customSeries.getData())\r\n  }; // If someday intending to refactor them to a class, should consider do not\r\n  // break change: currently these attribute member are encapsulated in a closure\r\n  // so that do not need to force user to call these method with a scope.\r\n  // Do not support call `api` asynchronously without dataIndexInside input.\r\n\r\n  var currDataIndexInside;\r\n  var currItemModel;\r\n  var currItemStyleModels = {};\r\n  var currLabelModels = {};\r\n  var seriesItemStyleModels = {};\r\n  var seriesLabelModels = {};\r\n\r\n  for (var i = 0; i < STATES.length; i++) {\r\n    var stateName = STATES[i];\r\n    seriesItemStyleModels[stateName] = customSeries.getModel(PATH_ITEM_STYLE[stateName]);\r\n    seriesLabelModels[stateName] = customSeries.getModel(PATH_LABEL[stateName]);\r\n  }\r\n\r\n  function getItemModel(dataIndexInside) {\r\n    return dataIndexInside === currDataIndexInside ? currItemModel || (currItemModel = data.getItemModel(dataIndexInside)) : data.getItemModel(dataIndexInside);\r\n  }\r\n\r\n  function getItemStyleModel(dataIndexInside, state) {\r\n    return !data.hasItemOption ? seriesItemStyleModels[state] : dataIndexInside === currDataIndexInside ? currItemStyleModels[state] || (currItemStyleModels[state] = getItemModel(dataIndexInside).getModel(PATH_ITEM_STYLE[state])) : getItemModel(dataIndexInside).getModel(PATH_ITEM_STYLE[state]);\r\n  }\r\n\r\n  function getLabelModel(dataIndexInside, state) {\r\n    return !data.hasItemOption ? seriesLabelModels[state] : dataIndexInside === currDataIndexInside ? currLabelModels[state] || (currLabelModels[state] = getItemModel(dataIndexInside).getModel(PATH_LABEL[state])) : getItemModel(dataIndexInside).getModel(PATH_LABEL[state]);\r\n  }\r\n\r\n  return function (dataIndexInside, payload) {\r\n    currDataIndexInside = dataIndexInside;\r\n    currItemModel = null;\r\n    currItemStyleModels = {};\r\n    currLabelModels = {};\r\n    return renderItem && renderItem(defaults({\r\n      dataIndexInside: dataIndexInside,\r\n      dataIndex: data.getRawIndex(dataIndexInside),\r\n      // Can be used for optimization when zoom or roam.\r\n      actionType: payload ? payload.type : null\r\n    }, userParams), userAPI);\r\n  };\r\n  /**\r\n   * @public\r\n   * @param dim by default 0.\r\n   * @param dataIndexInside by default `currDataIndexInside`.\r\n   */\r\n\r\n  function value(dim, dataIndexInside) {\r\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\r\n    return data.getStore().get(data.getDimensionIndex(dim || 0), dataIndexInside);\r\n  }\r\n  /**\r\n   * @public\r\n   * @param dim by default 0.\r\n   * @param dataIndexInside by default `currDataIndexInside`.\r\n   */\r\n\r\n\r\n  function ordinalRawValue(dim, dataIndexInside) {\r\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\r\n    dim = dim || 0;\r\n    var dimInfo = data.getDimensionInfo(dim);\r\n\r\n    if (!dimInfo) {\r\n      var dimIndex = data.getDimensionIndex(dim);\r\n      return dimIndex >= 0 ? data.getStore().get(dimIndex, dataIndexInside) : undefined;\r\n    }\r\n\r\n    var val = data.get(dimInfo.name, dataIndexInside);\r\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\r\n    return ordinalMeta ? ordinalMeta.categories[val] : val;\r\n  }\r\n  /**\r\n   * @deprecated The orgininal intention of `api.style` is enable to set itemStyle\r\n   * like other series. But it not necessary and not easy to give a strict definition\r\n   * of what it return. And since echarts5 it needs to be make compat work. So\r\n   * deprecates it since echarts5.\r\n   *\r\n   * By default, `visual` is applied to style (to support visualMap).\r\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\r\n   * it can be implemented as:\r\n   * `api.style({stroke: api.visual('color'), fill: null})`;\r\n   *\r\n   * [Compat]: since ec5, RectText has been separated from its hosts el.\r\n   * so `api.style()` will only return the style from `itemStyle` but not handle `label`\r\n   * any more. But `series.label` config is never published in doc.\r\n   * We still compat it in `api.style()`. But not encourage to use it and will still not\r\n   * to pulish it to doc.\r\n   * @public\r\n   * @param dataIndexInside by default `currDataIndexInside`.\r\n   */\r\n\r\n\r\n  function style(userProps, dataIndexInside) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      warnDeprecated('api.style', 'Please write literal style directly instead.');\r\n    }\r\n\r\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\r\n    var style = data.getItemVisual(dataIndexInside, 'style');\r\n    var visualColor = style && style.fill;\r\n    var opacity = style && style.opacity;\r\n    var itemStyle = getItemStyleModel(dataIndexInside, NORMAL).getItemStyle();\r\n    visualColor != null && (itemStyle.fill = visualColor);\r\n    opacity != null && (itemStyle.opacity = opacity);\r\n    var opt = {\r\n      inheritColor: isString(visualColor) ? visualColor : '#000'\r\n    };\r\n    var labelModel = getLabelModel(dataIndexInside, NORMAL); // Now that the feture of \"auto adjust text fill/stroke\" has been migrated to zrender\r\n    // since ec5, we should set `isAttached` as `false` here and make compat in\r\n    // `convertToEC4StyleForCustomSerise`.\r\n\r\n    var textStyle = labelStyleHelper.createTextStyle(labelModel, null, opt, false, true);\r\n    textStyle.text = labelModel.getShallow('show') ? retrieve2(customSeries.getFormattedLabel(dataIndexInside, NORMAL), getDefaultLabel(data, dataIndexInside)) : null;\r\n    var textConfig = labelStyleHelper.createTextConfig(labelModel, opt, false);\r\n    preFetchFromExtra(userProps, itemStyle);\r\n    itemStyle = convertToEC4StyleForCustomSerise(itemStyle, textStyle, textConfig);\r\n    userProps && applyUserPropsAfter(itemStyle, userProps);\r\n    itemStyle.legacy = true;\r\n    return itemStyle;\r\n  }\r\n  /**\r\n   * @deprecated The reason see `api.style()`\r\n   * @public\r\n   * @param dataIndexInside by default `currDataIndexInside`.\r\n   */\r\n\r\n\r\n  function styleEmphasis(userProps, dataIndexInside) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      warnDeprecated('api.styleEmphasis', 'Please write literal style directly instead.');\r\n    }\r\n\r\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\r\n    var itemStyle = getItemStyleModel(dataIndexInside, EMPHASIS).getItemStyle();\r\n    var labelModel = getLabelModel(dataIndexInside, EMPHASIS);\r\n    var textStyle = labelStyleHelper.createTextStyle(labelModel, null, null, true, true);\r\n    textStyle.text = labelModel.getShallow('show') ? retrieve3(customSeries.getFormattedLabel(dataIndexInside, EMPHASIS), customSeries.getFormattedLabel(dataIndexInside, NORMAL), getDefaultLabel(data, dataIndexInside)) : null;\r\n    var textConfig = labelStyleHelper.createTextConfig(labelModel, null, true);\r\n    preFetchFromExtra(userProps, itemStyle);\r\n    itemStyle = convertToEC4StyleForCustomSerise(itemStyle, textStyle, textConfig);\r\n    userProps && applyUserPropsAfter(itemStyle, userProps);\r\n    itemStyle.legacy = true;\r\n    return itemStyle;\r\n  }\r\n\r\n  function applyUserPropsAfter(itemStyle, extra) {\r\n    for (var key in extra) {\r\n      if (hasOwn(extra, key)) {\r\n        itemStyle[key] = extra[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  function preFetchFromExtra(extra, itemStyle) {\r\n    // A trick to retrieve those props firstly, which are used to\r\n    // apply auto inside fill/stroke in `convertToEC4StyleForCustomSerise`.\r\n    // (It's not reasonable but only for a degree of compat)\r\n    if (extra) {\r\n      extra.textFill && (itemStyle.textFill = extra.textFill);\r\n      extra.textPosition && (itemStyle.textPosition = extra.textPosition);\r\n    }\r\n  }\r\n  /**\r\n   * @public\r\n   * @param dataIndexInside by default `currDataIndexInside`.\r\n   */\r\n\r\n\r\n  function visual(visualType, dataIndexInside) {\r\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\r\n\r\n    if (hasOwn(STYLE_VISUAL_TYPE, visualType)) {\r\n      var style_1 = data.getItemVisual(dataIndexInside, 'style');\r\n      return style_1 ? style_1[STYLE_VISUAL_TYPE[visualType]] : null;\r\n    } // Only support these visuals. Other visual might be inner tricky\r\n    // for performance (like `style`), do not expose to users.\r\n\r\n\r\n    if (hasOwn(NON_STYLE_VISUAL_PROPS, visualType)) {\r\n      return data.getItemVisual(dataIndexInside, visualType);\r\n    }\r\n  }\r\n  /**\r\n   * @public\r\n   * @return If not support, return undefined.\r\n   */\r\n\r\n\r\n  function barLayout(opt) {\r\n    if (coordSys.type === 'cartesian2d') {\r\n      var baseAxis = coordSys.getBaseAxis();\r\n      return getLayoutOnAxis(defaults({\r\n        axis: baseAxis\r\n      }, opt));\r\n    }\r\n  }\r\n  /**\r\n   * @public\r\n   */\r\n\r\n\r\n  function currentSeriesIndices() {\r\n    return ecModel.getCurrentSeriesIndices();\r\n  }\r\n  /**\r\n   * @public\r\n   * @return font string\r\n   */\r\n\r\n\r\n  function font(opt) {\r\n    return labelStyleHelper.getFont(opt, ecModel);\r\n  }\r\n}\r\n\r\nfunction wrapEncodeDef(data) {\r\n  var encodeDef = {};\r\n  each(data.dimensions, function (dimName) {\r\n    var dimInfo = data.getDimensionInfo(dimName);\r\n\r\n    if (!dimInfo.isExtraCoord) {\r\n      var coordDim = dimInfo.coordDim;\r\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\r\n      dataDims[dimInfo.coordDimIndex] = data.getDimensionIndex(dimName);\r\n    }\r\n  });\r\n  return encodeDef;\r\n}\r\n\r\nfunction createOrUpdateItem(api, existsEl, dataIndex, elOption, seriesModel, group, data) {\r\n  // [Rule]\r\n  // If `renderItem` returns `null`/`undefined`/`false`, remove the previous el if existing.\r\n  //     (It seems that violate the \"merge\" principle, but most of users probably intuitively\r\n  //     regard \"return;\" as \"show nothing element whatever\", so make a exception to meet the\r\n  //     most cases.)\r\n  // The rule or \"merge\" see [STRATEGY_MERGE].\r\n  // If `elOption` is `null`/`undefined`/`false` (when `renderItem` returns nothing).\r\n  if (!elOption) {\r\n    group.remove(existsEl);\r\n    return;\r\n  }\r\n\r\n  var el = doCreateOrUpdateEl(api, existsEl, dataIndex, elOption, seriesModel, group, true);\r\n  el && data.setItemGraphicEl(dataIndex, el);\r\n  el && enableHoverEmphasis(el, elOption.focus, elOption.blurScope);\r\n  return el;\r\n}\r\n\r\nfunction doCreateOrUpdateEl(api, existsEl, dataIndex, elOption, seriesModel, group, isRoot) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    assert(elOption, 'should not have an null/undefined element setting');\r\n  }\r\n\r\n  var toBeReplacedIdx = -1;\r\n  var oldEl = existsEl;\r\n\r\n  if (existsEl && doesElNeedRecreate(existsEl, elOption, seriesModel) // || (\r\n  //     // PENDING: even in one-to-one mapping case, if el is marked as morph,\r\n  //     // do not sure whether the el will be mapped to another el with different\r\n  //     // hierarchy in Group tree. So always recreate el rather than reuse the el.\r\n  //     morphHelper && morphHelper.isOneToOneFrom(el)\r\n  // )\r\n  ) {\r\n    // Should keep at the original index, otherwise \"merge by index\" will be incorrect.\r\n    toBeReplacedIdx = indexOf(group.childrenRef(), existsEl);\r\n    existsEl = null;\r\n  }\r\n\r\n  var isInit = !existsEl;\r\n  var el = existsEl;\r\n\r\n  if (!el) {\r\n    el = createEl(elOption);\r\n\r\n    if (oldEl) {\r\n      copyElement(oldEl, el);\r\n    }\r\n  } else {\r\n    // FIMXE:NEXT unified clearState?\r\n    // If in some case the performance issue arised, consider\r\n    // do not clearState but update cached normal state directly.\r\n    el.clearStates();\r\n  } // Need to set morph: false explictly to disable automatically morphing.\r\n\r\n\r\n  if (elOption.morph === false) {\r\n    el.disableMorphing = true;\r\n  } else if (el.disableMorphing) {\r\n    el.disableMorphing = false;\r\n  }\r\n\r\n  attachedTxInfoTmp.normal.cfg = attachedTxInfoTmp.normal.conOpt = attachedTxInfoTmp.emphasis.cfg = attachedTxInfoTmp.emphasis.conOpt = attachedTxInfoTmp.blur.cfg = attachedTxInfoTmp.blur.conOpt = attachedTxInfoTmp.select.cfg = attachedTxInfoTmp.select.conOpt = null;\r\n  attachedTxInfoTmp.isLegacy = false;\r\n  doCreateOrUpdateAttachedTx(el, dataIndex, elOption, seriesModel, isInit, attachedTxInfoTmp);\r\n  doCreateOrUpdateClipPath(el, dataIndex, elOption, seriesModel, isInit);\r\n  updateElNormal(api, el, dataIndex, elOption, attachedTxInfoTmp, seriesModel, isInit, false);\r\n\r\n  for (var i = 0; i < STATES.length; i++) {\r\n    var stateName = STATES[i];\r\n\r\n    if (stateName !== NORMAL) {\r\n      var otherStateOpt = retrieveStateOption(elOption, stateName);\r\n      var otherStyleOpt = retrieveStyleOptionOnState(elOption, otherStateOpt, stateName);\r\n      updateElOnState(stateName, el, otherStateOpt, otherStyleOpt, attachedTxInfoTmp, isRoot, false);\r\n    }\r\n  }\r\n\r\n  updateZ(el, elOption, seriesModel);\r\n\r\n  if (elOption.type === 'group') {\r\n    mergeChildren(api, el, dataIndex, elOption, seriesModel);\r\n  }\r\n\r\n  if (toBeReplacedIdx >= 0) {\r\n    group.replaceAt(el, toBeReplacedIdx);\r\n  } else {\r\n    group.add(el);\r\n  }\r\n\r\n  return el;\r\n} // `el` must not be null/undefined.\r\n\r\n\r\nfunction doesElNeedRecreate(el, elOption, seriesModel) {\r\n  var elInner = customInnerStore(el);\r\n  var elOptionType = elOption.type;\r\n  var elOptionShape = elOption.shape;\r\n  var elOptionStyle = elOption.style;\r\n  return (// Always create new if universal transition is enabled.\r\n    // Because we do transition after render. It needs to know what old element is. Replacement will loose it.\r\n    seriesModel.isUniversalTransitionEnabled() // If `elOptionType` is `null`, follow the merge principle.\r\n    || elOptionType != null && elOptionType !== elInner.customGraphicType || elOptionType === 'path' && hasOwnPathData(elOptionShape) && getPathData(elOptionShape) !== elInner.customPathData || elOptionType === 'image' && hasOwn(elOptionStyle, 'image') && elOptionStyle.image !== elInner.customImagePath // // FIXME test and remove this restriction?\r\n    // || (elOptionType === 'text'\r\n    //     && hasOwn(elOptionStyle, 'text')\r\n    //     && (elOptionStyle as TextStyleProps).text !== elInner.customText\r\n    // )\r\n\r\n  );\r\n}\r\n\r\nfunction doCreateOrUpdateClipPath(el, dataIndex, elOption, seriesModel, isInit) {\r\n  // Based on the \"merge\" principle, if no clipPath provided,\r\n  // do nothing. The exists clip will be totally removed only if\r\n  // `el.clipPath` is `false`. Otherwise it will be merged/replaced.\r\n  var clipPathOpt = elOption.clipPath;\r\n\r\n  if (clipPathOpt === false) {\r\n    if (el && el.getClipPath()) {\r\n      el.removeClipPath();\r\n    }\r\n  } else if (clipPathOpt) {\r\n    var clipPath = el.getClipPath();\r\n\r\n    if (clipPath && doesElNeedRecreate(clipPath, clipPathOpt, seriesModel)) {\r\n      clipPath = null;\r\n    }\r\n\r\n    if (!clipPath) {\r\n      clipPath = createEl(clipPathOpt);\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        assert(isPath(clipPath), 'Only any type of `path` can be used in `clipPath`, rather than ' + clipPath.type + '.');\r\n      }\r\n\r\n      el.setClipPath(clipPath);\r\n    }\r\n\r\n    updateElNormal(null, clipPath, dataIndex, clipPathOpt, null, seriesModel, isInit, false);\r\n  } // If not define `clipPath` in option, do nothing unnecessary.\r\n\r\n}\r\n\r\nfunction doCreateOrUpdateAttachedTx(el, dataIndex, elOption, seriesModel, isInit, attachedTxInfo) {\r\n  // group do not support textContent temporarily untill necessary.\r\n  if (el.isGroup) {\r\n    return;\r\n  } // Normal must be called before emphasis, for `isLegacy` detection.\r\n\r\n\r\n  processTxInfo(elOption, null, attachedTxInfo);\r\n  processTxInfo(elOption, EMPHASIS, attachedTxInfo); // If `elOption.textConfig` or `elOption.textContent` is null/undefined, it does not make sence.\r\n  // So for simplicity, if \"elOption hasOwnProperty of them but be null/undefined\", we do not\r\n  // trade them as set to null to el.\r\n  // Especially:\r\n  // `elOption.textContent: false` means remove textContent.\r\n  // `elOption.textContent.emphasis.style: false` means remove the style from emphasis state.\r\n\r\n  var txConOptNormal = attachedTxInfo.normal.conOpt;\r\n  var txConOptEmphasis = attachedTxInfo.emphasis.conOpt;\r\n  var txConOptBlur = attachedTxInfo.blur.conOpt;\r\n  var txConOptSelect = attachedTxInfo.select.conOpt;\r\n\r\n  if (txConOptNormal != null || txConOptEmphasis != null || txConOptSelect != null || txConOptBlur != null) {\r\n    var textContent = el.getTextContent();\r\n\r\n    if (txConOptNormal === false) {\r\n      textContent && el.removeTextContent();\r\n    } else {\r\n      txConOptNormal = attachedTxInfo.normal.conOpt = txConOptNormal || {\r\n        type: 'text'\r\n      };\r\n\r\n      if (!textContent) {\r\n        textContent = createEl(txConOptNormal);\r\n        el.setTextContent(textContent);\r\n      } else {\r\n        // If in some case the performance issue arised, consider\r\n        // do not clearState but update cached normal state directly.\r\n        textContent.clearStates();\r\n      }\r\n\r\n      updateElNormal(null, textContent, dataIndex, txConOptNormal, null, seriesModel, isInit, true);\r\n      var txConStlOptNormal = txConOptNormal && txConOptNormal.style;\r\n\r\n      for (var i = 0; i < STATES.length; i++) {\r\n        var stateName = STATES[i];\r\n\r\n        if (stateName !== NORMAL) {\r\n          var txConOptOtherState = attachedTxInfo[stateName].conOpt;\r\n          updateElOnState(stateName, textContent, txConOptOtherState, retrieveStyleOptionOnState(txConOptNormal, txConOptOtherState, stateName), null, false, true);\r\n        }\r\n      }\r\n\r\n      txConStlOptNormal ? textContent.dirty() : textContent.markRedraw();\r\n    }\r\n  }\r\n}\r\n\r\nfunction processTxInfo(elOption, state, attachedTxInfo) {\r\n  var stateOpt = !state ? elOption : retrieveStateOption(elOption, state);\r\n  var styleOpt = !state ? elOption.style : retrieveStyleOptionOnState(elOption, stateOpt, EMPHASIS);\r\n  var elType = elOption.type;\r\n  var txCfg = stateOpt ? stateOpt.textConfig : null;\r\n  var txConOptNormal = elOption.textContent;\r\n  var txConOpt = !txConOptNormal ? null : !state ? txConOptNormal : retrieveStateOption(txConOptNormal, state);\r\n\r\n  if (styleOpt && ( // Because emphasis style has little info to detect legacy,\r\n  // if normal is legacy, emphasis is trade as legacy.\r\n  attachedTxInfo.isLegacy || isEC4CompatibleStyle(styleOpt, elType, !!txCfg, !!txConOpt))) {\r\n    attachedTxInfo.isLegacy = true;\r\n    var convertResult = convertFromEC4CompatibleStyle(styleOpt, elType, !state); // Explicitly specified `textConfig` and `textContent` has higher priority than\r\n    // the ones generated by legacy style. Otherwise if users use them and `api.style`\r\n    // at the same time, they not both work and hardly to known why.\r\n\r\n    if (!txCfg && convertResult.textConfig) {\r\n      txCfg = convertResult.textConfig;\r\n    }\r\n\r\n    if (!txConOpt && convertResult.textContent) {\r\n      txConOpt = convertResult.textContent;\r\n    }\r\n  }\r\n\r\n  if (!state && txConOpt) {\r\n    var txConOptNormal_1 = txConOpt; // `textContent: {type: 'text'}`, the \"type\" is easy to be missing. So we tolerate it.\r\n\r\n    !txConOptNormal_1.type && (txConOptNormal_1.type = 'text');\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      // Do not tolerate incorret type for forward compat.\r\n      assert(txConOptNormal_1.type === 'text', 'textContent.type must be \"text\"');\r\n    }\r\n  }\r\n\r\n  var info = !state ? attachedTxInfo.normal : attachedTxInfo[state];\r\n  info.cfg = txCfg;\r\n  info.conOpt = txConOpt;\r\n}\r\n\r\nfunction retrieveStateOption(elOption, state) {\r\n  return !state ? elOption : elOption ? elOption[state] : null;\r\n}\r\n\r\nfunction retrieveStyleOptionOnState(stateOptionNormal, stateOption, state) {\r\n  var style = stateOption && stateOption.style;\r\n\r\n  if (style == null && state === EMPHASIS && stateOptionNormal) {\r\n    style = stateOptionNormal.styleEmphasis;\r\n  }\r\n\r\n  return style;\r\n} // Usage:\r\n// (1) By default, `elOption.$mergeChildren` is `'byIndex'`, which indicates that\r\n//     the existing children will not be removed, and enables the feature that\r\n//     update some of the props of some of the children simply by construct\r\n//     the returned children of `renderItem` like:\r\n//     `var children = group.children = []; children[3] = {opacity: 0.5};`\r\n// (2) If `elOption.$mergeChildren` is `'byName'`, add/update/remove children\r\n//     by child.name. But that might be lower performance.\r\n// (3) If `elOption.$mergeChildren` is `false`, the existing children will be\r\n//     replaced totally.\r\n// (4) If `!elOption.children`, following the \"merge\" principle, nothing will happen.\r\n//\r\n// For implementation simpleness, do not provide a direct way to remove sinlge\r\n// child (otherwise the total indicies of the children array have to be modified).\r\n// User can remove a single child by set its `ignore` as `true`.\r\n\r\n\r\nfunction mergeChildren(api, el, dataIndex, elOption, seriesModel) {\r\n  var newChildren = elOption.children;\r\n  var newLen = newChildren ? newChildren.length : 0;\r\n  var mergeChildren = elOption.$mergeChildren; // `diffChildrenByName` has been deprecated.\r\n\r\n  var byName = mergeChildren === 'byName' || elOption.diffChildrenByName;\r\n  var notMerge = mergeChildren === false; // For better performance on roam update, only enter if necessary.\r\n\r\n  if (!newLen && !byName && !notMerge) {\r\n    return;\r\n  }\r\n\r\n  if (byName) {\r\n    diffGroupChildren({\r\n      api: api,\r\n      oldChildren: el.children() || [],\r\n      newChildren: newChildren || [],\r\n      dataIndex: dataIndex,\r\n      seriesModel: seriesModel,\r\n      group: el\r\n    });\r\n    return;\r\n  }\r\n\r\n  notMerge && el.removeAll(); // Mapping children of a group simply by index, which\r\n  // might be better performance.\r\n\r\n  var index = 0;\r\n\r\n  for (; index < newLen; index++) {\r\n    newChildren[index] && doCreateOrUpdateEl(api, el.childAt(index), dataIndex, newChildren[index], seriesModel, el, false);\r\n  }\r\n\r\n  for (var i = el.childCount() - 1; i >= index; i--) {\r\n    // Do not supprot leave elements that are not mentioned in the latest\r\n    // `renderItem` return. Otherwise users may not have a clear and simple\r\n    // concept that how to contorl all of the elements.\r\n    doRemoveEl(el.childAt(i), seriesModel, el);\r\n  }\r\n}\r\n\r\nfunction diffGroupChildren(context) {\r\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\r\n}\r\n\r\nfunction getKey(item, idx) {\r\n  var name = item && item.name;\r\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\r\n}\r\n\r\nfunction processAddUpdate(newIndex, oldIndex) {\r\n  var context = this.context;\r\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\r\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\r\n  doCreateOrUpdateEl(context.api, child, context.dataIndex, childOption, context.seriesModel, context.group, false);\r\n}\r\n\r\nfunction processRemove(oldIndex) {\r\n  var context = this.context;\r\n  var child = context.oldChildren[oldIndex];\r\n  doRemoveEl(child, context.seriesModel, context.group);\r\n}\r\n\r\nfunction doRemoveEl(el, seriesModel, group) {\r\n  if (el) {\r\n    var leaveToProps = customInnerStore(el).leaveToProps;\r\n    leaveToProps ? graphicUtil.updateProps(el, leaveToProps, seriesModel, {\r\n      cb: function () {\r\n        group.remove(el);\r\n      }\r\n    }) : group.remove(el);\r\n  }\r\n}\r\n/**\r\n * @return SVG Path data.\r\n */\r\n\r\n\r\nfunction getPathData(shape) {\r\n  // \"d\" follows the SVG convention.\r\n  return shape && (shape.pathData || shape.d);\r\n}\r\n\r\nfunction hasOwnPathData(shape) {\r\n  return shape && (hasOwn(shape, 'pathData') || hasOwn(shape, 'd'));\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport CustomSeriesModel from './CustomSeries';\r\nimport CustomChartView from './CustomView';\r\nexport function install(registers) {\r\n  registers.registerChartView(CustomChartView);\r\n  registers.registerSeriesModel(CustomSeriesModel);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as graphic from '../../util/graphic';\r\nimport * as axisPointerModelHelper from './modelHelper';\r\nimport * as eventTool from 'zrender/lib/core/event';\r\nimport * as throttleUtil from '../../util/throttle';\r\nimport { makeInner } from '../../util/model';\r\nvar inner = makeInner();\r\nvar clone = zrUtil.clone;\r\nvar bind = zrUtil.bind;\r\n/**\r\n * Base axis pointer class in 2D.\r\n */\r\n\r\nvar BaseAxisPointer =\r\n/** @class */\r\nfunction () {\r\n  function BaseAxisPointer() {\r\n    this._dragging = false;\r\n    /**\r\n     * In px, arbitrary value. Do not set too small,\r\n     * no animation is ok for most cases.\r\n     */\r\n\r\n    this.animationThreshold = 15;\r\n  }\r\n  /**\r\n   * @implement\r\n   */\r\n\r\n\r\n  BaseAxisPointer.prototype.render = function (axisModel, axisPointerModel, api, forceRender) {\r\n    var value = axisPointerModel.get('value');\r\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\r\n    // be replaced when user calling setOption in not merge mode.\r\n\r\n    this._axisModel = axisModel;\r\n    this._axisPointerModel = axisPointerModel;\r\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\r\n    // So it is power consuming if performing `render` each time,\r\n    // especially on mobile device.\r\n\r\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\r\n      return;\r\n    }\r\n\r\n    this._lastValue = value;\r\n    this._lastStatus = status;\r\n    var group = this._group;\r\n    var handle = this._handle;\r\n\r\n    if (!status || status === 'hide') {\r\n      // Do not clear here, for animation better.\r\n      group && group.hide();\r\n      handle && handle.hide();\r\n      return;\r\n    }\r\n\r\n    group && group.show();\r\n    handle && handle.show(); // Otherwise status is 'show'\r\n\r\n    var elOption = {};\r\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\r\n\r\n    var graphicKey = elOption.graphicKey;\r\n\r\n    if (graphicKey !== this._lastGraphicKey) {\r\n      this.clear(api);\r\n    }\r\n\r\n    this._lastGraphicKey = graphicKey;\r\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\r\n\r\n    if (!group) {\r\n      group = this._group = new graphic.Group();\r\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\r\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\r\n      api.getZr().add(group);\r\n    } else {\r\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\r\n      this.updatePointerEl(group, elOption, doUpdateProps);\r\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\r\n    }\r\n\r\n    updateMandatoryProps(group, axisPointerModel, true);\r\n\r\n    this._renderHandle(value);\r\n  };\r\n  /**\r\n   * @implement\r\n   */\r\n\r\n\r\n  BaseAxisPointer.prototype.remove = function (api) {\r\n    this.clear(api);\r\n  };\r\n  /**\r\n   * @implement\r\n   */\r\n\r\n\r\n  BaseAxisPointer.prototype.dispose = function (api) {\r\n    this.clear(api);\r\n  };\r\n  /**\r\n   * @protected\r\n   */\r\n\r\n\r\n  BaseAxisPointer.prototype.determineAnimation = function (axisModel, axisPointerModel) {\r\n    var animation = axisPointerModel.get('animation');\r\n    var axis = axisModel.axis;\r\n    var isCategoryAxis = axis.type === 'category';\r\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\r\n\r\n    if (!useSnap && !isCategoryAxis) {\r\n      return false;\r\n    }\r\n\r\n    if (animation === 'auto' || animation == null) {\r\n      var animationThreshold = this.animationThreshold;\r\n\r\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\r\n        return true;\r\n      } // It is important to auto animation when snap used. Consider if there is\r\n      // a dataZoom, animation will be disabled when too many points exist, while\r\n      // it will be enabled for better visual effect when little points exist.\r\n\r\n\r\n      if (useSnap) {\r\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\r\n        var axisExtent = axis.getExtent(); // Approximate band width\r\n\r\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    return animation === true;\r\n  };\r\n  /**\r\n   * add {pointer, label, graphicKey} to elOption\r\n   * @protected\r\n   */\r\n\r\n\r\n  BaseAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\r\n  };\r\n  /**\r\n   * @protected\r\n   */\r\n\r\n\r\n  BaseAxisPointer.prototype.createPointerEl = function (group, elOption, axisModel, axisPointerModel) {\r\n    var pointerOption = elOption.pointer;\r\n\r\n    if (pointerOption) {\r\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\r\n      group.add(pointerEl);\r\n    }\r\n  };\r\n  /**\r\n   * @protected\r\n   */\r\n\r\n\r\n  BaseAxisPointer.prototype.createLabelEl = function (group, elOption, axisModel, axisPointerModel) {\r\n    if (elOption.label) {\r\n      var labelEl = inner(group).labelEl = new graphic.Text(clone(elOption.label));\r\n      group.add(labelEl);\r\n      updateLabelShowHide(labelEl, axisPointerModel);\r\n    }\r\n  };\r\n  /**\r\n   * @protected\r\n   */\r\n\r\n\r\n  BaseAxisPointer.prototype.updatePointerEl = function (group, elOption, updateProps) {\r\n    var pointerEl = inner(group).pointerEl;\r\n\r\n    if (pointerEl && elOption.pointer) {\r\n      pointerEl.setStyle(elOption.pointer.style);\r\n      updateProps(pointerEl, {\r\n        shape: elOption.pointer.shape\r\n      });\r\n    }\r\n  };\r\n  /**\r\n   * @protected\r\n   */\r\n\r\n\r\n  BaseAxisPointer.prototype.updateLabelEl = function (group, elOption, updateProps, axisPointerModel) {\r\n    var labelEl = inner(group).labelEl;\r\n\r\n    if (labelEl) {\r\n      labelEl.setStyle(elOption.label.style);\r\n      updateProps(labelEl, {\r\n        // Consider text length change in vertical axis, animation should\r\n        // be used on shape, otherwise the effect will be weird.\r\n        // TODOTODO\r\n        // shape: elOption.label.shape,\r\n        x: elOption.label.x,\r\n        y: elOption.label.y\r\n      });\r\n      updateLabelShowHide(labelEl, axisPointerModel);\r\n    }\r\n  };\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  BaseAxisPointer.prototype._renderHandle = function (value) {\r\n    if (this._dragging || !this.updateHandleTransform) {\r\n      return;\r\n    }\r\n\r\n    var axisPointerModel = this._axisPointerModel;\r\n\r\n    var zr = this._api.getZr();\r\n\r\n    var handle = this._handle;\r\n    var handleModel = axisPointerModel.getModel('handle');\r\n    var status = axisPointerModel.get('status');\r\n\r\n    if (!handleModel.get('show') || !status || status === 'hide') {\r\n      handle && zr.remove(handle);\r\n      this._handle = null;\r\n      return;\r\n    }\r\n\r\n    var isInit;\r\n\r\n    if (!this._handle) {\r\n      isInit = true;\r\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\r\n        cursor: 'move',\r\n        draggable: true,\r\n        onmousemove: function (e) {\r\n          // Fot mobile devicem, prevent screen slider on the button.\r\n          eventTool.stop(e.event);\r\n        },\r\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\r\n        drift: bind(this._onHandleDragMove, this),\r\n        ondragend: bind(this._onHandleDragEnd, this)\r\n      });\r\n      zr.add(handle);\r\n    }\r\n\r\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\r\n\r\n    handle.setStyle(handleModel.getItemStyle(null, ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'])); // update position\r\n\r\n    var handleSize = handleModel.get('size');\r\n\r\n    if (!zrUtil.isArray(handleSize)) {\r\n      handleSize = [handleSize, handleSize];\r\n    }\r\n\r\n    handle.scaleX = handleSize[0] / 2;\r\n    handle.scaleY = handleSize[1] / 2;\r\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\r\n\r\n    this._moveHandleToValue(value, isInit);\r\n  };\r\n\r\n  BaseAxisPointer.prototype._moveHandleToValue = function (value, isInit) {\r\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\r\n  };\r\n\r\n  BaseAxisPointer.prototype._onHandleDragMove = function (dx, dy) {\r\n    var handle = this._handle;\r\n\r\n    if (!handle) {\r\n      return;\r\n    }\r\n\r\n    this._dragging = true; // Persistent for throttle.\r\n\r\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\r\n    this._payloadInfo = trans;\r\n    handle.stopAnimation();\r\n    handle.attr(getHandleTransProps(trans));\r\n    inner(handle).lastProp = null;\r\n\r\n    this._doDispatchAxisPointer();\r\n  };\r\n  /**\r\n   * Throttled method.\r\n   */\r\n\r\n\r\n  BaseAxisPointer.prototype._doDispatchAxisPointer = function () {\r\n    var handle = this._handle;\r\n\r\n    if (!handle) {\r\n      return;\r\n    }\r\n\r\n    var payloadInfo = this._payloadInfo;\r\n    var axisModel = this._axisModel;\r\n\r\n    this._api.dispatchAction({\r\n      type: 'updateAxisPointer',\r\n      x: payloadInfo.cursorPoint[0],\r\n      y: payloadInfo.cursorPoint[1],\r\n      tooltipOption: payloadInfo.tooltipOption,\r\n      axesInfo: [{\r\n        axisDim: axisModel.axis.dim,\r\n        axisIndex: axisModel.componentIndex\r\n      }]\r\n    });\r\n  };\r\n\r\n  BaseAxisPointer.prototype._onHandleDragEnd = function () {\r\n    this._dragging = false;\r\n    var handle = this._handle;\r\n\r\n    if (!handle) {\r\n      return;\r\n    }\r\n\r\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\r\n    // axisPointer. So move handle to align the exact value position when\r\n    // drag ended.\r\n\r\n\r\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\r\n    // button, and will be hidden after finger left handle button.\r\n\r\n\r\n    this._api.dispatchAction({\r\n      type: 'hideTip'\r\n    });\r\n  };\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  BaseAxisPointer.prototype.clear = function (api) {\r\n    this._lastValue = null;\r\n    this._lastStatus = null;\r\n    var zr = api.getZr();\r\n    var group = this._group;\r\n    var handle = this._handle;\r\n\r\n    if (zr && group) {\r\n      this._lastGraphicKey = null;\r\n      group && zr.remove(group);\r\n      handle && zr.remove(handle);\r\n      this._group = null;\r\n      this._handle = null;\r\n      this._payloadInfo = null;\r\n    }\r\n  };\r\n  /**\r\n   * @protected\r\n   */\r\n\r\n\r\n  BaseAxisPointer.prototype.doClear = function () {// Implemented by sub-class if necessary.\r\n  };\r\n\r\n  BaseAxisPointer.prototype.buildLabel = function (xy, wh, xDimIndex) {\r\n    xDimIndex = xDimIndex || 0;\r\n    return {\r\n      x: xy[xDimIndex],\r\n      y: xy[1 - xDimIndex],\r\n      width: wh[xDimIndex],\r\n      height: wh[1 - xDimIndex]\r\n    };\r\n  };\r\n\r\n  return BaseAxisPointer;\r\n}();\r\n\r\nfunction updateProps(animationModel, moveAnimation, el, props) {\r\n  // Animation optimize.\r\n  if (!propsEqual(inner(el).lastProp, props)) {\r\n    inner(el).lastProp = props;\r\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\r\n  }\r\n}\r\n\r\nfunction propsEqual(lastProps, newProps) {\r\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\r\n    var equals_1 = true;\r\n    zrUtil.each(newProps, function (item, key) {\r\n      equals_1 = equals_1 && propsEqual(lastProps[key], item);\r\n    });\r\n    return !!equals_1;\r\n  } else {\r\n    return lastProps === newProps;\r\n  }\r\n}\r\n\r\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\r\n  labelEl[axisPointerModel.get(['label', 'show']) ? 'show' : 'hide']();\r\n}\r\n\r\nfunction getHandleTransProps(trans) {\r\n  return {\r\n    x: trans.x || 0,\r\n    y: trans.y || 0,\r\n    rotation: trans.rotation || 0\r\n  };\r\n}\r\n\r\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\r\n  var z = axisPointerModel.get('z');\r\n  var zlevel = axisPointerModel.get('zlevel');\r\n  group && group.traverse(function (el) {\r\n    if (el.type !== 'group') {\r\n      z != null && (el.z = z);\r\n      zlevel != null && (el.zlevel = zlevel);\r\n      el.silent = silent;\r\n    }\r\n  });\r\n}\r\n\r\nexport default BaseAxisPointer;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as graphic from '../../util/graphic';\r\nimport * as textContain from 'zrender/lib/contain/text';\r\nimport * as formatUtil from '../../util/format';\r\nimport * as matrix from 'zrender/lib/core/matrix';\r\nimport * as axisHelper from '../../coord/axisHelper';\r\nimport AxisBuilder from '../axis/AxisBuilder';\r\nimport { createTextStyle } from '../../label/labelStyle';\r\nexport function buildElStyle(axisPointerModel) {\r\n  var axisPointerType = axisPointerModel.get('type');\r\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\r\n  var style;\r\n\r\n  if (axisPointerType === 'line') {\r\n    style = styleModel.getLineStyle();\r\n    style.fill = null;\r\n  } else if (axisPointerType === 'shadow') {\r\n    style = styleModel.getAreaStyle();\r\n    style.stroke = null;\r\n  }\r\n\r\n  return style;\r\n}\r\n/**\r\n * @param {Function} labelPos {align, verticalAlign, position}\r\n */\r\n\r\nexport function buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\r\n  var value = axisPointerModel.get('value');\r\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\r\n    precision: axisPointerModel.get(['label', 'precision']),\r\n    formatter: axisPointerModel.get(['label', 'formatter'])\r\n  });\r\n  var labelModel = axisPointerModel.getModel('label');\r\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\r\n  var font = labelModel.getFont();\r\n  var textRect = textContain.getBoundingRect(text, font);\r\n  var position = labelPos.position;\r\n  var width = textRect.width + paddings[1] + paddings[3];\r\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\r\n\r\n  var align = labelPos.align;\r\n  align === 'right' && (position[0] -= width);\r\n  align === 'center' && (position[0] -= width / 2);\r\n  var verticalAlign = labelPos.verticalAlign;\r\n  verticalAlign === 'bottom' && (position[1] -= height);\r\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\r\n\r\n  confineInContainer(position, width, height, api);\r\n  var bgColor = labelModel.get('backgroundColor');\r\n\r\n  if (!bgColor || bgColor === 'auto') {\r\n    bgColor = axisModel.get(['axisLine', 'lineStyle', 'color']);\r\n  }\r\n\r\n  elOption.label = {\r\n    // shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\r\n    x: position[0],\r\n    y: position[1],\r\n    style: createTextStyle(labelModel, {\r\n      text: text,\r\n      font: font,\r\n      fill: labelModel.getTextColor(),\r\n      padding: paddings,\r\n      backgroundColor: bgColor\r\n    }),\r\n    // Lable should be over axisPointer.\r\n    z2: 10\r\n  };\r\n} // Do not overflow ec container\r\n\r\nfunction confineInContainer(position, width, height, api) {\r\n  var viewWidth = api.getWidth();\r\n  var viewHeight = api.getHeight();\r\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\r\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\r\n  position[0] = Math.max(position[0], 0);\r\n  position[1] = Math.max(position[1], 0);\r\n}\r\n\r\nexport function getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\r\n  value = axis.scale.parse(value);\r\n  var text = axis.scale.getLabel({\r\n    value: value\r\n  }, {\r\n    // If `precision` is set, width can be fixed (like '12.00500'), which\r\n    // helps to debounce when when moving label.\r\n    precision: opt.precision\r\n  });\r\n  var formatter = opt.formatter;\r\n\r\n  if (formatter) {\r\n    var params_1 = {\r\n      value: axisHelper.getAxisRawValue(axis, {\r\n        value: value\r\n      }),\r\n      axisDimension: axis.dim,\r\n      axisIndex: axis.index,\r\n      seriesData: []\r\n    };\r\n    zrUtil.each(seriesDataIndices, function (idxItem) {\r\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\r\n      var dataIndex = idxItem.dataIndexInside;\r\n      var dataParams = series && series.getDataParams(dataIndex);\r\n      dataParams && params_1.seriesData.push(dataParams);\r\n    });\r\n\r\n    if (zrUtil.isString(formatter)) {\r\n      text = formatter.replace('{value}', text);\r\n    } else if (zrUtil.isFunction(formatter)) {\r\n      text = formatter(params_1);\r\n    }\r\n  }\r\n\r\n  return text;\r\n}\r\nexport function getTransformedPosition(axis, value, layoutInfo) {\r\n  var transform = matrix.create();\r\n  matrix.rotate(transform, transform, layoutInfo.rotation);\r\n  matrix.translate(transform, transform, layoutInfo.position);\r\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\r\n}\r\nexport function buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\r\n  // @ts-ignore\r\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\r\n  layoutInfo.labelMargin = axisPointerModel.get(['label', 'margin']);\r\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\r\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\r\n    align: textLayout.textAlign,\r\n    verticalAlign: textLayout.textVerticalAlign\r\n  });\r\n}\r\nexport function makeLineShape(p1, p2, xDimIndex) {\r\n  xDimIndex = xDimIndex || 0;\r\n  return {\r\n    x1: p1[xDimIndex],\r\n    y1: p1[1 - xDimIndex],\r\n    x2: p2[xDimIndex],\r\n    y2: p2[1 - xDimIndex]\r\n  };\r\n}\r\nexport function makeRectShape(xy, wh, xDimIndex) {\r\n  xDimIndex = xDimIndex || 0;\r\n  return {\r\n    x: xy[xDimIndex],\r\n    y: xy[1 - xDimIndex],\r\n    width: wh[xDimIndex],\r\n    height: wh[1 - xDimIndex]\r\n  };\r\n}\r\nexport function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\r\n  return {\r\n    cx: cx,\r\n    cy: cy,\r\n    r0: r0,\r\n    r: r,\r\n    startAngle: startAngle,\r\n    endAngle: endAngle,\r\n    clockwise: true\r\n  };\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport BaseAxisPointer from './BaseAxisPointer';\r\nimport * as viewHelper from './viewHelper';\r\nimport * as cartesianAxisHelper from '../../coord/cartesian/cartesianAxisHelper';\r\n\r\nvar CartesianAxisPointer =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(CartesianAxisPointer, _super);\r\n\r\n  function CartesianAxisPointer() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  CartesianAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {\r\n    var axis = axisModel.axis;\r\n    var grid = axis.grid;\r\n    var axisPointerType = axisPointerModel.get('type');\r\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\r\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\r\n\r\n    if (axisPointerType && axisPointerType !== 'none') {\r\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\r\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent);\r\n      pointerOption.style = elStyle;\r\n      elOption.graphicKey = pointerOption.type;\r\n      elOption.pointer = pointerOption;\r\n    }\r\n\r\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\r\n    viewHelper.buildCartesianSingleLabelElOption( // @ts-ignore\r\n    value, elOption, layoutInfo, axisModel, axisPointerModel, api);\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  CartesianAxisPointer.prototype.getHandleTransform = function (value, axisModel, axisPointerModel) {\r\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\r\n      labelInside: false\r\n    }); // @ts-ignore\r\n\r\n    layoutInfo.labelMargin = axisPointerModel.get(['handle', 'margin']);\r\n    var pos = viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo);\r\n    return {\r\n      x: pos[0],\r\n      y: pos[1],\r\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\r\n    };\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  CartesianAxisPointer.prototype.updateHandleTransform = function (transform, delta, axisModel, axisPointerModel) {\r\n    var axis = axisModel.axis;\r\n    var grid = axis.grid;\r\n    var axisExtent = axis.getGlobalExtent(true);\r\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\r\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\r\n    var currPosition = [transform.x, transform.y];\r\n    currPosition[dimIndex] += delta[dimIndex];\r\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\r\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\r\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\r\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\r\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\r\n\r\n    var tooltipOptions = [{\r\n      verticalAlign: 'middle'\r\n    }, {\r\n      align: 'center'\r\n    }];\r\n    return {\r\n      x: currPosition[0],\r\n      y: currPosition[1],\r\n      rotation: transform.rotation,\r\n      cursorPoint: cursorPoint,\r\n      tooltipOption: tooltipOptions[dimIndex]\r\n    };\r\n  };\r\n\r\n  return CartesianAxisPointer;\r\n}(BaseAxisPointer);\r\n\r\nfunction getCartesian(grid, axis) {\r\n  var opt = {};\r\n  opt[axis.dim + 'AxisIndex'] = axis.index;\r\n  return grid.getCartesian(opt);\r\n}\r\n\r\nvar pointerShapeBuilder = {\r\n  line: function (axis, pixelValue, otherExtent) {\r\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\r\n    return {\r\n      type: 'Line',\r\n      subPixelOptimize: true,\r\n      shape: targetShape\r\n    };\r\n  },\r\n  shadow: function (axis, pixelValue, otherExtent) {\r\n    var bandWidth = Math.max(1, axis.getBandWidth());\r\n    var span = otherExtent[1] - otherExtent[0];\r\n    return {\r\n      type: 'Rect',\r\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\r\n    };\r\n  }\r\n};\r\n\r\nfunction getAxisDimIndex(axis) {\r\n  return axis.dim === 'x' ? 0 : 1;\r\n}\r\n\r\nexport default CartesianAxisPointer;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport ComponentModel from '../../model/Component';\r\n\r\nvar AxisPointerModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(AxisPointerModel, _super);\r\n\r\n  function AxisPointerModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = AxisPointerModel.type;\r\n    return _this;\r\n  }\r\n\r\n  AxisPointerModel.type = 'axisPointer';\r\n  AxisPointerModel.defaultOption = {\r\n    // 'auto' means that show when triggered by tooltip or handle.\r\n    show: 'auto',\r\n    zlevel: 0,\r\n    z: 50,\r\n    type: 'line',\r\n    // axispointer triggered by tootip determine snap automatically,\r\n    // see `modelHelper`.\r\n    snap: false,\r\n    triggerTooltip: true,\r\n    value: null,\r\n    status: null,\r\n    link: [],\r\n    // Do not set 'auto' here, otherwise global animation: false\r\n    // will not effect at this axispointer.\r\n    animation: null,\r\n    animationDurationUpdate: 200,\r\n    lineStyle: {\r\n      color: '#B9BEC9',\r\n      width: 1,\r\n      type: 'dashed'\r\n    },\r\n    shadowStyle: {\r\n      color: 'rgba(210,219,238,0.2)'\r\n    },\r\n    label: {\r\n      show: true,\r\n      formatter: null,\r\n      precision: 'auto',\r\n      margin: 3,\r\n      color: '#fff',\r\n      padding: [5, 7, 5, 7],\r\n      backgroundColor: 'auto',\r\n      borderColor: null,\r\n      borderWidth: 0,\r\n      borderRadius: 3\r\n    },\r\n    handle: {\r\n      show: false,\r\n      // eslint-disable-next-line\r\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\r\n      size: 45,\r\n      // handle margin is from symbol center to axis, which is stable when circular move.\r\n      margin: 50,\r\n      // color: '#1b8bbd'\r\n      // color: '#2f4554'\r\n      color: '#333',\r\n      shadowBlur: 3,\r\n      shadowColor: '#aaa',\r\n      shadowOffsetX: 0,\r\n      shadowOffsetY: 2,\r\n      // For mobile performance\r\n      throttle: 40\r\n    }\r\n  };\r\n  return AxisPointerModel;\r\n}(ComponentModel);\r\n\r\nexport default AxisPointerModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport env from 'zrender/lib/core/env';\r\nimport { makeInner } from '../../util/model';\r\nvar inner = makeInner();\r\nvar each = zrUtil.each;\r\n/**\r\n * @param {string} key\r\n * @param {module:echarts/ExtensionAPI} api\r\n * @param {Function} handler\r\n *      param: {string} currTrigger\r\n *      param: {Array.<number>} point\r\n */\r\n\r\nexport function register(key, api, handler) {\r\n  if (env.node) {\r\n    return;\r\n  }\r\n\r\n  var zr = api.getZr();\r\n  inner(zr).records || (inner(zr).records = {});\r\n  initGlobalListeners(zr, api);\r\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\r\n  record.handler = handler;\r\n}\r\n\r\nfunction initGlobalListeners(zr, api) {\r\n  if (inner(zr).initialized) {\r\n    return;\r\n  }\r\n\r\n  inner(zr).initialized = true;\r\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\r\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\r\n\r\n  useHandler('globalout', onLeave);\r\n\r\n  function useHandler(eventType, cb) {\r\n    zr.on(eventType, function (e) {\r\n      var dis = makeDispatchAction(api);\r\n      each(inner(zr).records, function (record) {\r\n        record && cb(record, e, dis.dispatchAction);\r\n      });\r\n      dispatchTooltipFinally(dis.pendings, api);\r\n    });\r\n  }\r\n}\r\n\r\nfunction dispatchTooltipFinally(pendings, api) {\r\n  var showLen = pendings.showTip.length;\r\n  var hideLen = pendings.hideTip.length;\r\n  var actuallyPayload;\r\n\r\n  if (showLen) {\r\n    actuallyPayload = pendings.showTip[showLen - 1];\r\n  } else if (hideLen) {\r\n    actuallyPayload = pendings.hideTip[hideLen - 1];\r\n  }\r\n\r\n  if (actuallyPayload) {\r\n    actuallyPayload.dispatchAction = null;\r\n    api.dispatchAction(actuallyPayload);\r\n  }\r\n}\r\n\r\nfunction onLeave(record, e, dispatchAction) {\r\n  record.handler('leave', null, dispatchAction);\r\n}\r\n\r\nfunction doEnter(currTrigger, record, e, dispatchAction) {\r\n  record.handler(currTrigger, e, dispatchAction);\r\n}\r\n\r\nfunction makeDispatchAction(api) {\r\n  var pendings = {\r\n    showTip: [],\r\n    hideTip: []\r\n  }; // FIXME\r\n  // better approach?\r\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\r\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\r\n  // So we have to add \"final stage\" to merge those dispatched actions.\r\n\r\n  var dispatchAction = function (payload) {\r\n    var pendingList = pendings[payload.type];\r\n\r\n    if (pendingList) {\r\n      pendingList.push(payload);\r\n    } else {\r\n      payload.dispatchAction = dispatchAction;\r\n      api.dispatchAction(payload);\r\n    }\r\n  };\r\n\r\n  return {\r\n    dispatchAction: dispatchAction,\r\n    pendings: pendings\r\n  };\r\n}\r\n\r\nexport function unregister(key, api) {\r\n  if (env.node) {\r\n    return;\r\n  }\r\n\r\n  var zr = api.getZr();\r\n  var record = (inner(zr).records || {})[key];\r\n\r\n  if (record) {\r\n    inner(zr).records[key] = null;\r\n  }\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as globalListener from './globalListener';\r\nimport ComponentView from '../../view/Component';\r\n\r\nvar AxisPointerView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(AxisPointerView, _super);\r\n\r\n  function AxisPointerView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = AxisPointerView.type;\r\n    return _this;\r\n  }\r\n\r\n  AxisPointerView.prototype.render = function (globalAxisPointerModel, ecModel, api) {\r\n    var globalTooltipModel = ecModel.getComponent('tooltip');\r\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\r\n    // AxisPointerView to be independent to Tooltip.\r\n\r\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\r\n      // If 'none', it is not controlled by mouse totally.\r\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\r\n        dispatchAction({\r\n          type: 'updateAxisPointer',\r\n          currTrigger: currTrigger,\r\n          x: e && e.offsetX,\r\n          y: e && e.offsetY\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  AxisPointerView.prototype.remove = function (ecModel, api) {\r\n    globalListener.unregister('axisPointer', api);\r\n  };\r\n\r\n  AxisPointerView.prototype.dispose = function (ecModel, api) {\r\n    globalListener.unregister('axisPointer', api);\r\n  };\r\n\r\n  AxisPointerView.type = 'axisPointer';\r\n  return AxisPointerView;\r\n}(ComponentView);\r\n\r\nexport default AxisPointerView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as modelUtil from '../../util/model';\r\n/**\r\n * @param finder contains {seriesIndex, dataIndex, dataIndexInside}\r\n * @param ecModel\r\n * @return  {point: [x, y], el: ...} point Will not be null.\r\n */\r\n\r\nexport default function findPointFromSeries(finder, ecModel) {\r\n  var point = [];\r\n  var seriesIndex = finder.seriesIndex;\r\n  var seriesModel;\r\n\r\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\r\n    return {\r\n      point: []\r\n    };\r\n  }\r\n\r\n  var data = seriesModel.getData();\r\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\r\n\r\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\r\n    return {\r\n      point: []\r\n    };\r\n  }\r\n\r\n  var el = data.getItemGraphicEl(dataIndex);\r\n  var coordSys = seriesModel.coordinateSystem;\r\n\r\n  if (seriesModel.getTooltipPosition) {\r\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\r\n  } else if (coordSys && coordSys.dataToPoint) {\r\n    if (finder.isStacked) {\r\n      var baseAxis = coordSys.getBaseAxis();\r\n      var valueAxis = coordSys.getOtherAxis(baseAxis);\r\n      var valueAxisDim = valueAxis.dim;\r\n      var baseAxisDim = baseAxis.dim;\r\n      var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\r\n      var baseDim = data.mapDimension(baseAxisDim);\r\n      var stackedData = [];\r\n      stackedData[baseDataOffset] = data.get(baseDim, dataIndex);\r\n      stackedData[1 - baseDataOffset] = data.get(data.getCalculationInfo('stackResultDimension'), dataIndex);\r\n      point = coordSys.dataToPoint(stackedData) || [];\r\n    } else {\r\n      point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\r\n        return data.mapDimension(dim);\r\n      }), dataIndex)) || [];\r\n    }\r\n  } else if (el) {\r\n    // Use graphic bounding rect\r\n    var rect = el.getBoundingRect().clone();\r\n    rect.applyTransform(el.transform);\r\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\r\n  }\r\n\r\n  return {\r\n    point: point,\r\n    el: el\r\n  };\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { makeInner } from '../../util/model';\r\nimport * as modelHelper from './modelHelper';\r\nimport findPointFromSeries from './findPointFromSeries';\r\nimport { each, curry, bind, extend } from 'zrender/lib/core/util';\r\nvar inner = makeInner();\r\n/**\r\n * Basic logic: check all axis, if they do not demand show/highlight,\r\n * then hide/downplay them.\r\n *\r\n * @return content of event obj for echarts.connect.\r\n */\r\n\r\nexport default function axisTrigger(payload, ecModel, api) {\r\n  var currTrigger = payload.currTrigger;\r\n  var point = [payload.x, payload.y];\r\n  var finder = payload;\r\n  var dispatchAction = payload.dispatchAction || bind(api.dispatchAction, api);\r\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\r\n  // See #6121. But we are not able to reproduce it yet.\r\n\r\n  if (!coordSysAxesInfo) {\r\n    return;\r\n  }\r\n\r\n  if (illegalPoint(point)) {\r\n    // Used in the default behavior of `connection`: use the sample seriesIndex\r\n    // and dataIndex. And also used in the tooltipView trigger.\r\n    point = findPointFromSeries({\r\n      seriesIndex: finder.seriesIndex,\r\n      // Do not use dataIndexInside from other ec instance.\r\n      // FIXME: auto detect it?\r\n      dataIndex: finder.dataIndex\r\n    }, ecModel).point;\r\n  }\r\n\r\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\r\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\r\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\r\n  // and dataIndex.\r\n\r\n  var inputAxesInfo = finder.axesInfo;\r\n  var axesInfo = coordSysAxesInfo.axesInfo;\r\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\r\n  var outputPayload = {};\r\n  var showValueMap = {};\r\n  var dataByCoordSys = {\r\n    list: [],\r\n    map: {}\r\n  };\r\n  var updaters = {\r\n    showPointer: curry(showPointer, showValueMap),\r\n    showTooltip: curry(showTooltip, dataByCoordSys)\r\n  }; // Process for triggered axes.\r\n\r\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\r\n    // If a point given, it must be contained by the coordinate system.\r\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\r\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\r\n      var axis = axisInfo.axis;\r\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\r\n\r\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\r\n        var val = inputAxisInfo && inputAxisInfo.value;\r\n\r\n        if (val == null && !isIllegalPoint) {\r\n          val = axis.pointToData(point);\r\n        }\r\n\r\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputPayload);\r\n      }\r\n    });\r\n  }); // Process for linked axes.\r\n\r\n  var linkTriggers = {};\r\n  each(axesInfo, function (tarAxisInfo, tarKey) {\r\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\r\n\r\n    if (linkGroup && !showValueMap[tarKey]) {\r\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\r\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\r\n\r\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\r\n          var val = srcValItem.value;\r\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\r\n          linkTriggers[tarAxisInfo.key] = val;\r\n        }\r\n      });\r\n    }\r\n  });\r\n  each(linkTriggers, function (val, tarKey) {\r\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputPayload);\r\n  });\r\n  updateModelActually(showValueMap, axesInfo, outputPayload);\r\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\r\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\r\n  return outputPayload;\r\n}\r\n\r\nfunction processOnAxis(axisInfo, newValue, updaters, noSnap, outputFinder) {\r\n  var axis = axisInfo.axis;\r\n\r\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\r\n    return;\r\n  }\r\n\r\n  if (!axisInfo.involveSeries) {\r\n    updaters.showPointer(axisInfo, newValue);\r\n    return;\r\n  } // Heavy calculation. So put it after axis.containData checking.\r\n\r\n\r\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\r\n  var payloadBatch = payloadInfo.payloadBatch;\r\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\r\n  // By default use the first involved series data as a sample to connect.\r\n\r\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\r\n    extend(outputFinder, payloadBatch[0]);\r\n  } // If no linkSource input, this process is for collecting link\r\n  // target, where snap should not be accepted.\r\n\r\n\r\n  if (!noSnap && axisInfo.snap) {\r\n    if (axis.containData(snapToValue) && snapToValue != null) {\r\n      newValue = snapToValue;\r\n    }\r\n  }\r\n\r\n  updaters.showPointer(axisInfo, newValue, payloadBatch); // Tooltip should always be snapToValue, otherwise there will be\r\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\r\n\r\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\r\n}\r\n\r\nfunction buildPayloadsBySeries(value, axisInfo) {\r\n  var axis = axisInfo.axis;\r\n  var dim = axis.dim;\r\n  var snapToValue = value;\r\n  var payloadBatch = [];\r\n  var minDist = Number.MAX_VALUE;\r\n  var minDiff = -1;\r\n  each(axisInfo.seriesModels, function (series, idx) {\r\n    var dataDim = series.getData().mapDimensionsAll(dim);\r\n    var seriesNestestValue;\r\n    var dataIndices;\r\n\r\n    if (series.getAxisTooltipData) {\r\n      var result = series.getAxisTooltipData(dataDim, value, axis);\r\n      dataIndices = result.dataIndices;\r\n      seriesNestestValue = result.nestestValue;\r\n    } else {\r\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\r\n      // when data length is not same.\r\n      // false,\r\n      axis.type === 'category' ? 0.5 : null);\r\n\r\n      if (!dataIndices.length) {\r\n        return;\r\n      }\r\n\r\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\r\n    }\r\n\r\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\r\n      return;\r\n    }\r\n\r\n    var diff = value - seriesNestestValue;\r\n    var dist = Math.abs(diff); // Consider category case\r\n\r\n    if (dist <= minDist) {\r\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\r\n        minDist = dist;\r\n        minDiff = diff;\r\n        snapToValue = seriesNestestValue;\r\n        payloadBatch.length = 0;\r\n      }\r\n\r\n      each(dataIndices, function (dataIndex) {\r\n        payloadBatch.push({\r\n          seriesIndex: series.seriesIndex,\r\n          dataIndexInside: dataIndex,\r\n          dataIndex: series.getData().getRawIndex(dataIndex)\r\n        });\r\n      });\r\n    }\r\n  });\r\n  return {\r\n    payloadBatch: payloadBatch,\r\n    snapToValue: snapToValue\r\n  };\r\n}\r\n\r\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\r\n  showValueMap[axisInfo.key] = {\r\n    value: value,\r\n    payloadBatch: payloadBatch\r\n  };\r\n}\r\n\r\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\r\n  var payloadBatch = payloadInfo.payloadBatch;\r\n  var axis = axisInfo.axis;\r\n  var axisModel = axis.model;\r\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\r\n  // whose length will be used to judge whether dispatch action.\r\n\r\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\r\n    return;\r\n  }\r\n\r\n  var coordSysModel = axisInfo.coordSys.model;\r\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\r\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\r\n\r\n  if (!coordSysItem) {\r\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\r\n      coordSysId: coordSysModel.id,\r\n      coordSysIndex: coordSysModel.componentIndex,\r\n      coordSysType: coordSysModel.type,\r\n      coordSysMainType: coordSysModel.mainType,\r\n      dataByAxis: []\r\n    };\r\n    dataByCoordSys.list.push(coordSysItem);\r\n  }\r\n\r\n  coordSysItem.dataByAxis.push({\r\n    axisDim: axis.dim,\r\n    axisIndex: axisModel.componentIndex,\r\n    axisType: axisModel.type,\r\n    axisId: axisModel.id,\r\n    value: value,\r\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\r\n    // depends that all models have been updated. So it should not be performed\r\n    // here. Considering axisPointerModel used here is volatile, which is hard\r\n    // to be retrieve in TooltipView, we prepare parameters here.\r\n    valueLabelOpt: {\r\n      precision: axisPointerModel.get(['label', 'precision']),\r\n      formatter: axisPointerModel.get(['label', 'formatter'])\r\n    },\r\n    seriesDataIndices: payloadBatch.slice()\r\n  });\r\n}\r\n\r\nfunction updateModelActually(showValueMap, axesInfo, outputPayload) {\r\n  var outputAxesInfo = outputPayload.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\r\n\r\n  each(axesInfo, function (axisInfo, key) {\r\n    var option = axisInfo.axisPointerModel.option;\r\n    var valItem = showValueMap[key];\r\n\r\n    if (valItem) {\r\n      !axisInfo.useHandle && (option.status = 'show');\r\n      option.value = valItem.value; // For label formatter param and highlight.\r\n\r\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\r\n    } // When always show (e.g., handle used), remain\r\n    // original value and status.\r\n    else {\r\n        // If hide, value still need to be set, consider\r\n        // click legend to toggle axis blank.\r\n        !axisInfo.useHandle && (option.status = 'hide');\r\n      } // If status is 'hide', should be no info in payload.\r\n\r\n\r\n    option.status === 'show' && outputAxesInfo.push({\r\n      axisDim: axisInfo.axis.dim,\r\n      axisIndex: axisInfo.axis.model.componentIndex,\r\n      value: option.value\r\n    });\r\n  });\r\n}\r\n\r\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\r\n  // Basic logic: If no showTip required, hideTip will be dispatched.\r\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\r\n    dispatchAction({\r\n      type: 'hideTip'\r\n    });\r\n    return;\r\n  } // In most case only one axis (or event one series is used). It is\r\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\r\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\r\n  // axis on the payload.\r\n\r\n\r\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\r\n  dispatchAction({\r\n    type: 'showTip',\r\n    escapeConnect: true,\r\n    x: point[0],\r\n    y: point[1],\r\n    tooltipOption: payload.tooltipOption,\r\n    position: payload.position,\r\n    dataIndexInside: sampleItem.dataIndexInside,\r\n    dataIndex: sampleItem.dataIndex,\r\n    seriesIndex: sampleItem.seriesIndex,\r\n    dataByCoordSys: dataByCoordSys.list\r\n  });\r\n}\r\n\r\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\r\n  // FIXME\r\n  // highlight status modification shoule be a stage of main process?\r\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\r\n  var zr = api.getZr();\r\n  var highDownKey = 'axisPointerLastHighlights';\r\n  var lastHighlights = inner(zr)[highDownKey] || {};\r\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\r\n  // Build hash map and remove duplicate incidentally.\r\n\r\n  each(axesInfo, function (axisInfo, key) {\r\n    var option = axisInfo.axisPointerModel.option;\r\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\r\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\r\n      newHighlights[key] = batchItem;\r\n    });\r\n  }); // Diff.\r\n\r\n  var toHighlight = [];\r\n  var toDownplay = [];\r\n  each(lastHighlights, function (batchItem, key) {\r\n    !newHighlights[key] && toDownplay.push(batchItem);\r\n  });\r\n  each(newHighlights, function (batchItem, key) {\r\n    !lastHighlights[key] && toHighlight.push(batchItem);\r\n  });\r\n  toDownplay.length && api.dispatchAction({\r\n    type: 'downplay',\r\n    escapeConnect: true,\r\n    // Not blur others when highlight in axisPointer.\r\n    notBlur: true,\r\n    batch: toDownplay\r\n  });\r\n  toHighlight.length && api.dispatchAction({\r\n    type: 'highlight',\r\n    escapeConnect: true,\r\n    // Not blur others when highlight in axisPointer.\r\n    notBlur: true,\r\n    batch: toHighlight\r\n  });\r\n}\r\n\r\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\r\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\r\n    var inputAxisInfo = inputAxesInfo[i];\r\n\r\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\r\n      return inputAxisInfo;\r\n    }\r\n  }\r\n}\r\n\r\nfunction makeMapperParam(axisInfo) {\r\n  var axisModel = axisInfo.axis.model;\r\n  var item = {};\r\n  var dim = item.axisDim = axisInfo.axis.dim;\r\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\r\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\r\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\r\n  return item;\r\n}\r\n\r\nfunction illegalPoint(point) {\r\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport AxisView from '../axis/AxisView';\r\nimport CartesianAxisPointer from './CartesianAxisPointer';\r\nimport AxisPointerModel from './AxisPointerModel';\r\nimport AxisPointerView from './AxisPointerView';\r\nimport { isArray } from 'zrender/lib/core/util';\r\nimport { collect } from './modelHelper';\r\nimport axisTrigger from './axisTrigger';\r\nexport function install(registers) {\r\n  // CartesianAxisPointer is not supposed to be required here. But consider\r\n  // echarts.simple.js and online build tooltip, which only require gridSimple,\r\n  // CartesianAxisPointer should be able to required somewhere.\r\n  AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\r\n  registers.registerComponentModel(AxisPointerModel);\r\n  registers.registerComponentView(AxisPointerView);\r\n  registers.registerPreprocessor(function (option) {\r\n    // Always has a global axisPointerModel for default setting.\r\n    if (option) {\r\n      (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\r\n      var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\r\n      // is not set, remain null/undefined, otherwise it will\r\n      // override existent link setting.\r\n\r\n      if (link && !isArray(link)) {\r\n        option.axisPointer.link = [link];\r\n      }\r\n    }\r\n  }); // This process should proformed after coordinate systems created\r\n  // and series data processed. So put it on statistic processing stage.\r\n\r\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\r\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\r\n    // allAxesInfo should be updated when setOption performed.\r\n    ecModel.getComponent('axisPointer').coordSysAxesInfo = collect(ecModel, api);\r\n  }); // Broadcast to all views.\r\n\r\n  registers.registerAction({\r\n    type: 'updateAxisPointer',\r\n    event: 'updateAxisPointer',\r\n    update: ':updateAxisPointer'\r\n  }, axisTrigger);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { install as installSimple } from './installSimple';\r\nimport { install as installAxisPointer } from '../axisPointer/install';\r\nimport { use } from '../../extension';\r\nexport function install(registers) {\r\n  use(installSimple);\r\n  use(installAxisPointer);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport BaseAxisPointer from './BaseAxisPointer';\r\nimport * as graphic from '../../util/graphic';\r\nimport * as viewHelper from './viewHelper';\r\nimport * as matrix from 'zrender/lib/core/matrix';\r\nimport AxisBuilder from '../axis/AxisBuilder';\r\n\r\nvar PolarAxisPointer =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(PolarAxisPointer, _super);\r\n\r\n  function PolarAxisPointer() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  PolarAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {\r\n    var axis = axisModel.axis;\r\n\r\n    if (axis.dim === 'angle') {\r\n      this.animationThreshold = Math.PI / 18;\r\n    }\r\n\r\n    var polar = axis.polar;\r\n    var otherAxis = polar.getOtherAxis(axis);\r\n    var otherExtent = otherAxis.getExtent();\r\n    var coordValue = axis.dataToCoord(value);\r\n    var axisPointerType = axisPointerModel.get('type');\r\n\r\n    if (axisPointerType && axisPointerType !== 'none') {\r\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\r\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent);\r\n      pointerOption.style = elStyle;\r\n      elOption.graphicKey = pointerOption.type;\r\n      elOption.pointer = pointerOption;\r\n    }\r\n\r\n    var labelMargin = axisPointerModel.get(['label', 'margin']);\r\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\r\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\r\n  };\r\n\r\n  return PolarAxisPointer;\r\n}(BaseAxisPointer);\r\n\r\n;\r\n\r\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\r\n  var axis = axisModel.axis;\r\n  var coord = axis.dataToCoord(value);\r\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\r\n  axisAngle = axisAngle / 180 * Math.PI;\r\n  var radiusExtent = polar.getRadiusAxis().getExtent();\r\n  var position;\r\n  var align;\r\n  var verticalAlign;\r\n\r\n  if (axis.dim === 'radius') {\r\n    var transform = matrix.create();\r\n    matrix.rotate(transform, transform, axisAngle);\r\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\r\n    position = graphic.applyTransform([coord, -labelMargin], transform);\r\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0; // @ts-ignore\r\n\r\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\r\n    align = labelLayout.textAlign;\r\n    verticalAlign = labelLayout.textVerticalAlign;\r\n  } else {\r\n    // angle axis\r\n    var r = radiusExtent[1];\r\n    position = polar.coordToPoint([r + labelMargin, coord]);\r\n    var cx = polar.cx;\r\n    var cy = polar.cy;\r\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\r\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\r\n  }\r\n\r\n  return {\r\n    position: position,\r\n    align: align,\r\n    verticalAlign: verticalAlign\r\n  };\r\n}\r\n\r\nvar pointerShapeBuilder = {\r\n  line: function (axis, polar, coordValue, otherExtent) {\r\n    return axis.dim === 'angle' ? {\r\n      type: 'Line',\r\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\r\n    } : {\r\n      type: 'Circle',\r\n      shape: {\r\n        cx: polar.cx,\r\n        cy: polar.cy,\r\n        r: coordValue\r\n      }\r\n    };\r\n  },\r\n  shadow: function (axis, polar, coordValue, otherExtent) {\r\n    var bandWidth = Math.max(1, axis.getBandWidth());\r\n    var radian = Math.PI / 180;\r\n    return axis.dim === 'angle' ? {\r\n      type: 'Sector',\r\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\r\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\r\n    } : {\r\n      type: 'Sector',\r\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\r\n    };\r\n  }\r\n};\r\nexport default PolarAxisPointer;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport ComponentModel from '../../model/Component';\r\n\r\nvar PolarModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(PolarModel, _super);\r\n\r\n  function PolarModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = PolarModel.type;\r\n    return _this;\r\n  }\r\n\r\n  PolarModel.prototype.findAxisModel = function (axisType) {\r\n    var foundAxisModel;\r\n    var ecModel = this.ecModel;\r\n    ecModel.eachComponent(axisType, function (axisModel) {\r\n      if (axisModel.getCoordSysModel() === this) {\r\n        foundAxisModel = axisModel;\r\n      }\r\n    }, this);\r\n    return foundAxisModel;\r\n  };\r\n\r\n  PolarModel.type = 'polar';\r\n  PolarModel.dependencies = ['radiusAxis', 'angleAxis'];\r\n  PolarModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 0,\r\n    center: ['50%', '50%'],\r\n    radius: '80%'\r\n  };\r\n  return PolarModel;\r\n}(ComponentModel);\r\n\r\nexport default PolarModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport ComponentModel from '../../model/Component';\r\nimport { AxisModelCommonMixin } from '../axisModelCommonMixin';\r\nimport { SINGLE_REFERRING } from '../../util/model';\r\n\r\nvar PolarAxisModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(PolarAxisModel, _super);\r\n\r\n  function PolarAxisModel() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  PolarAxisModel.prototype.getCoordSysModel = function () {\r\n    return this.getReferringComponents('polar', SINGLE_REFERRING).models[0];\r\n  };\r\n\r\n  PolarAxisModel.type = 'polarAxis';\r\n  return PolarAxisModel;\r\n}(ComponentModel);\r\n\r\nzrUtil.mixin(PolarAxisModel, AxisModelCommonMixin);\r\nexport { PolarAxisModel };\r\n\r\nvar AngleAxisModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(AngleAxisModel, _super);\r\n\r\n  function AngleAxisModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = AngleAxisModel.type;\r\n    return _this;\r\n  }\r\n\r\n  AngleAxisModel.type = 'angleAxis';\r\n  return AngleAxisModel;\r\n}(PolarAxisModel);\r\n\r\nexport { AngleAxisModel };\r\n\r\nvar RadiusAxisModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(RadiusAxisModel, _super);\r\n\r\n  function RadiusAxisModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = RadiusAxisModel.type;\r\n    return _this;\r\n  }\r\n\r\n  RadiusAxisModel.type = 'radiusAxis';\r\n  return RadiusAxisModel;\r\n}(PolarAxisModel);\r\n\r\nexport { RadiusAxisModel };", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport Axis from '../Axis';\r\n\r\nvar RadiusAxis =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(RadiusAxis, _super);\r\n\r\n  function RadiusAxis(scale, radiusExtent) {\r\n    return _super.call(this, 'radius', scale, radiusExtent) || this;\r\n  }\r\n\r\n  RadiusAxis.prototype.pointToData = function (point, clamp) {\r\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\r\n  };\r\n\r\n  return RadiusAxis;\r\n}(Axis);\r\n\r\nRadiusAxis.prototype.dataToRadius = Axis.prototype.dataToCoord;\r\nRadiusAxis.prototype.radiusToData = Axis.prototype.coordToData;\r\nexport default RadiusAxis;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as textContain from 'zrender/lib/contain/text';\r\nimport Axis from '../Axis';\r\nimport { makeInner } from '../../util/model';\r\nvar inner = makeInner();\r\n\r\nvar AngleAxis =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(AngleAxis, _super);\r\n\r\n  function AngleAxis(scale, angleExtent) {\r\n    return _super.call(this, 'angle', scale, angleExtent || [0, 360]) || this;\r\n  }\r\n\r\n  AngleAxis.prototype.pointToData = function (point, clamp) {\r\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\r\n  };\r\n  /**\r\n   * Only be called in category axis.\r\n   * Angle axis uses text height to decide interval\r\n   *\r\n   * @override\r\n   * @return {number} Auto interval for cateogry axis tick and label\r\n   */\r\n\r\n\r\n  AngleAxis.prototype.calculateCategoryInterval = function () {\r\n    var axis = this;\r\n    var labelModel = axis.getLabelModel();\r\n    var ordinalScale = axis.scale;\r\n    var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\r\n    // avoid generating a long array by `getTicks`\r\n    // in large category data case.\r\n\r\n    var tickCount = ordinalScale.count();\r\n\r\n    if (ordinalExtent[1] - ordinalExtent[0] < 1) {\r\n      return 0;\r\n    }\r\n\r\n    var tickValue = ordinalExtent[0];\r\n    var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\r\n    var unitH = Math.abs(unitSpan); // Not precise, just use height as text width\r\n    // and each distance from axis line yet.\r\n\r\n    var rect = textContain.getBoundingRect(tickValue == null ? '' : tickValue + '', labelModel.getFont(), 'center', 'top');\r\n    var maxH = Math.max(rect.height, 7);\r\n    var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\r\n\r\n    isNaN(dh) && (dh = Infinity);\r\n    var interval = Math.max(0, Math.floor(dh));\r\n    var cache = inner(axis.model);\r\n    var lastAutoInterval = cache.lastAutoInterval;\r\n    var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\r\n    // otherwise the calculated interval might jitter when the zoom\r\n    // window size is close to the interval-changing size.\r\n\r\n    if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\r\n    // point is not the same when zooming in or zooming out.\r\n    && lastAutoInterval > interval) {\r\n      interval = lastAutoInterval;\r\n    } // Only update cache if cache not used, otherwise the\r\n    // changing of interval is too insensitive.\r\n    else {\r\n        cache.lastTickCount = tickCount;\r\n        cache.lastAutoInterval = interval;\r\n      }\r\n\r\n    return interval;\r\n  };\r\n\r\n  return AngleAxis;\r\n}(Axis);\r\n\r\nAngleAxis.prototype.dataToAngle = Axis.prototype.dataToCoord;\r\nAngleAxis.prototype.angleToData = Axis.prototype.coordToData;\r\nexport default AngleAxis;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport RadiusAxis from './RadiusAxis';\r\nimport AngleAxis from './AngleAxis';\r\nexport var polarDimensions = ['radius', 'angle'];\r\n\r\nvar Polar =\r\n/** @class */\r\nfunction () {\r\n  function Polar(name) {\r\n    this.dimensions = polarDimensions;\r\n    this.type = 'polar';\r\n    /**\r\n     * x of polar center\r\n     */\r\n\r\n    this.cx = 0;\r\n    /**\r\n     * y of polar center\r\n     */\r\n\r\n    this.cy = 0;\r\n    this._radiusAxis = new RadiusAxis();\r\n    this._angleAxis = new AngleAxis();\r\n    this.axisPointerEnabled = true;\r\n    this.name = name || '';\r\n    this._radiusAxis.polar = this._angleAxis.polar = this;\r\n  }\r\n  /**\r\n   * If contain coord\r\n   */\r\n\r\n\r\n  Polar.prototype.containPoint = function (point) {\r\n    var coord = this.pointToCoord(point);\r\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\r\n  };\r\n  /**\r\n   * If contain data\r\n   */\r\n\r\n\r\n  Polar.prototype.containData = function (data) {\r\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\r\n  };\r\n\r\n  Polar.prototype.getAxis = function (dim) {\r\n    var key = '_' + dim + 'Axis';\r\n    return this[key];\r\n  };\r\n\r\n  Polar.prototype.getAxes = function () {\r\n    return [this._radiusAxis, this._angleAxis];\r\n  };\r\n  /**\r\n   * Get axes by type of scale\r\n   */\r\n\r\n\r\n  Polar.prototype.getAxesByScale = function (scaleType) {\r\n    var axes = [];\r\n    var angleAxis = this._angleAxis;\r\n    var radiusAxis = this._radiusAxis;\r\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\r\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\r\n    return axes;\r\n  };\r\n\r\n  Polar.prototype.getAngleAxis = function () {\r\n    return this._angleAxis;\r\n  };\r\n\r\n  Polar.prototype.getRadiusAxis = function () {\r\n    return this._radiusAxis;\r\n  };\r\n\r\n  Polar.prototype.getOtherAxis = function (axis) {\r\n    var angleAxis = this._angleAxis;\r\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\r\n  };\r\n  /**\r\n   * Base axis will be used on stacking.\r\n   *\r\n   */\r\n\r\n\r\n  Polar.prototype.getBaseAxis = function () {\r\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\r\n  };\r\n\r\n  Polar.prototype.getTooltipAxes = function (dim) {\r\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\r\n    return {\r\n      baseAxes: [baseAxis],\r\n      otherAxes: [this.getOtherAxis(baseAxis)]\r\n    };\r\n  };\r\n  /**\r\n   * Convert a single data item to (x, y) point.\r\n   * Parameter data is an array which the first element is radius and the second is angle\r\n   */\r\n\r\n\r\n  Polar.prototype.dataToPoint = function (data, clamp) {\r\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\r\n  };\r\n  /**\r\n   * Convert a (x, y) point to data\r\n   */\r\n\r\n\r\n  Polar.prototype.pointToData = function (point, clamp) {\r\n    var coord = this.pointToCoord(point);\r\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\r\n  };\r\n  /**\r\n   * Convert a (x, y) point to (radius, angle) coord\r\n   */\r\n\r\n\r\n  Polar.prototype.pointToCoord = function (point) {\r\n    var dx = point[0] - this.cx;\r\n    var dy = point[1] - this.cy;\r\n    var angleAxis = this.getAngleAxis();\r\n    var extent = angleAxis.getExtent();\r\n    var minAngle = Math.min(extent[0], extent[1]);\r\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\r\n    // FIXME\r\n\r\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\r\n    var radius = Math.sqrt(dx * dx + dy * dy);\r\n    dx /= radius;\r\n    dy /= radius;\r\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\r\n\r\n    var dir = radian < minAngle ? 1 : -1;\r\n\r\n    while (radian < minAngle || radian > maxAngle) {\r\n      radian += dir * 360;\r\n    }\r\n\r\n    return [radius, radian];\r\n  };\r\n  /**\r\n   * Convert a (radius, angle) coord to (x, y) point\r\n   */\r\n\r\n\r\n  Polar.prototype.coordToPoint = function (coord) {\r\n    var radius = coord[0];\r\n    var radian = coord[1] / 180 * Math.PI;\r\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\r\n\r\n    var y = -Math.sin(radian) * radius + this.cy;\r\n    return [x, y];\r\n  };\r\n  /**\r\n   * Get ring area of cartesian.\r\n   * Area will have a contain function to determine if a point is in the coordinate system.\r\n   */\r\n\r\n\r\n  Polar.prototype.getArea = function () {\r\n    var angleAxis = this.getAngleAxis();\r\n    var radiusAxis = this.getRadiusAxis();\r\n    var radiusExtent = radiusAxis.getExtent().slice();\r\n    radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\r\n    var angleExtent = angleAxis.getExtent();\r\n    var RADIAN = Math.PI / 180;\r\n    return {\r\n      cx: this.cx,\r\n      cy: this.cy,\r\n      r0: radiusExtent[0],\r\n      r: radiusExtent[1],\r\n      startAngle: -angleExtent[0] * RADIAN,\r\n      endAngle: -angleExtent[1] * RADIAN,\r\n      clockwise: angleAxis.inverse,\r\n      contain: function (x, y) {\r\n        // It's a ring shape.\r\n        // Start angle and end angle don't matter\r\n        var dx = x - this.cx;\r\n        var dy = y - this.cy;\r\n        var d2 = dx * dx + dy * dy;\r\n        var r = this.r;\r\n        var r0 = this.r0;\r\n        return d2 <= r * r && d2 >= r0 * r0;\r\n      }\r\n    };\r\n  };\r\n\r\n  Polar.prototype.convertToPixel = function (ecModel, finder, value) {\r\n    var coordSys = getCoordSys(finder);\r\n    return coordSys === this ? this.dataToPoint(value) : null;\r\n  };\r\n\r\n  Polar.prototype.convertFromPixel = function (ecModel, finder, pixel) {\r\n    var coordSys = getCoordSys(finder);\r\n    return coordSys === this ? this.pointToData(pixel) : null;\r\n  };\r\n\r\n  return Polar;\r\n}();\r\n\r\nfunction getCoordSys(finder) {\r\n  var seriesModel = finder.seriesModel;\r\n  var polarModel = finder.polarModel;\r\n  return polarModel && polarModel.coordinateSystem || seriesModel && seriesModel.coordinateSystem;\r\n}\r\n\r\nexport default Polar;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// TODO Axis scale\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport Polar, { polarDimensions } from './Polar';\r\nimport { parsePercent } from '../../util/number';\r\nimport { createScaleByModel, niceScaleExtent, getDataDimensionsOnAxis } from '../../coord/axisHelper';\r\nimport { SINGLE_REFERRING } from '../../util/model';\r\n/**\r\n * Resize method bound to the polar\r\n */\r\n\r\nfunction resizePolar(polar, polarModel, api) {\r\n  var center = polarModel.get('center');\r\n  var width = api.getWidth();\r\n  var height = api.getHeight();\r\n  polar.cx = parsePercent(center[0], width);\r\n  polar.cy = parsePercent(center[1], height);\r\n  var radiusAxis = polar.getRadiusAxis();\r\n  var size = Math.min(width, height) / 2;\r\n  var radius = polarModel.get('radius');\r\n\r\n  if (radius == null) {\r\n    radius = [0, '100%'];\r\n  } else if (!zrUtil.isArray(radius)) {\r\n    // r0 = 0\r\n    radius = [0, radius];\r\n  }\r\n\r\n  var parsedRadius = [parsePercent(radius[0], size), parsePercent(radius[1], size)];\r\n  radiusAxis.inverse ? radiusAxis.setExtent(parsedRadius[1], parsedRadius[0]) : radiusAxis.setExtent(parsedRadius[0], parsedRadius[1]);\r\n}\r\n/**\r\n * Update polar\r\n */\r\n\r\n\r\nfunction updatePolarScale(ecModel, api) {\r\n  var polar = this;\r\n  var angleAxis = polar.getAngleAxis();\r\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\r\n\r\n  angleAxis.scale.setExtent(Infinity, -Infinity);\r\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\r\n  ecModel.eachSeries(function (seriesModel) {\r\n    if (seriesModel.coordinateSystem === polar) {\r\n      var data_1 = seriesModel.getData();\r\n      zrUtil.each(getDataDimensionsOnAxis(data_1, 'radius'), function (dim) {\r\n        radiusAxis.scale.unionExtentFromData(data_1, dim);\r\n      });\r\n      zrUtil.each(getDataDimensionsOnAxis(data_1, 'angle'), function (dim) {\r\n        angleAxis.scale.unionExtentFromData(data_1, dim);\r\n      });\r\n    }\r\n  });\r\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\r\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\r\n\r\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\r\n    var extent = angleAxis.getExtent();\r\n    var diff = 360 / angleAxis.scale.count();\r\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\r\n    angleAxis.setExtent(extent[0], extent[1]);\r\n  }\r\n}\r\n\r\nfunction isAngleAxisModel(axisModel) {\r\n  return axisModel.mainType === 'angleAxis';\r\n}\r\n/**\r\n * Set common axis properties\r\n */\r\n\r\n\r\nfunction setAxis(axis, axisModel) {\r\n  axis.type = axisModel.get('type');\r\n  axis.scale = createScaleByModel(axisModel);\r\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\r\n  axis.inverse = axisModel.get('inverse');\r\n\r\n  if (isAngleAxisModel(axisModel)) {\r\n    axis.inverse = axis.inverse !== axisModel.get('clockwise');\r\n    var startAngle = axisModel.get('startAngle');\r\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\r\n  } // Inject axis instance\r\n\r\n\r\n  axisModel.axis = axis;\r\n  axis.model = axisModel;\r\n}\r\n\r\nvar polarCreator = {\r\n  dimensions: polarDimensions,\r\n  create: function (ecModel, api) {\r\n    var polarList = [];\r\n    ecModel.eachComponent('polar', function (polarModel, idx) {\r\n      var polar = new Polar(idx + ''); // Inject resize and update method\r\n\r\n      polar.update = updatePolarScale;\r\n      var radiusAxis = polar.getRadiusAxis();\r\n      var angleAxis = polar.getAngleAxis();\r\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\r\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\r\n      setAxis(radiusAxis, radiusAxisModel);\r\n      setAxis(angleAxis, angleAxisModel);\r\n      resizePolar(polar, polarModel, api);\r\n      polarList.push(polar);\r\n      polarModel.coordinateSystem = polar;\r\n      polar.model = polarModel;\r\n    }); // Inject coordinateSystem to series\r\n\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      if (seriesModel.get('coordinateSystem') === 'polar') {\r\n        var polarModel = seriesModel.getReferringComponents('polar', SINGLE_REFERRING).models[0];\r\n\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          if (!polarModel) {\r\n            throw new Error('Polar \"' + zrUtil.retrieve(seriesModel.get('polarIndex'), seriesModel.get('polarId'), 0) + '\" not found');\r\n          }\r\n        }\r\n\r\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\r\n      }\r\n    });\r\n    return polarList;\r\n  }\r\n};\r\nexport default polarCreator;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as graphic from '../../util/graphic';\r\nimport { createTextStyle } from '../../label/labelStyle';\r\nimport Model from '../../model/Model';\r\nimport AxisView from './AxisView';\r\nimport AxisBuilder from './AxisBuilder';\r\nimport { getECData } from '../../util/innerStore';\r\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'minorTick', 'splitLine', 'minorSplitLine', 'splitArea'];\r\n\r\nfunction getAxisLineShape(polar, rExtent, angle) {\r\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\r\n  var start = polar.coordToPoint([rExtent[0], angle]);\r\n  var end = polar.coordToPoint([rExtent[1], angle]);\r\n  return {\r\n    x1: start[0],\r\n    y1: start[1],\r\n    x2: end[0],\r\n    y2: end[1]\r\n  };\r\n}\r\n\r\nfunction getRadiusIdx(polar) {\r\n  var radiusAxis = polar.getRadiusAxis();\r\n  return radiusAxis.inverse ? 0 : 1;\r\n} // Remove the last tick which will overlap the first tick\r\n\r\n\r\nfunction fixAngleOverlap(list) {\r\n  var firstItem = list[0];\r\n  var lastItem = list[list.length - 1];\r\n\r\n  if (firstItem && lastItem && Math.abs(Math.abs(firstItem.coord - lastItem.coord) - 360) < 1e-4) {\r\n    list.pop();\r\n  }\r\n}\r\n\r\nvar AngleAxisView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(AngleAxisView, _super);\r\n\r\n  function AngleAxisView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = AngleAxisView.type;\r\n    _this.axisPointerClass = 'PolarAxisPointer';\r\n    return _this;\r\n  }\r\n\r\n  AngleAxisView.prototype.render = function (angleAxisModel, ecModel) {\r\n    this.group.removeAll();\r\n\r\n    if (!angleAxisModel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var angleAxis = angleAxisModel.axis;\r\n    var polar = angleAxis.polar;\r\n    var radiusExtent = polar.getRadiusAxis().getExtent();\r\n    var ticksAngles = angleAxis.getTicksCoords();\r\n    var minorTickAngles = angleAxis.getMinorTicksCoords();\r\n    var labels = zrUtil.map(angleAxis.getViewLabels(), function (labelItem) {\r\n      labelItem = zrUtil.clone(labelItem);\r\n      var scale = angleAxis.scale;\r\n      var tickValue = scale.type === 'ordinal' ? scale.getRawOrdinalNumber(labelItem.tickValue) : labelItem.tickValue;\r\n      labelItem.coord = angleAxis.dataToCoord(tickValue);\r\n      return labelItem;\r\n    });\r\n    fixAngleOverlap(labels);\r\n    fixAngleOverlap(ticksAngles);\r\n    zrUtil.each(elementList, function (name) {\r\n      if (angleAxisModel.get([name, 'show']) && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\r\n        angelAxisElementsBuilders[name](this.group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent, labels);\r\n      }\r\n    }, this);\r\n  };\r\n\r\n  AngleAxisView.type = 'angleAxis';\r\n  return AngleAxisView;\r\n}(AxisView);\r\n\r\nvar angelAxisElementsBuilders = {\r\n  axisLine: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\r\n    var lineStyleModel = angleAxisModel.getModel(['axisLine', 'lineStyle']); // extent id of the axis radius (r0 and r)\r\n\r\n    var rId = getRadiusIdx(polar);\r\n    var r0Id = rId ? 0 : 1;\r\n    var shape;\r\n\r\n    if (radiusExtent[r0Id] === 0) {\r\n      shape = new graphic.Circle({\r\n        shape: {\r\n          cx: polar.cx,\r\n          cy: polar.cy,\r\n          r: radiusExtent[rId]\r\n        },\r\n        style: lineStyleModel.getLineStyle(),\r\n        z2: 1,\r\n        silent: true\r\n      });\r\n    } else {\r\n      shape = new graphic.Ring({\r\n        shape: {\r\n          cx: polar.cx,\r\n          cy: polar.cy,\r\n          r: radiusExtent[rId],\r\n          r0: radiusExtent[r0Id]\r\n        },\r\n        style: lineStyleModel.getLineStyle(),\r\n        z2: 1,\r\n        silent: true\r\n      });\r\n    }\r\n\r\n    shape.style.fill = null;\r\n    group.add(shape);\r\n  },\r\n  axisTick: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\r\n    var tickModel = angleAxisModel.getModel('axisTick');\r\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\r\n    var radius = radiusExtent[getRadiusIdx(polar)];\r\n    var lines = zrUtil.map(ticksAngles, function (tickAngleItem) {\r\n      return new graphic.Line({\r\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngleItem.coord)\r\n      });\r\n    });\r\n    group.add(graphic.mergePath(lines, {\r\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\r\n        stroke: angleAxisModel.get(['axisLine', 'lineStyle', 'color'])\r\n      })\r\n    }));\r\n  },\r\n  minorTick: function (group, angleAxisModel, polar, tickAngles, minorTickAngles, radiusExtent) {\r\n    if (!minorTickAngles.length) {\r\n      return;\r\n    }\r\n\r\n    var tickModel = angleAxisModel.getModel('axisTick');\r\n    var minorTickModel = angleAxisModel.getModel('minorTick');\r\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * minorTickModel.get('length');\r\n    var radius = radiusExtent[getRadiusIdx(polar)];\r\n    var lines = [];\r\n\r\n    for (var i = 0; i < minorTickAngles.length; i++) {\r\n      for (var k = 0; k < minorTickAngles[i].length; k++) {\r\n        lines.push(new graphic.Line({\r\n          shape: getAxisLineShape(polar, [radius, radius + tickLen], minorTickAngles[i][k].coord)\r\n        }));\r\n      }\r\n    }\r\n\r\n    group.add(graphic.mergePath(lines, {\r\n      style: zrUtil.defaults(minorTickModel.getModel('lineStyle').getLineStyle(), zrUtil.defaults(tickModel.getLineStyle(), {\r\n        stroke: angleAxisModel.get(['axisLine', 'lineStyle', 'color'])\r\n      }))\r\n    }));\r\n  },\r\n  axisLabel: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent, labels) {\r\n    var rawCategoryData = angleAxisModel.getCategories(true);\r\n    var commonLabelModel = angleAxisModel.getModel('axisLabel');\r\n    var labelMargin = commonLabelModel.get('margin');\r\n    var triggerEvent = angleAxisModel.get('triggerEvent'); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\r\n\r\n    zrUtil.each(labels, function (labelItem, idx) {\r\n      var labelModel = commonLabelModel;\r\n      var tickValue = labelItem.tickValue;\r\n      var r = radiusExtent[getRadiusIdx(polar)];\r\n      var p = polar.coordToPoint([r + labelMargin, labelItem.coord]);\r\n      var cx = polar.cx;\r\n      var cy = polar.cy;\r\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\r\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\r\n\r\n      if (rawCategoryData && rawCategoryData[tickValue]) {\r\n        var rawCategoryItem = rawCategoryData[tickValue];\r\n\r\n        if (zrUtil.isObject(rawCategoryItem) && rawCategoryItem.textStyle) {\r\n          labelModel = new Model(rawCategoryItem.textStyle, commonLabelModel, commonLabelModel.ecModel);\r\n        }\r\n      }\r\n\r\n      var textEl = new graphic.Text({\r\n        silent: AxisBuilder.isLabelSilent(angleAxisModel),\r\n        style: createTextStyle(labelModel, {\r\n          x: p[0],\r\n          y: p[1],\r\n          fill: labelModel.getTextColor() || angleAxisModel.get(['axisLine', 'lineStyle', 'color']),\r\n          text: labelItem.formattedLabel,\r\n          align: labelTextAlign,\r\n          verticalAlign: labelTextVerticalAlign\r\n        })\r\n      });\r\n      group.add(textEl); // Pack data for mouse event\r\n\r\n      if (triggerEvent) {\r\n        var eventData = AxisBuilder.makeAxisEventDataBase(angleAxisModel);\r\n        eventData.targetType = 'axisLabel';\r\n        eventData.value = labelItem.rawLabel;\r\n        getECData(textEl).eventData = eventData;\r\n      }\r\n    }, this);\r\n  },\r\n  splitLine: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\r\n    var splitLineModel = angleAxisModel.getModel('splitLine');\r\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\r\n    var lineColors = lineStyleModel.get('color');\r\n    var lineCount = 0;\r\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\r\n    var splitLines = [];\r\n\r\n    for (var i = 0; i < ticksAngles.length; i++) {\r\n      var colorIndex = lineCount++ % lineColors.length;\r\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\r\n      splitLines[colorIndex].push(new graphic.Line({\r\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i].coord)\r\n      }));\r\n    } // Simple optimization\r\n    // Batching the lines if color are the same\r\n\r\n\r\n    for (var i = 0; i < splitLines.length; i++) {\r\n      group.add(graphic.mergePath(splitLines[i], {\r\n        style: zrUtil.defaults({\r\n          stroke: lineColors[i % lineColors.length]\r\n        }, lineStyleModel.getLineStyle()),\r\n        silent: true,\r\n        z: angleAxisModel.get('z')\r\n      }));\r\n    }\r\n  },\r\n  minorSplitLine: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\r\n    if (!minorTickAngles.length) {\r\n      return;\r\n    }\r\n\r\n    var minorSplitLineModel = angleAxisModel.getModel('minorSplitLine');\r\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\r\n    var lines = [];\r\n\r\n    for (var i = 0; i < minorTickAngles.length; i++) {\r\n      for (var k = 0; k < minorTickAngles[i].length; k++) {\r\n        lines.push(new graphic.Line({\r\n          shape: getAxisLineShape(polar, radiusExtent, minorTickAngles[i][k].coord)\r\n        }));\r\n      }\r\n    }\r\n\r\n    group.add(graphic.mergePath(lines, {\r\n      style: lineStyleModel.getLineStyle(),\r\n      silent: true,\r\n      z: angleAxisModel.get('z')\r\n    }));\r\n  },\r\n  splitArea: function (group, angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\r\n    if (!ticksAngles.length) {\r\n      return;\r\n    }\r\n\r\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\r\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\r\n    var areaColors = areaStyleModel.get('color');\r\n    var lineCount = 0;\r\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\r\n    var splitAreas = [];\r\n    var RADIAN = Math.PI / 180;\r\n    var prevAngle = -ticksAngles[0].coord * RADIAN;\r\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\r\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\r\n    var clockwise = angleAxisModel.get('clockwise');\r\n\r\n    for (var i = 1, len = ticksAngles.length; i <= len; i++) {\r\n      var coord = i === len ? ticksAngles[0].coord : ticksAngles[i].coord;\r\n      var colorIndex = lineCount++ % areaColors.length;\r\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\r\n      splitAreas[colorIndex].push(new graphic.Sector({\r\n        shape: {\r\n          cx: polar.cx,\r\n          cy: polar.cy,\r\n          r0: r0,\r\n          r: r1,\r\n          startAngle: prevAngle,\r\n          endAngle: -coord * RADIAN,\r\n          clockwise: clockwise\r\n        },\r\n        silent: true\r\n      }));\r\n      prevAngle = -coord * RADIAN;\r\n    } // Simple optimization\r\n    // Batching the lines if color are the same\r\n\r\n\r\n    for (var i = 0; i < splitAreas.length; i++) {\r\n      group.add(graphic.mergePath(splitAreas[i], {\r\n        style: zrUtil.defaults({\r\n          fill: areaColors[i % areaColors.length]\r\n        }, areaStyleModel.getAreaStyle()),\r\n        silent: true\r\n      }));\r\n    }\r\n  }\r\n};\r\nexport default AngleAxisView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as graphic from '../../util/graphic';\r\nimport AxisBuilder from './AxisBuilder';\r\nimport AxisView from './AxisView';\r\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\r\nvar selfBuilderAttrs = ['splitLine', 'splitArea', 'minorSplitLine'];\r\n\r\nvar RadiusAxisView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(RadiusAxisView, _super);\r\n\r\n  function RadiusAxisView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = RadiusAxisView.type;\r\n    _this.axisPointerClass = 'PolarAxisPointer';\r\n    return _this;\r\n  }\r\n\r\n  RadiusAxisView.prototype.render = function (radiusAxisModel, ecModel) {\r\n    this.group.removeAll();\r\n\r\n    if (!radiusAxisModel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var oldAxisGroup = this._axisGroup;\r\n    var newAxisGroup = this._axisGroup = new graphic.Group();\r\n    this.group.add(newAxisGroup);\r\n    var radiusAxis = radiusAxisModel.axis;\r\n    var polar = radiusAxis.polar;\r\n    var angleAxis = polar.getAngleAxis();\r\n    var ticksCoords = radiusAxis.getTicksCoords();\r\n    var minorTicksCoords = radiusAxis.getMinorTicksCoords();\r\n    var axisAngle = angleAxis.getExtent()[0];\r\n    var radiusExtent = radiusAxis.getExtent();\r\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\r\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\r\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\r\n    newAxisGroup.add(axisBuilder.getGroup());\r\n    graphic.groupTransition(oldAxisGroup, newAxisGroup, radiusAxisModel);\r\n    zrUtil.each(selfBuilderAttrs, function (name) {\r\n      if (radiusAxisModel.get([name, 'show']) && !radiusAxis.scale.isBlank()) {\r\n        axisElementBuilders[name](this.group, radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords, minorTicksCoords);\r\n      }\r\n    }, this);\r\n  };\r\n\r\n  RadiusAxisView.type = 'radiusAxis';\r\n  return RadiusAxisView;\r\n}(AxisView);\r\n\r\nvar axisElementBuilders = {\r\n  splitLine: function (group, radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\r\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\r\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\r\n    var lineColors = lineStyleModel.get('color');\r\n    var lineCount = 0;\r\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\r\n    var splitLines = [];\r\n\r\n    for (var i = 0; i < ticksCoords.length; i++) {\r\n      var colorIndex = lineCount++ % lineColors.length;\r\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\r\n      splitLines[colorIndex].push(new graphic.Circle({\r\n        shape: {\r\n          cx: polar.cx,\r\n          cy: polar.cy,\r\n          r: ticksCoords[i].coord\r\n        }\r\n      }));\r\n    } // Simple optimization\r\n    // Batching the lines if color are the same\r\n\r\n\r\n    for (var i = 0; i < splitLines.length; i++) {\r\n      group.add(graphic.mergePath(splitLines[i], {\r\n        style: zrUtil.defaults({\r\n          stroke: lineColors[i % lineColors.length],\r\n          fill: null\r\n        }, lineStyleModel.getLineStyle()),\r\n        silent: true\r\n      }));\r\n    }\r\n  },\r\n  minorSplitLine: function (group, radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords, minorTicksCoords) {\r\n    if (!minorTicksCoords.length) {\r\n      return;\r\n    }\r\n\r\n    var minorSplitLineModel = radiusAxisModel.getModel('minorSplitLine');\r\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\r\n    var lines = [];\r\n\r\n    for (var i = 0; i < minorTicksCoords.length; i++) {\r\n      for (var k = 0; k < minorTicksCoords[i].length; k++) {\r\n        lines.push(new graphic.Circle({\r\n          shape: {\r\n            cx: polar.cx,\r\n            cy: polar.cy,\r\n            r: minorTicksCoords[i][k].coord\r\n          }\r\n        }));\r\n      }\r\n    }\r\n\r\n    group.add(graphic.mergePath(lines, {\r\n      style: zrUtil.defaults({\r\n        fill: null\r\n      }, lineStyleModel.getLineStyle()),\r\n      silent: true\r\n    }));\r\n  },\r\n  splitArea: function (group, radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\r\n    if (!ticksCoords.length) {\r\n      return;\r\n    }\r\n\r\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\r\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\r\n    var areaColors = areaStyleModel.get('color');\r\n    var lineCount = 0;\r\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\r\n    var splitAreas = [];\r\n    var prevRadius = ticksCoords[0].coord;\r\n\r\n    for (var i = 1; i < ticksCoords.length; i++) {\r\n      var colorIndex = lineCount++ % areaColors.length;\r\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\r\n      splitAreas[colorIndex].push(new graphic.Sector({\r\n        shape: {\r\n          cx: polar.cx,\r\n          cy: polar.cy,\r\n          r0: prevRadius,\r\n          r: ticksCoords[i].coord,\r\n          startAngle: 0,\r\n          endAngle: Math.PI * 2\r\n        },\r\n        silent: true\r\n      }));\r\n      prevRadius = ticksCoords[i].coord;\r\n    } // Simple optimization\r\n    // Batching the lines if color are the same\r\n\r\n\r\n    for (var i = 0; i < splitAreas.length; i++) {\r\n      group.add(graphic.mergePath(splitAreas[i], {\r\n        style: zrUtil.defaults({\r\n          fill: areaColors[i % areaColors.length]\r\n        }, areaStyleModel.getAreaStyle()),\r\n        silent: true\r\n      }));\r\n    }\r\n  }\r\n};\r\n/**\r\n * @inner\r\n */\r\n\r\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\r\n  return {\r\n    position: [polar.cx, polar.cy],\r\n    rotation: axisAngle / 180 * Math.PI,\r\n    labelDirection: -1,\r\n    tickDirection: -1,\r\n    nameDirection: 1,\r\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\r\n    // Over splitLine and splitArea\r\n    z2: 1\r\n  };\r\n}\r\n\r\nexport default RadiusAxisView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { parsePercent } from '../util/number';\r\nimport { isDimensionStacked } from '../data/helper/dataStackHelper';\r\n\r\nfunction getSeriesStackId(seriesModel) {\r\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\r\n}\r\n\r\nfunction getAxisKey(polar, axis) {\r\n  return axis.dim + polar.model.componentIndex;\r\n}\r\n\r\nfunction barLayoutPolar(seriesType, ecModel, api) {\r\n  var lastStackCoords = {};\r\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\r\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\r\n  }));\r\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\r\n    // Check series coordinate, do layout for polar only\r\n    if (seriesModel.coordinateSystem.type !== 'polar') {\r\n      return;\r\n    }\r\n\r\n    var data = seriesModel.getData();\r\n    var polar = seriesModel.coordinateSystem;\r\n    var baseAxis = polar.getBaseAxis();\r\n    var axisKey = getAxisKey(polar, baseAxis);\r\n    var stackId = getSeriesStackId(seriesModel);\r\n    var columnLayoutInfo = barWidthAndOffset[axisKey][stackId];\r\n    var columnOffset = columnLayoutInfo.offset;\r\n    var columnWidth = columnLayoutInfo.width;\r\n    var valueAxis = polar.getOtherAxis(baseAxis);\r\n    var cx = seriesModel.coordinateSystem.cx;\r\n    var cy = seriesModel.coordinateSystem.cy;\r\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\r\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\r\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\r\n    var valueDim = data.mapDimension(valueAxis.dim);\r\n    var baseDim = data.mapDimension(baseAxis.dim);\r\n    var stacked = isDimensionStacked(data, valueDim\r\n    /*, baseDim*/\r\n    );\r\n    var clampLayout = baseAxis.dim !== 'radius' || !seriesModel.get('roundCap', true);\r\n    var valueAxisStart = valueAxis.dataToCoord(0);\r\n\r\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\r\n      var value = data.get(valueDim, idx);\r\n      var baseValue = data.get(baseDim, idx);\r\n      var sign = value >= 0 ? 'p' : 'n';\r\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\r\n      // stackResultDimension directly.\r\n      // Only ordinal axis can be stacked.\r\n\r\n      if (stacked) {\r\n        if (!lastStackCoords[stackId][baseValue]) {\r\n          lastStackCoords[stackId][baseValue] = {\r\n            p: valueAxisStart,\r\n            n: valueAxisStart // Negative stack\r\n\r\n          };\r\n        } // Should also consider #4243\r\n\r\n\r\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\r\n      }\r\n\r\n      var r0 = void 0;\r\n      var r = void 0;\r\n      var startAngle = void 0;\r\n      var endAngle = void 0; // radial sector\r\n\r\n      if (valueAxis.dim === 'radius') {\r\n        var radiusSpan = valueAxis.dataToCoord(value) - valueAxisStart;\r\n        var angle = baseAxis.dataToCoord(baseValue);\r\n\r\n        if (Math.abs(radiusSpan) < barMinHeight) {\r\n          radiusSpan = (radiusSpan < 0 ? -1 : 1) * barMinHeight;\r\n        }\r\n\r\n        r0 = baseCoord;\r\n        r = baseCoord + radiusSpan;\r\n        startAngle = angle - columnOffset;\r\n        endAngle = startAngle - columnWidth;\r\n        stacked && (lastStackCoords[stackId][baseValue][sign] = r);\r\n      } // tangential sector\r\n      else {\r\n          var angleSpan = valueAxis.dataToCoord(value, clampLayout) - valueAxisStart;\r\n          var radius = baseAxis.dataToCoord(baseValue);\r\n\r\n          if (Math.abs(angleSpan) < barMinAngle) {\r\n            angleSpan = (angleSpan < 0 ? -1 : 1) * barMinAngle;\r\n          }\r\n\r\n          r0 = radius + columnOffset;\r\n          r = r0 + columnWidth;\r\n          startAngle = baseCoord;\r\n          endAngle = baseCoord + angleSpan; // if the previous stack is at the end of the ring,\r\n          // add a round to differentiate it from origin\r\n          // let extent = angleAxis.getExtent();\r\n          // let stackCoord = angle;\r\n          // if (stackCoord === extent[0] && value > 0) {\r\n          //     stackCoord = extent[1];\r\n          // }\r\n          // else if (stackCoord === extent[1] && value < 0) {\r\n          //     stackCoord = extent[0];\r\n          // }\r\n\r\n          stacked && (lastStackCoords[stackId][baseValue][sign] = endAngle);\r\n        }\r\n\r\n      data.setItemLayout(idx, {\r\n        cx: cx,\r\n        cy: cy,\r\n        r0: r0,\r\n        r: r,\r\n        // Consider that positive angle is anti-clockwise,\r\n        // while positive radian of sector is clockwise\r\n        startAngle: -startAngle * Math.PI / 180,\r\n        endAngle: -endAngle * Math.PI / 180,\r\n\r\n        /**\r\n         * Keep the same logic with bar in catesion: use end value to\r\n         * control direction. Notice that if clockwise is true (by\r\n         * default), the sector will always draw clockwisely, no matter\r\n         * whether endAngle is greater or less than startAngle.\r\n         */\r\n        clockwise: startAngle >= endAngle\r\n      });\r\n    }\r\n  });\r\n}\r\n/**\r\n * Calculate bar width and offset for radial bar charts\r\n */\r\n\r\n\r\nfunction calRadialBar(barSeries) {\r\n  // Columns info on each category axis. Key is polar name\r\n  var columnsMap = {};\r\n  zrUtil.each(barSeries, function (seriesModel, idx) {\r\n    var data = seriesModel.getData();\r\n    var polar = seriesModel.coordinateSystem;\r\n    var baseAxis = polar.getBaseAxis();\r\n    var axisKey = getAxisKey(polar, baseAxis);\r\n    var axisExtent = baseAxis.getExtent();\r\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\r\n    var columnsOnAxis = columnsMap[axisKey] || {\r\n      bandWidth: bandWidth,\r\n      remainedWidth: bandWidth,\r\n      autoWidthCount: 0,\r\n      categoryGap: '20%',\r\n      gap: '30%',\r\n      stacks: {}\r\n    };\r\n    var stacks = columnsOnAxis.stacks;\r\n    columnsMap[axisKey] = columnsOnAxis;\r\n    var stackId = getSeriesStackId(seriesModel);\r\n\r\n    if (!stacks[stackId]) {\r\n      columnsOnAxis.autoWidthCount++;\r\n    }\r\n\r\n    stacks[stackId] = stacks[stackId] || {\r\n      width: 0,\r\n      maxWidth: 0\r\n    };\r\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\r\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\r\n    var barGap = seriesModel.get('barGap');\r\n    var barCategoryGap = seriesModel.get('barCategoryGap');\r\n\r\n    if (barWidth && !stacks[stackId].width) {\r\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\r\n      stacks[stackId].width = barWidth;\r\n      columnsOnAxis.remainedWidth -= barWidth;\r\n    }\r\n\r\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\r\n    barGap != null && (columnsOnAxis.gap = barGap);\r\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\r\n  });\r\n  var result = {};\r\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\r\n    result[coordSysName] = {};\r\n    var stacks = columnsOnAxis.stacks;\r\n    var bandWidth = columnsOnAxis.bandWidth;\r\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\r\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\r\n    var remainedWidth = columnsOnAxis.remainedWidth;\r\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\r\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\r\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\r\n\r\n    zrUtil.each(stacks, function (column, stack) {\r\n      var maxWidth = column.maxWidth;\r\n\r\n      if (maxWidth && maxWidth < autoWidth) {\r\n        maxWidth = Math.min(maxWidth, remainedWidth);\r\n\r\n        if (column.width) {\r\n          maxWidth = Math.min(maxWidth, column.width);\r\n        }\r\n\r\n        remainedWidth -= maxWidth;\r\n        column.width = maxWidth;\r\n        autoWidthCount--;\r\n      }\r\n    }); // Recalculate width again\r\n\r\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\r\n    autoWidth = Math.max(autoWidth, 0);\r\n    var widthSum = 0;\r\n    var lastColumn;\r\n    zrUtil.each(stacks, function (column, idx) {\r\n      if (!column.width) {\r\n        column.width = autoWidth;\r\n      }\r\n\r\n      lastColumn = column;\r\n      widthSum += column.width * (1 + barGapPercent);\r\n    });\r\n\r\n    if (lastColumn) {\r\n      widthSum -= lastColumn.width * barGapPercent;\r\n    }\r\n\r\n    var offset = -widthSum / 2;\r\n    zrUtil.each(stacks, function (column, stackId) {\r\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\r\n        offset: offset,\r\n        width: column.width\r\n      };\r\n      offset += column.width * (1 + barGapPercent);\r\n    });\r\n  });\r\n  return result;\r\n}\r\n\r\nexport default barLayoutPolar;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport { use } from '../../extension';\r\nimport AxisView from '../axis/AxisView';\r\nimport PolarAxisPointer from '../axisPointer/PolarAxisPointer';\r\nimport { install as installAxisPointer } from '../axisPointer/install';\r\nimport PolarModel from '../../coord/polar/PolarModel';\r\nimport axisModelCreator from '../../coord/axisModelCreator';\r\nimport { AngleAxisModel, RadiusAxisModel } from '../../coord/polar/AxisModel';\r\nimport polarCreator from '../../coord/polar/polarCreator';\r\nimport AngleAxisView from '../axis/AngleAxisView';\r\nimport RadiusAxisView from '../axis/RadiusAxisView';\r\nimport ComponentView from '../../view/Component';\r\nimport { curry } from 'zrender/lib/core/util';\r\nimport barLayoutPolar from '../../layout/barPolar';\r\nvar angleAxisExtraOption = {\r\n  startAngle: 90,\r\n  clockwise: true,\r\n  splitNumber: 12,\r\n  axisLabel: {\r\n    rotate: 0\r\n  }\r\n};\r\nvar radiusAxisExtraOption = {\r\n  splitNumber: 5\r\n};\r\n\r\nvar PolarView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(PolarView, _super);\r\n\r\n  function PolarView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = PolarView.type;\r\n    return _this;\r\n  }\r\n\r\n  PolarView.type = 'polar';\r\n  return PolarView;\r\n}(ComponentView);\r\n\r\nexport function install(registers) {\r\n  use(installAxisPointer);\r\n  AxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\r\n  registers.registerCoordinateSystem('polar', polarCreator);\r\n  registers.registerComponentModel(PolarModel);\r\n  registers.registerComponentView(PolarView); // Model and view for angleAxis and radiusAxis\r\n\r\n  axisModelCreator(registers, 'angle', AngleAxisModel, angleAxisExtraOption);\r\n  axisModelCreator(registers, 'radius', RadiusAxisModel, radiusAxisExtraOption);\r\n  registers.registerComponentView(AngleAxisView);\r\n  registers.registerComponentView(RadiusAxisView);\r\n  registers.registerLayout(curry(barLayoutPolar, 'bar'));\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nexport function layout(axisModel, opt) {\r\n  opt = opt || {};\r\n  var single = axisModel.coordinateSystem;\r\n  var axis = axisModel.axis;\r\n  var layout = {};\r\n  var axisPosition = axis.position;\r\n  var orient = axis.orient;\r\n  var rect = single.getRect();\r\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\r\n  var positionMap = {\r\n    horizontal: {\r\n      top: rectBound[2],\r\n      bottom: rectBound[3]\r\n    },\r\n    vertical: {\r\n      left: rectBound[0],\r\n      right: rectBound[1]\r\n    }\r\n  };\r\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\r\n  var r = {\r\n    horizontal: 0,\r\n    vertical: 1\r\n  };\r\n  layout.rotation = Math.PI / 2 * r[orient];\r\n  var directionMap = {\r\n    top: -1,\r\n    bottom: 1,\r\n    right: 1,\r\n    left: -1\r\n  };\r\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\r\n\r\n  if (axisModel.get(['axisTick', 'inside'])) {\r\n    layout.tickDirection = -layout.tickDirection;\r\n  }\r\n\r\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get(['axisLabel', 'inside']))) {\r\n    layout.labelDirection = -layout.labelDirection;\r\n  }\r\n\r\n  var labelRotation = opt.rotate;\r\n  labelRotation == null && (labelRotation = axisModel.get(['axisLabel', 'rotate']));\r\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\r\n  layout.z2 = 1;\r\n  return layout;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport AxisBuilder from './AxisBuilder';\r\nimport * as graphic from '../../util/graphic';\r\nimport * as singleAxisHelper from '../../coord/single/singleAxisHelper';\r\nimport AxisView from './AxisView';\r\nimport { rectCoordAxisBuildSplitArea, rectCoordAxisHandleRemove } from './axisSplitHelper';\r\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\r\nvar selfBuilderAttrs = ['splitArea', 'splitLine'];\r\n\r\nvar SingleAxisView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(SingleAxisView, _super);\r\n\r\n  function SingleAxisView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = SingleAxisView.type;\r\n    _this.axisPointerClass = 'SingleAxisPointer';\r\n    return _this;\r\n  }\r\n\r\n  SingleAxisView.prototype.render = function (axisModel, ecModel, api, payload) {\r\n    var group = this.group;\r\n    group.removeAll();\r\n    var oldAxisGroup = this._axisGroup;\r\n    this._axisGroup = new graphic.Group();\r\n    var layout = singleAxisHelper.layout(axisModel);\r\n    var axisBuilder = new AxisBuilder(axisModel, layout);\r\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\r\n    group.add(this._axisGroup);\r\n    group.add(axisBuilder.getGroup());\r\n    zrUtil.each(selfBuilderAttrs, function (name) {\r\n      if (axisModel.get([name, 'show'])) {\r\n        axisElementBuilders[name](this, this.group, this._axisGroup, axisModel);\r\n      }\r\n    }, this);\r\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\r\n\r\n    _super.prototype.render.call(this, axisModel, ecModel, api, payload);\r\n  };\r\n\r\n  SingleAxisView.prototype.remove = function () {\r\n    rectCoordAxisHandleRemove(this);\r\n  };\r\n\r\n  SingleAxisView.type = 'singleAxis';\r\n  return SingleAxisView;\r\n}(AxisView);\r\n\r\nvar axisElementBuilders = {\r\n  splitLine: function (axisView, group, axisGroup, axisModel) {\r\n    var axis = axisModel.axis;\r\n\r\n    if (axis.scale.isBlank()) {\r\n      return;\r\n    }\r\n\r\n    var splitLineModel = axisModel.getModel('splitLine');\r\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\r\n    var lineColors = lineStyleModel.get('color');\r\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\r\n    var gridRect = axisModel.coordinateSystem.getRect();\r\n    var isHorizontal = axis.isHorizontal();\r\n    var splitLines = [];\r\n    var lineCount = 0;\r\n    var ticksCoords = axis.getTicksCoords({\r\n      tickModel: splitLineModel\r\n    });\r\n    var p1 = [];\r\n    var p2 = [];\r\n\r\n    for (var i = 0; i < ticksCoords.length; ++i) {\r\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\r\n\r\n      if (isHorizontal) {\r\n        p1[0] = tickCoord;\r\n        p1[1] = gridRect.y;\r\n        p2[0] = tickCoord;\r\n        p2[1] = gridRect.y + gridRect.height;\r\n      } else {\r\n        p1[0] = gridRect.x;\r\n        p1[1] = tickCoord;\r\n        p2[0] = gridRect.x + gridRect.width;\r\n        p2[1] = tickCoord;\r\n      }\r\n\r\n      var colorIndex = lineCount++ % lineColors.length;\r\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\r\n      splitLines[colorIndex].push(new graphic.Line({\r\n        subPixelOptimize: true,\r\n        shape: {\r\n          x1: p1[0],\r\n          y1: p1[1],\r\n          x2: p2[0],\r\n          y2: p2[1]\r\n        },\r\n        silent: true\r\n      }));\r\n    }\r\n\r\n    var lineStyle = lineStyleModel.getLineStyle(['color']);\r\n\r\n    for (var i = 0; i < splitLines.length; ++i) {\r\n      group.add(graphic.mergePath(splitLines[i], {\r\n        style: zrUtil.defaults({\r\n          stroke: lineColors[i % lineColors.length]\r\n        }, lineStyle),\r\n        silent: true\r\n      }));\r\n    }\r\n  },\r\n  splitArea: function (axisView, group, axisGroup, axisModel) {\r\n    rectCoordAxisBuildSplitArea(axisView, axisGroup, axisModel, axisModel);\r\n  }\r\n};\r\nexport default SingleAxisView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport ComponentModel from '../../model/Component';\r\nimport { AxisModelCommonMixin } from '../axisModelCommonMixin';\r\nimport { mixin } from 'zrender/lib/core/util';\r\n\r\nvar SingleAxisModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(SingleAxisModel, _super);\r\n\r\n  function SingleAxisModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = SingleAxisModel.type;\r\n    return _this;\r\n  }\r\n\r\n  SingleAxisModel.prototype.getCoordSysModel = function () {\r\n    return this;\r\n  };\r\n\r\n  SingleAxisModel.type = 'singleAxis';\r\n  SingleAxisModel.layoutMode = 'box';\r\n  SingleAxisModel.defaultOption = {\r\n    left: '5%',\r\n    top: '5%',\r\n    right: '5%',\r\n    bottom: '5%',\r\n    type: 'value',\r\n    position: 'bottom',\r\n    orient: 'horizontal',\r\n    axisLine: {\r\n      show: true,\r\n      lineStyle: {\r\n        width: 1,\r\n        type: 'solid'\r\n      }\r\n    },\r\n    // Single coordinate system and single axis is the,\r\n    // which is used as the parent tooltip model.\r\n    // same model, so we set default tooltip show as true.\r\n    tooltip: {\r\n      show: true\r\n    },\r\n    axisTick: {\r\n      show: true,\r\n      length: 6,\r\n      lineStyle: {\r\n        width: 1\r\n      }\r\n    },\r\n    axisLabel: {\r\n      show: true,\r\n      interval: 'auto'\r\n    },\r\n    splitLine: {\r\n      show: true,\r\n      lineStyle: {\r\n        type: 'dashed',\r\n        opacity: 0.2\r\n      }\r\n    }\r\n  };\r\n  return SingleAxisModel;\r\n}(ComponentModel);\r\n\r\nmixin(SingleAxisModel, AxisModelCommonMixin.prototype);\r\nexport default SingleAxisModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport Axis from '../Axis';\r\n\r\nvar SingleAxis =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(SingleAxis, _super);\r\n\r\n  function SingleAxis(dim, scale, coordExtent, axisType, position) {\r\n    var _this = _super.call(this, dim, scale, coordExtent) || this;\r\n\r\n    _this.type = axisType || 'value';\r\n    _this.position = position || 'bottom';\r\n    return _this;\r\n  }\r\n  /**\r\n   * Judge the orient of the axis.\r\n   */\r\n\r\n\r\n  SingleAxis.prototype.isHorizontal = function () {\r\n    var position = this.position;\r\n    return position === 'top' || position === 'bottom';\r\n  };\r\n\r\n  SingleAxis.prototype.pointToData = function (point, clamp) {\r\n    return this.coordinateSystem.pointToData(point)[0];\r\n  };\r\n\r\n  return SingleAxis;\r\n}(Axis);\r\n\r\nexport default SingleAxis;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Single coordinates system.\r\n */\r\nimport SingleAxis from './SingleAxis';\r\nimport * as axisHelper from '../axisHelper';\r\nimport { getLayoutRect } from '../../util/layout';\r\nimport { each } from 'zrender/lib/core/util';\r\nexport var singleDimensions = ['single'];\r\n/**\r\n * Create a single coordinates system.\r\n */\r\n\r\nvar Single =\r\n/** @class */\r\nfunction () {\r\n  function Single(axisModel, ecModel, api) {\r\n    this.type = 'single';\r\n    this.dimension = 'single';\r\n    /**\r\n     * Add it just for draw tooltip.\r\n     */\r\n\r\n    this.dimensions = singleDimensions;\r\n    this.axisPointerEnabled = true;\r\n    this.model = axisModel;\r\n\r\n    this._init(axisModel, ecModel, api);\r\n  }\r\n  /**\r\n   * Initialize single coordinate system.\r\n   */\r\n\r\n\r\n  Single.prototype._init = function (axisModel, ecModel, api) {\r\n    var dim = this.dimension;\r\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\r\n    var isCategory = axis.type === 'category';\r\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\r\n    axis.inverse = axisModel.get('inverse');\r\n    axis.orient = axisModel.get('orient');\r\n    axisModel.axis = axis;\r\n    axis.model = axisModel;\r\n    axis.coordinateSystem = this;\r\n    this._axis = axis;\r\n  };\r\n  /**\r\n   * Update axis scale after data processed\r\n   */\r\n\r\n\r\n  Single.prototype.update = function (ecModel, api) {\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      if (seriesModel.coordinateSystem === this) {\r\n        var data_1 = seriesModel.getData();\r\n        each(data_1.mapDimensionsAll(this.dimension), function (dim) {\r\n          this._axis.scale.unionExtentFromData(data_1, dim);\r\n        }, this);\r\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\r\n      }\r\n    }, this);\r\n  };\r\n  /**\r\n   * Resize the single coordinate system.\r\n   */\r\n\r\n\r\n  Single.prototype.resize = function (axisModel, api) {\r\n    this._rect = getLayoutRect({\r\n      left: axisModel.get('left'),\r\n      top: axisModel.get('top'),\r\n      right: axisModel.get('right'),\r\n      bottom: axisModel.get('bottom'),\r\n      width: axisModel.get('width'),\r\n      height: axisModel.get('height')\r\n    }, {\r\n      width: api.getWidth(),\r\n      height: api.getHeight()\r\n    });\r\n\r\n    this._adjustAxis();\r\n  };\r\n\r\n  Single.prototype.getRect = function () {\r\n    return this._rect;\r\n  };\r\n\r\n  Single.prototype._adjustAxis = function () {\r\n    var rect = this._rect;\r\n    var axis = this._axis;\r\n    var isHorizontal = axis.isHorizontal();\r\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\r\n    var idx = axis.reverse ? 1 : 0;\r\n    axis.setExtent(extent[idx], extent[1 - idx]);\r\n\r\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\r\n  };\r\n\r\n  Single.prototype._updateAxisTransform = function (axis, coordBase) {\r\n    var axisExtent = axis.getExtent();\r\n    var extentSum = axisExtent[0] + axisExtent[1];\r\n    var isHorizontal = axis.isHorizontal();\r\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\r\n      return coord + coordBase;\r\n    } : function (coord) {\r\n      return extentSum - coord + coordBase;\r\n    };\r\n    axis.toLocalCoord = isHorizontal ? function (coord) {\r\n      return coord - coordBase;\r\n    } : function (coord) {\r\n      return extentSum - coord + coordBase;\r\n    };\r\n  };\r\n  /**\r\n   * Get axis.\r\n   */\r\n\r\n\r\n  Single.prototype.getAxis = function () {\r\n    return this._axis;\r\n  };\r\n  /**\r\n   * Get axis, add it just for draw tooltip.\r\n   */\r\n\r\n\r\n  Single.prototype.getBaseAxis = function () {\r\n    return this._axis;\r\n  };\r\n\r\n  Single.prototype.getAxes = function () {\r\n    return [this._axis];\r\n  };\r\n\r\n  Single.prototype.getTooltipAxes = function () {\r\n    return {\r\n      baseAxes: [this.getAxis()],\r\n      // Empty otherAxes\r\n      otherAxes: []\r\n    };\r\n  };\r\n  /**\r\n   * If contain point.\r\n   */\r\n\r\n\r\n  Single.prototype.containPoint = function (point) {\r\n    var rect = this.getRect();\r\n    var axis = this.getAxis();\r\n    var orient = axis.orient;\r\n\r\n    if (orient === 'horizontal') {\r\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\r\n    } else {\r\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\r\n    }\r\n  };\r\n\r\n  Single.prototype.pointToData = function (point) {\r\n    var axis = this.getAxis();\r\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\r\n  };\r\n  /**\r\n   * Convert the series data to concrete point.\r\n   * Can be [val] | val\r\n   */\r\n\r\n\r\n  Single.prototype.dataToPoint = function (val) {\r\n    var axis = this.getAxis();\r\n    var rect = this.getRect();\r\n    var pt = [];\r\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\r\n\r\n    if (val instanceof Array) {\r\n      val = val[0];\r\n    }\r\n\r\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\r\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\r\n    return pt;\r\n  };\r\n\r\n  Single.prototype.convertToPixel = function (ecModel, finder, value) {\r\n    var coordSys = getCoordSys(finder);\r\n    return coordSys === this ? this.dataToPoint(value) : null;\r\n  };\r\n\r\n  Single.prototype.convertFromPixel = function (ecModel, finder, pixel) {\r\n    var coordSys = getCoordSys(finder);\r\n    return coordSys === this ? this.pointToData(pixel) : null;\r\n  };\r\n\r\n  return Single;\r\n}();\r\n\r\nfunction getCoordSys(finder) {\r\n  var seriesModel = finder.seriesModel;\r\n  var singleModel = finder.singleAxisModel;\r\n  return singleModel && singleModel.coordinateSystem || seriesModel && seriesModel.coordinateSystem;\r\n}\r\n\r\nexport default Single;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * Single coordinate system creator.\r\n */\r\nimport Single, { singleDimensions } from './Single';\r\nimport { SINGLE_REFERRING } from '../../util/model';\r\n/**\r\n * Create single coordinate system and inject it into seriesModel.\r\n */\r\n\r\nfunction create(ecModel, api) {\r\n  var singles = [];\r\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\r\n    var single = new Single(axisModel, ecModel, api);\r\n    single.name = 'single_' + idx;\r\n    single.resize(axisModel, api);\r\n    axisModel.coordinateSystem = single;\r\n    singles.push(single);\r\n  });\r\n  ecModel.eachSeries(function (seriesModel) {\r\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\r\n      var singleAxisModel = seriesModel.getReferringComponents('singleAxis', SINGLE_REFERRING).models[0];\r\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\r\n    }\r\n  });\r\n  return singles;\r\n}\r\n\r\nvar singleCreator = {\r\n  create: create,\r\n  dimensions: singleDimensions\r\n};\r\nexport default singleCreator;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport BaseAxisPointer from './BaseAxisPointer';\r\nimport * as viewHelper from './viewHelper';\r\nimport * as singleAxisHelper from '../../coord/single/singleAxisHelper';\r\nvar XY = ['x', 'y'];\r\nvar WH = ['width', 'height'];\r\n\r\nvar SingleAxisPointer =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(SingleAxisPointer, _super);\r\n\r\n  function SingleAxisPointer() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  SingleAxisPointer.prototype.makeElOption = function (elOption, value, axisModel, axisPointerModel, api) {\r\n    var axis = axisModel.axis;\r\n    var coordSys = axis.coordinateSystem;\r\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\r\n    var pixelValue = coordSys.dataToPoint(value)[0];\r\n    var axisPointerType = axisPointerModel.get('type');\r\n\r\n    if (axisPointerType && axisPointerType !== 'none') {\r\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\r\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent);\r\n      pointerOption.style = elStyle;\r\n      elOption.graphicKey = pointerOption.type;\r\n      elOption.pointer = pointerOption;\r\n    }\r\n\r\n    var layoutInfo = singleAxisHelper.layout(axisModel);\r\n    viewHelper.buildCartesianSingleLabelElOption( // @ts-ignore\r\n    value, elOption, layoutInfo, axisModel, axisPointerModel, api);\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  SingleAxisPointer.prototype.getHandleTransform = function (value, axisModel, axisPointerModel) {\r\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\r\n      labelInside: false\r\n    }); // @ts-ignore\r\n\r\n    layoutInfo.labelMargin = axisPointerModel.get(['handle', 'margin']);\r\n    var position = viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo);\r\n    return {\r\n      x: position[0],\r\n      y: position[1],\r\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\r\n    };\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  SingleAxisPointer.prototype.updateHandleTransform = function (transform, delta, axisModel, axisPointerModel) {\r\n    var axis = axisModel.axis;\r\n    var coordSys = axis.coordinateSystem;\r\n    var dimIndex = getPointDimIndex(axis);\r\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\r\n    var currPosition = [transform.x, transform.y];\r\n    currPosition[dimIndex] += delta[dimIndex];\r\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\r\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\r\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\r\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\r\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\r\n    cursorPoint[dimIndex] = currPosition[dimIndex];\r\n    return {\r\n      x: currPosition[0],\r\n      y: currPosition[1],\r\n      rotation: transform.rotation,\r\n      cursorPoint: cursorPoint,\r\n      tooltipOption: {\r\n        verticalAlign: 'middle'\r\n      }\r\n    };\r\n  };\r\n\r\n  return SingleAxisPointer;\r\n}(BaseAxisPointer);\r\n\r\nvar pointerShapeBuilder = {\r\n  line: function (axis, pixelValue, otherExtent) {\r\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\r\n    return {\r\n      type: 'Line',\r\n      subPixelOptimize: true,\r\n      shape: targetShape\r\n    };\r\n  },\r\n  shadow: function (axis, pixelValue, otherExtent) {\r\n    var bandWidth = axis.getBandWidth();\r\n    var span = otherExtent[1] - otherExtent[0];\r\n    return {\r\n      type: 'Rect',\r\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\r\n    };\r\n  }\r\n};\r\n\r\nfunction getPointDimIndex(axis) {\r\n  return axis.isHorizontal() ? 0 : 1;\r\n}\r\n\r\nfunction getGlobalExtent(coordSys, dimIndex) {\r\n  var rect = coordSys.getRect();\r\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\r\n}\r\n\r\nexport default SingleAxisPointer;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport { use } from '../../extension';\r\nimport ComponentView from '../../view/Component';\r\nimport SingleAxisView from '../axis/SingleAxisView';\r\nimport axisModelCreator from '../../coord/axisModelCreator';\r\nimport SingleAxisModel from '../../coord/single/AxisModel';\r\nimport singleCreator from '../../coord/single/singleCreator';\r\nimport { install as installAxisPointer } from '../axisPointer/install';\r\nimport AxisView from '../axis/AxisView';\r\nimport SingleAxisPointer from '../axisPointer/SingleAxisPointer';\r\n\r\nvar SingleView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(SingleView, _super);\r\n\r\n  function SingleView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = SingleView.type;\r\n    return _this;\r\n  }\r\n\r\n  SingleView.type = 'single';\r\n  return SingleView;\r\n}(ComponentView);\r\n\r\nexport function install(registers) {\r\n  use(installAxisPointer);\r\n  AxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\r\n  registers.registerComponentView(SingleView); // Axis\r\n\r\n  registers.registerComponentView(SingleAxisView);\r\n  registers.registerComponentModel(SingleAxisModel);\r\n  axisModelCreator(registers, 'single', SingleAxisModel, SingleAxisModel.defaultOption);\r\n  registers.registerCoordinateSystem('single', singleCreator);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport ComponentModel from '../../model/Component';\r\nimport { getLayoutParams, sizeCalculable, mergeLayoutParam } from '../../util/layout';\r\n\r\nvar CalendarModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(CalendarModel, _super);\r\n\r\n  function CalendarModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = CalendarModel.type;\r\n    return _this;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  CalendarModel.prototype.init = function (option, parentModel, ecModel) {\r\n    var inputPositionParams = getLayoutParams(option);\r\n\r\n    _super.prototype.init.apply(this, arguments);\r\n\r\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  CalendarModel.prototype.mergeOption = function (option) {\r\n    _super.prototype.mergeOption.apply(this, arguments);\r\n\r\n    mergeAndNormalizeLayoutParams(this.option, option);\r\n  };\r\n\r\n  CalendarModel.prototype.getCellSize = function () {\r\n    // Has been normalized\r\n    return this.option.cellSize;\r\n  };\r\n\r\n  CalendarModel.type = 'calendar';\r\n  CalendarModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 2,\r\n    left: 80,\r\n    top: 60,\r\n    cellSize: 20,\r\n    // horizontal vertical\r\n    orient: 'horizontal',\r\n    // month separate line style\r\n    splitLine: {\r\n      show: true,\r\n      lineStyle: {\r\n        color: '#000',\r\n        width: 1,\r\n        type: 'solid'\r\n      }\r\n    },\r\n    // rect style  temporarily unused emphasis\r\n    itemStyle: {\r\n      color: '#fff',\r\n      borderWidth: 1,\r\n      borderColor: '#ccc'\r\n    },\r\n    // week text style\r\n    dayLabel: {\r\n      show: true,\r\n      firstDay: 0,\r\n      // start end\r\n      position: 'start',\r\n      margin: '50%',\r\n      color: '#000'\r\n    },\r\n    // month text style\r\n    monthLabel: {\r\n      show: true,\r\n      // start end\r\n      position: 'start',\r\n      margin: 5,\r\n      // center or left\r\n      align: 'center',\r\n      formatter: null,\r\n      color: '#000'\r\n    },\r\n    // year text style\r\n    yearLabel: {\r\n      show: true,\r\n      // top bottom left right\r\n      position: null,\r\n      margin: 30,\r\n      formatter: null,\r\n      color: '#ccc',\r\n      fontFamily: 'sans-serif',\r\n      fontWeight: 'bolder',\r\n      fontSize: 20\r\n    }\r\n  };\r\n  return CalendarModel;\r\n}(ComponentModel);\r\n\r\nfunction mergeAndNormalizeLayoutParams(target, raw) {\r\n  // Normalize cellSize\r\n  var cellSize = target.cellSize;\r\n  var cellSizeArr;\r\n\r\n  if (!zrUtil.isArray(cellSize)) {\r\n    cellSizeArr = target.cellSize = [cellSize, cellSize];\r\n  } else {\r\n    cellSizeArr = cellSize;\r\n  }\r\n\r\n  if (cellSizeArr.length === 1) {\r\n    cellSizeArr[1] = cellSizeArr[0];\r\n  }\r\n\r\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\r\n    // If user have set `width` or both `left` and `right`, cellSizeArr\r\n    // will be automatically set to 'auto', otherwise the default\r\n    // setting of cellSizeArr will make `width` setting not work.\r\n    if (sizeCalculable(raw, hvIdx)) {\r\n      cellSizeArr[hvIdx] = 'auto';\r\n    }\r\n\r\n    return cellSizeArr[hvIdx] != null && cellSizeArr[hvIdx] !== 'auto';\r\n  });\r\n  mergeLayoutParam(target, raw, {\r\n    type: 'box',\r\n    ignoreSize: ignoreSize\r\n  });\r\n}\r\n\r\nexport default CalendarModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport { isString, extend, map } from 'zrender/lib/core/util';\r\nimport * as graphic from '../../util/graphic';\r\nimport { createTextStyle } from '../../label/labelStyle';\r\nimport { formatTplSimple } from '../../util/format';\r\nimport { parsePercent } from '../../util/number';\r\nimport ComponentView from '../../view/Component';\r\nimport { getLocaleModel } from '../../core/locale';\r\n\r\nvar CalendarView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(CalendarView, _super);\r\n\r\n  function CalendarView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = CalendarView.type;\r\n    return _this;\r\n  }\r\n\r\n  CalendarView.prototype.render = function (calendarModel, ecModel, api) {\r\n    var group = this.group;\r\n    group.removeAll();\r\n    var coordSys = calendarModel.coordinateSystem; // range info\r\n\r\n    var rangeData = coordSys.getRangeInfo();\r\n    var orient = coordSys.getOrient(); // locale\r\n\r\n    var localeModel = ecModel.getLocaleModel();\r\n\r\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\r\n\r\n\r\n    this._renderLines(calendarModel, rangeData, orient, group);\r\n\r\n    this._renderYearText(calendarModel, rangeData, orient, group);\r\n\r\n    this._renderMonthText(calendarModel, localeModel, orient, group);\r\n\r\n    this._renderWeekText(calendarModel, localeModel, rangeData, orient, group);\r\n  }; // render day rect\r\n\r\n\r\n  CalendarView.prototype._renderDayRect = function (calendarModel, rangeData, group) {\r\n    var coordSys = calendarModel.coordinateSystem;\r\n    var itemRectStyleModel = calendarModel.getModel('itemStyle').getItemStyle();\r\n    var sw = coordSys.getCellWidth();\r\n    var sh = coordSys.getCellHeight();\r\n\r\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\r\n      var point = coordSys.dataToRect([i], false).tl; // every rect\r\n\r\n      var rect = new graphic.Rect({\r\n        shape: {\r\n          x: point[0],\r\n          y: point[1],\r\n          width: sw,\r\n          height: sh\r\n        },\r\n        cursor: 'default',\r\n        style: itemRectStyleModel\r\n      });\r\n      group.add(rect);\r\n    }\r\n  }; // render separate line\r\n\r\n\r\n  CalendarView.prototype._renderLines = function (calendarModel, rangeData, orient, group) {\r\n    var self = this;\r\n    var coordSys = calendarModel.coordinateSystem;\r\n    var lineStyleModel = calendarModel.getModel(['splitLine', 'lineStyle']).getLineStyle();\r\n    var show = calendarModel.get(['splitLine', 'show']);\r\n    var lineWidth = lineStyleModel.lineWidth;\r\n    this._tlpoints = [];\r\n    this._blpoints = [];\r\n    this._firstDayOfMonth = [];\r\n    this._firstDayPoints = [];\r\n    var firstDay = rangeData.start;\r\n\r\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\r\n      addPoints(firstDay.formatedDate);\r\n\r\n      if (i === 0) {\r\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\r\n      }\r\n\r\n      var date = firstDay.date;\r\n      date.setMonth(date.getMonth() + 1);\r\n      firstDay = coordSys.getDateInfo(date);\r\n    }\r\n\r\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\r\n\r\n    function addPoints(date) {\r\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\r\n\r\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\r\n\r\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\r\n\r\n      self._tlpoints.push(points[0]);\r\n\r\n      self._blpoints.push(points[points.length - 1]);\r\n\r\n      show && self._drawSplitline(points, lineStyleModel, group);\r\n    } // render top/left line\r\n\r\n\r\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\r\n\r\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\r\n  }; // get points at both ends\r\n\r\n\r\n  CalendarView.prototype._getEdgesPoints = function (points, lineWidth, orient) {\r\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\r\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\r\n\r\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\r\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\r\n    return rs;\r\n  }; // render split line\r\n\r\n\r\n  CalendarView.prototype._drawSplitline = function (points, lineStyle, group) {\r\n    var poyline = new graphic.Polyline({\r\n      z2: 20,\r\n      shape: {\r\n        points: points\r\n      },\r\n      style: lineStyle\r\n    });\r\n    group.add(poyline);\r\n  }; // render month line of one week points\r\n\r\n\r\n  CalendarView.prototype._getLinePointsOfOneWeek = function (calendarModel, date, orient) {\r\n    var coordSys = calendarModel.coordinateSystem;\r\n    var parsedDate = coordSys.getDateInfo(date);\r\n    var points = [];\r\n\r\n    for (var i = 0; i < 7; i++) {\r\n      var tmpD = coordSys.getNextNDay(parsedDate.time, i);\r\n      var point = coordSys.dataToRect([tmpD.time], false);\r\n      points[2 * tmpD.day] = point.tl;\r\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\r\n    }\r\n\r\n    return points;\r\n  };\r\n\r\n  CalendarView.prototype._formatterLabel = function (formatter, params) {\r\n    if (typeof formatter === 'string' && formatter) {\r\n      return formatTplSimple(formatter, params);\r\n    }\r\n\r\n    if (typeof formatter === 'function') {\r\n      return formatter(params);\r\n    }\r\n\r\n    return params.nameMap;\r\n  };\r\n\r\n  CalendarView.prototype._yearTextPositionControl = function (textEl, point, orient, position, margin) {\r\n    var x = point[0];\r\n    var y = point[1];\r\n    var aligns = ['center', 'bottom'];\r\n\r\n    if (position === 'bottom') {\r\n      y += margin;\r\n      aligns = ['center', 'top'];\r\n    } else if (position === 'left') {\r\n      x -= margin;\r\n    } else if (position === 'right') {\r\n      x += margin;\r\n      aligns = ['center', 'top'];\r\n    } else {\r\n      // top\r\n      y -= margin;\r\n    }\r\n\r\n    var rotate = 0;\r\n\r\n    if (position === 'left' || position === 'right') {\r\n      rotate = Math.PI / 2;\r\n    }\r\n\r\n    return {\r\n      rotation: rotate,\r\n      x: x,\r\n      y: y,\r\n      style: {\r\n        align: aligns[0],\r\n        verticalAlign: aligns[1]\r\n      }\r\n    };\r\n  }; // render year\r\n\r\n\r\n  CalendarView.prototype._renderYearText = function (calendarModel, rangeData, orient, group) {\r\n    var yearLabel = calendarModel.getModel('yearLabel');\r\n\r\n    if (!yearLabel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var margin = yearLabel.get('margin');\r\n    var pos = yearLabel.get('position');\r\n\r\n    if (!pos) {\r\n      pos = orient !== 'horizontal' ? 'top' : 'left';\r\n    }\r\n\r\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\r\n    var xc = (points[0][0] + points[1][0]) / 2;\r\n    var yc = (points[0][1] + points[1][1]) / 2;\r\n    var idx = orient === 'horizontal' ? 0 : 1;\r\n    var posPoints = {\r\n      top: [xc, points[idx][1]],\r\n      bottom: [xc, points[1 - idx][1]],\r\n      left: [points[1 - idx][0], yc],\r\n      right: [points[idx][0], yc]\r\n    };\r\n    var name = rangeData.start.y;\r\n\r\n    if (+rangeData.end.y > +rangeData.start.y) {\r\n      name = name + '-' + rangeData.end.y;\r\n    }\r\n\r\n    var formatter = yearLabel.get('formatter');\r\n    var params = {\r\n      start: rangeData.start.y,\r\n      end: rangeData.end.y,\r\n      nameMap: name\r\n    };\r\n\r\n    var content = this._formatterLabel(formatter, params);\r\n\r\n    var yearText = new graphic.Text({\r\n      z2: 30,\r\n      style: createTextStyle(yearLabel, {\r\n        text: content\r\n      })\r\n    });\r\n    yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\r\n    group.add(yearText);\r\n  };\r\n\r\n  CalendarView.prototype._monthTextPositionControl = function (point, isCenter, orient, position, margin) {\r\n    var align = 'left';\r\n    var vAlign = 'top';\r\n    var x = point[0];\r\n    var y = point[1];\r\n\r\n    if (orient === 'horizontal') {\r\n      y = y + margin;\r\n\r\n      if (isCenter) {\r\n        align = 'center';\r\n      }\r\n\r\n      if (position === 'start') {\r\n        vAlign = 'bottom';\r\n      }\r\n    } else {\r\n      x = x + margin;\r\n\r\n      if (isCenter) {\r\n        vAlign = 'middle';\r\n      }\r\n\r\n      if (position === 'start') {\r\n        align = 'right';\r\n      }\r\n    }\r\n\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      align: align,\r\n      verticalAlign: vAlign\r\n    };\r\n  }; // render month and year text\r\n\r\n\r\n  CalendarView.prototype._renderMonthText = function (calendarModel, localeModel, orient, group) {\r\n    var monthLabel = calendarModel.getModel('monthLabel');\r\n\r\n    if (!monthLabel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var nameMap = monthLabel.get('nameMap');\r\n    var margin = monthLabel.get('margin');\r\n    var pos = monthLabel.get('position');\r\n    var align = monthLabel.get('align');\r\n    var termPoints = [this._tlpoints, this._blpoints];\r\n\r\n    if (!nameMap || isString(nameMap)) {\r\n      if (nameMap) {\r\n        // case-sensitive\r\n        localeModel = getLocaleModel(nameMap) || localeModel;\r\n      } // PENDING\r\n      // for ZH locale, original form is `\u4E00\u6708` but current form is `1\u6708`\r\n\r\n\r\n      nameMap = localeModel.get(['time', 'monthAbbr']) || [];\r\n    }\r\n\r\n    var idx = pos === 'start' ? 0 : 1;\r\n    var axis = orient === 'horizontal' ? 0 : 1;\r\n    margin = pos === 'start' ? -margin : margin;\r\n    var isCenter = align === 'center';\r\n\r\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\r\n      var tmp = termPoints[idx][i].slice();\r\n      var firstDay = this._firstDayOfMonth[i];\r\n\r\n      if (isCenter) {\r\n        var firstDayPoints = this._firstDayPoints[i];\r\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\r\n      }\r\n\r\n      var formatter = monthLabel.get('formatter');\r\n      var name_1 = nameMap[+firstDay.m - 1];\r\n      var params = {\r\n        yyyy: firstDay.y,\r\n        yy: (firstDay.y + '').slice(2),\r\n        MM: firstDay.m,\r\n        M: +firstDay.m,\r\n        nameMap: name_1\r\n      };\r\n\r\n      var content = this._formatterLabel(formatter, params);\r\n\r\n      var monthText = new graphic.Text({\r\n        z2: 30,\r\n        style: extend(createTextStyle(monthLabel, {\r\n          text: content\r\n        }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin))\r\n      });\r\n      group.add(monthText);\r\n    }\r\n  };\r\n\r\n  CalendarView.prototype._weekTextPositionControl = function (point, orient, position, margin, cellSize) {\r\n    var align = 'center';\r\n    var vAlign = 'middle';\r\n    var x = point[0];\r\n    var y = point[1];\r\n    var isStart = position === 'start';\r\n\r\n    if (orient === 'horizontal') {\r\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\r\n      align = isStart ? 'right' : 'left';\r\n    } else {\r\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\r\n      vAlign = isStart ? 'bottom' : 'top';\r\n    }\r\n\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      align: align,\r\n      verticalAlign: vAlign\r\n    };\r\n  }; // render weeks\r\n\r\n\r\n  CalendarView.prototype._renderWeekText = function (calendarModel, localeModel, rangeData, orient, group) {\r\n    var dayLabel = calendarModel.getModel('dayLabel');\r\n\r\n    if (!dayLabel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var coordSys = calendarModel.coordinateSystem;\r\n    var pos = dayLabel.get('position');\r\n    var nameMap = dayLabel.get('nameMap');\r\n    var margin = dayLabel.get('margin');\r\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\r\n\r\n    if (!nameMap || isString(nameMap)) {\r\n      if (nameMap) {\r\n        // case-sensitive\r\n        localeModel = getLocaleModel(nameMap) || localeModel;\r\n      } // Use the first letter of `dayOfWeekAbbr` if `dayOfWeekShort` doesn't exist in the locale file\r\n\r\n\r\n      var dayOfWeekShort = localeModel.get(['time', 'dayOfWeekShort']);\r\n      nameMap = dayOfWeekShort || map(localeModel.get(['time', 'dayOfWeekAbbr']), function (val) {\r\n        return val[0];\r\n      });\r\n    }\r\n\r\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\r\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\r\n    margin = parsePercent(margin, Math.min(cellSize[1], cellSize[0]));\r\n\r\n    if (pos === 'start') {\r\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\r\n      margin = -margin;\r\n    }\r\n\r\n    for (var i = 0; i < 7; i++) {\r\n      var tmpD = coordSys.getNextNDay(start, i);\r\n      var point = coordSys.dataToRect([tmpD.time], false).center;\r\n      var day = i;\r\n      day = Math.abs((i + firstDayOfWeek) % 7);\r\n      var weekText = new graphic.Text({\r\n        z2: 30,\r\n        style: extend(createTextStyle(dayLabel, {\r\n          text: nameMap[day]\r\n        }), this._weekTextPositionControl(point, orient, pos, margin, cellSize))\r\n      });\r\n      group.add(weekText);\r\n    }\r\n  };\r\n\r\n  CalendarView.type = 'calendar';\r\n  return CalendarView;\r\n}(ComponentView);\r\n\r\nexport default CalendarView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as layout from '../../util/layout';\r\nimport * as numberUtil from '../../util/number'; // (24*60*60*1000)\r\n\r\nvar PROXIMATE_ONE_DAY = 86400000;\r\n\r\nvar Calendar =\r\n/** @class */\r\nfunction () {\r\n  function Calendar(calendarModel, ecModel, api) {\r\n    this.type = 'calendar';\r\n    this.dimensions = Calendar.dimensions; // Required in createListFromData\r\n\r\n    this.getDimensionsInfo = Calendar.getDimensionsInfo;\r\n    this._model = calendarModel;\r\n  }\r\n\r\n  Calendar.getDimensionsInfo = function () {\r\n    return [{\r\n      name: 'time',\r\n      type: 'time'\r\n    }, 'value'];\r\n  };\r\n\r\n  Calendar.prototype.getRangeInfo = function () {\r\n    return this._rangeInfo;\r\n  };\r\n\r\n  Calendar.prototype.getModel = function () {\r\n    return this._model;\r\n  };\r\n\r\n  Calendar.prototype.getRect = function () {\r\n    return this._rect;\r\n  };\r\n\r\n  Calendar.prototype.getCellWidth = function () {\r\n    return this._sw;\r\n  };\r\n\r\n  Calendar.prototype.getCellHeight = function () {\r\n    return this._sh;\r\n  };\r\n\r\n  Calendar.prototype.getOrient = function () {\r\n    return this._orient;\r\n  };\r\n  /**\r\n   * getFirstDayOfWeek\r\n   *\r\n   * @example\r\n   *     0 : start at Sunday\r\n   *     1 : start at Monday\r\n   *\r\n   * @return {number}\r\n   */\r\n\r\n\r\n  Calendar.prototype.getFirstDayOfWeek = function () {\r\n    return this._firstDayOfWeek;\r\n  };\r\n  /**\r\n   * get date info\r\n   * }\r\n   */\r\n\r\n\r\n  Calendar.prototype.getDateInfo = function (date) {\r\n    date = numberUtil.parseDate(date);\r\n    var y = date.getFullYear();\r\n    var m = date.getMonth() + 1;\r\n    var mStr = m < 10 ? '0' + m : '' + m;\r\n    var d = date.getDate();\r\n    var dStr = d < 10 ? '0' + d : '' + d;\r\n    var day = date.getDay();\r\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\r\n    return {\r\n      y: y + '',\r\n      m: mStr,\r\n      d: dStr,\r\n      day: day,\r\n      time: date.getTime(),\r\n      formatedDate: y + '-' + mStr + '-' + dStr,\r\n      date: date\r\n    };\r\n  };\r\n\r\n  Calendar.prototype.getNextNDay = function (date, n) {\r\n    n = n || 0;\r\n\r\n    if (n === 0) {\r\n      return this.getDateInfo(date);\r\n    }\r\n\r\n    date = new Date(this.getDateInfo(date).time);\r\n    date.setDate(date.getDate() + n);\r\n    return this.getDateInfo(date);\r\n  };\r\n\r\n  Calendar.prototype.update = function (ecModel, api) {\r\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\r\n    this._orient = this._model.get('orient');\r\n    this._lineWidth = this._model.getModel('itemStyle').getItemStyle().lineWidth || 0;\r\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\r\n    var weeks = this._rangeInfo.weeks || 1;\r\n    var whNames = ['width', 'height'];\r\n\r\n    var cellSize = this._model.getCellSize().slice();\r\n\r\n    var layoutParams = this._model.getBoxLayoutParams();\r\n\r\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\r\n    zrUtil.each([0, 1], function (idx) {\r\n      if (cellSizeSpecified(cellSize, idx)) {\r\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\r\n      }\r\n    });\r\n    var whGlobal = {\r\n      width: api.getWidth(),\r\n      height: api.getHeight()\r\n    };\r\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\r\n    zrUtil.each([0, 1], function (idx) {\r\n      if (!cellSizeSpecified(cellSize, idx)) {\r\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\r\n      }\r\n    });\r\n\r\n    function cellSizeSpecified(cellSize, idx) {\r\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\r\n    } // Has been calculated out number.\r\n\r\n\r\n    this._sw = cellSize[0];\r\n    this._sh = cellSize[1];\r\n  };\r\n  /**\r\n   * Convert a time data(time, value) item to (x, y) point.\r\n   */\r\n  // TODO Clamp of calendar is not same with cartesian coordinate systems.\r\n  // It will return NaN if data exceeds.\r\n\r\n\r\n  Calendar.prototype.dataToPoint = function (data, clamp) {\r\n    zrUtil.isArray(data) && (data = data[0]);\r\n    clamp == null && (clamp = true);\r\n    var dayInfo = this.getDateInfo(data);\r\n    var range = this._rangeInfo;\r\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\r\n\r\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time < range.end.time + PROXIMATE_ONE_DAY)) {\r\n      return [NaN, NaN];\r\n    }\r\n\r\n    var week = dayInfo.day;\r\n\r\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\r\n\r\n    if (this._orient === 'vertical') {\r\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\r\n    }\r\n\r\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\r\n  };\r\n  /**\r\n   * Convert a (x, y) point to time data\r\n   */\r\n\r\n\r\n  Calendar.prototype.pointToData = function (point) {\r\n    var date = this.pointToDate(point);\r\n    return date && date.time;\r\n  };\r\n  /**\r\n   * Convert a time date item to (x, y) four point.\r\n   */\r\n\r\n\r\n  Calendar.prototype.dataToRect = function (data, clamp) {\r\n    var point = this.dataToPoint(data, clamp);\r\n    return {\r\n      contentShape: {\r\n        x: point[0] - (this._sw - this._lineWidth) / 2,\r\n        y: point[1] - (this._sh - this._lineWidth) / 2,\r\n        width: this._sw - this._lineWidth,\r\n        height: this._sh - this._lineWidth\r\n      },\r\n      center: point,\r\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\r\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\r\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\r\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\r\n    };\r\n  };\r\n  /**\r\n   * Convert a (x, y) point to time date\r\n   *\r\n   * @param  {Array} point point\r\n   * @return {Object}       date\r\n   */\r\n\r\n\r\n  Calendar.prototype.pointToDate = function (point) {\r\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\r\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\r\n    var range = this._rangeInfo.range;\r\n\r\n    if (this._orient === 'vertical') {\r\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\r\n    }\r\n\r\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\r\n  };\r\n\r\n  Calendar.prototype.convertToPixel = function (ecModel, finder, value) {\r\n    var coordSys = getCoordSys(finder);\r\n    return coordSys === this ? coordSys.dataToPoint(value) : null;\r\n  };\r\n\r\n  Calendar.prototype.convertFromPixel = function (ecModel, finder, pixel) {\r\n    var coordSys = getCoordSys(finder);\r\n    return coordSys === this ? coordSys.pointToData(pixel) : null;\r\n  };\r\n\r\n  Calendar.prototype.containPoint = function (point) {\r\n    console.warn('Not implemented.');\r\n    return false;\r\n  };\r\n  /**\r\n   * initRange\r\n   * Normalize to an [start, end] array\r\n   */\r\n\r\n\r\n  Calendar.prototype._initRangeOption = function () {\r\n    var range = this._model.get('range');\r\n\r\n    var normalizedRange; // Convert [1990] to 1990\r\n\r\n    if (zrUtil.isArray(range) && range.length === 1) {\r\n      range = range[0];\r\n    }\r\n\r\n    if (!zrUtil.isArray(range)) {\r\n      var rangeStr = range.toString(); // One year.\r\n\r\n      if (/^\\d{4}$/.test(rangeStr)) {\r\n        normalizedRange = [rangeStr + '-01-01', rangeStr + '-12-31'];\r\n      } // One month\r\n\r\n\r\n      if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rangeStr)) {\r\n        var start = this.getDateInfo(rangeStr);\r\n        var firstDay = start.date;\r\n        firstDay.setMonth(firstDay.getMonth() + 1);\r\n        var end = this.getNextNDay(firstDay, -1);\r\n        normalizedRange = [start.formatedDate, end.formatedDate];\r\n      } // One day\r\n\r\n\r\n      if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rangeStr)) {\r\n        normalizedRange = [rangeStr, rangeStr];\r\n      }\r\n    } else {\r\n      normalizedRange = range;\r\n    }\r\n\r\n    if (!normalizedRange) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        zrUtil.logError('Invalid date range.');\r\n      } // Not handling it.\r\n\r\n\r\n      return range;\r\n    }\r\n\r\n    var tmp = this._getRangeInfo(normalizedRange);\r\n\r\n    if (tmp.start.time > tmp.end.time) {\r\n      normalizedRange.reverse();\r\n    }\r\n\r\n    return normalizedRange;\r\n  };\r\n  /**\r\n   * range info\r\n   *\r\n   * @private\r\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\r\n   *  If range[0] > range[1], they will not be reversed.\r\n   * @return {Object}       obj\r\n   */\r\n\r\n\r\n  Calendar.prototype._getRangeInfo = function (range) {\r\n    var parsedRange = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\r\n    var reversed;\r\n\r\n    if (parsedRange[0].time > parsedRange[1].time) {\r\n      reversed = true;\r\n      parsedRange.reverse();\r\n    }\r\n\r\n    var allDay = Math.floor(parsedRange[1].time / PROXIMATE_ONE_DAY) - Math.floor(parsedRange[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case1 (#11677 #10430):\r\n    // Set the system timezone as \"UK\", set the range to `['2016-07-01', '2016-12-31']`\r\n    // Consider case2:\r\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\r\n    // ```\r\n    // let first = new Date(1478412000000 - 3600 * 1000 * 2.5);\r\n    // let second = new Date(1478412000000);\r\n    // let allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\r\n    // ```\r\n    // will get wrong result because of DST. So we should fix it.\r\n\r\n    var date = new Date(parsedRange[0].time);\r\n    var startDateNum = date.getDate();\r\n    var endDateNum = parsedRange[1].date.getDate();\r\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\r\n\r\n    var dateNum = date.getDate();\r\n\r\n    if (dateNum !== endDateNum) {\r\n      var sign = date.getTime() - parsedRange[1].time > 0 ? 1 : -1;\r\n\r\n      while ((dateNum = date.getDate()) !== endDateNum && (date.getTime() - parsedRange[1].time) * sign > 0) {\r\n        allDay -= sign;\r\n        date.setDate(dateNum - sign);\r\n      }\r\n    }\r\n\r\n    var weeks = Math.floor((allDay + parsedRange[0].day + 6) / 7);\r\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\r\n    reversed && parsedRange.reverse();\r\n    return {\r\n      range: [parsedRange[0].formatedDate, parsedRange[1].formatedDate],\r\n      start: parsedRange[0],\r\n      end: parsedRange[1],\r\n      allDay: allDay,\r\n      weeks: weeks,\r\n      // From 0.\r\n      nthWeek: nthWeek,\r\n      fweek: parsedRange[0].day,\r\n      lweek: parsedRange[1].day\r\n    };\r\n  };\r\n  /**\r\n   * get date by nthWeeks and week day in range\r\n   *\r\n   * @private\r\n   * @param  {number} nthWeek the week\r\n   * @param  {number} day   the week day\r\n   * @param  {Array} range [d1, d2]\r\n   * @return {Object}\r\n   */\r\n\r\n\r\n  Calendar.prototype._getDateByWeeksAndDay = function (nthWeek, day, range) {\r\n    var rangeInfo = this._getRangeInfo(range);\r\n\r\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\r\n      return null;\r\n    }\r\n\r\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\r\n    var date = new Date(rangeInfo.start.time);\r\n    date.setDate(+rangeInfo.start.d + nthDay);\r\n    return this.getDateInfo(date);\r\n  };\r\n\r\n  Calendar.create = function (ecModel, api) {\r\n    var calendarList = [];\r\n    ecModel.eachComponent('calendar', function (calendarModel) {\r\n      var calendar = new Calendar(calendarModel, ecModel, api);\r\n      calendarList.push(calendar);\r\n      calendarModel.coordinateSystem = calendar;\r\n    });\r\n    ecModel.eachSeries(function (calendarSeries) {\r\n      if (calendarSeries.get('coordinateSystem') === 'calendar') {\r\n        // Inject coordinate system\r\n        calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\r\n      }\r\n    });\r\n    return calendarList;\r\n  };\r\n\r\n  Calendar.dimensions = ['time', 'value'];\r\n  return Calendar;\r\n}();\r\n\r\nfunction getCoordSys(finder) {\r\n  var calendarModel = finder.calendarModel;\r\n  var seriesModel = finder.seriesModel;\r\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\r\n  return coordSys;\r\n}\r\n\r\nexport default Calendar;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport CalendarModel from '../../coord/calendar/CalendarModel';\r\nimport CalendarView from './CalendarView';\r\nimport Calendar from '../../coord/calendar/Calendar';\r\nexport function install(registers) {\r\n  registers.registerComponentModel(CalendarModel);\r\n  registers.registerComponentView(CalendarView);\r\n  registers.registerCoordinateSystem('calendar', Calendar);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as modelUtil from '../../util/model';\r\nimport * as graphicUtil from '../../util/graphic';\r\nimport * as layoutUtil from '../../util/layout';\r\nimport { parsePercent } from '../../util/number';\r\nimport ComponentModel from '../../model/Component';\r\nimport ComponentView from '../../view/Component';\r\nimport { getECData } from '../../util/innerStore';\r\nimport { isEC4CompatibleStyle, convertFromEC4CompatibleStyle } from '../../util/styleCompat';\r\nvar TRANSFORM_PROPS = {\r\n  x: 1,\r\n  y: 1,\r\n  scaleX: 1,\r\n  scaleY: 1,\r\n  originX: 1,\r\n  originY: 1,\r\n  rotation: 1\r\n};\r\n;\r\nvar inner = modelUtil.makeInner();\r\nvar _nonShapeGraphicElements = {\r\n  // Reserved but not supported in graphic component.\r\n  path: null,\r\n  compoundPath: null,\r\n  // Supported in graphic component.\r\n  group: graphicUtil.Group,\r\n  image: graphicUtil.Image,\r\n  text: graphicUtil.Text\r\n}; // ------------------------\r\n// Preprocessor\r\n// ------------------------\r\n\r\nvar preprocessor = function (option) {\r\n  var graphicOption = option.graphic; // Convert\r\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\r\n  // or\r\n  // {graphic: {left: 10, type: 'circle'}}\r\n  // to\r\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\r\n\r\n  if (zrUtil.isArray(graphicOption)) {\r\n    if (!graphicOption[0] || !graphicOption[0].elements) {\r\n      option.graphic = [{\r\n        elements: graphicOption\r\n      }];\r\n    } else {\r\n      // Only one graphic instance can be instantiated. (We dont\r\n      // want that too many views are created in echarts._viewMap)\r\n      option.graphic = [option.graphic[0]];\r\n    }\r\n  } else if (graphicOption && !graphicOption.elements) {\r\n    option.graphic = [{\r\n      elements: [graphicOption]\r\n    }];\r\n  }\r\n};\r\n\r\n;\r\n\r\nvar GraphicComponentModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(GraphicComponentModel, _super);\r\n\r\n  function GraphicComponentModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = GraphicComponentModel.type;\r\n    _this.preventAutoZ = true;\r\n    return _this;\r\n  }\r\n\r\n  GraphicComponentModel.prototype.mergeOption = function (option, ecModel) {\r\n    // Prevent default merge to elements\r\n    var elements = this.option.elements;\r\n    this.option.elements = null;\r\n\r\n    _super.prototype.mergeOption.call(this, option, ecModel);\r\n\r\n    this.option.elements = elements;\r\n  };\r\n\r\n  GraphicComponentModel.prototype.optionUpdated = function (newOption, isInit) {\r\n    var thisOption = this.option;\r\n    var newList = (isInit ? thisOption : newOption).elements;\r\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\r\n    var flattenedList = [];\r\n\r\n    this._flatten(newList, flattenedList, null);\r\n\r\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList, 'normalMerge'); // Clear elOptionsToUpdate\r\n\r\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\r\n    zrUtil.each(mappingResult, function (resultItem, index) {\r\n      var newElOption = resultItem.newOption;\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        zrUtil.assert(zrUtil.isObject(newElOption) || resultItem.existing, 'Empty graphic option definition');\r\n      }\r\n\r\n      if (!newElOption) {\r\n        return;\r\n      }\r\n\r\n      elOptionsToUpdate.push(newElOption);\r\n      setKeyInfoToNewElOption(resultItem, newElOption);\r\n      mergeNewElOptionToExist(existList, index, newElOption);\r\n      setLayoutInfoToExist(existList[index], newElOption);\r\n    }, this); // Clean\r\n\r\n    for (var i = existList.length - 1; i >= 0; i--) {\r\n      if (existList[i] == null) {\r\n        existList.splice(i, 1);\r\n      } else {\r\n        // $action should be volatile, otherwise option gotten from\r\n        // `getOption` will contain unexpected $action.\r\n        delete existList[i].$action;\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * Convert\r\n   * [{\r\n   *  type: 'group',\r\n   *  id: 'xx',\r\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\r\n   * }]\r\n   * to\r\n   * [\r\n   *  {type: 'group', id: 'xx'},\r\n   *  {type: 'circle', parentId: 'xx'},\r\n   *  {type: 'polygon', parentId: 'xx'}\r\n   * ]\r\n   */\r\n\r\n\r\n  GraphicComponentModel.prototype._flatten = function (optionList, result, parentOption) {\r\n    zrUtil.each(optionList, function (option) {\r\n      if (!option) {\r\n        return;\r\n      }\r\n\r\n      if (parentOption) {\r\n        option.parentOption = parentOption;\r\n      }\r\n\r\n      result.push(option);\r\n      var children = option.children;\r\n\r\n      if (option.type === 'group' && children) {\r\n        this._flatten(children, result, option);\r\n      } // Deleting for JSON output, and for not affecting group creation.\r\n\r\n\r\n      delete option.children;\r\n    }, this);\r\n  }; // FIXME\r\n  // Pass to view using payload? setOption has a payload?\r\n\r\n\r\n  GraphicComponentModel.prototype.useElOptionsToUpdate = function () {\r\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\r\n\r\n    this._elOptionsToUpdate = null;\r\n    return els;\r\n  };\r\n\r\n  GraphicComponentModel.type = 'graphic';\r\n  GraphicComponentModel.defaultOption = {\r\n    elements: [] // parentId: null\r\n\r\n  };\r\n  return GraphicComponentModel;\r\n}(ComponentModel); // ------------------------\r\n// View\r\n// ------------------------\r\n\r\n\r\nvar GraphicComponentView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(GraphicComponentView, _super);\r\n\r\n  function GraphicComponentView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = GraphicComponentView.type;\r\n    return _this;\r\n  }\r\n\r\n  GraphicComponentView.prototype.init = function () {\r\n    this._elMap = zrUtil.createHashMap();\r\n  };\r\n\r\n  GraphicComponentView.prototype.render = function (graphicModel, ecModel, api) {\r\n    // Having leveraged between use cases and algorithm complexity, a very\r\n    // simple layout mechanism is used:\r\n    // The size(width/height) can be determined by itself or its parent (not\r\n    // implemented yet), but can not by its children. (Top-down travel)\r\n    // The location(x/y) can be determined by the bounding rect of itself\r\n    // (can including its descendants or not) and the size of its parent.\r\n    // (Bottom-up travel)\r\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\r\n    // view will be reused.\r\n    if (graphicModel !== this._lastGraphicModel) {\r\n      this._clear();\r\n    }\r\n\r\n    this._lastGraphicModel = graphicModel;\r\n\r\n    this._updateElements(graphicModel);\r\n\r\n    this._relocate(graphicModel, api);\r\n  };\r\n  /**\r\n   * Update graphic elements.\r\n   */\r\n\r\n\r\n  GraphicComponentView.prototype._updateElements = function (graphicModel) {\r\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\r\n\r\n    if (!elOptionsToUpdate) {\r\n      return;\r\n    }\r\n\r\n    var elMap = this._elMap;\r\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\r\n\r\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\r\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\r\n      var elExisting = id != null ? elMap.get(id) : null;\r\n      var parentId = modelUtil.convertOptionIdName(elOption.parentId, null);\r\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\r\n      var elType = elOption.type;\r\n      var elOptionStyle = elOption.style;\r\n\r\n      if (elType === 'text' && elOptionStyle) {\r\n        // In top/bottom mode, textVerticalAlign should not be used, which cause\r\n        // inaccurately locating.\r\n        if (elOption.hv && elOption.hv[1]) {\r\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = elOptionStyle.verticalAlign = elOptionStyle.align = null;\r\n        }\r\n      }\r\n\r\n      var textContentOption = elOption.textContent;\r\n      var textConfig = elOption.textConfig;\r\n\r\n      if (elOptionStyle && isEC4CompatibleStyle(elOptionStyle, elType, !!textConfig, !!textContentOption)) {\r\n        var convertResult = convertFromEC4CompatibleStyle(elOptionStyle, elType, true);\r\n\r\n        if (!textConfig && convertResult.textConfig) {\r\n          textConfig = elOption.textConfig = convertResult.textConfig;\r\n        }\r\n\r\n        if (!textContentOption && convertResult.textContent) {\r\n          textContentOption = convertResult.textContent;\r\n        }\r\n      } // Remove unnecessary props to avoid potential problems.\r\n\r\n\r\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        elExisting && zrUtil.assert(targetElParent === elExisting.parent, 'Changing parent is not supported.');\r\n      }\r\n\r\n      var $action = elOption.$action || 'merge';\r\n\r\n      if ($action === 'merge') {\r\n        elExisting ? elExisting.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\r\n      } else if ($action === 'replace') {\r\n        removeEl(elExisting, elMap);\r\n        createEl(id, targetElParent, elOptionCleaned, elMap);\r\n      } else if ($action === 'remove') {\r\n        removeEl(elExisting, elMap);\r\n      }\r\n\r\n      var el = elMap.get(id);\r\n\r\n      if (el && textContentOption) {\r\n        if ($action === 'merge') {\r\n          var textContentExisting = el.getTextContent();\r\n          textContentExisting ? textContentExisting.attr(textContentOption) : el.setTextContent(new graphicUtil.Text(textContentOption));\r\n        } else if ($action === 'replace') {\r\n          el.setTextContent(new graphicUtil.Text(textContentOption));\r\n        }\r\n      }\r\n\r\n      if (el) {\r\n        var elInner = inner(el);\r\n        elInner.__ecGraphicWidthOption = elOption.width;\r\n        elInner.__ecGraphicHeightOption = elOption.height;\r\n        setEventData(el, graphicModel, elOption);\r\n        graphicUtil.setTooltipConfig({\r\n          el: el,\r\n          componentModel: graphicModel,\r\n          itemName: el.name,\r\n          itemTooltipOption: elOption.tooltip\r\n        });\r\n      }\r\n    });\r\n  };\r\n  /**\r\n   * Locate graphic elements.\r\n   */\r\n\r\n\r\n  GraphicComponentView.prototype._relocate = function (graphicModel, api) {\r\n    var elOptions = graphicModel.option.elements;\r\n    var rootGroup = this.group;\r\n    var elMap = this._elMap;\r\n    var apiWidth = api.getWidth();\r\n    var apiHeight = api.getHeight(); // Top-down to calculate percentage width/height of group\r\n\r\n    for (var i = 0; i < elOptions.length; i++) {\r\n      var elOption = elOptions[i];\r\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\r\n      var el = id != null ? elMap.get(id) : null;\r\n\r\n      if (!el || !el.isGroup) {\r\n        continue;\r\n      }\r\n\r\n      var parentEl = el.parent;\r\n      var isParentRoot = parentEl === rootGroup; // Like 'position:absolut' in css, default 0.\r\n\r\n      var elInner = inner(el);\r\n      var parentElInner = inner(parentEl);\r\n      elInner.__ecGraphicWidth = parsePercent(elInner.__ecGraphicWidthOption, isParentRoot ? apiWidth : parentElInner.__ecGraphicWidth) || 0;\r\n      elInner.__ecGraphicHeight = parsePercent(elInner.__ecGraphicHeightOption, isParentRoot ? apiHeight : parentElInner.__ecGraphicHeight) || 0;\r\n    } // Bottom-up tranvese all elements (consider ec resize) to locate elements.\r\n\r\n\r\n    for (var i = elOptions.length - 1; i >= 0; i--) {\r\n      var elOption = elOptions[i];\r\n      var id = modelUtil.convertOptionIdName(elOption.id, null);\r\n      var el = id != null ? elMap.get(id) : null;\r\n\r\n      if (!el) {\r\n        continue;\r\n      }\r\n\r\n      var parentEl = el.parent;\r\n      var parentElInner = inner(parentEl);\r\n      var containerInfo = parentEl === rootGroup ? {\r\n        width: apiWidth,\r\n        height: apiHeight\r\n      } : {\r\n        width: parentElInner.__ecGraphicWidth,\r\n        height: parentElInner.__ecGraphicHeight\r\n      }; // PENDING\r\n      // Currently, when `bounding: 'all'`, the union bounding rect of the group\r\n      // does not include the rect of [0, 0, group.width, group.height], which\r\n      // is probably weird for users. Should we make a break change for it?\r\n\r\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\r\n        hv: elOption.hv,\r\n        boundingMode: elOption.bounding\r\n      });\r\n    }\r\n  };\r\n  /**\r\n   * Clear all elements.\r\n   */\r\n\r\n\r\n  GraphicComponentView.prototype._clear = function () {\r\n    var elMap = this._elMap;\r\n    elMap.each(function (el) {\r\n      removeEl(el, elMap);\r\n    });\r\n    this._elMap = zrUtil.createHashMap();\r\n  };\r\n\r\n  GraphicComponentView.prototype.dispose = function () {\r\n    this._clear();\r\n  };\r\n\r\n  GraphicComponentView.type = 'graphic';\r\n  return GraphicComponentView;\r\n}(ComponentView);\r\n\r\nfunction createEl(id, targetElParent, elOption, elMap) {\r\n  var graphicType = elOption.type;\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    zrUtil.assert(graphicType, 'graphic type MUST be set');\r\n  }\r\n\r\n  var Clz = zrUtil.hasOwn(_nonShapeGraphicElements, graphicType) // Those graphic elements are not shapes. They should not be\r\n  // overwritten by users, so do them first.\r\n  ? _nonShapeGraphicElements[graphicType] : graphicUtil.getShapeClass(graphicType);\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    zrUtil.assert(Clz, 'graphic type can not be found');\r\n  }\r\n\r\n  var el = new Clz(elOption);\r\n  targetElParent.add(el);\r\n  elMap.set(id, el);\r\n  inner(el).__ecGraphicId = id;\r\n}\r\n\r\nfunction removeEl(elExisting, elMap) {\r\n  var existElParent = elExisting && elExisting.parent;\r\n\r\n  if (existElParent) {\r\n    elExisting.type === 'group' && elExisting.traverse(function (el) {\r\n      removeEl(el, elMap);\r\n    });\r\n    elMap.removeKey(inner(elExisting).__ecGraphicId);\r\n    existElParent.remove(elExisting);\r\n  }\r\n} // Remove unnecessary props to avoid potential problems.\r\n\r\n\r\nfunction getCleanedElOption(elOption) {\r\n  elOption = zrUtil.extend({}, elOption);\r\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding', 'textContent'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\r\n    delete elOption[name];\r\n  });\r\n  return elOption;\r\n}\r\n\r\nfunction isSetLoc(obj, props) {\r\n  var isSet;\r\n  zrUtil.each(props, function (prop) {\r\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\r\n  });\r\n  return isSet;\r\n}\r\n\r\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\r\n  var existElOption = resultItem.existing; // Set id and type after id assigned.\r\n\r\n  newElOption.id = resultItem.keyInfo.id;\r\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\r\n\r\n  if (newElOption.parentId == null) {\r\n    var newElParentOption = newElOption.parentOption;\r\n\r\n    if (newElParentOption) {\r\n      newElOption.parentId = newElParentOption.id;\r\n    } else if (existElOption) {\r\n      newElOption.parentId = existElOption.parentId;\r\n    }\r\n  } // Clear\r\n\r\n\r\n  newElOption.parentOption = null;\r\n}\r\n\r\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\r\n  // Update existing options, for `getOption` feature.\r\n  var newElOptCopy = zrUtil.extend({}, newElOption);\r\n  var existElOption = existList[index];\r\n  var $action = newElOption.$action || 'merge';\r\n\r\n  if ($action === 'merge') {\r\n    if (existElOption) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        var newType = newElOption.type;\r\n        zrUtil.assert(!newType || existElOption.type === newType, 'Please set $action: \"replace\" to change `type`');\r\n      } // We can ensure that newElOptCopy and existElOption are not\r\n      // the same object, so `merge` will not change newElOptCopy.\r\n\r\n\r\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\r\n\r\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\r\n        ignoreSize: true\r\n      }); // Will be used in render.\r\n\r\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\r\n    } else {\r\n      existList[index] = newElOptCopy;\r\n    }\r\n  } else if ($action === 'replace') {\r\n    existList[index] = newElOptCopy;\r\n  } else if ($action === 'remove') {\r\n    // null will be cleaned later.\r\n    existElOption && (existList[index] = null);\r\n  }\r\n}\r\n\r\nfunction setLayoutInfoToExist(existItem, newElOption) {\r\n  if (!existItem) {\r\n    return;\r\n  }\r\n\r\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\r\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\r\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\r\n\r\n  if (existItem.type === 'group') {\r\n    var existingGroupOpt = existItem;\r\n    var newGroupOpt = newElOption;\r\n    existingGroupOpt.width == null && (existingGroupOpt.width = newGroupOpt.width = 0);\r\n    existingGroupOpt.height == null && (existingGroupOpt.height = newGroupOpt.height = 0);\r\n  }\r\n}\r\n\r\nfunction setEventData(el, graphicModel, elOption) {\r\n  var eventData = getECData(el).eventData; // Simple optimize for large amount of elements that no need event.\r\n\r\n  if (!el.silent && !el.ignore && !eventData) {\r\n    eventData = getECData(el).eventData = {\r\n      componentType: 'graphic',\r\n      componentIndex: graphicModel.componentIndex,\r\n      name: el.name\r\n    };\r\n  } // `elOption.info` enables user to mount some info on\r\n  // elements and use them in event handlers.\r\n\r\n\r\n  if (eventData) {\r\n    eventData.info = elOption.info;\r\n  }\r\n}\r\n\r\nexport function install(registers) {\r\n  registers.registerComponentModel(GraphicComponentModel);\r\n  registers.registerComponentView(GraphicComponentView);\r\n  registers.registerPreprocessor(preprocessor);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { indexOf, createHashMap, assert } from 'zrender/lib/core/util';\r\nexport var DATA_ZOOM_AXIS_DIMENSIONS = ['x', 'y', 'radius', 'angle', 'single']; // Supported coords.\r\n// FIXME: polar has been broken (but rarely used).\r\n\r\nvar SERIES_COORDS = ['cartesian2d', 'polar', 'singleAxis'];\r\nexport function isCoordSupported(seriesModel) {\r\n  var coordType = seriesModel.get('coordinateSystem');\r\n  return indexOf(SERIES_COORDS, coordType) >= 0;\r\n}\r\nexport function getAxisMainType(axisDim) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    assert(axisDim);\r\n  }\r\n\r\n  return axisDim + 'Axis';\r\n}\r\nexport function getAxisIndexPropName(axisDim) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    assert(axisDim);\r\n  }\r\n\r\n  return axisDim + 'AxisIndex';\r\n}\r\nexport function getAxisIdPropName(axisDim) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    assert(axisDim);\r\n  }\r\n\r\n  return axisDim + 'AxisId';\r\n}\r\n/**\r\n * If two dataZoomModels has the same axis controlled, we say that they are 'linked'.\r\n * This function finds all linked dataZoomModels start from the given payload.\r\n */\r\n\r\nexport function findEffectedDataZooms(ecModel, payload) {\r\n  // Key: `DataZoomAxisDimension`\r\n  var axisRecords = createHashMap();\r\n  var effectedModels = []; // Key: uid of dataZoomModel\r\n\r\n  var effectedModelMap = createHashMap(); // Find the dataZooms specified by payload.\r\n\r\n  ecModel.eachComponent({\r\n    mainType: 'dataZoom',\r\n    query: payload\r\n  }, function (dataZoomModel) {\r\n    if (!effectedModelMap.get(dataZoomModel.uid)) {\r\n      addToEffected(dataZoomModel);\r\n    }\r\n  }); // Start from the given dataZoomModels, travel the graph to find\r\n  // all of the linked dataZoom models.\r\n\r\n  var foundNewLink;\r\n\r\n  do {\r\n    foundNewLink = false;\r\n    ecModel.eachComponent('dataZoom', processSingle);\r\n  } while (foundNewLink);\r\n\r\n  function processSingle(dataZoomModel) {\r\n    if (!effectedModelMap.get(dataZoomModel.uid) && isLinked(dataZoomModel)) {\r\n      addToEffected(dataZoomModel);\r\n      foundNewLink = true;\r\n    }\r\n  }\r\n\r\n  function addToEffected(dataZoom) {\r\n    effectedModelMap.set(dataZoom.uid, true);\r\n    effectedModels.push(dataZoom);\r\n    markAxisControlled(dataZoom);\r\n  }\r\n\r\n  function isLinked(dataZoomModel) {\r\n    var isLink = false;\r\n    dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\r\n      var axisIdxArr = axisRecords.get(axisDim);\r\n\r\n      if (axisIdxArr && axisIdxArr[axisIndex]) {\r\n        isLink = true;\r\n      }\r\n    });\r\n    return isLink;\r\n  }\r\n\r\n  function markAxisControlled(dataZoomModel) {\r\n    dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\r\n      (axisRecords.get(axisDim) || axisRecords.set(axisDim, []))[axisIndex] = true;\r\n    });\r\n  }\r\n\r\n  return effectedModels;\r\n}\r\n/**\r\n * Find the first target coordinate system.\r\n * Available after model built.\r\n *\r\n * @return Like {\r\n *                  grid: [\r\n *                      {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\r\n *                      {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\r\n *                      ...\r\n *                  ],  // cartesians must not be null/undefined.\r\n *                  polar: [\r\n *                      {model: coord0, axisModels: [axis4], coordIndex: 0},\r\n *                      ...\r\n *                  ],  // polars must not be null/undefined.\r\n *                  singleAxis: [\r\n *                      {model: coord0, axisModels: [], coordIndex: 0}\r\n *                  ]\r\n *              }\r\n */\r\n\r\nexport function collectReferCoordSysModelInfo(dataZoomModel) {\r\n  var ecModel = dataZoomModel.ecModel;\r\n  var coordSysInfoWrap = {\r\n    infoList: [],\r\n    infoMap: createHashMap()\r\n  };\r\n  dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\r\n    var axisModel = ecModel.getComponent(getAxisMainType(axisDim), axisIndex);\r\n\r\n    if (!axisModel) {\r\n      return;\r\n    }\r\n\r\n    var coordSysModel = axisModel.getCoordSysModel();\r\n\r\n    if (!coordSysModel) {\r\n      return;\r\n    }\r\n\r\n    var coordSysUid = coordSysModel.uid;\r\n    var coordSysInfo = coordSysInfoWrap.infoMap.get(coordSysUid);\r\n\r\n    if (!coordSysInfo) {\r\n      coordSysInfo = {\r\n        model: coordSysModel,\r\n        axisModels: []\r\n      };\r\n      coordSysInfoWrap.infoList.push(coordSysInfo);\r\n      coordSysInfoWrap.infoMap.set(coordSysUid, coordSysInfo);\r\n    }\r\n\r\n    coordSysInfo.axisModels.push(axisModel);\r\n  });\r\n  return coordSysInfoWrap;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport { each, createHashMap, merge, assert } from 'zrender/lib/core/util';\r\nimport ComponentModel from '../../model/Component';\r\nimport { getAxisMainType, DATA_ZOOM_AXIS_DIMENSIONS } from './helper';\r\nimport { MULTIPLE_REFERRING, SINGLE_REFERRING } from '../../util/model';\r\n\r\nvar DataZoomAxisInfo =\r\n/** @class */\r\nfunction () {\r\n  function DataZoomAxisInfo() {\r\n    this.indexList = [];\r\n    this.indexMap = [];\r\n  }\r\n\r\n  DataZoomAxisInfo.prototype.add = function (axisCmptIdx) {\r\n    // Remove duplication.\r\n    if (!this.indexMap[axisCmptIdx]) {\r\n      this.indexList.push(axisCmptIdx);\r\n      this.indexMap[axisCmptIdx] = true;\r\n    }\r\n  };\r\n\r\n  return DataZoomAxisInfo;\r\n}();\r\n\r\nvar DataZoomModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(DataZoomModel, _super);\r\n\r\n  function DataZoomModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = DataZoomModel.type;\r\n    _this._autoThrottle = true;\r\n    _this._noTarget = true;\r\n    /**\r\n     * It is `[rangeModeForMin, rangeModeForMax]`.\r\n     * The optional values for `rangeMode`:\r\n     * + `'value'` mode: the axis extent will always be determined by\r\n     *     `dataZoom.startValue` and `dataZoom.endValue`, despite\r\n     *     how data like and how `axis.min` and `axis.max` are.\r\n     * + `'percent'` mode: `100` represents 100% of the `[dMin, dMax]`,\r\n     *     where `dMin` is `axis.min` if `axis.min` specified, otherwise `data.extent[0]`,\r\n     *     and `dMax` is `axis.max` if `axis.max` specified, otherwise `data.extent[1]`.\r\n     *     Axis extent will be determined by the result of the percent of `[dMin, dMax]`.\r\n     *\r\n     * For example, when users are using dynamic data (update data periodically via `setOption`),\r\n     * if in `'value`' mode, the window will be kept in a fixed value range despite how\r\n     * data are appended, while if in `'percent'` mode, whe window range will be changed alone with\r\n     * the appended data (suppose `axis.min` and `axis.max` are not specified).\r\n     */\r\n\r\n    _this._rangePropMode = ['percent', 'percent'];\r\n    return _this;\r\n  }\r\n\r\n  DataZoomModel.prototype.init = function (option, parentModel, ecModel) {\r\n    var inputRawOption = retrieveRawOption(option);\r\n    /**\r\n     * Suppose a \"main process\" start at the point that model prepared (that is,\r\n     * model initialized or merged or method called in `action`).\r\n     * We should keep the `main process` idempotent, that is, given a set of values\r\n     * on `option`, we get the same result.\r\n     *\r\n     * But sometimes, values on `option` will be updated for providing users\r\n     * a \"final calculated value\" (`dataZoomProcessor` will do that). Those value\r\n     * should not be the base/input of the `main process`.\r\n     *\r\n     * So in that case we should save and keep the input of the `main process`\r\n     * separately, called `settledOption`.\r\n     *\r\n     * For example, consider the case:\r\n     * (Step_1) brush zoom the grid by `toolbox.dataZoom`,\r\n     *     where the original input `option.startValue`, `option.endValue` are earsed by\r\n     *     calculated value.\r\n     * (Step)2) click the legend to hide and show a series,\r\n     *     where the new range is calculated by the earsed `startValue` and `endValue`,\r\n     *     which brings incorrect result.\r\n     */\r\n\r\n    this.settledOption = inputRawOption;\r\n    this.mergeDefaultAndTheme(option, ecModel);\r\n\r\n    this._doInit(inputRawOption);\r\n  };\r\n\r\n  DataZoomModel.prototype.mergeOption = function (newOption) {\r\n    var inputRawOption = retrieveRawOption(newOption); //FIX #2591\r\n\r\n    merge(this.option, newOption, true);\r\n    merge(this.settledOption, inputRawOption, true);\r\n\r\n    this._doInit(inputRawOption);\r\n  };\r\n\r\n  DataZoomModel.prototype._doInit = function (inputRawOption) {\r\n    var thisOption = this.option; // if (!env.canvasSupported) {\r\n    //     thisOption.realtime = false;\r\n    // }\r\n\r\n    this._setDefaultThrottle(inputRawOption);\r\n\r\n    this._updateRangeUse(inputRawOption);\r\n\r\n    var settledOption = this.settledOption;\r\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\r\n      // start/end has higher priority over startValue/endValue if they\r\n      // both set, but we should make chart.setOption({endValue: 1000})\r\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\r\n      if (this._rangePropMode[index] === 'value') {\r\n        thisOption[names[0]] = settledOption[names[0]] = null;\r\n      } // Otherwise do nothing and use the merge result.\r\n\r\n    }, this);\r\n\r\n    this._resetTarget();\r\n  };\r\n\r\n  DataZoomModel.prototype._resetTarget = function () {\r\n    var optionOrient = this.get('orient', true);\r\n    var targetAxisIndexMap = this._targetAxisInfoMap = createHashMap();\r\n\r\n    var hasAxisSpecified = this._fillSpecifiedTargetAxis(targetAxisIndexMap);\r\n\r\n    if (hasAxisSpecified) {\r\n      this._orient = optionOrient || this._makeAutoOrientByTargetAxis();\r\n    } else {\r\n      this._orient = optionOrient || 'horizontal';\r\n\r\n      this._fillAutoTargetAxisByOrient(targetAxisIndexMap, this._orient);\r\n    }\r\n\r\n    this._noTarget = true;\r\n    targetAxisIndexMap.each(function (axisInfo) {\r\n      if (axisInfo.indexList.length) {\r\n        this._noTarget = false;\r\n      }\r\n    }, this);\r\n  };\r\n\r\n  DataZoomModel.prototype._fillSpecifiedTargetAxis = function (targetAxisIndexMap) {\r\n    var hasAxisSpecified = false;\r\n    each(DATA_ZOOM_AXIS_DIMENSIONS, function (axisDim) {\r\n      var refering = this.getReferringComponents(getAxisMainType(axisDim), MULTIPLE_REFERRING); // When user set axisIndex as a empty array, we think that user specify axisIndex\r\n      // but do not want use auto mode. Because empty array may be encountered when\r\n      // some error occured.\r\n\r\n      if (!refering.specified) {\r\n        return;\r\n      }\r\n\r\n      hasAxisSpecified = true;\r\n      var axisInfo = new DataZoomAxisInfo();\r\n      each(refering.models, function (axisModel) {\r\n        axisInfo.add(axisModel.componentIndex);\r\n      });\r\n      targetAxisIndexMap.set(axisDim, axisInfo);\r\n    }, this);\r\n    return hasAxisSpecified;\r\n  };\r\n\r\n  DataZoomModel.prototype._fillAutoTargetAxisByOrient = function (targetAxisIndexMap, orient) {\r\n    var ecModel = this.ecModel;\r\n    var needAuto = true; // Find axis that parallel to dataZoom as default.\r\n\r\n    if (needAuto) {\r\n      var axisDim = orient === 'vertical' ? 'y' : 'x';\r\n      var axisModels = ecModel.findComponents({\r\n        mainType: axisDim + 'Axis'\r\n      });\r\n      setParallelAxis(axisModels, axisDim);\r\n    } // Find axis that parallel to dataZoom as default.\r\n\r\n\r\n    if (needAuto) {\r\n      var axisModels = ecModel.findComponents({\r\n        mainType: 'singleAxis',\r\n        filter: function (axisModel) {\r\n          return axisModel.get('orient', true) === orient;\r\n        }\r\n      });\r\n      setParallelAxis(axisModels, 'single');\r\n    }\r\n\r\n    function setParallelAxis(axisModels, axisDim) {\r\n      // At least use the first parallel axis as the target axis.\r\n      var axisModel = axisModels[0];\r\n\r\n      if (!axisModel) {\r\n        return;\r\n      }\r\n\r\n      var axisInfo = new DataZoomAxisInfo();\r\n      axisInfo.add(axisModel.componentIndex);\r\n      targetAxisIndexMap.set(axisDim, axisInfo);\r\n      needAuto = false; // Find parallel axes in the same grid.\r\n\r\n      if (axisDim === 'x' || axisDim === 'y') {\r\n        var gridModel_1 = axisModel.getReferringComponents('grid', SINGLE_REFERRING).models[0];\r\n        gridModel_1 && each(axisModels, function (axModel) {\r\n          if (axisModel.componentIndex !== axModel.componentIndex && gridModel_1 === axModel.getReferringComponents('grid', SINGLE_REFERRING).models[0]) {\r\n            axisInfo.add(axModel.componentIndex);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (needAuto) {\r\n      // If no parallel axis, find the first category axis as default. (Also consider polar).\r\n      each(DATA_ZOOM_AXIS_DIMENSIONS, function (axisDim) {\r\n        if (!needAuto) {\r\n          return;\r\n        }\r\n\r\n        var axisModels = ecModel.findComponents({\r\n          mainType: getAxisMainType(axisDim),\r\n          filter: function (axisModel) {\r\n            return axisModel.get('type', true) === 'category';\r\n          }\r\n        });\r\n\r\n        if (axisModels[0]) {\r\n          var axisInfo = new DataZoomAxisInfo();\r\n          axisInfo.add(axisModels[0].componentIndex);\r\n          targetAxisIndexMap.set(axisDim, axisInfo);\r\n          needAuto = false;\r\n        }\r\n      }, this);\r\n    }\r\n  };\r\n\r\n  DataZoomModel.prototype._makeAutoOrientByTargetAxis = function () {\r\n    var dim; // Find the first axis\r\n\r\n    this.eachTargetAxis(function (axisDim) {\r\n      !dim && (dim = axisDim);\r\n    }, this);\r\n    return dim === 'y' ? 'vertical' : 'horizontal';\r\n  };\r\n\r\n  DataZoomModel.prototype._setDefaultThrottle = function (inputRawOption) {\r\n    // When first time user set throttle, auto throttle ends.\r\n    if (inputRawOption.hasOwnProperty('throttle')) {\r\n      this._autoThrottle = false;\r\n    }\r\n\r\n    if (this._autoThrottle) {\r\n      var globalOption = this.ecModel.option;\r\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\r\n    }\r\n  };\r\n\r\n  DataZoomModel.prototype._updateRangeUse = function (inputRawOption) {\r\n    var rangePropMode = this._rangePropMode;\r\n    var rangeModeInOption = this.get('rangeMode');\r\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\r\n      var percentSpecified = inputRawOption[names[0]] != null;\r\n      var valueSpecified = inputRawOption[names[1]] != null;\r\n\r\n      if (percentSpecified && !valueSpecified) {\r\n        rangePropMode[index] = 'percent';\r\n      } else if (!percentSpecified && valueSpecified) {\r\n        rangePropMode[index] = 'value';\r\n      } else if (rangeModeInOption) {\r\n        rangePropMode[index] = rangeModeInOption[index];\r\n      } else if (percentSpecified) {\r\n        // percentSpecified && valueSpecified\r\n        rangePropMode[index] = 'percent';\r\n      } // else remain its original setting.\r\n\r\n    });\r\n  };\r\n\r\n  DataZoomModel.prototype.noTarget = function () {\r\n    return this._noTarget;\r\n  };\r\n\r\n  DataZoomModel.prototype.getFirstTargetAxisModel = function () {\r\n    var firstAxisModel;\r\n    this.eachTargetAxis(function (axisDim, axisIndex) {\r\n      if (firstAxisModel == null) {\r\n        firstAxisModel = this.ecModel.getComponent(getAxisMainType(axisDim), axisIndex);\r\n      }\r\n    }, this);\r\n    return firstAxisModel;\r\n  };\r\n  /**\r\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\r\n   */\r\n\r\n\r\n  DataZoomModel.prototype.eachTargetAxis = function (callback, context) {\r\n    this._targetAxisInfoMap.each(function (axisInfo, axisDim) {\r\n      each(axisInfo.indexList, function (axisIndex) {\r\n        callback.call(context, axisDim, axisIndex);\r\n      });\r\n    });\r\n  };\r\n  /**\r\n   * @return If not found, return null/undefined.\r\n   */\r\n\r\n\r\n  DataZoomModel.prototype.getAxisProxy = function (axisDim, axisIndex) {\r\n    var axisModel = this.getAxisModel(axisDim, axisIndex);\r\n\r\n    if (axisModel) {\r\n      return axisModel.__dzAxisProxy;\r\n    }\r\n  };\r\n  /**\r\n   * @return If not found, return null/undefined.\r\n   */\r\n\r\n\r\n  DataZoomModel.prototype.getAxisModel = function (axisDim, axisIndex) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      assert(axisDim && axisIndex != null);\r\n    }\r\n\r\n    var axisInfo = this._targetAxisInfoMap.get(axisDim);\r\n\r\n    if (axisInfo && axisInfo.indexMap[axisIndex]) {\r\n      return this.ecModel.getComponent(getAxisMainType(axisDim), axisIndex);\r\n    }\r\n  };\r\n  /**\r\n   * If not specified, set to undefined.\r\n   */\r\n\r\n\r\n  DataZoomModel.prototype.setRawRange = function (opt) {\r\n    var thisOption = this.option;\r\n    var settledOption = this.settledOption;\r\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\r\n      // Consider the pair <start, startValue>:\r\n      // If one has value and the other one is `null/undefined`, we both set them\r\n      // to `settledOption`. This strategy enables the feature to clear the original\r\n      // value in `settledOption` to `null/undefined`.\r\n      // But if both of them are `null/undefined`, we do not set them to `settledOption`\r\n      // and keep `settledOption` with the original value. This strategy enables users to\r\n      // only set <end or endValue> but not set <start or startValue> when calling\r\n      // `dispatchAction`.\r\n      // The pair <end, endValue> is treated in the same way.\r\n      if (opt[names[0]] != null || opt[names[1]] != null) {\r\n        thisOption[names[0]] = settledOption[names[0]] = opt[names[0]];\r\n        thisOption[names[1]] = settledOption[names[1]] = opt[names[1]];\r\n      }\r\n    }, this);\r\n\r\n    this._updateRangeUse(opt);\r\n  };\r\n\r\n  DataZoomModel.prototype.setCalculatedRange = function (opt) {\r\n    var option = this.option;\r\n    each(['start', 'startValue', 'end', 'endValue'], function (name) {\r\n      option[name] = opt[name];\r\n    });\r\n  };\r\n\r\n  DataZoomModel.prototype.getPercentRange = function () {\r\n    var axisProxy = this.findRepresentativeAxisProxy();\r\n\r\n    if (axisProxy) {\r\n      return axisProxy.getDataPercentWindow();\r\n    }\r\n  };\r\n  /**\r\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\r\n   *\r\n   * @return [startValue, endValue] value can only be '-' or finite number.\r\n   */\r\n\r\n\r\n  DataZoomModel.prototype.getValueRange = function (axisDim, axisIndex) {\r\n    if (axisDim == null && axisIndex == null) {\r\n      var axisProxy = this.findRepresentativeAxisProxy();\r\n\r\n      if (axisProxy) {\r\n        return axisProxy.getDataValueWindow();\r\n      }\r\n    } else {\r\n      return this.getAxisProxy(axisDim, axisIndex).getDataValueWindow();\r\n    }\r\n  };\r\n  /**\r\n   * @param axisModel If axisModel given, find axisProxy\r\n   *      corresponding to the axisModel\r\n   */\r\n\r\n\r\n  DataZoomModel.prototype.findRepresentativeAxisProxy = function (axisModel) {\r\n    if (axisModel) {\r\n      return axisModel.__dzAxisProxy;\r\n    } // Find the first hosted axisProxy\r\n\r\n\r\n    var firstProxy;\r\n\r\n    var axisDimList = this._targetAxisInfoMap.keys();\r\n\r\n    for (var i = 0; i < axisDimList.length; i++) {\r\n      var axisDim = axisDimList[i];\r\n\r\n      var axisInfo = this._targetAxisInfoMap.get(axisDim);\r\n\r\n      for (var j = 0; j < axisInfo.indexList.length; j++) {\r\n        var proxy = this.getAxisProxy(axisDim, axisInfo.indexList[j]);\r\n\r\n        if (proxy.hostedBy(this)) {\r\n          return proxy;\r\n        }\r\n\r\n        if (!firstProxy) {\r\n          firstProxy = proxy;\r\n        }\r\n      }\r\n    } // If no hosted proxy found, still need to return a proxy.\r\n    // This case always happens in toolbox dataZoom, where axes are all hosted by\r\n    // other dataZooms.\r\n\r\n\r\n    return firstProxy;\r\n  };\r\n\r\n  DataZoomModel.prototype.getRangePropMode = function () {\r\n    return this._rangePropMode.slice();\r\n  };\r\n\r\n  DataZoomModel.prototype.getOrient = function () {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      // Should not be called before initialized.\r\n      assert(this._orient);\r\n    }\r\n\r\n    return this._orient;\r\n  };\r\n\r\n  DataZoomModel.type = 'dataZoom';\r\n  DataZoomModel.dependencies = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series', 'toolbox'];\r\n  DataZoomModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 4,\r\n    filterMode: 'filter',\r\n    start: 0,\r\n    end: 100\r\n  };\r\n  return DataZoomModel;\r\n}(ComponentModel);\r\n/**\r\n * Retrieve the those raw params from option, which will be cached separately.\r\n * becasue they will be overwritten by normalized/calculated values in the main\r\n * process.\r\n */\r\n\r\n\r\nfunction retrieveRawOption(option) {\r\n  var ret = {};\r\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\r\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\r\n  });\r\n  return ret;\r\n}\r\n\r\nexport default DataZoomModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport DataZoomModel from './DataZoomModel';\r\n\r\nvar SelectDataZoomModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(SelectDataZoomModel, _super);\r\n\r\n  function SelectDataZoomModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = SelectDataZoomModel.type;\r\n    return _this;\r\n  }\r\n\r\n  SelectDataZoomModel.type = 'dataZoom.select';\r\n  return SelectDataZoomModel;\r\n}(DataZoomModel);\r\n\r\nexport default SelectDataZoomModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport ComponentView from '../../view/Component';\r\n\r\nvar DataZoomView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(DataZoomView, _super);\r\n\r\n  function DataZoomView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = DataZoomView.type;\r\n    return _this;\r\n  }\r\n\r\n  DataZoomView.prototype.render = function (dataZoomModel, ecModel, api, payload) {\r\n    this.dataZoomModel = dataZoomModel;\r\n    this.ecModel = ecModel;\r\n    this.api = api;\r\n  };\r\n\r\n  DataZoomView.type = 'dataZoom';\r\n  return DataZoomView;\r\n}(ComponentView);\r\n\r\nexport default DataZoomView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport DataZoomView from './DataZoomView';\r\n\r\nvar SelectDataZoomView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(SelectDataZoomView, _super);\r\n\r\n  function SelectDataZoomView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = SelectDataZoomView.type;\r\n    return _this;\r\n  }\r\n\r\n  SelectDataZoomView.type = 'dataZoom.select';\r\n  return SelectDataZoomView;\r\n}(DataZoomView);\r\n\r\nexport default SelectDataZoomView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as numberUtil from '../../util/number';\r\nimport sliderMove from '../helper/sliderMove';\r\nimport { unionAxisExtentFromData } from '../../coord/axisHelper';\r\nimport { ensureScaleRawExtentInfo } from '../../coord/scaleRawExtentInfo';\r\nimport { getAxisMainType, isCoordSupported } from './helper';\r\nimport { SINGLE_REFERRING } from '../../util/model';\r\nvar each = zrUtil.each;\r\nvar asc = numberUtil.asc;\r\n/**\r\n * Operate single axis.\r\n * One axis can only operated by one axis operator.\r\n * Different dataZoomModels may be defined to operate the same axis.\r\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\r\n * So dataZoomModels share one axisProxy in that case.\r\n */\r\n\r\nvar AxisProxy =\r\n/** @class */\r\nfunction () {\r\n  function AxisProxy(dimName, axisIndex, dataZoomModel, ecModel) {\r\n    this._dimName = dimName;\r\n    this._axisIndex = axisIndex;\r\n    this.ecModel = ecModel;\r\n    this._dataZoomModel = dataZoomModel; // /**\r\n    //  * @readOnly\r\n    //  * @private\r\n    //  */\r\n    // this.hasSeriesStacked;\r\n  }\r\n  /**\r\n   * Whether the axisProxy is hosted by dataZoomModel.\r\n   */\r\n\r\n\r\n  AxisProxy.prototype.hostedBy = function (dataZoomModel) {\r\n    return this._dataZoomModel === dataZoomModel;\r\n  };\r\n  /**\r\n   * @return Value can only be NaN or finite value.\r\n   */\r\n\r\n\r\n  AxisProxy.prototype.getDataValueWindow = function () {\r\n    return this._valueWindow.slice();\r\n  };\r\n  /**\r\n   * @return {Array.<number>}\r\n   */\r\n\r\n\r\n  AxisProxy.prototype.getDataPercentWindow = function () {\r\n    return this._percentWindow.slice();\r\n  };\r\n\r\n  AxisProxy.prototype.getTargetSeriesModels = function () {\r\n    var seriesModels = [];\r\n    this.ecModel.eachSeries(function (seriesModel) {\r\n      if (isCoordSupported(seriesModel)) {\r\n        var axisMainType = getAxisMainType(this._dimName);\r\n        var axisModel = seriesModel.getReferringComponents(axisMainType, SINGLE_REFERRING).models[0];\r\n\r\n        if (axisModel && this._axisIndex === axisModel.componentIndex) {\r\n          seriesModels.push(seriesModel);\r\n        }\r\n      }\r\n    }, this);\r\n    return seriesModels;\r\n  };\r\n\r\n  AxisProxy.prototype.getAxisModel = function () {\r\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\r\n  };\r\n\r\n  AxisProxy.prototype.getMinMaxSpan = function () {\r\n    return zrUtil.clone(this._minMaxSpan);\r\n  };\r\n  /**\r\n   * Only calculate by given range and this._dataExtent, do not change anything.\r\n   */\r\n\r\n\r\n  AxisProxy.prototype.calculateDataWindow = function (opt) {\r\n    var dataExtent = this._dataExtent;\r\n    var axisModel = this.getAxisModel();\r\n    var scale = axisModel.axis.scale;\r\n\r\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\r\n\r\n    var percentExtent = [0, 100];\r\n    var percentWindow = [];\r\n    var valueWindow = [];\r\n    var hasPropModeValue;\r\n    each(['start', 'end'], function (prop, idx) {\r\n      var boundPercent = opt[prop];\r\n      var boundValue = opt[prop + 'Value']; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\r\n      // on `valueProp` ('startValue', 'endValue'). (They are based on the data extent\r\n      // but not min/max of axis, which will be calculated by data window then).\r\n      // The former one is suitable for cases that a dataZoom component controls multiple\r\n      // axes with different unit or extent, and the latter one is suitable for accurate\r\n      // zoom by pixel (e.g., in dataZoomSelect).\r\n      // we use `getRangePropMode()` to mark which prop is used. `rangePropMode` is updated\r\n      // only when setOption or dispatchAction, otherwise it remains its original value.\r\n      // (Why not only record `percentProp` and always map to `valueProp`? Because\r\n      // the map `valueProp` -> `percentProp` -> `valueProp` probably not the original\r\n      // `valueProp`. consider two axes constrolled by one dataZoom. They have different\r\n      // data extent. All of values that are overflow the `dataExtent` will be calculated\r\n      // to percent '100%').\r\n\r\n      if (rangePropMode[idx] === 'percent') {\r\n        boundPercent == null && (boundPercent = percentExtent[idx]); // Use scale.parse to math round for category or time axis.\r\n\r\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent));\r\n      } else {\r\n        hasPropModeValue = true;\r\n        boundValue = boundValue == null ? dataExtent[idx] : scale.parse(boundValue); // Calculating `percent` from `value` may be not accurate, because\r\n        // This calculation can not be inversed, because all of values that\r\n        // are overflow the `dataExtent` will be calculated to percent '100%'\r\n\r\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent);\r\n      } // valueWindow[idx] = round(boundValue);\r\n      // percentWindow[idx] = round(boundPercent);\r\n\r\n\r\n      valueWindow[idx] = boundValue;\r\n      percentWindow[idx] = boundPercent;\r\n    });\r\n    asc(valueWindow);\r\n    asc(percentWindow); // The windows from user calling of `dispatchAction` might be out of the extent,\r\n    // or do not obey the `min/maxSpan`, `min/maxValueSpan`. But we dont restrict window\r\n    // by `zoomLock` here, because we see `zoomLock` just as a interaction constraint,\r\n    // where API is able to initialize/modify the window size even though `zoomLock`\r\n    // specified.\r\n\r\n    var spans = this._minMaxSpan;\r\n    hasPropModeValue ? restrictSet(valueWindow, percentWindow, dataExtent, percentExtent, false) : restrictSet(percentWindow, valueWindow, percentExtent, dataExtent, true);\r\n\r\n    function restrictSet(fromWindow, toWindow, fromExtent, toExtent, toValue) {\r\n      var suffix = toValue ? 'Span' : 'ValueSpan';\r\n      sliderMove(0, fromWindow, fromExtent, 'all', spans['min' + suffix], spans['max' + suffix]);\r\n\r\n      for (var i = 0; i < 2; i++) {\r\n        toWindow[i] = numberUtil.linearMap(fromWindow[i], fromExtent, toExtent, true);\r\n        toValue && (toWindow[i] = scale.parse(toWindow[i]));\r\n      }\r\n    }\r\n\r\n    return {\r\n      valueWindow: valueWindow,\r\n      percentWindow: percentWindow\r\n    };\r\n  };\r\n  /**\r\n   * Notice: reset should not be called before series.restoreData() called,\r\n   * so it is recommanded to be called in \"process stage\" but not \"model init\r\n   * stage\".\r\n   */\r\n\r\n\r\n  AxisProxy.prototype.reset = function (dataZoomModel) {\r\n    if (dataZoomModel !== this._dataZoomModel) {\r\n      return;\r\n    }\r\n\r\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\r\n\r\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // `calculateDataWindow` uses min/maxSpan.\r\n\r\n    this._updateMinMaxSpan();\r\n\r\n    var dataWindow = this.calculateDataWindow(dataZoomModel.settledOption);\r\n    this._valueWindow = dataWindow.valueWindow;\r\n    this._percentWindow = dataWindow.percentWindow; // Update axis setting then.\r\n\r\n    this._setAxisModel();\r\n  };\r\n\r\n  AxisProxy.prototype.filterData = function (dataZoomModel, api) {\r\n    if (dataZoomModel !== this._dataZoomModel) {\r\n      return;\r\n    }\r\n\r\n    var axisDim = this._dimName;\r\n    var seriesModels = this.getTargetSeriesModels();\r\n    var filterMode = dataZoomModel.get('filterMode');\r\n    var valueWindow = this._valueWindow;\r\n\r\n    if (filterMode === 'none') {\r\n      return;\r\n    } // FIXME\r\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\r\n    // with NaN data, NaN will be filtered and stack will be wrong.\r\n    // So we need to force the mode to be set empty.\r\n    // In fect, it is not a big deal that do not support filterMode-'filter'\r\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\r\n    // selection\" some day, which might need \"adapt to data extent on the\r\n    // otherAxis\", which is disabled by filterMode-'empty'.\r\n    // But currently, stack has been fixed to based on value but not index,\r\n    // so this is not an issue any more.\r\n    // let otherAxisModel = this.getOtherAxisModel();\r\n    // if (dataZoomModel.get('$fromToolbox')\r\n    //     && otherAxisModel\r\n    //     && otherAxisModel.hasSeriesStacked\r\n    // ) {\r\n    //     filterMode = 'empty';\r\n    // }\r\n    // TODO\r\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\r\n\r\n\r\n    each(seriesModels, function (seriesModel) {\r\n      var seriesData = seriesModel.getData();\r\n      var dataDims = seriesData.mapDimensionsAll(axisDim);\r\n\r\n      if (!dataDims.length) {\r\n        return;\r\n      }\r\n\r\n      if (filterMode === 'weakFilter') {\r\n        var store_1 = seriesData.getStore();\r\n        var dataDimIndices_1 = zrUtil.map(dataDims, function (dim) {\r\n          return seriesData.getDimensionIndex(dim);\r\n        }, seriesData);\r\n        seriesData.filterSelf(function (dataIndex) {\r\n          var leftOut;\r\n          var rightOut;\r\n          var hasValue;\r\n\r\n          for (var i = 0; i < dataDims.length; i++) {\r\n            var value = store_1.get(dataDimIndices_1[i], dataIndex);\r\n            var thisHasValue = !isNaN(value);\r\n            var thisLeftOut = value < valueWindow[0];\r\n            var thisRightOut = value > valueWindow[1];\r\n\r\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\r\n              return true;\r\n            }\r\n\r\n            thisHasValue && (hasValue = true);\r\n            thisLeftOut && (leftOut = true);\r\n            thisRightOut && (rightOut = true);\r\n          } // If both left out and right out, do not filter.\r\n\r\n\r\n          return hasValue && leftOut && rightOut;\r\n        });\r\n      } else {\r\n        each(dataDims, function (dim) {\r\n          if (filterMode === 'empty') {\r\n            seriesModel.setData(seriesData = seriesData.map(dim, function (value) {\r\n              return !isInWindow(value) ? NaN : value;\r\n            }));\r\n          } else {\r\n            var range = {};\r\n            range[dim] = valueWindow; // console.time('select');\r\n\r\n            seriesData.selectRange(range); // console.timeEnd('select');\r\n          }\r\n        });\r\n      }\r\n\r\n      each(dataDims, function (dim) {\r\n        seriesData.setApproximateExtent(valueWindow, dim);\r\n      });\r\n    });\r\n\r\n    function isInWindow(value) {\r\n      return value >= valueWindow[0] && value <= valueWindow[1];\r\n    }\r\n  };\r\n\r\n  AxisProxy.prototype._updateMinMaxSpan = function () {\r\n    var minMaxSpan = this._minMaxSpan = {};\r\n    var dataZoomModel = this._dataZoomModel;\r\n    var dataExtent = this._dataExtent;\r\n    each(['min', 'max'], function (minMax) {\r\n      var percentSpan = dataZoomModel.get(minMax + 'Span');\r\n      var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\r\n      valueSpan != null && (valueSpan = this.getAxisModel().axis.scale.parse(valueSpan)); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\r\n\r\n      if (valueSpan != null) {\r\n        percentSpan = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\r\n      } else if (percentSpan != null) {\r\n        valueSpan = numberUtil.linearMap(percentSpan, [0, 100], dataExtent, true) - dataExtent[0];\r\n      }\r\n\r\n      minMaxSpan[minMax + 'Span'] = percentSpan;\r\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\r\n    }, this);\r\n  };\r\n\r\n  AxisProxy.prototype._setAxisModel = function () {\r\n    var axisModel = this.getAxisModel();\r\n    var percentWindow = this._percentWindow;\r\n    var valueWindow = this._valueWindow;\r\n\r\n    if (!percentWindow) {\r\n      return;\r\n    } // [0, 500]: arbitrary value, guess axis extent.\r\n\r\n\r\n    var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\r\n    precision = Math.min(precision, 20); // For value axis, if min/max/scale are not set, we just use the extent obtained\r\n    // by series data, which may be a little different from the extent calculated by\r\n    // `axisHelper.getScaleExtent`. But the different just affects the experience a\r\n    // little when zooming. So it will not be fixed until some users require it strongly.\r\n\r\n    var rawExtentInfo = axisModel.axis.scale.rawExtentInfo;\r\n\r\n    if (percentWindow[0] !== 0) {\r\n      rawExtentInfo.setDeterminedMinMax('min', +valueWindow[0].toFixed(precision));\r\n    }\r\n\r\n    if (percentWindow[1] !== 100) {\r\n      rawExtentInfo.setDeterminedMinMax('max', +valueWindow[1].toFixed(precision));\r\n    }\r\n\r\n    rawExtentInfo.freeze();\r\n  };\r\n\r\n  return AxisProxy;\r\n}();\r\n\r\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\r\n  var dataExtent = [Infinity, -Infinity];\r\n  each(seriesModels, function (seriesModel) {\r\n    unionAxisExtentFromData(dataExtent, seriesModel.getData(), axisDim);\r\n  }); // It is important to get \"consistent\" extent when more then one axes is\r\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\r\n  // when zooming. But it is difficult to know what is \"consistent\", considering\r\n  // axes have different type or even different meanings (For example, two\r\n  // time axes are used to compare data of the same date in different years).\r\n  // So basically dataZoom just obtains extent by series.data (in category axis\r\n  // extent can be obtained from axis.data).\r\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\r\n  // consistent.\r\n\r\n  var axisModel = axisProxy.getAxisModel();\r\n  var rawExtentResult = ensureScaleRawExtentInfo(axisModel.axis.scale, axisModel, dataExtent).calculate();\r\n  return [rawExtentResult.min, rawExtentResult.max];\r\n}\r\n\r\nexport default AxisProxy;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { createHashMap, each } from 'zrender/lib/core/util';\r\nimport { getAxisMainType } from './helper';\r\nimport AxisProxy from './AxisProxy';\r\nvar dataZoomProcessor = {\r\n  // `dataZoomProcessor` will only be performed in needed series. Consider if\r\n  // there is a line series and a pie series, it is better not to update the\r\n  // line series if only pie series is needed to be updated.\r\n  getTargetSeries: function (ecModel) {\r\n    function eachAxisModel(cb) {\r\n      ecModel.eachComponent('dataZoom', function (dataZoomModel) {\r\n        dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\r\n          var axisModel = ecModel.getComponent(getAxisMainType(axisDim), axisIndex);\r\n          cb(axisDim, axisIndex, axisModel, dataZoomModel);\r\n        });\r\n      });\r\n    } // FIXME: it brings side-effect to `getTargetSeries`.\r\n    // Prepare axis proxies.\r\n\r\n\r\n    eachAxisModel(function (axisDim, axisIndex, axisModel, dataZoomModel) {\r\n      // dispose all last axis proxy, in case that some axis are deleted.\r\n      axisModel.__dzAxisProxy = null;\r\n    });\r\n    var proxyList = [];\r\n    eachAxisModel(function (axisDim, axisIndex, axisModel, dataZoomModel) {\r\n      // Different dataZooms may constrol the same axis. In that case,\r\n      // an axisProxy serves both of them.\r\n      if (!axisModel.__dzAxisProxy) {\r\n        // Use the first dataZoomModel as the main model of axisProxy.\r\n        axisModel.__dzAxisProxy = new AxisProxy(axisDim, axisIndex, dataZoomModel, ecModel);\r\n        proxyList.push(axisModel.__dzAxisProxy);\r\n      }\r\n    });\r\n    var seriesModelMap = createHashMap();\r\n    each(proxyList, function (axisProxy) {\r\n      each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\r\n        seriesModelMap.set(seriesModel.uid, seriesModel);\r\n      });\r\n    });\r\n    return seriesModelMap;\r\n  },\r\n  // Consider appendData, where filter should be performed. Because data process is\r\n  // in block mode currently, it is not need to worry about that the overallProgress\r\n  // execute every frame.\r\n  overallReset: function (ecModel, api) {\r\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\r\n      // We calculate window and reset axis here but not in model\r\n      // init stage and not after action dispatch handler, because\r\n      // reset should be called after seriesData.restoreData.\r\n      dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\r\n        dataZoomModel.getAxisProxy(axisDim, axisIndex).reset(dataZoomModel);\r\n      }); // Caution: data zoom filtering is order sensitive when using\r\n      // percent range and no min/max/scale set on axis.\r\n      // For example, we have dataZoom definition:\r\n      // [\r\n      //      {xAxisIndex: 0, start: 30, end: 70},\r\n      //      {yAxisIndex: 0, start: 20, end: 80}\r\n      // ]\r\n      // In this case, [20, 80] of y-dataZoom should be based on data\r\n      // that have filtered by x-dataZoom using range of [30, 70],\r\n      // but should not be based on full raw data. Thus sliding\r\n      // x-dataZoom will change both ranges of xAxis and yAxis,\r\n      // while sliding y-dataZoom will only change the range of yAxis.\r\n      // So we should filter x-axis after reset x-axis immediately,\r\n      // and then reset y-axis and filter y-axis.\r\n\r\n      dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\r\n        dataZoomModel.getAxisProxy(axisDim, axisIndex).filterData(dataZoomModel, api);\r\n      });\r\n    });\r\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\r\n      // Fullfill all of the range props so that user\r\n      // is able to get them from chart.getOption().\r\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\r\n\r\n      if (axisProxy) {\r\n        var percentRange = axisProxy.getDataPercentWindow();\r\n        var valueRange = axisProxy.getDataValueWindow();\r\n        dataZoomModel.setCalculatedRange({\r\n          start: percentRange[0],\r\n          end: percentRange[1],\r\n          startValue: valueRange[0],\r\n          endValue: valueRange[1]\r\n        });\r\n      }\r\n    });\r\n  }\r\n};\r\nexport default dataZoomProcessor;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { findEffectedDataZooms } from './helper';\r\nimport { each } from 'zrender/lib/core/util';\r\nexport default function installDataZoomAction(registers) {\r\n  registers.registerAction('dataZoom', function (payload, ecModel) {\r\n    var effectedModels = findEffectedDataZooms(ecModel, payload);\r\n    each(effectedModels, function (dataZoomModel) {\r\n      dataZoomModel.setRawRange({\r\n        start: payload.start,\r\n        end: payload.end,\r\n        startValue: payload.startValue,\r\n        endValue: payload.endValue\r\n      });\r\n    });\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport dataZoomProcessor from './dataZoomProcessor';\r\nimport installDataZoomAction from './dataZoomAction';\r\nvar installed = false;\r\nexport default function installCommon(registers) {\r\n  if (installed) {\r\n    return;\r\n  }\r\n\r\n  installed = true;\r\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.FILTER, dataZoomProcessor);\r\n  installDataZoomAction(registers);\r\n  registers.registerSubTypeDefaulter('dataZoom', function () {\r\n    // Default 'slider' when no type specified.\r\n    return 'slider';\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport SelectZoomModel from './SelectZoomModel';\r\nimport SelectZoomView from './SelectZoomView';\r\nimport installCommon from './installCommon';\r\nexport function install(registers) {\r\n  registers.registerComponentModel(SelectZoomModel);\r\n  registers.registerComponentView(SelectZoomView);\r\n  installCommon(registers);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\nvar ToolboxFeature =\r\n/** @class */\r\nfunction () {\r\n  function ToolboxFeature() {}\r\n\r\n  return ToolboxFeature;\r\n}();\r\n\r\nexport { ToolboxFeature };\r\nvar features = {};\r\nexport function registerFeature(name, ctor) {\r\n  features[name] = ctor;\r\n}\r\nexport function getFeature(name) {\r\n  return features[name];\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as featureManager from './featureManager';\r\nimport ComponentModel from '../../model/Component';\r\n\r\nvar ToolboxModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ToolboxModel, _super);\r\n\r\n  function ToolboxModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = ToolboxModel.type;\r\n    return _this;\r\n  }\r\n\r\n  ToolboxModel.prototype.optionUpdated = function () {\r\n    _super.prototype.optionUpdated.apply(this, arguments);\r\n\r\n    var ecModel = this.ecModel;\r\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\r\n      var Feature = featureManager.getFeature(featureName);\r\n\r\n      if (Feature) {\r\n        if (Feature.getDefaultOption) {\r\n          Feature.defaultOption = Feature.getDefaultOption(ecModel);\r\n        }\r\n\r\n        zrUtil.merge(featureOpt, Feature.defaultOption);\r\n      }\r\n    });\r\n  };\r\n\r\n  ToolboxModel.type = 'toolbox';\r\n  ToolboxModel.layoutMode = {\r\n    type: 'box',\r\n    ignoreSize: true\r\n  };\r\n  ToolboxModel.defaultOption = {\r\n    show: true,\r\n    z: 6,\r\n    zlevel: 0,\r\n    orient: 'horizontal',\r\n    left: 'right',\r\n    top: 'top',\r\n    // right\r\n    // bottom\r\n    backgroundColor: 'transparent',\r\n    borderColor: '#ccc',\r\n    borderRadius: 0,\r\n    borderWidth: 0,\r\n    padding: 5,\r\n    itemSize: 15,\r\n    itemGap: 8,\r\n    showTitle: true,\r\n    iconStyle: {\r\n      borderColor: '#666',\r\n      color: 'none'\r\n    },\r\n    emphasis: {\r\n      iconStyle: {\r\n        borderColor: '#3E98C5'\r\n      }\r\n    },\r\n    // textStyle: {},\r\n    // feature\r\n    tooltip: {\r\n      show: false,\r\n      position: 'bottom'\r\n    }\r\n  };\r\n  return ToolboxModel;\r\n}(ComponentModel);\r\n\r\nexport default ToolboxModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// @ts-nocheck\r\nimport { getLayoutRect, box as layoutBox, positionElement } from '../../util/layout';\r\nimport * as formatUtil from '../../util/format';\r\nimport * as graphic from '../../util/graphic';\r\n/**\r\n * Layout list like component.\r\n * It will box layout each items in group of component and then position the whole group in the viewport\r\n * @param {module:zrender/group/Group} group\r\n * @param {module:echarts/model/Component} componentModel\r\n * @param {module:echarts/ExtensionAPI}\r\n */\r\n\r\nexport function layout(group, componentModel, api) {\r\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\r\n  var padding = componentModel.get('padding');\r\n  var viewportSize = {\r\n    width: api.getWidth(),\r\n    height: api.getHeight()\r\n  };\r\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\r\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\r\n  positionElement(group, boxLayoutParams, viewportSize, padding);\r\n}\r\nexport function makeBackground(rect, componentModel) {\r\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\r\n  var style = componentModel.getItemStyle(['color', 'opacity']);\r\n  style.fill = componentModel.get('backgroundColor');\r\n  rect = new graphic.Rect({\r\n    shape: {\r\n      x: rect.x - padding[3],\r\n      y: rect.y - padding[0],\r\n      width: rect.width + padding[1] + padding[3],\r\n      height: rect.height + padding[0] + padding[2],\r\n      r: componentModel.get('borderRadius')\r\n    },\r\n    style: style,\r\n    silent: true,\r\n    z2: -1\r\n  }); // FIXME\r\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\r\n  // and background rect when setting like `left: 0`, `top: 0`.\r\n  // graphic.subPixelOptimizeRect(rect);\r\n\r\n  return rect;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as textContain from 'zrender/lib/contain/text';\r\nimport * as graphic from '../../util/graphic';\r\nimport { enterEmphasis, leaveEmphasis } from '../../util/states';\r\nimport Model from '../../model/Model';\r\nimport DataDiffer from '../../data/DataDiffer';\r\nimport * as listComponentHelper from '../helper/listComponent';\r\nimport ComponentView from '../../view/Component';\r\nimport { ToolboxFeature, getFeature } from './featureManager';\r\nimport { getUID } from '../../util/component';\r\nimport ZRText from 'zrender/lib/graphic/Text';\r\n\r\nvar ToolboxView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ToolboxView, _super);\r\n\r\n  function ToolboxView() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  ToolboxView.prototype.render = function (toolboxModel, ecModel, api, payload) {\r\n    var group = this.group;\r\n    group.removeAll();\r\n\r\n    if (!toolboxModel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var itemSize = +toolboxModel.get('itemSize');\r\n    var featureOpts = toolboxModel.get('feature') || {};\r\n    var features = this._features || (this._features = {});\r\n    var featureNames = [];\r\n    zrUtil.each(featureOpts, function (opt, name) {\r\n      featureNames.push(name);\r\n    });\r\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\r\n\r\n    this._featureNames = featureNames;\r\n\r\n    function processFeature(newIndex, oldIndex) {\r\n      var featureName = featureNames[newIndex];\r\n      var oldName = featureNames[oldIndex];\r\n      var featureOpt = featureOpts[featureName];\r\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\r\n      var feature; // FIX#11236, merge feature title from MagicType newOption. TODO: consider seriesIndex ?\r\n\r\n      if (payload && payload.newTitle != null && payload.featureName === featureName) {\r\n        featureOpt.title = payload.newTitle;\r\n      }\r\n\r\n      if (featureName && !oldName) {\r\n        // Create\r\n        if (isUserFeatureName(featureName)) {\r\n          feature = {\r\n            onclick: featureModel.option.onclick,\r\n            featureName: featureName\r\n          };\r\n        } else {\r\n          var Feature = getFeature(featureName);\r\n\r\n          if (!Feature) {\r\n            return;\r\n          }\r\n\r\n          feature = new Feature();\r\n        }\r\n\r\n        features[featureName] = feature;\r\n      } else {\r\n        feature = features[oldName]; // If feature does not exsit.\r\n\r\n        if (!feature) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      feature.uid = getUID('toolbox-feature');\r\n      feature.model = featureModel;\r\n      feature.ecModel = ecModel;\r\n      feature.api = api;\r\n      var isToolboxFeature = feature instanceof ToolboxFeature;\r\n\r\n      if (!featureName && oldName) {\r\n        isToolboxFeature && feature.dispose && feature.dispose(ecModel, api);\r\n        return;\r\n      }\r\n\r\n      if (!featureModel.get('show') || isToolboxFeature && feature.unusable) {\r\n        isToolboxFeature && feature.remove && feature.remove(ecModel, api);\r\n        return;\r\n      }\r\n\r\n      createIconPaths(featureModel, feature, featureName);\r\n\r\n      featureModel.setIconStatus = function (iconName, status) {\r\n        var option = this.option;\r\n        var iconPaths = this.iconPaths;\r\n        option.iconStatus = option.iconStatus || {};\r\n        option.iconStatus[iconName] = status;\r\n\r\n        if (iconPaths[iconName]) {\r\n          (status === 'emphasis' ? enterEmphasis : leaveEmphasis)(iconPaths[iconName]);\r\n        }\r\n      };\r\n\r\n      if (feature instanceof ToolboxFeature) {\r\n        if (feature.render) {\r\n          feature.render(featureModel, ecModel, api, payload);\r\n        }\r\n      }\r\n    }\r\n\r\n    function createIconPaths(featureModel, feature, featureName) {\r\n      var iconStyleModel = featureModel.getModel('iconStyle');\r\n      var iconStyleEmphasisModel = featureModel.getModel(['emphasis', 'iconStyle']); // If one feature has mutiple icon. they are orginaized as\r\n      // {\r\n      //     icon: {\r\n      //         foo: '',\r\n      //         bar: ''\r\n      //     },\r\n      //     title: {\r\n      //         foo: '',\r\n      //         bar: ''\r\n      //     }\r\n      // }\r\n\r\n      var icons = feature instanceof ToolboxFeature && feature.getIcons ? feature.getIcons() : featureModel.get('icon');\r\n      var titles = featureModel.get('title') || {};\r\n      var iconsMap;\r\n      var titlesMap;\r\n\r\n      if (typeof icons === 'string') {\r\n        iconsMap = {};\r\n        iconsMap[featureName] = icons;\r\n      } else {\r\n        iconsMap = icons;\r\n      }\r\n\r\n      if (typeof titles === 'string') {\r\n        titlesMap = {};\r\n        titlesMap[featureName] = titles;\r\n      } else {\r\n        titlesMap = titles;\r\n      }\r\n\r\n      var iconPaths = featureModel.iconPaths = {};\r\n      zrUtil.each(iconsMap, function (iconStr, iconName) {\r\n        var path = graphic.createIcon(iconStr, {}, {\r\n          x: -itemSize / 2,\r\n          y: -itemSize / 2,\r\n          width: itemSize,\r\n          height: itemSize\r\n        }); // TODO handling image\r\n\r\n        path.setStyle(iconStyleModel.getItemStyle());\r\n        var pathEmphasisState = path.ensureState('emphasis');\r\n        pathEmphasisState.style = iconStyleEmphasisModel.getItemStyle(); // Text position calculation\r\n\r\n        var textContent = new ZRText({\r\n          style: {\r\n            text: titlesMap[iconName],\r\n            align: iconStyleEmphasisModel.get('textAlign'),\r\n            borderRadius: iconStyleEmphasisModel.get('textBorderRadius'),\r\n            padding: iconStyleEmphasisModel.get('textPadding'),\r\n            fill: null\r\n          },\r\n          ignore: true\r\n        });\r\n        path.setTextContent(textContent);\r\n        graphic.setTooltipConfig({\r\n          el: path,\r\n          componentModel: toolboxModel,\r\n          itemName: iconName,\r\n          formatterParamsExtra: {\r\n            title: titlesMap[iconName]\r\n          }\r\n        }); // graphic.enableHoverEmphasis(path);\r\n\r\n        path.__title = titlesMap[iconName];\r\n        path.on('mouseover', function () {\r\n          // Should not reuse above hoverStyle, which might be modified.\r\n          var hoverStyle = iconStyleEmphasisModel.getItemStyle();\r\n          var defaultTextPosition = toolboxModel.get('orient') === 'vertical' ? toolboxModel.get('right') == null ? 'right' : 'left' : toolboxModel.get('bottom') == null ? 'bottom' : 'top';\r\n          textContent.setStyle({\r\n            fill: iconStyleEmphasisModel.get('textFill') || hoverStyle.fill || hoverStyle.stroke || '#000',\r\n            backgroundColor: iconStyleEmphasisModel.get('textBackgroundColor')\r\n          });\r\n          path.setTextConfig({\r\n            position: iconStyleEmphasisModel.get('textPosition') || defaultTextPosition\r\n          });\r\n          textContent.ignore = !toolboxModel.get('showTitle'); // Use enterEmphasis and leaveEmphasis provide by ec.\r\n          // There are flags managed by the echarts.\r\n\r\n          enterEmphasis(this);\r\n        }).on('mouseout', function () {\r\n          if (featureModel.get(['iconStatus', iconName]) !== 'emphasis') {\r\n            leaveEmphasis(this);\r\n          }\r\n\r\n          textContent.hide();\r\n        });\r\n        (featureModel.get(['iconStatus', iconName]) === 'emphasis' ? enterEmphasis : leaveEmphasis)(path);\r\n        group.add(path);\r\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\r\n        iconPaths[iconName] = path;\r\n      });\r\n    }\r\n\r\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\r\n    // FIXME\r\n\r\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\r\n\r\n    group.eachChild(function (icon) {\r\n      var titleText = icon.__title; // const hoverStyle = icon.hoverStyle;\r\n      // TODO simplify code?\r\n\r\n      var emphasisState = icon.ensureState('emphasis');\r\n      var emphasisTextConfig = emphasisState.textConfig || (emphasisState.textConfig = {});\r\n      var textContent = icon.getTextContent();\r\n      var emphasisTextState = textContent && textContent.states.emphasis; // May be background element\r\n\r\n      if (emphasisTextState && !zrUtil.isFunction(emphasisTextState) && titleText) {\r\n        var emphasisTextStyle = emphasisTextState.style || (emphasisTextState.style = {});\r\n        var rect = textContain.getBoundingRect(titleText, ZRText.makeFont(emphasisTextStyle));\r\n        var offsetX = icon.x + group.x;\r\n        var offsetY = icon.y + group.y + itemSize;\r\n        var needPutOnTop = false;\r\n\r\n        if (offsetY + rect.height > api.getHeight()) {\r\n          emphasisTextConfig.position = 'top';\r\n          needPutOnTop = true;\r\n        }\r\n\r\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\r\n\r\n        if (offsetX + rect.width / 2 > api.getWidth()) {\r\n          emphasisTextConfig.position = ['100%', topOffset];\r\n          emphasisTextStyle.align = 'right';\r\n        } else if (offsetX - rect.width / 2 < 0) {\r\n          emphasisTextConfig.position = [0, topOffset];\r\n          emphasisTextStyle.align = 'left';\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  ToolboxView.prototype.updateView = function (toolboxModel, ecModel, api, payload) {\r\n    zrUtil.each(this._features, function (feature) {\r\n      feature instanceof ToolboxFeature && feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\r\n    });\r\n  }; // updateLayout(toolboxModel, ecModel, api, payload) {\r\n  //     zrUtil.each(this._features, function (feature) {\r\n  //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\r\n  //     });\r\n  // },\r\n\r\n\r\n  ToolboxView.prototype.remove = function (ecModel, api) {\r\n    zrUtil.each(this._features, function (feature) {\r\n      feature instanceof ToolboxFeature && feature.remove && feature.remove(ecModel, api);\r\n    });\r\n    this.group.removeAll();\r\n  };\r\n\r\n  ToolboxView.prototype.dispose = function (ecModel, api) {\r\n    zrUtil.each(this._features, function (feature) {\r\n      feature instanceof ToolboxFeature && feature.dispose && feature.dispose(ecModel, api);\r\n    });\r\n  };\r\n\r\n  ToolboxView.type = 'toolbox';\r\n  return ToolboxView;\r\n}(ComponentView);\r\n\r\nfunction isUserFeatureName(featureName) {\r\n  return featureName.indexOf('my') === 0;\r\n}\r\n\r\nexport default ToolboxView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\n/* global Uint8Array, document */\r\n\r\nimport env from 'zrender/lib/core/env';\r\nimport { ToolboxFeature } from '../featureManager';\r\n/* global window, document */\r\n\r\nvar SaveAsImage =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(SaveAsImage, _super);\r\n\r\n  function SaveAsImage() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  SaveAsImage.prototype.onclick = function (ecModel, api) {\r\n    var model = this.model;\r\n    var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\r\n    var isSvg = api.getZr().painter.getType() === 'svg';\r\n    var type = isSvg ? 'svg' : model.get('type', true) || 'png';\r\n    var url = api.getConnectedDataURL({\r\n      type: type,\r\n      backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\r\n      connectedBackgroundColor: model.get('connectedBackgroundColor'),\r\n      excludeComponents: model.get('excludeComponents'),\r\n      pixelRatio: model.get('pixelRatio')\r\n    }); // Chrome, Firefox, New Edge\r\n\r\n    if (typeof MouseEvent === 'function' && (env.browser.newEdge || !env.browser.ie && !env.browser.edge)) {\r\n      var $a = document.createElement('a');\r\n      $a.download = title + '.' + type;\r\n      $a.target = '_blank';\r\n      $a.href = url;\r\n      var evt = new MouseEvent('click', {\r\n        // some micro front-end framework\uFF0C window maybe is a Proxy\r\n        view: document.defaultView,\r\n        bubbles: true,\r\n        cancelable: false\r\n      });\r\n      $a.dispatchEvent(evt);\r\n    } // IE or old Edge\r\n    else {\r\n        if (window.navigator.msSaveOrOpenBlob || isSvg) {\r\n          var parts = url.split(','); // data:[<mime type>][;charset=<charset>][;base64],<encoded data>\r\n\r\n          var base64Encoded = parts[0].indexOf('base64') > -1;\r\n          var bstr = isSvg // should decode the svg data uri first\r\n          ? decodeURIComponent(parts[1]) : parts[1]; // only `atob` when the data uri is encoded with base64\r\n          // otherwise, like `svg` data uri exported by zrender,\r\n          // there will be an error, for it's not encoded with base64.\r\n          // (just a url-encoded string through `encodeURIComponent`)\r\n\r\n          base64Encoded && (bstr = window.atob(bstr));\r\n          var filename = title + '.' + type;\r\n\r\n          if (window.navigator.msSaveOrOpenBlob) {\r\n            var n = bstr.length;\r\n            var u8arr = new Uint8Array(n);\r\n\r\n            while (n--) {\r\n              u8arr[n] = bstr.charCodeAt(n);\r\n            }\r\n\r\n            var blob = new Blob([u8arr]);\r\n            window.navigator.msSaveOrOpenBlob(blob, filename);\r\n          } else {\r\n            var frame = document.createElement('iframe');\r\n            document.body.appendChild(frame);\r\n            var cw = frame.contentWindow;\r\n            var doc = cw.document;\r\n            doc.open('image/svg+xml', 'replace');\r\n            doc.write(bstr);\r\n            doc.close();\r\n            cw.focus();\r\n            doc.execCommand('SaveAs', true, filename);\r\n            document.body.removeChild(frame);\r\n          }\r\n        } else {\r\n          var lang = model.get('lang');\r\n          var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\r\n          var tab = window.open();\r\n          tab.document.write(html);\r\n          tab.document.title = title;\r\n        }\r\n      }\r\n  };\r\n\r\n  SaveAsImage.getDefaultOption = function (ecModel) {\r\n    var defaultOption = {\r\n      show: true,\r\n      icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\r\n      title: ecModel.getLocaleModel().get(['toolbox', 'saveAsImage', 'title']),\r\n      type: 'png',\r\n      // Default use option.backgroundColor\r\n      // backgroundColor: '#fff',\r\n      connectedBackgroundColor: '#fff',\r\n      name: '',\r\n      excludeComponents: ['toolbox'],\r\n      // use current pixel ratio of device by default\r\n      // pixelRatio: 1,\r\n      lang: ecModel.getLocaleModel().get(['toolbox', 'saveAsImage', 'lang'])\r\n    };\r\n    return defaultOption;\r\n  };\r\n\r\n  return SaveAsImage;\r\n}(ToolboxFeature);\r\n\r\nSaveAsImage.prototype.unusable = !env.canvasSupported;\r\nexport default SaveAsImage;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as echarts from '../../../core/echarts';\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { ToolboxFeature } from '../featureManager';\r\nimport { SINGLE_REFERRING } from '../../../util/model';\r\nvar INNER_STACK_KEYWORD = '__ec_magicType_stack__';\r\nvar ICON_TYPES = ['line', 'bar', 'stack']; // stack and tiled appears in pair for the title\r\n\r\nvar TITLE_TYPES = ['line', 'bar', 'stack', 'tiled'];\r\nvar radioTypes = [['line', 'bar'], ['stack']];\r\n\r\nvar MagicType =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(MagicType, _super);\r\n\r\n  function MagicType() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  MagicType.prototype.getIcons = function () {\r\n    var model = this.model;\r\n    var availableIcons = model.get('icon');\r\n    var icons = {};\r\n    zrUtil.each(model.get('type'), function (type) {\r\n      if (availableIcons[type]) {\r\n        icons[type] = availableIcons[type];\r\n      }\r\n    });\r\n    return icons;\r\n  };\r\n\r\n  MagicType.getDefaultOption = function (ecModel) {\r\n    var defaultOption = {\r\n      show: true,\r\n      type: [],\r\n      // Icon group\r\n      icon: {\r\n        line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\r\n        bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\r\n        // eslint-disable-next-line\r\n        stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z' // jshint ignore:line\r\n\r\n      },\r\n      // `line`, `bar`, `stack`, `tiled`\r\n      title: ecModel.getLocaleModel().get(['toolbox', 'magicType', 'title']),\r\n      option: {},\r\n      seriesIndex: {}\r\n    };\r\n    return defaultOption;\r\n  };\r\n\r\n  MagicType.prototype.onclick = function (ecModel, api, type) {\r\n    var model = this.model;\r\n    var seriesIndex = model.get(['seriesIndex', type]); // Not supported magicType\r\n\r\n    if (!seriesOptGenreator[type]) {\r\n      return;\r\n    }\r\n\r\n    var newOption = {\r\n      series: []\r\n    };\r\n\r\n    var generateNewSeriesTypes = function (seriesModel) {\r\n      var seriesType = seriesModel.subType;\r\n      var seriesId = seriesModel.id;\r\n      var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\r\n\r\n      if (newSeriesOpt) {\r\n        // PENDING If merge original option?\r\n        zrUtil.defaults(newSeriesOpt, seriesModel.option);\r\n        newOption.series.push(newSeriesOpt);\r\n      } // Modify boundaryGap\r\n\r\n\r\n      var coordSys = seriesModel.coordinateSystem;\r\n\r\n      if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\r\n        var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\r\n\r\n        if (categoryAxis) {\r\n          var axisDim = categoryAxis.dim;\r\n          var axisType = axisDim + 'Axis';\r\n          var axisModel = seriesModel.getReferringComponents(axisType, SINGLE_REFERRING).models[0];\r\n          var axisIndex = axisModel.componentIndex;\r\n          newOption[axisType] = newOption[axisType] || [];\r\n\r\n          for (var i = 0; i <= axisIndex; i++) {\r\n            newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\r\n          }\r\n\r\n          newOption[axisType][axisIndex].boundaryGap = type === 'bar';\r\n        }\r\n      }\r\n    };\r\n\r\n    zrUtil.each(radioTypes, function (radio) {\r\n      if (zrUtil.indexOf(radio, type) >= 0) {\r\n        zrUtil.each(radio, function (item) {\r\n          model.setIconStatus(item, 'normal');\r\n        });\r\n      }\r\n    });\r\n    model.setIconStatus(type, 'emphasis');\r\n    ecModel.eachComponent({\r\n      mainType: 'series',\r\n      query: seriesIndex == null ? null : {\r\n        seriesIndex: seriesIndex\r\n      }\r\n    }, generateNewSeriesTypes);\r\n    var newTitle;\r\n    var currentType = type; // Change title of stack\r\n\r\n    if (type === 'stack') {\r\n      // use titles in model instead of ecModel\r\n      // as stack and tiled appears in pair, just flip them\r\n      // no need of checking stack state\r\n      newTitle = zrUtil.merge({\r\n        stack: model.option.title.tiled,\r\n        tiled: model.option.title.stack\r\n      }, model.option.title);\r\n\r\n      if (model.get(['iconStatus', type]) !== 'emphasis') {\r\n        currentType = 'tiled';\r\n      }\r\n    }\r\n\r\n    api.dispatchAction({\r\n      type: 'changeMagicType',\r\n      currentType: currentType,\r\n      newOption: newOption,\r\n      newTitle: newTitle,\r\n      featureName: 'magicType'\r\n    });\r\n  };\r\n\r\n  return MagicType;\r\n}(ToolboxFeature);\r\n\r\nvar seriesOptGenreator = {\r\n  'line': function (seriesType, seriesId, seriesModel, model) {\r\n    if (seriesType === 'bar') {\r\n      return zrUtil.merge({\r\n        id: seriesId,\r\n        type: 'line',\r\n        // Preserve data related option\r\n        data: seriesModel.get('data'),\r\n        stack: seriesModel.get('stack'),\r\n        markPoint: seriesModel.get('markPoint'),\r\n        markLine: seriesModel.get('markLine')\r\n      }, model.get(['option', 'line']) || {}, true);\r\n    }\r\n  },\r\n  'bar': function (seriesType, seriesId, seriesModel, model) {\r\n    if (seriesType === 'line') {\r\n      return zrUtil.merge({\r\n        id: seriesId,\r\n        type: 'bar',\r\n        // Preserve data related option\r\n        data: seriesModel.get('data'),\r\n        stack: seriesModel.get('stack'),\r\n        markPoint: seriesModel.get('markPoint'),\r\n        markLine: seriesModel.get('markLine')\r\n      }, model.get(['option', 'bar']) || {}, true);\r\n    }\r\n  },\r\n  'stack': function (seriesType, seriesId, seriesModel, model) {\r\n    var isStack = seriesModel.get('stack') === INNER_STACK_KEYWORD;\r\n\r\n    if (seriesType === 'line' || seriesType === 'bar') {\r\n      model.setIconStatus('stack', isStack ? 'normal' : 'emphasis');\r\n      return zrUtil.merge({\r\n        id: seriesId,\r\n        stack: isStack ? '' : INNER_STACK_KEYWORD\r\n      }, model.get(['option', 'stack']) || {}, true);\r\n    }\r\n  }\r\n}; // TODO: SELF REGISTERED.\r\n\r\necharts.registerAction({\r\n  type: 'changeMagicType',\r\n  event: 'magicTypeChanged',\r\n  update: 'prepareAndUpdate'\r\n}, function (payload, ecModel) {\r\n  ecModel.mergeOption(payload.newOption);\r\n});\r\nexport default MagicType;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\n/* global document */\r\n\r\nimport * as echarts from '../../../core/echarts';\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { ToolboxFeature } from '../featureManager';\r\nimport { addEventListener } from 'zrender/lib/core/event';\r\n/* global document */\r\n\r\nvar BLOCK_SPLITER = new Array(60).join('-');\r\nvar ITEM_SPLITER = '\\t';\r\n/**\r\n * Group series into two types\r\n *  1. on category axis, like line, bar\r\n *  2. others, like scatter, pie\r\n */\r\n\r\nfunction groupSeries(ecModel) {\r\n  var seriesGroupByCategoryAxis = {};\r\n  var otherSeries = [];\r\n  var meta = [];\r\n  ecModel.eachRawSeries(function (seriesModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\r\n      // TODO: TYPE Consider polar? Include polar may increase unecessary bundle size.\r\n      var baseAxis = coordSys.getBaseAxis();\r\n\r\n      if (baseAxis.type === 'category') {\r\n        var key = baseAxis.dim + '_' + baseAxis.index;\r\n\r\n        if (!seriesGroupByCategoryAxis[key]) {\r\n          seriesGroupByCategoryAxis[key] = {\r\n            categoryAxis: baseAxis,\r\n            valueAxis: coordSys.getOtherAxis(baseAxis),\r\n            series: []\r\n          };\r\n          meta.push({\r\n            axisDim: baseAxis.dim,\r\n            axisIndex: baseAxis.index\r\n          });\r\n        }\r\n\r\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\r\n      } else {\r\n        otherSeries.push(seriesModel);\r\n      }\r\n    } else {\r\n      otherSeries.push(seriesModel);\r\n    }\r\n  });\r\n  return {\r\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\r\n    other: otherSeries,\r\n    meta: meta\r\n  };\r\n}\r\n/**\r\n * Assemble content of series on cateogory axis\r\n * @inner\r\n */\r\n\r\n\r\nfunction assembleSeriesWithCategoryAxis(groups) {\r\n  var tables = [];\r\n  zrUtil.each(groups, function (group, key) {\r\n    var categoryAxis = group.categoryAxis;\r\n    var valueAxis = group.valueAxis;\r\n    var valueAxisDim = valueAxis.dim;\r\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\r\n      return series.name;\r\n    })); // @ts-ignore TODO Polar\r\n\r\n    var columns = [categoryAxis.model.getCategories()];\r\n    zrUtil.each(group.series, function (series) {\r\n      var rawData = series.getRawData();\r\n      columns.push(series.getRawData().mapArray(rawData.mapDimension(valueAxisDim), function (val) {\r\n        return val;\r\n      }));\r\n    }); // Assemble table content\r\n\r\n    var lines = [headers.join(ITEM_SPLITER)];\r\n\r\n    for (var i = 0; i < columns[0].length; i++) {\r\n      var items = [];\r\n\r\n      for (var j = 0; j < columns.length; j++) {\r\n        items.push(columns[j][i]);\r\n      }\r\n\r\n      lines.push(items.join(ITEM_SPLITER));\r\n    }\r\n\r\n    tables.push(lines.join('\\n'));\r\n  });\r\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\r\n}\r\n/**\r\n * Assemble content of other series\r\n */\r\n\r\n\r\nfunction assembleOtherSeries(series) {\r\n  return zrUtil.map(series, function (series) {\r\n    var data = series.getRawData();\r\n    var lines = [series.name];\r\n    var vals = [];\r\n    data.each(data.dimensions, function () {\r\n      var argLen = arguments.length;\r\n      var dataIndex = arguments[argLen - 1];\r\n      var name = data.getName(dataIndex);\r\n\r\n      for (var i = 0; i < argLen - 1; i++) {\r\n        vals[i] = arguments[i];\r\n      }\r\n\r\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\r\n    });\r\n    return lines.join('\\n');\r\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\r\n}\r\n\r\nfunction getContentFromModel(ecModel) {\r\n  var result = groupSeries(ecModel);\r\n  return {\r\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\r\n      return !!str.replace(/[\\n\\t\\s]/g, '');\r\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\r\n    meta: result.meta\r\n  };\r\n}\r\n\r\nfunction trim(str) {\r\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\r\n}\r\n/**\r\n * If a block is tsv format\r\n */\r\n\r\n\r\nfunction isTSVFormat(block) {\r\n  // Simple method to find out if a block is tsv format\r\n  var firstLine = block.slice(0, block.indexOf('\\n'));\r\n\r\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\r\n    return true;\r\n  }\r\n}\r\n\r\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\r\n/**\r\n * @param {string} tsv\r\n * @return {Object}\r\n */\r\n\r\nfunction parseTSVContents(tsv) {\r\n  var tsvLines = tsv.split(/\\n+/g);\r\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\r\n  var categories = [];\r\n  var series = zrUtil.map(headers, function (header) {\r\n    return {\r\n      name: header,\r\n      data: []\r\n    };\r\n  });\r\n\r\n  for (var i = 0; i < tsvLines.length; i++) {\r\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\r\n    categories.push(items.shift());\r\n\r\n    for (var j = 0; j < items.length; j++) {\r\n      series[j] && (series[j].data[i] = items[j]);\r\n    }\r\n  }\r\n\r\n  return {\r\n    series: series,\r\n    categories: categories\r\n  };\r\n}\r\n\r\nfunction parseListContents(str) {\r\n  var lines = str.split(/\\n+/g);\r\n  var seriesName = trim(lines.shift());\r\n  var data = [];\r\n\r\n  for (var i = 0; i < lines.length; i++) {\r\n    // if line is empty, ignore it.\r\n    // there is a case that a user forgot to delete `\\n`.\r\n    var line = trim(lines[i]);\r\n\r\n    if (!line) {\r\n      continue;\r\n    }\r\n\r\n    var items = line.split(itemSplitRegex);\r\n    var name_1 = '';\r\n    var value = void 0;\r\n    var hasName = false;\r\n\r\n    if (isNaN(items[0])) {\r\n      // First item is name\r\n      hasName = true;\r\n      name_1 = items[0];\r\n      items = items.slice(1);\r\n      data[i] = {\r\n        name: name_1,\r\n        value: []\r\n      };\r\n      value = data[i].value;\r\n    } else {\r\n      value = data[i] = [];\r\n    }\r\n\r\n    for (var j = 0; j < items.length; j++) {\r\n      value.push(+items[j]);\r\n    }\r\n\r\n    if (value.length === 1) {\r\n      hasName ? data[i].value = value[0] : data[i] = value[0];\r\n    }\r\n  }\r\n\r\n  return {\r\n    name: seriesName,\r\n    data: data\r\n  };\r\n}\r\n\r\nfunction parseContents(str, blockMetaList) {\r\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\r\n  var newOption = {\r\n    series: []\r\n  };\r\n  zrUtil.each(blocks, function (block, idx) {\r\n    if (isTSVFormat(block)) {\r\n      var result = parseTSVContents(block);\r\n      var blockMeta = blockMetaList[idx];\r\n      var axisKey = blockMeta.axisDim + 'Axis';\r\n\r\n      if (blockMeta) {\r\n        newOption[axisKey] = newOption[axisKey] || [];\r\n        newOption[axisKey][blockMeta.axisIndex] = {\r\n          data: result.categories\r\n        };\r\n        newOption.series = newOption.series.concat(result.series);\r\n      }\r\n    } else {\r\n      var result = parseListContents(block);\r\n      newOption.series.push(result);\r\n    }\r\n  });\r\n  return newOption;\r\n}\r\n\r\nvar DataView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(DataView, _super);\r\n\r\n  function DataView() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  DataView.prototype.onclick = function (ecModel, api) {\r\n    var container = api.getDom();\r\n    var model = this.model;\r\n\r\n    if (this._dom) {\r\n      container.removeChild(this._dom);\r\n    }\r\n\r\n    var root = document.createElement('div');\r\n    root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\r\n    root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\r\n\r\n    var header = document.createElement('h4');\r\n    var lang = model.get('lang') || [];\r\n    header.innerHTML = lang[0] || model.get('title');\r\n    header.style.cssText = 'margin: 10px 20px;';\r\n    header.style.color = model.get('textColor');\r\n    var viewMain = document.createElement('div');\r\n    var textarea = document.createElement('textarea');\r\n    viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\r\n    var optionToContent = model.get('optionToContent');\r\n    var contentToOption = model.get('contentToOption');\r\n    var result = getContentFromModel(ecModel);\r\n\r\n    if (typeof optionToContent === 'function') {\r\n      var htmlOrDom = optionToContent(api.getOption());\r\n\r\n      if (typeof htmlOrDom === 'string') {\r\n        viewMain.innerHTML = htmlOrDom;\r\n      } else if (zrUtil.isDom(htmlOrDom)) {\r\n        viewMain.appendChild(htmlOrDom);\r\n      }\r\n    } else {\r\n      // Use default textarea\r\n      viewMain.appendChild(textarea);\r\n      textarea.readOnly = model.get('readOnly');\r\n      textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\r\n      textarea.style.color = model.get('textColor');\r\n      textarea.style.borderColor = model.get('textareaBorderColor');\r\n      textarea.style.backgroundColor = model.get('textareaColor');\r\n      textarea.value = result.value;\r\n    }\r\n\r\n    var blockMetaList = result.meta;\r\n    var buttonContainer = document.createElement('div');\r\n    buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\r\n    var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\r\n    var closeButton = document.createElement('div');\r\n    var refreshButton = document.createElement('div');\r\n    buttonStyle += ';background-color:' + model.get('buttonColor');\r\n    buttonStyle += ';color:' + model.get('buttonTextColor');\r\n    var self = this;\r\n\r\n    function close() {\r\n      container.removeChild(root);\r\n      self._dom = null;\r\n    }\r\n\r\n    addEventListener(closeButton, 'click', close);\r\n    addEventListener(refreshButton, 'click', function () {\r\n      if (contentToOption == null && optionToContent != null || contentToOption != null && optionToContent == null) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          // eslint-disable-next-line\r\n          console.warn('It seems you have just provided one of `contentToOption` and `optionToContent` functions but missed the other one. Data change is ignored.');\r\n        }\r\n\r\n        close();\r\n        return;\r\n      }\r\n\r\n      var newOption;\r\n\r\n      try {\r\n        if (typeof contentToOption === 'function') {\r\n          newOption = contentToOption(viewMain, api.getOption());\r\n        } else {\r\n          newOption = parseContents(textarea.value, blockMetaList);\r\n        }\r\n      } catch (e) {\r\n        close();\r\n        throw new Error('Data view format error ' + e);\r\n      }\r\n\r\n      if (newOption) {\r\n        api.dispatchAction({\r\n          type: 'changeDataView',\r\n          newOption: newOption\r\n        });\r\n      }\r\n\r\n      close();\r\n    });\r\n    closeButton.innerHTML = lang[1];\r\n    refreshButton.innerHTML = lang[2];\r\n    refreshButton.style.cssText = buttonStyle;\r\n    closeButton.style.cssText = buttonStyle;\r\n    !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\r\n    buttonContainer.appendChild(closeButton);\r\n    root.appendChild(header);\r\n    root.appendChild(viewMain);\r\n    root.appendChild(buttonContainer);\r\n    viewMain.style.height = container.clientHeight - 80 + 'px';\r\n    container.appendChild(root);\r\n    this._dom = root;\r\n  };\r\n\r\n  DataView.prototype.remove = function (ecModel, api) {\r\n    this._dom && api.getDom().removeChild(this._dom);\r\n  };\r\n\r\n  DataView.prototype.dispose = function (ecModel, api) {\r\n    this.remove(ecModel, api);\r\n  };\r\n\r\n  DataView.getDefaultOption = function (ecModel) {\r\n    var defaultOption = {\r\n      show: true,\r\n      readOnly: false,\r\n      optionToContent: null,\r\n      contentToOption: null,\r\n      // eslint-disable-next-line\r\n      icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\r\n      title: ecModel.getLocaleModel().get(['toolbox', 'dataView', 'title']),\r\n      lang: ecModel.getLocaleModel().get(['toolbox', 'dataView', 'lang']),\r\n      backgroundColor: '#fff',\r\n      textColor: '#000',\r\n      textareaColor: '#fff',\r\n      textareaBorderColor: '#333',\r\n      buttonColor: '#c23531',\r\n      buttonTextColor: '#fff'\r\n    };\r\n    return defaultOption;\r\n  };\r\n\r\n  return DataView;\r\n}(ToolboxFeature);\r\n/**\r\n * @inner\r\n */\r\n\r\n\r\nfunction tryMergeDataOption(newData, originalData) {\r\n  return zrUtil.map(newData, function (newVal, idx) {\r\n    var original = originalData && originalData[idx];\r\n\r\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\r\n      var newValIsObject = zrUtil.isObject(newVal) && !zrUtil.isArray(newVal);\r\n\r\n      if (!newValIsObject) {\r\n        newVal = {\r\n          value: newVal\r\n        };\r\n      } // original data has name but new data has no name\r\n\r\n\r\n      var shouldDeleteName = original.name != null && newVal.name == null; // Original data has option\r\n\r\n      newVal = zrUtil.defaults(newVal, original);\r\n      shouldDeleteName && delete newVal.name;\r\n      return newVal;\r\n    } else {\r\n      return newVal;\r\n    }\r\n  });\r\n} // TODO: SELF REGISTERED.\r\n\r\n\r\necharts.registerAction({\r\n  type: 'changeDataView',\r\n  event: 'dataViewChanged',\r\n  update: 'prepareAndUpdate'\r\n}, function (payload, ecModel) {\r\n  var newSeriesOptList = [];\r\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\r\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\r\n\r\n    if (!seriesModel) {\r\n      // New created series\r\n      // Geuss the series type\r\n      newSeriesOptList.push(zrUtil.extend({\r\n        // Default is scatter\r\n        type: 'scatter'\r\n      }, seriesOpt));\r\n    } else {\r\n      var originalData = seriesModel.get('data');\r\n      newSeriesOptList.push({\r\n        name: seriesOpt.name,\r\n        data: tryMergeDataOption(seriesOpt.data, originalData)\r\n      });\r\n    }\r\n  });\r\n  ecModel.mergeOption(zrUtil.defaults({\r\n    series: newSeriesOptList\r\n  }, payload.newOption));\r\n});\r\nexport default DataView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { makeInner } from '../../util/model';\r\nvar each = zrUtil.each;\r\nvar inner = makeInner();\r\n/**\r\n * @param ecModel\r\n * @param newSnapshot key is dataZoomId\r\n */\r\n\r\nexport function push(ecModel, newSnapshot) {\r\n  var storedSnapshots = getStoreSnapshots(ecModel); // If previous dataZoom can not be found,\r\n  // complete an range with current range.\r\n\r\n  each(newSnapshot, function (batchItem, dataZoomId) {\r\n    var i = storedSnapshots.length - 1;\r\n\r\n    for (; i >= 0; i--) {\r\n      var snapshot = storedSnapshots[i];\r\n\r\n      if (snapshot[dataZoomId]) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (i < 0) {\r\n      // No origin range set, create one by current range.\r\n      var dataZoomModel = ecModel.queryComponents({\r\n        mainType: 'dataZoom',\r\n        subType: 'select',\r\n        id: dataZoomId\r\n      })[0];\r\n\r\n      if (dataZoomModel) {\r\n        var percentRange = dataZoomModel.getPercentRange();\r\n        storedSnapshots[0][dataZoomId] = {\r\n          dataZoomId: dataZoomId,\r\n          start: percentRange[0],\r\n          end: percentRange[1]\r\n        };\r\n      }\r\n    }\r\n  });\r\n  storedSnapshots.push(newSnapshot);\r\n}\r\nexport function pop(ecModel) {\r\n  var storedSnapshots = getStoreSnapshots(ecModel);\r\n  var head = storedSnapshots[storedSnapshots.length - 1];\r\n  storedSnapshots.length > 1 && storedSnapshots.pop(); // Find top for all dataZoom.\r\n\r\n  var snapshot = {};\r\n  each(head, function (batchItem, dataZoomId) {\r\n    for (var i = storedSnapshots.length - 1; i >= 0; i--) {\r\n      batchItem = storedSnapshots[i][dataZoomId];\r\n\r\n      if (batchItem) {\r\n        snapshot[dataZoomId] = batchItem;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n  return snapshot;\r\n}\r\nexport function clear(ecModel) {\r\n  inner(ecModel).snapshots = null;\r\n}\r\nexport function count(ecModel) {\r\n  return getStoreSnapshots(ecModel).length;\r\n}\r\n/**\r\n * History length of each dataZoom may be different.\r\n * this._history[0] is used to store origin range.\r\n */\r\n\r\nfunction getStoreSnapshots(ecModel) {\r\n  var store = inner(ecModel);\r\n\r\n  if (!store.snapshots) {\r\n    store.snapshots = [{}];\r\n  }\r\n\r\n  return store.snapshots;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as echarts from '../../../core/echarts';\r\nimport * as history from '../../dataZoom/history';\r\nimport { ToolboxFeature } from '../featureManager';\r\n\r\nvar RestoreOption =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(RestoreOption, _super);\r\n\r\n  function RestoreOption() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  RestoreOption.prototype.onclick = function (ecModel, api) {\r\n    history.clear(ecModel);\r\n    api.dispatchAction({\r\n      type: 'restore',\r\n      from: this.uid\r\n    });\r\n  };\r\n\r\n  RestoreOption.getDefaultOption = function (ecModel) {\r\n    var defaultOption = {\r\n      show: true,\r\n      // eslint-disable-next-line\r\n      icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\r\n      title: ecModel.getLocaleModel().get(['toolbox', 'restore', 'title'])\r\n    };\r\n    return defaultOption;\r\n  };\r\n\r\n  return RestoreOption;\r\n}(ToolboxFeature); // TODO: SELF REGISTERED.\r\n\r\n\r\necharts.registerAction({\r\n  type: 'restore',\r\n  event: 'restore',\r\n  update: 'prepareAndUpdate'\r\n}, function (payload, ecModel) {\r\n  ecModel.resetOption('recreate');\r\n});\r\nexport default RestoreOption;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { each, indexOf, curry, assert, map, createHashMap } from 'zrender/lib/core/util';\r\nimport * as graphic from '../../util/graphic';\r\nimport * as brushHelper from './brushHelper';\r\nimport { parseFinder as modelUtilParseFinder } from '../../util/model'; // FIXME\r\n// how to genarialize to more coordinate systems.\r\n\r\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\r\n\r\nvar BrushTargetManager =\r\n/** @class */\r\nfunction () {\r\n  /**\r\n   * @param finder contains Index/Id/Name of xAxis/yAxis/geo/grid\r\n   *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\r\n   * @param opt.include include coordinate system types.\r\n   */\r\n  function BrushTargetManager(finder, ecModel, opt) {\r\n    var _this = this;\r\n\r\n    this._targetInfoList = [];\r\n    var foundCpts = parseFinder(ecModel, finder);\r\n    each(targetInfoBuilders, function (builder, type) {\r\n      if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\r\n        builder(foundCpts, _this._targetInfoList);\r\n      }\r\n    });\r\n  }\r\n\r\n  BrushTargetManager.prototype.setOutputRanges = function (areas, ecModel) {\r\n    this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\r\n      (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\r\n\r\n      if (!area.coordRange) {\r\n        area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\r\n        // rebuild range by coordRange accrately, which may bring trouble when\r\n        // brushing only one item. So we use __rangeOffset to rebuilding range\r\n        // by coordRange. And this it only used in brush component so it is no\r\n        // need to be adapted to coordRanges.\r\n\r\n        var result = coordConvert[area.brushType](0, coordSys, coordRange);\r\n        area.__rangeOffset = {\r\n          offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\r\n          xyMinMax: result.xyMinMax\r\n        };\r\n      }\r\n    });\r\n    return areas;\r\n  };\r\n\r\n  BrushTargetManager.prototype.matchOutputRanges = function (areas, ecModel, cb) {\r\n    each(areas, function (area) {\r\n      var targetInfo = this.findTargetInfo(area, ecModel);\r\n\r\n      if (targetInfo && targetInfo !== true) {\r\n        each(targetInfo.coordSyses, function (coordSys) {\r\n          var result = coordConvert[area.brushType](1, coordSys, area.range, true);\r\n          cb(area, result.values, coordSys, ecModel);\r\n        });\r\n      }\r\n    }, this);\r\n  };\r\n  /**\r\n   * the `areas` is `BrushModel.areas`.\r\n   * Called in layout stage.\r\n   * convert `area.coordRange` to global range and set panelId to `area.range`.\r\n   */\r\n\r\n\r\n  BrushTargetManager.prototype.setInputRanges = function (areas, ecModel) {\r\n    each(areas, function (area) {\r\n      var targetInfo = this.findTargetInfo(area, ecModel);\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        assert(!targetInfo || targetInfo === true || area.coordRange, 'coordRange must be specified when coord index specified.');\r\n        assert(!targetInfo || targetInfo !== true || area.range, 'range must be specified in global brush.');\r\n      }\r\n\r\n      area.range = area.range || []; // convert coordRange to global range and set panelId.\r\n\r\n      if (targetInfo && targetInfo !== true) {\r\n        area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\r\n        // not keep its original value, for the sake of the dataZoom scenario,\r\n        // where area.coordRange remains unchanged but area.range may be changed.\r\n        // (2) Only support converting one coordRange to pixel range in brush\r\n        // component. So do not consider `coordRanges`.\r\n        // (3) About __rangeOffset, see comment above.\r\n\r\n        var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\r\n        var rangeOffset = area.__rangeOffset;\r\n        area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\r\n      }\r\n    }, this);\r\n  };\r\n\r\n  BrushTargetManager.prototype.makePanelOpts = function (api, getDefaultBrushType) {\r\n    return map(this._targetInfoList, function (targetInfo) {\r\n      var rect = targetInfo.getPanelRect();\r\n      return {\r\n        panelId: targetInfo.panelId,\r\n        defaultBrushType: getDefaultBrushType ? getDefaultBrushType(targetInfo) : null,\r\n        clipPath: brushHelper.makeRectPanelClipPath(rect),\r\n        isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\r\n        getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\r\n      };\r\n    });\r\n  };\r\n\r\n  BrushTargetManager.prototype.controlSeries = function (area, seriesModel, ecModel) {\r\n    // Check whether area is bound in coord, and series do not belong to that coord.\r\n    // If do not do this check, some brush (like lineX) will controll all axes.\r\n    var targetInfo = this.findTargetInfo(area, ecModel);\r\n    return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\r\n  };\r\n  /**\r\n   * If return Object, a coord found.\r\n   * If reutrn true, global found.\r\n   * Otherwise nothing found.\r\n   */\r\n\r\n\r\n  BrushTargetManager.prototype.findTargetInfo = function (area, ecModel) {\r\n    var targetInfoList = this._targetInfoList;\r\n    var foundCpts = parseFinder(ecModel, area);\r\n\r\n    for (var i = 0; i < targetInfoList.length; i++) {\r\n      var targetInfo = targetInfoList[i];\r\n      var areaPanelId = area.panelId;\r\n\r\n      if (areaPanelId) {\r\n        if (targetInfo.panelId === areaPanelId) {\r\n          return targetInfo;\r\n        }\r\n      } else {\r\n        for (var j = 0; j < targetInfoMatchers.length; j++) {\r\n          if (targetInfoMatchers[j](foundCpts, targetInfo)) {\r\n            return targetInfo;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return BrushTargetManager;\r\n}();\r\n\r\nfunction formatMinMax(minMax) {\r\n  minMax[0] > minMax[1] && minMax.reverse();\r\n  return minMax;\r\n}\r\n\r\nfunction parseFinder(ecModel, finder) {\r\n  return modelUtilParseFinder(ecModel, finder, {\r\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\r\n  });\r\n}\r\n\r\nvar targetInfoBuilders = {\r\n  grid: function (foundCpts, targetInfoList) {\r\n    var xAxisModels = foundCpts.xAxisModels;\r\n    var yAxisModels = foundCpts.yAxisModels;\r\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\r\n\r\n    var gridModelMap = createHashMap();\r\n    var xAxesHas = {};\r\n    var yAxesHas = {};\r\n\r\n    if (!xAxisModels && !yAxisModels && !gridModels) {\r\n      return;\r\n    }\r\n\r\n    each(xAxisModels, function (axisModel) {\r\n      var gridModel = axisModel.axis.grid.model;\r\n      gridModelMap.set(gridModel.id, gridModel);\r\n      xAxesHas[gridModel.id] = true;\r\n    });\r\n    each(yAxisModels, function (axisModel) {\r\n      var gridModel = axisModel.axis.grid.model;\r\n      gridModelMap.set(gridModel.id, gridModel);\r\n      yAxesHas[gridModel.id] = true;\r\n    });\r\n    each(gridModels, function (gridModel) {\r\n      gridModelMap.set(gridModel.id, gridModel);\r\n      xAxesHas[gridModel.id] = true;\r\n      yAxesHas[gridModel.id] = true;\r\n    });\r\n    gridModelMap.each(function (gridModel) {\r\n      var grid = gridModel.coordinateSystem;\r\n      var cartesians = [];\r\n      each(grid.getCartesians(), function (cartesian, index) {\r\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\r\n          cartesians.push(cartesian);\r\n        }\r\n      });\r\n      targetInfoList.push({\r\n        panelId: 'grid--' + gridModel.id,\r\n        gridModel: gridModel,\r\n        coordSysModel: gridModel,\r\n        // Use the first one as the representitive coordSys.\r\n        coordSys: cartesians[0],\r\n        coordSyses: cartesians,\r\n        getPanelRect: panelRectBuilders.grid,\r\n        xAxisDeclared: xAxesHas[gridModel.id],\r\n        yAxisDeclared: yAxesHas[gridModel.id]\r\n      });\r\n    });\r\n  },\r\n  geo: function (foundCpts, targetInfoList) {\r\n    each(foundCpts.geoModels, function (geoModel) {\r\n      var coordSys = geoModel.coordinateSystem;\r\n      targetInfoList.push({\r\n        panelId: 'geo--' + geoModel.id,\r\n        geoModel: geoModel,\r\n        coordSysModel: geoModel,\r\n        coordSys: coordSys,\r\n        coordSyses: [coordSys],\r\n        getPanelRect: panelRectBuilders.geo\r\n      });\r\n    });\r\n  }\r\n};\r\nvar targetInfoMatchers = [// grid\r\nfunction (foundCpts, targetInfo) {\r\n  var xAxisModel = foundCpts.xAxisModel;\r\n  var yAxisModel = foundCpts.yAxisModel;\r\n  var gridModel = foundCpts.gridModel;\r\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\r\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\r\n  return gridModel && gridModel === targetInfo.gridModel;\r\n}, // geo\r\nfunction (foundCpts, targetInfo) {\r\n  var geoModel = foundCpts.geoModel;\r\n  return geoModel && geoModel === targetInfo.geoModel;\r\n}];\r\nvar panelRectBuilders = {\r\n  grid: function () {\r\n    // grid is not Transformable.\r\n    return this.coordSys.master.getRect().clone();\r\n  },\r\n  geo: function () {\r\n    var coordSys = this.coordSys;\r\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\r\n\r\n    rect.applyTransform(graphic.getTransform(coordSys));\r\n    return rect;\r\n  }\r\n};\r\nvar coordConvert = {\r\n  lineX: curry(axisConvert, 0),\r\n  lineY: curry(axisConvert, 1),\r\n  rect: function (to, coordSys, rangeOrCoordRange, clamp) {\r\n    var xminymin = to ? coordSys.pointToData([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]], clamp) : coordSys.dataToPoint([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]], clamp);\r\n    var xmaxymax = to ? coordSys.pointToData([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]], clamp) : coordSys.dataToPoint([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]], clamp);\r\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\r\n    return {\r\n      values: values,\r\n      xyMinMax: values\r\n    };\r\n  },\r\n  polygon: function (to, coordSys, rangeOrCoordRange, clamp) {\r\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\r\n    var values = map(rangeOrCoordRange, function (item) {\r\n      var p = to ? coordSys.pointToData(item, clamp) : coordSys.dataToPoint(item, clamp);\r\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\r\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\r\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\r\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\r\n      return p;\r\n    });\r\n    return {\r\n      values: values,\r\n      xyMinMax: xyMinMax\r\n    };\r\n  }\r\n};\r\n\r\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    assert(coordSys.type === 'cartesian2d', 'lineX/lineY brush is available only in cartesian2d.');\r\n  }\r\n\r\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\r\n  var values = formatMinMax(map([0, 1], function (i) {\r\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i]), true) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\r\n  }));\r\n  var xyMinMax = [];\r\n  xyMinMax[axisNameIndex] = values;\r\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\r\n  return {\r\n    values: values,\r\n    xyMinMax: xyMinMax\r\n  };\r\n}\r\n\r\nvar diffProcessor = {\r\n  lineX: curry(axisDiffProcessor, 0),\r\n  lineY: curry(axisDiffProcessor, 1),\r\n  rect: function (values, refer, scales) {\r\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\r\n  },\r\n  polygon: function (values, refer, scales) {\r\n    return map(values, function (item, idx) {\r\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\r\n    });\r\n  }\r\n};\r\n\r\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\r\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\r\n} // We have to process scale caused by dataZoom manually,\r\n// although it might be not accurate.\r\n// Return [0~1, 0~1]\r\n\r\n\r\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\r\n  var sizeCurr = getSize(xyMinMaxCurr);\r\n  var sizeOrigin = getSize(xyMinMaxOrigin);\r\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\r\n  isNaN(scales[0]) && (scales[0] = 1);\r\n  isNaN(scales[1]) && (scales[1] = 1);\r\n  return scales;\r\n}\r\n\r\nfunction getSize(xyMinMax) {\r\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\r\n}\r\n\r\nexport default BrushTargetManager;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\"; // TODO depends on DataZoom and Brush\r\n\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport BrushController from '../../helper/BrushController';\r\nimport BrushTargetManager from '../../helper/BrushTargetManager';\r\nimport * as history from '../../dataZoom/history';\r\nimport sliderMove from '../../helper/sliderMove';\r\nimport { ToolboxFeature } from '../featureManager';\r\nimport { makeInternalComponentId, parseFinder } from '../../../util/model';\r\nimport { registerInternalOptionCreator } from '../../../model/internalComponentCreator';\r\nvar each = zrUtil.each;\r\nvar DATA_ZOOM_ID_BASE = makeInternalComponentId('toolbox-dataZoom_');\r\nvar ICON_TYPES = ['zoom', 'back'];\r\n\r\nvar DataZoomFeature =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(DataZoomFeature, _super);\r\n\r\n  function DataZoomFeature() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  DataZoomFeature.prototype.render = function (featureModel, ecModel, api, payload) {\r\n    if (!this._brushController) {\r\n      this._brushController = new BrushController(api.getZr());\r\n\r\n      this._brushController.on('brush', zrUtil.bind(this._onBrush, this)).mount();\r\n    }\r\n\r\n    updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\r\n    updateBackBtnStatus(featureModel, ecModel);\r\n  };\r\n\r\n  DataZoomFeature.prototype.onclick = function (ecModel, api, type) {\r\n    handlers[type].call(this);\r\n  };\r\n\r\n  DataZoomFeature.prototype.remove = function (ecModel, api) {\r\n    this._brushController && this._brushController.unmount();\r\n  };\r\n\r\n  DataZoomFeature.prototype.dispose = function (ecModel, api) {\r\n    this._brushController && this._brushController.dispose();\r\n  };\r\n\r\n  DataZoomFeature.prototype._onBrush = function (eventParam) {\r\n    var areas = eventParam.areas;\r\n\r\n    if (!eventParam.isEnd || !areas.length) {\r\n      return;\r\n    }\r\n\r\n    var snapshot = {};\r\n    var ecModel = this.ecModel;\r\n\r\n    this._brushController.updateCovers([]); // remove cover\r\n\r\n\r\n    var brushTargetManager = new BrushTargetManager(makeAxisFinder(this.model), ecModel, {\r\n      include: ['grid']\r\n    });\r\n    brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\r\n      if (coordSys.type !== 'cartesian2d') {\r\n        return;\r\n      }\r\n\r\n      var brushType = area.brushType;\r\n\r\n      if (brushType === 'rect') {\r\n        setBatch('x', coordSys, coordRange[0]);\r\n        setBatch('y', coordSys, coordRange[1]);\r\n      } else {\r\n        setBatch({\r\n          lineX: 'x',\r\n          lineY: 'y'\r\n        }[brushType], coordSys, coordRange);\r\n      }\r\n    });\r\n    history.push(ecModel, snapshot);\r\n\r\n    this._dispatchZoomAction(snapshot);\r\n\r\n    function setBatch(dimName, coordSys, minMax) {\r\n      var axis = coordSys.getAxis(dimName);\r\n      var axisModel = axis.model;\r\n      var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\r\n\r\n      var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\r\n\r\n      if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\r\n        minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\r\n      }\r\n\r\n      dataZoomModel && (snapshot[dataZoomModel.id] = {\r\n        dataZoomId: dataZoomModel.id,\r\n        startValue: minMax[0],\r\n        endValue: minMax[1]\r\n      });\r\n    }\r\n\r\n    function findDataZoom(dimName, axisModel, ecModel) {\r\n      var found;\r\n      ecModel.eachComponent({\r\n        mainType: 'dataZoom',\r\n        subType: 'select'\r\n      }, function (dzModel) {\r\n        var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\r\n        has && (found = dzModel);\r\n      });\r\n      return found;\r\n    }\r\n  };\r\n\r\n  ;\r\n\r\n  DataZoomFeature.prototype._dispatchZoomAction = function (snapshot) {\r\n    var batch = []; // Convert from hash map to array.\r\n\r\n    each(snapshot, function (batchItem, dataZoomId) {\r\n      batch.push(zrUtil.clone(batchItem));\r\n    });\r\n    batch.length && this.api.dispatchAction({\r\n      type: 'dataZoom',\r\n      from: this.uid,\r\n      batch: batch\r\n    });\r\n  };\r\n\r\n  DataZoomFeature.getDefaultOption = function (ecModel) {\r\n    var defaultOption = {\r\n      show: true,\r\n      filterMode: 'filter',\r\n      // Icon group\r\n      icon: {\r\n        zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\r\n        back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\r\n      },\r\n      // `zoom`, `back`\r\n      title: ecModel.getLocaleModel().get(['toolbox', 'dataZoom', 'title']),\r\n      brushStyle: {\r\n        borderWidth: 0,\r\n        color: 'rgba(210,219,238,0.2)'\r\n      }\r\n    };\r\n    return defaultOption;\r\n  };\r\n\r\n  return DataZoomFeature;\r\n}(ToolboxFeature);\r\n\r\nvar handlers = {\r\n  zoom: function () {\r\n    var nextActive = !this._isZoomActive;\r\n    this.api.dispatchAction({\r\n      type: 'takeGlobalCursor',\r\n      key: 'dataZoomSelect',\r\n      dataZoomSelectActive: nextActive\r\n    });\r\n  },\r\n  back: function () {\r\n    this._dispatchZoomAction(history.pop(this.ecModel));\r\n  }\r\n};\r\n\r\nfunction makeAxisFinder(dzFeatureModel) {\r\n  var setting = {\r\n    xAxisIndex: dzFeatureModel.get('xAxisIndex', true),\r\n    yAxisIndex: dzFeatureModel.get('yAxisIndex', true),\r\n    xAxisId: dzFeatureModel.get('xAxisId', true),\r\n    yAxisId: dzFeatureModel.get('yAxisId', true)\r\n  }; // If both `xAxisIndex` `xAxisId` not set, it means 'all'.\r\n  // If both `yAxisIndex` `yAxisId` not set, it means 'all'.\r\n  // Some old cases set like this below to close yAxis control but leave xAxis control:\r\n  // `{ feature: { dataZoom: { yAxisIndex: false } }`.\r\n\r\n  if (setting.xAxisIndex == null && setting.xAxisId == null) {\r\n    setting.xAxisIndex = 'all';\r\n  }\r\n\r\n  if (setting.yAxisIndex == null && setting.yAxisId == null) {\r\n    setting.yAxisIndex = 'all';\r\n  }\r\n\r\n  return setting;\r\n}\r\n\r\nfunction updateBackBtnStatus(featureModel, ecModel) {\r\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\r\n}\r\n\r\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\r\n  var zoomActive = view._isZoomActive;\r\n\r\n  if (payload && payload.type === 'takeGlobalCursor') {\r\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\r\n  }\r\n\r\n  view._isZoomActive = zoomActive;\r\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\r\n  var brushTargetManager = new BrushTargetManager(makeAxisFinder(featureModel), ecModel, {\r\n    include: ['grid']\r\n  });\r\n  var panels = brushTargetManager.makePanelOpts(api, function (targetInfo) {\r\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\r\n  });\r\n\r\n  view._brushController.setPanels(panels).enableBrush(zoomActive && panels.length ? {\r\n    brushType: 'auto',\r\n    brushStyle: featureModel.getModel('brushStyle').getItemStyle()\r\n  } : false);\r\n}\r\n\r\nregisterInternalOptionCreator('dataZoom', function (ecModel) {\r\n  var toolboxModel = ecModel.getComponent('toolbox', 0);\r\n  var featureDataZoomPath = ['feature', 'dataZoom'];\r\n\r\n  if (!toolboxModel || toolboxModel.get(featureDataZoomPath) == null) {\r\n    return;\r\n  }\r\n\r\n  var dzFeatureModel = toolboxModel.getModel(featureDataZoomPath);\r\n  var dzOptions = [];\r\n  var finder = makeAxisFinder(dzFeatureModel);\r\n  var finderResult = parseFinder(ecModel, finder);\r\n  each(finderResult.xAxisModels, function (axisModel) {\r\n    return buildInternalOptions(axisModel, 'xAxis', 'xAxisIndex');\r\n  });\r\n  each(finderResult.yAxisModels, function (axisModel) {\r\n    return buildInternalOptions(axisModel, 'yAxis', 'yAxisIndex');\r\n  });\r\n\r\n  function buildInternalOptions(axisModel, axisMainType, axisIndexPropName) {\r\n    var axisIndex = axisModel.componentIndex;\r\n    var newOpt = {\r\n      type: 'select',\r\n      $fromToolbox: true,\r\n      // Default to be filter\r\n      filterMode: dzFeatureModel.get('filterMode', true) || 'filter',\r\n      // Id for merge mapping.\r\n      id: DATA_ZOOM_ID_BASE + axisMainType + axisIndex\r\n    };\r\n    newOpt[axisIndexPropName] = axisIndex;\r\n    dzOptions.push(newOpt);\r\n  }\r\n\r\n  return dzOptions;\r\n});\r\nexport default DataZoomFeature;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { use } from '../../extension';\r\nimport { install as installDataZoomSelect } from '../../component/dataZoom/installDataZoomSelect';\r\nimport ToolboxModel from './ToolboxModel';\r\nimport ToolboxView from './ToolboxView'; // TODOD: REGISTER IN INSTALL\r\n\r\nimport { registerFeature } from './featureManager';\r\nimport SaveAsImage from './feature/SaveAsImage';\r\nimport MagicType from './feature/MagicType';\r\nimport DataView from './feature/DataView';\r\nimport Restore from './feature/Restore';\r\nimport DataZoom from './feature/DataZoom';\r\nexport function install(registers) {\r\n  registers.registerComponentModel(ToolboxModel);\r\n  registers.registerComponentView(ToolboxView);\r\n  registerFeature('saveAsImage', SaveAsImage);\r\n  registerFeature('magicType', MagicType);\r\n  registerFeature('dataView', DataView);\r\n  registerFeature('dataZoom', DataZoom);\r\n  registerFeature('restore', Restore);\r\n  use(installDataZoomSelect);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport ComponentModel from '../../model/Component';\r\n\r\nvar TooltipModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(TooltipModel, _super);\r\n\r\n  function TooltipModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = TooltipModel.type;\r\n    return _this;\r\n  }\r\n\r\n  TooltipModel.type = 'tooltip';\r\n  TooltipModel.dependencies = ['axisPointer'];\r\n  TooltipModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 60,\r\n    show: true,\r\n    // tooltip main content\r\n    showContent: true,\r\n    // 'trigger' only works on coordinate system.\r\n    // 'item' | 'axis' | 'none'\r\n    trigger: 'item',\r\n    // 'click' | 'mousemove' | 'none'\r\n    triggerOn: 'mousemove|click',\r\n    alwaysShowContent: false,\r\n    displayMode: 'single',\r\n    renderMode: 'auto',\r\n    // whether restraint content inside viewRect.\r\n    // If renderMode: 'richText', default true.\r\n    // If renderMode: 'html', defaut false (for backward compat).\r\n    confine: null,\r\n    showDelay: 0,\r\n    hideDelay: 100,\r\n    // Animation transition time, unit is second\r\n    transitionDuration: 0.4,\r\n    enterable: false,\r\n    backgroundColor: '#fff',\r\n    // box shadow\r\n    shadowBlur: 10,\r\n    shadowColor: 'rgba(0, 0, 0, .2)',\r\n    shadowOffsetX: 1,\r\n    shadowOffsetY: 2,\r\n    // tooltip border radius, unit is px, default is 4\r\n    borderRadius: 4,\r\n    // tooltip border width, unit is px, default is 0 (no border)\r\n    borderWidth: 1,\r\n    // Tooltip inside padding, default is 5 for all direction\r\n    // Array is allowed to set up, right, bottom, left, same with css\r\n    // The default value: See `tooltip/tooltipMarkup.ts#getPaddingFromTooltipModel`.\r\n    padding: null,\r\n    // Extra css text\r\n    extraCssText: '',\r\n    // axis indicator, trigger by axis\r\n    axisPointer: {\r\n      // default is line\r\n      // legal values: 'line' | 'shadow' | 'cross'\r\n      type: 'line',\r\n      // Valid when type is line, appoint tooltip line locate on which line. Optional\r\n      // legal values: 'x' | 'y' | 'angle' | 'radius' | 'auto'\r\n      // default is 'auto', chose the axis which type is category.\r\n      // for multiply y axis, cartesian coord chose x axis, polar chose angle axis\r\n      axis: 'auto',\r\n      animation: 'auto',\r\n      animationDurationUpdate: 200,\r\n      animationEasingUpdate: 'exponentialOut',\r\n      crossStyle: {\r\n        color: '#999',\r\n        width: 1,\r\n        type: 'dashed',\r\n        // TODO formatter\r\n        textStyle: {}\r\n      } // lineStyle and shadowStyle should not be specified here,\r\n      // otherwise it will always override those styles on option.axisPointer.\r\n\r\n    },\r\n    textStyle: {\r\n      color: '#666',\r\n      fontSize: 14\r\n    }\r\n  };\r\n  return TooltipModel;\r\n}(ComponentModel);\r\n\r\nexport default TooltipModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { toCamelCase } from '../../util/format';\r\nimport env from 'zrender/lib/core/env';\r\n/* global document */\r\n\r\nexport function shouldTooltipConfine(tooltipModel) {\r\n  var confineOption = tooltipModel.get('confine');\r\n  return confineOption != null ? !!confineOption // In richText mode, the outside part can not be visible.\r\n  : tooltipModel.get('renderMode') === 'richText';\r\n}\r\n\r\nfunction testStyle(styleProps) {\r\n  if (!env.domSupported) {\r\n    return;\r\n  }\r\n\r\n  var style = document.documentElement.style;\r\n\r\n  for (var i = 0, len = styleProps.length; i < len; i++) {\r\n    if (styleProps[i] in style) {\r\n      return styleProps[i];\r\n    }\r\n  }\r\n}\r\n\r\nexport var TRANSFORM_VENDOR = testStyle(['transform', 'webkitTransform', 'OTransform', 'MozTransform', 'msTransform']);\r\nexport var TRANSITION_VENDOR = testStyle(['webkitTransition', 'transition', 'OTransition', 'MozTransition', 'msTransition']);\r\nexport function toCSSVendorPrefix(styleVendor, styleProp) {\r\n  if (!styleVendor) {\r\n    return styleProp;\r\n  }\r\n\r\n  styleProp = toCamelCase(styleProp, true);\r\n  var idx = styleVendor.indexOf(styleProp);\r\n  styleVendor = idx === -1 ? styleProp : \"-\" + styleVendor.slice(0, idx) + \"-\" + styleProp;\r\n  return styleVendor.toLowerCase();\r\n}\r\nexport function getComputedStyle(el, style) {\r\n  var stl = el.currentStyle || document.defaultView && document.defaultView.getComputedStyle(el);\r\n  return stl ? style ? stl[style] : stl : null;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { isString, indexOf, each, bind, isArray, isDom } from 'zrender/lib/core/util';\r\nimport { toHex } from 'zrender/lib/tool/color';\r\nimport { normalizeEvent } from 'zrender/lib/core/event';\r\nimport { transformLocalCoord } from 'zrender/lib/core/dom';\r\nimport env from 'zrender/lib/core/env';\r\nimport { convertToColorString, toCamelCase, normalizeCssArray } from '../../util/format';\r\nimport { shouldTooltipConfine, toCSSVendorPrefix, getComputedStyle, TRANSFORM_VENDOR, TRANSITION_VENDOR } from './helper';\r\nimport { getPaddingFromTooltipModel } from './tooltipMarkup';\r\n/* global document, window */\r\n\r\nvar CSS_TRANSITION_VENDOR = toCSSVendorPrefix(TRANSITION_VENDOR, 'transition');\r\nvar CSS_TRANSFORM_VENDOR = toCSSVendorPrefix(TRANSFORM_VENDOR, 'transform'); // eslint-disable-next-line\r\n\r\nvar gCssText = \"position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;\" + (env.transform3dSupported ? 'will-change:transform;' : '');\r\n\r\nfunction mirrorPos(pos) {\r\n  pos = pos === 'left' ? 'right' : pos === 'right' ? 'left' : pos === 'top' ? 'bottom' : 'top';\r\n  return pos;\r\n}\r\n\r\nfunction assembleArrow(tooltipModel, borderColor, arrowPosition) {\r\n  if (!isString(arrowPosition) || arrowPosition === 'inside') {\r\n    return '';\r\n  }\r\n\r\n  var backgroundColor = tooltipModel.get('backgroundColor');\r\n  var borderWidth = tooltipModel.get('borderWidth');\r\n  borderColor = convertToColorString(borderColor);\r\n  var arrowPos = mirrorPos(arrowPosition);\r\n  var arrowSize = Math.max(Math.round(borderWidth) * 1.5, 6);\r\n  var positionStyle = '';\r\n  var transformStyle = CSS_TRANSFORM_VENDOR + ':';\r\n  var rotateDeg;\r\n\r\n  if (indexOf(['left', 'right'], arrowPos) > -1) {\r\n    positionStyle += 'top:50%';\r\n    transformStyle += \"translateY(-50%) rotate(\" + (rotateDeg = arrowPos === 'left' ? -225 : -45) + \"deg)\";\r\n  } else {\r\n    positionStyle += 'left:50%';\r\n    transformStyle += \"translateX(-50%) rotate(\" + (rotateDeg = arrowPos === 'top' ? 225 : 45) + \"deg)\";\r\n  }\r\n\r\n  var rotateRadian = rotateDeg * Math.PI / 180;\r\n  var arrowWH = arrowSize + borderWidth;\r\n  var rotatedWH = arrowWH * Math.abs(Math.cos(rotateRadian)) + arrowWH * Math.abs(Math.sin(rotateRadian));\r\n  var arrowOffset = Math.round(((rotatedWH - Math.SQRT2 * borderWidth) / 2 + Math.SQRT2 * borderWidth - (rotatedWH - arrowWH) / 2) * 100) / 100;\r\n  positionStyle += \";\" + arrowPos + \":-\" + arrowOffset + \"px\";\r\n  var borderStyle = borderColor + \" solid \" + borderWidth + \"px;\";\r\n  var styleCss = [\"position:absolute;width:\" + arrowSize + \"px;height:\" + arrowSize + \"px;\", positionStyle + \";\" + transformStyle + \";\", \"border-bottom:\" + borderStyle, \"border-right:\" + borderStyle, \"background-color:\" + backgroundColor + \";\"];\r\n  return \"<div style=\\\"\" + styleCss.join('') + \"\\\"></div>\";\r\n}\r\n\r\nfunction assembleTransition(duration, onlyFade) {\r\n  var transitionCurve = 'cubic-bezier(0.23,1,0.32,1)';\r\n  var transitionOption = \" \" + duration / 2 + \"s \" + transitionCurve;\r\n  var transitionText = \"opacity\" + transitionOption + \",visibility\" + transitionOption;\r\n\r\n  if (!onlyFade) {\r\n    transitionOption = \" \" + duration + \"s \" + transitionCurve;\r\n    transitionText += env.transformSupported ? \",\" + CSS_TRANSFORM_VENDOR + transitionOption : \",left\" + transitionOption + \",top\" + transitionOption;\r\n  }\r\n\r\n  return CSS_TRANSITION_VENDOR + ':' + transitionText;\r\n}\r\n\r\nfunction assembleTransform(x, y, toString) {\r\n  // If using float on style, the final width of the dom might\r\n  // keep changing slightly while mouse move. So `toFixed(0)` them.\r\n  var x0 = x.toFixed(0) + 'px';\r\n  var y0 = y.toFixed(0) + 'px'; // not support transform, use `left` and `top` instead.\r\n\r\n  if (!env.transformSupported) {\r\n    return toString ? \"top:\" + y0 + \";left:\" + x0 + \";\" : [['top', y0], ['left', x0]];\r\n  } // support transform\r\n\r\n\r\n  var is3d = env.transform3dSupported;\r\n  var translate = \"translate\" + (is3d ? '3d' : '') + \"(\" + x0 + \",\" + y0 + (is3d ? ',0' : '') + \")\";\r\n  return toString ? 'top:0;left:0;' + CSS_TRANSFORM_VENDOR + ':' + translate + ';' : [['top', 0], ['left', 0], [TRANSFORM_VENDOR, translate]];\r\n}\r\n/**\r\n * @param {Object} textStyle\r\n * @return {string}\r\n * @inner\r\n */\r\n\r\n\r\nfunction assembleFont(textStyleModel) {\r\n  var cssText = [];\r\n  var fontSize = textStyleModel.get('fontSize');\r\n  var color = textStyleModel.getTextColor();\r\n  color && cssText.push('color:' + color);\r\n  cssText.push('font:' + textStyleModel.getFont());\r\n  fontSize // @ts-ignore, leave it to the tooltip refactor.\r\n  && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\r\n  var shadowColor = textStyleModel.get('textShadowColor');\r\n  var shadowBlur = textStyleModel.get('textShadowBlur') || 0;\r\n  var shadowOffsetX = textStyleModel.get('textShadowOffsetX') || 0;\r\n  var shadowOffsetY = textStyleModel.get('textShadowOffsetY') || 0;\r\n  shadowColor && shadowBlur && cssText.push('text-shadow:' + shadowOffsetX + 'px ' + shadowOffsetY + 'px ' + shadowBlur + 'px ' + shadowColor);\r\n  each(['decoration', 'align'], function (name) {\r\n    var val = textStyleModel.get(name);\r\n    val && cssText.push('text-' + name + ':' + val);\r\n  });\r\n  return cssText.join(';');\r\n}\r\n\r\nfunction assembleCssText(tooltipModel, enableTransition, onlyFade) {\r\n  var cssText = [];\r\n  var transitionDuration = tooltipModel.get('transitionDuration');\r\n  var backgroundColor = tooltipModel.get('backgroundColor');\r\n  var shadowBlur = tooltipModel.get('shadowBlur');\r\n  var shadowColor = tooltipModel.get('shadowColor');\r\n  var shadowOffsetX = tooltipModel.get('shadowOffsetX');\r\n  var shadowOffsetY = tooltipModel.get('shadowOffsetY');\r\n  var textStyleModel = tooltipModel.getModel('textStyle');\r\n  var padding = getPaddingFromTooltipModel(tooltipModel, 'html');\r\n  var boxShadow = shadowOffsetX + \"px \" + shadowOffsetY + \"px \" + shadowBlur + \"px \" + shadowColor;\r\n  cssText.push('box-shadow:' + boxShadow); // Animation transition. Do not animate when transitionDuration is 0.\r\n\r\n  enableTransition && transitionDuration && cssText.push(assembleTransition(transitionDuration, onlyFade));\r\n\r\n  if (backgroundColor) {\r\n    if (env.canvasSupported) {\r\n      cssText.push('background-color:' + backgroundColor);\r\n    } else {\r\n      // for ie\r\n      cssText.push('background-color:#' + toHex(backgroundColor));\r\n      cssText.push('filter:alpha(opacity=70)');\r\n    }\r\n  } // Border style\r\n\r\n\r\n  each(['width', 'color', 'radius'], function (name) {\r\n    var borderName = 'border-' + name;\r\n    var camelCase = toCamelCase(borderName);\r\n    var val = tooltipModel.get(camelCase);\r\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\r\n  }); // Text style\r\n\r\n  cssText.push(assembleFont(textStyleModel)); // Padding\r\n\r\n  if (padding != null) {\r\n    cssText.push('padding:' + normalizeCssArray(padding).join('px ') + 'px');\r\n  }\r\n\r\n  return cssText.join(';') + ';';\r\n} // If not able to make, do not modify the input `out`.\r\n\r\n\r\nfunction makeStyleCoord(out, zr, appendToBody, zrX, zrY) {\r\n  var zrPainter = zr && zr.painter;\r\n\r\n  if (appendToBody) {\r\n    var zrViewportRoot = zrPainter && zrPainter.getViewportRoot();\r\n\r\n    if (zrViewportRoot) {\r\n      // Some APPs might use scale on body, so we support CSS transform here.\r\n      transformLocalCoord(out, zrViewportRoot, document.body, zrX, zrY);\r\n    }\r\n  } else {\r\n    out[0] = zrX;\r\n    out[1] = zrY; // xy should be based on canvas root. But tooltipContent is\r\n    // the sibling of canvas root. So padding of ec container\r\n    // should be considered here.\r\n\r\n    var viewportRootOffset = zrPainter && zrPainter.getViewportRootOffset();\r\n\r\n    if (viewportRootOffset) {\r\n      out[0] += viewportRootOffset.offsetLeft;\r\n      out[1] += viewportRootOffset.offsetTop;\r\n    }\r\n  }\r\n\r\n  out[2] = out[0] / zr.getWidth();\r\n  out[3] = out[1] / zr.getHeight();\r\n}\r\n\r\nvar TooltipHTMLContent =\r\n/** @class */\r\nfunction () {\r\n  function TooltipHTMLContent(container, api, opt) {\r\n    this._show = false;\r\n    this._styleCoord = [0, 0, 0, 0];\r\n    this._enterable = true;\r\n    this._firstShow = true;\r\n    this._longHide = true;\r\n\r\n    if (env.wxa) {\r\n      return null;\r\n    }\r\n\r\n    var el = document.createElement('div'); // TODO: TYPE\r\n\r\n    el.domBelongToZr = true;\r\n    this.el = el;\r\n    var zr = this._zr = api.getZr();\r\n    var appendToBody = this._appendToBody = opt && opt.appendToBody;\r\n    makeStyleCoord(this._styleCoord, zr, appendToBody, api.getWidth() / 2, api.getHeight() / 2);\r\n\r\n    if (appendToBody) {\r\n      document.body.appendChild(el);\r\n    } else {\r\n      container.appendChild(el);\r\n    }\r\n\r\n    this._container = container; // FIXME\r\n    // Is it needed to trigger zr event manually if\r\n    // the browser do not support `pointer-events: none`.\r\n\r\n    var self = this;\r\n\r\n    el.onmouseenter = function () {\r\n      // clear the timeout in hideLater and keep showing tooltip\r\n      if (self._enterable) {\r\n        clearTimeout(self._hideTimeout);\r\n        self._show = true;\r\n      }\r\n\r\n      self._inContent = true;\r\n    };\r\n\r\n    el.onmousemove = function (e) {\r\n      e = e || window.event;\r\n\r\n      if (!self._enterable) {\r\n        // `pointer-events: none` is set to tooltip content div\r\n        // if `enterable` is set as `false`, and `el.onmousemove`\r\n        // can not be triggered. But in browser that do not\r\n        // support `pointer-events`, we need to do this:\r\n        // Try trigger zrender event to avoid mouse\r\n        // in and out shape too frequently\r\n        var handler = zr.handler;\r\n        var zrViewportRoot = zr.painter.getViewportRoot();\r\n        normalizeEvent(zrViewportRoot, e, true);\r\n        handler.dispatch('mousemove', e);\r\n      }\r\n    };\r\n\r\n    el.onmouseleave = function () {\r\n      // set `_inContent` to `false` before `hideLater`\r\n      self._inContent = false;\r\n\r\n      if (self._enterable) {\r\n        if (self._show) {\r\n          self.hideLater(self._hideDelay);\r\n        }\r\n      }\r\n    };\r\n  }\r\n  /**\r\n   * Update when tooltip is rendered\r\n   */\r\n\r\n\r\n  TooltipHTMLContent.prototype.update = function (tooltipModel) {\r\n    // FIXME\r\n    // Move this logic to ec main?\r\n    var container = this._container;\r\n    var position = getComputedStyle(container, 'position');\r\n    var domStyle = container.style;\r\n\r\n    if (domStyle.position !== 'absolute' && position !== 'absolute') {\r\n      domStyle.position = 'relative';\r\n    } // move tooltip if chart resized\r\n\r\n\r\n    var alwaysShowContent = tooltipModel.get('alwaysShowContent');\r\n    alwaysShowContent && this._moveIfResized(); // update className\r\n\r\n    this.el.className = tooltipModel.get('className') || ''; // Hide the tooltip\r\n    // PENDING\r\n    // this.hide();\r\n  };\r\n\r\n  TooltipHTMLContent.prototype.show = function (tooltipModel, nearPointColor) {\r\n    clearTimeout(this._hideTimeout);\r\n    clearTimeout(this._longHideTimeout);\r\n    var el = this.el;\r\n    var style = el.style;\r\n    var styleCoord = this._styleCoord;\r\n\r\n    if (!el.innerHTML) {\r\n      style.display = 'none';\r\n    } else {\r\n      style.cssText = gCssText + assembleCssText(tooltipModel, !this._firstShow, this._longHide) // initial transform\r\n      + assembleTransform(styleCoord[0], styleCoord[1], true) + (\"border-color:\" + convertToColorString(nearPointColor) + \";\") + (tooltipModel.get('extraCssText') || '') // If mouse occasionally move over the tooltip, a mouseout event will be\r\n      // triggered by canvas, and cause some unexpectable result like dragging\r\n      // stop, \"unfocusAdjacency\". Here `pointer-events: none` is used to solve\r\n      // it. Although it is not supported by IE8~IE10, fortunately it is a rare\r\n      // scenario.\r\n      + (\";pointer-events:\" + (this._enterable ? 'auto' : 'none'));\r\n    }\r\n\r\n    this._show = true;\r\n    this._firstShow = false;\r\n    this._longHide = false;\r\n  };\r\n\r\n  TooltipHTMLContent.prototype.setContent = function (content, markers, tooltipModel, borderColor, arrowPosition) {\r\n    var el = this.el;\r\n\r\n    if (content == null) {\r\n      el.innerHTML = '';\r\n      return;\r\n    }\r\n\r\n    var arrow = '';\r\n\r\n    if (isString(arrowPosition) && tooltipModel.get('trigger') === 'item' && !shouldTooltipConfine(tooltipModel)) {\r\n      arrow = assembleArrow(tooltipModel, borderColor, arrowPosition);\r\n    }\r\n\r\n    if (isString(content)) {\r\n      el.innerHTML = content + arrow;\r\n    } else if (content) {\r\n      // Clear previous\r\n      el.innerHTML = '';\r\n\r\n      if (!isArray(content)) {\r\n        content = [content];\r\n      }\r\n\r\n      for (var i = 0; i < content.length; i++) {\r\n        if (isDom(content[i]) && content[i].parentNode !== el) {\r\n          el.appendChild(content[i]);\r\n        }\r\n      } // no arrow if empty\r\n\r\n\r\n      if (arrow && el.childNodes.length) {\r\n        // no need to create a new parent element, but it's not supported by IE 10 and older.\r\n        // const arrowEl = document.createRange().createContextualFragment(arrow);\r\n        var arrowEl = document.createElement('div');\r\n        arrowEl.innerHTML = arrow;\r\n        el.appendChild(arrowEl);\r\n      }\r\n    }\r\n  };\r\n\r\n  TooltipHTMLContent.prototype.setEnterable = function (enterable) {\r\n    this._enterable = enterable;\r\n  };\r\n\r\n  TooltipHTMLContent.prototype.getSize = function () {\r\n    var el = this.el;\r\n    return [el.offsetWidth, el.offsetHeight];\r\n  };\r\n\r\n  TooltipHTMLContent.prototype.moveTo = function (zrX, zrY) {\r\n    var styleCoord = this._styleCoord;\r\n    makeStyleCoord(styleCoord, this._zr, this._appendToBody, zrX, zrY);\r\n\r\n    if (styleCoord[0] != null && styleCoord[1] != null) {\r\n      var style_1 = this.el.style;\r\n      var transforms = assembleTransform(styleCoord[0], styleCoord[1]);\r\n      each(transforms, function (transform) {\r\n        style_1[transform[0]] = transform[1];\r\n      });\r\n    }\r\n  };\r\n  /**\r\n   * when `alwaysShowContent` is true,\r\n   * move the tooltip after chart resized\r\n   */\r\n\r\n\r\n  TooltipHTMLContent.prototype._moveIfResized = function () {\r\n    // The ratio of left to width\r\n    var ratioX = this._styleCoord[2]; // The ratio of top to height\r\n\r\n    var ratioY = this._styleCoord[3];\r\n    this.moveTo(ratioX * this._zr.getWidth(), ratioY * this._zr.getHeight());\r\n  };\r\n\r\n  TooltipHTMLContent.prototype.hide = function () {\r\n    var _this = this;\r\n\r\n    var style = this.el.style;\r\n    style.visibility = 'hidden';\r\n    style.opacity = '0';\r\n    env.transform3dSupported && (style.willChange = '');\r\n    this._show = false;\r\n    this._longHideTimeout = setTimeout(function () {\r\n      return _this._longHide = true;\r\n    }, 500);\r\n  };\r\n\r\n  TooltipHTMLContent.prototype.hideLater = function (time) {\r\n    if (this._show && !(this._inContent && this._enterable)) {\r\n      if (time) {\r\n        this._hideDelay = time; // Set show false to avoid invoke hideLater multiple times\r\n\r\n        this._show = false;\r\n        this._hideTimeout = setTimeout(bind(this.hide, this), time);\r\n      } else {\r\n        this.hide();\r\n      }\r\n    }\r\n  };\r\n\r\n  TooltipHTMLContent.prototype.isShow = function () {\r\n    return this._show;\r\n  };\r\n\r\n  TooltipHTMLContent.prototype.dispose = function () {\r\n    this.el.parentNode.removeChild(this.el);\r\n  };\r\n\r\n  return TooltipHTMLContent;\r\n}();\r\n\r\nexport default TooltipHTMLContent;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport ZRText from 'zrender/lib/graphic/Text';\r\nimport { getPaddingFromTooltipModel } from './tooltipMarkup';\r\nimport { throwError } from '../../util/log';\r\n\r\nvar TooltipRichContent =\r\n/** @class */\r\nfunction () {\r\n  function TooltipRichContent(api) {\r\n    this._show = false;\r\n    this._styleCoord = [0, 0, 0, 0];\r\n    this._enterable = true;\r\n    this._zr = api.getZr();\r\n    makeStyleCoord(this._styleCoord, this._zr, api.getWidth() / 2, api.getHeight() / 2);\r\n  }\r\n  /**\r\n   * Update when tooltip is rendered\r\n   */\r\n\r\n\r\n  TooltipRichContent.prototype.update = function (tooltipModel) {\r\n    var alwaysShowContent = tooltipModel.get('alwaysShowContent');\r\n    alwaysShowContent && this._moveIfResized();\r\n  };\r\n\r\n  TooltipRichContent.prototype.show = function () {\r\n    if (this._hideTimeout) {\r\n      clearTimeout(this._hideTimeout);\r\n    }\r\n\r\n    this.el.show();\r\n    this._show = true;\r\n  };\r\n  /**\r\n   * Set tooltip content\r\n   */\r\n\r\n\r\n  TooltipRichContent.prototype.setContent = function (content, markupStyleCreator, tooltipModel, borderColor, arrowPosition) {\r\n    if (zrUtil.isObject(content)) {\r\n      throwError(process.env.NODE_ENV !== 'production' ? 'Passing DOM nodes as content is not supported in richText tooltip!' : '');\r\n    }\r\n\r\n    if (this.el) {\r\n      this._zr.remove(this.el);\r\n    }\r\n\r\n    var textStyleModel = tooltipModel.getModel('textStyle');\r\n    this.el = new ZRText({\r\n      style: {\r\n        rich: markupStyleCreator.richTextStyles,\r\n        text: content,\r\n        lineHeight: 22,\r\n        backgroundColor: tooltipModel.get('backgroundColor'),\r\n        borderRadius: tooltipModel.get('borderRadius'),\r\n        borderWidth: 1,\r\n        borderColor: borderColor,\r\n        shadowColor: tooltipModel.get('shadowColor'),\r\n        shadowBlur: tooltipModel.get('shadowBlur'),\r\n        shadowOffsetX: tooltipModel.get('shadowOffsetX'),\r\n        shadowOffsetY: tooltipModel.get('shadowOffsetY'),\r\n        textShadowColor: textStyleModel.get('textShadowColor'),\r\n        textShadowBlur: textStyleModel.get('textShadowBlur') || 0,\r\n        textShadowOffsetX: textStyleModel.get('textShadowOffsetX') || 0,\r\n        textShadowOffsetY: textStyleModel.get('textShadowOffsetY') || 0,\r\n        fill: tooltipModel.get(['textStyle', 'color']),\r\n        padding: getPaddingFromTooltipModel(tooltipModel, 'richText'),\r\n        verticalAlign: 'top',\r\n        align: 'left'\r\n      },\r\n      z: tooltipModel.get('z')\r\n    });\r\n\r\n    this._zr.add(this.el);\r\n\r\n    var self = this;\r\n    this.el.on('mouseover', function () {\r\n      // clear the timeout in hideLater and keep showing tooltip\r\n      if (self._enterable) {\r\n        clearTimeout(self._hideTimeout);\r\n        self._show = true;\r\n      }\r\n\r\n      self._inContent = true;\r\n    });\r\n    this.el.on('mouseout', function () {\r\n      if (self._enterable) {\r\n        if (self._show) {\r\n          self.hideLater(self._hideDelay);\r\n        }\r\n      }\r\n\r\n      self._inContent = false;\r\n    });\r\n  };\r\n\r\n  TooltipRichContent.prototype.setEnterable = function (enterable) {\r\n    this._enterable = enterable;\r\n  };\r\n\r\n  TooltipRichContent.prototype.getSize = function () {\r\n    var el = this.el;\r\n    var bounding = this.el.getBoundingRect(); // bounding rect does not include shadow. For renderMode richText,\r\n    // if overflow, it will be cut. So calculate them accurately.\r\n\r\n    var shadowOuterSize = calcShadowOuterSize(el.style);\r\n    return [bounding.width + shadowOuterSize.left + shadowOuterSize.right, bounding.height + shadowOuterSize.top + shadowOuterSize.bottom];\r\n  };\r\n\r\n  TooltipRichContent.prototype.moveTo = function (x, y) {\r\n    var el = this.el;\r\n\r\n    if (el) {\r\n      var styleCoord = this._styleCoord;\r\n      makeStyleCoord(styleCoord, this._zr, x, y);\r\n      x = styleCoord[0];\r\n      y = styleCoord[1];\r\n      var style = el.style;\r\n      var borderWidth = mathMaxWith0(style.borderWidth || 0);\r\n      var shadowOuterSize = calcShadowOuterSize(style); // rich text x, y do not include border.\r\n\r\n      el.x = x + borderWidth + shadowOuterSize.left;\r\n      el.y = y + borderWidth + shadowOuterSize.top;\r\n      el.markRedraw();\r\n    }\r\n  };\r\n  /**\r\n   * when `alwaysShowContent` is true,\r\n   * move the tooltip after chart resized\r\n   */\r\n\r\n\r\n  TooltipRichContent.prototype._moveIfResized = function () {\r\n    // The ratio of left to width\r\n    var ratioX = this._styleCoord[2]; // The ratio of top to height\r\n\r\n    var ratioY = this._styleCoord[3];\r\n    this.moveTo(ratioX * this._zr.getWidth(), ratioY * this._zr.getHeight());\r\n  };\r\n\r\n  TooltipRichContent.prototype.hide = function () {\r\n    if (this.el) {\r\n      this.el.hide();\r\n    }\r\n\r\n    this._show = false;\r\n  };\r\n\r\n  TooltipRichContent.prototype.hideLater = function (time) {\r\n    if (this._show && !(this._inContent && this._enterable)) {\r\n      if (time) {\r\n        this._hideDelay = time; // Set show false to avoid invoke hideLater multiple times\r\n\r\n        this._show = false;\r\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\r\n      } else {\r\n        this.hide();\r\n      }\r\n    }\r\n  };\r\n\r\n  TooltipRichContent.prototype.isShow = function () {\r\n    return this._show;\r\n  };\r\n\r\n  TooltipRichContent.prototype.dispose = function () {\r\n    this._zr.remove(this.el);\r\n  };\r\n\r\n  return TooltipRichContent;\r\n}();\r\n\r\nfunction mathMaxWith0(val) {\r\n  return Math.max(0, val);\r\n}\r\n\r\nfunction calcShadowOuterSize(style) {\r\n  var shadowBlur = mathMaxWith0(style.shadowBlur || 0);\r\n  var shadowOffsetX = mathMaxWith0(style.shadowOffsetX || 0);\r\n  var shadowOffsetY = mathMaxWith0(style.shadowOffsetY || 0);\r\n  return {\r\n    left: mathMaxWith0(shadowBlur - shadowOffsetX),\r\n    right: mathMaxWith0(shadowBlur + shadowOffsetX),\r\n    top: mathMaxWith0(shadowBlur - shadowOffsetY),\r\n    bottom: mathMaxWith0(shadowBlur + shadowOffsetY)\r\n  };\r\n}\r\n\r\nfunction makeStyleCoord(out, zr, zrX, zrY) {\r\n  out[0] = zrX;\r\n  out[1] = zrY;\r\n  out[2] = out[0] / zr.getWidth();\r\n  out[3] = out[1] / zr.getHeight();\r\n}\r\n\r\nexport default TooltipRichContent;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\nimport { __extends } from \"tslib\";\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport env from 'zrender/lib/core/env';\r\nimport TooltipHTMLContent from './TooltipHTMLContent';\r\nimport TooltipRichContent from './TooltipRichContent';\r\nimport * as formatUtil from '../../util/format';\r\nimport * as numberUtil from '../../util/number';\r\nimport * as graphic from '../../util/graphic';\r\nimport findPointFromSeries from '../axisPointer/findPointFromSeries';\r\nimport * as layoutUtil from '../../util/layout';\r\nimport Model from '../../model/Model';\r\nimport * as globalListener from '../axisPointer/globalListener';\r\nimport * as axisHelper from '../../coord/axisHelper';\r\nimport * as axisPointerViewHelper from '../axisPointer/viewHelper';\r\nimport { getTooltipRenderMode, preParseFinder, queryReferringComponents } from '../../util/model';\r\nimport ComponentView from '../../view/Component';\r\nimport { format as timeFormat } from '../../util/time'; // import { isDimensionStacked } from '../../data/helper/dataStackHelper';\r\n\r\nimport { getECData } from '../../util/innerStore';\r\nimport { shouldTooltipConfine } from './helper';\r\nimport { normalizeTooltipFormatResult } from '../../model/mixin/dataFormat';\r\nimport { createTooltipMarkup, buildTooltipMarkup, TooltipMarkupStyleCreator } from './tooltipMarkup';\r\nimport { findEventDispatcher } from '../../util/event';\r\nimport { throttle } from '../../util/throttle';\r\nvar bind = zrUtil.bind;\r\nvar each = zrUtil.each;\r\nvar parsePercent = numberUtil.parsePercent;\r\nvar proxyRect = new graphic.Rect({\r\n  shape: {\r\n    x: -1,\r\n    y: -1,\r\n    width: 2,\r\n    height: 2\r\n  }\r\n});\r\n\r\nvar TooltipView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(TooltipView, _super);\r\n\r\n  function TooltipView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = TooltipView.type;\r\n    return _this;\r\n  }\r\n\r\n  TooltipView.prototype.init = function (ecModel, api) {\r\n    if (env.node) {\r\n      return;\r\n    }\r\n\r\n    var tooltipModel = ecModel.getComponent('tooltip');\r\n    var renderMode = tooltipModel.get('renderMode');\r\n    this._renderMode = getTooltipRenderMode(renderMode);\r\n    this._tooltipContent = this._renderMode === 'richText' ? new TooltipRichContent(api) : new TooltipHTMLContent(api.getDom(), api, {\r\n      appendToBody: tooltipModel.get('appendToBody', true)\r\n    });\r\n  };\r\n\r\n  TooltipView.prototype.render = function (tooltipModel, ecModel, api) {\r\n    if (env.node) {\r\n      return;\r\n    } // Reset\r\n\r\n\r\n    this.group.removeAll();\r\n    this._tooltipModel = tooltipModel;\r\n    this._ecModel = ecModel;\r\n    this._api = api;\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n\r\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\r\n    var tooltipContent = this._tooltipContent;\r\n    tooltipContent.update(tooltipModel);\r\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\r\n\r\n    this._initGlobalListener();\r\n\r\n    this._keepShow(); // PENDING\r\n    // `mousemove` event will be triggered very frequently when the mouse moves fast,\r\n    // which causes that the updatePosition was also called very frequently.\r\n    // In Chrome with devtools open and Firefox, tooltip looks lagged and shaked around. See #14695.\r\n    // To avoid the frequent triggering,\r\n    // consider throttling it in 50ms. (the tested result may need to validate)\r\n\r\n\r\n    this._updatePosition = this._renderMode === 'html' ? throttle(bind(this._doUpdatePosition, this), 50) : this._doUpdatePosition;\r\n  };\r\n\r\n  TooltipView.prototype._initGlobalListener = function () {\r\n    var tooltipModel = this._tooltipModel;\r\n    var triggerOn = tooltipModel.get('triggerOn');\r\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\r\n      // If 'none', it is not controlled by mouse totally.\r\n      if (triggerOn !== 'none') {\r\n        if (triggerOn.indexOf(currTrigger) >= 0) {\r\n          this._tryShow(e, dispatchAction);\r\n        } else if (currTrigger === 'leave') {\r\n          this._hide(dispatchAction);\r\n        }\r\n      }\r\n    }, this));\r\n  };\r\n\r\n  TooltipView.prototype._keepShow = function () {\r\n    var tooltipModel = this._tooltipModel;\r\n    var ecModel = this._ecModel;\r\n    var api = this._api; // Try to keep the tooltip show when refreshing\r\n\r\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\r\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\r\n    // which is not expected.\r\n    && tooltipModel.get('triggerOn') !== 'none') {\r\n      var self_1 = this;\r\n      clearTimeout(this._refreshUpdateTimeout);\r\n      this._refreshUpdateTimeout = setTimeout(function () {\r\n        // Show tip next tick after other charts are rendered\r\n        // In case highlight action has wrong result\r\n        // FIXME\r\n        !api.isDisposed() && self_1.manuallyShowTip(tooltipModel, ecModel, api, {\r\n          x: self_1._lastX,\r\n          y: self_1._lastY,\r\n          dataByCoordSys: self_1._lastDataByCoordSys\r\n        });\r\n      });\r\n    }\r\n  };\r\n  /**\r\n   * Show tip manually by\r\n   * dispatchAction({\r\n   *     type: 'showTip',\r\n   *     x: 10,\r\n   *     y: 10\r\n   * });\r\n   * Or\r\n   * dispatchAction({\r\n   *      type: 'showTip',\r\n   *      seriesIndex: 0,\r\n   *      dataIndex or dataIndexInside or name\r\n   * });\r\n   *\r\n   *  TODO Batch\r\n   */\r\n\r\n\r\n  TooltipView.prototype.manuallyShowTip = function (tooltipModel, ecModel, api, payload) {\r\n    if (payload.from === this.uid || env.node) {\r\n      return;\r\n    }\r\n\r\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\r\n\r\n    this._ticket = ''; // When triggered from axisPointer.\r\n\r\n    var dataByCoordSys = payload.dataByCoordSys;\r\n    var cmptRef = findComponentReference(payload, ecModel, api);\r\n\r\n    if (cmptRef) {\r\n      var rect = cmptRef.el.getBoundingRect().clone();\r\n      rect.applyTransform(cmptRef.el.transform);\r\n\r\n      this._tryShow({\r\n        offsetX: rect.x + rect.width / 2,\r\n        offsetY: rect.y + rect.height / 2,\r\n        target: cmptRef.el,\r\n        position: payload.position,\r\n        // When manully trigger, the mouse is not on the el, so we'd better to\r\n        // position tooltip on the bottom of the el and display arrow is possible.\r\n        positionDefault: 'bottom'\r\n      }, dispatchAction);\r\n    } else if (payload.tooltip && payload.x != null && payload.y != null) {\r\n      var el = proxyRect;\r\n      el.x = payload.x;\r\n      el.y = payload.y;\r\n      el.update();\r\n      getECData(el).tooltipConfig = {\r\n        name: null,\r\n        option: payload.tooltip\r\n      }; // Manually show tooltip while view is not using zrender elements.\r\n\r\n      this._tryShow({\r\n        offsetX: payload.x,\r\n        offsetY: payload.y,\r\n        target: el\r\n      }, dispatchAction);\r\n    } else if (dataByCoordSys) {\r\n      this._tryShow({\r\n        offsetX: payload.x,\r\n        offsetY: payload.y,\r\n        position: payload.position,\r\n        dataByCoordSys: dataByCoordSys,\r\n        tooltipOption: payload.tooltipOption\r\n      }, dispatchAction);\r\n    } else if (payload.seriesIndex != null) {\r\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\r\n        return;\r\n      }\r\n\r\n      var pointInfo = findPointFromSeries(payload, ecModel);\r\n      var cx = pointInfo.point[0];\r\n      var cy = pointInfo.point[1];\r\n\r\n      if (cx != null && cy != null) {\r\n        this._tryShow({\r\n          offsetX: cx,\r\n          offsetY: cy,\r\n          target: pointInfo.el,\r\n          position: payload.position,\r\n          // When manully trigger, the mouse is not on the el, so we'd better to\r\n          // position tooltip on the bottom of the el and display arrow is possible.\r\n          positionDefault: 'bottom'\r\n        }, dispatchAction);\r\n      }\r\n    } else if (payload.x != null && payload.y != null) {\r\n      // FIXME\r\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\r\n      api.dispatchAction({\r\n        type: 'updateAxisPointer',\r\n        x: payload.x,\r\n        y: payload.y\r\n      });\r\n\r\n      this._tryShow({\r\n        offsetX: payload.x,\r\n        offsetY: payload.y,\r\n        position: payload.position,\r\n        target: api.getZr().findHover(payload.x, payload.y).target\r\n      }, dispatchAction);\r\n    }\r\n  };\r\n\r\n  TooltipView.prototype.manuallyHideTip = function (tooltipModel, ecModel, api, payload) {\r\n    var tooltipContent = this._tooltipContent;\r\n\r\n    if (!this._alwaysShowContent && this._tooltipModel) {\r\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\r\n    }\r\n\r\n    this._lastX = this._lastY = this._lastDataByCoordSys = null;\r\n\r\n    if (payload.from !== this.uid) {\r\n      this._hide(makeDispatchAction(payload, api));\r\n    }\r\n  }; // Be compatible with previous design, that is, when tooltip.type is 'axis' and\r\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\r\n  // and tooltip.\r\n\r\n\r\n  TooltipView.prototype._manuallyAxisShowTip = function (tooltipModel, ecModel, api, payload) {\r\n    var seriesIndex = payload.seriesIndex;\r\n    var dataIndex = payload.dataIndex; // @ts-ignore\r\n\r\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\r\n\r\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\r\n      return;\r\n    }\r\n\r\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\r\n\r\n    if (!seriesModel) {\r\n      return;\r\n    }\r\n\r\n    var data = seriesModel.getData();\r\n    var tooltipCascadedModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model], this._tooltipModel);\r\n\r\n    if (tooltipCascadedModel.get('trigger') !== 'axis') {\r\n      return;\r\n    }\r\n\r\n    api.dispatchAction({\r\n      type: 'updateAxisPointer',\r\n      seriesIndex: seriesIndex,\r\n      dataIndex: dataIndex,\r\n      position: payload.position\r\n    });\r\n    return true;\r\n  };\r\n\r\n  TooltipView.prototype._tryShow = function (e, dispatchAction) {\r\n    var el = e.target;\r\n    var tooltipModel = this._tooltipModel;\r\n\r\n    if (!tooltipModel) {\r\n      return;\r\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\r\n\r\n\r\n    this._lastX = e.offsetX;\r\n    this._lastY = e.offsetY;\r\n    var dataByCoordSys = e.dataByCoordSys;\r\n\r\n    if (dataByCoordSys && dataByCoordSys.length) {\r\n      this._showAxisTooltip(dataByCoordSys, e);\r\n    } else if (el) {\r\n      this._lastDataByCoordSys = null;\r\n      var seriesDispatcher_1;\r\n      var cmptDispatcher_1;\r\n      findEventDispatcher(el, function (target) {\r\n        // Always show item tooltip if mouse is on the element with dataIndex\r\n        if (getECData(target).dataIndex != null) {\r\n          seriesDispatcher_1 = target;\r\n          return true;\r\n        } // Tooltip provided directly. Like legend.\r\n\r\n\r\n        if (getECData(target).tooltipConfig != null) {\r\n          cmptDispatcher_1 = target;\r\n          return true;\r\n        }\r\n      }, true);\r\n\r\n      if (seriesDispatcher_1) {\r\n        this._showSeriesItemTooltip(e, seriesDispatcher_1, dispatchAction);\r\n      } else if (cmptDispatcher_1) {\r\n        this._showComponentItemTooltip(e, cmptDispatcher_1, dispatchAction);\r\n      } else {\r\n        this._hide(dispatchAction);\r\n      }\r\n    } else {\r\n      this._lastDataByCoordSys = null;\r\n\r\n      this._hide(dispatchAction);\r\n    }\r\n  };\r\n\r\n  TooltipView.prototype._showOrMove = function (tooltipModel, cb) {\r\n    // showDelay is used in this case: tooltip.enterable is set\r\n    // as true. User intent to move mouse into tooltip and click\r\n    // something. `showDelay` makes it easier to enter the content\r\n    // but tooltip do not move immediately.\r\n    var delay = tooltipModel.get('showDelay');\r\n    cb = zrUtil.bind(cb, this);\r\n    clearTimeout(this._showTimout);\r\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\r\n  };\r\n\r\n  TooltipView.prototype._showAxisTooltip = function (dataByCoordSys, e) {\r\n    var ecModel = this._ecModel;\r\n    var globalTooltipModel = this._tooltipModel;\r\n    var point = [e.offsetX, e.offsetY];\r\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption], globalTooltipModel);\r\n    var renderMode = this._renderMode;\r\n    var cbParamsList = [];\r\n    var articleMarkup = createTooltipMarkup('section', {\r\n      blocks: [],\r\n      noHeader: true\r\n    }); // Only for legacy: `Serise['formatTooltip']` returns a string.\r\n\r\n    var markupTextArrLegacy = [];\r\n    var markupStyleCreator = new TooltipMarkupStyleCreator();\r\n    each(dataByCoordSys, function (itemCoordSys) {\r\n      each(itemCoordSys.dataByAxis, function (axisItem) {\r\n        var axisModel = ecModel.getComponent(axisItem.axisDim + 'Axis', axisItem.axisIndex);\r\n        var axisValue = axisItem.value;\r\n\r\n        if (!axisModel || axisValue == null) {\r\n          return;\r\n        }\r\n\r\n        var axisValueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, axisItem.seriesDataIndices, axisItem.valueLabelOpt);\r\n        var axisSectionMarkup = createTooltipMarkup('section', {\r\n          header: axisValueLabel,\r\n          noHeader: !zrUtil.trim(axisValueLabel),\r\n          sortBlocks: true,\r\n          blocks: []\r\n        });\r\n        articleMarkup.blocks.push(axisSectionMarkup);\r\n        zrUtil.each(axisItem.seriesDataIndices, function (idxItem) {\r\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\r\n          var dataIndex = idxItem.dataIndexInside;\r\n          var cbParams = series.getDataParams(dataIndex); // Can't find data.\r\n\r\n          if (cbParams.dataIndex < 0) {\r\n            return;\r\n          }\r\n\r\n          cbParams.axisDim = axisItem.axisDim;\r\n          cbParams.axisIndex = axisItem.axisIndex;\r\n          cbParams.axisType = axisItem.axisType;\r\n          cbParams.axisId = axisItem.axisId;\r\n          cbParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, {\r\n            value: axisValue\r\n          });\r\n          cbParams.axisValueLabel = axisValueLabel; // Pre-create marker style for makers. Users can assemble richText\r\n          // text in `formatter` callback and use those markers style.\r\n\r\n          cbParams.marker = markupStyleCreator.makeTooltipMarker('item', formatUtil.convertToColorString(cbParams.color), renderMode);\r\n          var seriesTooltipResult = normalizeTooltipFormatResult(series.formatTooltip(dataIndex, true, null));\r\n\r\n          if (seriesTooltipResult.markupFragment) {\r\n            axisSectionMarkup.blocks.push(seriesTooltipResult.markupFragment);\r\n          }\r\n\r\n          if (seriesTooltipResult.markupText) {\r\n            markupTextArrLegacy.push(seriesTooltipResult.markupText);\r\n          }\r\n\r\n          cbParamsList.push(cbParams);\r\n        });\r\n      });\r\n    }); // In most cases, the second axis is displays upper on the first one.\r\n    // So we reverse it to look better.\r\n\r\n    articleMarkup.blocks.reverse();\r\n    markupTextArrLegacy.reverse();\r\n    var positionExpr = e.position;\r\n    var orderMode = singleTooltipModel.get('order');\r\n    var builtMarkupText = buildTooltipMarkup(articleMarkup, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), singleTooltipModel.get('textStyle'));\r\n    builtMarkupText && markupTextArrLegacy.unshift(builtMarkupText);\r\n    var blockBreak = renderMode === 'richText' ? '\\n\\n' : '<br/>';\r\n    var allMarkupText = markupTextArrLegacy.join(blockBreak);\r\n\r\n    this._showOrMove(singleTooltipModel, function () {\r\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys, cbParamsList)) {\r\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, cbParamsList);\r\n      } else {\r\n        this._showTooltipContent(singleTooltipModel, allMarkupText, cbParamsList, Math.random() + '', point[0], point[1], positionExpr, null, markupStyleCreator);\r\n      }\r\n    }); // Do not trigger events here, because this branch only be entered\r\n    // from dispatchAction.\r\n\r\n  };\r\n\r\n  TooltipView.prototype._showSeriesItemTooltip = function (e, dispatcher, dispatchAction) {\r\n    var ecModel = this._ecModel;\r\n    var ecData = getECData(dispatcher); // Use dataModel in element if possible\r\n    // Used when mouseover on a element like markPoint or edge\r\n    // In which case, the data is not main data in series.\r\n\r\n    var seriesIndex = ecData.seriesIndex;\r\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\r\n\r\n    var dataModel = ecData.dataModel || seriesModel;\r\n    var dataIndex = ecData.dataIndex;\r\n    var dataType = ecData.dataType;\r\n    var data = dataModel.getData(dataType);\r\n    var renderMode = this._renderMode;\r\n    var positionDefault = e.positionDefault;\r\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model], this._tooltipModel, positionDefault ? {\r\n      position: positionDefault\r\n    } : null);\r\n    var tooltipTrigger = tooltipModel.get('trigger');\r\n\r\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\r\n      return;\r\n    }\r\n\r\n    var params = dataModel.getDataParams(dataIndex, dataType);\r\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Pre-create marker style for makers. Users can assemble richText\r\n    // text in `formatter` callback and use those markers style.\r\n\r\n    params.marker = markupStyleCreator.makeTooltipMarker('item', formatUtil.convertToColorString(params.color), renderMode);\r\n    var seriesTooltipResult = normalizeTooltipFormatResult(dataModel.formatTooltip(dataIndex, false, dataType));\r\n    var orderMode = tooltipModel.get('order');\r\n    var markupText = seriesTooltipResult.markupFragment ? buildTooltipMarkup(seriesTooltipResult.markupFragment, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), tooltipModel.get('textStyle')) : seriesTooltipResult.markupText;\r\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\r\n\r\n    this._showOrMove(tooltipModel, function () {\r\n      this._showTooltipContent(tooltipModel, markupText, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markupStyleCreator);\r\n    }); // FIXME\r\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\r\n\r\n\r\n    dispatchAction({\r\n      type: 'showTip',\r\n      dataIndexInside: dataIndex,\r\n      dataIndex: data.getRawIndex(dataIndex),\r\n      seriesIndex: seriesIndex,\r\n      from: this.uid\r\n    });\r\n  };\r\n\r\n  TooltipView.prototype._showComponentItemTooltip = function (e, el, dispatchAction) {\r\n    var ecData = getECData(el);\r\n    var tooltipConfig = ecData.tooltipConfig;\r\n    var tooltipOpt = tooltipConfig.option || {};\r\n\r\n    if (zrUtil.isString(tooltipOpt)) {\r\n      var content = tooltipOpt;\r\n      tooltipOpt = {\r\n        content: content,\r\n        // Fixed formatter\r\n        formatter: content\r\n      };\r\n    }\r\n\r\n    var tooltipModelCascade = [tooltipOpt];\r\n\r\n    var cmpt = this._ecModel.getComponent(ecData.componentMainType, ecData.componentIndex);\r\n\r\n    if (cmpt) {\r\n      tooltipModelCascade.push(cmpt);\r\n    } // In most cases, component tooltip formatter has different params with series tooltip formatter,\r\n    // so that they can not share the same formatter. Since the global tooltip formatter is used for series\r\n    // by convension, we do not use it as the default formatter for component.\r\n\r\n\r\n    tooltipModelCascade.push({\r\n      formatter: tooltipOpt.content\r\n    });\r\n    var positionDefault = e.positionDefault;\r\n    var subTooltipModel = buildTooltipModel(tooltipModelCascade, this._tooltipModel, positionDefault ? {\r\n      position: positionDefault\r\n    } : null);\r\n    var defaultHtml = subTooltipModel.get('content');\r\n    var asyncTicket = Math.random() + ''; // PENDING: this case do not support richText style yet.\r\n\r\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Do not check whether `trigger` is 'none' here, because `trigger`\r\n    // only works on coordinate system. In fact, we have not found case\r\n    // that requires setting `trigger` nothing on component yet.\r\n\r\n    this._showOrMove(subTooltipModel, function () {\r\n      // Use formatterParams from element defined in component\r\n      // Avoid users modify it.\r\n      var formatterParams = zrUtil.clone(subTooltipModel.get('formatterParams') || {});\r\n\r\n      this._showTooltipContent(subTooltipModel, defaultHtml, formatterParams, asyncTicket, e.offsetX, e.offsetY, e.position, el, markupStyleCreator);\r\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\r\n\r\n\r\n    dispatchAction({\r\n      type: 'showTip',\r\n      from: this.uid\r\n    });\r\n  };\r\n\r\n  TooltipView.prototype._showTooltipContent = function ( // Use Model<TooltipOption> insteadof TooltipModel because this model may be from series or other options.\r\n  // Instead of top level tooltip.\r\n  tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markupStyleCreator) {\r\n    // Reset ticket\r\n    this._ticket = '';\r\n\r\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var tooltipContent = this._tooltipContent;\r\n    var formatter = tooltipModel.get('formatter');\r\n    positionExpr = positionExpr || tooltipModel.get('position');\r\n    var html = defaultHtml;\r\n\r\n    var nearPoint = this._getNearestPoint([x, y], params, tooltipModel.get('trigger'), tooltipModel.get('borderColor'));\r\n\r\n    var nearPointColor = nearPoint.color;\r\n\r\n    if (formatter) {\r\n      if (zrUtil.isString(formatter)) {\r\n        var useUTC = tooltipModel.ecModel.get('useUTC');\r\n        var params0 = zrUtil.isArray(params) ? params[0] : params;\r\n        var isTimeAxis = params0 && params0.axisType && params0.axisType.indexOf('time') >= 0;\r\n        html = formatter;\r\n\r\n        if (isTimeAxis) {\r\n          html = timeFormat(params0.axisValue, html, useUTC);\r\n        }\r\n\r\n        html = formatUtil.formatTpl(html, params, true);\r\n      } else if (zrUtil.isFunction(formatter)) {\r\n        var callback = bind(function (cbTicket, html) {\r\n          if (cbTicket === this._ticket) {\r\n            tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\r\n\r\n            this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\r\n          }\r\n        }, this);\r\n        this._ticket = asyncTicket;\r\n        html = formatter(params, asyncTicket, callback);\r\n      } else {\r\n        html = formatter;\r\n      }\r\n    }\r\n\r\n    tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\r\n    tooltipContent.show(tooltipModel, nearPointColor);\r\n\r\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\r\n  };\r\n\r\n  TooltipView.prototype._getNearestPoint = function (point, tooltipDataParams, trigger, borderColor) {\r\n    if (trigger === 'axis' || zrUtil.isArray(tooltipDataParams)) {\r\n      return {\r\n        color: borderColor || (this._renderMode === 'html' ? '#fff' : 'none')\r\n      };\r\n    }\r\n\r\n    if (!zrUtil.isArray(tooltipDataParams)) {\r\n      return {\r\n        color: borderColor || tooltipDataParams.color || tooltipDataParams.borderColor\r\n      };\r\n    }\r\n  };\r\n\r\n  TooltipView.prototype._doUpdatePosition = function (tooltipModel, positionExpr, x, // Mouse x\r\n  y, // Mouse y\r\n  content, params, el) {\r\n    var viewWidth = this._api.getWidth();\r\n\r\n    var viewHeight = this._api.getHeight();\r\n\r\n    positionExpr = positionExpr || tooltipModel.get('position');\r\n    var contentSize = content.getSize();\r\n    var align = tooltipModel.get('align');\r\n    var vAlign = tooltipModel.get('verticalAlign');\r\n    var rect = el && el.getBoundingRect().clone();\r\n    el && rect.applyTransform(el.transform);\r\n\r\n    if (zrUtil.isFunction(positionExpr)) {\r\n      // Callback of position can be an array or a string specify the position\r\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\r\n        viewSize: [viewWidth, viewHeight],\r\n        contentSize: contentSize.slice()\r\n      });\r\n    }\r\n\r\n    if (zrUtil.isArray(positionExpr)) {\r\n      x = parsePercent(positionExpr[0], viewWidth);\r\n      y = parsePercent(positionExpr[1], viewHeight);\r\n    } else if (zrUtil.isObject(positionExpr)) {\r\n      var boxLayoutPosition = positionExpr;\r\n      boxLayoutPosition.width = contentSize[0];\r\n      boxLayoutPosition.height = contentSize[1];\r\n      var layoutRect = layoutUtil.getLayoutRect(boxLayoutPosition, {\r\n        width: viewWidth,\r\n        height: viewHeight\r\n      });\r\n      x = layoutRect.x;\r\n      y = layoutRect.y;\r\n      align = null; // When positionExpr is left/top/right/bottom,\r\n      // align and verticalAlign will not work.\r\n\r\n      vAlign = null;\r\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\r\n    else if (zrUtil.isString(positionExpr) && el) {\r\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize, tooltipModel.get('borderWidth'));\r\n        x = pos[0];\r\n        y = pos[1];\r\n      } else {\r\n        var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\r\n        x = pos[0];\r\n        y = pos[1];\r\n      }\r\n\r\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\r\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\r\n\r\n    if (shouldTooltipConfine(tooltipModel)) {\r\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\r\n      x = pos[0];\r\n      y = pos[1];\r\n    }\r\n\r\n    content.moveTo(x, y);\r\n  }; // FIXME\r\n  // Should we remove this but leave this to user?\r\n\r\n\r\n  TooltipView.prototype._updateContentNotChangedOnAxis = function (dataByCoordSys, cbParamsList) {\r\n    var lastCoordSys = this._lastDataByCoordSys;\r\n    var lastCbParamsList = this._cbParamsList;\r\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\r\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\r\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || [];\r\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\r\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\r\n      contentNotChanged = contentNotChanged && lastDataByAxis.length === thisDataByAxis.length;\r\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\r\n        var thisItem = thisDataByAxis[indexAxis] || {};\r\n        var lastIndices = lastItem.seriesDataIndices || [];\r\n        var newIndices = thisItem.seriesDataIndices || [];\r\n        contentNotChanged = contentNotChanged && lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\r\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\r\n          var newIdxItem = newIndices[j];\r\n          contentNotChanged = contentNotChanged && lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\r\n        }); // check is cbParams data value changed\r\n\r\n        lastCbParamsList && zrUtil.each(lastItem.seriesDataIndices, function (idxItem) {\r\n          var seriesIdx = idxItem.seriesIndex;\r\n          var cbParams = cbParamsList[seriesIdx];\r\n          var lastCbParams = lastCbParamsList[seriesIdx];\r\n\r\n          if (cbParams && lastCbParams && lastCbParams.data !== cbParams.data) {\r\n            contentNotChanged = false;\r\n          }\r\n        });\r\n      });\r\n    });\r\n    this._lastDataByCoordSys = dataByCoordSys;\r\n    this._cbParamsList = cbParamsList;\r\n    return !!contentNotChanged;\r\n  };\r\n\r\n  TooltipView.prototype._hide = function (dispatchAction) {\r\n    // Do not directly hideLater here, because this behavior may be prevented\r\n    // in dispatchAction when showTip is dispatched.\r\n    // FIXME\r\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\r\n    this._lastDataByCoordSys = null;\r\n    dispatchAction({\r\n      type: 'hideTip',\r\n      from: this.uid\r\n    });\r\n  };\r\n\r\n  TooltipView.prototype.dispose = function (ecModel, api) {\r\n    if (env.node) {\r\n      return;\r\n    }\r\n\r\n    this._tooltipContent.dispose();\r\n\r\n    globalListener.unregister('itemTooltip', api);\r\n  };\r\n\r\n  TooltipView.type = 'tooltip';\r\n  return TooltipView;\r\n}(ComponentView);\r\n/**\r\n * From top to bottom. (the last one should be globalTooltipModel);\r\n */\r\n\r\n\r\nfunction buildTooltipModel(modelCascade, globalTooltipModel, defaultTooltipOption) {\r\n  // Last is always tooltip model.\r\n  var ecModel = globalTooltipModel.ecModel;\r\n  var resultModel;\r\n\r\n  if (defaultTooltipOption) {\r\n    resultModel = new Model(defaultTooltipOption, ecModel, ecModel);\r\n    resultModel = new Model(globalTooltipModel.option, resultModel, ecModel);\r\n  } else {\r\n    resultModel = globalTooltipModel;\r\n  }\r\n\r\n  for (var i = modelCascade.length - 1; i >= 0; i--) {\r\n    var tooltipOpt = modelCascade[i];\r\n\r\n    if (tooltipOpt) {\r\n      if (tooltipOpt instanceof Model) {\r\n        tooltipOpt = tooltipOpt.get('tooltip', true);\r\n      } // In each data item tooltip can be simply write:\r\n      // {\r\n      //  value: 10,\r\n      //  tooltip: 'Something you need to know'\r\n      // }\r\n\r\n\r\n      if (zrUtil.isString(tooltipOpt)) {\r\n        tooltipOpt = {\r\n          formatter: tooltipOpt\r\n        };\r\n      }\r\n\r\n      if (tooltipOpt) {\r\n        resultModel = new Model(tooltipOpt, resultModel, ecModel);\r\n      }\r\n    }\r\n  }\r\n\r\n  return resultModel;\r\n}\r\n\r\nfunction makeDispatchAction(payload, api) {\r\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\r\n}\r\n\r\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\r\n  var size = content.getSize();\r\n  var width = size[0];\r\n  var height = size[1];\r\n\r\n  if (gapH != null) {\r\n    // Add extra 2 pixels for this case:\r\n    // At present the \"values\" in defaut tooltip are using CSS `float: right`.\r\n    // When the right edge of the tooltip box is on the right side of the\r\n    // viewport, the `float` layout might push the \"values\" to the second line.\r\n    if (x + width + gapH + 2 > viewWidth) {\r\n      x -= width + gapH;\r\n    } else {\r\n      x += gapH;\r\n    }\r\n  }\r\n\r\n  if (gapV != null) {\r\n    if (y + height + gapV > viewHeight) {\r\n      y -= height + gapV;\r\n    } else {\r\n      y += gapV;\r\n    }\r\n  }\r\n\r\n  return [x, y];\r\n}\r\n\r\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\r\n  var size = content.getSize();\r\n  var width = size[0];\r\n  var height = size[1];\r\n  x = Math.min(x + width, viewWidth) - width;\r\n  y = Math.min(y + height, viewHeight) - height;\r\n  x = Math.max(x, 0);\r\n  y = Math.max(y, 0);\r\n  return [x, y];\r\n}\r\n\r\nfunction calcTooltipPosition(position, rect, contentSize, borderWidth) {\r\n  var domWidth = contentSize[0];\r\n  var domHeight = contentSize[1];\r\n  var offset = Math.ceil(Math.SQRT2 * borderWidth) + 8;\r\n  var x = 0;\r\n  var y = 0;\r\n  var rectWidth = rect.width;\r\n  var rectHeight = rect.height;\r\n\r\n  switch (position) {\r\n    case 'inside':\r\n      x = rect.x + rectWidth / 2 - domWidth / 2;\r\n      y = rect.y + rectHeight / 2 - domHeight / 2;\r\n      break;\r\n\r\n    case 'top':\r\n      x = rect.x + rectWidth / 2 - domWidth / 2;\r\n      y = rect.y - domHeight - offset;\r\n      break;\r\n\r\n    case 'bottom':\r\n      x = rect.x + rectWidth / 2 - domWidth / 2;\r\n      y = rect.y + rectHeight + offset;\r\n      break;\r\n\r\n    case 'left':\r\n      x = rect.x - domWidth - offset;\r\n      y = rect.y + rectHeight / 2 - domHeight / 2;\r\n      break;\r\n\r\n    case 'right':\r\n      x = rect.x + rectWidth + offset;\r\n      y = rect.y + rectHeight / 2 - domHeight / 2;\r\n  }\r\n\r\n  return [x, y];\r\n}\r\n\r\nfunction isCenterAlign(align) {\r\n  return align === 'center' || align === 'middle';\r\n}\r\n/**\r\n * Find target component by payload like:\r\n * ```js\r\n * { legendId: 'some_id', name: 'xxx' }\r\n * { toolboxIndex: 1, name: 'xxx' }\r\n * { geoName: 'some_name', name: 'xxx' }\r\n * ```\r\n * PENDING: at present only\r\n *\r\n * If not found, return null/undefined.\r\n */\r\n\r\n\r\nfunction findComponentReference(payload, ecModel, api) {\r\n  var queryOptionMap = preParseFinder(payload).queryOptionMap;\r\n  var componentMainType = queryOptionMap.keys()[0];\r\n\r\n  if (!componentMainType || componentMainType === 'series') {\r\n    return;\r\n  }\r\n\r\n  var queryResult = queryReferringComponents(ecModel, componentMainType, queryOptionMap.get(componentMainType), {\r\n    useDefault: false,\r\n    enableAll: false,\r\n    enableNone: false\r\n  });\r\n  var model = queryResult.models[0];\r\n\r\n  if (!model) {\r\n    return;\r\n  }\r\n\r\n  var view = api.getViewOfComponentModel(model);\r\n  var el;\r\n  view.group.traverse(function (subEl) {\r\n    var tooltipConfig = getECData(subEl).tooltipConfig;\r\n\r\n    if (tooltipConfig && tooltipConfig.name === payload.name) {\r\n      el = subEl;\r\n      return true; // stop\r\n    }\r\n  });\r\n\r\n  if (el) {\r\n    return {\r\n      componentMainType: componentMainType,\r\n      componentIndex: model.componentIndex,\r\n      el: el\r\n    };\r\n  }\r\n}\r\n\r\nexport default TooltipView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { install as installAxisPointer } from '../axisPointer/install';\r\nimport { use } from '../../extension';\r\nimport TooltipModel from './TooltipModel';\r\nimport TooltipView from './TooltipView';\r\nexport function install(registers) {\r\n  use(installAxisPointer);\r\n  registers.registerComponentModel(TooltipModel);\r\n  registers.registerComponentView(TooltipView);\r\n  /**\r\n   * @action\r\n   * @property {string} type\r\n   * @property {number} seriesIndex\r\n   * @property {number} dataIndex\r\n   * @property {number} [x]\r\n   * @property {number} [y]\r\n   */\r\n\r\n  registers.registerAction({\r\n    type: 'showTip',\r\n    event: 'showTip',\r\n    update: 'tooltip:manuallyShowTip'\r\n  }, // noop\r\n  function () {});\r\n  registers.registerAction({\r\n    type: 'hideTip',\r\n    event: 'hideTip',\r\n    update: 'tooltip:manuallyHideTip'\r\n  }, // noop\r\n  function () {});\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { normalizeToArray } from '../../util/model';\r\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\r\nexport default function brushPreprocessor(option, isNew) {\r\n  var brushComponents = normalizeToArray(option ? option.brush : []);\r\n\r\n  if (!brushComponents.length) {\r\n    return;\r\n  }\r\n\r\n  var brushComponentSpecifiedBtns = [];\r\n  zrUtil.each(brushComponents, function (brushOpt) {\r\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\r\n\r\n    if (tbs instanceof Array) {\r\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\r\n    }\r\n  });\r\n  var toolbox = option && option.toolbox;\r\n\r\n  if (zrUtil.isArray(toolbox)) {\r\n    toolbox = toolbox[0];\r\n  }\r\n\r\n  if (!toolbox) {\r\n    toolbox = {\r\n      feature: {}\r\n    };\r\n    option.toolbox = [toolbox];\r\n  }\r\n\r\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\r\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\r\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\r\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\r\n  removeDuplicate(brushTypes);\r\n\r\n  if (isNew && !brushTypes.length) {\r\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\r\n  }\r\n}\r\n\r\nfunction removeDuplicate(arr) {\r\n  var map = {};\r\n  zrUtil.each(arr, function (val) {\r\n    map[val] = 1;\r\n  });\r\n  arr.length = 0;\r\n  zrUtil.each(map, function (flag, val) {\r\n    arr.push(val);\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @file Visual solution, for consistent option specification.\r\n */\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport VisualMapping from './VisualMapping';\r\nimport { getItemVisualFromData, setItemVisualFromData } from './helper';\r\nvar each = zrUtil.each;\r\n\r\nfunction hasKeys(obj) {\r\n  if (obj) {\r\n    for (var name_1 in obj) {\r\n      if (obj.hasOwnProperty(name_1)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function createVisualMappings(option, stateList, supplementVisualOption) {\r\n  var visualMappings = {};\r\n  each(stateList, function (state) {\r\n    var mappings = visualMappings[state] = createMappings();\r\n    each(option[state], function (visualData, visualType) {\r\n      if (!VisualMapping.isValidType(visualType)) {\r\n        return;\r\n      }\r\n\r\n      var mappingOption = {\r\n        type: visualType,\r\n        visual: visualData\r\n      };\r\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\r\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\r\n      // is not supported, such as rendering using gradient color.\r\n\r\n      if (visualType === 'opacity') {\r\n        mappingOption = zrUtil.clone(mappingOption);\r\n        mappingOption.type = 'colorAlpha';\r\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\r\n      }\r\n    });\r\n  });\r\n  return visualMappings;\r\n\r\n  function createMappings() {\r\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\r\n    // object iteration (with hasOwnProperty checking).\r\n\r\n\r\n    Creater.prototype.__hidden = Creater.prototype;\r\n    var obj = new Creater();\r\n    return obj;\r\n  }\r\n}\r\nexport function replaceVisualOption(thisOption, newOption, keys) {\r\n  // Visual attributes merge is not supported, otherwise it\r\n  // brings overcomplicated merge logic. See #2853. So if\r\n  // newOption has anyone of these keys, all of these keys\r\n  // will be reset. Otherwise, all keys remain.\r\n  var has;\r\n  zrUtil.each(keys, function (key) {\r\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\r\n      has = true;\r\n    }\r\n  });\r\n  has && zrUtil.each(keys, function (key) {\r\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\r\n      thisOption[key] = zrUtil.clone(newOption[key]);\r\n    } else {\r\n      delete thisOption[key];\r\n    }\r\n  });\r\n}\r\n/**\r\n * @param stateList\r\n * @param visualMappings\r\n * @param list\r\n * @param getValueState param: valueOrIndex, return: state.\r\n * @param scope Scope for getValueState\r\n * @param dimension Concrete dimension, if used.\r\n */\r\n// ???! handle brush?\r\n\r\nexport function applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\r\n  var visualTypesMap = {};\r\n  zrUtil.each(stateList, function (state) {\r\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\r\n    visualTypesMap[state] = visualTypes;\r\n  });\r\n  var dataIndex;\r\n\r\n  function getVisual(key) {\r\n    return getItemVisualFromData(data, dataIndex, key);\r\n  }\r\n\r\n  function setVisual(key, value) {\r\n    setItemVisualFromData(data, dataIndex, key, value);\r\n  }\r\n\r\n  if (dimension == null) {\r\n    data.each(eachItem);\r\n  } else {\r\n    data.each([dimension], eachItem);\r\n  }\r\n\r\n  function eachItem(valueOrIndex, index) {\r\n    dataIndex = dimension == null ? valueOrIndex // First argument is index\r\n    : index;\r\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\r\n    // @ts-ignore\r\n\r\n    if (rawDataItem && rawDataItem.visualMap === false) {\r\n      return;\r\n    }\r\n\r\n    var valueState = getValueState.call(scope, valueOrIndex);\r\n    var mappings = visualMappings[valueState];\r\n    var visualTypes = visualTypesMap[valueState];\r\n\r\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\r\n      var type = visualTypes[i];\r\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\r\n    }\r\n  }\r\n}\r\n/**\r\n * @param data\r\n * @param stateList\r\n * @param visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\r\n * @param getValueState param: valueOrIndex, return: state.\r\n * @param dim dimension or dimension index.\r\n */\r\n\r\nexport function incrementalApplyVisual(stateList, visualMappings, getValueState, dim) {\r\n  var visualTypesMap = {};\r\n  zrUtil.each(stateList, function (state) {\r\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\r\n    visualTypesMap[state] = visualTypes;\r\n  });\r\n  return {\r\n    progress: function progress(params, data) {\r\n      var dimIndex;\r\n\r\n      if (dim != null) {\r\n        dimIndex = data.getDimensionIndex(dim);\r\n      }\r\n\r\n      function getVisual(key) {\r\n        return getItemVisualFromData(data, dataIndex, key);\r\n      }\r\n\r\n      function setVisual(key, value) {\r\n        setItemVisualFromData(data, dataIndex, key, value);\r\n      }\r\n\r\n      var dataIndex;\r\n      var store = data.getStore();\r\n\r\n      while ((dataIndex = params.next()) != null) {\r\n        var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\r\n        // @ts-ignore\r\n\r\n        if (rawDataItem && rawDataItem.visualMap === false) {\r\n          continue;\r\n        }\r\n\r\n        var value = dim != null ? store.get(dimIndex, dataIndex) : dataIndex;\r\n        var valueState = getValueState(value);\r\n        var mappings = visualMappings[valueState];\r\n        var visualTypes = visualTypesMap[valueState];\r\n\r\n        for (var i = 0, len = visualTypes.length; i < len; i++) {\r\n          var type = visualTypes[i];\r\n          mappings[type] && mappings[type].applyVisual(value, getVisual, setVisual);\r\n        }\r\n      }\r\n    }\r\n  };\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as polygonContain from 'zrender/lib/contain/polygon';\r\nimport BoundingRect from 'zrender/lib/core/BoundingRect';\r\nimport { linePolygonIntersect } from '../../util/graphic';\r\nexport function makeBrushCommonSelectorForSeries(area) {\r\n  var brushType = area.brushType; // Do not use function binding or curry for performance.\r\n\r\n  var selectors = {\r\n    point: function (itemLayout) {\r\n      return selector[brushType].point(itemLayout, selectors, area);\r\n    },\r\n    rect: function (itemLayout) {\r\n      return selector[brushType].rect(itemLayout, selectors, area);\r\n    }\r\n  };\r\n  return selectors;\r\n}\r\nvar selector = {\r\n  lineX: getLineSelectors(0),\r\n  lineY: getLineSelectors(1),\r\n  rect: {\r\n    point: function (itemLayout, selectors, area) {\r\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\r\n    },\r\n    rect: function (itemLayout, selectors, area) {\r\n      return itemLayout && area.boundingRect.intersect(itemLayout);\r\n    }\r\n  },\r\n  polygon: {\r\n    point: function (itemLayout, selectors, area) {\r\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\r\n    },\r\n    rect: function (itemLayout, selectors, area) {\r\n      var points = area.range;\r\n\r\n      if (!itemLayout || points.length <= 1) {\r\n        return false;\r\n      }\r\n\r\n      var x = itemLayout.x;\r\n      var y = itemLayout.y;\r\n      var width = itemLayout.width;\r\n      var height = itemLayout.height;\r\n      var p = points[0];\r\n\r\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || linePolygonIntersect(x, y, x + width, y, points) || linePolygonIntersect(x, y, x, y + height, points) || linePolygonIntersect(x + width, y, x + width, y + height, points) || linePolygonIntersect(x, y + height, x + width, y + height, points)) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction getLineSelectors(xyIndex) {\r\n  var xy = ['x', 'y'];\r\n  var wh = ['width', 'height'];\r\n  return {\r\n    point: function (itemLayout, selectors, area) {\r\n      if (itemLayout) {\r\n        var range = area.range;\r\n        var p = itemLayout[xyIndex];\r\n        return inLineRange(p, range);\r\n      }\r\n    },\r\n    rect: function (itemLayout, selectors, area) {\r\n      if (itemLayout) {\r\n        var range = area.range;\r\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\r\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\r\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nfunction inLineRange(p, range) {\r\n  return range[0] <= p && p <= range[1];\r\n}\r\n\r\nexport default selector;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport BoundingRect from 'zrender/lib/core/BoundingRect';\r\nimport * as visualSolution from '../../visual/visualSolution';\r\nimport { makeBrushCommonSelectorForSeries } from './selector';\r\nimport * as throttleUtil from '../../util/throttle';\r\nimport BrushTargetManager from '../helper/BrushTargetManager';\r\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\r\nvar DISPATCH_METHOD = '__ecBrushSelect';\r\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\r\n;\r\nexport function layoutCovers(ecModel) {\r\n  ecModel.eachComponent({\r\n    mainType: 'brush'\r\n  }, function (brushModel) {\r\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\r\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\r\n  });\r\n}\r\n/**\r\n * Register the visual encoding if this modules required.\r\n */\r\n\r\nexport default function brushVisual(ecModel, api, payload) {\r\n  var brushSelected = [];\r\n  var throttleType;\r\n  var throttleDelay;\r\n  ecModel.eachComponent({\r\n    mainType: 'brush'\r\n  }, function (brushModel) {\r\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\r\n      brushType: false\r\n    });\r\n  });\r\n  layoutCovers(ecModel);\r\n  ecModel.eachComponent({\r\n    mainType: 'brush'\r\n  }, function (brushModel, brushIndex) {\r\n    var thisBrushSelected = {\r\n      brushId: brushModel.id,\r\n      brushIndex: brushIndex,\r\n      brushName: brushModel.name,\r\n      areas: zrUtil.clone(brushModel.areas),\r\n      selected: []\r\n    }; // Every brush component exists in event params, convenient\r\n    // for user to find by index.\r\n\r\n    brushSelected.push(thisBrushSelected);\r\n    var brushOption = brushModel.option;\r\n    var brushLink = brushOption.brushLink;\r\n    var linkedSeriesMap = [];\r\n    var selectedDataIndexForLink = [];\r\n    var rangeInfoBySeries = [];\r\n    var hasBrushExists = false;\r\n\r\n    if (!brushIndex) {\r\n      // Only the first throttle setting works.\r\n      throttleType = brushOption.throttleType;\r\n      throttleDelay = brushOption.throttleDelay;\r\n    } // Add boundingRect and selectors to range.\r\n\r\n\r\n    var areas = zrUtil.map(brushModel.areas, function (area) {\r\n      var builder = boundingRectBuilders[area.brushType];\r\n      var selectableArea = zrUtil.defaults({\r\n        boundingRect: builder ? builder(area) : void 0\r\n      }, area);\r\n      selectableArea.selectors = makeBrushCommonSelectorForSeries(selectableArea);\r\n      return selectableArea;\r\n    });\r\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\r\n      mappingOption.mappingMethod = 'fixed';\r\n    });\r\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\r\n      linkedSeriesMap[seriesIndex] = 1;\r\n    });\r\n\r\n    function linkOthers(seriesIndex) {\r\n      return brushLink === 'all' || !!linkedSeriesMap[seriesIndex];\r\n    } // If no supported brush or no brush on the series,\r\n    // all visuals should be in original state.\r\n\r\n\r\n    function brushed(rangeInfoList) {\r\n      return !!rangeInfoList.length;\r\n    }\r\n    /**\r\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\r\n     *\r\n     * ( brushed \u252C && \u252ChasBrushExist \u252C && linkOthers  ) => StepA: \u252Crecord, \u252C StepB: \u252CvisualByRecord.\r\n     *   !brushed\u2518    \u251ChasBrushExist \u2524                            \u2514nothing,\u2518        \u251CvisualByRecord.\r\n     *                \u2514!hasBrushExist\u2518                                              \u2514nothing.\r\n     * ( !brushed  && \u252ChasBrushExist \u252C && linkOthers  ) => StepA:  nothing,  StepB: \u252CvisualByRecord.\r\n     *                \u2514!hasBrushExist\u2518                                              \u2514nothing.\r\n     * ( brushed \u252C &&                     !linkOthers ) => StepA:  nothing,  StepB: \u252CvisualByCheck.\r\n     *   !brushed\u2518                                                                  \u2514nothing.\r\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\r\n     */\r\n    // Step A\r\n\r\n\r\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\r\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\r\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\r\n    });\r\n\r\n    function stepAParallel(seriesModel, seriesIndex) {\r\n      var coordSys = seriesModel.coordinateSystem;\r\n      hasBrushExists = hasBrushExists || coordSys.hasAxisBrushed();\r\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\r\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\r\n      });\r\n    }\r\n\r\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\r\n      if (!seriesModel.brushSelector || brushModelNotControll(brushModel, seriesIndex)) {\r\n        return;\r\n      }\r\n\r\n      zrUtil.each(areas, function (area) {\r\n        if (brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel)) {\r\n          rangeInfoList.push(area);\r\n        }\r\n\r\n        hasBrushExists = hasBrushExists || brushed(rangeInfoList);\r\n      });\r\n\r\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\r\n        var data_1 = seriesModel.getData();\r\n        data_1.each(function (dataIndex) {\r\n          if (checkInRange(seriesModel, rangeInfoList, data_1, dataIndex)) {\r\n            selectedDataIndexForLink[dataIndex] = 1;\r\n          }\r\n        });\r\n      }\r\n    } // Step B\r\n\r\n\r\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\r\n      var seriesBrushSelected = {\r\n        seriesId: seriesModel.id,\r\n        seriesIndex: seriesIndex,\r\n        seriesName: seriesModel.name,\r\n        dataIndex: []\r\n      }; // Every series exists in event params, convenient\r\n      // for user to find series by seriesIndex.\r\n\r\n      thisBrushSelected.selected.push(seriesBrushSelected);\r\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\r\n      var data = seriesModel.getData();\r\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\r\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\r\n      } : function (dataIndex) {\r\n        return checkInRange(seriesModel, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\r\n      }; // If no supported brush or no brush, all visuals are in original state.\r\n\r\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\r\n    });\r\n  });\r\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\r\n}\r\n;\r\n\r\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\r\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\r\n  // triggered when do `setOption` in event listener, which we do not find\r\n  // satisfactory way to solve yet. Some considered resolutions:\r\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\r\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\r\n  // also detect value changes in selected data) might bring complexity or fragility.\r\n  // (b) Use spectial param like `silent` to suppress event triggering.\r\n  // But such kind of volatile param may be weird in `setOption`.\r\n  if (!payload) {\r\n    return;\r\n  }\r\n\r\n  var zr = api.getZr();\r\n\r\n  if (zr[DISPATCH_FLAG]) {\r\n    return;\r\n  }\r\n\r\n  if (!zr[DISPATCH_METHOD]) {\r\n    zr[DISPATCH_METHOD] = doDispatch;\r\n  }\r\n\r\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\r\n  fn(api, brushSelected);\r\n}\r\n\r\nfunction doDispatch(api, brushSelected) {\r\n  if (!api.isDisposed()) {\r\n    var zr = api.getZr();\r\n    zr[DISPATCH_FLAG] = true;\r\n    api.dispatchAction({\r\n      type: 'brushSelect',\r\n      batch: brushSelected\r\n    });\r\n    zr[DISPATCH_FLAG] = false;\r\n  }\r\n}\r\n\r\nfunction checkInRange(seriesModel, rangeInfoList, data, dataIndex) {\r\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\r\n    var area = rangeInfoList[i];\r\n\r\n    if (seriesModel.brushSelector(dataIndex, data, area.selectors, area)) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nfunction brushModelNotControll(brushModel, seriesIndex) {\r\n  var seriesIndices = brushModel.option.seriesIndex;\r\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\r\n}\r\n\r\nvar boundingRectBuilders = {\r\n  rect: function (area) {\r\n    return getBoundingRectFromMinMax(area.range);\r\n  },\r\n  polygon: function (area) {\r\n    var minMax;\r\n    var range = area.range;\r\n\r\n    for (var i = 0, len = range.length; i < len; i++) {\r\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\r\n      var rg = range[i];\r\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\r\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\r\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\r\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\r\n    }\r\n\r\n    return minMax && getBoundingRectFromMinMax(minMax);\r\n  }\r\n};\r\n\r\nfunction getBoundingRectFromMinMax(minMax) {\r\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport BrushController from '../helper/BrushController';\r\nimport { layoutCovers } from './visualEncoding';\r\nimport ComponentView from '../../view/Component';\r\n\r\nvar BrushView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(BrushView, _super);\r\n\r\n  function BrushView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = BrushView.type;\r\n    return _this;\r\n  }\r\n\r\n  BrushView.prototype.init = function (ecModel, api) {\r\n    this.ecModel = ecModel;\r\n    this.api = api;\r\n    this.model;\r\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\r\n  };\r\n\r\n  BrushView.prototype.render = function (brushModel, ecModel, api, payload) {\r\n    this.model = brushModel;\r\n\r\n    this._updateController(brushModel, ecModel, api, payload);\r\n  };\r\n\r\n  BrushView.prototype.updateTransform = function (brushModel, ecModel, api, payload) {\r\n    // PENDING: `updateTransform` is a little tricky, whose layout need\r\n    // to be calculate mandatorily and other stages will not be performed.\r\n    // Take care the correctness of the logic. See #11754 .\r\n    layoutCovers(ecModel);\r\n\r\n    this._updateController(brushModel, ecModel, api, payload);\r\n  };\r\n\r\n  BrushView.prototype.updateVisual = function (brushModel, ecModel, api, payload) {\r\n    this.updateTransform(brushModel, ecModel, api, payload);\r\n  };\r\n\r\n  BrushView.prototype.updateView = function (brushModel, ecModel, api, payload) {\r\n    this._updateController(brushModel, ecModel, api, payload);\r\n  };\r\n\r\n  BrushView.prototype._updateController = function (brushModel, ecModel, api, payload) {\r\n    // Do not update controller when drawing.\r\n    (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\r\n  }; // updateLayout: updateController,\r\n  // updateVisual: updateController,\r\n\r\n\r\n  BrushView.prototype.dispose = function () {\r\n    this._brushController.dispose();\r\n  };\r\n\r\n  BrushView.prototype._onBrush = function (eventParam) {\r\n    var modelId = this.model.id;\r\n    var areas = this.model.brushTargetManager.setOutputRanges(eventParam.areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\r\n    // emits the same params with the last drag move event, and\r\n    // may have some delay when using touch pad, which makes\r\n    // animation not smooth (when using debounce).\r\n\r\n    (!eventParam.isEnd || eventParam.removeOnClick) && this.api.dispatchAction({\r\n      type: 'brush',\r\n      brushId: modelId,\r\n      areas: zrUtil.clone(areas),\r\n      $from: modelId\r\n    });\r\n    eventParam.isEnd && this.api.dispatchAction({\r\n      type: 'brushEnd',\r\n      brushId: modelId,\r\n      areas: zrUtil.clone(areas),\r\n      $from: modelId\r\n    });\r\n  };\r\n\r\n  BrushView.type = 'brush';\r\n  return BrushView;\r\n}(ComponentView);\r\n\r\nexport default BrushView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as visualSolution from '../../visual/visualSolution';\r\nimport Model from '../../model/Model';\r\nimport ComponentModel from '../../model/Component';\r\nvar DEFAULT_OUT_OF_BRUSH_COLOR = '#ddd';\r\n\r\nvar BrushModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(BrushModel, _super);\r\n\r\n  function BrushModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = BrushModel.type;\r\n    /**\r\n     * @readOnly\r\n     */\r\n\r\n    _this.areas = [];\r\n    /**\r\n     * Current brush painting area settings.\r\n     * @readOnly\r\n     */\r\n\r\n    _this.brushOption = {};\r\n    return _this;\r\n  }\r\n\r\n  BrushModel.prototype.optionUpdated = function (newOption, isInit) {\r\n    var thisOption = this.option;\r\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\r\n    var inBrush = thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\r\n\r\n    thisOption.outOfBrush = thisOption.outOfBrush || {\r\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\r\n    };\r\n\r\n    if (!inBrush.hasOwnProperty('liftZ')) {\r\n      // Bigger than the highlight z lift, otherwise it will\r\n      // be effected by the highlight z when brush.\r\n      inBrush.liftZ = 5;\r\n    }\r\n  };\r\n  /**\r\n   * If `areas` is null/undefined, range state remain.\r\n   */\r\n\r\n\r\n  BrushModel.prototype.setAreas = function (areas) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      zrUtil.assert(zrUtil.isArray(areas));\r\n      zrUtil.each(areas, function (area) {\r\n        zrUtil.assert(area.brushType, 'Illegal areas');\r\n      });\r\n    } // If areas is null/undefined, range state remain.\r\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\r\n    // set but just want to get the current brush select info from a `brush` event.\r\n\r\n\r\n    if (!areas) {\r\n      return;\r\n    }\r\n\r\n    this.areas = zrUtil.map(areas, function (area) {\r\n      return generateBrushOption(this.option, area);\r\n    }, this);\r\n  };\r\n  /**\r\n   * Set the current painting brush option.\r\n   */\r\n\r\n\r\n  BrushModel.prototype.setBrushOption = function (brushOption) {\r\n    this.brushOption = generateBrushOption(this.option, brushOption);\r\n    this.brushType = this.brushOption.brushType;\r\n  };\r\n\r\n  BrushModel.type = 'brush';\r\n  BrushModel.dependencies = ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'];\r\n  BrushModel.defaultOption = {\r\n    seriesIndex: 'all',\r\n    brushType: 'rect',\r\n    brushMode: 'single',\r\n    transformable: true,\r\n    brushStyle: {\r\n      borderWidth: 1,\r\n      color: 'rgba(210,219,238,0.3)',\r\n      borderColor: '#D2DBEE'\r\n    },\r\n    throttleType: 'fixRate',\r\n    throttleDelay: 0,\r\n    removeOnClick: true,\r\n    z: 10000\r\n  };\r\n  return BrushModel;\r\n}(ComponentModel);\r\n\r\nfunction generateBrushOption(option, brushOption) {\r\n  return zrUtil.merge({\r\n    brushType: option.brushType,\r\n    brushMode: option.brushMode,\r\n    transformable: option.transformable,\r\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\r\n    removeOnClick: option.removeOnClick,\r\n    z: option.z\r\n  }, brushOption, true);\r\n}\r\n\r\nexport default BrushModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { ToolboxFeature } from '../featureManager';\r\nvar ICON_TYPES = ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'];\r\n\r\nvar BrushFeature =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(BrushFeature, _super);\r\n\r\n  function BrushFeature() {\r\n    return _super !== null && _super.apply(this, arguments) || this;\r\n  }\r\n\r\n  BrushFeature.prototype.render = function (featureModel, ecModel, api) {\r\n    var brushType;\r\n    var brushMode;\r\n    var isBrushed;\r\n    ecModel.eachComponent({\r\n      mainType: 'brush'\r\n    }, function (brushModel) {\r\n      brushType = brushModel.brushType;\r\n      brushMode = brushModel.brushOption.brushMode || 'single';\r\n      isBrushed = isBrushed || !!brushModel.areas.length;\r\n    });\r\n    this._brushType = brushType;\r\n    this._brushMode = brushMode;\r\n    zrUtil.each(featureModel.get('type', true), function (type) {\r\n      featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\r\n    });\r\n  };\r\n\r\n  BrushFeature.prototype.updateView = function (featureModel, ecModel, api) {\r\n    this.render(featureModel, ecModel, api);\r\n  };\r\n\r\n  BrushFeature.prototype.getIcons = function () {\r\n    var model = this.model;\r\n    var availableIcons = model.get('icon', true);\r\n    var icons = {};\r\n    zrUtil.each(model.get('type', true), function (type) {\r\n      if (availableIcons[type]) {\r\n        icons[type] = availableIcons[type];\r\n      }\r\n    });\r\n    return icons;\r\n  };\r\n\r\n  ;\r\n\r\n  BrushFeature.prototype.onclick = function (ecModel, api, type) {\r\n    var brushType = this._brushType;\r\n    var brushMode = this._brushMode;\r\n\r\n    if (type === 'clear') {\r\n      // Trigger parallel action firstly\r\n      api.dispatchAction({\r\n        type: 'axisAreaSelect',\r\n        intervals: []\r\n      });\r\n      api.dispatchAction({\r\n        type: 'brush',\r\n        command: 'clear',\r\n        // Clear all areas of all brush components.\r\n        areas: []\r\n      });\r\n    } else {\r\n      api.dispatchAction({\r\n        type: 'takeGlobalCursor',\r\n        key: 'brush',\r\n        brushOption: {\r\n          brushType: type === 'keep' ? brushType : brushType === type ? false : type,\r\n          brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  ;\r\n\r\n  BrushFeature.getDefaultOption = function (ecModel) {\r\n    var defaultOption = {\r\n      show: true,\r\n      type: ICON_TYPES.slice(),\r\n      icon: {\r\n        /* eslint-disable */\r\n        rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\r\n        polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\r\n        lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\r\n        lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\r\n        keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\r\n        clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\r\n\r\n        /* eslint-enable */\r\n\r\n      },\r\n      // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\r\n      title: ecModel.getLocaleModel().get(['toolbox', 'brush', 'title'])\r\n    };\r\n    return defaultOption;\r\n  };\r\n\r\n  return BrushFeature;\r\n}(ToolboxFeature);\r\n\r\nexport default BrushFeature;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport brushPreprocessor from './preprocessor';\r\nimport BrushView from './BrushView';\r\nimport BrushModel from './BrushModel';\r\nimport brushVisual from './visualEncoding'; // TODO\r\n\r\nimport BrushFeature from '../toolbox/feature/Brush';\r\nimport { registerFeature } from '../toolbox/featureManager';\r\nexport function install(registers) {\r\n  registers.registerComponentView(BrushView);\r\n  registers.registerComponentModel(BrushModel);\r\n  registers.registerPreprocessor(brushPreprocessor);\r\n  registers.registerVisual(registers.PRIORITY.VISUAL.BRUSH, brushVisual);\r\n  registers.registerAction({\r\n    type: 'brush',\r\n    event: 'brush',\r\n    update: 'updateVisual'\r\n  }, function (payload, ecModel) {\r\n    ecModel.eachComponent({\r\n      mainType: 'brush',\r\n      query: payload\r\n    }, function (brushModel) {\r\n      brushModel.setAreas(payload.areas);\r\n    });\r\n  });\r\n  /**\r\n   * payload: {\r\n   *      brushComponents: [\r\n   *          {\r\n   *              brushId,\r\n   *              brushIndex,\r\n   *              brushName,\r\n   *              series: [\r\n   *                  {\r\n   *                      seriesId,\r\n   *                      seriesIndex,\r\n   *                      seriesName,\r\n   *                      rawIndices: [21, 34, ...]\r\n   *                  },\r\n   *                  ...\r\n   *              ]\r\n   *          },\r\n   *          ...\r\n   *      ]\r\n   * }\r\n   */\r\n\r\n  registers.registerAction({\r\n    type: 'brushSelect',\r\n    event: 'brushSelected',\r\n    update: 'none'\r\n  }, function () {});\r\n  registers.registerAction({\r\n    type: 'brushEnd',\r\n    event: 'brushEnd',\r\n    update: 'none'\r\n  }, function () {});\r\n  registerFeature('brush', BrushFeature);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as graphic from '../../util/graphic';\r\nimport { getECData } from '../../util/innerStore';\r\nimport { createTextStyle } from '../../label/labelStyle';\r\nimport { getLayoutRect } from '../../util/layout';\r\nimport ComponentModel from '../../model/Component';\r\nimport ComponentView from '../../view/Component';\r\nimport { windowOpen } from '../../util/format';\r\n\r\nvar TitleModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(TitleModel, _super);\r\n\r\n  function TitleModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = TitleModel.type;\r\n    _this.layoutMode = {\r\n      type: 'box',\r\n      ignoreSize: true\r\n    };\r\n    return _this;\r\n  }\r\n\r\n  TitleModel.type = 'title';\r\n  TitleModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 6,\r\n    show: true,\r\n    text: '',\r\n    target: 'blank',\r\n    subtext: '',\r\n    subtarget: 'blank',\r\n    left: 0,\r\n    top: 0,\r\n    backgroundColor: 'rgba(0,0,0,0)',\r\n    borderColor: '#ccc',\r\n    borderWidth: 0,\r\n    padding: 5,\r\n    itemGap: 10,\r\n    textStyle: {\r\n      fontSize: 18,\r\n      fontWeight: 'bold',\r\n      color: '#464646'\r\n    },\r\n    subtextStyle: {\r\n      fontSize: 12,\r\n      color: '#6E7079'\r\n    }\r\n  };\r\n  return TitleModel;\r\n}(ComponentModel); // View\r\n\r\n\r\nvar TitleView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(TitleView, _super);\r\n\r\n  function TitleView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = TitleView.type;\r\n    return _this;\r\n  }\r\n\r\n  TitleView.prototype.render = function (titleModel, ecModel, api) {\r\n    this.group.removeAll();\r\n\r\n    if (!titleModel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var group = this.group;\r\n    var textStyleModel = titleModel.getModel('textStyle');\r\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\r\n    var textAlign = titleModel.get('textAlign');\r\n    var textVerticalAlign = zrUtil.retrieve2(titleModel.get('textBaseline'), titleModel.get('textVerticalAlign'));\r\n    var textEl = new graphic.Text({\r\n      style: createTextStyle(textStyleModel, {\r\n        text: titleModel.get('text'),\r\n        fill: textStyleModel.getTextColor()\r\n      }, {\r\n        disableBox: true\r\n      }),\r\n      z2: 10\r\n    });\r\n    var textRect = textEl.getBoundingRect();\r\n    var subText = titleModel.get('subtext');\r\n    var subTextEl = new graphic.Text({\r\n      style: createTextStyle(subtextStyleModel, {\r\n        text: subText,\r\n        fill: subtextStyleModel.getTextColor(),\r\n        y: textRect.height + titleModel.get('itemGap'),\r\n        verticalAlign: 'top'\r\n      }, {\r\n        disableBox: true\r\n      }),\r\n      z2: 10\r\n    });\r\n    var link = titleModel.get('link');\r\n    var sublink = titleModel.get('sublink');\r\n    var triggerEvent = titleModel.get('triggerEvent', true);\r\n    textEl.silent = !link && !triggerEvent;\r\n    subTextEl.silent = !sublink && !triggerEvent;\r\n\r\n    if (link) {\r\n      textEl.on('click', function () {\r\n        windowOpen(link, '_' + titleModel.get('target'));\r\n      });\r\n    }\r\n\r\n    if (sublink) {\r\n      subTextEl.on('click', function () {\r\n        windowOpen(sublink, '_' + titleModel.get('subtarget'));\r\n      });\r\n    }\r\n\r\n    getECData(textEl).eventData = getECData(subTextEl).eventData = triggerEvent ? {\r\n      componentType: 'title',\r\n      componentIndex: titleModel.componentIndex\r\n    } : null;\r\n    group.add(textEl);\r\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\r\n\r\n    var groupRect = group.getBoundingRect();\r\n    var layoutOption = titleModel.getBoxLayoutParams();\r\n    layoutOption.width = groupRect.width;\r\n    layoutOption.height = groupRect.height;\r\n    var layoutRect = getLayoutRect(layoutOption, {\r\n      width: api.getWidth(),\r\n      height: api.getHeight()\r\n    }, titleModel.get('padding')); // Adjust text align based on position\r\n\r\n    if (!textAlign) {\r\n      // Align left if title is on the left. center and right is same\r\n      textAlign = titleModel.get('left') || titleModel.get('right'); // @ts-ignore\r\n\r\n      if (textAlign === 'middle') {\r\n        textAlign = 'center';\r\n      } // Adjust layout by text align\r\n\r\n\r\n      if (textAlign === 'right') {\r\n        layoutRect.x += layoutRect.width;\r\n      } else if (textAlign === 'center') {\r\n        layoutRect.x += layoutRect.width / 2;\r\n      }\r\n    }\r\n\r\n    if (!textVerticalAlign) {\r\n      textVerticalAlign = titleModel.get('top') || titleModel.get('bottom'); // @ts-ignore\r\n\r\n      if (textVerticalAlign === 'center') {\r\n        textVerticalAlign = 'middle';\r\n      }\r\n\r\n      if (textVerticalAlign === 'bottom') {\r\n        layoutRect.y += layoutRect.height;\r\n      } else if (textVerticalAlign === 'middle') {\r\n        layoutRect.y += layoutRect.height / 2;\r\n      }\r\n\r\n      textVerticalAlign = textVerticalAlign || 'top';\r\n    }\r\n\r\n    group.x = layoutRect.x;\r\n    group.y = layoutRect.y;\r\n    group.markRedraw();\r\n    var alignStyle = {\r\n      align: textAlign,\r\n      verticalAlign: textVerticalAlign\r\n    };\r\n    textEl.setStyle(alignStyle);\r\n    subTextEl.setStyle(alignStyle); // Render background\r\n    // Get groupRect again because textAlign has been changed\r\n\r\n    groupRect = group.getBoundingRect();\r\n    var padding = layoutRect.margin;\r\n    var style = titleModel.getItemStyle(['color', 'opacity']);\r\n    style.fill = titleModel.get('backgroundColor');\r\n    var rect = new graphic.Rect({\r\n      shape: {\r\n        x: groupRect.x - padding[3],\r\n        y: groupRect.y - padding[0],\r\n        width: groupRect.width + padding[1] + padding[3],\r\n        height: groupRect.height + padding[0] + padding[2],\r\n        r: titleModel.get('borderRadius')\r\n      },\r\n      style: style,\r\n      subPixelOptimize: true,\r\n      silent: true\r\n    });\r\n    group.add(rect);\r\n  };\r\n\r\n  TitleView.type = 'title';\r\n  return TitleView;\r\n}(ComponentView);\r\n\r\nexport function install(registers) {\r\n  registers.registerComponentModel(TitleModel);\r\n  registers.registerComponentView(TitleView);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport ComponentModel from '../../model/Component';\r\nimport SeriesData from '../../data/SeriesData';\r\nimport { each, isObject, clone } from 'zrender/lib/core/util';\r\nimport { convertOptionIdName, getDataItemValue } from '../../util/model';\r\n\r\nvar TimelineModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(TimelineModel, _super);\r\n\r\n  function TimelineModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = TimelineModel.type;\r\n    _this.layoutMode = 'box';\r\n    return _this;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  TimelineModel.prototype.init = function (option, parentModel, ecModel) {\r\n    this.mergeDefaultAndTheme(option, ecModel);\r\n\r\n    this._initData();\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  TimelineModel.prototype.mergeOption = function (option) {\r\n    _super.prototype.mergeOption.apply(this, arguments);\r\n\r\n    this._initData();\r\n  };\r\n\r\n  TimelineModel.prototype.setCurrentIndex = function (currentIndex) {\r\n    if (currentIndex == null) {\r\n      currentIndex = this.option.currentIndex;\r\n    }\r\n\r\n    var count = this._data.count();\r\n\r\n    if (this.option.loop) {\r\n      currentIndex = (currentIndex % count + count) % count;\r\n    } else {\r\n      currentIndex >= count && (currentIndex = count - 1);\r\n      currentIndex < 0 && (currentIndex = 0);\r\n    }\r\n\r\n    this.option.currentIndex = currentIndex;\r\n  };\r\n  /**\r\n   * @return {number} currentIndex\r\n   */\r\n\r\n\r\n  TimelineModel.prototype.getCurrentIndex = function () {\r\n    return this.option.currentIndex;\r\n  };\r\n  /**\r\n   * @return {boolean}\r\n   */\r\n\r\n\r\n  TimelineModel.prototype.isIndexMax = function () {\r\n    return this.getCurrentIndex() >= this._data.count() - 1;\r\n  };\r\n  /**\r\n   * @param {boolean} state true: play, false: stop\r\n   */\r\n\r\n\r\n  TimelineModel.prototype.setPlayState = function (state) {\r\n    this.option.autoPlay = !!state;\r\n  };\r\n  /**\r\n   * @return {boolean} true: play, false: stop\r\n   */\r\n\r\n\r\n  TimelineModel.prototype.getPlayState = function () {\r\n    return !!this.option.autoPlay;\r\n  };\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  TimelineModel.prototype._initData = function () {\r\n    var thisOption = this.option;\r\n    var dataArr = thisOption.data || [];\r\n    var axisType = thisOption.axisType;\r\n    var names = this._names = [];\r\n    var processedDataArr;\r\n\r\n    if (axisType === 'category') {\r\n      processedDataArr = [];\r\n      each(dataArr, function (item, index) {\r\n        var value = convertOptionIdName(getDataItemValue(item), '');\r\n        var newItem;\r\n\r\n        if (isObject(item)) {\r\n          newItem = clone(item);\r\n          newItem.value = index;\r\n        } else {\r\n          newItem = index;\r\n        }\r\n\r\n        processedDataArr.push(newItem);\r\n        names.push(value);\r\n      });\r\n    } else {\r\n      processedDataArr = dataArr;\r\n    }\r\n\r\n    var dimType = {\r\n      category: 'ordinal',\r\n      time: 'time',\r\n      value: 'number'\r\n    }[axisType] || 'number';\r\n    var data = this._data = new SeriesData([{\r\n      name: 'value',\r\n      type: dimType\r\n    }], this);\r\n    data.initData(processedDataArr, names);\r\n  };\r\n\r\n  TimelineModel.prototype.getData = function () {\r\n    return this._data;\r\n  };\r\n  /**\r\n   * @public\r\n   * @return {Array.<string>} categoreis\r\n   */\r\n\r\n\r\n  TimelineModel.prototype.getCategories = function () {\r\n    if (this.get('axisType') === 'category') {\r\n      return this._names.slice();\r\n    }\r\n  };\r\n\r\n  TimelineModel.type = 'timeline';\r\n  /**\r\n   * @protected\r\n   */\r\n\r\n  TimelineModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 4,\r\n    show: true,\r\n    axisType: 'time',\r\n    realtime: true,\r\n    left: '20%',\r\n    top: null,\r\n    right: '20%',\r\n    bottom: 0,\r\n    width: null,\r\n    height: 40,\r\n    padding: 5,\r\n    controlPosition: 'left',\r\n    autoPlay: false,\r\n    rewind: false,\r\n    loop: true,\r\n    playInterval: 2000,\r\n    currentIndex: 0,\r\n    itemStyle: {},\r\n    label: {\r\n      color: '#000'\r\n    },\r\n    data: []\r\n  };\r\n  return TimelineModel;\r\n}(ComponentModel);\r\n\r\nexport default TimelineModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport TimelineModel from './TimelineModel';\r\nimport { DataFormatMixin } from '../../model/mixin/dataFormat';\r\nimport { mixin } from 'zrender/lib/core/util';\r\nimport { inheritDefaultOption } from '../../util/component';\r\n\r\nvar SliderTimelineModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(SliderTimelineModel, _super);\r\n\r\n  function SliderTimelineModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = SliderTimelineModel.type;\r\n    return _this;\r\n  }\r\n\r\n  SliderTimelineModel.type = 'timeline.slider';\r\n  /**\r\n   * @protected\r\n   */\r\n\r\n  SliderTimelineModel.defaultOption = inheritDefaultOption(TimelineModel.defaultOption, {\r\n    backgroundColor: 'rgba(0,0,0,0)',\r\n    borderColor: '#ccc',\r\n    borderWidth: 0,\r\n    orient: 'horizontal',\r\n    inverse: false,\r\n    tooltip: {\r\n      trigger: 'item' // data item may also have tootip attr.\r\n\r\n    },\r\n    symbol: 'circle',\r\n    symbolSize: 12,\r\n    lineStyle: {\r\n      show: true,\r\n      width: 2,\r\n      color: '#DAE1F5'\r\n    },\r\n    label: {\r\n      position: 'auto',\r\n      // When using number, label position is not\r\n      // restricted by viewRect.\r\n      // positive: right/bottom, negative: left/top\r\n      show: true,\r\n      interval: 'auto',\r\n      rotate: 0,\r\n      // formatter: null,\r\n      // \u5176\u4F59\u5C5E\u6027\u9ED8\u8BA4\u4F7F\u7528\u5168\u5C40\u6587\u672C\u6837\u5F0F\uFF0C\u8BE6\u89C1TEXTSTYLE\r\n      color: '#A4B1D7'\r\n    },\r\n    itemStyle: {\r\n      color: '#A4B1D7',\r\n      borderWidth: 1\r\n    },\r\n    checkpointStyle: {\r\n      symbol: 'circle',\r\n      symbolSize: 15,\r\n      color: '#316bf3',\r\n      borderColor: '#fff',\r\n      borderWidth: 2,\r\n      shadowBlur: 2,\r\n      shadowOffsetX: 1,\r\n      shadowOffsetY: 1,\r\n      shadowColor: 'rgba(0, 0, 0, 0.3)',\r\n      // borderColor: 'rgba(194,53,49, 0.5)',\r\n      animation: true,\r\n      animationDuration: 300,\r\n      animationEasing: 'quinticInOut'\r\n    },\r\n    controlStyle: {\r\n      show: true,\r\n      showPlayBtn: true,\r\n      showPrevBtn: true,\r\n      showNextBtn: true,\r\n      itemSize: 24,\r\n      itemGap: 12,\r\n      position: 'left',\r\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\r\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\r\n      // eslint-disable-next-line max-len\r\n      nextIcon: 'M2,18.5A1.52,1.52,0,0,1,.92,18a1.49,1.49,0,0,1,0-2.12L7.81,9.36,1,3.11A1.5,1.5,0,1,1,3,.89l8,7.34a1.48,1.48,0,0,1,.49,1.09,1.51,1.51,0,0,1-.46,1.1L3,18.08A1.5,1.5,0,0,1,2,18.5Z',\r\n      // eslint-disable-next-line max-len\r\n      prevIcon: 'M10,.5A1.52,1.52,0,0,1,11.08,1a1.49,1.49,0,0,1,0,2.12L4.19,9.64,11,15.89a1.5,1.5,0,1,1-2,2.22L1,10.77A1.48,1.48,0,0,1,.5,9.68,1.51,1.51,0,0,1,1,8.58L9,.92A1.5,1.5,0,0,1,10,.5Z',\r\n      prevBtnSize: 18,\r\n      nextBtnSize: 18,\r\n      color: '#A4B1D7',\r\n      borderColor: '#A4B1D7',\r\n      borderWidth: 1\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true,\r\n        // \u5176\u4F59\u5C5E\u6027\u9ED8\u8BA4\u4F7F\u7528\u5168\u5C40\u6587\u672C\u6837\u5F0F\uFF0C\u8BE6\u89C1TEXTSTYLE\r\n        color: '#6f778d'\r\n      },\r\n      itemStyle: {\r\n        color: '#316BF3'\r\n      },\r\n      controlStyle: {\r\n        color: '#316BF3',\r\n        borderColor: '#316BF3',\r\n        borderWidth: 2\r\n      }\r\n    },\r\n    progress: {\r\n      lineStyle: {\r\n        color: '#316BF3'\r\n      },\r\n      itemStyle: {\r\n        color: '#316BF3'\r\n      },\r\n      label: {\r\n        color: '#6f778d'\r\n      }\r\n    },\r\n    data: []\r\n  });\r\n  return SliderTimelineModel;\r\n}(TimelineModel);\r\n\r\nmixin(SliderTimelineModel, DataFormatMixin.prototype);\r\nexport default SliderTimelineModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport ComponentView from '../../view/Component';\r\n\r\nvar TimelineView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(TimelineView, _super);\r\n\r\n  function TimelineView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = TimelineView.type;\r\n    return _this;\r\n  }\r\n\r\n  TimelineView.type = 'timeline';\r\n  return TimelineView;\r\n}(ComponentView);\r\n\r\nexport default TimelineView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport Axis from '../../coord/Axis';\r\n/**\r\n * Extend axis 2d\r\n */\r\n\r\nvar TimelineAxis =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(TimelineAxis, _super);\r\n\r\n  function TimelineAxis(dim, scale, coordExtent, axisType) {\r\n    var _this = _super.call(this, dim, scale, coordExtent) || this;\r\n\r\n    _this.type = axisType || 'value';\r\n    return _this;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  TimelineAxis.prototype.getLabelModel = function () {\r\n    // Force override\r\n    return this.model.getModel('label');\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  TimelineAxis.prototype.isHorizontal = function () {\r\n    return this.model.get('orient') === 'horizontal';\r\n  };\r\n\r\n  return TimelineAxis;\r\n}(Axis);\r\n\r\nexport default TimelineAxis;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport BoundingRect from 'zrender/lib/core/BoundingRect';\r\nimport * as matrix from 'zrender/lib/core/matrix';\r\nimport * as graphic from '../../util/graphic';\r\nimport { createTextStyle } from '../../label/labelStyle';\r\nimport * as layout from '../../util/layout';\r\nimport TimelineView from './TimelineView';\r\nimport TimelineAxis from './TimelineAxis';\r\nimport { createSymbol, normalizeSymbolOffset, normalizeSymbolSize } from '../../util/symbol';\r\nimport * as numberUtil from '../../util/number';\r\nimport { merge, each, extend, isString, bind, defaults, retrieve2 } from 'zrender/lib/core/util';\r\nimport OrdinalScale from '../../scale/Ordinal';\r\nimport TimeScale from '../../scale/Time';\r\nimport IntervalScale from '../../scale/Interval';\r\nimport { parsePercent } from 'zrender/lib/contain/text';\r\nimport { makeInner } from '../../util/model';\r\nimport { getECData } from '../../util/innerStore';\r\nimport { enableHoverEmphasis } from '../../util/states';\r\nimport { createTooltipMarkup } from '../tooltip/tooltipMarkup';\r\nvar PI = Math.PI;\r\nvar labelDataIndexStore = makeInner();\r\n\r\nvar SliderTimelineView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(SliderTimelineView, _super);\r\n\r\n  function SliderTimelineView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = SliderTimelineView.type;\r\n    return _this;\r\n  }\r\n\r\n  SliderTimelineView.prototype.init = function (ecModel, api) {\r\n    this.api = api;\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  SliderTimelineView.prototype.render = function (timelineModel, ecModel, api) {\r\n    this.model = timelineModel;\r\n    this.api = api;\r\n    this.ecModel = ecModel;\r\n    this.group.removeAll();\r\n\r\n    if (timelineModel.get('show', true)) {\r\n      var layoutInfo_1 = this._layout(timelineModel, api);\r\n\r\n      var mainGroup_1 = this._createGroup('_mainGroup');\r\n\r\n      var labelGroup = this._createGroup('_labelGroup');\r\n\r\n      var axis_1 = this._axis = this._createAxis(layoutInfo_1, timelineModel);\r\n\r\n      timelineModel.formatTooltip = function (dataIndex) {\r\n        var name = axis_1.scale.getLabel({\r\n          value: dataIndex\r\n        });\r\n        return createTooltipMarkup('nameValue', {\r\n          noName: true,\r\n          value: name\r\n        });\r\n      };\r\n\r\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\r\n        this['_render' + name](layoutInfo_1, mainGroup_1, axis_1, timelineModel);\r\n      }, this);\r\n\r\n      this._renderAxisLabel(layoutInfo_1, labelGroup, axis_1, timelineModel);\r\n\r\n      this._position(layoutInfo_1, timelineModel);\r\n    }\r\n\r\n    this._doPlayStop();\r\n\r\n    this._updateTicksStatus();\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  SliderTimelineView.prototype.remove = function () {\r\n    this._clearTimer();\r\n\r\n    this.group.removeAll();\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  SliderTimelineView.prototype.dispose = function () {\r\n    this._clearTimer();\r\n  };\r\n\r\n  SliderTimelineView.prototype._layout = function (timelineModel, api) {\r\n    var labelPosOpt = timelineModel.get(['label', 'position']);\r\n    var orient = timelineModel.get('orient');\r\n    var viewRect = getViewRect(timelineModel, api);\r\n    var parsedLabelPos; // Auto label offset.\r\n\r\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\r\n      parsedLabelPos = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\r\n    } else if (isString(labelPosOpt)) {\r\n      parsedLabelPos = {\r\n        horizontal: {\r\n          top: '-',\r\n          bottom: '+'\r\n        },\r\n        vertical: {\r\n          left: '-',\r\n          right: '+'\r\n        }\r\n      }[orient][labelPosOpt];\r\n    } else {\r\n      // is number\r\n      parsedLabelPos = labelPosOpt;\r\n    }\r\n\r\n    var labelAlignMap = {\r\n      horizontal: 'center',\r\n      vertical: parsedLabelPos >= 0 || parsedLabelPos === '+' ? 'left' : 'right'\r\n    };\r\n    var labelBaselineMap = {\r\n      horizontal: parsedLabelPos >= 0 || parsedLabelPos === '+' ? 'top' : 'bottom',\r\n      vertical: 'middle'\r\n    };\r\n    var rotationMap = {\r\n      horizontal: 0,\r\n      vertical: PI / 2\r\n    }; // Position\r\n\r\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\r\n    var controlModel = timelineModel.getModel('controlStyle');\r\n    var showControl = controlModel.get('show', true);\r\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\r\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\r\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\r\n\r\n    var labelRotation = timelineModel.get(['label', 'rotate']) || 0;\r\n    labelRotation = labelRotation * PI / 180; // To radian.\r\n\r\n    var playPosition;\r\n    var prevBtnPosition;\r\n    var nextBtnPosition;\r\n    var controlPosition = controlModel.get('position', true);\r\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\r\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\r\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\r\n    var xLeft = 0;\r\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\r\n\r\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\r\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\r\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\r\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\r\n    } else {\r\n      // 'top' 'right'\r\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\r\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\r\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\r\n    }\r\n\r\n    var axisExtent = [xLeft, xRight];\r\n\r\n    if (timelineModel.get('inverse')) {\r\n      axisExtent.reverse();\r\n    }\r\n\r\n    return {\r\n      viewRect: viewRect,\r\n      mainLength: mainLength,\r\n      orient: orient,\r\n      rotation: rotationMap[orient],\r\n      labelRotation: labelRotation,\r\n      labelPosOpt: parsedLabelPos,\r\n      labelAlign: timelineModel.get(['label', 'align']) || labelAlignMap[orient],\r\n      labelBaseline: timelineModel.get(['label', 'verticalAlign']) || timelineModel.get(['label', 'baseline']) || labelBaselineMap[orient],\r\n      // Based on mainGroup.\r\n      playPosition: playPosition,\r\n      prevBtnPosition: prevBtnPosition,\r\n      nextBtnPosition: nextBtnPosition,\r\n      axisExtent: axisExtent,\r\n      controlSize: controlSize,\r\n      controlGap: controlGap\r\n    };\r\n  };\r\n\r\n  SliderTimelineView.prototype._position = function (layoutInfo, timelineModel) {\r\n    // Position is be called finally, because bounding rect is needed for\r\n    // adapt content to fill viewRect (auto adapt offset).\r\n    // Timeline may be not all in the viewRect when 'offset' is specified\r\n    // as a number, because it is more appropriate that label aligns at\r\n    // 'offset' but not the other edge defined by viewRect.\r\n    var mainGroup = this._mainGroup;\r\n    var labelGroup = this._labelGroup;\r\n    var viewRect = layoutInfo.viewRect;\r\n\r\n    if (layoutInfo.orient === 'vertical') {\r\n      // transform to horizontal, inverse rotate by left-top point.\r\n      var m = matrix.create();\r\n      var rotateOriginX = viewRect.x;\r\n      var rotateOriginY = viewRect.y + viewRect.height;\r\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\r\n      matrix.rotate(m, m, -PI / 2);\r\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\r\n      viewRect = viewRect.clone();\r\n      viewRect.applyTransform(m);\r\n    }\r\n\r\n    var viewBound = getBound(viewRect);\r\n    var mainBound = getBound(mainGroup.getBoundingRect());\r\n    var labelBound = getBound(labelGroup.getBoundingRect());\r\n    var mainPosition = [mainGroup.x, mainGroup.y];\r\n    var labelsPosition = [labelGroup.x, labelGroup.y];\r\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\r\n    var labelPosOpt = layoutInfo.labelPosOpt;\r\n\r\n    if (labelPosOpt == null || isString(labelPosOpt)) {\r\n      // '+' or '-'\r\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\r\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\r\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\r\n    } else {\r\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\r\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\r\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\r\n    }\r\n\r\n    mainGroup.setPosition(mainPosition);\r\n    labelGroup.setPosition(labelsPosition);\r\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\r\n    setOrigin(mainGroup);\r\n    setOrigin(labelGroup);\r\n\r\n    function setOrigin(targetGroup) {\r\n      targetGroup.originX = viewBound[0][0] - targetGroup.x;\r\n      targetGroup.originY = viewBound[1][0] - targetGroup.y;\r\n    }\r\n\r\n    function getBound(rect) {\r\n      // [[xmin, xmax], [ymin, ymax]]\r\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\r\n    }\r\n\r\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\r\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\r\n    }\r\n  };\r\n\r\n  SliderTimelineView.prototype._createAxis = function (layoutInfo, timelineModel) {\r\n    var data = timelineModel.getData();\r\n    var axisType = timelineModel.get('axisType');\r\n    var scale = createScaleByModel(timelineModel, axisType); // Customize scale. The `tickValue` is `dataIndex`.\r\n\r\n    scale.getTicks = function () {\r\n      return data.mapArray(['value'], function (value) {\r\n        return {\r\n          value: value\r\n        };\r\n      });\r\n    };\r\n\r\n    var dataExtent = data.getDataExtent('value');\r\n    scale.setExtent(dataExtent[0], dataExtent[1]);\r\n    scale.niceTicks();\r\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\r\n    axis.model = timelineModel;\r\n    return axis;\r\n  };\r\n\r\n  SliderTimelineView.prototype._createGroup = function (key) {\r\n    var newGroup = this[key] = new graphic.Group();\r\n    this.group.add(newGroup);\r\n    return newGroup;\r\n  };\r\n\r\n  SliderTimelineView.prototype._renderAxisLine = function (layoutInfo, group, axis, timelineModel) {\r\n    var axisExtent = axis.getExtent();\r\n\r\n    if (!timelineModel.get(['lineStyle', 'show'])) {\r\n      return;\r\n    }\r\n\r\n    var line = new graphic.Line({\r\n      shape: {\r\n        x1: axisExtent[0],\r\n        y1: 0,\r\n        x2: axisExtent[1],\r\n        y2: 0\r\n      },\r\n      style: extend({\r\n        lineCap: 'round'\r\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\r\n      silent: true,\r\n      z2: 1\r\n    });\r\n    group.add(line);\r\n    var progressLine = this._progressLine = new graphic.Line({\r\n      shape: {\r\n        x1: axisExtent[0],\r\n        x2: this._currentPointer ? this._currentPointer.x : axisExtent[0],\r\n        y1: 0,\r\n        y2: 0\r\n      },\r\n      style: defaults({\r\n        lineCap: 'round',\r\n        lineWidth: line.style.lineWidth\r\n      }, timelineModel.getModel(['progress', 'lineStyle']).getLineStyle()),\r\n      silent: true,\r\n      z2: 1\r\n    });\r\n    group.add(progressLine);\r\n  };\r\n\r\n  SliderTimelineView.prototype._renderAxisTick = function (layoutInfo, group, axis, timelineModel) {\r\n    var _this = this;\r\n\r\n    var data = timelineModel.getData(); // Show all ticks, despite ignoring strategy.\r\n\r\n    var ticks = axis.scale.getTicks();\r\n    this._tickSymbols = []; // The value is dataIndex, see the costomized scale.\r\n\r\n    each(ticks, function (tick) {\r\n      var tickCoord = axis.dataToCoord(tick.value);\r\n      var itemModel = data.getItemModel(tick.value);\r\n      var itemStyleModel = itemModel.getModel('itemStyle');\r\n      var hoverStyleModel = itemModel.getModel(['emphasis', 'itemStyle']);\r\n      var progressStyleModel = itemModel.getModel(['progress', 'itemStyle']);\r\n      var symbolOpt = {\r\n        x: tickCoord,\r\n        y: 0,\r\n        onclick: bind(_this._changeTimeline, _this, tick.value)\r\n      };\r\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\r\n      el.ensureState('emphasis').style = hoverStyleModel.getItemStyle();\r\n      el.ensureState('progress').style = progressStyleModel.getItemStyle();\r\n      enableHoverEmphasis(el);\r\n      var ecData = getECData(el);\r\n\r\n      if (itemModel.get('tooltip')) {\r\n        ecData.dataIndex = tick.value;\r\n        ecData.dataModel = timelineModel;\r\n      } else {\r\n        ecData.dataIndex = ecData.dataModel = null;\r\n      }\r\n\r\n      _this._tickSymbols.push(el);\r\n    });\r\n  };\r\n\r\n  SliderTimelineView.prototype._renderAxisLabel = function (layoutInfo, group, axis, timelineModel) {\r\n    var _this = this;\r\n\r\n    var labelModel = axis.getLabelModel();\r\n\r\n    if (!labelModel.get('show')) {\r\n      return;\r\n    }\r\n\r\n    var data = timelineModel.getData();\r\n    var labels = axis.getViewLabels();\r\n    this._tickLabels = [];\r\n    each(labels, function (labelItem) {\r\n      // The tickValue is dataIndex, see the costomized scale.\r\n      var dataIndex = labelItem.tickValue;\r\n      var itemModel = data.getItemModel(dataIndex);\r\n      var normalLabelModel = itemModel.getModel('label');\r\n      var hoverLabelModel = itemModel.getModel(['emphasis', 'label']);\r\n      var progressLabelModel = itemModel.getModel(['progress', 'label']);\r\n      var tickCoord = axis.dataToCoord(labelItem.tickValue);\r\n      var textEl = new graphic.Text({\r\n        x: tickCoord,\r\n        y: 0,\r\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\r\n        onclick: bind(_this._changeTimeline, _this, dataIndex),\r\n        silent: false,\r\n        style: createTextStyle(normalLabelModel, {\r\n          text: labelItem.formattedLabel,\r\n          align: layoutInfo.labelAlign,\r\n          verticalAlign: layoutInfo.labelBaseline\r\n        })\r\n      });\r\n      textEl.ensureState('emphasis').style = createTextStyle(hoverLabelModel);\r\n      textEl.ensureState('progress').style = createTextStyle(progressLabelModel);\r\n      group.add(textEl);\r\n      enableHoverEmphasis(textEl);\r\n      labelDataIndexStore(textEl).dataIndex = dataIndex;\r\n\r\n      _this._tickLabels.push(textEl);\r\n    });\r\n  };\r\n\r\n  SliderTimelineView.prototype._renderControl = function (layoutInfo, group, axis, timelineModel) {\r\n    var controlSize = layoutInfo.controlSize;\r\n    var rotation = layoutInfo.rotation;\r\n    var itemStyle = timelineModel.getModel('controlStyle').getItemStyle();\r\n    var hoverStyle = timelineModel.getModel(['emphasis', 'controlStyle']).getItemStyle();\r\n    var playState = timelineModel.getPlayState();\r\n    var inverse = timelineModel.get('inverse', true);\r\n    makeBtn(layoutInfo.nextBtnPosition, 'next', bind(this._changeTimeline, this, inverse ? '-' : '+'));\r\n    makeBtn(layoutInfo.prevBtnPosition, 'prev', bind(this._changeTimeline, this, inverse ? '+' : '-'));\r\n    makeBtn(layoutInfo.playPosition, playState ? 'stop' : 'play', bind(this._handlePlayClick, this, !playState), true);\r\n\r\n    function makeBtn(position, iconName, onclick, willRotate) {\r\n      if (!position) {\r\n        return;\r\n      }\r\n\r\n      var iconSize = parsePercent(retrieve2(timelineModel.get(['controlStyle', iconName + 'BtnSize']), controlSize), controlSize);\r\n      var rect = [0, -iconSize / 2, iconSize, iconSize];\r\n      var btn = makeControlIcon(timelineModel, iconName + 'Icon', rect, {\r\n        x: position[0],\r\n        y: position[1],\r\n        originX: controlSize / 2,\r\n        originY: 0,\r\n        rotation: willRotate ? -rotation : 0,\r\n        rectHover: true,\r\n        style: itemStyle,\r\n        onclick: onclick\r\n      });\r\n      btn.ensureState('emphasis').style = hoverStyle;\r\n      group.add(btn);\r\n      enableHoverEmphasis(btn);\r\n    }\r\n  };\r\n\r\n  SliderTimelineView.prototype._renderCurrentPointer = function (layoutInfo, group, axis, timelineModel) {\r\n    var data = timelineModel.getData();\r\n    var currentIndex = timelineModel.getCurrentIndex();\r\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\r\n    var me = this;\r\n    var callback = {\r\n      onCreate: function (pointer) {\r\n        pointer.draggable = true;\r\n        pointer.drift = bind(me._handlePointerDrag, me);\r\n        pointer.ondragend = bind(me._handlePointerDragend, me);\r\n        pointerMoveTo(pointer, me._progressLine, currentIndex, axis, timelineModel, true);\r\n      },\r\n      onUpdate: function (pointer) {\r\n        pointerMoveTo(pointer, me._progressLine, currentIndex, axis, timelineModel);\r\n      }\r\n    }; // Reuse when exists, for animation and drag.\r\n\r\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\r\n  };\r\n\r\n  SliderTimelineView.prototype._handlePlayClick = function (nextState) {\r\n    this._clearTimer();\r\n\r\n    this.api.dispatchAction({\r\n      type: 'timelinePlayChange',\r\n      playState: nextState,\r\n      from: this.uid\r\n    });\r\n  };\r\n\r\n  SliderTimelineView.prototype._handlePointerDrag = function (dx, dy, e) {\r\n    this._clearTimer();\r\n\r\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\r\n  };\r\n\r\n  SliderTimelineView.prototype._handlePointerDragend = function (e) {\r\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\r\n  };\r\n\r\n  SliderTimelineView.prototype._pointerChangeTimeline = function (mousePos, trigger) {\r\n    var toCoord = this._toAxisCoord(mousePos)[0];\r\n\r\n    var axis = this._axis;\r\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\r\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\r\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\r\n    this._currentPointer.x = toCoord;\r\n\r\n    this._currentPointer.markRedraw();\r\n\r\n    this._progressLine.shape.x2 = toCoord;\r\n\r\n    this._progressLine.dirty();\r\n\r\n    var targetDataIndex = this._findNearestTick(toCoord);\r\n\r\n    var timelineModel = this.model;\r\n\r\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\r\n      this._changeTimeline(targetDataIndex);\r\n    }\r\n  };\r\n\r\n  SliderTimelineView.prototype._doPlayStop = function () {\r\n    var _this = this;\r\n\r\n    this._clearTimer();\r\n\r\n    if (this.model.getPlayState()) {\r\n      this._timer = setTimeout(function () {\r\n        // Do not cache\r\n        var timelineModel = _this.model;\r\n\r\n        _this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\r\n      }, this.model.get('playInterval'));\r\n    }\r\n  };\r\n\r\n  SliderTimelineView.prototype._toAxisCoord = function (vertex) {\r\n    var trans = this._mainGroup.getLocalTransform();\r\n\r\n    return graphic.applyTransform(vertex, trans, true);\r\n  };\r\n\r\n  SliderTimelineView.prototype._findNearestTick = function (axisCoord) {\r\n    var data = this.model.getData();\r\n    var dist = Infinity;\r\n    var targetDataIndex;\r\n    var axis = this._axis;\r\n    data.each(['value'], function (value, dataIndex) {\r\n      var coord = axis.dataToCoord(value);\r\n      var d = Math.abs(coord - axisCoord);\r\n\r\n      if (d < dist) {\r\n        dist = d;\r\n        targetDataIndex = dataIndex;\r\n      }\r\n    });\r\n    return targetDataIndex;\r\n  };\r\n\r\n  SliderTimelineView.prototype._clearTimer = function () {\r\n    if (this._timer) {\r\n      clearTimeout(this._timer);\r\n      this._timer = null;\r\n    }\r\n  };\r\n\r\n  SliderTimelineView.prototype._changeTimeline = function (nextIndex) {\r\n    var currentIndex = this.model.getCurrentIndex();\r\n\r\n    if (nextIndex === '+') {\r\n      nextIndex = currentIndex + 1;\r\n    } else if (nextIndex === '-') {\r\n      nextIndex = currentIndex - 1;\r\n    }\r\n\r\n    this.api.dispatchAction({\r\n      type: 'timelineChange',\r\n      currentIndex: nextIndex,\r\n      from: this.uid\r\n    });\r\n  };\r\n\r\n  SliderTimelineView.prototype._updateTicksStatus = function () {\r\n    var currentIndex = this.model.getCurrentIndex();\r\n    var tickSymbols = this._tickSymbols;\r\n    var tickLabels = this._tickLabels;\r\n\r\n    if (tickSymbols) {\r\n      for (var i = 0; i < tickSymbols.length; i++) {\r\n        tickSymbols && tickSymbols[i] && tickSymbols[i].toggleState('progress', i < currentIndex);\r\n      }\r\n    }\r\n\r\n    if (tickLabels) {\r\n      for (var i = 0; i < tickLabels.length; i++) {\r\n        tickLabels && tickLabels[i] && tickLabels[i].toggleState('progress', labelDataIndexStore(tickLabels[i]).dataIndex <= currentIndex);\r\n      }\r\n    }\r\n  };\r\n\r\n  SliderTimelineView.type = 'timeline.slider';\r\n  return SliderTimelineView;\r\n}(TimelineView);\r\n\r\nfunction createScaleByModel(model, axisType) {\r\n  axisType = axisType || model.get('type');\r\n\r\n  if (axisType) {\r\n    switch (axisType) {\r\n      // Buildin scale\r\n      case 'category':\r\n        return new OrdinalScale({\r\n          ordinalMeta: model.getCategories(),\r\n          extent: [Infinity, -Infinity]\r\n        });\r\n\r\n      case 'time':\r\n        return new TimeScale({\r\n          locale: model.ecModel.getLocaleModel(),\r\n          useUTC: model.ecModel.get('useUTC')\r\n        });\r\n\r\n      default:\r\n        // default to be value\r\n        return new IntervalScale();\r\n    }\r\n  }\r\n}\r\n\r\nfunction getViewRect(model, api) {\r\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\r\n    width: api.getWidth(),\r\n    height: api.getHeight()\r\n  }, model.get('padding'));\r\n}\r\n\r\nfunction makeControlIcon(timelineModel, objPath, rect, opts) {\r\n  var style = opts.style;\r\n  var icon = graphic.createIcon(timelineModel.get(['controlStyle', objPath]), opts || {}, new BoundingRect(rect[0], rect[1], rect[2], rect[3])); // TODO createIcon won't use style in opt.\r\n\r\n  if (style) {\r\n    icon.setStyle(style);\r\n  }\r\n\r\n  return icon;\r\n}\r\n/**\r\n * Create symbol or update symbol\r\n * opt: basic position and event handlers\r\n */\r\n\r\n\r\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\r\n  var color = itemStyleModel.get('color');\r\n\r\n  if (!symbol) {\r\n    var symbolType = hostModel.get('symbol');\r\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\r\n    symbol.setStyle('strokeNoScale', true);\r\n    group.add(symbol);\r\n    callback && callback.onCreate(symbol);\r\n  } else {\r\n    symbol.setColor(color);\r\n    group.add(symbol); // Group may be new, also need to add.\r\n\r\n    callback && callback.onUpdate(symbol);\r\n  } // Style\r\n\r\n\r\n  var itemStyle = itemStyleModel.getItemStyle(['color']);\r\n  symbol.setStyle(itemStyle); // Transform and events.\r\n\r\n  opt = merge({\r\n    rectHover: true,\r\n    z2: 100\r\n  }, opt, true);\r\n  var symbolSize = normalizeSymbolSize(hostModel.get('symbolSize'));\r\n  opt.scaleX = symbolSize[0] / 2;\r\n  opt.scaleY = symbolSize[1] / 2;\r\n  var symbolOffset = normalizeSymbolOffset(hostModel.get('symbolOffset'), symbolSize);\r\n\r\n  if (symbolOffset) {\r\n    opt.x = (opt.x || 0) + symbolOffset[0];\r\n    opt.y = (opt.y || 0) + symbolOffset[1];\r\n  }\r\n\r\n  var symbolRotate = hostModel.get('symbolRotate');\r\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\r\n  symbol.attr(opt); // FIXME\r\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\r\n  // getBoundingRect will return wrong result.\r\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\r\n  // leverage performance and auto updateTransform)\r\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\r\n\r\n  symbol.updateTransform();\r\n  return symbol;\r\n}\r\n\r\nfunction pointerMoveTo(pointer, progressLine, dataIndex, axis, timelineModel, noAnimation) {\r\n  if (pointer.dragging) {\r\n    return;\r\n  }\r\n\r\n  var pointerModel = timelineModel.getModel('checkpointStyle');\r\n  var toCoord = axis.dataToCoord(timelineModel.getData().get('value', dataIndex));\r\n\r\n  if (noAnimation || !pointerModel.get('animation', true)) {\r\n    pointer.attr({\r\n      x: toCoord,\r\n      y: 0\r\n    });\r\n    progressLine && progressLine.attr({\r\n      shape: {\r\n        x2: toCoord\r\n      }\r\n    });\r\n  } else {\r\n    var animationCfg = {\r\n      duration: pointerModel.get('animationDuration', true),\r\n      easing: pointerModel.get('animationEasing', true)\r\n    };\r\n    pointer.stopAnimation(null, true);\r\n    pointer.animateTo({\r\n      x: toCoord,\r\n      y: 0\r\n    }, animationCfg);\r\n    progressLine && progressLine.animateTo({\r\n      shape: {\r\n        x2: toCoord\r\n      }\r\n    }, animationCfg);\r\n  }\r\n}\r\n\r\nexport default SliderTimelineView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { defaults } from 'zrender/lib/core/util';\r\nexport function installTimelineAction(registers) {\r\n  registers.registerAction({\r\n    type: 'timelineChange',\r\n    event: 'timelineChanged',\r\n    update: 'prepareAndUpdate'\r\n  }, function (payload, ecModel, api) {\r\n    var timelineModel = ecModel.getComponent('timeline');\r\n\r\n    if (timelineModel && payload.currentIndex != null) {\r\n      timelineModel.setCurrentIndex(payload.currentIndex);\r\n\r\n      if (!timelineModel.get('loop', true) && timelineModel.isIndexMax() && timelineModel.getPlayState()) {\r\n        timelineModel.setPlayState(false); // The timeline has played to the end, trigger event\r\n\r\n        api.dispatchAction({\r\n          type: 'timelinePlayChange',\r\n          playState: false,\r\n          from: payload.from\r\n        });\r\n      }\r\n    } // Set normalized currentIndex to payload.\r\n\r\n\r\n    ecModel.resetOption('timeline', {\r\n      replaceMerge: timelineModel.get('replaceMerge', true)\r\n    });\r\n    return defaults({\r\n      currentIndex: timelineModel.option.currentIndex\r\n    }, payload);\r\n  });\r\n  registers.registerAction({\r\n    type: 'timelinePlayChange',\r\n    event: 'timelinePlayChanged',\r\n    update: 'update'\r\n  }, function (payload, ecModel) {\r\n    var timelineModel = ecModel.getComponent('timeline');\r\n\r\n    if (timelineModel && payload.playState != null) {\r\n      timelineModel.setPlayState(payload.playState);\r\n    }\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// @ts-nocheck\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nexport default function timelinePreprocessor(option) {\r\n  var timelineOpt = option && option.timeline;\r\n\r\n  if (!zrUtil.isArray(timelineOpt)) {\r\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\r\n  }\r\n\r\n  zrUtil.each(timelineOpt, function (opt) {\r\n    if (!opt) {\r\n      return;\r\n    }\r\n\r\n    compatibleEC2(opt);\r\n  });\r\n}\r\n\r\nfunction compatibleEC2(opt) {\r\n  var type = opt.type;\r\n  var ec2Types = {\r\n    'number': 'value',\r\n    'time': 'time'\r\n  }; // Compatible with ec2\r\n\r\n  if (ec2Types[type]) {\r\n    opt.axisType = ec2Types[type];\r\n    delete opt.type;\r\n  }\r\n\r\n  transferItem(opt);\r\n\r\n  if (has(opt, 'controlPosition')) {\r\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\r\n\r\n    if (!has(controlStyle, 'position')) {\r\n      controlStyle.position = opt.controlPosition;\r\n    }\r\n\r\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\r\n      controlStyle.show = false;\r\n      delete controlStyle.position;\r\n    }\r\n\r\n    delete opt.controlPosition;\r\n  }\r\n\r\n  zrUtil.each(opt.data || [], function (dataItem) {\r\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\r\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\r\n        // In ec2, using name as value.\r\n        dataItem.value = dataItem.name;\r\n      }\r\n\r\n      transferItem(dataItem);\r\n    }\r\n  });\r\n}\r\n\r\nfunction transferItem(opt) {\r\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\r\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\r\n\r\n  var label = opt.label || opt.label || {};\r\n  var labelNormal = label.normal || (label.normal = {});\r\n  var excludeLabelAttr = {\r\n    normal: 1,\r\n    emphasis: 1\r\n  };\r\n  zrUtil.each(label, function (value, name) {\r\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\r\n      labelNormal[name] = value;\r\n    }\r\n  });\r\n\r\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\r\n    label.emphasis = itemStyleEmphasis.label;\r\n    delete itemStyleEmphasis.label;\r\n  }\r\n}\r\n\r\nfunction has(obj, attr) {\r\n  return obj.hasOwnProperty(attr);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\nimport SliderTimelineModel from './SliderTimelineModel';\r\nimport SliderTimelineView from './SliderTimelineView';\r\nimport { installTimelineAction } from './timelineAction';\r\nimport preprocessor from './preprocessor';\r\nexport function install(registers) {\r\n  registers.registerComponentModel(SliderTimelineModel);\r\n  registers.registerComponentView(SliderTimelineView);\r\n  registers.registerSubTypeDefaulter('timeline', function () {\r\n    // Only slider now.\r\n    return 'slider';\r\n  });\r\n  installTimelineAction(registers);\r\n  registers.registerPreprocessor(preprocessor);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { isArray } from 'zrender/lib/core/util';\r\nexport default function checkMarkerInSeries(seriesOpts, markerType) {\r\n  if (!seriesOpts) {\r\n    return false;\r\n  }\r\n\r\n  var seriesOptArr = isArray(seriesOpts) ? seriesOpts : [seriesOpts];\r\n\r\n  for (var idx = 0; idx < seriesOptArr.length; idx++) {\r\n    if (seriesOptArr[idx] && seriesOptArr[idx][markerType]) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport env from 'zrender/lib/core/env';\r\nimport { DataFormatMixin } from '../../model/mixin/dataFormat';\r\nimport ComponentModel from '../../model/Component';\r\nimport { makeInner, defaultEmphasis } from '../../util/model';\r\nimport { createTooltipMarkup } from '../tooltip/tooltipMarkup';\r\n\r\nfunction fillLabel(opt) {\r\n  defaultEmphasis(opt, 'label', ['show']);\r\n} // { [componentType]: MarkerModel }\r\n\r\n\r\nvar inner = makeInner();\r\n\r\nvar MarkerModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(MarkerModel, _super);\r\n\r\n  function MarkerModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = MarkerModel.type;\r\n    /**\r\n     * If marker model is created by self from series\r\n     */\r\n\r\n    _this.createdBySelf = false;\r\n    return _this;\r\n  }\r\n  /**\r\n   * @overrite\r\n   */\r\n\r\n\r\n  MarkerModel.prototype.init = function (option, parentModel, ecModel) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (this.type === 'marker') {\r\n        throw new Error('Marker component is abstract component. Use markLine, markPoint, markArea instead.');\r\n      }\r\n    }\r\n\r\n    this.mergeDefaultAndTheme(option, ecModel);\r\n\r\n    this._mergeOption(option, ecModel, false, true);\r\n  };\r\n\r\n  MarkerModel.prototype.isAnimationEnabled = function () {\r\n    if (env.node) {\r\n      return false;\r\n    }\r\n\r\n    var hostSeries = this.__hostSeries;\r\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\r\n  };\r\n  /**\r\n   * @overrite\r\n   */\r\n\r\n\r\n  MarkerModel.prototype.mergeOption = function (newOpt, ecModel) {\r\n    this._mergeOption(newOpt, ecModel, false, false);\r\n  };\r\n\r\n  MarkerModel.prototype._mergeOption = function (newOpt, ecModel, createdBySelf, isInit) {\r\n    var componentType = this.mainType;\r\n\r\n    if (!createdBySelf) {\r\n      ecModel.eachSeries(function (seriesModel) {\r\n        // mainType can be markPoint, markLine, markArea\r\n        var markerOpt = seriesModel.get(this.mainType, true);\r\n        var markerModel = inner(seriesModel)[componentType];\r\n\r\n        if (!markerOpt || !markerOpt.data) {\r\n          inner(seriesModel)[componentType] = null;\r\n          return;\r\n        }\r\n\r\n        if (!markerModel) {\r\n          if (isInit) {\r\n            // Default label emphasis `position` and `show`\r\n            fillLabel(markerOpt);\r\n          }\r\n\r\n          zrUtil.each(markerOpt.data, function (item) {\r\n            // FIXME Overwrite fillLabel method ?\r\n            if (item instanceof Array) {\r\n              fillLabel(item[0]);\r\n              fillLabel(item[1]);\r\n            } else {\r\n              fillLabel(item);\r\n            }\r\n          });\r\n          markerModel = this.createMarkerModelFromSeries(markerOpt, this, ecModel); // markerModel = new ImplementedMarkerModel(\r\n          //     markerOpt, this, ecModel\r\n          // );\r\n\r\n          zrUtil.extend(markerModel, {\r\n            mainType: this.mainType,\r\n            // Use the same series index and name\r\n            seriesIndex: seriesModel.seriesIndex,\r\n            name: seriesModel.name,\r\n            createdBySelf: true\r\n          });\r\n          markerModel.__hostSeries = seriesModel;\r\n        } else {\r\n          markerModel._mergeOption(markerOpt, ecModel, true);\r\n        }\r\n\r\n        inner(seriesModel)[componentType] = markerModel;\r\n      }, this);\r\n    }\r\n  };\r\n\r\n  MarkerModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\r\n    var data = this.getData();\r\n    var value = this.getRawValue(dataIndex);\r\n    var itemName = data.getName(dataIndex);\r\n    return createTooltipMarkup('section', {\r\n      header: this.name,\r\n      blocks: [createTooltipMarkup('nameValue', {\r\n        name: itemName,\r\n        value: value,\r\n        noName: !itemName,\r\n        noValue: value == null\r\n      })]\r\n    });\r\n  };\r\n\r\n  MarkerModel.prototype.getData = function () {\r\n    return this._data;\r\n  };\r\n\r\n  MarkerModel.prototype.setData = function (data) {\r\n    this._data = data;\r\n  };\r\n\r\n  MarkerModel.getMarkerModelFromSeries = function (seriesModel, // Support three types of markers. Strict check.\r\n  componentType) {\r\n    return inner(seriesModel)[componentType];\r\n  };\r\n\r\n  MarkerModel.type = 'marker';\r\n  MarkerModel.dependencies = ['series', 'grid', 'polar', 'geo'];\r\n  return MarkerModel;\r\n}(ComponentModel);\r\n\r\nzrUtil.mixin(MarkerModel, DataFormatMixin.prototype);\r\nexport default MarkerModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport MarkerModel from './MarkerModel';\r\n\r\nvar MarkPointModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(MarkPointModel, _super);\r\n\r\n  function MarkPointModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = MarkPointModel.type;\r\n    return _this;\r\n  }\r\n\r\n  MarkPointModel.prototype.createMarkerModelFromSeries = function (markerOpt, masterMarkerModel, ecModel) {\r\n    return new MarkPointModel(markerOpt, masterMarkerModel, ecModel);\r\n  };\r\n\r\n  MarkPointModel.type = 'markPoint';\r\n  MarkPointModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 5,\r\n    symbol: 'pin',\r\n    symbolSize: 50,\r\n    //symbolRotate: 0,\r\n    //symbolOffset: [0, 0]\r\n    tooltip: {\r\n      trigger: 'item'\r\n    },\r\n    label: {\r\n      show: true,\r\n      position: 'inside'\r\n    },\r\n    itemStyle: {\r\n      borderWidth: 2\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true\r\n      }\r\n    }\r\n  };\r\n  return MarkPointModel;\r\n}(MarkerModel);\r\n\r\nexport default MarkPointModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as numberUtil from '../../util/number';\r\nimport { isDimensionStacked } from '../../data/helper/dataStackHelper';\r\nimport { indexOf, curry, clone, isArray } from 'zrender/lib/core/util';\r\nimport { parseDataValue } from '../../data/helper/dataValueHelper';\r\n\r\nfunction hasXOrY(item) {\r\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\r\n}\r\n\r\nfunction hasXAndY(item) {\r\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\r\n}\r\n\r\nfunction markerTypeCalculatorWithExtent(markerType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\r\n  var coordArr = [];\r\n  var stacked = isDimensionStacked(data, targetDataDim\r\n  /*, otherDataDim*/\r\n  );\r\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\r\n  var value = numCalculate(data, calcDataDim, markerType);\r\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\r\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\r\n  coordArr[targetCoordIndex] = data.get(calcDataDim, dataIndex);\r\n  var coordArrValue = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\r\n\r\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\r\n  precision = Math.min(precision, 20);\r\n\r\n  if (precision >= 0) {\r\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\r\n  }\r\n\r\n  return [coordArr, coordArrValue];\r\n} // TODO Specified percent\r\n\r\n\r\nvar markerTypeCalculator = {\r\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\r\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\r\n  average: curry(markerTypeCalculatorWithExtent, 'average'),\r\n  median: curry(markerTypeCalculatorWithExtent, 'median')\r\n};\r\n/**\r\n * Transform markPoint data item to format used in List by do the following\r\n * 1. Calculate statistic like `max`, `min`, `average`\r\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\r\n */\r\n\r\nexport function dataTransform(seriesModel, item) {\r\n  var data = seriesModel.getData();\r\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\r\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\r\n  // `yAxis` to specify the coord on each dimension\r\n  // parseFloat first because item.x and item.y can be percent string like '20%'\r\n\r\n  if (item && !hasXAndY(item) && !isArray(item.coord) && coordSys) {\r\n    var dims = coordSys.dimensions;\r\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\r\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\r\n\r\n    item = clone(item);\r\n\r\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\r\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\r\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\r\n      var coordInfo = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex);\r\n      item.coord = coordInfo[0]; // Force to use the value of calculated value.\r\n      // let item use the value without stack.\r\n\r\n      item.value = coordInfo[1];\r\n    } else {\r\n      // FIXME Only has one of xAxis and yAxis.\r\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\r\n\r\n      for (var i = 0; i < 2; i++) {\r\n        if (markerTypeCalculator[coord[i]]) {\r\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\r\n        }\r\n      }\r\n\r\n      item.coord = coord;\r\n    }\r\n  }\r\n\r\n  return item;\r\n}\r\nexport function getAxisInfo(item, data, coordSys, seriesModel) {\r\n  var ret = {};\r\n\r\n  if (item.valueIndex != null || item.valueDim != null) {\r\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\r\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\r\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\r\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\r\n  } else {\r\n    ret.baseAxis = seriesModel.getBaseAxis();\r\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\r\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\r\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nfunction dataDimToCoordDim(seriesModel, dataDim) {\r\n  var dimItem = seriesModel.getData().getDimensionInfo(dataDim);\r\n  return dimItem && dimItem.coordDim;\r\n}\r\n/**\r\n * Filter data which is out of coordinateSystem range\r\n * [dataFilter description]\r\n */\r\n\r\n\r\nexport function dataFilter( // Currently only polar and cartesian has containData.\r\ncoordSys, item) {\r\n  // Alwalys return true if there is no coordSys\r\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\r\n}\r\nexport function createMarkerDimValueGetter(inCoordSys, dims) {\r\n  return inCoordSys ? function (item, dimName, dataIndex, dimIndex) {\r\n    var rawVal = dimIndex < 2 // x, y, radius, angle\r\n    ? item.coord && item.coord[dimIndex] : item.value;\r\n    return parseDataValue(rawVal, dims[dimIndex]);\r\n  } : function (item, dimName, dataIndex, dimIndex) {\r\n    return parseDataValue(item.value, dims[dimIndex]);\r\n  };\r\n}\r\nexport function numCalculate(data, valueDataDim, type) {\r\n  if (type === 'average') {\r\n    var sum_1 = 0;\r\n    var count_1 = 0;\r\n    data.each(valueDataDim, function (val, idx) {\r\n      if (!isNaN(val)) {\r\n        sum_1 += val;\r\n        count_1++;\r\n      }\r\n    });\r\n    return sum_1 / count_1;\r\n  } else if (type === 'median') {\r\n    return data.getMedian(valueDataDim);\r\n  } else {\r\n    // max & min\r\n    return data.getDataExtent(valueDataDim)[type === 'max' ? 1 : 0];\r\n  }\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport ComponentView from '../../view/Component';\r\nimport { createHashMap, each } from 'zrender/lib/core/util';\r\nimport MarkerModel from './MarkerModel';\r\nimport { makeInner } from '../../util/model';\r\nimport { enterBlur } from '../../util/states';\r\nvar inner = makeInner();\r\n\r\nvar MarkerView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(MarkerView, _super);\r\n\r\n  function MarkerView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = MarkerView.type;\r\n    return _this;\r\n  }\r\n\r\n  MarkerView.prototype.init = function () {\r\n    this.markerGroupMap = createHashMap();\r\n  };\r\n\r\n  MarkerView.prototype.render = function (markerModel, ecModel, api) {\r\n    var _this = this;\r\n\r\n    var markerGroupMap = this.markerGroupMap;\r\n    markerGroupMap.each(function (item) {\r\n      inner(item).keep = false;\r\n    });\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      var markerModel = MarkerModel.getMarkerModelFromSeries(seriesModel, _this.type);\r\n      markerModel && _this.renderSeries(seriesModel, markerModel, ecModel, api);\r\n    });\r\n    markerGroupMap.each(function (item) {\r\n      !inner(item).keep && _this.group.remove(item.group);\r\n    });\r\n  };\r\n\r\n  MarkerView.prototype.markKeep = function (drawGroup) {\r\n    inner(drawGroup).keep = true;\r\n  };\r\n\r\n  MarkerView.prototype.blurSeries = function (seriesModelList) {\r\n    var _this = this;\r\n\r\n    each(seriesModelList, function (seriesModel) {\r\n      var markerModel = MarkerModel.getMarkerModelFromSeries(seriesModel, _this.type);\r\n\r\n      if (markerModel) {\r\n        var data = markerModel.getData();\r\n        data.eachItemGraphicEl(function (el) {\r\n          if (el) {\r\n            enterBlur(el);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  MarkerView.type = 'marker';\r\n  return MarkerView;\r\n}(ComponentView);\r\n\r\nexport default MarkerView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport SymbolDraw from '../../chart/helper/SymbolDraw';\r\nimport * as numberUtil from '../../util/number';\r\nimport SeriesData from '../../data/SeriesData';\r\nimport * as markerHelper from './markerHelper';\r\nimport MarkerView from './MarkerView';\r\nimport MarkerModel from './MarkerModel';\r\nimport { isFunction, map, filter, curry, extend } from 'zrender/lib/core/util';\r\nimport { getECData } from '../../util/innerStore';\r\nimport { getVisualFromData } from '../../visual/helper';\r\n\r\nfunction updateMarkerLayout(mpData, seriesModel, api) {\r\n  var coordSys = seriesModel.coordinateSystem;\r\n  mpData.each(function (idx) {\r\n    var itemModel = mpData.getItemModel(idx);\r\n    var point;\r\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\r\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\r\n\r\n    if (!isNaN(xPx) && !isNaN(yPx)) {\r\n      point = [xPx, yPx];\r\n    } // Chart like bar may have there own marker positioning logic\r\n    else if (seriesModel.getMarkerPosition) {\r\n        // Use the getMarkerPoisition\r\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\r\n      } else if (coordSys) {\r\n        var x = mpData.get(coordSys.dimensions[0], idx);\r\n        var y = mpData.get(coordSys.dimensions[1], idx);\r\n        point = coordSys.dataToPoint([x, y]);\r\n      } // Use x, y if has any\r\n\r\n\r\n    if (!isNaN(xPx)) {\r\n      point[0] = xPx;\r\n    }\r\n\r\n    if (!isNaN(yPx)) {\r\n      point[1] = yPx;\r\n    }\r\n\r\n    mpData.setItemLayout(idx, point);\r\n  });\r\n}\r\n\r\nvar MarkPointView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(MarkPointView, _super);\r\n\r\n  function MarkPointView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = MarkPointView.type;\r\n    return _this;\r\n  }\r\n\r\n  MarkPointView.prototype.updateTransform = function (markPointModel, ecModel, api) {\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      var mpModel = MarkerModel.getMarkerModelFromSeries(seriesModel, 'markPoint');\r\n\r\n      if (mpModel) {\r\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\r\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\r\n      }\r\n    }, this);\r\n  };\r\n\r\n  MarkPointView.prototype.renderSeries = function (seriesModel, mpModel, ecModel, api) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var seriesId = seriesModel.id;\r\n    var seriesData = seriesModel.getData();\r\n    var symbolDrawMap = this.markerGroupMap;\r\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\r\n    var mpData = createData(coordSys, seriesModel, mpModel); // FIXME\r\n\r\n    mpModel.setData(mpData);\r\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\r\n    mpData.each(function (idx) {\r\n      var itemModel = mpData.getItemModel(idx);\r\n      var symbol = itemModel.getShallow('symbol');\r\n      var symbolSize = itemModel.getShallow('symbolSize');\r\n      var symbolRotate = itemModel.getShallow('symbolRotate');\r\n      var symbolOffset = itemModel.getShallow('symbolOffset');\r\n      var symbolKeepAspect = itemModel.getShallow('symbolKeepAspect'); // TODO: refactor needed: single data item should not support callback function\r\n\r\n      if (isFunction(symbol) || isFunction(symbolSize) || isFunction(symbolRotate) || isFunction(symbolOffset)) {\r\n        var rawIdx = mpModel.getRawValue(idx);\r\n        var dataParams = mpModel.getDataParams(idx);\r\n\r\n        if (isFunction(symbol)) {\r\n          symbol = symbol(rawIdx, dataParams);\r\n        }\r\n\r\n        if (isFunction(symbolSize)) {\r\n          // FIXME \u8FD9\u91CC\u4E0D\u517C\u5BB9 ECharts 2.x\uFF0C2.x \u8C8C\u4F3C\u53C2\u6570\u662F\u6574\u4E2A\u6570\u636E\uFF1F\r\n          symbolSize = symbolSize(rawIdx, dataParams);\r\n        }\r\n\r\n        if (isFunction(symbolRotate)) {\r\n          symbolRotate = symbolRotate(rawIdx, dataParams);\r\n        }\r\n\r\n        if (isFunction(symbolOffset)) {\r\n          symbolOffset = symbolOffset(rawIdx, dataParams);\r\n        }\r\n      }\r\n\r\n      var style = itemModel.getModel('itemStyle').getItemStyle();\r\n      var color = getVisualFromData(seriesData, 'color');\r\n\r\n      if (!style.fill) {\r\n        style.fill = color;\r\n      }\r\n\r\n      mpData.setItemVisual(idx, {\r\n        symbol: symbol,\r\n        symbolSize: symbolSize,\r\n        symbolRotate: symbolRotate,\r\n        symbolOffset: symbolOffset,\r\n        symbolKeepAspect: symbolKeepAspect,\r\n        style: style\r\n      });\r\n    }); // TODO Text are wrong\r\n\r\n    symbolDraw.updateData(mpData);\r\n    this.group.add(symbolDraw.group); // Set host model for tooltip\r\n    // FIXME\r\n\r\n    mpData.eachItemGraphicEl(function (el) {\r\n      el.traverse(function (child) {\r\n        getECData(child).dataModel = mpModel;\r\n      });\r\n    });\r\n    this.markKeep(symbolDraw);\r\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\r\n  };\r\n\r\n  MarkPointView.type = 'markPoint';\r\n  return MarkPointView;\r\n}(MarkerView);\r\n\r\nfunction createData(coordSys, seriesModel, mpModel) {\r\n  var coordDimsInfos;\r\n\r\n  if (coordSys) {\r\n    coordDimsInfos = map(coordSys && coordSys.dimensions, function (coordDim) {\r\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\r\n\r\n      return extend(extend({}, info), {\r\n        name: coordDim,\r\n        // DON'T use ordinalMeta to parse and collect ordinal.\r\n        ordinalMeta: null\r\n      });\r\n    });\r\n  } else {\r\n    coordDimsInfos = [{\r\n      name: 'value',\r\n      type: 'float'\r\n    }];\r\n  }\r\n\r\n  var mpData = new SeriesData(coordDimsInfos, mpModel);\r\n  var dataOpt = map(mpModel.get('data'), curry(markerHelper.dataTransform, seriesModel));\r\n\r\n  if (coordSys) {\r\n    dataOpt = filter(dataOpt, curry(markerHelper.dataFilter, coordSys));\r\n  }\r\n\r\n  var dimValueGetter = markerHelper.createMarkerDimValueGetter(!!coordSys, coordDimsInfos);\r\n  mpData.initData(dataOpt, null, dimValueGetter);\r\n  return mpData;\r\n}\r\n\r\nexport default MarkPointView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\nimport checkMarkerInSeries from './checkMarkerInSeries';\r\nimport MarkPointModel from './MarkPointModel';\r\nimport MarkPointView from './MarkPointView';\r\nexport function install(registers) {\r\n  registers.registerComponentModel(MarkPointModel);\r\n  registers.registerComponentView(MarkPointView);\r\n  registers.registerPreprocessor(function (opt) {\r\n    if (checkMarkerInSeries(opt.series, 'markPoint')) {\r\n      // Make sure markPoint component is enabled\r\n      opt.markPoint = opt.markPoint || {};\r\n    }\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport MarkerModel from './MarkerModel';\r\n\r\nvar MarkLineModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(MarkLineModel, _super);\r\n\r\n  function MarkLineModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = MarkLineModel.type;\r\n    return _this;\r\n  }\r\n\r\n  MarkLineModel.prototype.createMarkerModelFromSeries = function (markerOpt, masterMarkerModel, ecModel) {\r\n    return new MarkLineModel(markerOpt, masterMarkerModel, ecModel);\r\n  };\r\n\r\n  MarkLineModel.type = 'markLine';\r\n  MarkLineModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 5,\r\n    symbol: ['circle', 'arrow'],\r\n    symbolSize: [8, 16],\r\n    //symbolRotate: 0,\r\n    symbolOffset: 0,\r\n    precision: 2,\r\n    tooltip: {\r\n      trigger: 'item'\r\n    },\r\n    label: {\r\n      show: true,\r\n      position: 'end',\r\n      distance: 5\r\n    },\r\n    lineStyle: {\r\n      type: 'dashed'\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true\r\n      },\r\n      lineStyle: {\r\n        width: 3\r\n      }\r\n    },\r\n    animationEasing: 'linear'\r\n  };\r\n  return MarkLineModel;\r\n}(MarkerModel);\r\n\r\nexport default MarkLineModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport SeriesData from '../../data/SeriesData';\r\nimport * as numberUtil from '../../util/number';\r\nimport * as markerHelper from './markerHelper';\r\nimport LineDraw from '../../chart/helper/LineDraw';\r\nimport MarkerView from './MarkerView';\r\nimport { getStackedDimension } from '../../data/helper/dataStackHelper';\r\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem';\r\nimport { getECData } from '../../util/innerStore';\r\nimport MarkerModel from './MarkerModel';\r\nimport { isArray, retrieve, retrieve2, clone, extend, logError, merge, map, curry, filter } from 'zrender/lib/core/util';\r\nimport { makeInner } from '../../util/model';\r\nimport { getVisualFromData } from '../../visual/helper';\r\nvar inner = makeInner();\r\n\r\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\r\n  var data = seriesModel.getData();\r\n  var itemArray;\r\n\r\n  if (!isArray(item)) {\r\n    // Special type markLine like 'min', 'max', 'average', 'median'\r\n    var mlType = item.type;\r\n\r\n    if (mlType === 'min' || mlType === 'max' || mlType === 'average' || mlType === 'median' // In case\r\n    // data: [{\r\n    //   yAxis: 10\r\n    // }]\r\n    || item.xAxis != null || item.yAxis != null) {\r\n      var valueAxis = void 0;\r\n      var value = void 0;\r\n\r\n      if (item.yAxis != null || item.xAxis != null) {\r\n        valueAxis = coordSys.getAxis(item.yAxis != null ? 'y' : 'x');\r\n        value = retrieve(item.yAxis, item.xAxis);\r\n      } else {\r\n        var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\r\n        valueAxis = axisInfo.valueAxis;\r\n        var valueDataDim = getStackedDimension(data, axisInfo.valueDataDim);\r\n        value = markerHelper.numCalculate(data, valueDataDim, mlType);\r\n      }\r\n\r\n      var valueIndex = valueAxis.dim === 'x' ? 0 : 1;\r\n      var baseIndex = 1 - valueIndex; // Normized to 2d data with start and end point\r\n\r\n      var mlFrom = clone(item);\r\n      var mlTo = {\r\n        coord: []\r\n      };\r\n      mlFrom.type = null;\r\n      mlFrom.coord = [];\r\n      mlFrom.coord[baseIndex] = -Infinity;\r\n      mlTo.coord[baseIndex] = Infinity;\r\n      var precision = mlModel.get('precision');\r\n\r\n      if (precision >= 0 && typeof value === 'number') {\r\n        value = +value.toFixed(Math.min(precision, 20));\r\n      }\r\n\r\n      mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\r\n      itemArray = [mlFrom, mlTo, {\r\n        type: mlType,\r\n        valueIndex: item.valueIndex,\r\n        // Force to use the value of calculated value.\r\n        value: value\r\n      }];\r\n    } else {\r\n      // Invalid data\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        logError('Invalid markLine data.');\r\n      }\r\n\r\n      itemArray = [];\r\n    }\r\n  } else {\r\n    itemArray = item;\r\n  }\r\n\r\n  var normalizedItem = [markerHelper.dataTransform(seriesModel, itemArray[0]), markerHelper.dataTransform(seriesModel, itemArray[1]), extend({}, itemArray[2])]; // Avoid line data type is extended by from(to) data type\r\n\r\n  normalizedItem[2].type = normalizedItem[2].type || null; // Merge from option and to option into line option\r\n\r\n  merge(normalizedItem[2], normalizedItem[0]);\r\n  merge(normalizedItem[2], normalizedItem[1]);\r\n  return normalizedItem;\r\n};\r\n\r\nfunction isInifinity(val) {\r\n  return !isNaN(val) && !isFinite(val);\r\n} // If a markLine has one dim\r\n\r\n\r\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\r\n  var otherDimIndex = 1 - dimIndex;\r\n  var dimName = coordSys.dimensions[dimIndex];\r\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\r\n}\r\n\r\nfunction markLineFilter(coordSys, item) {\r\n  if (coordSys.type === 'cartesian2d') {\r\n    var fromCoord = item[0].coord;\r\n    var toCoord = item[1].coord; // In case\r\n    // {\r\n    //  markLine: {\r\n    //    data: [{ yAxis: 2 }]\r\n    //  }\r\n    // }\r\n\r\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\r\n}\r\n\r\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\r\n  var coordSys = seriesModel.coordinateSystem;\r\n  var itemModel = data.getItemModel(idx);\r\n  var point;\r\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\r\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\r\n\r\n  if (!isNaN(xPx) && !isNaN(yPx)) {\r\n    point = [xPx, yPx];\r\n  } else {\r\n    // Chart like bar may have there own marker positioning logic\r\n    if (seriesModel.getMarkerPosition) {\r\n      // Use the getMarkerPoisition\r\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\r\n    } else {\r\n      var dims = coordSys.dimensions;\r\n      var x = data.get(dims[0], idx);\r\n      var y = data.get(dims[1], idx);\r\n      point = coordSys.dataToPoint([x, y]);\r\n    } // Expand line to the edge of grid if value on one axis is Inifnity\r\n    // In case\r\n    //  markLine: {\r\n    //    data: [{\r\n    //      yAxis: 2\r\n    //      // or\r\n    //      type: 'average'\r\n    //    }]\r\n    //  }\r\n\r\n\r\n    if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\r\n      // TODO: TYPE ts@4.1 may still infer it as Axis instead of Axis2D. Not sure if it's a bug\r\n      var xAxis = coordSys.getAxis('x');\r\n      var yAxis = coordSys.getAxis('y');\r\n      var dims = coordSys.dimensions;\r\n\r\n      if (isInifinity(data.get(dims[0], idx))) {\r\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\r\n      } else if (isInifinity(data.get(dims[1], idx))) {\r\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\r\n      }\r\n    } // Use x, y if has any\r\n\r\n\r\n    if (!isNaN(xPx)) {\r\n      point[0] = xPx;\r\n    }\r\n\r\n    if (!isNaN(yPx)) {\r\n      point[1] = yPx;\r\n    }\r\n  }\r\n\r\n  data.setItemLayout(idx, point);\r\n}\r\n\r\nvar MarkLineView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(MarkLineView, _super);\r\n\r\n  function MarkLineView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = MarkLineView.type;\r\n    return _this;\r\n  }\r\n\r\n  MarkLineView.prototype.updateTransform = function (markLineModel, ecModel, api) {\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      var mlModel = MarkerModel.getMarkerModelFromSeries(seriesModel, 'markLine');\r\n\r\n      if (mlModel) {\r\n        var mlData_1 = mlModel.getData();\r\n        var fromData_1 = inner(mlModel).from;\r\n        var toData_1 = inner(mlModel).to; // Update visual and layout of from symbol and to symbol\r\n\r\n        fromData_1.each(function (idx) {\r\n          updateSingleMarkerEndLayout(fromData_1, idx, true, seriesModel, api);\r\n          updateSingleMarkerEndLayout(toData_1, idx, false, seriesModel, api);\r\n        }); // Update layout of line\r\n\r\n        mlData_1.each(function (idx) {\r\n          mlData_1.setItemLayout(idx, [fromData_1.getItemLayout(idx), toData_1.getItemLayout(idx)]);\r\n        });\r\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\r\n      }\r\n    }, this);\r\n  };\r\n\r\n  MarkLineView.prototype.renderSeries = function (seriesModel, mlModel, ecModel, api) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var seriesId = seriesModel.id;\r\n    var seriesData = seriesModel.getData();\r\n    var lineDrawMap = this.markerGroupMap;\r\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\r\n    this.group.add(lineDraw.group);\r\n    var mlData = createList(coordSys, seriesModel, mlModel);\r\n    var fromData = mlData.from;\r\n    var toData = mlData.to;\r\n    var lineData = mlData.line;\r\n    inner(mlModel).from = fromData;\r\n    inner(mlModel).to = toData; // Line data for tooltip and formatter\r\n\r\n    mlModel.setData(lineData); // TODO\r\n    // Functionally, `symbolSize` & `symbolOffset` can also be 2D array now.\r\n    // But the related logic and type definition are not finished yet.\r\n    // Finish it if required\r\n\r\n    var symbolType = mlModel.get('symbol');\r\n    var symbolSize = mlModel.get('symbolSize');\r\n    var symbolRotate = mlModel.get('symbolRotate');\r\n    var symbolOffset = mlModel.get('symbolOffset'); // TODO: support callback function like markPoint\r\n\r\n    if (!isArray(symbolType)) {\r\n      symbolType = [symbolType, symbolType];\r\n    }\r\n\r\n    if (!isArray(symbolSize)) {\r\n      symbolSize = [symbolSize, symbolSize];\r\n    }\r\n\r\n    if (!isArray(symbolRotate)) {\r\n      symbolRotate = [symbolRotate, symbolRotate];\r\n    }\r\n\r\n    if (!isArray(symbolOffset)) {\r\n      symbolOffset = [symbolOffset, symbolOffset];\r\n    } // Update visual and layout of from symbol and to symbol\r\n\r\n\r\n    mlData.from.each(function (idx) {\r\n      updateDataVisualAndLayout(fromData, idx, true);\r\n      updateDataVisualAndLayout(toData, idx, false);\r\n    }); // Update visual and layout of line\r\n\r\n    lineData.each(function (idx) {\r\n      var lineStyle = lineData.getItemModel(idx).getModel('lineStyle').getLineStyle(); // lineData.setItemVisual(idx, {\r\n      //     color: lineColor || fromData.getItemVisual(idx, 'color')\r\n      // });\r\n\r\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\r\n\r\n      if (lineStyle.stroke == null) {\r\n        lineStyle.stroke = fromData.getItemVisual(idx, 'style').fill;\r\n      }\r\n\r\n      lineData.setItemVisual(idx, {\r\n        fromSymbolKeepAspect: fromData.getItemVisual(idx, 'symbolKeepAspect'),\r\n        fromSymbolOffset: fromData.getItemVisual(idx, 'symbolOffset'),\r\n        fromSymbolRotate: fromData.getItemVisual(idx, 'symbolRotate'),\r\n        fromSymbolSize: fromData.getItemVisual(idx, 'symbolSize'),\r\n        fromSymbol: fromData.getItemVisual(idx, 'symbol'),\r\n        toSymbolKeepAspect: toData.getItemVisual(idx, 'symbolKeepAspect'),\r\n        toSymbolOffset: toData.getItemVisual(idx, 'symbolOffset'),\r\n        toSymbolRotate: toData.getItemVisual(idx, 'symbolRotate'),\r\n        toSymbolSize: toData.getItemVisual(idx, 'symbolSize'),\r\n        toSymbol: toData.getItemVisual(idx, 'symbol'),\r\n        style: lineStyle\r\n      });\r\n    });\r\n    lineDraw.updateData(lineData); // Set host model for tooltip\r\n    // FIXME\r\n\r\n    mlData.line.eachItemGraphicEl(function (el, idx) {\r\n      el.traverse(function (child) {\r\n        getECData(child).dataModel = mlModel;\r\n      });\r\n    });\r\n\r\n    function updateDataVisualAndLayout(data, idx, isFrom) {\r\n      var itemModel = data.getItemModel(idx);\r\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\r\n      var style = itemModel.getModel('itemStyle').getItemStyle();\r\n\r\n      if (style.fill == null) {\r\n        style.fill = getVisualFromData(seriesData, 'color');\r\n      }\r\n\r\n      data.setItemVisual(idx, {\r\n        symbolKeepAspect: itemModel.get('symbolKeepAspect'),\r\n        // `0` should be considered as a valid value, so use `retrieve2` instead of `||`\r\n        symbolOffset: retrieve2(itemModel.get('symbolOffset', true), symbolOffset[isFrom ? 0 : 1]),\r\n        symbolRotate: retrieve2(itemModel.get('symbolRotate', true), symbolRotate[isFrom ? 0 : 1]),\r\n        // TODO: when 2d array is supported, it should ignore parent\r\n        symbolSize: retrieve2(itemModel.get('symbolSize'), symbolSize[isFrom ? 0 : 1]),\r\n        symbol: retrieve2(itemModel.get('symbol', true), symbolType[isFrom ? 0 : 1]),\r\n        style: style\r\n      });\r\n    }\r\n\r\n    this.markKeep(lineDraw);\r\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\r\n  };\r\n\r\n  MarkLineView.type = 'markLine';\r\n  return MarkLineView;\r\n}(MarkerView);\r\n\r\nfunction createList(coordSys, seriesModel, mlModel) {\r\n  var coordDimsInfos;\r\n\r\n  if (coordSys) {\r\n    coordDimsInfos = map(coordSys && coordSys.dimensions, function (coordDim) {\r\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\r\n\r\n      return extend(extend({}, info), {\r\n        name: coordDim,\r\n        // DON'T use ordinalMeta to parse and collect ordinal.\r\n        ordinalMeta: null\r\n      });\r\n    });\r\n  } else {\r\n    coordDimsInfos = [{\r\n      name: 'value',\r\n      type: 'float'\r\n    }];\r\n  }\r\n\r\n  var fromData = new SeriesData(coordDimsInfos, mlModel);\r\n  var toData = new SeriesData(coordDimsInfos, mlModel); // No dimensions\r\n\r\n  var lineData = new SeriesData([], mlModel);\r\n  var optData = map(mlModel.get('data'), curry(markLineTransform, seriesModel, coordSys, mlModel));\r\n\r\n  if (coordSys) {\r\n    optData = filter(optData, curry(markLineFilter, coordSys));\r\n  }\r\n\r\n  var dimValueGetter = markerHelper.createMarkerDimValueGetter(!!coordSys, coordDimsInfos);\r\n  fromData.initData(map(optData, function (item) {\r\n    return item[0];\r\n  }), null, dimValueGetter);\r\n  toData.initData(map(optData, function (item) {\r\n    return item[1];\r\n  }), null, dimValueGetter);\r\n  lineData.initData(map(optData, function (item) {\r\n    return item[2];\r\n  }));\r\n  lineData.hasItemOption = true;\r\n  return {\r\n    from: fromData,\r\n    to: toData,\r\n    line: lineData\r\n  };\r\n}\r\n\r\nexport default MarkLineView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\nimport checkMarkerInSeries from './checkMarkerInSeries';\r\nimport MarkLineModel from './MarkLineModel';\r\nimport MarkLineView from './MarkLineView';\r\nexport function install(registers) {\r\n  registers.registerComponentModel(MarkLineModel);\r\n  registers.registerComponentView(MarkLineView);\r\n  registers.registerPreprocessor(function (opt) {\r\n    if (checkMarkerInSeries(opt.series, 'markLine')) {\r\n      // Make sure markLine component is enabled\r\n      opt.markLine = opt.markLine || {};\r\n    }\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport MarkerModel from './MarkerModel';\r\n\r\nvar MarkAreaModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(MarkAreaModel, _super);\r\n\r\n  function MarkAreaModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = MarkAreaModel.type;\r\n    return _this;\r\n  }\r\n\r\n  MarkAreaModel.prototype.createMarkerModelFromSeries = function (markerOpt, masterMarkerModel, ecModel) {\r\n    return new MarkAreaModel(markerOpt, masterMarkerModel, ecModel);\r\n  };\r\n\r\n  MarkAreaModel.type = 'markArea';\r\n  MarkAreaModel.defaultOption = {\r\n    zlevel: 0,\r\n    // PENDING\r\n    z: 1,\r\n    tooltip: {\r\n      trigger: 'item'\r\n    },\r\n    // markArea should fixed on the coordinate system\r\n    animation: false,\r\n    label: {\r\n      show: true,\r\n      position: 'top'\r\n    },\r\n    itemStyle: {\r\n      // color and borderColor default to use color from series\r\n      // color: 'auto'\r\n      // borderColor: 'auto'\r\n      borderWidth: 0\r\n    },\r\n    emphasis: {\r\n      label: {\r\n        show: true,\r\n        position: 'top'\r\n      }\r\n    }\r\n  };\r\n  return MarkAreaModel;\r\n}(MarkerModel);\r\n\r\nexport default MarkAreaModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\"; // TODO Optimize on polar\r\n\r\nimport * as colorUtil from 'zrender/lib/tool/color';\r\nimport SeriesData from '../../data/SeriesData';\r\nimport * as numberUtil from '../../util/number';\r\nimport * as graphic from '../../util/graphic';\r\nimport { enableHoverEmphasis, setStatesStylesFromModel } from '../../util/states';\r\nimport * as markerHelper from './markerHelper';\r\nimport MarkerView from './MarkerView';\r\nimport { retrieve, mergeAll, map, curry, filter, extend } from 'zrender/lib/core/util';\r\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem';\r\nimport MarkerModel from './MarkerModel';\r\nimport { makeInner } from '../../util/model';\r\nimport { getVisualFromData } from '../../visual/helper';\r\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle';\r\nimport { getECData } from '../../util/innerStore';\r\nimport { parseDataValue } from '../../data/helper/dataValueHelper';\r\nvar inner = makeInner();\r\n\r\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\r\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\r\n  var rb = markerHelper.dataTransform(seriesModel, item[1]); // FIXME make sure lt is less than rb\r\n\r\n  var ltCoord = lt.coord;\r\n  var rbCoord = rb.coord;\r\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\r\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\r\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\r\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\r\n\r\n  var result = mergeAll([{}, lt, rb]);\r\n  result.coord = [lt.coord, rb.coord];\r\n  result.x0 = lt.x;\r\n  result.y0 = lt.y;\r\n  result.x1 = rb.x;\r\n  result.y1 = rb.y;\r\n  return result;\r\n};\r\n\r\nfunction isInifinity(val) {\r\n  return !isNaN(val) && !isFinite(val);\r\n} // If a markArea has one dim\r\n\r\n\r\nfunction ifMarkAreaHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\r\n  var otherDimIndex = 1 - dimIndex;\r\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\r\n}\r\n\r\nfunction markAreaFilter(coordSys, item) {\r\n  var fromCoord = item.coord[0];\r\n  var toCoord = item.coord[1];\r\n\r\n  if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\r\n    // In case\r\n    // {\r\n    //  markArea: {\r\n    //    data: [{ yAxis: 2 }]\r\n    //  }\r\n    // }\r\n    if (fromCoord && toCoord && (ifMarkAreaHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkAreaHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return markerHelper.dataFilter(coordSys, {\r\n    coord: fromCoord,\r\n    x: item.x0,\r\n    y: item.y0\r\n  }) || markerHelper.dataFilter(coordSys, {\r\n    coord: toCoord,\r\n    x: item.x1,\r\n    y: item.y1\r\n  });\r\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\r\n\r\n\r\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\r\n  var coordSys = seriesModel.coordinateSystem;\r\n  var itemModel = data.getItemModel(idx);\r\n  var point;\r\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\r\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\r\n\r\n  if (!isNaN(xPx) && !isNaN(yPx)) {\r\n    point = [xPx, yPx];\r\n  } else {\r\n    // Chart like bar may have there own marker positioning logic\r\n    if (seriesModel.getMarkerPosition) {\r\n      // Use the getMarkerPoisition\r\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\r\n    } else {\r\n      var x = data.get(dims[0], idx);\r\n      var y = data.get(dims[1], idx);\r\n      var pt = [x, y];\r\n      coordSys.clampData && coordSys.clampData(pt, pt);\r\n      point = coordSys.dataToPoint(pt, true);\r\n    }\r\n\r\n    if (isCoordinateSystemType(coordSys, 'cartesian2d')) {\r\n      // TODO: TYPE ts@4.1 may still infer it as Axis instead of Axis2D. Not sure if it's a bug\r\n      var xAxis = coordSys.getAxis('x');\r\n      var yAxis = coordSys.getAxis('y');\r\n      var x = data.get(dims[0], idx);\r\n      var y = data.get(dims[1], idx);\r\n\r\n      if (isInifinity(x)) {\r\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\r\n      } else if (isInifinity(y)) {\r\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\r\n      }\r\n    } // Use x, y if has any\r\n\r\n\r\n    if (!isNaN(xPx)) {\r\n      point[0] = xPx;\r\n    }\r\n\r\n    if (!isNaN(yPx)) {\r\n      point[1] = yPx;\r\n    }\r\n  }\r\n\r\n  return point;\r\n}\r\n\r\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\r\n\r\nvar MarkAreaView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(MarkAreaView, _super);\r\n\r\n  function MarkAreaView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = MarkAreaView.type;\r\n    return _this;\r\n  }\r\n\r\n  MarkAreaView.prototype.updateTransform = function (markAreaModel, ecModel, api) {\r\n    ecModel.eachSeries(function (seriesModel) {\r\n      var maModel = MarkerModel.getMarkerModelFromSeries(seriesModel, 'markArea');\r\n\r\n      if (maModel) {\r\n        var areaData_1 = maModel.getData();\r\n        areaData_1.each(function (idx) {\r\n          var points = map(dimPermutations, function (dim) {\r\n            return getSingleMarkerEndPoint(areaData_1, idx, dim, seriesModel, api);\r\n          }); // Layout\r\n\r\n          areaData_1.setItemLayout(idx, points);\r\n          var el = areaData_1.getItemGraphicEl(idx);\r\n          el.setShape('points', points);\r\n        });\r\n      }\r\n    }, this);\r\n  };\r\n\r\n  MarkAreaView.prototype.renderSeries = function (seriesModel, maModel, ecModel, api) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n    var seriesId = seriesModel.id;\r\n    var seriesData = seriesModel.getData();\r\n    var areaGroupMap = this.markerGroupMap;\r\n    var polygonGroup = areaGroupMap.get(seriesId) || areaGroupMap.set(seriesId, {\r\n      group: new graphic.Group()\r\n    });\r\n    this.group.add(polygonGroup.group);\r\n    this.markKeep(polygonGroup);\r\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\r\n\r\n    maModel.setData(areaData); // Update visual and layout of line\r\n\r\n    areaData.each(function (idx) {\r\n      // Layout\r\n      var points = map(dimPermutations, function (dim) {\r\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\r\n      });\r\n      var xAxisScale = coordSys.getAxis('x').scale;\r\n      var yAxisScale = coordSys.getAxis('y').scale;\r\n      var xAxisExtent = xAxisScale.getExtent();\r\n      var yAxisExtent = yAxisScale.getExtent();\r\n      var xPointExtent = [xAxisScale.parse(areaData.get('x0', idx)), xAxisScale.parse(areaData.get('x1', idx))];\r\n      var yPointExtent = [yAxisScale.parse(areaData.get('y0', idx)), yAxisScale.parse(areaData.get('y1', idx))];\r\n      numberUtil.asc(xPointExtent);\r\n      numberUtil.asc(yPointExtent);\r\n      var overlapped = !(xAxisExtent[0] > xPointExtent[1] || xAxisExtent[1] < xPointExtent[0] || yAxisExtent[0] > yPointExtent[1] || yAxisExtent[1] < yPointExtent[0]); // If none of the area is inside coordSys, allClipped is set to be true\r\n      // in layout so that label will not be displayed. See #12591\r\n\r\n      var allClipped = !overlapped;\r\n      areaData.setItemLayout(idx, {\r\n        points: points,\r\n        allClipped: allClipped\r\n      });\r\n      var style = areaData.getItemModel(idx).getModel('itemStyle').getItemStyle();\r\n      var color = getVisualFromData(seriesData, 'color');\r\n\r\n      if (!style.fill) {\r\n        style.fill = color;\r\n\r\n        if (typeof style.fill === 'string') {\r\n          style.fill = colorUtil.modifyAlpha(style.fill, 0.4);\r\n        }\r\n      }\r\n\r\n      if (!style.stroke) {\r\n        style.stroke = color;\r\n      } // Visual\r\n\r\n\r\n      areaData.setItemVisual(idx, 'style', style);\r\n    });\r\n    areaData.diff(inner(polygonGroup).data).add(function (idx) {\r\n      var layout = areaData.getItemLayout(idx);\r\n\r\n      if (!layout.allClipped) {\r\n        var polygon = new graphic.Polygon({\r\n          shape: {\r\n            points: layout.points\r\n          }\r\n        });\r\n        areaData.setItemGraphicEl(idx, polygon);\r\n        polygonGroup.group.add(polygon);\r\n      }\r\n    }).update(function (newIdx, oldIdx) {\r\n      var polygon = inner(polygonGroup).data.getItemGraphicEl(oldIdx);\r\n      var layout = areaData.getItemLayout(newIdx);\r\n\r\n      if (!layout.allClipped) {\r\n        if (polygon) {\r\n          graphic.updateProps(polygon, {\r\n            shape: {\r\n              points: layout.points\r\n            }\r\n          }, maModel, newIdx);\r\n        } else {\r\n          polygon = new graphic.Polygon({\r\n            shape: {\r\n              points: layout.points\r\n            }\r\n          });\r\n        }\r\n\r\n        areaData.setItemGraphicEl(newIdx, polygon);\r\n        polygonGroup.group.add(polygon);\r\n      } else if (polygon) {\r\n        polygonGroup.group.remove(polygon);\r\n      }\r\n    }).remove(function (idx) {\r\n      var polygon = inner(polygonGroup).data.getItemGraphicEl(idx);\r\n      polygonGroup.group.remove(polygon);\r\n    }).execute();\r\n    areaData.eachItemGraphicEl(function (polygon, idx) {\r\n      var itemModel = areaData.getItemModel(idx);\r\n      var style = areaData.getItemVisual(idx, 'style');\r\n      polygon.useStyle(areaData.getItemVisual(idx, 'style'));\r\n      setLabelStyle(polygon, getLabelStatesModels(itemModel), {\r\n        labelFetcher: maModel,\r\n        labelDataIndex: idx,\r\n        defaultText: areaData.getName(idx) || '',\r\n        inheritColor: typeof style.fill === 'string' ? colorUtil.modifyAlpha(style.fill, 1) : '#000'\r\n      });\r\n      setStatesStylesFromModel(polygon, itemModel);\r\n      enableHoverEmphasis(polygon);\r\n      getECData(polygon).dataModel = maModel;\r\n    });\r\n    inner(polygonGroup).data = areaData;\r\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\r\n  };\r\n\r\n  MarkAreaView.type = 'markArea';\r\n  return MarkAreaView;\r\n}(MarkerView);\r\n\r\nfunction createList(coordSys, seriesModel, maModel) {\r\n  var areaData;\r\n  var dataDims;\r\n  var dims = ['x0', 'y0', 'x1', 'y1'];\r\n\r\n  if (coordSys) {\r\n    var coordDimsInfos_1 = map(coordSys && coordSys.dimensions, function (coordDim) {\r\n      var data = seriesModel.getData();\r\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\r\n\r\n      return extend(extend({}, info), {\r\n        name: coordDim,\r\n        // DON'T use ordinalMeta to parse and collect ordinal.\r\n        ordinalMeta: null\r\n      });\r\n    });\r\n    dataDims = map(dims, function (dim, idx) {\r\n      return {\r\n        name: dim,\r\n        type: coordDimsInfos_1[idx % 2].type\r\n      };\r\n    });\r\n    areaData = new SeriesData(dataDims, maModel);\r\n  } else {\r\n    dataDims = [{\r\n      name: 'value',\r\n      type: 'float'\r\n    }];\r\n    areaData = new SeriesData(dataDims, maModel);\r\n  }\r\n\r\n  var optData = map(maModel.get('data'), curry(markAreaTransform, seriesModel, coordSys, maModel));\r\n\r\n  if (coordSys) {\r\n    optData = filter(optData, curry(markAreaFilter, coordSys));\r\n  }\r\n\r\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\r\n    // TODO should convert to ParsedValue?\r\n    var rawVal = item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\r\n    return parseDataValue(rawVal, dataDims[dimIndex]);\r\n  } : function (item, dimName, dataIndex, dimIndex) {\r\n    return parseDataValue(item.value, dataDims[dimIndex]);\r\n  };\r\n  areaData.initData(optData, null, dimValueGetter);\r\n  areaData.hasItemOption = true;\r\n  return areaData;\r\n}\r\n\r\nexport default MarkAreaView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport checkMarkerInSeries from './checkMarkerInSeries';\r\nimport MarkAreaModel from './MarkAreaModel';\r\nimport MarkAreaView from './MarkAreaView';\r\nexport function install(registers) {\r\n  registers.registerComponentModel(MarkAreaModel);\r\n  registers.registerComponentView(MarkAreaView);\r\n  registers.registerPreprocessor(function (opt) {\r\n    if (checkMarkerInSeries(opt.series, 'markArea')) {\r\n      // Make sure markArea component is enabled\r\n      opt.markArea = opt.markArea || {};\r\n    }\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport Model from '../../model/Model';\r\nimport { isNameSpecified } from '../../util/model';\r\nimport ComponentModel from '../../model/Component';\r\n\r\nvar getDefaultSelectorOptions = function (ecModel, type) {\r\n  if (type === 'all') {\r\n    return {\r\n      type: 'all',\r\n      title: ecModel.getLocaleModel().get(['legend', 'selector', 'all'])\r\n    };\r\n  } else if (type === 'inverse') {\r\n    return {\r\n      type: 'inverse',\r\n      title: ecModel.getLocaleModel().get(['legend', 'selector', 'inverse'])\r\n    };\r\n  }\r\n};\r\n\r\nvar LegendModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(LegendModel, _super);\r\n\r\n  function LegendModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = LegendModel.type;\r\n    _this.layoutMode = {\r\n      type: 'box',\r\n      // legend.width/height are maxWidth/maxHeight actually,\r\n      // whereas realy width/height is calculated by its content.\r\n      // (Setting {left: 10, right: 10} does not make sense).\r\n      // So consider the case:\r\n      // `setOption({legend: {left: 10});`\r\n      // then `setOption({legend: {right: 10});`\r\n      // The previous `left` should be cleared by setting `ignoreSize`.\r\n      ignoreSize: true\r\n    };\r\n    return _this;\r\n  }\r\n\r\n  LegendModel.prototype.init = function (option, parentModel, ecModel) {\r\n    this.mergeDefaultAndTheme(option, ecModel);\r\n    option.selected = option.selected || {};\r\n\r\n    this._updateSelector(option);\r\n  };\r\n\r\n  LegendModel.prototype.mergeOption = function (option, ecModel) {\r\n    _super.prototype.mergeOption.call(this, option, ecModel);\r\n\r\n    this._updateSelector(option);\r\n  };\r\n\r\n  LegendModel.prototype._updateSelector = function (option) {\r\n    var selector = option.selector;\r\n    var ecModel = this.ecModel;\r\n\r\n    if (selector === true) {\r\n      selector = option.selector = ['all', 'inverse'];\r\n    }\r\n\r\n    if (zrUtil.isArray(selector)) {\r\n      zrUtil.each(selector, function (item, index) {\r\n        zrUtil.isString(item) && (item = {\r\n          type: item\r\n        });\r\n        selector[index] = zrUtil.merge(item, getDefaultSelectorOptions(ecModel, item.type));\r\n      });\r\n    }\r\n  };\r\n\r\n  LegendModel.prototype.optionUpdated = function () {\r\n    this._updateData(this.ecModel);\r\n\r\n    var legendData = this._data; // If selectedMode is single, try to select one\r\n\r\n    if (legendData[0] && this.get('selectedMode') === 'single') {\r\n      var hasSelected = false; // If has any selected in option.selected\r\n\r\n      for (var i = 0; i < legendData.length; i++) {\r\n        var name_1 = legendData[i].get('name');\r\n\r\n        if (this.isSelected(name_1)) {\r\n          // Force to unselect others\r\n          this.select(name_1);\r\n          hasSelected = true;\r\n          break;\r\n        }\r\n      } // Try select the first if selectedMode is single\r\n\r\n\r\n      !hasSelected && this.select(legendData[0].get('name'));\r\n    }\r\n  };\r\n\r\n  LegendModel.prototype._updateData = function (ecModel) {\r\n    var potentialData = [];\r\n    var availableNames = [];\r\n    ecModel.eachRawSeries(function (seriesModel) {\r\n      var seriesName = seriesModel.name;\r\n      availableNames.push(seriesName);\r\n      var isPotential;\r\n\r\n      if (seriesModel.legendVisualProvider) {\r\n        var provider = seriesModel.legendVisualProvider;\r\n        var names = provider.getAllNames();\r\n\r\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\r\n          availableNames = availableNames.concat(names);\r\n        }\r\n\r\n        if (names.length) {\r\n          potentialData = potentialData.concat(names);\r\n        } else {\r\n          isPotential = true;\r\n        }\r\n      } else {\r\n        isPotential = true;\r\n      }\r\n\r\n      if (isPotential && isNameSpecified(seriesModel)) {\r\n        potentialData.push(seriesModel.name);\r\n      }\r\n    });\r\n    /**\r\n     * @type {Array.<string>}\r\n     * @private\r\n     */\r\n\r\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\r\n    // which is convinient for user preparing option.\r\n\r\n    var rawData = this.get('data') || potentialData;\r\n    var legendData = zrUtil.map(rawData, function (dataItem) {\r\n      // Can be string or number\r\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\r\n        dataItem = {\r\n          name: dataItem\r\n        };\r\n      }\r\n\r\n      return new Model(dataItem, this, this.ecModel);\r\n    }, this);\r\n    /**\r\n     * @type {Array.<module:echarts/model/Model>}\r\n     * @private\r\n     */\r\n\r\n    this._data = legendData;\r\n  };\r\n\r\n  LegendModel.prototype.getData = function () {\r\n    return this._data;\r\n  };\r\n\r\n  LegendModel.prototype.select = function (name) {\r\n    var selected = this.option.selected;\r\n    var selectedMode = this.get('selectedMode');\r\n\r\n    if (selectedMode === 'single') {\r\n      var data = this._data;\r\n      zrUtil.each(data, function (dataItem) {\r\n        selected[dataItem.get('name')] = false;\r\n      });\r\n    }\r\n\r\n    selected[name] = true;\r\n  };\r\n\r\n  LegendModel.prototype.unSelect = function (name) {\r\n    if (this.get('selectedMode') !== 'single') {\r\n      this.option.selected[name] = false;\r\n    }\r\n  };\r\n\r\n  LegendModel.prototype.toggleSelected = function (name) {\r\n    var selected = this.option.selected; // Default is true\r\n\r\n    if (!selected.hasOwnProperty(name)) {\r\n      selected[name] = true;\r\n    }\r\n\r\n    this[selected[name] ? 'unSelect' : 'select'](name);\r\n  };\r\n\r\n  LegendModel.prototype.allSelect = function () {\r\n    var data = this._data;\r\n    var selected = this.option.selected;\r\n    zrUtil.each(data, function (dataItem) {\r\n      selected[dataItem.get('name', true)] = true;\r\n    });\r\n  };\r\n\r\n  LegendModel.prototype.inverseSelect = function () {\r\n    var data = this._data;\r\n    var selected = this.option.selected;\r\n    zrUtil.each(data, function (dataItem) {\r\n      var name = dataItem.get('name', true); // Initially, default value is true\r\n\r\n      if (!selected.hasOwnProperty(name)) {\r\n        selected[name] = true;\r\n      }\r\n\r\n      selected[name] = !selected[name];\r\n    });\r\n  };\r\n\r\n  LegendModel.prototype.isSelected = function (name) {\r\n    var selected = this.option.selected;\r\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\r\n  };\r\n\r\n  LegendModel.prototype.getOrient = function () {\r\n    return this.get('orient') === 'vertical' ? {\r\n      index: 1,\r\n      name: 'vertical'\r\n    } : {\r\n      index: 0,\r\n      name: 'horizontal'\r\n    };\r\n  };\r\n\r\n  LegendModel.type = 'legend.plain';\r\n  LegendModel.dependencies = ['series'];\r\n  LegendModel.defaultOption = {\r\n    zlevel: 0,\r\n    z: 4,\r\n    show: true,\r\n    orient: 'horizontal',\r\n    left: 'center',\r\n    // right: 'center',\r\n    top: 0,\r\n    // bottom: null,\r\n    align: 'auto',\r\n    backgroundColor: 'rgba(0,0,0,0)',\r\n    borderColor: '#ccc',\r\n    borderRadius: 0,\r\n    borderWidth: 0,\r\n    padding: 5,\r\n    itemGap: 10,\r\n    itemWidth: 25,\r\n    itemHeight: 14,\r\n    symbolRotate: 'inherit',\r\n    symbolKeepAspect: true,\r\n    inactiveColor: '#ccc',\r\n    inactiveBorderColor: '#ccc',\r\n    inactiveBorderWidth: 'auto',\r\n    itemStyle: {\r\n      color: 'inherit',\r\n      opacity: 'inherit',\r\n      borderColor: 'inherit',\r\n      borderWidth: 'auto',\r\n      borderCap: 'inherit',\r\n      borderJoin: 'inherit',\r\n      borderDashOffset: 'inherit',\r\n      borderMiterLimit: 'inherit'\r\n    },\r\n    lineStyle: {\r\n      width: 'auto',\r\n      color: 'inherit',\r\n      inactiveColor: '#ccc',\r\n      inactiveWidth: 2,\r\n      opacity: 'inherit',\r\n      type: 'inherit',\r\n      cap: 'inherit',\r\n      join: 'inherit',\r\n      dashOffset: 'inherit',\r\n      miterLimit: 'inherit'\r\n    },\r\n    textStyle: {\r\n      color: '#333'\r\n    },\r\n    selectedMode: true,\r\n    selector: false,\r\n    selectorLabel: {\r\n      show: true,\r\n      borderRadius: 10,\r\n      padding: [3, 5, 3, 5],\r\n      fontSize: 12,\r\n      fontFamily: 'sans-serif',\r\n      color: '#666',\r\n      borderWidth: 1,\r\n      borderColor: '#666'\r\n    },\r\n    emphasis: {\r\n      selectorLabel: {\r\n        show: true,\r\n        color: '#eee',\r\n        backgroundColor: '#666'\r\n      }\r\n    },\r\n    selectorPosition: 'auto',\r\n    selectorItemGap: 7,\r\n    selectorButtonGap: 10,\r\n    tooltip: {\r\n      show: false\r\n    }\r\n  };\r\n  return LegendModel;\r\n}(ComponentModel);\r\n\r\nexport default LegendModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { parse, stringify } from 'zrender/lib/tool/color';\r\nimport * as graphic from '../../util/graphic';\r\nimport { enableHoverEmphasis } from '../../util/states';\r\nimport { setLabelStyle, createTextStyle } from '../../label/labelStyle';\r\nimport { makeBackground } from '../helper/listComponent';\r\nimport * as layoutUtil from '../../util/layout';\r\nimport ComponentView from '../../view/Component';\r\nimport { createSymbol } from '../../util/symbol';\r\nvar curry = zrUtil.curry;\r\nvar each = zrUtil.each;\r\nvar Group = graphic.Group;\r\n\r\nvar LegendView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(LegendView, _super);\r\n\r\n  function LegendView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = LegendView.type;\r\n    _this.newlineDisabled = false;\r\n    return _this;\r\n  }\r\n\r\n  LegendView.prototype.init = function () {\r\n    this.group.add(this._contentGroup = new Group());\r\n    this.group.add(this._selectorGroup = new Group());\r\n    this._isFirstRender = true;\r\n  };\r\n  /**\r\n   * @protected\r\n   */\r\n\r\n\r\n  LegendView.prototype.getContentGroup = function () {\r\n    return this._contentGroup;\r\n  };\r\n  /**\r\n   * @protected\r\n   */\r\n\r\n\r\n  LegendView.prototype.getSelectorGroup = function () {\r\n    return this._selectorGroup;\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  LegendView.prototype.render = function (legendModel, ecModel, api) {\r\n    var isFirstRender = this._isFirstRender;\r\n    this._isFirstRender = false;\r\n    this.resetInner();\r\n\r\n    if (!legendModel.get('show', true)) {\r\n      return;\r\n    }\r\n\r\n    var itemAlign = legendModel.get('align');\r\n    var orient = legendModel.get('orient');\r\n\r\n    if (!itemAlign || itemAlign === 'auto') {\r\n      itemAlign = legendModel.get('left') === 'right' && orient === 'vertical' ? 'right' : 'left';\r\n    } // selector has been normalized to an array in model\r\n\r\n\r\n    var selector = legendModel.get('selector', true);\r\n    var selectorPosition = legendModel.get('selectorPosition', true);\r\n\r\n    if (selector && (!selectorPosition || selectorPosition === 'auto')) {\r\n      selectorPosition = orient === 'horizontal' ? 'end' : 'start';\r\n    }\r\n\r\n    this.renderInner(itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition); // Perform layout.\r\n\r\n    var positionInfo = legendModel.getBoxLayoutParams();\r\n    var viewportSize = {\r\n      width: api.getWidth(),\r\n      height: api.getHeight()\r\n    };\r\n    var padding = legendModel.get('padding');\r\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\r\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition); // Place mainGroup, based on the calculated `mainRect`.\r\n\r\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\r\n      width: mainRect.width,\r\n      height: mainRect.height\r\n    }, positionInfo), viewportSize, padding);\r\n    this.group.x = layoutRect.x - mainRect.x;\r\n    this.group.y = layoutRect.y - mainRect.y;\r\n    this.group.markRedraw(); // Render background after group is layout.\r\n\r\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\r\n  };\r\n\r\n  LegendView.prototype.resetInner = function () {\r\n    this.getContentGroup().removeAll();\r\n    this._backgroundEl && this.group.remove(this._backgroundEl);\r\n    this.getSelectorGroup().removeAll();\r\n  };\r\n\r\n  LegendView.prototype.renderInner = function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\r\n    var contentGroup = this.getContentGroup();\r\n    var legendDrawnMap = zrUtil.createHashMap();\r\n    var selectMode = legendModel.get('selectedMode');\r\n    var excludeSeriesId = [];\r\n    ecModel.eachRawSeries(function (seriesModel) {\r\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\r\n    });\r\n    each(legendModel.getData(), function (legendItemModel, dataIndex) {\r\n      var name = legendItemModel.get('name'); // Use empty string or \\n as a newline string\r\n\r\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\r\n        var g = new Group(); // @ts-ignore\r\n\r\n        g.newline = true;\r\n        contentGroup.add(g);\r\n        return;\r\n      } // Representitive series.\r\n\r\n\r\n      var seriesModel = ecModel.getSeriesByName(name)[0];\r\n\r\n      if (legendDrawnMap.get(name)) {\r\n        // Have been drawed\r\n        return;\r\n      } // Legend to control series.\r\n\r\n\r\n      if (seriesModel) {\r\n        var data = seriesModel.getData();\r\n        var lineVisualStyle = data.getVisual('legendLineStyle') || {};\r\n        var legendIcon = data.getVisual('legendIcon');\r\n        /**\r\n         * `data.getVisual('style')` may be the color from the register\r\n         * in series. For example, for line series,\r\n         */\r\n\r\n        var style = data.getVisual('style');\r\n\r\n        var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, style, legendIcon, selectMode);\r\n\r\n        itemGroup.on('click', curry(dispatchSelectAction, name, null, api, excludeSeriesId)).on('mouseover', curry(dispatchHighlightAction, seriesModel.name, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel.name, null, api, excludeSeriesId));\r\n        legendDrawnMap.set(name, true);\r\n      } else {\r\n        // Legend to control data. In pie and funnel.\r\n        ecModel.eachRawSeries(function (seriesModel) {\r\n          // In case multiple series has same data name\r\n          if (legendDrawnMap.get(name)) {\r\n            return;\r\n          }\r\n\r\n          if (seriesModel.legendVisualProvider) {\r\n            var provider = seriesModel.legendVisualProvider;\r\n\r\n            if (!provider.containName(name)) {\r\n              return;\r\n            }\r\n\r\n            var idx = provider.indexOfName(name);\r\n            var style = provider.getItemVisual(idx, 'style');\r\n            var legendIcon = provider.getItemVisual(idx, 'legendIcon');\r\n            var colorArr = parse(style.fill); // Color may be set to transparent in visualMap when data is out of range.\r\n            // Do not show nothing.\r\n\r\n            if (colorArr && colorArr[3] === 0) {\r\n              colorArr[3] = 0.2; // TODO color is set to 0, 0, 0, 0. Should show correct RGBA\r\n\r\n              style.fill = stringify(colorArr, 'rgba');\r\n            }\r\n\r\n            var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, {}, style, legendIcon, selectMode); // FIXME: consider different series has items with the same name.\r\n\r\n\r\n            itemGroup.on('click', curry(dispatchSelectAction, null, name, api, excludeSeriesId)) // Should not specify the series name, consider legend controls\r\n            // more than one pie series.\r\n            .on('mouseover', curry(dispatchHighlightAction, null, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, null, name, api, excludeSeriesId));\r\n            legendDrawnMap.set(name, true);\r\n          }\r\n        }, this);\r\n      }\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (!legendDrawnMap.get(name)) {\r\n          console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\r\n        }\r\n      }\r\n    }, this);\r\n\r\n    if (selector) {\r\n      this._createSelector(selector, legendModel, api, orient, selectorPosition);\r\n    }\r\n  };\r\n\r\n  LegendView.prototype._createSelector = function (selector, legendModel, api, orient, selectorPosition) {\r\n    var selectorGroup = this.getSelectorGroup();\r\n    each(selector, function createSelectorButton(selectorItem) {\r\n      var type = selectorItem.type;\r\n      var labelText = new graphic.Text({\r\n        style: {\r\n          x: 0,\r\n          y: 0,\r\n          align: 'center',\r\n          verticalAlign: 'middle'\r\n        },\r\n        onclick: function () {\r\n          api.dispatchAction({\r\n            type: type === 'all' ? 'legendAllSelect' : 'legendInverseSelect'\r\n          });\r\n        }\r\n      });\r\n      selectorGroup.add(labelText);\r\n      var labelModel = legendModel.getModel('selectorLabel');\r\n      var emphasisLabelModel = legendModel.getModel(['emphasis', 'selectorLabel']);\r\n      setLabelStyle(labelText, {\r\n        normal: labelModel,\r\n        emphasis: emphasisLabelModel\r\n      }, {\r\n        defaultText: selectorItem.title\r\n      });\r\n      enableHoverEmphasis(labelText);\r\n    });\r\n  };\r\n\r\n  LegendView.prototype._createItem = function (seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, itemVisualStyle, legendIcon, selectMode) {\r\n    var drawType = seriesModel.visualDrawType;\r\n    var itemWidth = legendModel.get('itemWidth');\r\n    var itemHeight = legendModel.get('itemHeight');\r\n    var isSelected = legendModel.isSelected(name);\r\n    var iconRotate = legendItemModel.get('symbolRotate');\r\n    var symbolKeepAspect = legendItemModel.get('symbolKeepAspect');\r\n    var legendIconType = legendItemModel.get('icon');\r\n    legendIcon = legendIconType || legendIcon || 'roundRect';\r\n    var style = getLegendStyle(legendIcon, legendItemModel, lineVisualStyle, itemVisualStyle, drawType, isSelected);\r\n    var itemGroup = new Group();\r\n    var textStyleModel = legendItemModel.getModel('textStyle');\r\n\r\n    if (typeof seriesModel.getLegendIcon === 'function' && (!legendIconType || legendIconType === 'inherit')) {\r\n      // Series has specific way to define legend icon\r\n      itemGroup.add(seriesModel.getLegendIcon({\r\n        itemWidth: itemWidth,\r\n        itemHeight: itemHeight,\r\n        icon: legendIcon,\r\n        iconRotate: iconRotate,\r\n        itemStyle: style.itemStyle,\r\n        lineStyle: style.lineStyle,\r\n        symbolKeepAspect: symbolKeepAspect\r\n      }));\r\n    } else {\r\n      // Use default legend icon policy for most series\r\n      var rotate = legendIconType === 'inherit' && seriesModel.getData().getVisual('symbol') ? iconRotate === 'inherit' ? seriesModel.getData().getVisual('symbolRotate') : iconRotate : 0; // No rotation for no icon\r\n\r\n      itemGroup.add(getDefaultLegendIcon({\r\n        itemWidth: itemWidth,\r\n        itemHeight: itemHeight,\r\n        icon: legendIcon,\r\n        iconRotate: rotate,\r\n        itemStyle: style.itemStyle,\r\n        lineStyle: style.lineStyle,\r\n        symbolKeepAspect: symbolKeepAspect\r\n      }));\r\n    }\r\n\r\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\r\n    var textAlign = itemAlign;\r\n    var formatter = legendModel.get('formatter');\r\n    var content = name;\r\n\r\n    if (typeof formatter === 'string' && formatter) {\r\n      content = formatter.replace('{name}', name != null ? name : '');\r\n    } else if (typeof formatter === 'function') {\r\n      content = formatter(name);\r\n    }\r\n\r\n    var inactiveColor = legendItemModel.get('inactiveColor');\r\n    itemGroup.add(new graphic.Text({\r\n      style: createTextStyle(textStyleModel, {\r\n        text: content,\r\n        x: textX,\r\n        y: itemHeight / 2,\r\n        fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\r\n        align: textAlign,\r\n        verticalAlign: 'middle'\r\n      })\r\n    })); // Add a invisible rect to increase the area of mouse hover\r\n\r\n    var hitRect = new graphic.Rect({\r\n      shape: itemGroup.getBoundingRect(),\r\n      invisible: true\r\n    });\r\n    var tooltipModel = legendItemModel.getModel('tooltip');\r\n\r\n    if (tooltipModel.get('show')) {\r\n      graphic.setTooltipConfig({\r\n        el: hitRect,\r\n        componentModel: legendModel,\r\n        itemName: name,\r\n        itemTooltipOption: tooltipModel.option\r\n      });\r\n    }\r\n\r\n    itemGroup.add(hitRect);\r\n    itemGroup.eachChild(function (child) {\r\n      child.silent = true;\r\n    });\r\n    hitRect.silent = !selectMode;\r\n    this.getContentGroup().add(itemGroup);\r\n    enableHoverEmphasis(itemGroup); // @ts-ignore\r\n\r\n    itemGroup.__legendDataIndex = dataIndex;\r\n    return itemGroup;\r\n  };\r\n\r\n  LegendView.prototype.layoutInner = function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\r\n    var contentGroup = this.getContentGroup();\r\n    var selectorGroup = this.getSelectorGroup(); // Place items in contentGroup.\r\n\r\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\r\n    var contentRect = contentGroup.getBoundingRect();\r\n    var contentPos = [-contentRect.x, -contentRect.y];\r\n    selectorGroup.markRedraw();\r\n    contentGroup.markRedraw();\r\n\r\n    if (selector) {\r\n      // Place buttons in selectorGroup\r\n      layoutUtil.box( // Buttons in selectorGroup always layout horizontally\r\n      'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\r\n      var selectorRect = selectorGroup.getBoundingRect();\r\n      var selectorPos = [-selectorRect.x, -selectorRect.y];\r\n      var selectorButtonGap = legendModel.get('selectorButtonGap', true);\r\n      var orientIdx = legendModel.getOrient().index;\r\n      var wh = orientIdx === 0 ? 'width' : 'height';\r\n      var hw = orientIdx === 0 ? 'height' : 'width';\r\n      var yx = orientIdx === 0 ? 'y' : 'x';\r\n\r\n      if (selectorPosition === 'end') {\r\n        selectorPos[orientIdx] += contentRect[wh] + selectorButtonGap;\r\n      } else {\r\n        contentPos[orientIdx] += selectorRect[wh] + selectorButtonGap;\r\n      } //Always align selector to content as 'middle'\r\n\r\n\r\n      selectorPos[1 - orientIdx] += contentRect[hw] / 2 - selectorRect[hw] / 2;\r\n      selectorGroup.x = selectorPos[0];\r\n      selectorGroup.y = selectorPos[1];\r\n      contentGroup.x = contentPos[0];\r\n      contentGroup.y = contentPos[1];\r\n      var mainRect = {\r\n        x: 0,\r\n        y: 0\r\n      };\r\n      mainRect[wh] = contentRect[wh] + selectorButtonGap + selectorRect[wh];\r\n      mainRect[hw] = Math.max(contentRect[hw], selectorRect[hw]);\r\n      mainRect[yx] = Math.min(0, selectorRect[yx] + selectorPos[1 - orientIdx]);\r\n      return mainRect;\r\n    } else {\r\n      contentGroup.x = contentPos[0];\r\n      contentGroup.y = contentPos[1];\r\n      return this.group.getBoundingRect();\r\n    }\r\n  };\r\n  /**\r\n   * @protected\r\n   */\r\n\r\n\r\n  LegendView.prototype.remove = function () {\r\n    this.getContentGroup().removeAll();\r\n    this._isFirstRender = true;\r\n  };\r\n\r\n  LegendView.type = 'legend.plain';\r\n  return LegendView;\r\n}(ComponentView);\r\n\r\nfunction getLegendStyle(iconType, legendModel, lineVisualStyle, itemVisualStyle, drawType, isSelected) {\r\n  /**\r\n   * Use series style if is inherit;\r\n   * elsewise, use legend style\r\n   */\r\n  function handleCommonProps(style, visualStyle) {\r\n    // If lineStyle.width is 'auto', it is set to be 2 if series has border\r\n    if (style.lineWidth === 'auto') {\r\n      style.lineWidth = visualStyle.lineWidth > 0 ? 2 : 0;\r\n    }\r\n\r\n    each(style, function (propVal, propName) {\r\n      style[propName] === 'inherit' && (style[propName] = visualStyle[propName]);\r\n    });\r\n  } // itemStyle\r\n\r\n\r\n  var legendItemModel = legendModel.getModel('itemStyle');\r\n  var itemStyle = legendItemModel.getItemStyle();\r\n  var iconBrushType = iconType.lastIndexOf('empty', 0) === 0 ? 'fill' : 'stroke';\r\n  itemStyle.decal = itemVisualStyle.decal;\r\n\r\n  if (itemStyle.fill === 'inherit') {\r\n    /**\r\n     * Series with visualDrawType as 'stroke' should have\r\n     * series stroke as legend fill\r\n     */\r\n    itemStyle.fill = itemVisualStyle[drawType];\r\n  }\r\n\r\n  if (itemStyle.stroke === 'inherit') {\r\n    /**\r\n     * icon type with \"emptyXXX\" should use fill color\r\n     * in visual style\r\n     */\r\n    itemStyle.stroke = itemVisualStyle[iconBrushType];\r\n  }\r\n\r\n  if (itemStyle.opacity === 'inherit') {\r\n    /**\r\n     * Use lineStyle.opacity if drawType is stroke\r\n     */\r\n    itemStyle.opacity = (drawType === 'fill' ? itemVisualStyle : lineVisualStyle).opacity;\r\n  }\r\n\r\n  handleCommonProps(itemStyle, itemVisualStyle); // lineStyle\r\n\r\n  var legendLineModel = legendModel.getModel('lineStyle');\r\n  var lineStyle = legendLineModel.getLineStyle();\r\n  handleCommonProps(lineStyle, lineVisualStyle); // Fix auto color to real color\r\n\r\n  itemStyle.fill === 'auto' && (itemStyle.fill = itemVisualStyle.fill);\r\n  itemStyle.stroke === 'auto' && (itemStyle.stroke = itemVisualStyle.fill);\r\n  lineStyle.stroke === 'auto' && (lineStyle.stroke = itemVisualStyle.fill);\r\n\r\n  if (!isSelected) {\r\n    var borderWidth = legendModel.get('inactiveBorderWidth');\r\n    /**\r\n     * Since stroke is set to be inactiveBorderColor, it may occur that\r\n     * there is no border in series but border in legend, so we need to\r\n     * use border only when series has border if is set to be auto\r\n     */\r\n\r\n    var visualHasBorder = itemStyle[iconBrushType];\r\n    itemStyle.lineWidth = borderWidth === 'auto' ? itemVisualStyle.lineWidth > 0 && visualHasBorder ? 2 : 0 : itemStyle.lineWidth;\r\n    itemStyle.fill = legendModel.get('inactiveColor');\r\n    itemStyle.stroke = legendModel.get('inactiveBorderColor');\r\n    lineStyle.stroke = legendLineModel.get('inactiveColor');\r\n    lineStyle.lineWidth = legendLineModel.get('inactiveWidth');\r\n  }\r\n\r\n  return {\r\n    itemStyle: itemStyle,\r\n    lineStyle: lineStyle\r\n  };\r\n}\r\n\r\nfunction getDefaultLegendIcon(opt) {\r\n  var symboType = opt.icon || 'roundRect';\r\n  var icon = createSymbol(symboType, 0, 0, opt.itemWidth, opt.itemHeight, opt.itemStyle.fill, opt.symbolKeepAspect);\r\n  icon.setStyle(opt.itemStyle);\r\n  icon.rotation = (opt.iconRotate || 0) * Math.PI / 180;\r\n  icon.setOrigin([opt.itemWidth / 2, opt.itemHeight / 2]);\r\n\r\n  if (symboType.indexOf('empty') > -1) {\r\n    icon.style.stroke = icon.style.fill;\r\n    icon.style.fill = '#fff';\r\n    icon.style.lineWidth = 2;\r\n  }\r\n\r\n  return icon;\r\n}\r\n\r\nfunction dispatchSelectAction(seriesName, dataName, api, excludeSeriesId) {\r\n  // downplay before unselect\r\n  dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId);\r\n  api.dispatchAction({\r\n    type: 'legendToggleSelect',\r\n    name: seriesName != null ? seriesName : dataName\r\n  }); // highlight after select\r\n  // TODO higlight immediately may cause animation loss.\r\n\r\n  dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId);\r\n}\r\n\r\nfunction isUseHoverLayer(api) {\r\n  var list = api.getZr().storage.getDisplayList();\r\n  var emphasisState;\r\n  var i = 0;\r\n  var len = list.length;\r\n\r\n  while (i < len && !(emphasisState = list[i].states.emphasis)) {\r\n    i++;\r\n  }\r\n\r\n  return emphasisState && emphasisState.hoverLayer;\r\n}\r\n\r\nfunction dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId) {\r\n  // If element hover will move to a hoverLayer.\r\n  if (!isUseHoverLayer(api)) {\r\n    api.dispatchAction({\r\n      type: 'highlight',\r\n      seriesName: seriesName,\r\n      name: dataName,\r\n      excludeSeriesId: excludeSeriesId\r\n    });\r\n  }\r\n}\r\n\r\nfunction dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId) {\r\n  // If element hover will move to a hoverLayer.\r\n  if (!isUseHoverLayer(api)) {\r\n    api.dispatchAction({\r\n      type: 'downplay',\r\n      seriesName: seriesName,\r\n      name: dataName,\r\n      excludeSeriesId: excludeSeriesId\r\n    });\r\n  }\r\n}\r\n\r\nexport default LegendView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nexport default function legendFilter(ecModel) {\r\n  var legendModels = ecModel.findComponents({\r\n    mainType: 'legend'\r\n  });\r\n\r\n  if (legendModels && legendModels.length) {\r\n    ecModel.filterSeries(function (series) {\r\n      // If in any legend component the status is not selected.\r\n      // Because in legend series is assumed selected when it is not in the legend data.\r\n      for (var i = 0; i < legendModels.length; i++) {\r\n        if (!legendModels[i].isSelected(series.name)) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// @ts-nocheck\r\nimport { curry, each } from 'zrender/lib/core/util';\r\n\r\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\r\n  var selectedMap = {};\r\n  var isToggleSelect = methodName === 'toggleSelected';\r\n  var isSelected; // Update all legend components\r\n\r\n  ecModel.eachComponent('legend', function (legendModel) {\r\n    if (isToggleSelect && isSelected != null) {\r\n      // Force other legend has same selected status\r\n      // Or the first is toggled to true and other are toggled to false\r\n      // In the case one legend has some item unSelected in option. And if other legend\r\n      // doesn't has the item, they will assume it is selected.\r\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\r\n    } else if (methodName === 'allSelect' || methodName === 'inverseSelect') {\r\n      legendModel[methodName]();\r\n    } else {\r\n      legendModel[methodName](payload.name);\r\n      isSelected = legendModel.isSelected(payload.name);\r\n    }\r\n\r\n    var legendData = legendModel.getData();\r\n    each(legendData, function (model) {\r\n      var name = model.get('name'); // Wrap element\r\n\r\n      if (name === '\\n' || name === '') {\r\n        return;\r\n      }\r\n\r\n      var isItemSelected = legendModel.isSelected(name);\r\n\r\n      if (selectedMap.hasOwnProperty(name)) {\r\n        // Unselected if any legend is unselected\r\n        selectedMap[name] = selectedMap[name] && isItemSelected;\r\n      } else {\r\n        selectedMap[name] = isItemSelected;\r\n      }\r\n    });\r\n  }); // Return the event explicitly\r\n\r\n  return methodName === 'allSelect' || methodName === 'inverseSelect' ? {\r\n    selected: selectedMap\r\n  } : {\r\n    name: payload.name,\r\n    selected: selectedMap\r\n  };\r\n}\r\n\r\nexport function installLegendAction(registers) {\r\n  /**\r\n   * @event legendToggleSelect\r\n   * @type {Object}\r\n   * @property {string} type 'legendToggleSelect'\r\n   * @property {string} [from]\r\n   * @property {string} name Series name or data item name\r\n   */\r\n  registers.registerAction('legendToggleSelect', 'legendselectchanged', curry(legendSelectActionHandler, 'toggleSelected'));\r\n  registers.registerAction('legendAllSelect', 'legendselectall', curry(legendSelectActionHandler, 'allSelect'));\r\n  registers.registerAction('legendInverseSelect', 'legendinverseselect', curry(legendSelectActionHandler, 'inverseSelect'));\r\n  /**\r\n   * @event legendSelect\r\n   * @type {Object}\r\n   * @property {string} type 'legendSelect'\r\n   * @property {string} name Series name or data item name\r\n   */\r\n\r\n  registers.registerAction('legendSelect', 'legendselected', curry(legendSelectActionHandler, 'select'));\r\n  /**\r\n   * @event legendUnSelect\r\n   * @type {Object}\r\n   * @property {string} type 'legendUnSelect'\r\n   * @property {string} name Series name or data item name\r\n   */\r\n\r\n  registers.registerAction('legendUnSelect', 'legendunselected', curry(legendSelectActionHandler, 'unSelect'));\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport LegendModel from './LegendModel';\r\nimport LegendView from './LegendView';\r\nimport legendFilter from './legendFilter';\r\nimport { installLegendAction } from './legendAction';\r\nexport function install(registers) {\r\n  registers.registerComponentModel(LegendModel);\r\n  registers.registerComponentView(LegendView);\r\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.SERIES_FILTER, legendFilter);\r\n  registers.registerSubTypeDefaulter('legend', function () {\r\n    return 'plain';\r\n  });\r\n  installLegendAction(registers);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport LegendModel from './LegendModel';\r\nimport { mergeLayoutParam, getLayoutParams } from '../../util/layout';\r\nimport { inheritDefaultOption } from '../../util/component';\r\n\r\nvar ScrollableLegendModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ScrollableLegendModel, _super);\r\n\r\n  function ScrollableLegendModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = ScrollableLegendModel.type;\r\n    return _this;\r\n  }\r\n  /**\r\n   * @param {number} scrollDataIndex\r\n   */\r\n\r\n\r\n  ScrollableLegendModel.prototype.setScrollDataIndex = function (scrollDataIndex) {\r\n    this.option.scrollDataIndex = scrollDataIndex;\r\n  };\r\n\r\n  ScrollableLegendModel.prototype.init = function (option, parentModel, ecModel) {\r\n    var inputPositionParams = getLayoutParams(option);\r\n\r\n    _super.prototype.init.call(this, option, parentModel, ecModel);\r\n\r\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  ScrollableLegendModel.prototype.mergeOption = function (option, ecModel) {\r\n    _super.prototype.mergeOption.call(this, option, ecModel);\r\n\r\n    mergeAndNormalizeLayoutParams(this, this.option, option);\r\n  };\r\n\r\n  ScrollableLegendModel.type = 'legend.scroll';\r\n  ScrollableLegendModel.defaultOption = inheritDefaultOption(LegendModel.defaultOption, {\r\n    scrollDataIndex: 0,\r\n    pageButtonItemGap: 5,\r\n    pageButtonGap: null,\r\n    pageButtonPosition: 'end',\r\n    pageFormatter: '{current}/{total}',\r\n    pageIcons: {\r\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\r\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\r\n    },\r\n    pageIconColor: '#2f4554',\r\n    pageIconInactiveColor: '#aaa',\r\n    pageIconSize: 15,\r\n    pageTextStyle: {\r\n      color: '#333'\r\n    },\r\n    animationDurationUpdate: 800\r\n  });\r\n  return ScrollableLegendModel;\r\n}(LegendModel);\r\n\r\n; // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\r\n\r\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\r\n  var orient = legendModel.getOrient();\r\n  var ignoreSize = [1, 1];\r\n  ignoreSize[orient.index] = 0;\r\n  mergeLayoutParam(target, raw, {\r\n    type: 'box',\r\n    ignoreSize: !!ignoreSize\r\n  });\r\n}\r\n\r\nexport default ScrollableLegendModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * Separate legend and scrollable legend to reduce package size.\r\n */\r\n\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as graphic from '../../util/graphic';\r\nimport * as layoutUtil from '../../util/layout';\r\nimport LegendView from './LegendView';\r\nvar Group = graphic.Group;\r\nvar WH = ['width', 'height'];\r\nvar XY = ['x', 'y'];\r\n\r\nvar ScrollableLegendView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ScrollableLegendView, _super);\r\n\r\n  function ScrollableLegendView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = ScrollableLegendView.type;\r\n    _this.newlineDisabled = true;\r\n    _this._currentIndex = 0;\r\n    return _this;\r\n  }\r\n\r\n  ScrollableLegendView.prototype.init = function () {\r\n    _super.prototype.init.call(this);\r\n\r\n    this.group.add(this._containerGroup = new Group());\r\n\r\n    this._containerGroup.add(this.getContentGroup());\r\n\r\n    this.group.add(this._controllerGroup = new Group());\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  ScrollableLegendView.prototype.resetInner = function () {\r\n    _super.prototype.resetInner.call(this);\r\n\r\n    this._controllerGroup.removeAll();\r\n\r\n    this._containerGroup.removeClipPath();\r\n\r\n    this._containerGroup.__rectSize = null;\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  ScrollableLegendView.prototype.renderInner = function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\r\n    var self = this; // Render content items.\r\n\r\n    _super.prototype.renderInner.call(this, itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition);\r\n\r\n    var controllerGroup = this._controllerGroup; // FIXME: support be 'auto' adapt to size number text length,\r\n    // e.g., '3/12345' should not overlap with the control arrow button.\r\n\r\n    var pageIconSize = legendModel.get('pageIconSize', true);\r\n    var pageIconSizeArr = zrUtil.isArray(pageIconSize) ? pageIconSize : [pageIconSize, pageIconSize];\r\n    createPageButton('pagePrev', 0);\r\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\r\n    controllerGroup.add(new graphic.Text({\r\n      name: 'pageText',\r\n      style: {\r\n        // Placeholder to calculate a proper layout.\r\n        text: 'xx/xx',\r\n        fill: pageTextStyleModel.getTextColor(),\r\n        font: pageTextStyleModel.getFont(),\r\n        verticalAlign: 'middle',\r\n        align: 'center'\r\n      },\r\n      silent: true\r\n    }));\r\n    createPageButton('pageNext', 1);\r\n\r\n    function createPageButton(name, iconIdx) {\r\n      var pageDataIndexName = name + 'DataIndex';\r\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\r\n        // Buttons will be created in each render, so we do not need\r\n        // to worry about avoiding using legendModel kept in scope.\r\n        onclick: zrUtil.bind(self._pageGo, self, pageDataIndexName, legendModel, api)\r\n      }, {\r\n        x: -pageIconSizeArr[0] / 2,\r\n        y: -pageIconSizeArr[1] / 2,\r\n        width: pageIconSizeArr[0],\r\n        height: pageIconSizeArr[1]\r\n      });\r\n      icon.name = name;\r\n      controllerGroup.add(icon);\r\n    }\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  ScrollableLegendView.prototype.layoutInner = function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\r\n    var selectorGroup = this.getSelectorGroup();\r\n    var orientIdx = legendModel.getOrient().index;\r\n    var wh = WH[orientIdx];\r\n    var xy = XY[orientIdx];\r\n    var hw = WH[1 - orientIdx];\r\n    var yx = XY[1 - orientIdx];\r\n    selector && layoutUtil.box( // Buttons in selectorGroup always layout horizontally\r\n    'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\r\n    var selectorButtonGap = legendModel.get('selectorButtonGap', true);\r\n    var selectorRect = selectorGroup.getBoundingRect();\r\n    var selectorPos = [-selectorRect.x, -selectorRect.y];\r\n    var processMaxSize = zrUtil.clone(maxSize);\r\n    selector && (processMaxSize[wh] = maxSize[wh] - selectorRect[wh] - selectorButtonGap);\r\n\r\n    var mainRect = this._layoutContentAndController(legendModel, isFirstRender, processMaxSize, orientIdx, wh, hw, yx, xy);\r\n\r\n    if (selector) {\r\n      if (selectorPosition === 'end') {\r\n        selectorPos[orientIdx] += mainRect[wh] + selectorButtonGap;\r\n      } else {\r\n        var offset = selectorRect[wh] + selectorButtonGap;\r\n        selectorPos[orientIdx] -= offset;\r\n        mainRect[xy] -= offset;\r\n      }\r\n\r\n      mainRect[wh] += selectorRect[wh] + selectorButtonGap;\r\n      selectorPos[1 - orientIdx] += mainRect[yx] + mainRect[hw] / 2 - selectorRect[hw] / 2;\r\n      mainRect[hw] = Math.max(mainRect[hw], selectorRect[hw]);\r\n      mainRect[yx] = Math.min(mainRect[yx], selectorRect[yx] + selectorPos[1 - orientIdx]);\r\n      selectorGroup.x = selectorPos[0];\r\n      selectorGroup.y = selectorPos[1];\r\n      selectorGroup.markRedraw();\r\n    }\r\n\r\n    return mainRect;\r\n  };\r\n\r\n  ScrollableLegendView.prototype._layoutContentAndController = function (legendModel, isFirstRender, maxSize, orientIdx, wh, hw, yx, xy) {\r\n    var contentGroup = this.getContentGroup();\r\n    var containerGroup = this._containerGroup;\r\n    var controllerGroup = this._controllerGroup; // Place items in contentGroup.\r\n\r\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\r\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\r\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\r\n    var contentRect = contentGroup.getBoundingRect();\r\n    var controllerRect = controllerGroup.getBoundingRect();\r\n    var showController = this._showController = contentRect[wh] > maxSize[wh]; // In case that the inner elements of contentGroup layout do not based on [0, 0]\r\n\r\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\r\n    // If first rendering, `contentGroup.position` is [0, 0], which\r\n    // does not make sense and may cause unexepcted animation if adopted.\r\n\r\n    if (!isFirstRender) {\r\n      contentPos[orientIdx] = contentGroup[xy];\r\n    } // Layout container group based on 0.\r\n\r\n\r\n    var containerPos = [0, 0];\r\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\r\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\r\n\r\n    if (showController) {\r\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\r\n\r\n      if (pageButtonPosition === 'end') {\r\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\r\n      } // controller is on the left / top.\r\n      else {\r\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\r\n        }\r\n    } // Always align controller to content as 'middle'.\r\n\r\n\r\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\r\n    contentGroup.setPosition(contentPos);\r\n    containerGroup.setPosition(containerPos);\r\n    controllerGroup.setPosition(controllerPos); // Calculate `mainRect` and set `clipPath`.\r\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\r\n    // for sake of the overflow.\r\n\r\n    var mainRect = {\r\n      x: 0,\r\n      y: 0\r\n    }; // Consider content may be overflow (should be clipped).\r\n\r\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\r\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\r\n\r\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\r\n    containerGroup.__rectSize = maxSize[wh];\r\n\r\n    if (showController) {\r\n      var clipShape = {\r\n        x: 0,\r\n        y: 0\r\n      };\r\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\r\n      clipShape[hw] = mainRect[hw];\r\n      containerGroup.setClipPath(new graphic.Rect({\r\n        shape: clipShape\r\n      })); // Consider content may be larger than container, container rect\r\n      // can not be obtained from `containerGroup.getBoundingRect()`.\r\n\r\n      containerGroup.__rectSize = clipShape[wh];\r\n    } else {\r\n      // Do not remove or ignore controller. Keep them set as placeholders.\r\n      controllerGroup.eachChild(function (child) {\r\n        child.attr({\r\n          invisible: true,\r\n          silent: true\r\n        });\r\n      });\r\n    } // Content translate animation.\r\n\r\n\r\n    var pageInfo = this._getPageInfo(legendModel);\r\n\r\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\r\n      x: pageInfo.contentPosition[0],\r\n      y: pageInfo.contentPosition[1]\r\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\r\n    // updated immediately without animation, otherwise causes weird effect.\r\n    showController ? legendModel : null);\r\n\r\n    this._updatePageInfoView(legendModel, pageInfo);\r\n\r\n    return mainRect;\r\n  };\r\n\r\n  ScrollableLegendView.prototype._pageGo = function (to, legendModel, api) {\r\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\r\n\r\n    scrollDataIndex != null && api.dispatchAction({\r\n      type: 'legendScroll',\r\n      scrollDataIndex: scrollDataIndex,\r\n      legendId: legendModel.id\r\n    });\r\n  };\r\n\r\n  ScrollableLegendView.prototype._updatePageInfoView = function (legendModel, pageInfo) {\r\n    var controllerGroup = this._controllerGroup;\r\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\r\n      var key = name + 'DataIndex';\r\n      var canJump = pageInfo[key] != null;\r\n      var icon = controllerGroup.childOfName(name);\r\n\r\n      if (icon) {\r\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\r\n        icon.cursor = canJump ? 'pointer' : 'default';\r\n      }\r\n    });\r\n    var pageText = controllerGroup.childOfName('pageText');\r\n    var pageFormatter = legendModel.get('pageFormatter');\r\n    var pageIndex = pageInfo.pageIndex;\r\n    var current = pageIndex != null ? pageIndex + 1 : 0;\r\n    var total = pageInfo.pageCount;\r\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current == null ? '' : current + '').replace('{total}', total == null ? '' : total + '') : pageFormatter({\r\n      current: current,\r\n      total: total\r\n    }));\r\n  };\r\n  /**\r\n   *  contentPosition: Array.<number>, null when data item not found.\r\n   *  pageIndex: number, null when data item not found.\r\n   *  pageCount: number, always be a number, can be 0.\r\n   *  pagePrevDataIndex: number, null when no previous page.\r\n   *  pageNextDataIndex: number, null when no next page.\r\n   * }\r\n   */\r\n\r\n\r\n  ScrollableLegendView.prototype._getPageInfo = function (legendModel) {\r\n    var scrollDataIndex = legendModel.get('scrollDataIndex', true);\r\n    var contentGroup = this.getContentGroup();\r\n    var containerRectSize = this._containerGroup.__rectSize;\r\n    var orientIdx = legendModel.getOrient().index;\r\n    var wh = WH[orientIdx];\r\n    var xy = XY[orientIdx];\r\n\r\n    var targetItemIndex = this._findTargetItemIndex(scrollDataIndex);\r\n\r\n    var children = contentGroup.children();\r\n    var targetItem = children[targetItemIndex];\r\n    var itemCount = children.length;\r\n    var pCount = !itemCount ? 0 : 1;\r\n    var result = {\r\n      contentPosition: [contentGroup.x, contentGroup.y],\r\n      pageCount: pCount,\r\n      pageIndex: pCount - 1,\r\n      pagePrevDataIndex: null,\r\n      pageNextDataIndex: null\r\n    };\r\n\r\n    if (!targetItem) {\r\n      return result;\r\n    }\r\n\r\n    var targetItemInfo = getItemInfo(targetItem);\r\n    result.contentPosition[orientIdx] = -targetItemInfo.s; // Strategy:\r\n    // (1) Always align based on the left/top most item.\r\n    // (2) It is user-friendly that the last item shown in the\r\n    // current window is shown at the begining of next window.\r\n    // Otherwise if half of the last item is cut by the window,\r\n    // it will have no chance to display entirely.\r\n    // (3) Consider that item size probably be different, we\r\n    // have calculate pageIndex by size rather than item index,\r\n    // and we can not get page index directly by division.\r\n    // (4) The window is to narrow to contain more than\r\n    // one item, we should make sure that the page can be fliped.\r\n\r\n    for (var i = targetItemIndex + 1, winStartItemInfo = targetItemInfo, winEndItemInfo = targetItemInfo, currItemInfo = null; i <= itemCount; ++i) {\r\n      currItemInfo = getItemInfo(children[i]);\r\n\r\n      if ( // Half of the last item is out of the window.\r\n      !currItemInfo && winEndItemInfo.e > winStartItemInfo.s + containerRectSize || // If the current item does not intersect with the window, the new page\r\n      // can be started at the current item or the last item.\r\n      currItemInfo && !intersect(currItemInfo, winStartItemInfo.s)) {\r\n        if (winEndItemInfo.i > winStartItemInfo.i) {\r\n          winStartItemInfo = winEndItemInfo;\r\n        } else {\r\n          // e.g., when page size is smaller than item size.\r\n          winStartItemInfo = currItemInfo;\r\n        }\r\n\r\n        if (winStartItemInfo) {\r\n          if (result.pageNextDataIndex == null) {\r\n            result.pageNextDataIndex = winStartItemInfo.i;\r\n          }\r\n\r\n          ++result.pageCount;\r\n        }\r\n      }\r\n\r\n      winEndItemInfo = currItemInfo;\r\n    }\r\n\r\n    for (var i = targetItemIndex - 1, winStartItemInfo = targetItemInfo, winEndItemInfo = targetItemInfo, currItemInfo = null; i >= -1; --i) {\r\n      currItemInfo = getItemInfo(children[i]);\r\n\r\n      if ( // If the the end item does not intersect with the window started\r\n      // from the current item, a page can be settled.\r\n      (!currItemInfo || !intersect(winEndItemInfo, currItemInfo.s)) && // e.g., when page size is smaller than item size.\r\n      winStartItemInfo.i < winEndItemInfo.i) {\r\n        winEndItemInfo = winStartItemInfo;\r\n\r\n        if (result.pagePrevDataIndex == null) {\r\n          result.pagePrevDataIndex = winStartItemInfo.i;\r\n        }\r\n\r\n        ++result.pageCount;\r\n        ++result.pageIndex;\r\n      }\r\n\r\n      winStartItemInfo = currItemInfo;\r\n    }\r\n\r\n    return result;\r\n\r\n    function getItemInfo(el) {\r\n      if (el) {\r\n        var itemRect = el.getBoundingRect();\r\n        var start = itemRect[xy] + el[xy];\r\n        return {\r\n          s: start,\r\n          e: start + itemRect[wh],\r\n          i: el.__legendDataIndex\r\n        };\r\n      }\r\n    }\r\n\r\n    function intersect(itemInfo, winStart) {\r\n      return itemInfo.e >= winStart && itemInfo.s <= winStart + containerRectSize;\r\n    }\r\n  };\r\n\r\n  ScrollableLegendView.prototype._findTargetItemIndex = function (targetDataIndex) {\r\n    if (!this._showController) {\r\n      return 0;\r\n    }\r\n\r\n    var index;\r\n    var contentGroup = this.getContentGroup();\r\n    var defaultIndex;\r\n    contentGroup.eachChild(function (child, idx) {\r\n      var legendDataIdx = child.__legendDataIndex; // FIXME\r\n      // If the given targetDataIndex (from model) is illegal,\r\n      // we use defaultIndex. But the index on the legend model and\r\n      // action payload is still illegal. That case will not be\r\n      // changed until some scenario requires.\r\n\r\n      if (defaultIndex == null && legendDataIdx != null) {\r\n        defaultIndex = idx;\r\n      }\r\n\r\n      if (legendDataIdx === targetDataIndex) {\r\n        index = idx;\r\n      }\r\n    });\r\n    return index != null ? index : defaultIndex;\r\n  };\r\n\r\n  ScrollableLegendView.type = 'legend.scroll';\r\n  return ScrollableLegendView;\r\n}(LegendView);\r\n\r\nexport default ScrollableLegendView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nexport default function installScrollableLegendAction(registers) {\r\n  /**\r\n   * @event legendScroll\r\n   * @type {Object}\r\n   * @property {string} type 'legendScroll'\r\n   * @property {string} scrollDataIndex\r\n   */\r\n  registers.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\r\n    var scrollDataIndex = payload.scrollDataIndex;\r\n    scrollDataIndex != null && ecModel.eachComponent({\r\n      mainType: 'legend',\r\n      subType: 'scroll',\r\n      query: payload\r\n    }, function (legendModel) {\r\n      legendModel.setScrollDataIndex(scrollDataIndex);\r\n    });\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { use } from '../../extension';\r\nimport { install as installLegendPlain } from './installLegendPlain';\r\nimport ScrollableLegendModel from './ScrollableLegendModel';\r\nimport ScrollableLegendView from './ScrollableLegendView';\r\nimport installScrollableLegendAction from './scrollableLegendAction';\r\nexport function install(registers) {\r\n  use(installLegendPlain);\r\n  registers.registerComponentModel(ScrollableLegendModel);\r\n  registers.registerComponentView(ScrollableLegendView);\r\n  installScrollableLegendAction(registers);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { use } from '../../extension';\r\nimport { install as installLegendPlain } from './installLegendPlain';\r\nimport { install as installLegendScroll } from './installLegendScroll';\r\nexport function install(registers) {\r\n  use(installLegendPlain);\r\n  use(installLegendScroll);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport DataZoomModel from './DataZoomModel';\r\nimport { inheritDefaultOption } from '../../util/component';\r\n\r\nvar InsideZoomModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(InsideZoomModel, _super);\r\n\r\n  function InsideZoomModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = InsideZoomModel.type;\r\n    return _this;\r\n  }\r\n\r\n  InsideZoomModel.type = 'dataZoom.inside';\r\n  InsideZoomModel.defaultOption = inheritDefaultOption(DataZoomModel.defaultOption, {\r\n    disabled: false,\r\n    zoomLock: false,\r\n    zoomOnMouseWheel: true,\r\n    moveOnMouseMove: true,\r\n    moveOnMouseWheel: false,\r\n    preventDefaultMouseMove: true\r\n  });\r\n  return InsideZoomModel;\r\n}(DataZoomModel);\r\n\r\nexport default InsideZoomModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Only create one roam controller for each coordinate system.\r\n// one roam controller might be refered by two inside data zoom\r\n// components (for example, one for x and one for y). When user\r\n// pan or zoom, only dispatch one action for those data zoom\r\n// components.\r\nimport RoamController from '../../component/helper/RoamController';\r\nimport * as throttleUtil from '../../util/throttle';\r\nimport { makeInner } from '../../util/model';\r\nimport { each, curry, createHashMap } from 'zrender/lib/core/util';\r\nimport { collectReferCoordSysModelInfo } from './helper';\r\nvar inner = makeInner();\r\nexport function setViewInfoToCoordSysRecord(api, dataZoomModel, getRange) {\r\n  inner(api).coordSysRecordMap.each(function (coordSysRecord) {\r\n    var dzInfo = coordSysRecord.dataZoomInfoMap.get(dataZoomModel.uid);\r\n\r\n    if (dzInfo) {\r\n      dzInfo.getRange = getRange;\r\n    }\r\n  });\r\n}\r\nexport function disposeCoordSysRecordIfNeeded(api, dataZoomModel) {\r\n  var coordSysRecordMap = inner(api).coordSysRecordMap;\r\n  var coordSysKeyArr = coordSysRecordMap.keys();\r\n\r\n  for (var i = 0; i < coordSysKeyArr.length; i++) {\r\n    var coordSysKey = coordSysKeyArr[i];\r\n    var coordSysRecord = coordSysRecordMap.get(coordSysKey);\r\n    var dataZoomInfoMap = coordSysRecord.dataZoomInfoMap;\r\n\r\n    if (dataZoomInfoMap) {\r\n      var dzUid = dataZoomModel.uid;\r\n      var dzInfo = dataZoomInfoMap.get(dzUid);\r\n\r\n      if (dzInfo) {\r\n        dataZoomInfoMap.removeKey(dzUid);\r\n\r\n        if (!dataZoomInfoMap.keys().length) {\r\n          disposeCoordSysRecord(coordSysRecordMap, coordSysRecord);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction disposeCoordSysRecord(coordSysRecordMap, coordSysRecord) {\r\n  if (coordSysRecord) {\r\n    coordSysRecordMap.removeKey(coordSysRecord.model.uid);\r\n    var controller = coordSysRecord.controller;\r\n    controller && controller.dispose();\r\n  }\r\n}\r\n\r\nfunction createCoordSysRecord(api, coordSysModel) {\r\n  // These init props will never change after record created.\r\n  var coordSysRecord = {\r\n    model: coordSysModel,\r\n    containsPoint: curry(containsPoint, coordSysModel),\r\n    dispatchAction: curry(dispatchAction, api),\r\n    dataZoomInfoMap: null,\r\n    controller: null\r\n  }; // Must not do anything depends on coordSysRecord outside the event handler here,\r\n  // because coordSysRecord not completed yet.\r\n\r\n  var controller = coordSysRecord.controller = new RoamController(api.getZr());\r\n  each(['pan', 'zoom', 'scrollMove'], function (eventName) {\r\n    controller.on(eventName, function (event) {\r\n      var batch = [];\r\n      coordSysRecord.dataZoomInfoMap.each(function (dzInfo) {\r\n        // Check whether the behaviors (zoomOnMouseWheel, moveOnMouseMove,\r\n        // moveOnMouseWheel, ...) enabled.\r\n        if (!event.isAvailableBehavior(dzInfo.model.option)) {\r\n          return;\r\n        }\r\n\r\n        var method = (dzInfo.getRange || {})[eventName];\r\n        var range = method && method(dzInfo.dzReferCoordSysInfo, coordSysRecord.model.mainType, coordSysRecord.controller, event);\r\n        !dzInfo.model.get('disabled', true) && range && batch.push({\r\n          dataZoomId: dzInfo.model.id,\r\n          start: range[0],\r\n          end: range[1]\r\n        });\r\n      });\r\n      batch.length && coordSysRecord.dispatchAction(batch);\r\n    });\r\n  });\r\n  return coordSysRecord;\r\n}\r\n/**\r\n * This action will be throttled.\r\n */\r\n\r\n\r\nfunction dispatchAction(api, batch) {\r\n  api.dispatchAction({\r\n    type: 'dataZoom',\r\n    animation: {\r\n      easing: 'cubicOut',\r\n      duration: 100\r\n    },\r\n    batch: batch\r\n  });\r\n}\r\n\r\nfunction containsPoint(coordSysModel, e, x, y) {\r\n  return coordSysModel.coordinateSystem.containPoint([x, y]);\r\n}\r\n/**\r\n * Merge roamController settings when multiple dataZooms share one roamController.\r\n */\r\n\r\n\r\nfunction mergeControllerParams(dataZoomInfoMap) {\r\n  var controlType; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\r\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\r\n\r\n  var prefix = 'type_';\r\n  var typePriority = {\r\n    'type_true': 2,\r\n    'type_move': 1,\r\n    'type_false': 0,\r\n    'type_undefined': -1\r\n  };\r\n  var preventDefaultMouseMove = true;\r\n  dataZoomInfoMap.each(function (dataZoomInfo) {\r\n    var dataZoomModel = dataZoomInfo.model;\r\n    var oneType = dataZoomModel.get('disabled', true) ? false : dataZoomModel.get('zoomLock', true) ? 'move' : true;\r\n\r\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\r\n      controlType = oneType;\r\n    } // Prevent default move event by default. If one false, do not prevent. Otherwise\r\n    // users may be confused why it does not work when multiple insideZooms exist.\r\n\r\n\r\n    preventDefaultMouseMove = preventDefaultMouseMove && dataZoomModel.get('preventDefaultMouseMove', true);\r\n  });\r\n  return {\r\n    controlType: controlType,\r\n    opt: {\r\n      // RoamController will enable all of these functionalities,\r\n      // and the final behavior is determined by its event listener\r\n      // provided by each inside zoom.\r\n      zoomOnMouseWheel: true,\r\n      moveOnMouseMove: true,\r\n      moveOnMouseWheel: true,\r\n      preventDefaultMouseMove: !!preventDefaultMouseMove\r\n    }\r\n  };\r\n}\r\n\r\nexport function installDataZoomRoamProcessor(registers) {\r\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.FILTER, function (ecModel, api) {\r\n    var apiInner = inner(api);\r\n    var coordSysRecordMap = apiInner.coordSysRecordMap || (apiInner.coordSysRecordMap = createHashMap());\r\n    coordSysRecordMap.each(function (coordSysRecord) {\r\n      // `coordSysRecordMap` always exists (becuase it hold the `roam controller`, which should\r\n      // better not re-create each time), but clear `dataZoomInfoMap` each round of the workflow.\r\n      coordSysRecord.dataZoomInfoMap = null;\r\n    });\r\n    ecModel.eachComponent({\r\n      mainType: 'dataZoom',\r\n      subType: 'inside'\r\n    }, function (dataZoomModel) {\r\n      var dzReferCoordSysWrap = collectReferCoordSysModelInfo(dataZoomModel);\r\n      each(dzReferCoordSysWrap.infoList, function (dzCoordSysInfo) {\r\n        var coordSysUid = dzCoordSysInfo.model.uid;\r\n        var coordSysRecord = coordSysRecordMap.get(coordSysUid) || coordSysRecordMap.set(coordSysUid, createCoordSysRecord(api, dzCoordSysInfo.model));\r\n        var dataZoomInfoMap = coordSysRecord.dataZoomInfoMap || (coordSysRecord.dataZoomInfoMap = createHashMap()); // Notice these props might be changed each time for a single dataZoomModel.\r\n\r\n        dataZoomInfoMap.set(dataZoomModel.uid, {\r\n          dzReferCoordSysInfo: dzCoordSysInfo,\r\n          model: dataZoomModel,\r\n          getRange: null\r\n        });\r\n      });\r\n    }); // (1) Merge dataZoom settings for each coord sys and set to the roam controller.\r\n    // (2) Clear coord sys if not refered by any dataZoom.\r\n\r\n    coordSysRecordMap.each(function (coordSysRecord) {\r\n      var controller = coordSysRecord.controller;\r\n      var firstDzInfo;\r\n      var dataZoomInfoMap = coordSysRecord.dataZoomInfoMap;\r\n\r\n      if (dataZoomInfoMap) {\r\n        var firstDzKey = dataZoomInfoMap.keys()[0];\r\n\r\n        if (firstDzKey != null) {\r\n          firstDzInfo = dataZoomInfoMap.get(firstDzKey);\r\n        }\r\n      }\r\n\r\n      if (!firstDzInfo) {\r\n        disposeCoordSysRecord(coordSysRecordMap, coordSysRecord);\r\n        return;\r\n      }\r\n\r\n      var controllerParams = mergeControllerParams(dataZoomInfoMap);\r\n      controller.enable(controllerParams.controlType, controllerParams.opt);\r\n      controller.setPointerChecker(coordSysRecord.containsPoint);\r\n      throttleUtil.createOrUpdate(coordSysRecord, 'dispatchAction', firstDzInfo.model.get('throttle', true), 'fixRate');\r\n    });\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport DataZoomView from './DataZoomView';\r\nimport sliderMove from '../helper/sliderMove';\r\nimport * as roams from './roams';\r\nimport { bind } from 'zrender/lib/core/util';\r\n\r\nvar InsideZoomView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(InsideZoomView, _super);\r\n\r\n  function InsideZoomView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = 'dataZoom.inside';\r\n    return _this;\r\n  }\r\n\r\n  InsideZoomView.prototype.render = function (dataZoomModel, ecModel, api) {\r\n    _super.prototype.render.apply(this, arguments);\r\n\r\n    if (dataZoomModel.noTarget()) {\r\n      this._clear();\r\n\r\n      return;\r\n    } // Hence the `throttle` util ensures to preserve command order,\r\n    // here simply updating range all the time will not cause missing\r\n    // any of the the roam change.\r\n\r\n\r\n    this.range = dataZoomModel.getPercentRange(); // Reset controllers.\r\n\r\n    roams.setViewInfoToCoordSysRecord(api, dataZoomModel, {\r\n      pan: bind(getRangeHandlers.pan, this),\r\n      zoom: bind(getRangeHandlers.zoom, this),\r\n      scrollMove: bind(getRangeHandlers.scrollMove, this)\r\n    });\r\n  };\r\n\r\n  InsideZoomView.prototype.dispose = function () {\r\n    this._clear();\r\n\r\n    _super.prototype.dispose.apply(this, arguments);\r\n  };\r\n\r\n  InsideZoomView.prototype._clear = function () {\r\n    roams.disposeCoordSysRecordIfNeeded(this.api, this.dataZoomModel);\r\n    this.range = null;\r\n  };\r\n\r\n  InsideZoomView.type = 'dataZoom.inside';\r\n  return InsideZoomView;\r\n}(DataZoomView);\r\n\r\nvar getRangeHandlers = {\r\n  zoom: function (coordSysInfo, coordSysMainType, controller, e) {\r\n    var lastRange = this.range;\r\n    var range = lastRange.slice(); // Calculate transform by the first axis.\r\n\r\n    var axisModel = coordSysInfo.axisModels[0];\r\n\r\n    if (!axisModel) {\r\n      return;\r\n    }\r\n\r\n    var directionInfo = getDirectionInfo[coordSysMainType](null, [e.originX, e.originY], axisModel, controller, coordSysInfo);\r\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\r\n    var scale = Math.max(1 / e.scale, 0);\r\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\r\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\r\n\r\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\r\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\r\n    this.range = range;\r\n\r\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\r\n      return range;\r\n    }\r\n  },\r\n  pan: makeMover(function (range, axisModel, coordSysInfo, coordSysMainType, controller, e) {\r\n    var directionInfo = getDirectionInfo[coordSysMainType]([e.oldX, e.oldY], [e.newX, e.newY], axisModel, controller, coordSysInfo);\r\n    return directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\r\n  }),\r\n  scrollMove: makeMover(function (range, axisModel, coordSysInfo, coordSysMainType, controller, e) {\r\n    var directionInfo = getDirectionInfo[coordSysMainType]([0, 0], [e.scrollDelta, e.scrollDelta], axisModel, controller, coordSysInfo);\r\n    return directionInfo.signal * (range[1] - range[0]) * e.scrollDelta;\r\n  })\r\n};\r\n\r\nfunction makeMover(getPercentDelta) {\r\n  return function (coordSysInfo, coordSysMainType, controller, e) {\r\n    var lastRange = this.range;\r\n    var range = lastRange.slice(); // Calculate transform by the first axis.\r\n\r\n    var axisModel = coordSysInfo.axisModels[0];\r\n\r\n    if (!axisModel) {\r\n      return;\r\n    }\r\n\r\n    var percentDelta = getPercentDelta(range, axisModel, coordSysInfo, coordSysMainType, controller, e);\r\n    sliderMove(percentDelta, range, [0, 100], 'all');\r\n    this.range = range;\r\n\r\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\r\n      return range;\r\n    }\r\n  };\r\n}\r\n\r\nvar getDirectionInfo = {\r\n  grid: function (oldPoint, newPoint, axisModel, controller, coordSysInfo) {\r\n    var axis = axisModel.axis;\r\n    var ret = {};\r\n    var rect = coordSysInfo.model.coordinateSystem.getRect();\r\n    oldPoint = oldPoint || [0, 0];\r\n\r\n    if (axis.dim === 'x') {\r\n      ret.pixel = newPoint[0] - oldPoint[0];\r\n      ret.pixelLength = rect.width;\r\n      ret.pixelStart = rect.x;\r\n      ret.signal = axis.inverse ? 1 : -1;\r\n    } else {\r\n      // axis.dim === 'y'\r\n      ret.pixel = newPoint[1] - oldPoint[1];\r\n      ret.pixelLength = rect.height;\r\n      ret.pixelStart = rect.y;\r\n      ret.signal = axis.inverse ? -1 : 1;\r\n    }\r\n\r\n    return ret;\r\n  },\r\n  polar: function (oldPoint, newPoint, axisModel, controller, coordSysInfo) {\r\n    var axis = axisModel.axis;\r\n    var ret = {};\r\n    var polar = coordSysInfo.model.coordinateSystem;\r\n    var radiusExtent = polar.getRadiusAxis().getExtent();\r\n    var angleExtent = polar.getAngleAxis().getExtent();\r\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\r\n    newPoint = polar.pointToCoord(newPoint);\r\n\r\n    if (axisModel.mainType === 'radiusAxis') {\r\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\r\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\r\n\r\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\r\n      ret.pixelStart = radiusExtent[0];\r\n      ret.signal = axis.inverse ? 1 : -1;\r\n    } else {\r\n      // 'angleAxis'\r\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\r\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\r\n\r\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\r\n      ret.pixelStart = angleExtent[0];\r\n      ret.signal = axis.inverse ? -1 : 1;\r\n    }\r\n\r\n    return ret;\r\n  },\r\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordSysInfo) {\r\n    var axis = axisModel.axis;\r\n    var rect = coordSysInfo.model.coordinateSystem.getRect();\r\n    var ret = {};\r\n    oldPoint = oldPoint || [0, 0];\r\n\r\n    if (axis.orient === 'horizontal') {\r\n      ret.pixel = newPoint[0] - oldPoint[0];\r\n      ret.pixelLength = rect.width;\r\n      ret.pixelStart = rect.x;\r\n      ret.signal = axis.inverse ? 1 : -1;\r\n    } else {\r\n      // 'vertical'\r\n      ret.pixel = newPoint[1] - oldPoint[1];\r\n      ret.pixelLength = rect.height;\r\n      ret.pixelStart = rect.y;\r\n      ret.signal = axis.inverse ? -1 : 1;\r\n    }\r\n\r\n    return ret;\r\n  }\r\n};\r\nexport default InsideZoomView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport InsideZoomModel from './InsideZoomModel';\r\nimport InsideZoomView from './InsideZoomView';\r\nimport { installDataZoomRoamProcessor } from './roams';\r\nimport installCommon from './installCommon';\r\nexport function install(registers) {\r\n  installCommon(registers);\r\n  registers.registerComponentModel(InsideZoomModel);\r\n  registers.registerComponentView(InsideZoomView);\r\n  installDataZoomRoamProcessor(registers);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport DataZoomModel from './DataZoomModel';\r\nimport { inheritDefaultOption } from '../../util/component';\r\n\r\nvar SliderZoomModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(SliderZoomModel, _super);\r\n\r\n  function SliderZoomModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = SliderZoomModel.type;\r\n    return _this;\r\n  }\r\n\r\n  SliderZoomModel.type = 'dataZoom.slider';\r\n  SliderZoomModel.layoutMode = 'box';\r\n  SliderZoomModel.defaultOption = inheritDefaultOption(DataZoomModel.defaultOption, {\r\n    show: true,\r\n    // deault value can only be drived in view stage.\r\n    right: 'ph',\r\n    top: 'ph',\r\n    width: 'ph',\r\n    height: 'ph',\r\n    left: null,\r\n    bottom: null,\r\n    borderColor: '#d2dbee',\r\n    borderRadius: 3,\r\n    backgroundColor: 'rgba(47,69,84,0)',\r\n    // dataBackgroundColor: '#ddd',\r\n    dataBackground: {\r\n      lineStyle: {\r\n        color: '#d2dbee',\r\n        width: 0.5\r\n      },\r\n      areaStyle: {\r\n        color: '#d2dbee',\r\n        opacity: 0.2\r\n      }\r\n    },\r\n    selectedDataBackground: {\r\n      lineStyle: {\r\n        color: '#8fb0f7',\r\n        width: 0.5\r\n      },\r\n      areaStyle: {\r\n        color: '#8fb0f7',\r\n        opacity: 0.2\r\n      }\r\n    },\r\n    // Color of selected window.\r\n    fillerColor: 'rgba(135,175,274,0.2)',\r\n    handleIcon: 'path://M-9.35,34.56V42m0-40V9.5m-2,0h4a2,2,0,0,1,2,2v21a2,2,0,0,1-2,2h-4a2,2,0,0,1-2-2v-21A2,2,0,0,1-11.35,9.5Z',\r\n    // Percent of the slider height\r\n    handleSize: '100%',\r\n    handleStyle: {\r\n      color: '#fff',\r\n      borderColor: '#ACB8D1'\r\n    },\r\n    moveHandleSize: 7,\r\n    moveHandleIcon: 'path://M-320.9-50L-320.9-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-348-41-339-50-320.9-50z M-212.3-50L-212.3-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-239.4-41-230.4-50-212.3-50z M-103.7-50L-103.7-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-130.9-41-121.8-50-103.7-50z',\r\n    moveHandleStyle: {\r\n      color: '#D2DBEE',\r\n      opacity: 0.7\r\n    },\r\n    showDetail: true,\r\n    showDataShadow: 'auto',\r\n    realtime: true,\r\n    zoomLock: false,\r\n    textStyle: {\r\n      color: '#6E7079'\r\n    },\r\n    brushSelect: true,\r\n    brushStyle: {\r\n      color: 'rgba(135,175,274,0.15)'\r\n    },\r\n    emphasis: {\r\n      handleStyle: {\r\n        borderColor: '#8FB0F7'\r\n      },\r\n      moveHandleStyle: {\r\n        color: '#8FB0F7'\r\n      }\r\n    }\r\n  });\r\n  return SliderZoomModel;\r\n}(DataZoomModel);\r\n\r\nexport default SliderZoomModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport { bind, each, isFunction, isString, indexOf } from 'zrender/lib/core/util';\r\nimport * as eventTool from 'zrender/lib/core/event';\r\nimport * as graphic from '../../util/graphic';\r\nimport * as throttle from '../../util/throttle';\r\nimport DataZoomView from './DataZoomView';\r\nimport { linearMap, asc, parsePercent } from '../../util/number';\r\nimport * as layout from '../../util/layout';\r\nimport sliderMove from '../helper/sliderMove';\r\nimport { getAxisMainType, collectReferCoordSysModelInfo } from './helper';\r\nimport { enableHoverEmphasis } from '../../util/states';\r\nimport { createSymbol, symbolBuildProxies } from '../../util/symbol';\r\nimport { deprecateLog } from '../../util/log';\r\nimport { createTextStyle } from '../../label/labelStyle';\r\nvar Rect = graphic.Rect; // Constants\r\n\r\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\r\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\r\nvar DEFAULT_FILLER_SIZE = 30;\r\nvar DEFAULT_MOVE_HANDLE_SIZE = 7;\r\nvar HORIZONTAL = 'horizontal';\r\nvar VERTICAL = 'vertical';\r\nvar LABEL_GAP = 5;\r\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\r\nvar REALTIME_ANIMATION_CONFIG = {\r\n  easing: 'cubicOut',\r\n  duration: 100,\r\n  delay: 0\r\n};\r\n\r\nvar SliderZoomView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(SliderZoomView, _super);\r\n\r\n  function SliderZoomView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = SliderZoomView.type;\r\n    _this._displayables = {};\r\n    return _this;\r\n  }\r\n\r\n  SliderZoomView.prototype.init = function (ecModel, api) {\r\n    this.api = api; // A unique handler for each dataZoom component\r\n\r\n    this._onBrush = bind(this._onBrush, this);\r\n    this._onBrushEnd = bind(this._onBrushEnd, this);\r\n  };\r\n\r\n  SliderZoomView.prototype.render = function (dataZoomModel, ecModel, api, payload) {\r\n    _super.prototype.render.apply(this, arguments);\r\n\r\n    throttle.createOrUpdate(this, '_dispatchZoomAction', dataZoomModel.get('throttle'), 'fixRate');\r\n    this._orient = dataZoomModel.getOrient();\r\n\r\n    if (dataZoomModel.get('show') === false) {\r\n      this.group.removeAll();\r\n      return;\r\n    }\r\n\r\n    if (dataZoomModel.noTarget()) {\r\n      this._clear();\r\n\r\n      this.group.removeAll();\r\n      return;\r\n    } // Notice: this._resetInterval() should not be executed when payload.type\r\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\r\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\r\n\r\n\r\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\r\n      this._buildView();\r\n    }\r\n\r\n    this._updateView();\r\n  };\r\n\r\n  SliderZoomView.prototype.dispose = function () {\r\n    this._clear();\r\n\r\n    _super.prototype.dispose.apply(this, arguments);\r\n  };\r\n\r\n  SliderZoomView.prototype._clear = function () {\r\n    throttle.clear(this, '_dispatchZoomAction');\r\n    var zr = this.api.getZr();\r\n    zr.off('mousemove', this._onBrush);\r\n    zr.off('mouseup', this._onBrushEnd);\r\n  };\r\n\r\n  SliderZoomView.prototype._buildView = function () {\r\n    var thisGroup = this.group;\r\n    thisGroup.removeAll();\r\n    this._brushing = false;\r\n    this._displayables.brushRect = null;\r\n\r\n    this._resetLocation();\r\n\r\n    this._resetInterval();\r\n\r\n    var barGroup = this._displayables.sliderGroup = new graphic.Group();\r\n\r\n    this._renderBackground();\r\n\r\n    this._renderHandle();\r\n\r\n    this._renderDataShadow();\r\n\r\n    thisGroup.add(barGroup);\r\n\r\n    this._positionGroup();\r\n  };\r\n\r\n  SliderZoomView.prototype._resetLocation = function () {\r\n    var dataZoomModel = this.dataZoomModel;\r\n    var api = this.api;\r\n    var showMoveHandle = dataZoomModel.get('brushSelect');\r\n    var moveHandleSize = showMoveHandle ? DEFAULT_MOVE_HANDLE_SIZE : 0; // If some of x/y/width/height are not specified,\r\n    // auto-adapt according to target grid.\r\n\r\n    var coordRect = this._findCoordRect();\r\n\r\n    var ecSize = {\r\n      width: api.getWidth(),\r\n      height: api.getHeight()\r\n    }; // Default align by coordinate system rect.\r\n\r\n    var positionInfo = this._orient === HORIZONTAL ? {\r\n      // Why using 'right', because right should be used in vertical,\r\n      // and it is better to be consistent for dealing with position param merge.\r\n      right: ecSize.width - coordRect.x - coordRect.width,\r\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP - moveHandleSize,\r\n      width: coordRect.width,\r\n      height: DEFAULT_FILLER_SIZE\r\n    } : {\r\n      right: DEFAULT_LOCATION_EDGE_GAP,\r\n      top: coordRect.y,\r\n      width: DEFAULT_FILLER_SIZE,\r\n      height: coordRect.height\r\n    }; // Do not write back to option and replace value 'ph', because\r\n    // the 'ph' value should be recalculated when resize.\r\n\r\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\r\n\r\n    each(['right', 'top', 'width', 'height'], function (name) {\r\n      if (layoutParams[name] === 'ph') {\r\n        layoutParams[name] = positionInfo[name];\r\n      }\r\n    });\r\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize);\r\n    this._location = {\r\n      x: layoutRect.x,\r\n      y: layoutRect.y\r\n    };\r\n    this._size = [layoutRect.width, layoutRect.height];\r\n    this._orient === VERTICAL && this._size.reverse();\r\n  };\r\n\r\n  SliderZoomView.prototype._positionGroup = function () {\r\n    var thisGroup = this.group;\r\n    var location = this._location;\r\n    var orient = this._orient; // Just use the first axis to determine mapping.\r\n\r\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\r\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\r\n    var sliderGroup = this._displayables.sliderGroup;\r\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\r\n\r\n    sliderGroup.attr(orient === HORIZONTAL && !inverse ? {\r\n      scaleY: otherAxisInverse ? 1 : -1,\r\n      scaleX: 1\r\n    } : orient === HORIZONTAL && inverse ? {\r\n      scaleY: otherAxisInverse ? 1 : -1,\r\n      scaleX: -1\r\n    } : orient === VERTICAL && !inverse ? {\r\n      scaleY: otherAxisInverse ? -1 : 1,\r\n      scaleX: 1,\r\n      rotation: Math.PI / 2\r\n    } // Dont use Math.PI, considering shadow direction.\r\n    : {\r\n      scaleY: otherAxisInverse ? -1 : 1,\r\n      scaleX: -1,\r\n      rotation: Math.PI / 2\r\n    }); // Position barGroup\r\n\r\n    var rect = thisGroup.getBoundingRect([sliderGroup]);\r\n    thisGroup.x = location.x - rect.x;\r\n    thisGroup.y = location.y - rect.y;\r\n    thisGroup.markRedraw();\r\n  };\r\n\r\n  SliderZoomView.prototype._getViewExtent = function () {\r\n    return [0, this._size[0]];\r\n  };\r\n\r\n  SliderZoomView.prototype._renderBackground = function () {\r\n    var dataZoomModel = this.dataZoomModel;\r\n    var size = this._size;\r\n    var barGroup = this._displayables.sliderGroup;\r\n    var brushSelect = dataZoomModel.get('brushSelect');\r\n    barGroup.add(new Rect({\r\n      silent: true,\r\n      shape: {\r\n        x: 0,\r\n        y: 0,\r\n        width: size[0],\r\n        height: size[1]\r\n      },\r\n      style: {\r\n        fill: dataZoomModel.get('backgroundColor')\r\n      },\r\n      z2: -40\r\n    })); // Click panel, over shadow, below handles.\r\n\r\n    var clickPanel = new Rect({\r\n      shape: {\r\n        x: 0,\r\n        y: 0,\r\n        width: size[0],\r\n        height: size[1]\r\n      },\r\n      style: {\r\n        fill: 'transparent'\r\n      },\r\n      z2: 0,\r\n      onclick: bind(this._onClickPanel, this)\r\n    });\r\n    var zr = this.api.getZr();\r\n\r\n    if (brushSelect) {\r\n      clickPanel.on('mousedown', this._onBrushStart, this);\r\n      clickPanel.cursor = 'crosshair';\r\n      zr.on('mousemove', this._onBrush);\r\n      zr.on('mouseup', this._onBrushEnd);\r\n    } else {\r\n      zr.off('mousemove', this._onBrush);\r\n      zr.off('mouseup', this._onBrushEnd);\r\n    }\r\n\r\n    barGroup.add(clickPanel);\r\n  };\r\n\r\n  SliderZoomView.prototype._renderDataShadow = function () {\r\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\r\n\r\n    this._displayables.dataShadowSegs = [];\r\n\r\n    if (!info) {\r\n      return;\r\n    }\r\n\r\n    var size = this._size;\r\n    var seriesModel = info.series;\r\n    var data = seriesModel.getRawData();\r\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\r\n    : info.otherDim;\r\n\r\n    if (otherDim == null) {\r\n      return;\r\n    }\r\n\r\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\r\n\r\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\r\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\r\n    var otherShadowExtent = [0, size[1]];\r\n    var thisShadowExtent = [0, size[0]];\r\n    var areaPoints = [[size[0], 0], [0, 0]];\r\n    var linePoints = [];\r\n    var step = thisShadowExtent[1] / (data.count() - 1);\r\n    var thisCoord = 0; // Optimize for large data shadow\r\n\r\n    var stride = Math.round(data.count() / size[0]);\r\n    var lastIsEmpty;\r\n    data.each([otherDim], function (value, index) {\r\n      if (stride > 0 && index % stride) {\r\n        thisCoord += step;\r\n        return;\r\n      } // FIXME\r\n      // Should consider axis.min/axis.max when drawing dataShadow.\r\n      // FIXME\r\n      // \u5E94\u8BE5\u4F7F\u7528\u7EDF\u4E00\u7684\u7A7A\u5224\u65AD\uFF1F\u8FD8\u662F\u5728list\u91CC\u8FDB\u884C\u7A7A\u5224\u65AD\uFF1F\r\n\r\n\r\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\r\n\r\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\r\n\r\n      if (isEmpty && !lastIsEmpty && index) {\r\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\r\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\r\n      } else if (!isEmpty && lastIsEmpty) {\r\n        areaPoints.push([thisCoord, 0]);\r\n        linePoints.push([thisCoord, 0]);\r\n      }\r\n\r\n      areaPoints.push([thisCoord, otherCoord]);\r\n      linePoints.push([thisCoord, otherCoord]);\r\n      thisCoord += step;\r\n      lastIsEmpty = isEmpty;\r\n    });\r\n    var dataZoomModel = this.dataZoomModel;\r\n\r\n    function createDataShadowGroup(isSelectedArea) {\r\n      var model = dataZoomModel.getModel(isSelectedArea ? 'selectedDataBackground' : 'dataBackground');\r\n      var group = new graphic.Group();\r\n      var polygon = new graphic.Polygon({\r\n        shape: {\r\n          points: areaPoints\r\n        },\r\n        segmentIgnoreThreshold: 1,\r\n        style: model.getModel('areaStyle').getAreaStyle(),\r\n        silent: true,\r\n        z2: -20\r\n      });\r\n      var polyline = new graphic.Polyline({\r\n        shape: {\r\n          points: linePoints\r\n        },\r\n        segmentIgnoreThreshold: 1,\r\n        style: model.getModel('lineStyle').getLineStyle(),\r\n        silent: true,\r\n        z2: -19\r\n      });\r\n      group.add(polygon);\r\n      group.add(polyline);\r\n      return group;\r\n    } // let dataBackgroundModel = dataZoomModel.getModel('dataBackground');\r\n\r\n\r\n    for (var i = 0; i < 3; i++) {\r\n      var group = createDataShadowGroup(i === 1);\r\n\r\n      this._displayables.sliderGroup.add(group);\r\n\r\n      this._displayables.dataShadowSegs.push(group);\r\n    }\r\n  };\r\n\r\n  SliderZoomView.prototype._prepareDataShadowInfo = function () {\r\n    var dataZoomModel = this.dataZoomModel;\r\n    var showDataShadow = dataZoomModel.get('showDataShadow');\r\n\r\n    if (showDataShadow === false) {\r\n      return;\r\n    } // Find a representative series.\r\n\r\n\r\n    var result;\r\n    var ecModel = this.ecModel;\r\n    dataZoomModel.eachTargetAxis(function (axisDim, axisIndex) {\r\n      var seriesModels = dataZoomModel.getAxisProxy(axisDim, axisIndex).getTargetSeriesModels();\r\n      each(seriesModels, function (seriesModel) {\r\n        if (result) {\r\n          return;\r\n        }\r\n\r\n        if (showDataShadow !== true && indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\r\n          return;\r\n        }\r\n\r\n        var thisAxis = ecModel.getComponent(getAxisMainType(axisDim), axisIndex).axis;\r\n        var otherDim = getOtherDim(axisDim);\r\n        var otherAxisInverse;\r\n        var coordSys = seriesModel.coordinateSystem;\r\n\r\n        if (otherDim != null && coordSys.getOtherAxis) {\r\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\r\n        }\r\n\r\n        otherDim = seriesModel.getData().mapDimension(otherDim);\r\n        result = {\r\n          thisAxis: thisAxis,\r\n          series: seriesModel,\r\n          thisDim: axisDim,\r\n          otherDim: otherDim,\r\n          otherAxisInverse: otherAxisInverse\r\n        };\r\n      }, this);\r\n    }, this);\r\n    return result;\r\n  };\r\n\r\n  SliderZoomView.prototype._renderHandle = function () {\r\n    var thisGroup = this.group;\r\n    var displayables = this._displayables;\r\n    var handles = displayables.handles = [null, null];\r\n    var handleLabels = displayables.handleLabels = [null, null];\r\n    var sliderGroup = this._displayables.sliderGroup;\r\n    var size = this._size;\r\n    var dataZoomModel = this.dataZoomModel;\r\n    var api = this.api;\r\n    var borderRadius = dataZoomModel.get('borderRadius') || 0;\r\n    var brushSelect = dataZoomModel.get('brushSelect');\r\n    var filler = displayables.filler = new Rect({\r\n      silent: brushSelect,\r\n      style: {\r\n        fill: dataZoomModel.get('fillerColor')\r\n      },\r\n      textConfig: {\r\n        position: 'inside'\r\n      }\r\n    });\r\n    sliderGroup.add(filler); // Frame border.\r\n\r\n    sliderGroup.add(new Rect({\r\n      silent: true,\r\n      subPixelOptimize: true,\r\n      shape: {\r\n        x: 0,\r\n        y: 0,\r\n        width: size[0],\r\n        height: size[1],\r\n        r: borderRadius\r\n      },\r\n      style: {\r\n        stroke: dataZoomModel.get('dataBackgroundColor') // deprecated option\r\n        || dataZoomModel.get('borderColor'),\r\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\r\n        fill: 'rgba(0,0,0,0)'\r\n      }\r\n    })); // Left and right handle to resize\r\n\r\n    each([0, 1], function (handleIndex) {\r\n      var iconStr = dataZoomModel.get('handleIcon');\r\n\r\n      if (!symbolBuildProxies[iconStr] && iconStr.indexOf('path://') < 0 && iconStr.indexOf('image://') < 0) {\r\n        // Compatitable with the old icon parsers. Which can use a path string without path://\r\n        iconStr = 'path://' + iconStr;\r\n\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          deprecateLog('handleIcon now needs \\'path://\\' prefix when using a path string');\r\n        }\r\n      }\r\n\r\n      var path = createSymbol(iconStr, -1, 0, 2, 2, null, true);\r\n      path.attr({\r\n        cursor: getCursor(this._orient),\r\n        draggable: true,\r\n        drift: bind(this._onDragMove, this, handleIndex),\r\n        ondragend: bind(this._onDragEnd, this),\r\n        onmouseover: bind(this._showDataInfo, this, true),\r\n        onmouseout: bind(this._showDataInfo, this, false),\r\n        z2: 5\r\n      });\r\n      var bRect = path.getBoundingRect();\r\n      var handleSize = dataZoomModel.get('handleSize');\r\n      this._handleHeight = parsePercent(handleSize, this._size[1]);\r\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\r\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\r\n      path.style.strokeNoScale = true;\r\n      path.rectHover = true;\r\n      path.ensureState('emphasis').style = dataZoomModel.getModel(['emphasis', 'handleStyle']).getItemStyle();\r\n      enableHoverEmphasis(path);\r\n      var handleColor = dataZoomModel.get('handleColor'); // deprecated option\r\n      // Compatitable with previous version\r\n\r\n      if (handleColor != null) {\r\n        path.style.fill = handleColor;\r\n      }\r\n\r\n      sliderGroup.add(handles[handleIndex] = path);\r\n      var textStyleModel = dataZoomModel.getModel('textStyle');\r\n      thisGroup.add(handleLabels[handleIndex] = new graphic.Text({\r\n        silent: true,\r\n        invisible: true,\r\n        style: createTextStyle(textStyleModel, {\r\n          x: 0,\r\n          y: 0,\r\n          text: '',\r\n          verticalAlign: 'middle',\r\n          align: 'center',\r\n          fill: textStyleModel.getTextColor(),\r\n          font: textStyleModel.getFont()\r\n        }),\r\n        z2: 10\r\n      }));\r\n    }, this); // Handle to move. Only visible when brushSelect is set true.\r\n\r\n    var actualMoveZone = filler;\r\n\r\n    if (brushSelect) {\r\n      var moveHandleHeight = parsePercent(dataZoomModel.get('moveHandleSize'), size[1]);\r\n      var moveHandle_1 = displayables.moveHandle = new graphic.Rect({\r\n        style: dataZoomModel.getModel('moveHandleStyle').getItemStyle(),\r\n        silent: true,\r\n        shape: {\r\n          r: [0, 0, 2, 2],\r\n          y: size[1] - 0.5,\r\n          height: moveHandleHeight\r\n        }\r\n      });\r\n      var iconSize = moveHandleHeight * 0.8;\r\n      var moveHandleIcon = displayables.moveHandleIcon = createSymbol(dataZoomModel.get('moveHandleIcon'), -iconSize / 2, -iconSize / 2, iconSize, iconSize, '#fff', true);\r\n      moveHandleIcon.silent = true;\r\n      moveHandleIcon.y = size[1] + moveHandleHeight / 2 - 0.5;\r\n      moveHandle_1.ensureState('emphasis').style = dataZoomModel.getModel(['emphasis', 'moveHandleStyle']).getItemStyle();\r\n      var moveZoneExpandSize = Math.min(size[1] / 2, Math.max(moveHandleHeight, 10));\r\n      actualMoveZone = displayables.moveZone = new graphic.Rect({\r\n        invisible: true,\r\n        shape: {\r\n          y: size[1] - moveZoneExpandSize,\r\n          height: moveHandleHeight + moveZoneExpandSize\r\n        }\r\n      });\r\n      actualMoveZone.on('mouseover', function () {\r\n        api.enterEmphasis(moveHandle_1);\r\n      }).on('mouseout', function () {\r\n        api.leaveEmphasis(moveHandle_1);\r\n      });\r\n      sliderGroup.add(moveHandle_1);\r\n      sliderGroup.add(moveHandleIcon);\r\n      sliderGroup.add(actualMoveZone);\r\n    }\r\n\r\n    actualMoveZone.attr({\r\n      draggable: true,\r\n      cursor: getCursor(this._orient),\r\n      drift: bind(this._onDragMove, this, 'all'),\r\n      ondragstart: bind(this._showDataInfo, this, true),\r\n      ondragend: bind(this._onDragEnd, this),\r\n      onmouseover: bind(this._showDataInfo, this, true),\r\n      onmouseout: bind(this._showDataInfo, this, false)\r\n    });\r\n  };\r\n\r\n  SliderZoomView.prototype._resetInterval = function () {\r\n    var range = this._range = this.dataZoomModel.getPercentRange();\r\n\r\n    var viewExtent = this._getViewExtent();\r\n\r\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\r\n  };\r\n\r\n  SliderZoomView.prototype._updateInterval = function (handleIndex, delta) {\r\n    var dataZoomModel = this.dataZoomModel;\r\n    var handleEnds = this._handleEnds;\r\n\r\n    var viewExtend = this._getViewExtent();\r\n\r\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\r\n    var percentExtent = [0, 100];\r\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\r\n    var lastRange = this._range;\r\n    var range = this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\r\n    return !lastRange || lastRange[0] !== range[0] || lastRange[1] !== range[1];\r\n  };\r\n\r\n  SliderZoomView.prototype._updateView = function (nonRealtime) {\r\n    var displaybles = this._displayables;\r\n    var handleEnds = this._handleEnds;\r\n    var handleInterval = asc(handleEnds.slice());\r\n    var size = this._size;\r\n    each([0, 1], function (handleIndex) {\r\n      // Handles\r\n      var handle = displaybles.handles[handleIndex];\r\n      var handleHeight = this._handleHeight;\r\n      handle.attr({\r\n        scaleX: handleHeight / 2,\r\n        scaleY: handleHeight / 2,\r\n        // This is a trick, by adding an extra tiny offset to let the default handle's end point align to the drag window.\r\n        // NOTE: It may affect some custom shapes a bit. But we prefer to have better result by default.\r\n        x: handleEnds[handleIndex] + (handleIndex ? -1 : 1),\r\n        y: size[1] / 2 - handleHeight / 2\r\n      });\r\n    }, this); // Filler\r\n\r\n    displaybles.filler.setShape({\r\n      x: handleInterval[0],\r\n      y: 0,\r\n      width: handleInterval[1] - handleInterval[0],\r\n      height: size[1]\r\n    });\r\n    var viewExtent = {\r\n      x: handleInterval[0],\r\n      width: handleInterval[1] - handleInterval[0]\r\n    }; // Move handle\r\n\r\n    if (displaybles.moveHandle) {\r\n      displaybles.moveHandle.setShape(viewExtent);\r\n      displaybles.moveZone.setShape(viewExtent); // Force update path on the invisible object\r\n\r\n      displaybles.moveZone.getBoundingRect();\r\n      displaybles.moveHandleIcon && displaybles.moveHandleIcon.attr('x', viewExtent.x + viewExtent.width / 2);\r\n    } // update clip path of shadow.\r\n\r\n\r\n    var dataShadowSegs = displaybles.dataShadowSegs;\r\n    var segIntervals = [0, handleInterval[0], handleInterval[1], size[0]];\r\n\r\n    for (var i = 0; i < dataShadowSegs.length; i++) {\r\n      var segGroup = dataShadowSegs[i];\r\n      var clipPath = segGroup.getClipPath();\r\n\r\n      if (!clipPath) {\r\n        clipPath = new graphic.Rect();\r\n        segGroup.setClipPath(clipPath);\r\n      }\r\n\r\n      clipPath.setShape({\r\n        x: segIntervals[i],\r\n        y: 0,\r\n        width: segIntervals[i + 1] - segIntervals[i],\r\n        height: size[1]\r\n      });\r\n    }\r\n\r\n    this._updateDataInfo(nonRealtime);\r\n  };\r\n\r\n  SliderZoomView.prototype._updateDataInfo = function (nonRealtime) {\r\n    var dataZoomModel = this.dataZoomModel;\r\n    var displaybles = this._displayables;\r\n    var handleLabels = displaybles.handleLabels;\r\n    var orient = this._orient;\r\n    var labelTexts = ['', '']; // FIXME\r\n    // date\u578B\uFF0C\u652F\u6301formatter\uFF0Cautoformatter\uFF08ec2 date.getAutoFormatter\uFF09\r\n\r\n    if (dataZoomModel.get('showDetail')) {\r\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\r\n\r\n      if (axisProxy) {\r\n        var axis = axisProxy.getAxisModel().axis;\r\n        var range = this._range;\r\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\r\n        ? axisProxy.calculateDataWindow({\r\n          start: range[0],\r\n          end: range[1]\r\n        }).valueWindow : axisProxy.getDataValueWindow();\r\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\r\n      }\r\n    }\r\n\r\n    var orderedHandleEnds = asc(this._handleEnds.slice());\r\n    setLabel.call(this, 0);\r\n    setLabel.call(this, 1);\r\n\r\n    function setLabel(handleIndex) {\r\n      // Label\r\n      // Text should not transform by barGroup.\r\n      // Ignore handlers transform\r\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\r\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\r\n      var offset = this._handleWidth / 2 + LABEL_GAP;\r\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\r\n      handleLabels[handleIndex].setStyle({\r\n        x: textPoint[0],\r\n        y: textPoint[1],\r\n        verticalAlign: orient === HORIZONTAL ? 'middle' : direction,\r\n        align: orient === HORIZONTAL ? direction : 'center',\r\n        text: labelTexts[handleIndex]\r\n      });\r\n    }\r\n  };\r\n\r\n  SliderZoomView.prototype._formatLabel = function (value, axis) {\r\n    var dataZoomModel = this.dataZoomModel;\r\n    var labelFormatter = dataZoomModel.get('labelFormatter');\r\n    var labelPrecision = dataZoomModel.get('labelPrecision');\r\n\r\n    if (labelPrecision == null || labelPrecision === 'auto') {\r\n      labelPrecision = axis.getPixelPrecision();\r\n    }\r\n\r\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\r\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel({\r\n      value: Math.round(value)\r\n    }) // param of toFixed should less then 20.\r\n    : value.toFixed(Math.min(labelPrecision, 20));\r\n    return isFunction(labelFormatter) ? labelFormatter(value, valueStr) : isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\r\n  };\r\n  /**\r\n   * @param showOrHide true: show, false: hide\r\n   */\r\n\r\n\r\n  SliderZoomView.prototype._showDataInfo = function (showOrHide) {\r\n    // Always show when drgging.\r\n    showOrHide = this._dragging || showOrHide;\r\n    var displayables = this._displayables;\r\n    var handleLabels = displayables.handleLabels;\r\n    handleLabels[0].attr('invisible', !showOrHide);\r\n    handleLabels[1].attr('invisible', !showOrHide); // Highlight move handle\r\n\r\n    displayables.moveHandle && this.api[showOrHide ? 'enterEmphasis' : 'leaveEmphasis'](displayables.moveHandle, 1);\r\n  };\r\n\r\n  SliderZoomView.prototype._onDragMove = function (handleIndex, dx, dy, event) {\r\n    this._dragging = true; // For mobile device, prevent screen slider on the button.\r\n\r\n    eventTool.stop(event.event); // Transform dx, dy to bar coordination.\r\n\r\n    var barTransform = this._displayables.sliderGroup.getLocalTransform();\r\n\r\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\r\n\r\n    var changed = this._updateInterval(handleIndex, vertex[0]);\r\n\r\n    var realtime = this.dataZoomModel.get('realtime');\r\n\r\n    this._updateView(!realtime); // Avoid dispatch dataZoom repeatly but range not changed,\r\n    // which cause bad visual effect when progressive enabled.\r\n\r\n\r\n    changed && realtime && this._dispatchZoomAction(true);\r\n  };\r\n\r\n  SliderZoomView.prototype._onDragEnd = function () {\r\n    this._dragging = false;\r\n\r\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\r\n    // drag end will cause the whole view rerender, which is unnecessary.\r\n\r\n\r\n    var realtime = this.dataZoomModel.get('realtime');\r\n    !realtime && this._dispatchZoomAction(false);\r\n  };\r\n\r\n  SliderZoomView.prototype._onClickPanel = function (e) {\r\n    var size = this._size;\r\n\r\n    var localPoint = this._displayables.sliderGroup.transformCoordToLocal(e.offsetX, e.offsetY);\r\n\r\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\r\n      return;\r\n    }\r\n\r\n    var handleEnds = this._handleEnds;\r\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\r\n\r\n    var changed = this._updateInterval('all', localPoint[0] - center);\r\n\r\n    this._updateView();\r\n\r\n    changed && this._dispatchZoomAction(false);\r\n  };\r\n\r\n  SliderZoomView.prototype._onBrushStart = function (e) {\r\n    var x = e.offsetX;\r\n    var y = e.offsetY;\r\n    this._brushStart = new graphic.Point(x, y);\r\n    this._brushing = true;\r\n    this._brushStartTime = +new Date(); // this._updateBrushRect(x, y);\r\n  };\r\n\r\n  SliderZoomView.prototype._onBrushEnd = function (e) {\r\n    if (!this._brushing) {\r\n      return;\r\n    }\r\n\r\n    var brushRect = this._displayables.brushRect;\r\n    this._brushing = false;\r\n\r\n    if (!brushRect) {\r\n      return;\r\n    }\r\n\r\n    brushRect.attr('ignore', true);\r\n    var brushShape = brushRect.shape;\r\n    var brushEndTime = +new Date(); // console.log(brushEndTime - this._brushStartTime);\r\n\r\n    if (brushEndTime - this._brushStartTime < 200 && Math.abs(brushShape.width) < 5) {\r\n      // Will treat it as a click\r\n      return;\r\n    }\r\n\r\n    var viewExtend = this._getViewExtent();\r\n\r\n    var percentExtent = [0, 100];\r\n    this._range = asc([linearMap(brushShape.x, viewExtend, percentExtent, true), linearMap(brushShape.x + brushShape.width, viewExtend, percentExtent, true)]);\r\n    this._handleEnds = [brushShape.x, brushShape.x + brushShape.width];\r\n\r\n    this._updateView();\r\n\r\n    this._dispatchZoomAction(false);\r\n  };\r\n\r\n  SliderZoomView.prototype._onBrush = function (e) {\r\n    if (this._brushing) {\r\n      // For mobile device, prevent screen slider on the button.\r\n      eventTool.stop(e.event);\r\n\r\n      this._updateBrushRect(e.offsetX, e.offsetY);\r\n    }\r\n  };\r\n\r\n  SliderZoomView.prototype._updateBrushRect = function (mouseX, mouseY) {\r\n    var displayables = this._displayables;\r\n    var dataZoomModel = this.dataZoomModel;\r\n    var brushRect = displayables.brushRect;\r\n\r\n    if (!brushRect) {\r\n      brushRect = displayables.brushRect = new Rect({\r\n        silent: true,\r\n        style: dataZoomModel.getModel('brushStyle').getItemStyle()\r\n      });\r\n      displayables.sliderGroup.add(brushRect);\r\n    }\r\n\r\n    brushRect.attr('ignore', false);\r\n    var brushStart = this._brushStart;\r\n    var sliderGroup = this._displayables.sliderGroup;\r\n    var endPoint = sliderGroup.transformCoordToLocal(mouseX, mouseY);\r\n    var startPoint = sliderGroup.transformCoordToLocal(brushStart.x, brushStart.y);\r\n    var size = this._size;\r\n    endPoint[0] = Math.max(Math.min(size[0], endPoint[0]), 0);\r\n    brushRect.setShape({\r\n      x: startPoint[0],\r\n      y: 0,\r\n      width: endPoint[0] - startPoint[0],\r\n      height: size[1]\r\n    });\r\n  };\r\n  /**\r\n   * This action will be throttled.\r\n   */\r\n\r\n\r\n  SliderZoomView.prototype._dispatchZoomAction = function (realtime) {\r\n    var range = this._range;\r\n    this.api.dispatchAction({\r\n      type: 'dataZoom',\r\n      from: this.uid,\r\n      dataZoomId: this.dataZoomModel.id,\r\n      animation: realtime ? REALTIME_ANIMATION_CONFIG : null,\r\n      start: range[0],\r\n      end: range[1]\r\n    });\r\n  };\r\n\r\n  SliderZoomView.prototype._findCoordRect = function () {\r\n    // Find the grid coresponding to the first axis referred by dataZoom.\r\n    var rect;\r\n    var coordSysInfoList = collectReferCoordSysModelInfo(this.dataZoomModel).infoList;\r\n\r\n    if (!rect && coordSysInfoList.length) {\r\n      var coordSys = coordSysInfoList[0].model.coordinateSystem;\r\n      rect = coordSys.getRect && coordSys.getRect();\r\n    }\r\n\r\n    if (!rect) {\r\n      var width = this.api.getWidth();\r\n      var height = this.api.getHeight();\r\n      rect = {\r\n        x: width * 0.2,\r\n        y: height * 0.2,\r\n        width: width * 0.6,\r\n        height: height * 0.6\r\n      };\r\n    }\r\n\r\n    return rect;\r\n  };\r\n\r\n  SliderZoomView.type = 'dataZoom.slider';\r\n  return SliderZoomView;\r\n}(DataZoomView);\r\n\r\nfunction getOtherDim(thisDim) {\r\n  // FIXME\r\n  // \u8FD9\u4E2A\u903B\u8F91\u548CgetOtherAxis\u91CC\u4E00\u81F4\uFF0C\u4F46\u662F\u5199\u5728\u8FD9\u91CC\u662F\u5426\u4E0D\u597D\r\n  var map = {\r\n    x: 'y',\r\n    y: 'x',\r\n    radius: 'angle',\r\n    angle: 'radius'\r\n  };\r\n  return map[thisDim];\r\n}\r\n\r\nfunction getCursor(orient) {\r\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\r\n}\r\n\r\nexport default SliderZoomView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport SliderZoomModel from './SliderZoomModel';\r\nimport SliderZoomView from './SliderZoomView';\r\nimport installCommon from './installCommon';\r\nexport function install(registers) {\r\n  registers.registerComponentModel(SliderZoomModel);\r\n  registers.registerComponentView(SliderZoomView);\r\n  installCommon(registers);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { use } from '../../extension';\r\nimport { install as installDataZoomInside } from './installDataZoomInside';\r\nimport { install as installDataZoomSlider } from './installDataZoomSlider';\r\nexport function install(registers) {\r\n  use(installDataZoomInside);\r\n  use(installDataZoomSlider); // Do not install './dataZoomSelect',\r\n  // since it only work for toolbox dataZoom.\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * @file Visual mapping.\r\n */\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nvar visualDefault = {\r\n  /**\r\n   * @public\r\n   */\r\n  get: function (visualType, key, isCategory) {\r\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\r\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\r\n  }\r\n};\r\nvar defaultOption = {\r\n  color: {\r\n    active: ['#006edd', '#e0ffff'],\r\n    inactive: ['rgba(0,0,0,0)']\r\n  },\r\n  colorHue: {\r\n    active: [0, 360],\r\n    inactive: [0, 0]\r\n  },\r\n  colorSaturation: {\r\n    active: [0.3, 1],\r\n    inactive: [0, 0]\r\n  },\r\n  colorLightness: {\r\n    active: [0.9, 0.5],\r\n    inactive: [0, 0]\r\n  },\r\n  colorAlpha: {\r\n    active: [0.3, 1],\r\n    inactive: [0, 0]\r\n  },\r\n  opacity: {\r\n    active: [0.3, 1],\r\n    inactive: [0, 0]\r\n  },\r\n  symbol: {\r\n    active: ['circle', 'roundRect', 'diamond'],\r\n    inactive: ['none']\r\n  },\r\n  symbolSize: {\r\n    active: [10, 50],\r\n    inactive: [0, 0]\r\n  }\r\n};\r\nexport default visualDefault;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport env from 'zrender/lib/core/env';\r\nimport visualDefault from '../../visual/visualDefault';\r\nimport VisualMapping from '../../visual/VisualMapping';\r\nimport * as visualSolution from '../../visual/visualSolution';\r\nimport * as modelUtil from '../../util/model';\r\nimport * as numberUtil from '../../util/number';\r\nimport ComponentModel from '../../model/Component';\r\nvar mapVisual = VisualMapping.mapVisual;\r\nvar eachVisual = VisualMapping.eachVisual;\r\nvar isArray = zrUtil.isArray;\r\nvar each = zrUtil.each;\r\nvar asc = numberUtil.asc;\r\nvar linearMap = numberUtil.linearMap;\r\n\r\nvar VisualMapModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(VisualMapModel, _super);\r\n\r\n  function VisualMapModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = VisualMapModel.type;\r\n    _this.stateList = ['inRange', 'outOfRange'];\r\n    _this.replacableOptionKeys = ['inRange', 'outOfRange', 'target', 'controller', 'color'];\r\n    _this.layoutMode = {\r\n      type: 'box',\r\n      ignoreSize: true\r\n    };\r\n    /**\r\n     * [lowerBound, upperBound]\r\n     */\r\n\r\n    _this.dataBound = [-Infinity, Infinity];\r\n    _this.targetVisuals = {};\r\n    _this.controllerVisuals = {};\r\n    return _this;\r\n  }\r\n\r\n  VisualMapModel.prototype.init = function (option, parentModel, ecModel) {\r\n    this.mergeDefaultAndTheme(option, ecModel);\r\n  };\r\n  /**\r\n   * @protected\r\n   */\r\n\r\n\r\n  VisualMapModel.prototype.optionUpdated = function (newOption, isInit) {\r\n    var thisOption = this.option; // FIXME\r\n    // necessary?\r\n    // Disable realtime view update if canvas is not supported.\r\n\r\n    if (!env.canvasSupported) {\r\n      thisOption.realtime = false;\r\n    }\r\n\r\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\r\n    this.textStyleModel = this.getModel('textStyle');\r\n    this.resetItemSize();\r\n    this.completeVisualOption();\r\n  };\r\n  /**\r\n   * @protected\r\n   */\r\n\r\n\r\n  VisualMapModel.prototype.resetVisual = function (supplementVisualOption) {\r\n    var stateList = this.stateList;\r\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\r\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\r\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\r\n  };\r\n  /**\r\n   * @public\r\n   */\r\n\r\n\r\n  VisualMapModel.prototype.getItemSymbol = function () {\r\n    return null;\r\n  };\r\n  /**\r\n   * @protected\r\n   * @return {Array.<number>} An array of series indices.\r\n   */\r\n\r\n\r\n  VisualMapModel.prototype.getTargetSeriesIndices = function () {\r\n    var optionSeriesIndex = this.option.seriesIndex;\r\n    var seriesIndices = [];\r\n\r\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\r\n      this.ecModel.eachSeries(function (seriesModel, index) {\r\n        seriesIndices.push(index);\r\n      });\r\n    } else {\r\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\r\n    }\r\n\r\n    return seriesIndices;\r\n  };\r\n  /**\r\n   * @public\r\n   */\r\n\r\n\r\n  VisualMapModel.prototype.eachTargetSeries = function (callback, context) {\r\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\r\n      var seriesModel = this.ecModel.getSeriesByIndex(seriesIndex);\r\n\r\n      if (seriesModel) {\r\n        callback.call(context, seriesModel);\r\n      }\r\n    }, this);\r\n  };\r\n  /**\r\n   * @pubilc\r\n   */\r\n\r\n\r\n  VisualMapModel.prototype.isTargetSeries = function (seriesModel) {\r\n    var is = false;\r\n    this.eachTargetSeries(function (model) {\r\n      model === seriesModel && (is = true);\r\n    });\r\n    return is;\r\n  };\r\n  /**\r\n   * @example\r\n   * this.formatValueText(someVal); // format single numeric value to text.\r\n   * this.formatValueText(someVal, true); // format single category value to text.\r\n   * this.formatValueText([min, max]); // format numeric min-max to text.\r\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\r\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\r\n   *\r\n   * @param value Real value, or this.dataBound[0 or 1].\r\n   * @param isCategory Only available when value is number.\r\n   * @param edgeSymbols Open-close symbol when value is interval.\r\n   * @protected\r\n   */\r\n\r\n\r\n  VisualMapModel.prototype.formatValueText = function (value, isCategory, edgeSymbols) {\r\n    var option = this.option;\r\n    var precision = option.precision;\r\n    var dataBound = this.dataBound;\r\n    var formatter = option.formatter;\r\n    var isMinMax;\r\n    edgeSymbols = edgeSymbols || ['<', '>'];\r\n\r\n    if (zrUtil.isArray(value)) {\r\n      value = value.slice();\r\n      isMinMax = true;\r\n    }\r\n\r\n    var textValue = isCategory ? value // Value is string when isCategory\r\n    : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\r\n\r\n    if (zrUtil.isString(formatter)) {\r\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\r\n    } else if (zrUtil.isFunction(formatter)) {\r\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\r\n    }\r\n\r\n    if (isMinMax) {\r\n      if (value[0] === dataBound[0]) {\r\n        return edgeSymbols[0] + ' ' + textValue[1];\r\n      } else if (value[1] === dataBound[1]) {\r\n        return edgeSymbols[1] + ' ' + textValue[0];\r\n      } else {\r\n        return textValue[0] + ' - ' + textValue[1];\r\n      }\r\n    } else {\r\n      // Format single value (includes category case).\r\n      return textValue;\r\n    }\r\n\r\n    function toFixed(val) {\r\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\r\n    }\r\n  };\r\n  /**\r\n   * @protected\r\n   */\r\n\r\n\r\n  VisualMapModel.prototype.resetExtent = function () {\r\n    var thisOption = this.option; // Can not calculate data extent by data here.\r\n    // Because series and data may be modified in processing stage.\r\n    // So we do not support the feature \"auto min/max\".\r\n\r\n    var extent = asc([thisOption.min, thisOption.max]);\r\n    this._dataExtent = extent;\r\n  };\r\n  /**\r\n   * PENDING:\r\n   * delete this method if no outer usage.\r\n   *\r\n   * Return  Concrete dimention. If return null/undefined, no dimension used.\r\n   */\r\n  // getDataDimension(data: SeriesData) {\r\n  //     const optDim = this.option.dimension;\r\n  //     if (optDim != null) {\r\n  //         return data.getDimension(optDim);\r\n  //     }\r\n  //     const dimNames = data.dimensions;\r\n  //     for (let i = dimNames.length - 1; i >= 0; i--) {\r\n  //         const dimName = dimNames[i];\r\n  //         const dimInfo = data.getDimensionInfo(dimName);\r\n  //         if (!dimInfo.isCalculationCoord) {\r\n  //             return dimName;\r\n  //         }\r\n  //     }\r\n  // }\r\n\r\n\r\n  VisualMapModel.prototype.getDataDimensionIndex = function (data) {\r\n    var optDim = this.option.dimension;\r\n\r\n    if (optDim != null) {\r\n      return data.getDimensionIndex(optDim);\r\n    }\r\n\r\n    var dimNames = data.dimensions;\r\n\r\n    for (var i = dimNames.length - 1; i >= 0; i--) {\r\n      var dimName = dimNames[i];\r\n      var dimInfo = data.getDimensionInfo(dimName);\r\n\r\n      if (!dimInfo.isCalculationCoord) {\r\n        return dimInfo.storeDimIndex;\r\n      }\r\n    }\r\n  };\r\n\r\n  VisualMapModel.prototype.getExtent = function () {\r\n    return this._dataExtent.slice();\r\n  };\r\n\r\n  VisualMapModel.prototype.completeVisualOption = function () {\r\n    var ecModel = this.ecModel;\r\n    var thisOption = this.option;\r\n    var base = {\r\n      inRange: thisOption.inRange,\r\n      outOfRange: thisOption.outOfRange\r\n    };\r\n    var target = thisOption.target || (thisOption.target = {});\r\n    var controller = thisOption.controller || (thisOption.controller = {});\r\n    zrUtil.merge(target, base); // Do not override\r\n\r\n    zrUtil.merge(controller, base); // Do not override\r\n\r\n    var isCategory = this.isCategory();\r\n    completeSingle.call(this, target);\r\n    completeSingle.call(this, controller);\r\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\r\n\r\n    completeController.call(this, controller);\r\n\r\n    function completeSingle(base) {\r\n      // Compatible with ec2 dataRange.color.\r\n      // The mapping order of dataRange.color is: [high value, ..., low value]\r\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\r\n      // Notice: ec2 has no inverse.\r\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\r\n      // So adding color only when no inRange defined.\r\n      && !base.inRange) {\r\n        base.inRange = {\r\n          color: thisOption.color.slice().reverse()\r\n        };\r\n      } // Compatible with previous logic, always give a defautl color, otherwise\r\n      // simple config with no inRange and outOfRange will not work.\r\n      // Originally we use visualMap.color as the default color, but setOption at\r\n      // the second time the default color will be erased. So we change to use\r\n      // constant DEFAULT_COLOR.\r\n      // If user do not want the default color, set inRange: {color: null}.\r\n\r\n\r\n      base.inRange = base.inRange || {\r\n        color: ecModel.get('gradientColor')\r\n      };\r\n    }\r\n\r\n    function completeInactive(base, stateExist, stateAbsent) {\r\n      var optExist = base[stateExist];\r\n      var optAbsent = base[stateAbsent];\r\n\r\n      if (optExist && !optAbsent) {\r\n        optAbsent = base[stateAbsent] = {};\r\n        each(optExist, function (visualData, visualType) {\r\n          if (!VisualMapping.isValidType(visualType)) {\r\n            return;\r\n          }\r\n\r\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\r\n\r\n          if (defa != null) {\r\n            optAbsent[visualType] = defa; // Compatibable with ec2:\r\n            // Only inactive color to rgba(0,0,0,0) can not\r\n            // make label transparent, so use opacity also.\r\n\r\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\r\n              optAbsent.opacity = [0, 0];\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    function completeController(controller) {\r\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\r\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\r\n      var inactiveColor = this.get('inactiveColor');\r\n      var itemSymbol = this.getItemSymbol();\r\n      var defaultSymbol = itemSymbol || 'roundRect';\r\n      each(this.stateList, function (state) {\r\n        var itemSize = this.itemSize;\r\n        var visuals = controller[state]; // Set inactive color for controller if no other color\r\n        // attr (like colorAlpha) specified.\r\n\r\n        if (!visuals) {\r\n          visuals = controller[state] = {\r\n            color: isCategory ? inactiveColor : [inactiveColor]\r\n          };\r\n        } // Consistent symbol and symbolSize if not specified.\r\n\r\n\r\n        if (visuals.symbol == null) {\r\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? defaultSymbol : [defaultSymbol]);\r\n        }\r\n\r\n        if (visuals.symbolSize == null) {\r\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\r\n        } // Filter none\r\n\r\n\r\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\r\n          return symbol === 'none' ? defaultSymbol : symbol;\r\n        }); // Normalize symbolSize\r\n\r\n        var symbolSize = visuals.symbolSize;\r\n\r\n        if (symbolSize != null) {\r\n          var max_1 = -Infinity; // symbolSize can be object when categories defined.\r\n\r\n          eachVisual(symbolSize, function (value) {\r\n            value > max_1 && (max_1 = value);\r\n          });\r\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\r\n            return linearMap(value, [0, max_1], [0, itemSize[0]], true);\r\n          });\r\n        }\r\n      }, this);\r\n    }\r\n  };\r\n\r\n  VisualMapModel.prototype.resetItemSize = function () {\r\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\r\n  };\r\n\r\n  VisualMapModel.prototype.isCategory = function () {\r\n    return !!this.option.categories;\r\n  };\r\n  /**\r\n   * @public\r\n   * @abstract\r\n   */\r\n\r\n\r\n  VisualMapModel.prototype.setSelected = function (selected) {};\r\n\r\n  VisualMapModel.prototype.getSelected = function () {\r\n    return null;\r\n  };\r\n  /**\r\n   * @public\r\n   * @abstract\r\n   */\r\n\r\n\r\n  VisualMapModel.prototype.getValueState = function (value) {\r\n    return null;\r\n  };\r\n  /**\r\n   * FIXME\r\n   * Do not publish to thirt-part-dev temporarily\r\n   * util the interface is stable. (Should it return\r\n   * a function but not visual meta?)\r\n   *\r\n   * @pubilc\r\n   * @abstract\r\n   * @param getColorVisual\r\n   *        params: value, valueState\r\n   *        return: color\r\n   * @return {Object} visualMeta\r\n   *        should includes {stops, outerColors}\r\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\r\n   */\r\n\r\n\r\n  VisualMapModel.prototype.getVisualMeta = function (getColorVisual) {\r\n    return null;\r\n  };\r\n\r\n  VisualMapModel.type = 'visualMap';\r\n  VisualMapModel.dependencies = ['series'];\r\n  VisualMapModel.defaultOption = {\r\n    show: true,\r\n    zlevel: 0,\r\n    z: 4,\r\n    seriesIndex: 'all',\r\n    min: 0,\r\n    max: 200,\r\n    left: 0,\r\n    right: null,\r\n    top: null,\r\n    bottom: 0,\r\n    itemWidth: null,\r\n    itemHeight: null,\r\n    inverse: false,\r\n    orient: 'vertical',\r\n    backgroundColor: 'rgba(0,0,0,0)',\r\n    borderColor: '#ccc',\r\n    contentColor: '#5793f3',\r\n    inactiveColor: '#aaa',\r\n    borderWidth: 0,\r\n    padding: 5,\r\n    // \u63A5\u53D7\u6570\u7EC4\u5206\u522B\u8BBE\u5B9A\u4E0A\u53F3\u4E0B\u5DE6\u8FB9\u8DDD\uFF0C\u540Ccss\r\n    textGap: 10,\r\n    precision: 0,\r\n    textStyle: {\r\n      color: '#333' // \u503C\u57DF\u6587\u5B57\u989C\u8272\r\n\r\n    }\r\n  };\r\n  return VisualMapModel;\r\n}(ComponentModel);\r\n\r\nexport default VisualMapModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport VisualMapModel from './VisualMapModel';\r\nimport * as numberUtil from '../../util/number';\r\nimport { inheritDefaultOption } from '../../util/component'; // Constant\r\n\r\nvar DEFAULT_BAR_BOUND = [20, 140];\r\n\r\nvar ContinuousModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ContinuousModel, _super);\r\n\r\n  function ContinuousModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = ContinuousModel.type;\r\n    return _this;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  ContinuousModel.prototype.optionUpdated = function (newOption, isInit) {\r\n    _super.prototype.optionUpdated.apply(this, arguments);\r\n\r\n    this.resetExtent();\r\n    this.resetVisual(function (mappingOption) {\r\n      mappingOption.mappingMethod = 'linear';\r\n      mappingOption.dataExtent = this.getExtent();\r\n    });\r\n\r\n    this._resetRange();\r\n  };\r\n  /**\r\n   * @protected\r\n   * @override\r\n   */\r\n\r\n\r\n  ContinuousModel.prototype.resetItemSize = function () {\r\n    _super.prototype.resetItemSize.apply(this, arguments);\r\n\r\n    var itemSize = this.itemSize;\r\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\r\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\r\n  };\r\n  /**\r\n   * @private\r\n   */\r\n\r\n\r\n  ContinuousModel.prototype._resetRange = function () {\r\n    var dataExtent = this.getExtent();\r\n    var range = this.option.range;\r\n\r\n    if (!range || range.auto) {\r\n      // `range` should always be array (so we dont use other\r\n      // value like 'auto') for user-friend. (consider getOption).\r\n      dataExtent.auto = 1;\r\n      this.option.range = dataExtent;\r\n    } else if (zrUtil.isArray(range)) {\r\n      if (range[0] > range[1]) {\r\n        range.reverse();\r\n      }\r\n\r\n      range[0] = Math.max(range[0], dataExtent[0]);\r\n      range[1] = Math.min(range[1], dataExtent[1]);\r\n    }\r\n  };\r\n  /**\r\n   * @protected\r\n   * @override\r\n   */\r\n\r\n\r\n  ContinuousModel.prototype.completeVisualOption = function () {\r\n    _super.prototype.completeVisualOption.apply(this, arguments);\r\n\r\n    zrUtil.each(this.stateList, function (state) {\r\n      var symbolSize = this.option.controller[state].symbolSize;\r\n\r\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\r\n        symbolSize[0] = symbolSize[1] / 3; // For good looking.\r\n      }\r\n    }, this);\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  ContinuousModel.prototype.setSelected = function (selected) {\r\n    this.option.range = selected.slice();\r\n\r\n    this._resetRange();\r\n  };\r\n  /**\r\n   * @public\r\n   */\r\n\r\n\r\n  ContinuousModel.prototype.getSelected = function () {\r\n    var dataExtent = this.getExtent();\r\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\r\n\r\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\r\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\r\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\r\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\r\n    return dataInterval;\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  ContinuousModel.prototype.getValueState = function (value) {\r\n    var range = this.option.range;\r\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\r\n    // range[1] is processed likewise.\r\n\r\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\r\n  };\r\n\r\n  ContinuousModel.prototype.findTargetDataIndices = function (range) {\r\n    var result = [];\r\n    this.eachTargetSeries(function (seriesModel) {\r\n      var dataIndices = [];\r\n      var data = seriesModel.getData();\r\n      data.each(this.getDataDimensionIndex(data), function (value, dataIndex) {\r\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\r\n      }, this);\r\n      result.push({\r\n        seriesId: seriesModel.id,\r\n        dataIndex: dataIndices\r\n      });\r\n    }, this);\r\n    return result;\r\n  };\r\n  /**\r\n   * @implement\r\n   */\r\n\r\n\r\n  ContinuousModel.prototype.getVisualMeta = function (getColorVisual) {\r\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\r\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\r\n    var stops = [];\r\n\r\n    function setStop(value, valueState) {\r\n      stops.push({\r\n        value: value,\r\n        color: getColorVisual(value, valueState)\r\n      });\r\n    } // Format to: outOfRange -- inRange -- outOfRange.\r\n\r\n\r\n    var iIdx = 0;\r\n    var oIdx = 0;\r\n    var iLen = iVals.length;\r\n    var oLen = oVals.length;\r\n\r\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\r\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\r\n      if (oVals[oIdx] < iVals[iIdx]) {\r\n        setStop(oVals[oIdx], 'outOfRange');\r\n      }\r\n    }\r\n\r\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\r\n      // If range is full, value beyond min, max will be clamped.\r\n      // make a singularity\r\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\r\n      setStop(iVals[iIdx], 'inRange');\r\n    }\r\n\r\n    for (var first = 1; oIdx < oLen; oIdx++) {\r\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\r\n        // make a singularity\r\n        if (first) {\r\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\r\n          first = 0;\r\n        }\r\n\r\n        setStop(oVals[oIdx], 'outOfRange');\r\n      }\r\n    }\r\n\r\n    var stopsLen = stops.length;\r\n    return {\r\n      stops: stops,\r\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\r\n    };\r\n  };\r\n\r\n  ContinuousModel.type = 'visualMap.continuous';\r\n  ContinuousModel.defaultOption = inheritDefaultOption(VisualMapModel.defaultOption, {\r\n    align: 'auto',\r\n    calculable: false,\r\n    hoverLink: true,\r\n    realtime: true,\r\n    handleIcon: 'path://M-11.39,9.77h0a3.5,3.5,0,0,1-3.5,3.5h-22a3.5,3.5,0,0,1-3.5-3.5h0a3.5,3.5,0,0,1,3.5-3.5h22A3.5,3.5,0,0,1-11.39,9.77Z',\r\n    handleSize: '120%',\r\n    handleStyle: {\r\n      borderColor: '#fff',\r\n      borderWidth: 1\r\n    },\r\n    indicatorIcon: 'circle',\r\n    indicatorSize: '50%',\r\n    indicatorStyle: {\r\n      borderColor: '#fff',\r\n      borderWidth: 2,\r\n      shadowBlur: 2,\r\n      shadowOffsetX: 1,\r\n      shadowOffsetY: 1,\r\n      shadowColor: 'rgba(0,0,0,0.2)'\r\n    } // emphasis: {\r\n    //     handleStyle: {\r\n    //         shadowBlur: 3,\r\n    //         shadowOffsetX: 1,\r\n    //         shadowOffsetY: 1,\r\n    //         shadowColor: 'rgba(0,0,0,0.2)'\r\n    //     }\r\n    // }\r\n\r\n  });\r\n  return ContinuousModel;\r\n}(VisualMapModel);\r\n\r\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\r\n  if (dataExtent[0] === dataExtent[1]) {\r\n    return dataExtent.slice();\r\n  } // When using colorHue mapping, it is not linear color any more.\r\n  // Moreover, canvas gradient seems not to be accurate linear.\r\n  // FIXME\r\n  // Should be arbitrary value 100? or based on pixel size?\r\n\r\n\r\n  var count = 200;\r\n  var step = (dataExtent[1] - dataExtent[0]) / count;\r\n  var value = dataExtent[0];\r\n  var stopValues = [];\r\n\r\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\r\n    stopValues.push(value);\r\n    value += step;\r\n  }\r\n\r\n  stopValues.push(dataExtent[1]);\r\n  return stopValues;\r\n}\r\n\r\nexport default ContinuousModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { Rect } from '../../util/graphic';\r\nimport * as formatUtil from '../../util/format';\r\nimport * as layout from '../../util/layout';\r\nimport VisualMapping from '../../visual/VisualMapping';\r\nimport ComponentView from '../../view/Component';\r\n\r\nvar VisualMapView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(VisualMapView, _super);\r\n\r\n  function VisualMapView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = VisualMapView.type;\r\n    _this.autoPositionValues = {\r\n      left: 1,\r\n      right: 1,\r\n      top: 1,\r\n      bottom: 1\r\n    };\r\n    return _this;\r\n  }\r\n\r\n  VisualMapView.prototype.init = function (ecModel, api) {\r\n    this.ecModel = ecModel;\r\n    this.api = api;\r\n  };\r\n  /**\r\n   * @protected\r\n   */\r\n\r\n\r\n  VisualMapView.prototype.render = function (visualMapModel, ecModel, api, payload // TODO: TYPE\r\n  ) {\r\n    this.visualMapModel = visualMapModel;\r\n\r\n    if (visualMapModel.get('show') === false) {\r\n      this.group.removeAll();\r\n      return;\r\n    }\r\n\r\n    this.doRender(visualMapModel, ecModel, api, payload);\r\n  };\r\n  /**\r\n   * @protected\r\n   */\r\n\r\n\r\n  VisualMapView.prototype.renderBackground = function (group) {\r\n    var visualMapModel = this.visualMapModel;\r\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\r\n    var rect = group.getBoundingRect();\r\n    group.add(new Rect({\r\n      z2: -1,\r\n      silent: true,\r\n      shape: {\r\n        x: rect.x - padding[3],\r\n        y: rect.y - padding[0],\r\n        width: rect.width + padding[3] + padding[1],\r\n        height: rect.height + padding[0] + padding[2]\r\n      },\r\n      style: {\r\n        fill: visualMapModel.get('backgroundColor'),\r\n        stroke: visualMapModel.get('borderColor'),\r\n        lineWidth: visualMapModel.get('borderWidth')\r\n      }\r\n    }));\r\n  };\r\n  /**\r\n   * @protected\r\n   * @param targetValue can be Infinity or -Infinity\r\n   * @param visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\r\n   * @param opts\r\n   * @param opts.forceState Specify state, instead of using getValueState method.\r\n   * @param opts.convertOpacityToAlpha For color gradient in controller widget.\r\n   * @return {*} Visual value.\r\n   */\r\n\r\n\r\n  VisualMapView.prototype.getControllerVisual = function (targetValue, visualCluster, opts) {\r\n    opts = opts || {};\r\n    var forceState = opts.forceState;\r\n    var visualMapModel = this.visualMapModel;\r\n    var visualObj = {}; // Default values.\r\n\r\n    if (visualCluster === 'color') {\r\n      var defaultColor = visualMapModel.get('contentColor');\r\n      visualObj.color = defaultColor;\r\n    }\r\n\r\n    function getter(key) {\r\n      return visualObj[key];\r\n    }\r\n\r\n    function setter(key, value) {\r\n      visualObj[key] = value;\r\n    }\r\n\r\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\r\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\r\n    zrUtil.each(visualTypes, function (type) {\r\n      var visualMapping = mappings[type];\r\n\r\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\r\n        type = 'colorAlpha';\r\n        visualMapping = mappings.__alphaForOpacity;\r\n      }\r\n\r\n      if (VisualMapping.dependsOn(type, visualCluster)) {\r\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\r\n      }\r\n    });\r\n    return visualObj[visualCluster];\r\n  };\r\n\r\n  VisualMapView.prototype.positionGroup = function (group) {\r\n    var model = this.visualMapModel;\r\n    var api = this.api;\r\n    layout.positionElement(group, model.getBoxLayoutParams(), {\r\n      width: api.getWidth(),\r\n      height: api.getHeight()\r\n    });\r\n  };\r\n\r\n  VisualMapView.prototype.doRender = function (visualMapModel, ecModel, api, payload) {};\r\n\r\n  VisualMapView.type = 'visualMap';\r\n  return VisualMapView;\r\n}(ComponentView);\r\n\r\nexport default VisualMapView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { getLayoutRect } from '../../util/layout';\r\nvar paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\r\n/**\r\n * @param visualMapModel\r\n * @param api\r\n * @param itemSize always [short, long]\r\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\r\n */\r\n\r\nexport function getItemAlign(visualMapModel, api, itemSize) {\r\n  var modelOption = visualMapModel.option;\r\n  var itemAlign = modelOption.align;\r\n\r\n  if (itemAlign != null && itemAlign !== 'auto') {\r\n    return itemAlign;\r\n  } // Auto decision align.\r\n\r\n\r\n  var ecSize = {\r\n    width: api.getWidth(),\r\n    height: api.getHeight()\r\n  };\r\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\r\n  var reals = paramsSet[realIndex];\r\n  var fakeValue = [0, null, 10];\r\n  var layoutInput = {};\r\n\r\n  for (var i = 0; i < 3; i++) {\r\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\r\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\r\n  }\r\n\r\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\r\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\r\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\r\n}\r\n/**\r\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\r\n * dataIndexInside means filtered index.\r\n */\r\n// TODO: TYPE more specified payload types.\r\n\r\nexport function makeHighDownBatch(batch, visualMapModel) {\r\n  zrUtil.each(batch || [], function (batchItem) {\r\n    if (batchItem.dataIndex != null) {\r\n      batchItem.dataIndexInside = batchItem.dataIndex;\r\n      batchItem.dataIndex = null;\r\n    }\r\n\r\n    batchItem.highlightKey = 'visualMap' + (visualMapModel ? visualMapModel.componentIndex : '');\r\n  });\r\n  return batch;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport LinearGradient from 'zrender/lib/graphic/LinearGradient';\r\nimport * as eventTool from 'zrender/lib/core/event';\r\nimport VisualMapView from './VisualMapView';\r\nimport * as graphic from '../../util/graphic';\r\nimport * as numberUtil from '../../util/number';\r\nimport sliderMove from '../helper/sliderMove';\r\nimport * as helper from './helper';\r\nimport * as modelUtil from '../../util/model';\r\nimport { parsePercent } from 'zrender/lib/contain/text';\r\nimport { setAsHighDownDispatcher } from '../../util/states';\r\nimport { createSymbol } from '../../util/symbol';\r\nimport ZRImage from 'zrender/lib/graphic/Image';\r\nimport { getECData } from '../../util/innerStore';\r\nvar linearMap = numberUtil.linearMap;\r\nvar each = zrUtil.each;\r\nvar mathMin = Math.min;\r\nvar mathMax = Math.max; // Arbitrary value\r\n\r\nvar HOVER_LINK_SIZE = 12;\r\nvar HOVER_LINK_OUT = 6; // Notice:\r\n// Any \"interval\" should be by the order of [low, high].\r\n// \"handle0\" (handleIndex === 0) maps to\r\n// low data value: this._dataInterval[0] and has low coord.\r\n// \"handle1\" (handleIndex === 1) maps to\r\n// high data value: this._dataInterval[1] and has high coord.\r\n// The logic of transform is implemented in this._createBarGroup.\r\n\r\nvar ContinuousView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(ContinuousView, _super);\r\n\r\n  function ContinuousView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = ContinuousView.type;\r\n    _this._shapes = {};\r\n    _this._dataInterval = [];\r\n    _this._handleEnds = [];\r\n    _this._hoverLinkDataIndices = [];\r\n    return _this;\r\n  }\r\n\r\n  ContinuousView.prototype.doRender = function (visualMapModel, ecModel, api, payload) {\r\n    this._api = api;\r\n\r\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\r\n      this._buildView();\r\n    }\r\n  };\r\n\r\n  ContinuousView.prototype._buildView = function () {\r\n    this.group.removeAll();\r\n    var visualMapModel = this.visualMapModel;\r\n    var thisGroup = this.group;\r\n    this._orient = visualMapModel.get('orient');\r\n    this._useHandle = visualMapModel.get('calculable');\r\n\r\n    this._resetInterval();\r\n\r\n    this._renderBar(thisGroup);\r\n\r\n    var dataRangeText = visualMapModel.get('text');\r\n\r\n    this._renderEndsText(thisGroup, dataRangeText, 0);\r\n\r\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\r\n\r\n\r\n    this._updateView(true); // After updating view, inner shapes is built completely,\r\n    // and then background can be rendered.\r\n\r\n\r\n    this.renderBackground(thisGroup); // Real update view\r\n\r\n    this._updateView();\r\n\r\n    this._enableHoverLinkToSeries();\r\n\r\n    this._enableHoverLinkFromSeries();\r\n\r\n    this.positionGroup(thisGroup);\r\n  };\r\n\r\n  ContinuousView.prototype._renderEndsText = function (group, dataRangeText, endsIndex) {\r\n    if (!dataRangeText) {\r\n      return;\r\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\r\n\r\n\r\n    var text = dataRangeText[1 - endsIndex];\r\n    text = text != null ? text + '' : '';\r\n    var visualMapModel = this.visualMapModel;\r\n    var textGap = visualMapModel.get('textGap');\r\n    var itemSize = visualMapModel.itemSize;\r\n    var barGroup = this._shapes.mainGroup;\r\n\r\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\r\n\r\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\r\n\r\n    var orient = this._orient;\r\n    var textStyleModel = this.visualMapModel.textStyleModel;\r\n    this.group.add(new graphic.Text({\r\n      style: {\r\n        x: position[0],\r\n        y: position[1],\r\n        verticalAlign: orient === 'horizontal' ? 'middle' : align,\r\n        align: orient === 'horizontal' ? align : 'center',\r\n        text: text,\r\n        font: textStyleModel.getFont(),\r\n        fill: textStyleModel.getTextColor()\r\n      }\r\n    }));\r\n  };\r\n\r\n  ContinuousView.prototype._renderBar = function (targetGroup) {\r\n    var visualMapModel = this.visualMapModel;\r\n    var shapes = this._shapes;\r\n    var itemSize = visualMapModel.itemSize;\r\n    var orient = this._orient;\r\n    var useHandle = this._useHandle;\r\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\r\n\r\n    var mainGroup = shapes.mainGroup = this._createBarGroup(itemAlign);\r\n\r\n    var gradientBarGroup = new graphic.Group();\r\n    mainGroup.add(gradientBarGroup); // Bar\r\n\r\n    gradientBarGroup.add(shapes.outOfRange = createPolygon());\r\n    gradientBarGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true))); // A border radius clip.\r\n\r\n    gradientBarGroup.setClipPath(new graphic.Rect({\r\n      shape: {\r\n        x: 0,\r\n        y: 0,\r\n        width: itemSize[0],\r\n        height: itemSize[1],\r\n        r: 3\r\n      }\r\n    }));\r\n    var textRect = visualMapModel.textStyleModel.getTextRect('\u56FD');\r\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\r\n\r\n    if (useHandle) {\r\n      shapes.handleThumbs = [];\r\n      shapes.handleLabels = [];\r\n      shapes.handleLabelPoints = [];\r\n\r\n      this._createHandle(visualMapModel, mainGroup, 0, itemSize, textSize, orient);\r\n\r\n      this._createHandle(visualMapModel, mainGroup, 1, itemSize, textSize, orient);\r\n    }\r\n\r\n    this._createIndicator(visualMapModel, mainGroup, itemSize, textSize, orient);\r\n\r\n    targetGroup.add(mainGroup);\r\n  };\r\n\r\n  ContinuousView.prototype._createHandle = function (visualMapModel, mainGroup, handleIndex, itemSize, textSize, orient) {\r\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\r\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\r\n    var handleSize = parsePercent(visualMapModel.get('handleSize'), itemSize[0]);\r\n    var handleThumb = createSymbol(visualMapModel.get('handleIcon'), -handleSize / 2, -handleSize / 2, handleSize, handleSize, null, true);\r\n    var cursor = getCursor(this._orient);\r\n    handleThumb.attr({\r\n      cursor: cursor,\r\n      draggable: true,\r\n      drift: onDrift,\r\n      ondragend: onDragEnd,\r\n      onmousemove: function (e) {\r\n        eventTool.stop(e.event);\r\n      }\r\n    });\r\n    handleThumb.x = itemSize[0] / 2;\r\n    handleThumb.useStyle(visualMapModel.getModel('handleStyle').getItemStyle());\r\n    handleThumb.setStyle({\r\n      strokeNoScale: true,\r\n      strokeFirst: true\r\n    });\r\n    handleThumb.style.lineWidth *= 2;\r\n    handleThumb.ensureState('emphasis').style = visualMapModel.getModel(['emphasis', 'handleStyle']).getItemStyle();\r\n    setAsHighDownDispatcher(handleThumb, true);\r\n    mainGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\r\n    // transform (orient/inverse). So label is built separately but not\r\n    // use zrender/graphic/helper/RectText, and is located based on view\r\n    // group (according to handleLabelPoint) but not barGroup.\r\n\r\n    var textStyleModel = this.visualMapModel.textStyleModel;\r\n    var handleLabel = new graphic.Text({\r\n      cursor: cursor,\r\n      draggable: true,\r\n      drift: onDrift,\r\n      onmousemove: function (e) {\r\n        // Fot mobile devicem, prevent screen slider on the button.\r\n        eventTool.stop(e.event);\r\n      },\r\n      ondragend: onDragEnd,\r\n      style: {\r\n        x: 0,\r\n        y: 0,\r\n        text: '',\r\n        font: textStyleModel.getFont(),\r\n        fill: textStyleModel.getTextColor()\r\n      }\r\n    });\r\n    handleLabel.ensureState('blur').style = {\r\n      opacity: 0.1\r\n    };\r\n    handleLabel.stateTransition = {\r\n      duration: 200\r\n    };\r\n    this.group.add(handleLabel);\r\n    var handleLabelPoint = [handleSize, 0];\r\n    var shapes = this._shapes;\r\n    shapes.handleThumbs[handleIndex] = handleThumb;\r\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\r\n    shapes.handleLabels[handleIndex] = handleLabel;\r\n  };\r\n\r\n  ContinuousView.prototype._createIndicator = function (visualMapModel, mainGroup, itemSize, textSize, orient) {\r\n    var scale = parsePercent(visualMapModel.get('indicatorSize'), itemSize[0]);\r\n    var indicator = createSymbol(visualMapModel.get('indicatorIcon'), -scale / 2, -scale / 2, scale, scale, null, true);\r\n    indicator.attr({\r\n      cursor: 'move',\r\n      invisible: true,\r\n      silent: true,\r\n      x: itemSize[0] / 2\r\n    });\r\n    var indicatorStyle = visualMapModel.getModel('indicatorStyle').getItemStyle();\r\n\r\n    if (indicator instanceof ZRImage) {\r\n      var pathStyle = indicator.style;\r\n      indicator.useStyle(zrUtil.extend({\r\n        // TODO other properties like x, y ?\r\n        image: pathStyle.image,\r\n        x: pathStyle.x,\r\n        y: pathStyle.y,\r\n        width: pathStyle.width,\r\n        height: pathStyle.height\r\n      }, indicatorStyle));\r\n    } else {\r\n      indicator.useStyle(indicatorStyle);\r\n    }\r\n\r\n    mainGroup.add(indicator);\r\n    var textStyleModel = this.visualMapModel.textStyleModel;\r\n    var indicatorLabel = new graphic.Text({\r\n      silent: true,\r\n      invisible: true,\r\n      style: {\r\n        x: 0,\r\n        y: 0,\r\n        text: '',\r\n        font: textStyleModel.getFont(),\r\n        fill: textStyleModel.getTextColor()\r\n      }\r\n    });\r\n    this.group.add(indicatorLabel);\r\n    var indicatorLabelPoint = [(orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT) + itemSize[0] / 2, 0];\r\n    var shapes = this._shapes;\r\n    shapes.indicator = indicator;\r\n    shapes.indicatorLabel = indicatorLabel;\r\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\r\n    this._firstShowIndicator = true;\r\n  };\r\n\r\n  ContinuousView.prototype._dragHandle = function (handleIndex, isEnd, // dx is event from ondragend if isEnd is true. It's not used\r\n  dx, dy) {\r\n    if (!this._useHandle) {\r\n      return;\r\n    }\r\n\r\n    this._dragging = !isEnd;\r\n\r\n    if (!isEnd) {\r\n      // Transform dx, dy to bar coordination.\r\n      var vertex = this._applyTransform([dx, dy], this._shapes.mainGroup, true);\r\n\r\n      this._updateInterval(handleIndex, vertex[1]);\r\n\r\n      this._hideIndicator(); // Considering realtime, update view should be executed\r\n      // before dispatch action.\r\n\r\n\r\n      this._updateView();\r\n    } // dragEnd do not dispatch action when realtime.\r\n\r\n\r\n    if (isEnd === !this.visualMapModel.get('realtime')) {\r\n      // jshint ignore:line\r\n      this.api.dispatchAction({\r\n        type: 'selectDataRange',\r\n        from: this.uid,\r\n        visualMapId: this.visualMapModel.id,\r\n        selected: this._dataInterval.slice()\r\n      });\r\n    }\r\n\r\n    if (isEnd) {\r\n      !this._hovering && this._clearHoverLinkToSeries();\r\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\r\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\r\n    }\r\n  };\r\n\r\n  ContinuousView.prototype._resetInterval = function () {\r\n    var visualMapModel = this.visualMapModel;\r\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\r\n    var dataExtent = visualMapModel.getExtent();\r\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\r\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\r\n  };\r\n  /**\r\n   * @private\r\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\r\n   * @param {number} dx\r\n   * @param {number} dy\r\n   */\r\n\r\n\r\n  ContinuousView.prototype._updateInterval = function (handleIndex, delta) {\r\n    delta = delta || 0;\r\n    var visualMapModel = this.visualMapModel;\r\n    var handleEnds = this._handleEnds;\r\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\r\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\r\n    0);\r\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\r\n\r\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\r\n  };\r\n\r\n  ContinuousView.prototype._updateView = function (forSketch) {\r\n    var visualMapModel = this.visualMapModel;\r\n    var dataExtent = visualMapModel.getExtent();\r\n    var shapes = this._shapes;\r\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\r\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\r\n\r\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\r\n\r\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\r\n\r\n    shapes.inRange.setStyle({\r\n      fill: visualInRange.barColor // opacity: visualInRange.opacity\r\n\r\n    }).setShape('points', visualInRange.barPoints);\r\n    shapes.outOfRange.setStyle({\r\n      fill: visualOutOfRange.barColor // opacity: visualOutOfRange.opacity\r\n\r\n    }).setShape('points', visualOutOfRange.barPoints);\r\n\r\n    this._updateHandle(inRangeHandleEnds, visualInRange);\r\n  };\r\n\r\n  ContinuousView.prototype._createBarVisual = function (dataInterval, dataExtent, handleEnds, forceState) {\r\n    var opts = {\r\n      forceState: forceState,\r\n      convertOpacityToAlpha: true\r\n    };\r\n\r\n    var colorStops = this._makeColorGradient(dataInterval, opts);\r\n\r\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\r\n\r\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\r\n\r\n    return {\r\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\r\n      barPoints: barPoints,\r\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\r\n    };\r\n  };\r\n\r\n  ContinuousView.prototype._makeColorGradient = function (dataInterval, opts) {\r\n    // Considering colorHue, which is not linear, so we have to sample\r\n    // to calculate gradient color stops, but not only caculate head\r\n    // and tail.\r\n    var sampleNumber = 100; // Arbitrary value.\r\n\r\n    var colorStops = [];\r\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\r\n    colorStops.push({\r\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\r\n      offset: 0\r\n    });\r\n\r\n    for (var i = 1; i < sampleNumber; i++) {\r\n      var currValue = dataInterval[0] + step * i;\r\n\r\n      if (currValue > dataInterval[1]) {\r\n        break;\r\n      }\r\n\r\n      colorStops.push({\r\n        color: this.getControllerVisual(currValue, 'color', opts),\r\n        offset: i / sampleNumber\r\n      });\r\n    }\r\n\r\n    colorStops.push({\r\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\r\n      offset: 1\r\n    });\r\n    return colorStops;\r\n  };\r\n\r\n  ContinuousView.prototype._createBarPoints = function (handleEnds, symbolSizes) {\r\n    var itemSize = this.visualMapModel.itemSize;\r\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\r\n  };\r\n\r\n  ContinuousView.prototype._createBarGroup = function (itemAlign) {\r\n    var orient = this._orient;\r\n    var inverse = this.visualMapModel.get('inverse');\r\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\r\n      scaleX: itemAlign === 'bottom' ? 1 : -1,\r\n      rotation: Math.PI / 2\r\n    } : orient === 'horizontal' && inverse ? {\r\n      scaleX: itemAlign === 'bottom' ? -1 : 1,\r\n      rotation: -Math.PI / 2\r\n    } : orient === 'vertical' && !inverse ? {\r\n      scaleX: itemAlign === 'left' ? 1 : -1,\r\n      scaleY: -1\r\n    } : {\r\n      scaleX: itemAlign === 'left' ? 1 : -1\r\n    });\r\n  };\r\n\r\n  ContinuousView.prototype._updateHandle = function (handleEnds, visualInRange) {\r\n    if (!this._useHandle) {\r\n      return;\r\n    }\r\n\r\n    var shapes = this._shapes;\r\n    var visualMapModel = this.visualMapModel;\r\n    var handleThumbs = shapes.handleThumbs;\r\n    var handleLabels = shapes.handleLabels;\r\n    var itemSize = visualMapModel.itemSize;\r\n    var dataExtent = visualMapModel.getExtent();\r\n    each([0, 1], function (handleIndex) {\r\n      var handleThumb = handleThumbs[handleIndex];\r\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\r\n      handleThumb.y = handleEnds[handleIndex];\r\n      var val = linearMap(handleEnds[handleIndex], [0, itemSize[1]], dataExtent, true);\r\n      var symbolSize = this.getControllerVisual(val, 'symbolSize');\r\n      handleThumb.scaleX = handleThumb.scaleY = symbolSize / itemSize[0];\r\n      handleThumb.x = itemSize[0] - symbolSize / 2; // Update handle label position.\r\n\r\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\r\n      handleLabels[handleIndex].setStyle({\r\n        x: textPoint[0],\r\n        y: textPoint[1],\r\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\r\n        verticalAlign: 'middle',\r\n        align: this._orient === 'vertical' ? this._applyTransform('left', shapes.mainGroup) : 'center'\r\n      });\r\n    }, this);\r\n  };\r\n\r\n  ContinuousView.prototype._showIndicator = function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\r\n    var visualMapModel = this.visualMapModel;\r\n    var dataExtent = visualMapModel.getExtent();\r\n    var itemSize = visualMapModel.itemSize;\r\n    var sizeExtent = [0, itemSize[1]];\r\n    var shapes = this._shapes;\r\n    var indicator = shapes.indicator;\r\n\r\n    if (!indicator) {\r\n      return;\r\n    }\r\n\r\n    indicator.attr('invisible', false);\r\n    var opts = {\r\n      convertOpacityToAlpha: true\r\n    };\r\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\r\n    var symbolSize = this.getControllerVisual(cursorValue, 'symbolSize');\r\n    var y = linearMap(cursorValue, dataExtent, sizeExtent, true);\r\n    var x = itemSize[0] - symbolSize / 2;\r\n    var oldIndicatorPos = {\r\n      x: indicator.x,\r\n      y: indicator.y\r\n    }; // Update handle label position.\r\n\r\n    indicator.y = y;\r\n    indicator.x = x;\r\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\r\n    var indicatorLabel = shapes.indicatorLabel;\r\n    indicatorLabel.attr('invisible', false);\r\n\r\n    var align = this._applyTransform('left', shapes.mainGroup);\r\n\r\n    var orient = this._orient;\r\n    var isHorizontal = orient === 'horizontal';\r\n    indicatorLabel.setStyle({\r\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\r\n      verticalAlign: isHorizontal ? align : 'middle',\r\n      align: isHorizontal ? 'center' : align\r\n    });\r\n    var indicatorNewProps = {\r\n      x: x,\r\n      y: y,\r\n      style: {\r\n        fill: color\r\n      }\r\n    };\r\n    var labelNewProps = {\r\n      style: {\r\n        x: textPoint[0],\r\n        y: textPoint[1]\r\n      }\r\n    };\r\n\r\n    if (visualMapModel.ecModel.isAnimationEnabled() && !this._firstShowIndicator) {\r\n      var animationCfg = {\r\n        duration: 100,\r\n        easing: 'cubicInOut',\r\n        additive: true\r\n      };\r\n      indicator.x = oldIndicatorPos.x;\r\n      indicator.y = oldIndicatorPos.y;\r\n      indicator.animateTo(indicatorNewProps, animationCfg);\r\n      indicatorLabel.animateTo(labelNewProps, animationCfg);\r\n    } else {\r\n      indicator.attr(indicatorNewProps);\r\n      indicatorLabel.attr(labelNewProps);\r\n    }\r\n\r\n    this._firstShowIndicator = false;\r\n    var handleLabels = this._shapes.handleLabels;\r\n\r\n    if (handleLabels) {\r\n      for (var i = 0; i < handleLabels.length; i++) {\r\n        // Fade out handle labels.\r\n        // NOTE: Must use api enter/leave on emphasis/blur/select state. Or the global states manager will change it.\r\n        this._api.enterBlur(handleLabels[i]);\r\n      }\r\n    }\r\n  };\r\n\r\n  ContinuousView.prototype._enableHoverLinkToSeries = function () {\r\n    var self = this;\r\n\r\n    this._shapes.mainGroup.on('mousemove', function (e) {\r\n      self._hovering = true;\r\n\r\n      if (!self._dragging) {\r\n        var itemSize = self.visualMapModel.itemSize;\r\n\r\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.mainGroup, true, true); // For hover link show when hover handle, which might be\r\n        // below or upper than sizeExtent.\r\n\r\n\r\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\r\n\r\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\r\n      }\r\n    }).on('mouseout', function () {\r\n      // When mouse is out of handle, hoverLink still need\r\n      // to be displayed when realtime is set as false.\r\n      self._hovering = false;\r\n      !self._dragging && self._clearHoverLinkToSeries();\r\n    });\r\n  };\r\n\r\n  ContinuousView.prototype._enableHoverLinkFromSeries = function () {\r\n    var zr = this.api.getZr();\r\n\r\n    if (this.visualMapModel.option.hoverLink) {\r\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\r\n      zr.on('mouseout', this._hideIndicator, this);\r\n    } else {\r\n      this._clearHoverLinkFromSeries();\r\n    }\r\n  };\r\n\r\n  ContinuousView.prototype._doHoverLinkToSeries = function (cursorPos, hoverOnBar) {\r\n    var visualMapModel = this.visualMapModel;\r\n    var itemSize = visualMapModel.itemSize;\r\n\r\n    if (!visualMapModel.option.hoverLink) {\r\n      return;\r\n    }\r\n\r\n    var sizeExtent = [0, itemSize[1]];\r\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\r\n\r\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\r\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\r\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\r\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\r\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\r\n    // where china and india has very large population.\r\n\r\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\r\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\r\n    // otherwise labels overlap, especially when dragging.\r\n\r\n    if (hoverOnBar) {\r\n      if (valueRange[0] === -Infinity) {\r\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\r\n      } else if (valueRange[1] === Infinity) {\r\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\r\n      } else {\r\n        this._showIndicator(cursorValue, cursorValue, '\u2248 ', halfHoverLinkSize);\r\n      }\r\n    } // When realtime is set as false, handles, which are in barGroup,\r\n    // also trigger hoverLink, which help user to realize where they\r\n    // focus on when dragging. (see test/heatmap-large.html)\r\n    // When realtime is set as true, highlight will not show when hover\r\n    // handle, because the label on handle, which displays a exact value\r\n    // but not range, might mislead users.\r\n\r\n\r\n    var oldBatch = this._hoverLinkDataIndices;\r\n    var newBatch = [];\r\n\r\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\r\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\r\n    }\r\n\r\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\r\n\r\n    this._dispatchHighDown('downplay', helper.makeHighDownBatch(resultBatches[0], visualMapModel));\r\n\r\n    this._dispatchHighDown('highlight', helper.makeHighDownBatch(resultBatches[1], visualMapModel));\r\n  };\r\n\r\n  ContinuousView.prototype._hoverLinkFromSeriesMouseOver = function (e) {\r\n    var el = e.target;\r\n    var visualMapModel = this.visualMapModel;\r\n\r\n    if (!el || getECData(el).dataIndex == null) {\r\n      return;\r\n    }\r\n\r\n    var ecData = getECData(el);\r\n    var dataModel = this.ecModel.getSeriesByIndex(ecData.seriesIndex);\r\n\r\n    if (!visualMapModel.isTargetSeries(dataModel)) {\r\n      return;\r\n    }\r\n\r\n    var data = dataModel.getData(ecData.dataType);\r\n    var value = data.getStore().get(visualMapModel.getDataDimensionIndex(data), ecData.dataIndex);\r\n\r\n    if (!isNaN(value)) {\r\n      this._showIndicator(value, value);\r\n    }\r\n  };\r\n\r\n  ContinuousView.prototype._hideIndicator = function () {\r\n    var shapes = this._shapes;\r\n    shapes.indicator && shapes.indicator.attr('invisible', true);\r\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\r\n    var handleLabels = this._shapes.handleLabels;\r\n\r\n    if (handleLabels) {\r\n      for (var i = 0; i < handleLabels.length; i++) {\r\n        // Fade out handle labels.\r\n        // NOTE: Must use api enter/leave on emphasis/blur/select state. Or the global states manager will change it.\r\n        this._api.leaveBlur(handleLabels[i]);\r\n      }\r\n    }\r\n  };\r\n\r\n  ContinuousView.prototype._clearHoverLinkToSeries = function () {\r\n    this._hideIndicator();\r\n\r\n    var indices = this._hoverLinkDataIndices;\r\n\r\n    this._dispatchHighDown('downplay', helper.makeHighDownBatch(indices, this.visualMapModel));\r\n\r\n    indices.length = 0;\r\n  };\r\n\r\n  ContinuousView.prototype._clearHoverLinkFromSeries = function () {\r\n    this._hideIndicator();\r\n\r\n    var zr = this.api.getZr();\r\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\r\n    zr.off('mouseout', this._hideIndicator);\r\n  };\r\n\r\n  ContinuousView.prototype._applyTransform = function (vertex, element, inverse, global) {\r\n    var transform = graphic.getTransform(element, global ? null : this.group);\r\n    return zrUtil.isArray(vertex) ? graphic.applyTransform(vertex, transform, inverse) : graphic.transformDirection(vertex, transform, inverse);\r\n  }; // TODO: TYPE more specified payload types.\r\n\r\n\r\n  ContinuousView.prototype._dispatchHighDown = function (type, batch) {\r\n    batch && batch.length && this.api.dispatchAction({\r\n      type: type,\r\n      batch: batch\r\n    });\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  ContinuousView.prototype.dispose = function () {\r\n    this._clearHoverLinkFromSeries();\r\n\r\n    this._clearHoverLinkToSeries();\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  ContinuousView.prototype.remove = function () {\r\n    this._clearHoverLinkFromSeries();\r\n\r\n    this._clearHoverLinkToSeries();\r\n  };\r\n\r\n  ContinuousView.type = 'visualMap.continuous';\r\n  return ContinuousView;\r\n}(VisualMapView);\r\n\r\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\r\n  return new graphic.Polygon({\r\n    shape: {\r\n      points: points\r\n    },\r\n    draggable: !!onDrift,\r\n    cursor: cursor,\r\n    drift: onDrift,\r\n    onmousemove: function (e) {\r\n      // Fot mobile devicem, prevent screen slider on the button.\r\n      eventTool.stop(e.event);\r\n    },\r\n    ondragend: onDragEnd\r\n  });\r\n}\r\n\r\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\r\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\r\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\r\n\r\n  if (hoverLinkDataSize) {\r\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\r\n  }\r\n\r\n  return halfHoverLinkSize;\r\n}\r\n\r\nfunction useHoverLinkOnHandle(visualMapModel) {\r\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\r\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\r\n}\r\n\r\nfunction getCursor(orient) {\r\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\r\n}\r\n\r\nexport default ContinuousView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nexport var visualMapActionInfo = {\r\n  type: 'selectDataRange',\r\n  event: 'dataRangeSelected',\r\n  // FIXME use updateView appears wrong\r\n  update: 'update'\r\n};\r\nexport var visualMapActionHander = function (payload, ecModel) {\r\n  ecModel.eachComponent({\r\n    mainType: 'visualMap',\r\n    query: payload\r\n  }, function (model) {\r\n    model.setSelected(payload.selected);\r\n  });\r\n};", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport * as visualSolution from '../../visual/visualSolution';\r\nimport VisualMapping from '../../visual/VisualMapping';\r\nimport { getVisualFromData } from '../../visual/helper';\r\nexport var visualMapEncodingHandlers = [{\r\n  createOnAllSeries: true,\r\n  reset: function (seriesModel, ecModel) {\r\n    var resetDefines = [];\r\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\r\n      var pipelineContext = seriesModel.pipelineContext;\r\n\r\n      if (!visualMapModel.isTargetSeries(seriesModel) || pipelineContext && pipelineContext.large) {\r\n        return;\r\n      }\r\n\r\n      resetDefines.push(visualSolution.incrementalApplyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, zrUtil.bind(visualMapModel.getValueState, visualMapModel), visualMapModel.getDataDimensionIndex(seriesModel.getData())));\r\n    });\r\n    return resetDefines;\r\n  }\r\n}, // Only support color.\r\n{\r\n  createOnAllSeries: true,\r\n  reset: function (seriesModel, ecModel) {\r\n    var data = seriesModel.getData();\r\n    var visualMetaList = [];\r\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\r\n      if (visualMapModel.isTargetSeries(seriesModel)) {\r\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\r\n          stops: [],\r\n          outerColors: []\r\n        };\r\n        var dimIdx = visualMapModel.getDataDimensionIndex(data);\r\n\r\n        if (dimIdx >= 0) {\r\n          // visualMeta.dimension should be dimension index, but not concrete dimension.\r\n          visualMeta.dimension = dimIdx;\r\n          visualMetaList.push(visualMeta);\r\n        }\r\n      }\r\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\r\n\r\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\r\n  }\r\n}]; // FIXME\r\n// performance and export for heatmap?\r\n// value can be Infinity or -Infinity\r\n\r\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\r\n  var mappings = visualMapModel.targetVisuals[valueState];\r\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\r\n  var resultVisual = {\r\n    color: getVisualFromData(seriesModel.getData(), 'color') // default color.\r\n\r\n  };\r\n\r\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\r\n    var type = visualTypes[i];\r\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\r\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\r\n  }\r\n\r\n  return resultVisual.color;\r\n\r\n  function getVisual(key) {\r\n    return resultVisual[key];\r\n  }\r\n\r\n  function setVisual(key, value) {\r\n    resultVisual[key] = value;\r\n  }\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// @ts-nocheck\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nvar each = zrUtil.each;\r\nexport default function visualMapPreprocessor(option) {\r\n  var visualMap = option && option.visualMap;\r\n\r\n  if (!zrUtil.isArray(visualMap)) {\r\n    visualMap = visualMap ? [visualMap] : [];\r\n  }\r\n\r\n  each(visualMap, function (opt) {\r\n    if (!opt) {\r\n      return;\r\n    } // rename splitList to pieces\r\n\r\n\r\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\r\n      opt.pieces = opt.splitList;\r\n      delete opt.splitList;\r\n    }\r\n\r\n    var pieces = opt.pieces;\r\n\r\n    if (pieces && zrUtil.isArray(pieces)) {\r\n      each(pieces, function (piece) {\r\n        if (zrUtil.isObject(piece)) {\r\n          if (has(piece, 'start') && !has(piece, 'min')) {\r\n            piece.min = piece.start;\r\n          }\r\n\r\n          if (has(piece, 'end') && !has(piece, 'max')) {\r\n            piece.max = piece.end;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nfunction has(obj, name) {\r\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { visualMapActionInfo, visualMapActionHander } from './visualMapAction';\r\nimport { visualMapEncodingHandlers } from './visualEncoding';\r\nimport { each } from 'zrender/lib/core/util';\r\nimport preprocessor from './preprocessor';\r\nvar installed = false;\r\nexport default function installCommon(registers) {\r\n  if (installed) {\r\n    return;\r\n  }\r\n\r\n  installed = true;\r\n  registers.registerSubTypeDefaulter('visualMap', function (option) {\r\n    // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\r\n    return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\r\n  });\r\n  registers.registerAction(visualMapActionInfo, visualMapActionHander);\r\n  each(visualMapEncodingHandlers, function (handler) {\r\n    registers.registerVisual(registers.PRIORITY.VISUAL.COMPONENT, handler);\r\n  });\r\n  registers.registerPreprocessor(preprocessor);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport ContinuousModel from './ContinuousModel';\r\nimport ContinuousView from './ContinuousView';\r\nimport installCommon from './installCommon';\r\nexport function install(registers) {\r\n  registers.registerComponentModel(ContinuousModel);\r\n  registers.registerComponentView(ContinuousView);\r\n  installCommon(registers);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport VisualMapModel from './VisualMapModel';\r\nimport VisualMapping from '../../visual/VisualMapping';\r\nimport visualDefault from '../../visual/visualDefault';\r\nimport { reformIntervals } from '../../util/number';\r\nimport { inheritDefaultOption } from '../../util/component';\r\n\r\nvar PiecewiseModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(PiecewiseModel, _super);\r\n\r\n  function PiecewiseModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = PiecewiseModel.type;\r\n    /**\r\n     * The order is always [low, ..., high].\r\n     * [{text: string, interval: Array.<number>}, ...]\r\n     */\r\n\r\n    _this._pieceList = [];\r\n    return _this;\r\n  }\r\n\r\n  PiecewiseModel.prototype.optionUpdated = function (newOption, isInit) {\r\n    _super.prototype.optionUpdated.apply(this, arguments);\r\n\r\n    this.resetExtent();\r\n\r\n    var mode = this._mode = this._determineMode();\r\n\r\n    this._pieceList = [];\r\n\r\n    resetMethods[this._mode].call(this, this._pieceList);\r\n\r\n    this._resetSelected(newOption, isInit);\r\n\r\n    var categories = this.option.categories;\r\n    this.resetVisual(function (mappingOption, state) {\r\n      if (mode === 'categories') {\r\n        mappingOption.mappingMethod = 'category';\r\n        mappingOption.categories = zrUtil.clone(categories);\r\n      } else {\r\n        mappingOption.dataExtent = this.getExtent();\r\n        mappingOption.mappingMethod = 'piecewise';\r\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\r\n          piece = zrUtil.clone(piece);\r\n\r\n          if (state !== 'inRange') {\r\n            // FIXME\r\n            // outOfRange do not support special visual in pieces.\r\n            piece.visual = null;\r\n          }\r\n\r\n          return piece;\r\n        });\r\n      }\r\n    });\r\n  };\r\n  /**\r\n   * @protected\r\n   * @override\r\n   */\r\n\r\n\r\n  PiecewiseModel.prototype.completeVisualOption = function () {\r\n    // Consider this case:\r\n    // visualMap: {\r\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\r\n    // }\r\n    // where no inRange/outOfRange set but only pieces. So we should make\r\n    // default inRange/outOfRange for this case, otherwise visuals that only\r\n    // appear in `pieces` will not be taken into account in visual encoding.\r\n    var option = this.option;\r\n    var visualTypesInPieces = {};\r\n    var visualTypes = VisualMapping.listVisualTypes();\r\n    var isCategory = this.isCategory();\r\n    zrUtil.each(option.pieces, function (piece) {\r\n      zrUtil.each(visualTypes, function (visualType) {\r\n        if (piece.hasOwnProperty(visualType)) {\r\n          visualTypesInPieces[visualType] = 1;\r\n        }\r\n      });\r\n    });\r\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\r\n      var exists = false;\r\n      zrUtil.each(this.stateList, function (state) {\r\n        exists = exists || has(option, state, visualType) || has(option.target, state, visualType);\r\n      }, this);\r\n      !exists && zrUtil.each(this.stateList, function (state) {\r\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\r\n      });\r\n    }, this);\r\n\r\n    function has(obj, state, visualType) {\r\n      return obj && obj[state] && obj[state].hasOwnProperty(visualType);\r\n    }\r\n\r\n    _super.prototype.completeVisualOption.apply(this, arguments);\r\n  };\r\n\r\n  PiecewiseModel.prototype._resetSelected = function (newOption, isInit) {\r\n    var thisOption = this.option;\r\n    var pieceList = this._pieceList; // Selected do not merge but all override.\r\n\r\n    var selected = (isInit ? thisOption : newOption).selected || {};\r\n    thisOption.selected = selected; // Consider 'not specified' means true.\r\n\r\n    zrUtil.each(pieceList, function (piece, index) {\r\n      var key = this.getSelectedMapKey(piece);\r\n\r\n      if (!selected.hasOwnProperty(key)) {\r\n        selected[key] = true;\r\n      }\r\n    }, this);\r\n\r\n    if (thisOption.selectedMode === 'single') {\r\n      // Ensure there is only one selected.\r\n      var hasSel_1 = false;\r\n      zrUtil.each(pieceList, function (piece, index) {\r\n        var key = this.getSelectedMapKey(piece);\r\n\r\n        if (selected[key]) {\r\n          hasSel_1 ? selected[key] = false : hasSel_1 = true;\r\n        }\r\n      }, this);\r\n    } // thisOption.selectedMode === 'multiple', default: all selected.\r\n\r\n  };\r\n  /**\r\n   * @public\r\n   */\r\n\r\n\r\n  PiecewiseModel.prototype.getItemSymbol = function () {\r\n    return this.get('itemSymbol');\r\n  };\r\n  /**\r\n   * @public\r\n   */\r\n\r\n\r\n  PiecewiseModel.prototype.getSelectedMapKey = function (piece) {\r\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\r\n  };\r\n  /**\r\n   * @public\r\n   */\r\n\r\n\r\n  PiecewiseModel.prototype.getPieceList = function () {\r\n    return this._pieceList;\r\n  };\r\n  /**\r\n   * @return {string}\r\n   */\r\n\r\n\r\n  PiecewiseModel.prototype._determineMode = function () {\r\n    var option = this.option;\r\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  PiecewiseModel.prototype.setSelected = function (selected) {\r\n    this.option.selected = zrUtil.clone(selected);\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  PiecewiseModel.prototype.getValueState = function (value) {\r\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\r\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\r\n  };\r\n  /**\r\n   * @public\r\n   * @param pieceIndex piece index in visualMapModel.getPieceList()\r\n   */\r\n\r\n\r\n  PiecewiseModel.prototype.findTargetDataIndices = function (pieceIndex) {\r\n    var result = [];\r\n    var pieceList = this._pieceList;\r\n    this.eachTargetSeries(function (seriesModel) {\r\n      var dataIndices = [];\r\n      var data = seriesModel.getData();\r\n      data.each(this.getDataDimensionIndex(data), function (value, dataIndex) {\r\n        // Should always base on model pieceList, because it is order sensitive.\r\n        var pIdx = VisualMapping.findPieceIndex(value, pieceList);\r\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\r\n      }, this);\r\n      result.push({\r\n        seriesId: seriesModel.id,\r\n        dataIndex: dataIndices\r\n      });\r\n    }, this);\r\n    return result;\r\n  };\r\n  /**\r\n   * @private\r\n   * @param piece piece.value or piece.interval is required.\r\n   * @return  Can be Infinity or -Infinity\r\n   */\r\n\r\n\r\n  PiecewiseModel.prototype.getRepresentValue = function (piece) {\r\n    var representValue;\r\n\r\n    if (this.isCategory()) {\r\n      representValue = piece.value;\r\n    } else {\r\n      if (piece.value != null) {\r\n        representValue = piece.value;\r\n      } else {\r\n        var pieceInterval = piece.interval || [];\r\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\r\n      }\r\n    }\r\n\r\n    return representValue;\r\n  };\r\n\r\n  PiecewiseModel.prototype.getVisualMeta = function (getColorVisual) {\r\n    // Do not support category. (category axis is ordinal, numerical)\r\n    if (this.isCategory()) {\r\n      return;\r\n    }\r\n\r\n    var stops = [];\r\n    var outerColors = ['', ''];\r\n    var visualMapModel = this;\r\n\r\n    function setStop(interval, valueState) {\r\n      var representValue = visualMapModel.getRepresentValue({\r\n        interval: interval\r\n      }); // Not category\r\n\r\n      if (!valueState) {\r\n        valueState = visualMapModel.getValueState(representValue);\r\n      }\r\n\r\n      var color = getColorVisual(representValue, valueState);\r\n\r\n      if (interval[0] === -Infinity) {\r\n        outerColors[0] = color;\r\n      } else if (interval[1] === Infinity) {\r\n        outerColors[1] = color;\r\n      } else {\r\n        stops.push({\r\n          value: interval[0],\r\n          color: color\r\n        }, {\r\n          value: interval[1],\r\n          color: color\r\n        });\r\n      }\r\n    } // Suplement\r\n\r\n\r\n    var pieceList = this._pieceList.slice();\r\n\r\n    if (!pieceList.length) {\r\n      pieceList.push({\r\n        interval: [-Infinity, Infinity]\r\n      });\r\n    } else {\r\n      var edge = pieceList[0].interval[0];\r\n      edge !== -Infinity && pieceList.unshift({\r\n        interval: [-Infinity, edge]\r\n      });\r\n      edge = pieceList[pieceList.length - 1].interval[1];\r\n      edge !== Infinity && pieceList.push({\r\n        interval: [edge, Infinity]\r\n      });\r\n    }\r\n\r\n    var curr = -Infinity;\r\n    zrUtil.each(pieceList, function (piece) {\r\n      var interval = piece.interval;\r\n\r\n      if (interval) {\r\n        // Fulfill gap.\r\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\r\n        setStop(interval.slice());\r\n        curr = interval[1];\r\n      }\r\n    }, this);\r\n    return {\r\n      stops: stops,\r\n      outerColors: outerColors\r\n    };\r\n  };\r\n\r\n  PiecewiseModel.type = 'visualMap.piecewise';\r\n  PiecewiseModel.defaultOption = inheritDefaultOption(VisualMapModel.defaultOption, {\r\n    selected: null,\r\n    minOpen: false,\r\n    maxOpen: false,\r\n    align: 'auto',\r\n    itemWidth: 20,\r\n    itemHeight: 14,\r\n    itemSymbol: 'roundRect',\r\n    pieces: null,\r\n    categories: null,\r\n    splitNumber: 5,\r\n    selectedMode: 'multiple',\r\n    itemGap: 10,\r\n    hoverLink: true // Enable hover highlight.\r\n\r\n  });\r\n  return PiecewiseModel;\r\n}(VisualMapModel);\r\n\r\n;\r\n/**\r\n * Key is this._mode\r\n * @type {Object}\r\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\r\n */\r\n\r\nvar resetMethods = {\r\n  splitNumber: function (outPieceList) {\r\n    var thisOption = this.option;\r\n    var precision = Math.min(thisOption.precision, 20);\r\n    var dataExtent = this.getExtent();\r\n    var splitNumber = thisOption.splitNumber;\r\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\r\n    thisOption.splitNumber = splitNumber;\r\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\r\n\r\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\r\n      precision++;\r\n    }\r\n\r\n    thisOption.precision = precision;\r\n    splitStep = +splitStep.toFixed(precision);\r\n\r\n    if (thisOption.minOpen) {\r\n      outPieceList.push({\r\n        interval: [-Infinity, dataExtent[0]],\r\n        close: [0, 0]\r\n      });\r\n    }\r\n\r\n    for (var index = 0, curr = dataExtent[0]; index < splitNumber; curr += splitStep, index++) {\r\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\r\n      outPieceList.push({\r\n        interval: [curr, max],\r\n        close: [1, 1]\r\n      });\r\n    }\r\n\r\n    if (thisOption.maxOpen) {\r\n      outPieceList.push({\r\n        interval: [dataExtent[1], Infinity],\r\n        close: [0, 0]\r\n      });\r\n    }\r\n\r\n    reformIntervals(outPieceList);\r\n    zrUtil.each(outPieceList, function (piece, index) {\r\n      piece.index = index;\r\n      piece.text = this.formatValueText(piece.interval);\r\n    }, this);\r\n  },\r\n  categories: function (outPieceList) {\r\n    var thisOption = this.option;\r\n    zrUtil.each(thisOption.categories, function (cate) {\r\n      // FIXME category\u6A21\u5F0F\u4E5F\u4F7F\u7528pieceList\uFF0C\u4F46\u5728visualMapping\u4E2D\u4E0D\u662F\u4F7F\u7528pieceList\u3002\r\n      // \u662F\u5426\u6539\u4E00\u81F4\u3002\r\n      outPieceList.push({\r\n        text: this.formatValueText(cate, true),\r\n        value: cate\r\n      });\r\n    }, this); // See \"Order Rule\".\r\n\r\n    normalizeReverse(thisOption, outPieceList);\r\n  },\r\n  pieces: function (outPieceList) {\r\n    var thisOption = this.option;\r\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\r\n      if (!zrUtil.isObject(pieceListItem)) {\r\n        pieceListItem = {\r\n          value: pieceListItem\r\n        };\r\n      }\r\n\r\n      var item = {\r\n        text: '',\r\n        index: index\r\n      };\r\n\r\n      if (pieceListItem.label != null) {\r\n        item.text = pieceListItem.label;\r\n      }\r\n\r\n      if (pieceListItem.hasOwnProperty('value')) {\r\n        var value = item.value = pieceListItem.value;\r\n        item.interval = [value, value];\r\n        item.close = [1, 1];\r\n      } else {\r\n        // `min` `max` is legacy option.\r\n        // `lt` `gt` `lte` `gte` is recommanded.\r\n        var interval = item.interval = [];\r\n        var close_1 = item.close = [0, 0];\r\n        var closeList = [1, 0, 1];\r\n        var infinityList = [-Infinity, Infinity];\r\n        var useMinMax = [];\r\n\r\n        for (var lg = 0; lg < 2; lg++) {\r\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\r\n\r\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\r\n            interval[lg] = pieceListItem[names[i]];\r\n            close_1[lg] = closeList[i];\r\n            useMinMax[lg] = i === 2;\r\n          }\r\n\r\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\r\n        }\r\n\r\n        useMinMax[0] && interval[1] === Infinity && (close_1[0] = 0);\r\n        useMinMax[1] && interval[0] === -Infinity && (close_1[1] = 0);\r\n\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          if (interval[0] > interval[1]) {\r\n            console.warn('Piece ' + index + 'is illegal: ' + interval + ' lower bound should not greater then uppper bound.');\r\n          }\r\n        }\r\n\r\n        if (interval[0] === interval[1] && close_1[0] && close_1[1]) {\r\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\r\n          // we use value to lift the priority when min === max\r\n          item.value = interval[0];\r\n        }\r\n      }\r\n\r\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\r\n      outPieceList.push(item);\r\n    }, this); // See \"Order Rule\".\r\n\r\n    normalizeReverse(thisOption, outPieceList); // Only pieces\r\n\r\n    reformIntervals(outPieceList);\r\n    zrUtil.each(outPieceList, function (piece) {\r\n      var close = piece.close;\r\n      var edgeSymbols = [['<', '\u2264'][close[1]], ['>', '\u2265'][close[0]]];\r\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\r\n    }, this);\r\n  }\r\n};\r\n\r\nfunction normalizeReverse(thisOption, pieceList) {\r\n  var inverse = thisOption.inverse;\r\n\r\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\r\n    pieceList.reverse();\r\n  }\r\n}\r\n\r\nexport default PiecewiseModel;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport VisualMapView from './VisualMapView';\r\nimport * as graphic from '../../util/graphic';\r\nimport { createSymbol } from '../../util/symbol';\r\nimport * as layout from '../../util/layout';\r\nimport * as helper from './helper';\r\n\r\nvar PiecewiseVisualMapView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(PiecewiseVisualMapView, _super);\r\n\r\n  function PiecewiseVisualMapView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = PiecewiseVisualMapView.type;\r\n    return _this;\r\n  }\r\n\r\n  PiecewiseVisualMapView.prototype.doRender = function () {\r\n    var thisGroup = this.group;\r\n    thisGroup.removeAll();\r\n    var visualMapModel = this.visualMapModel;\r\n    var textGap = visualMapModel.get('textGap');\r\n    var textStyleModel = visualMapModel.textStyleModel;\r\n    var textFont = textStyleModel.getFont();\r\n    var textFill = textStyleModel.getTextColor();\r\n\r\n    var itemAlign = this._getItemAlign();\r\n\r\n    var itemSize = visualMapModel.itemSize;\r\n\r\n    var viewData = this._getViewData();\r\n\r\n    var endsText = viewData.endsText;\r\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\r\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\r\n    zrUtil.each(viewData.viewPieceList, function (item) {\r\n      var piece = item.piece;\r\n      var itemGroup = new graphic.Group();\r\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\r\n\r\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList); // TODO Category\r\n\r\n\r\n      var representValue = visualMapModel.getRepresentValue(piece);\r\n\r\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\r\n\r\n      if (showLabel) {\r\n        var visualState = this.visualMapModel.getValueState(representValue);\r\n        itemGroup.add(new graphic.Text({\r\n          style: {\r\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\r\n            y: itemSize[1] / 2,\r\n            text: piece.text,\r\n            verticalAlign: 'middle',\r\n            align: itemAlign,\r\n            font: textFont,\r\n            fill: textFill,\r\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\r\n          }\r\n        }));\r\n      }\r\n\r\n      thisGroup.add(itemGroup);\r\n    }, this);\r\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\r\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\r\n    this.renderBackground(thisGroup);\r\n    this.positionGroup(thisGroup);\r\n  };\r\n\r\n  PiecewiseVisualMapView.prototype._enableHoverLink = function (itemGroup, pieceIndex) {\r\n    var _this = this;\r\n\r\n    itemGroup.on('mouseover', function () {\r\n      return onHoverLink('highlight');\r\n    }).on('mouseout', function () {\r\n      return onHoverLink('downplay');\r\n    });\r\n\r\n    var onHoverLink = function (method) {\r\n      var visualMapModel = _this.visualMapModel; // TODO: TYPE More detailed action types\r\n\r\n      visualMapModel.option.hoverLink && _this.api.dispatchAction({\r\n        type: method,\r\n        batch: helper.makeHighDownBatch(visualMapModel.findTargetDataIndices(pieceIndex), visualMapModel)\r\n      });\r\n    };\r\n  };\r\n\r\n  PiecewiseVisualMapView.prototype._getItemAlign = function () {\r\n    var visualMapModel = this.visualMapModel;\r\n    var modelOption = visualMapModel.option;\r\n\r\n    if (modelOption.orient === 'vertical') {\r\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\r\n    } else {\r\n      // horizontal, most case left unless specifying right.\r\n      var align = modelOption.align;\r\n\r\n      if (!align || align === 'auto') {\r\n        align = 'left';\r\n      }\r\n\r\n      return align;\r\n    }\r\n  };\r\n\r\n  PiecewiseVisualMapView.prototype._renderEndsText = function (group, text, itemSize, showLabel, itemAlign) {\r\n    if (!text) {\r\n      return;\r\n    }\r\n\r\n    var itemGroup = new graphic.Group();\r\n    var textStyleModel = this.visualMapModel.textStyleModel;\r\n    itemGroup.add(new graphic.Text({\r\n      style: {\r\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\r\n        y: itemSize[1] / 2,\r\n        verticalAlign: 'middle',\r\n        align: showLabel ? itemAlign : 'center',\r\n        text: text,\r\n        font: textStyleModel.getFont(),\r\n        fill: textStyleModel.getTextColor()\r\n      }\r\n    }));\r\n    group.add(itemGroup);\r\n  };\r\n  /**\r\n   * @private\r\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\r\n   */\r\n\r\n\r\n  PiecewiseVisualMapView.prototype._getViewData = function () {\r\n    var visualMapModel = this.visualMapModel;\r\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\r\n      return {\r\n        piece: piece,\r\n        indexInModelPieceList: index\r\n      };\r\n    });\r\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\r\n\r\n    var orient = visualMapModel.get('orient');\r\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\r\n\r\n    if (orient === 'horizontal' ? inverse : !inverse) {\r\n      viewPieceList.reverse();\r\n    } // Origin order of endsText is [high, low]\r\n    else if (endsText) {\r\n        endsText = endsText.slice().reverse();\r\n      }\r\n\r\n    return {\r\n      viewPieceList: viewPieceList,\r\n      endsText: endsText\r\n    };\r\n  };\r\n\r\n  PiecewiseVisualMapView.prototype._createItemSymbol = function (group, representValue, shapeParam) {\r\n    group.add(createSymbol( // symbol will be string\r\n    this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], // color will be string\r\n    this.getControllerVisual(representValue, 'color')));\r\n  };\r\n\r\n  PiecewiseVisualMapView.prototype._onItemClick = function (piece) {\r\n    var visualMapModel = this.visualMapModel;\r\n    var option = visualMapModel.option;\r\n    var selected = zrUtil.clone(option.selected);\r\n    var newKey = visualMapModel.getSelectedMapKey(piece);\r\n\r\n    if (option.selectedMode === 'single') {\r\n      selected[newKey] = true;\r\n      zrUtil.each(selected, function (o, key) {\r\n        selected[key] = key === newKey;\r\n      });\r\n    } else {\r\n      selected[newKey] = !selected[newKey];\r\n    }\r\n\r\n    this.api.dispatchAction({\r\n      type: 'selectDataRange',\r\n      from: this.uid,\r\n      visualMapId: this.visualMapModel.id,\r\n      selected: selected\r\n    });\r\n  };\r\n\r\n  PiecewiseVisualMapView.type = 'visualMap.piecewise';\r\n  return PiecewiseVisualMapView;\r\n}(VisualMapView);\r\n\r\nexport default PiecewiseVisualMapView;", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport PiecewiseModel from './PiecewiseModel';\r\nimport PiecewiseView from './PiecewiseView';\r\nimport installCommon from './installCommon';\r\nexport function install(registers) {\r\n  registers.registerComponentModel(PiecewiseModel);\r\n  registers.registerComponentView(PiecewiseView);\r\n  installCommon(registers);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { use } from '../../extension';\r\nimport { install as installVisualMapContinuous } from './installVisualMapContinuous';\r\nimport { install as installVisualMapPiecewise } from './installVisualMapPiecewise';\r\nexport function install(registers) {\r\n  use(installVisualMapContinuous);\r\n  use(installVisualMapPiecewise); // Do not install './dataZoomSelect',\r\n  // since it only work for toolbox dataZoom.\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nimport { makeInner } from '../util/model';\r\nimport { getDecalFromPalette } from '../model/mixin/palette';\r\nvar DEFAULT_OPTION = {\r\n  label: {\r\n    enabled: true\r\n  },\r\n  decal: {\r\n    show: false\r\n  }\r\n};\r\nvar inner = makeInner();\r\nvar decalPaletteScope = {};\r\nexport default function ariaVisual(ecModel, api) {\r\n  var ariaModel = ecModel.getModel('aria'); // See \"area enabled\" detection code in `GlobalModel.ts`.\r\n\r\n  if (!ariaModel.get('enabled')) {\r\n    return;\r\n  }\r\n\r\n  var defaultOption = zrUtil.clone(DEFAULT_OPTION);\r\n  zrUtil.merge(defaultOption.label, ecModel.getLocaleModel().get('aria'), false);\r\n  zrUtil.merge(ariaModel.option, defaultOption, false);\r\n  setDecal();\r\n  setLabel();\r\n\r\n  function setDecal() {\r\n    var decalModel = ariaModel.getModel('decal');\r\n    var useDecal = decalModel.get('show');\r\n\r\n    if (useDecal) {\r\n      // Each type of series use one scope.\r\n      // Pie and funnel are using diferrent scopes\r\n      var paletteScopeGroupByType_1 = zrUtil.createHashMap();\r\n      ecModel.eachSeries(function (seriesModel) {\r\n        if (seriesModel.isColorBySeries()) {\r\n          return;\r\n        }\r\n\r\n        var decalScope = paletteScopeGroupByType_1.get(seriesModel.type);\r\n\r\n        if (!decalScope) {\r\n          decalScope = {};\r\n          paletteScopeGroupByType_1.set(seriesModel.type, decalScope);\r\n        }\r\n\r\n        inner(seriesModel).scope = decalScope;\r\n      });\r\n      ecModel.eachRawSeries(function (seriesModel) {\r\n        if (ecModel.isSeriesFiltered(seriesModel)) {\r\n          return;\r\n        }\r\n\r\n        if (typeof seriesModel.enableAriaDecal === 'function') {\r\n          // Let series define how to use decal palette on data\r\n          seriesModel.enableAriaDecal();\r\n          return;\r\n        }\r\n\r\n        var data = seriesModel.getData();\r\n\r\n        if (!seriesModel.isColorBySeries()) {\r\n          var dataAll_1 = seriesModel.getRawData();\r\n          var idxMap_1 = {};\r\n          var decalScope_1 = inner(seriesModel).scope;\r\n          data.each(function (idx) {\r\n            var rawIdx = data.getRawIndex(idx);\r\n            idxMap_1[rawIdx] = idx;\r\n          });\r\n          var dataCount_1 = dataAll_1.count();\r\n          dataAll_1.each(function (rawIdx) {\r\n            var idx = idxMap_1[rawIdx];\r\n            var name = dataAll_1.getName(rawIdx) || rawIdx + '';\r\n            var paletteDecal = getDecalFromPalette(seriesModel.ecModel, name, decalScope_1, dataCount_1);\r\n            var specifiedDecal = data.getItemVisual(idx, 'decal');\r\n            data.setItemVisual(idx, 'decal', mergeDecal(specifiedDecal, paletteDecal));\r\n          });\r\n        } else {\r\n          var paletteDecal = getDecalFromPalette(seriesModel.ecModel, seriesModel.name, decalPaletteScope, ecModel.getSeriesCount());\r\n          var specifiedDecal = data.getVisual('decal');\r\n          data.setVisual('decal', mergeDecal(specifiedDecal, paletteDecal));\r\n        }\r\n\r\n        function mergeDecal(specifiedDecal, paletteDecal) {\r\n          // Merge decal from palette to decal from itemStyle.\r\n          // User do not need to specify all of the decal props.\r\n          var resultDecal = specifiedDecal ? zrUtil.extend(zrUtil.extend({}, paletteDecal), specifiedDecal) : paletteDecal;\r\n          resultDecal.dirty = true;\r\n          return resultDecal;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function setLabel() {\r\n    var labelLocale = ecModel.getLocaleModel().get('aria');\r\n    var labelModel = ariaModel.getModel('label');\r\n    labelModel.option = zrUtil.defaults(labelModel.option, labelLocale);\r\n\r\n    if (!labelModel.get('enabled')) {\r\n      return;\r\n    }\r\n\r\n    var dom = api.getZr().dom;\r\n\r\n    if (labelModel.get('description')) {\r\n      dom.setAttribute('aria-label', labelModel.get('description'));\r\n      return;\r\n    }\r\n\r\n    var seriesCnt = ecModel.getSeriesCount();\r\n    var maxDataCnt = labelModel.get(['data', 'maxCount']) || 10;\r\n    var maxSeriesCnt = labelModel.get(['series', 'maxCount']) || 10;\r\n    var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\r\n    var ariaLabel;\r\n\r\n    if (seriesCnt < 1) {\r\n      // No series, no aria label\r\n      return;\r\n    } else {\r\n      var title = getTitle();\r\n\r\n      if (title) {\r\n        var withTitle = labelModel.get(['general', 'withTitle']);\r\n        ariaLabel = replace(withTitle, {\r\n          title: title\r\n        });\r\n      } else {\r\n        ariaLabel = labelModel.get(['general', 'withoutTitle']);\r\n      }\r\n\r\n      var seriesLabels_1 = [];\r\n      var prefix = seriesCnt > 1 ? labelModel.get(['series', 'multiple', 'prefix']) : labelModel.get(['series', 'single', 'prefix']);\r\n      ariaLabel += replace(prefix, {\r\n        seriesCount: seriesCnt\r\n      });\r\n      ecModel.eachSeries(function (seriesModel, idx) {\r\n        if (idx < displaySeriesCnt) {\r\n          var seriesLabel = void 0;\r\n          var seriesName = seriesModel.get('name');\r\n          var withName = seriesName ? 'withName' : 'withoutName';\r\n          seriesLabel = seriesCnt > 1 ? labelModel.get(['series', 'multiple', withName]) : labelModel.get(['series', 'single', withName]);\r\n          seriesLabel = replace(seriesLabel, {\r\n            seriesId: seriesModel.seriesIndex,\r\n            seriesName: seriesModel.get('name'),\r\n            seriesType: getSeriesTypeName(seriesModel.subType)\r\n          });\r\n          var data = seriesModel.getData();\r\n\r\n          if (data.count() > maxDataCnt) {\r\n            // Show part of data\r\n            var partialLabel = labelModel.get(['data', 'partialData']);\r\n            seriesLabel += replace(partialLabel, {\r\n              displayCnt: maxDataCnt\r\n            });\r\n          } else {\r\n            seriesLabel += labelModel.get(['data', 'allData']);\r\n          }\r\n\r\n          var middleSeparator_1 = labelModel.get(['data', 'separator', 'middle']);\r\n          var endSeparator_1 = labelModel.get(['data', 'separator', 'end']);\r\n          var dataLabels = [];\r\n\r\n          for (var i = 0; i < data.count(); i++) {\r\n            if (i < maxDataCnt) {\r\n              var name_1 = data.getName(i);\r\n              var value = data.getValues(i);\r\n              var dataLabel = labelModel.get(['data', name_1 ? 'withName' : 'withoutName']);\r\n              dataLabels.push(replace(dataLabel, {\r\n                name: name_1,\r\n                value: value.join(middleSeparator_1)\r\n              }));\r\n            }\r\n          }\r\n\r\n          seriesLabel += dataLabels.join(middleSeparator_1) + endSeparator_1;\r\n          seriesLabels_1.push(seriesLabel);\r\n        }\r\n      });\r\n      var separatorModel = labelModel.getModel(['series', 'multiple', 'separator']);\r\n      var middleSeparator = separatorModel.get('middle');\r\n      var endSeparator = separatorModel.get('end');\r\n      ariaLabel += seriesLabels_1.join(middleSeparator) + endSeparator;\r\n      dom.setAttribute('aria-label', ariaLabel);\r\n    }\r\n  }\r\n\r\n  function replace(str, keyValues) {\r\n    if (typeof str !== 'string') {\r\n      return str;\r\n    }\r\n\r\n    var result = str;\r\n    zrUtil.each(keyValues, function (value, key) {\r\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  function getTitle() {\r\n    var title = ecModel.get('title');\r\n\r\n    if (title && title.length) {\r\n      title = title[0];\r\n    }\r\n\r\n    return title && title.text;\r\n  }\r\n\r\n  function getSeriesTypeName(type) {\r\n    return ecModel.getLocaleModel().get(['series', 'typeNames'])[type] || '\u81EA\u5B9A\u4E49\u56FE';\r\n  }\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util';\r\nexport default function ariaPreprocessor(option) {\r\n  if (!option || !option.aria) {\r\n    return;\r\n  }\r\n\r\n  var aria = option.aria; // aria.show is deprecated and should use aria.enabled instead\r\n\r\n  if (aria.show != null) {\r\n    aria.enabled = aria.show;\r\n  }\r\n\r\n  aria.label = aria.label || {}; // move description, general, series, data to be under aria.label\r\n\r\n  zrUtil.each(['description', 'general', 'series', 'data'], function (name) {\r\n    if (aria[name] != null) {\r\n      aria.label[name] = aria[name];\r\n    }\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport ariaVisual from '../../visual/aria';\r\nimport ariaPreprocessor from './preprocessor';\r\nexport function install(registers) {\r\n  registers.registerPreprocessor(ariaPreprocessor);\r\n  registers.registerVisual(registers.PRIORITY.VISUAL.ARIA, ariaVisual);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { keys, isArray, map, isObject, isString, isRegExp, isArrayLike, hasOwn } from 'zrender/lib/core/util';\r\nimport { throwError, makePrintable } from './log';\r\nimport { getRawValueParser, createFilterComparator } from '../data/helper/dataValueHelper';\r\n;\r\nvar RELATIONAL_EXPRESSION_OP_ALIAS_MAP = {\r\n  value: 'eq',\r\n  // PENDING: not good for literal semantic?\r\n  '<': 'lt',\r\n  '<=': 'lte',\r\n  '>': 'gt',\r\n  '>=': 'gte',\r\n  '=': 'eq',\r\n  '!=': 'ne',\r\n  '<>': 'ne' // Might mileading for sake of the different between '==' and '===',\r\n  // So dont support them.\r\n  // '==': 'eq',\r\n  // '===': 'seq',\r\n  // '!==': 'sne'\r\n  // PENDING: Whether support some common alias \"ge\", \"le\", \"neq\"?\r\n  // ge: 'gte',\r\n  // le: 'lte',\r\n  // neq: 'ne',\r\n\r\n}; // type RelationalExpressionOpEvaluate = (tarVal: unknown, condVal: unknown) => boolean;\r\n\r\nvar RegExpEvaluator =\r\n/** @class */\r\nfunction () {\r\n  function RegExpEvaluator(rVal) {\r\n    // Support condVal: RegExp | string\r\n    var condValue = this._condVal = isString(rVal) ? new RegExp(rVal) : isRegExp(rVal) ? rVal : null;\r\n\r\n    if (condValue == null) {\r\n      var errMsg = '';\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        errMsg = makePrintable('Illegal regexp', rVal, 'in');\r\n      }\r\n\r\n      throwError(errMsg);\r\n    }\r\n  }\r\n\r\n  RegExpEvaluator.prototype.evaluate = function (lVal) {\r\n    var type = typeof lVal;\r\n    return type === 'string' ? this._condVal.test(lVal) : type === 'number' ? this._condVal.test(lVal + '') : false;\r\n  };\r\n\r\n  return RegExpEvaluator;\r\n}();\r\n\r\nvar ConstConditionInternal =\r\n/** @class */\r\nfunction () {\r\n  function ConstConditionInternal() {}\r\n\r\n  ConstConditionInternal.prototype.evaluate = function () {\r\n    return this.value;\r\n  };\r\n\r\n  return ConstConditionInternal;\r\n}();\r\n\r\nvar AndConditionInternal =\r\n/** @class */\r\nfunction () {\r\n  function AndConditionInternal() {}\r\n\r\n  AndConditionInternal.prototype.evaluate = function () {\r\n    var children = this.children;\r\n\r\n    for (var i = 0; i < children.length; i++) {\r\n      if (!children[i].evaluate()) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return AndConditionInternal;\r\n}();\r\n\r\nvar OrConditionInternal =\r\n/** @class */\r\nfunction () {\r\n  function OrConditionInternal() {}\r\n\r\n  OrConditionInternal.prototype.evaluate = function () {\r\n    var children = this.children;\r\n\r\n    for (var i = 0; i < children.length; i++) {\r\n      if (children[i].evaluate()) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  return OrConditionInternal;\r\n}();\r\n\r\nvar NotConditionInternal =\r\n/** @class */\r\nfunction () {\r\n  function NotConditionInternal() {}\r\n\r\n  NotConditionInternal.prototype.evaluate = function () {\r\n    return !this.child.evaluate();\r\n  };\r\n\r\n  return NotConditionInternal;\r\n}();\r\n\r\nvar RelationalConditionInternal =\r\n/** @class */\r\nfunction () {\r\n  function RelationalConditionInternal() {}\r\n\r\n  RelationalConditionInternal.prototype.evaluate = function () {\r\n    var needParse = !!this.valueParser; // Call getValue with no `this`.\r\n\r\n    var getValue = this.getValue;\r\n    var tarValRaw = getValue(this.valueGetterParam);\r\n    var tarValParsed = needParse ? this.valueParser(tarValRaw) : null; // Relational cond follow \"and\" logic internally.\r\n\r\n    for (var i = 0; i < this.subCondList.length; i++) {\r\n      if (!this.subCondList[i].evaluate(needParse ? tarValParsed : tarValRaw)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return RelationalConditionInternal;\r\n}();\r\n\r\nfunction parseOption(exprOption, getters) {\r\n  if (exprOption === true || exprOption === false) {\r\n    var cond = new ConstConditionInternal();\r\n    cond.value = exprOption;\r\n    return cond;\r\n  }\r\n\r\n  var errMsg = '';\r\n\r\n  if (!isObjectNotArray(exprOption)) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      errMsg = makePrintable('Illegal config. Expect a plain object but actually', exprOption);\r\n    }\r\n\r\n    throwError(errMsg);\r\n  }\r\n\r\n  if (exprOption.and) {\r\n    return parseAndOrOption('and', exprOption, getters);\r\n  } else if (exprOption.or) {\r\n    return parseAndOrOption('or', exprOption, getters);\r\n  } else if (exprOption.not) {\r\n    return parseNotOption(exprOption, getters);\r\n  }\r\n\r\n  return parseRelationalOption(exprOption, getters);\r\n}\r\n\r\nfunction parseAndOrOption(op, exprOption, getters) {\r\n  var subOptionArr = exprOption[op];\r\n  var errMsg = '';\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    errMsg = makePrintable('\"and\"/\"or\" condition should only be `' + op + ': [...]` and must not be empty array.', 'Illegal condition:', exprOption);\r\n  }\r\n\r\n  if (!isArray(subOptionArr)) {\r\n    throwError(errMsg);\r\n  }\r\n\r\n  if (!subOptionArr.length) {\r\n    throwError(errMsg);\r\n  }\r\n\r\n  var cond = op === 'and' ? new AndConditionInternal() : new OrConditionInternal();\r\n  cond.children = map(subOptionArr, function (subOption) {\r\n    return parseOption(subOption, getters);\r\n  });\r\n\r\n  if (!cond.children.length) {\r\n    throwError(errMsg);\r\n  }\r\n\r\n  return cond;\r\n}\r\n\r\nfunction parseNotOption(exprOption, getters) {\r\n  var subOption = exprOption.not;\r\n  var errMsg = '';\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    errMsg = makePrintable('\"not\" condition should only be `not: {}`.', 'Illegal condition:', exprOption);\r\n  }\r\n\r\n  if (!isObjectNotArray(subOption)) {\r\n    throwError(errMsg);\r\n  }\r\n\r\n  var cond = new NotConditionInternal();\r\n  cond.child = parseOption(subOption, getters);\r\n\r\n  if (!cond.child) {\r\n    throwError(errMsg);\r\n  }\r\n\r\n  return cond;\r\n}\r\n\r\nfunction parseRelationalOption(exprOption, getters) {\r\n  var errMsg = '';\r\n  var valueGetterParam = getters.prepareGetValue(exprOption);\r\n  var subCondList = [];\r\n  var exprKeys = keys(exprOption);\r\n  var parserName = exprOption.parser;\r\n  var valueParser = parserName ? getRawValueParser(parserName) : null;\r\n\r\n  for (var i = 0; i < exprKeys.length; i++) {\r\n    var keyRaw = exprKeys[i];\r\n\r\n    if (keyRaw === 'parser' || getters.valueGetterAttrMap.get(keyRaw)) {\r\n      continue;\r\n    }\r\n\r\n    var op = hasOwn(RELATIONAL_EXPRESSION_OP_ALIAS_MAP, keyRaw) ? RELATIONAL_EXPRESSION_OP_ALIAS_MAP[keyRaw] : keyRaw;\r\n    var condValueRaw = exprOption[keyRaw];\r\n    var condValueParsed = valueParser ? valueParser(condValueRaw) : condValueRaw;\r\n    var evaluator = createFilterComparator(op, condValueParsed) || op === 'reg' && new RegExpEvaluator(condValueParsed);\r\n\r\n    if (!evaluator) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        errMsg = makePrintable('Illegal relational operation: \"' + keyRaw + '\" in condition:', exprOption);\r\n      }\r\n\r\n      throwError(errMsg);\r\n    }\r\n\r\n    subCondList.push(evaluator);\r\n  }\r\n\r\n  if (!subCondList.length) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      errMsg = makePrintable('Relational condition must have at least one operator.', 'Illegal condition:', exprOption);\r\n    } // No relational operator always disabled in case of dangers result.\r\n\r\n\r\n    throwError(errMsg);\r\n  }\r\n\r\n  var cond = new RelationalConditionInternal();\r\n  cond.valueGetterParam = valueGetterParam;\r\n  cond.valueParser = valueParser;\r\n  cond.getValue = getters.getValue;\r\n  cond.subCondList = subCondList;\r\n  return cond;\r\n}\r\n\r\nfunction isObjectNotArray(val) {\r\n  return isObject(val) && !isArrayLike(val);\r\n}\r\n\r\nvar ConditionalExpressionParsed =\r\n/** @class */\r\nfunction () {\r\n  function ConditionalExpressionParsed(exprOption, getters) {\r\n    this._cond = parseOption(exprOption, getters);\r\n  }\r\n\r\n  ConditionalExpressionParsed.prototype.evaluate = function () {\r\n    return this._cond.evaluate();\r\n  };\r\n\r\n  return ConditionalExpressionParsed;\r\n}();\r\n\r\n;\r\nexport function parseConditionalExpression(exprOption, getters) {\r\n  return new ConditionalExpressionParsed(exprOption, getters);\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { parseConditionalExpression } from '../../util/conditionalExpression';\r\nimport { hasOwn, createHashMap } from 'zrender/lib/core/util';\r\nimport { makePrintable, throwError } from '../../util/log';\r\nexport var filterTransform = {\r\n  type: 'echarts:filter',\r\n  // PEDING: enhance to filter by index rather than create new data\r\n  transform: function (params) {\r\n    // [Caveat] Fail-Fast:\r\n    // Do not return the whole dataset unless user config indicate it explicitly.\r\n    // For example, if no condition specified by mistake, return an empty result\r\n    // is better than return the entire raw soruce for user to find the mistake.\r\n    var upstream = params.upstream;\r\n    var rawItem;\r\n    var condition = parseConditionalExpression(params.config, {\r\n      valueGetterAttrMap: createHashMap({\r\n        dimension: true\r\n      }),\r\n      prepareGetValue: function (exprOption) {\r\n        var errMsg = '';\r\n        var dimLoose = exprOption.dimension;\r\n\r\n        if (!hasOwn(exprOption, 'dimension')) {\r\n          if (process.env.NODE_ENV !== 'production') {\r\n            errMsg = makePrintable('Relation condition must has prop \"dimension\" specified.', 'Illegal condition:', exprOption);\r\n          }\r\n\r\n          throwError(errMsg);\r\n        }\r\n\r\n        var dimInfo = upstream.getDimensionInfo(dimLoose);\r\n\r\n        if (!dimInfo) {\r\n          if (process.env.NODE_ENV !== 'production') {\r\n            errMsg = makePrintable('Can not find dimension info via: ' + dimLoose + '.\\n', 'Existing dimensions: ', upstream.cloneAllDimensionInfo(), '.\\n', 'Illegal condition:', exprOption, '.\\n');\r\n          }\r\n\r\n          throwError(errMsg);\r\n        }\r\n\r\n        return {\r\n          dimIdx: dimInfo.index\r\n        };\r\n      },\r\n      getValue: function (param) {\r\n        return upstream.retrieveValueFromItem(rawItem, param.dimIdx);\r\n      }\r\n    });\r\n    var resultData = [];\r\n\r\n    for (var i = 0, len = upstream.count(); i < len; i++) {\r\n      rawItem = upstream.getRawDataItem(i);\r\n\r\n      if (condition.evaluate()) {\r\n        resultData.push(rawItem);\r\n      }\r\n    }\r\n\r\n    return {\r\n      data: resultData\r\n    };\r\n  }\r\n};", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { SOURCE_FORMAT_ARRAY_ROWS, SOURCE_FORMAT_OBJECT_ROWS } from '../../util/types';\r\nimport { makePrintable, throwError } from '../../util/log';\r\nimport { each } from 'zrender/lib/core/util';\r\nimport { normalizeToArray } from '../../util/model';\r\nimport { getRawValueParser, SortOrderComparator } from '../../data/helper/dataValueHelper';\r\nvar sampleLog = '';\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  sampleLog = ['Valid config is like:', '{ dimension: \"age\", order: \"asc\" }', 'or [{ dimension: \"age\", order: \"asc\"], { dimension: \"date\", order: \"desc\" }]'].join(' ');\r\n}\r\n\r\nexport var sortTransform = {\r\n  type: 'echarts:sort',\r\n  transform: function (params) {\r\n    var upstream = params.upstream;\r\n    var config = params.config;\r\n    var errMsg = ''; // Normalize\r\n    // const orderExprList: OrderExpression[] = isArray(config[0])\r\n    //     ? config as OrderExpression[]\r\n    //     : [config as OrderExpression];\r\n\r\n    var orderExprList = normalizeToArray(config);\r\n\r\n    if (!orderExprList.length) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        errMsg = 'Empty `config` in sort transform.';\r\n      }\r\n\r\n      throwError(errMsg);\r\n    }\r\n\r\n    var orderDefList = [];\r\n    each(orderExprList, function (orderExpr) {\r\n      var dimLoose = orderExpr.dimension;\r\n      var order = orderExpr.order;\r\n      var parserName = orderExpr.parser;\r\n      var incomparable = orderExpr.incomparable;\r\n\r\n      if (dimLoose == null) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          errMsg = 'Sort transform config must has \"dimension\" specified.' + sampleLog;\r\n        }\r\n\r\n        throwError(errMsg);\r\n      }\r\n\r\n      if (order !== 'asc' && order !== 'desc') {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          errMsg = 'Sort transform config must has \"order\" specified.' + sampleLog;\r\n        }\r\n\r\n        throwError(errMsg);\r\n      }\r\n\r\n      if (incomparable && incomparable !== 'min' && incomparable !== 'max') {\r\n        var errMsg_1 = '';\r\n\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          errMsg_1 = 'incomparable must be \"min\" or \"max\" rather than \"' + incomparable + '\".';\r\n        }\r\n\r\n        throwError(errMsg_1);\r\n      }\r\n\r\n      if (order !== 'asc' && order !== 'desc') {\r\n        var errMsg_2 = '';\r\n\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          errMsg_2 = 'order must be \"asc\" or \"desc\" rather than \"' + order + '\".';\r\n        }\r\n\r\n        throwError(errMsg_2);\r\n      }\r\n\r\n      var dimInfo = upstream.getDimensionInfo(dimLoose);\r\n\r\n      if (!dimInfo) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          errMsg = makePrintable('Can not find dimension info via: ' + dimLoose + '.\\n', 'Existing dimensions: ', upstream.cloneAllDimensionInfo(), '.\\n', 'Illegal config:', orderExpr, '.\\n');\r\n        }\r\n\r\n        throwError(errMsg);\r\n      }\r\n\r\n      var parser = parserName ? getRawValueParser(parserName) : null;\r\n\r\n      if (parserName && !parser) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          errMsg = makePrintable('Invalid parser name ' + parserName + '.\\n', 'Illegal config:', orderExpr, '.\\n');\r\n        }\r\n\r\n        throwError(errMsg);\r\n      }\r\n\r\n      orderDefList.push({\r\n        dimIdx: dimInfo.index,\r\n        parser: parser,\r\n        comparator: new SortOrderComparator(order, incomparable)\r\n      });\r\n    }); // TODO: support it?\r\n\r\n    var sourceFormat = upstream.sourceFormat;\r\n\r\n    if (sourceFormat !== SOURCE_FORMAT_ARRAY_ROWS && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        errMsg = 'sourceFormat \"' + sourceFormat + '\" is not supported yet';\r\n      }\r\n\r\n      throwError(errMsg);\r\n    } // Other upstream format are all array.\r\n\r\n\r\n    var resultData = [];\r\n\r\n    for (var i = 0, len = upstream.count(); i < len; i++) {\r\n      resultData.push(upstream.getRawDataItem(i));\r\n    }\r\n\r\n    resultData.sort(function (item0, item1) {\r\n      for (var i = 0; i < orderDefList.length; i++) {\r\n        var orderDef = orderDefList[i];\r\n        var val0 = upstream.retrieveValueFromItem(item0, orderDef.dimIdx);\r\n        var val1 = upstream.retrieveValueFromItem(item1, orderDef.dimIdx);\r\n\r\n        if (orderDef.parser) {\r\n          val0 = orderDef.parser(val0);\r\n          val1 = orderDef.parser(val1);\r\n        }\r\n\r\n        var result = orderDef.comparator.evaluate(val0, val1);\r\n\r\n        if (result !== 0) {\r\n          return result;\r\n        }\r\n      }\r\n\r\n      return 0;\r\n    });\r\n    return {\r\n      data: resultData\r\n    };\r\n  }\r\n};", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { filterTransform } from './filterTransform';\r\nimport { sortTransform } from './sortTransform';\r\nexport function install(registers) {\r\n  registers.registerTransform(filterTransform);\r\n  registers.registerTransform(sortTransform);\r\n}", "import { cubicSubdivide } from '../core/curve';\r\nimport PathProxy from '../core/PathProxy';\r\nvar CMD = PathProxy.CMD;\r\nfunction aroundEqual(a, b) {\r\n    return Math.abs(a - b) < 1e-5;\r\n}\r\nexport function pathToBezierCurves(path) {\r\n    var data = path.data;\r\n    var len = path.len();\r\n    var bezierArrayGroups = [];\r\n    var currentSubpath;\r\n    var xi = 0;\r\n    var yi = 0;\r\n    var x0 = 0;\r\n    var y0 = 0;\r\n    function createNewSubpath(x, y) {\r\n        if (currentSubpath && currentSubpath.length > 2) {\r\n            bezierArrayGroups.push(currentSubpath);\r\n        }\r\n        currentSubpath = [x, y];\r\n    }\r\n    function addLine(x0, y0, x1, y1) {\r\n        if (!(aroundEqual(x0, x1) && aroundEqual(y0, y1))) {\r\n            currentSubpath.push(x0, y0, x1, y1, x1, y1);\r\n        }\r\n    }\r\n    function addArc(startAngle, endAngle, cx, cy, rx, ry) {\r\n        var delta = Math.abs(endAngle - startAngle);\r\n        var len = Math.tan(delta / 4) * 4 / 3;\r\n        var dir = endAngle < startAngle ? -1 : 1;\r\n        var c1 = Math.cos(startAngle);\r\n        var s1 = Math.sin(startAngle);\r\n        var c2 = Math.cos(endAngle);\r\n        var s2 = Math.sin(endAngle);\r\n        var x1 = c1 * rx + cx;\r\n        var y1 = s1 * ry + cy;\r\n        var x4 = c2 * rx + cx;\r\n        var y4 = s2 * ry + cy;\r\n        var hx = rx * len * dir;\r\n        var hy = ry * len * dir;\r\n        currentSubpath.push(x1 - hx * s1, y1 + hy * c1, x4 + hx * s2, y4 - hy * c2, x4, y4);\r\n    }\r\n    var x1;\r\n    var y1;\r\n    var x2;\r\n    var y2;\r\n    for (var i = 0; i < len;) {\r\n        var cmd = data[i++];\r\n        var isFirst = i === 1;\r\n        if (isFirst) {\r\n            xi = data[i];\r\n            yi = data[i + 1];\r\n            x0 = xi;\r\n            y0 = yi;\r\n            if (cmd === CMD.L || cmd === CMD.C || cmd === CMD.Q) {\r\n                currentSubpath = [x0, y0];\r\n            }\r\n        }\r\n        switch (cmd) {\r\n            case CMD.M:\r\n                xi = x0 = data[i++];\r\n                yi = y0 = data[i++];\r\n                createNewSubpath(x0, y0);\r\n                break;\r\n            case CMD.L:\r\n                x1 = data[i++];\r\n                y1 = data[i++];\r\n                addLine(xi, yi, x1, y1);\r\n                xi = x1;\r\n                yi = y1;\r\n                break;\r\n            case CMD.C:\r\n                currentSubpath.push(data[i++], data[i++], data[i++], data[i++], xi = data[i++], yi = data[i++]);\r\n                break;\r\n            case CMD.Q:\r\n                x1 = data[i++];\r\n                y1 = data[i++];\r\n                x2 = data[i++];\r\n                y2 = data[i++];\r\n                currentSubpath.push(xi + 2 / 3 * (x1 - xi), yi + 2 / 3 * (y1 - yi), x2 + 2 / 3 * (x1 - x2), y2 + 2 / 3 * (y1 - y2), x2, y2);\r\n                xi = x2;\r\n                yi = y2;\r\n                break;\r\n            case CMD.A:\r\n                var cx = data[i++];\r\n                var cy = data[i++];\r\n                var rx = data[i++];\r\n                var ry = data[i++];\r\n                var startAngle = data[i++];\r\n                var endAngle = data[i++] + startAngle;\r\n                i += 1;\r\n                var anticlockwise = !data[i++];\r\n                x1 = Math.cos(startAngle) * rx + cx;\r\n                y1 = Math.sin(startAngle) * ry + cy;\r\n                if (isFirst) {\r\n                    x0 = x1;\r\n                    y0 = y1;\r\n                    createNewSubpath(x0, y0);\r\n                }\r\n                else {\r\n                    addLine(xi, yi, x1, y1);\r\n                }\r\n                xi = Math.cos(endAngle) * rx + cx;\r\n                yi = Math.sin(endAngle) * ry + cy;\r\n                var step = (anticlockwise ? -1 : 1) * Math.PI / 2;\r\n                for (var angle = startAngle; anticlockwise ? angle > endAngle : angle < endAngle; angle += step) {\r\n                    var nextAngle = anticlockwise ? Math.max(angle + step, endAngle)\r\n                        : Math.min(angle + step, endAngle);\r\n                    addArc(angle, nextAngle, cx, cy, rx, ry);\r\n                }\r\n                break;\r\n            case CMD.R:\r\n                x0 = xi = data[i++];\r\n                y0 = yi = data[i++];\r\n                x1 = x0 + data[i++];\r\n                y1 = y0 + data[i++];\r\n                createNewSubpath(x1, y0);\r\n                addLine(x1, y0, x1, y1);\r\n                addLine(x1, y1, x0, y1);\r\n                addLine(x0, y1, x0, y0);\r\n                addLine(x0, y0, x1, y0);\r\n                break;\r\n            case CMD.Z:\r\n                currentSubpath && addLine(xi, yi, x0, y0);\r\n                xi = x0;\r\n                yi = y0;\r\n                break;\r\n        }\r\n    }\r\n    if (currentSubpath && currentSubpath.length > 2) {\r\n        bezierArrayGroups.push(currentSubpath);\r\n    }\r\n    return bezierArrayGroups;\r\n}\r\nfunction adpativeBezier(x0, y0, x1, y1, x2, y2, x3, y3, out, scale) {\r\n    if (aroundEqual(x0, x1) && aroundEqual(y0, y1) && aroundEqual(x2, x3) && aroundEqual(y2, y3)) {\r\n        out.push(x3, y3);\r\n        return;\r\n    }\r\n    var PIXEL_DISTANCE = 2 / scale;\r\n    var PIXEL_DISTANCE_SQR = PIXEL_DISTANCE * PIXEL_DISTANCE;\r\n    var dx = x3 - x0;\r\n    var dy = y3 - y0;\r\n    var d = Math.sqrt(dx * dx + dy * dy);\r\n    dx /= d;\r\n    dy /= d;\r\n    var dx1 = x1 - x0;\r\n    var dy1 = y1 - y0;\r\n    var dx2 = x2 - x3;\r\n    var dy2 = y2 - y3;\r\n    var cp1LenSqr = dx1 * dx1 + dy1 * dy1;\r\n    var cp2LenSqr = dx2 * dx2 + dy2 * dy2;\r\n    if (cp1LenSqr < PIXEL_DISTANCE_SQR && cp2LenSqr < PIXEL_DISTANCE_SQR) {\r\n        out.push(x3, y3);\r\n        return;\r\n    }\r\n    var projLen1 = dx * dx1 + dy * dy1;\r\n    var projLen2 = -dx * dx2 - dy * dy2;\r\n    var d1Sqr = cp1LenSqr - projLen1 * projLen1;\r\n    var d2Sqr = cp2LenSqr - projLen2 * projLen2;\r\n    if (d1Sqr < PIXEL_DISTANCE_SQR && projLen1 >= 0\r\n        && d2Sqr < PIXEL_DISTANCE_SQR && projLen2 >= 0) {\r\n        out.push(x3, y3);\r\n        return;\r\n    }\r\n    var tmpSegX = [];\r\n    var tmpSegY = [];\r\n    cubicSubdivide(x0, x1, x2, x3, 0.5, tmpSegX);\r\n    cubicSubdivide(y0, y1, y2, y3, 0.5, tmpSegY);\r\n    adpativeBezier(tmpSegX[0], tmpSegY[0], tmpSegX[1], tmpSegY[1], tmpSegX[2], tmpSegY[2], tmpSegX[3], tmpSegY[3], out, scale);\r\n    adpativeBezier(tmpSegX[4], tmpSegY[4], tmpSegX[5], tmpSegY[5], tmpSegX[6], tmpSegY[6], tmpSegX[7], tmpSegY[7], out, scale);\r\n}\r\nexport function pathToPolygons(path, scale) {\r\n    var bezierArrayGroups = pathToBezierCurves(path);\r\n    var polygons = [];\r\n    scale = scale || 1;\r\n    for (var i = 0; i < bezierArrayGroups.length; i++) {\r\n        var beziers = bezierArrayGroups[i];\r\n        var polygon = [];\r\n        var x0 = beziers[0];\r\n        var y0 = beziers[1];\r\n        polygon.push(x0, y0);\r\n        for (var k = 2; k < beziers.length;) {\r\n            var x1 = beziers[k++];\r\n            var y1 = beziers[k++];\r\n            var x2 = beziers[k++];\r\n            var y2 = beziers[k++];\r\n            var x3 = beziers[k++];\r\n            var y3 = beziers[k++];\r\n            adpativeBezier(x0, y0, x1, y1, x2, y2, x3, y3, polygon, scale);\r\n            x0 = x3;\r\n            y0 = y3;\r\n        }\r\n        polygons.push(polygon);\r\n    }\r\n    return polygons;\r\n}\r\n", "import { fromPoints } from '../core/bbox';\r\nimport BoundingRect from '../core/BoundingRect';\r\nimport Point from '../core/Point';\r\nimport { map } from '../core/util';\r\nimport Polygon from '../graphic/shape/Polygon';\r\nimport Rect from '../graphic/shape/Rect';\r\nimport Sector from '../graphic/shape/Sector';\r\nimport { pathToPolygons } from './convertPath';\r\nimport { clonePath } from './path';\r\nfunction getDividingGrids(dimSize, rowDim, count) {\r\n    var rowSize = dimSize[rowDim];\r\n    var columnSize = dimSize[1 - rowDim];\r\n    var ratio = Math.abs(rowSize / columnSize);\r\n    var rowCount = Math.ceil(Math.sqrt(ratio * count));\r\n    var columnCount = Math.floor(count / rowCount);\r\n    if (columnCount === 0) {\r\n        columnCount = 1;\r\n        rowCount = count;\r\n    }\r\n    var grids = [];\r\n    for (var i = 0; i < rowCount; i++) {\r\n        grids.push(columnCount);\r\n    }\r\n    var currentCount = rowCount * columnCount;\r\n    var remained = count - currentCount;\r\n    if (remained > 0) {\r\n        for (var i = 0; i < remained; i++) {\r\n            grids[i % rowCount] += 1;\r\n        }\r\n    }\r\n    return grids;\r\n}\r\nfunction divideSector(sectorShape, count, outShapes) {\r\n    var r0 = sectorShape.r0;\r\n    var r = sectorShape.r;\r\n    var startAngle = sectorShape.startAngle;\r\n    var endAngle = sectorShape.endAngle;\r\n    var angle = Math.abs(endAngle - startAngle);\r\n    var arcLen = angle * r;\r\n    var deltaR = r - r0;\r\n    var isAngleRow = arcLen > Math.abs(deltaR);\r\n    var grids = getDividingGrids([arcLen, deltaR], isAngleRow ? 0 : 1, count);\r\n    var rowSize = (isAngleRow ? angle : deltaR) / grids.length;\r\n    for (var row = 0; row < grids.length; row++) {\r\n        var columnSize = (isAngleRow ? deltaR : angle) / grids[row];\r\n        for (var column = 0; column < grids[row]; column++) {\r\n            var newShape = {};\r\n            if (isAngleRow) {\r\n                newShape.startAngle = startAngle + rowSize * row;\r\n                newShape.endAngle = startAngle + rowSize * (row + 1);\r\n                newShape.r0 = r0 + columnSize * column;\r\n                newShape.r = r0 + columnSize * (column + 1);\r\n            }\r\n            else {\r\n                newShape.startAngle = startAngle + columnSize * column;\r\n                newShape.endAngle = startAngle + columnSize * (column + 1);\r\n                newShape.r0 = r0 + rowSize * row;\r\n                newShape.r = r0 + rowSize * (row + 1);\r\n            }\r\n            newShape.clockwise = sectorShape.clockwise;\r\n            newShape.cx = sectorShape.cx;\r\n            newShape.cy = sectorShape.cy;\r\n            outShapes.push(newShape);\r\n        }\r\n    }\r\n}\r\nfunction divideRect(rectShape, count, outShapes) {\r\n    var width = rectShape.width;\r\n    var height = rectShape.height;\r\n    var isHorizontalRow = width > height;\r\n    var grids = getDividingGrids([width, height], isHorizontalRow ? 0 : 1, count);\r\n    var rowSizeDim = isHorizontalRow ? 'width' : 'height';\r\n    var columnSizeDim = isHorizontalRow ? 'height' : 'width';\r\n    var rowDim = isHorizontalRow ? 'x' : 'y';\r\n    var columnDim = isHorizontalRow ? 'y' : 'x';\r\n    var rowSize = rectShape[rowSizeDim] / grids.length;\r\n    for (var row = 0; row < grids.length; row++) {\r\n        var columnSize = rectShape[columnSizeDim] / grids[row];\r\n        for (var column = 0; column < grids[row]; column++) {\r\n            var newShape = {};\r\n            newShape[rowDim] = row * rowSize;\r\n            newShape[columnDim] = column * columnSize;\r\n            newShape[rowSizeDim] = rowSize;\r\n            newShape[columnSizeDim] = columnSize;\r\n            newShape.x += rectShape.x;\r\n            newShape.y += rectShape.y;\r\n            outShapes.push(newShape);\r\n        }\r\n    }\r\n}\r\nfunction crossProduct2d(x1, y1, x2, y2) {\r\n    return x1 * y2 - x2 * y1;\r\n}\r\nfunction lineLineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\r\n    var mx = a2x - a1x;\r\n    var my = a2y - a1y;\r\n    var nx = b2x - b1x;\r\n    var ny = b2y - b1y;\r\n    var nmCrossProduct = crossProduct2d(nx, ny, mx, my);\r\n    if (Math.abs(nmCrossProduct) < 1e-6) {\r\n        return null;\r\n    }\r\n    var b1a1x = a1x - b1x;\r\n    var b1a1y = a1y - b1y;\r\n    var p = crossProduct2d(b1a1x, b1a1y, nx, ny) / nmCrossProduct;\r\n    if (p < 0 || p > 1) {\r\n        return null;\r\n    }\r\n    return new Point(p * mx + a1x, p * my + a1y);\r\n}\r\nfunction projPtOnLine(pt, lineA, lineB) {\r\n    var dir = new Point();\r\n    Point.sub(dir, lineB, lineA);\r\n    dir.normalize();\r\n    var dir2 = new Point();\r\n    Point.sub(dir2, pt, lineA);\r\n    var len = dir2.dot(dir);\r\n    return len;\r\n}\r\nfunction addToPoly(poly, pt) {\r\n    var last = poly[poly.length - 1];\r\n    if (last && last[0] === pt[0] && last[1] === pt[1]) {\r\n        return;\r\n    }\r\n    poly.push(pt);\r\n}\r\nfunction splitPolygonByLine(points, lineA, lineB) {\r\n    var len = points.length;\r\n    var intersections = [];\r\n    for (var i = 0; i < len; i++) {\r\n        var p0 = points[i];\r\n        var p1 = points[(i + 1) % len];\r\n        var intersectionPt = lineLineIntersect(p0[0], p0[1], p1[0], p1[1], lineA.x, lineA.y, lineB.x, lineB.y);\r\n        if (intersectionPt) {\r\n            intersections.push({\r\n                projPt: projPtOnLine(intersectionPt, lineA, lineB),\r\n                pt: intersectionPt,\r\n                idx: i\r\n            });\r\n        }\r\n    }\r\n    if (intersections.length < 2) {\r\n        return [{ points: points }, { points: points }];\r\n    }\r\n    intersections.sort(function (a, b) {\r\n        return a.projPt - b.projPt;\r\n    });\r\n    var splitPt0 = intersections[0];\r\n    var splitPt1 = intersections[intersections.length - 1];\r\n    if (splitPt1.idx < splitPt0.idx) {\r\n        var tmp = splitPt0;\r\n        splitPt0 = splitPt1;\r\n        splitPt1 = tmp;\r\n    }\r\n    var splitPt0Arr = [splitPt0.pt.x, splitPt0.pt.y];\r\n    var splitPt1Arr = [splitPt1.pt.x, splitPt1.pt.y];\r\n    var newPolyA = [splitPt0Arr];\r\n    var newPolyB = [splitPt1Arr];\r\n    for (var i = splitPt0.idx + 1; i <= splitPt1.idx; i++) {\r\n        addToPoly(newPolyA, points[i].slice());\r\n    }\r\n    addToPoly(newPolyA, splitPt1Arr);\r\n    addToPoly(newPolyA, splitPt0Arr);\r\n    for (var i = splitPt1.idx + 1; i <= splitPt0.idx + len; i++) {\r\n        addToPoly(newPolyB, points[i % len].slice());\r\n    }\r\n    addToPoly(newPolyB, splitPt0Arr);\r\n    addToPoly(newPolyB, splitPt1Arr);\r\n    return [{\r\n            points: newPolyA\r\n        }, {\r\n            points: newPolyB\r\n        }];\r\n}\r\nfunction binaryDividePolygon(polygonShape) {\r\n    var points = polygonShape.points;\r\n    var min = [];\r\n    var max = [];\r\n    fromPoints(points, min, max);\r\n    var boundingRect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\r\n    var width = boundingRect.width;\r\n    var height = boundingRect.height;\r\n    var x = boundingRect.x;\r\n    var y = boundingRect.y;\r\n    var pt0 = new Point();\r\n    var pt1 = new Point();\r\n    if (width > height) {\r\n        pt0.x = pt1.x = x + width / 2;\r\n        pt0.y = y;\r\n        pt1.y = y + height;\r\n    }\r\n    else {\r\n        pt0.y = pt1.y = y + height / 2;\r\n        pt0.x = x;\r\n        pt1.x = x + width;\r\n    }\r\n    return splitPolygonByLine(points, pt0, pt1);\r\n}\r\nfunction binaryDivideRecursive(divider, shape, count, out) {\r\n    if (count === 1) {\r\n        out.push(shape);\r\n    }\r\n    else {\r\n        var mid = Math.floor(count / 2);\r\n        var sub = divider(shape);\r\n        binaryDivideRecursive(divider, sub[0], mid, out);\r\n        binaryDivideRecursive(divider, sub[1], count - mid, out);\r\n    }\r\n    return out;\r\n}\r\nexport function clone(path, count) {\r\n    var paths = [];\r\n    for (var i = 0; i < count; i++) {\r\n        paths.push(clonePath(path));\r\n    }\r\n    return paths;\r\n}\r\nfunction copyPathProps(source, target) {\r\n    target.setStyle(source.style);\r\n    target.z = source.z;\r\n    target.z2 = source.z2;\r\n    target.zlevel = source.zlevel;\r\n}\r\nfunction polygonConvert(points) {\r\n    var out = [];\r\n    for (var i = 0; i < points.length;) {\r\n        out.push([points[i++], points[i++]]);\r\n    }\r\n    return out;\r\n}\r\nexport function split(path, count) {\r\n    var outShapes = [];\r\n    var shape = path.shape;\r\n    var OutShapeCtor;\r\n    switch (path.type) {\r\n        case 'rect':\r\n            divideRect(shape, count, outShapes);\r\n            OutShapeCtor = Rect;\r\n            break;\r\n        case 'sector':\r\n            divideSector(shape, count, outShapes);\r\n            OutShapeCtor = Sector;\r\n            break;\r\n        case 'circle':\r\n            divideSector({\r\n                r0: 0, r: shape.r, startAngle: 0, endAngle: Math.PI * 2,\r\n                cx: shape.cx, cy: shape.cy\r\n            }, count, outShapes);\r\n            OutShapeCtor = Sector;\r\n            break;\r\n        default:\r\n            var m = path.getComputedTransform();\r\n            var scale = m ? Math.sqrt(Math.max(m[0] * m[0] + m[1] * m[1], m[2] * m[2] + m[3] * m[3])) : 1;\r\n            var polygons = map(pathToPolygons(path.getUpdatedPathProxy(), scale), function (poly) { return polygonConvert(poly); });\r\n            var polygonCount = polygons.length;\r\n            if (polygonCount === 0) {\r\n                binaryDivideRecursive(binaryDividePolygon, {\r\n                    points: polygons[0]\r\n                }, count, outShapes);\r\n            }\r\n            else if (polygonCount === count) {\r\n                for (var i = 0; i < polygonCount; i++) {\r\n                    outShapes.push({\r\n                        points: polygons[i]\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                var totalArea_1 = 0;\r\n                var items = map(polygons, function (poly) {\r\n                    var min = [];\r\n                    var max = [];\r\n                    fromPoints(poly, min, max);\r\n                    var area = (max[1] - min[1]) * (max[0] - min[0]);\r\n                    totalArea_1 += area;\r\n                    return { poly: poly, area: area };\r\n                });\r\n                items.sort(function (a, b) { return b.area - a.area; });\r\n                var left = count;\r\n                for (var i = 0; i < polygonCount; i++) {\r\n                    var item = items[i];\r\n                    if (left <= 0) {\r\n                        break;\r\n                    }\r\n                    var selfCount = i === polygonCount - 1\r\n                        ? left\r\n                        : Math.ceil(item.area / totalArea_1 * count);\r\n                    if (selfCount < 0) {\r\n                        continue;\r\n                    }\r\n                    binaryDivideRecursive(binaryDividePolygon, {\r\n                        points: item.poly\r\n                    }, selfCount, outShapes);\r\n                    left -= selfCount;\r\n                }\r\n                ;\r\n            }\r\n            OutShapeCtor = Polygon;\r\n            break;\r\n    }\r\n    if (!OutShapeCtor) {\r\n        return clone(path, count);\r\n    }\r\n    var out = [];\r\n    for (var i = 0; i < outShapes.length; i++) {\r\n        var subPath = new OutShapeCtor();\r\n        subPath.setShape(outShapes[i]);\r\n        copyPathProps(path, subPath);\r\n        out.push(subPath);\r\n    }\r\n    return out;\r\n}\r\n", "import { cubicSubdivide } from '../core/curve';\r\nimport Path from '../graphic/Path';\r\nimport { defaults, map } from '../core/util';\r\nimport { lerp } from '../core/vector';\r\nimport { clonePath } from './path';\r\nimport Transformable from '../core/Transformable';\r\nimport { split } from './dividePath';\r\nimport { pathToBezierCurves } from './convertPath';\r\nfunction alignSubpath(subpath1, subpath2) {\r\n    var len1 = subpath1.length;\r\n    var len2 = subpath2.length;\r\n    if (len1 === len2) {\r\n        return [subpath1, subpath2];\r\n    }\r\n    var tmpSegX = [];\r\n    var tmpSegY = [];\r\n    var shorterPath = len1 < len2 ? subpath1 : subpath2;\r\n    var shorterLen = Math.min(len1, len2);\r\n    var diff = Math.abs(len2 - len1) / 6;\r\n    var shorterBezierCount = (shorterLen - 2) / 6;\r\n    var eachCurveSubDivCount = Math.ceil(diff / shorterBezierCount) + 1;\r\n    var newSubpath = [shorterPath[0], shorterPath[1]];\r\n    var remained = diff;\r\n    for (var i = 2; i < shorterLen;) {\r\n        var x0 = shorterPath[i - 2];\r\n        var y0 = shorterPath[i - 1];\r\n        var x1 = shorterPath[i++];\r\n        var y1 = shorterPath[i++];\r\n        var x2 = shorterPath[i++];\r\n        var y2 = shorterPath[i++];\r\n        var x3 = shorterPath[i++];\r\n        var y3 = shorterPath[i++];\r\n        if (remained <= 0) {\r\n            newSubpath.push(x1, y1, x2, y2, x3, y3);\r\n            continue;\r\n        }\r\n        var actualSubDivCount = Math.min(remained, eachCurveSubDivCount - 1) + 1;\r\n        for (var k = 1; k <= actualSubDivCount; k++) {\r\n            var p = k / actualSubDivCount;\r\n            cubicSubdivide(x0, x1, x2, x3, p, tmpSegX);\r\n            cubicSubdivide(y0, y1, y2, y3, p, tmpSegY);\r\n            x0 = tmpSegX[3];\r\n            y0 = tmpSegY[3];\r\n            newSubpath.push(tmpSegX[1], tmpSegY[1], tmpSegX[2], tmpSegY[2], x0, y0);\r\n            x1 = tmpSegX[5];\r\n            y1 = tmpSegY[5];\r\n            x2 = tmpSegX[6];\r\n            y2 = tmpSegY[6];\r\n        }\r\n        remained -= actualSubDivCount - 1;\r\n    }\r\n    return shorterPath === subpath1 ? [newSubpath, subpath2] : [subpath1, newSubpath];\r\n}\r\nfunction createSubpath(lastSubpathSubpath, otherSubpath) {\r\n    var len = lastSubpathSubpath.length;\r\n    var lastX = lastSubpathSubpath[len - 2];\r\n    var lastY = lastSubpathSubpath[len - 1];\r\n    var newSubpath = [];\r\n    for (var i = 0; i < otherSubpath.length;) {\r\n        newSubpath[i++] = lastX;\r\n        newSubpath[i++] = lastY;\r\n    }\r\n    return newSubpath;\r\n}\r\nexport function alignBezierCurves(array1, array2) {\r\n    var _a;\r\n    var lastSubpath1;\r\n    var lastSubpath2;\r\n    var newArray1 = [];\r\n    var newArray2 = [];\r\n    for (var i = 0; i < Math.max(array1.length, array2.length); i++) {\r\n        var subpath1 = array1[i];\r\n        var subpath2 = array2[i];\r\n        var newSubpath1 = void 0;\r\n        var newSubpath2 = void 0;\r\n        if (!subpath1) {\r\n            newSubpath1 = createSubpath(lastSubpath1 || subpath2, subpath2);\r\n            newSubpath2 = subpath2;\r\n        }\r\n        else if (!subpath2) {\r\n            newSubpath2 = createSubpath(lastSubpath2 || subpath1, subpath1);\r\n            newSubpath1 = subpath1;\r\n        }\r\n        else {\r\n            _a = alignSubpath(subpath1, subpath2), newSubpath1 = _a[0], newSubpath2 = _a[1];\r\n            lastSubpath1 = newSubpath1;\r\n            lastSubpath2 = newSubpath2;\r\n        }\r\n        newArray1.push(newSubpath1);\r\n        newArray2.push(newSubpath2);\r\n    }\r\n    return [newArray1, newArray2];\r\n}\r\nexport function centroid(array) {\r\n    var signedArea = 0;\r\n    var cx = 0;\r\n    var cy = 0;\r\n    var len = array.length;\r\n    for (var i = 0, j = len - 2; i < len; j = i, i += 2) {\r\n        var x0 = array[j];\r\n        var y0 = array[j + 1];\r\n        var x1 = array[i];\r\n        var y1 = array[i + 1];\r\n        var a = x0 * y1 - x1 * y0;\r\n        signedArea += a;\r\n        cx += (x0 + x1) * a;\r\n        cy += (y0 + y1) * a;\r\n    }\r\n    if (signedArea === 0) {\r\n        return [array[0] || 0, array[1] || 0];\r\n    }\r\n    return [cx / signedArea / 3, cy / signedArea / 3, signedArea];\r\n}\r\nfunction findBestRingOffset(fromSubBeziers, toSubBeziers, fromCp, toCp) {\r\n    var bezierCount = (fromSubBeziers.length - 2) / 6;\r\n    var bestScore = Infinity;\r\n    var bestOffset = 0;\r\n    var len = fromSubBeziers.length;\r\n    var len2 = len - 2;\r\n    for (var offset = 0; offset < bezierCount; offset++) {\r\n        var cursorOffset = offset * 6;\r\n        var score = 0;\r\n        for (var k = 0; k < len; k += 2) {\r\n            var idx = k === 0 ? cursorOffset : ((cursorOffset + k - 2) % len2 + 2);\r\n            var x0 = fromSubBeziers[idx] - fromCp[0];\r\n            var y0 = fromSubBeziers[idx + 1] - fromCp[1];\r\n            var x1 = toSubBeziers[k] - toCp[0];\r\n            var y1 = toSubBeziers[k + 1] - toCp[1];\r\n            var dx = x1 - x0;\r\n            var dy = y1 - y0;\r\n            score += dx * dx + dy * dy;\r\n        }\r\n        if (score < bestScore) {\r\n            bestScore = score;\r\n            bestOffset = offset;\r\n        }\r\n    }\r\n    return bestOffset;\r\n}\r\nfunction reverse(array) {\r\n    var newArr = [];\r\n    var len = array.length;\r\n    for (var i = 0; i < len; i += 2) {\r\n        newArr[i] = array[len - i - 2];\r\n        newArr[i + 1] = array[len - i - 1];\r\n    }\r\n    return newArr;\r\n}\r\nfunction findBestMorphingRotation(fromArr, toArr, searchAngleIteration, searchAngleRange) {\r\n    var result = [];\r\n    var fromNeedsReverse;\r\n    for (var i = 0; i < fromArr.length; i++) {\r\n        var fromSubpathBezier = fromArr[i];\r\n        var toSubpathBezier = toArr[i];\r\n        var fromCp = centroid(fromSubpathBezier);\r\n        var toCp = centroid(toSubpathBezier);\r\n        if (fromNeedsReverse == null) {\r\n            fromNeedsReverse = fromCp[2] < 0 !== toCp[2] < 0;\r\n        }\r\n        var newFromSubpathBezier = [];\r\n        var newToSubpathBezier = [];\r\n        var bestAngle = 0;\r\n        var bestScore = Infinity;\r\n        var tmpArr = [];\r\n        var len = fromSubpathBezier.length;\r\n        if (fromNeedsReverse) {\r\n            fromSubpathBezier = reverse(fromSubpathBezier);\r\n        }\r\n        var offset = findBestRingOffset(fromSubpathBezier, toSubpathBezier, fromCp, toCp) * 6;\r\n        var len2 = len - 2;\r\n        for (var k = 0; k < len2; k += 2) {\r\n            var idx = (offset + k) % len2 + 2;\r\n            newFromSubpathBezier[k + 2] = fromSubpathBezier[idx] - fromCp[0];\r\n            newFromSubpathBezier[k + 3] = fromSubpathBezier[idx + 1] - fromCp[1];\r\n        }\r\n        newFromSubpathBezier[0] = fromSubpathBezier[offset] - fromCp[0];\r\n        newFromSubpathBezier[1] = fromSubpathBezier[offset + 1] - fromCp[1];\r\n        if (searchAngleIteration > 0) {\r\n            var step = searchAngleRange / searchAngleIteration;\r\n            for (var angle = -searchAngleRange / 2; angle <= searchAngleRange / 2; angle += step) {\r\n                var sa = Math.sin(angle);\r\n                var ca = Math.cos(angle);\r\n                var score = 0;\r\n                for (var k = 0; k < fromSubpathBezier.length; k += 2) {\r\n                    var x0 = newFromSubpathBezier[k];\r\n                    var y0 = newFromSubpathBezier[k + 1];\r\n                    var x1 = toSubpathBezier[k] - toCp[0];\r\n                    var y1 = toSubpathBezier[k + 1] - toCp[1];\r\n                    var newX1 = x1 * ca - y1 * sa;\r\n                    var newY1 = x1 * sa + y1 * ca;\r\n                    tmpArr[k] = newX1;\r\n                    tmpArr[k + 1] = newY1;\r\n                    var dx = newX1 - x0;\r\n                    var dy = newY1 - y0;\r\n                    score += dx * dx + dy * dy;\r\n                }\r\n                if (score < bestScore) {\r\n                    bestScore = score;\r\n                    bestAngle = angle;\r\n                    for (var m = 0; m < tmpArr.length; m++) {\r\n                        newToSubpathBezier[m] = tmpArr[m];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (var i_1 = 0; i_1 < len; i_1 += 2) {\r\n                newToSubpathBezier[i_1] = toSubpathBezier[i_1] - toCp[0];\r\n                newToSubpathBezier[i_1 + 1] = toSubpathBezier[i_1 + 1] - toCp[1];\r\n            }\r\n        }\r\n        result.push({\r\n            from: newFromSubpathBezier,\r\n            to: newToSubpathBezier,\r\n            fromCp: fromCp,\r\n            toCp: toCp,\r\n            rotation: -bestAngle\r\n        });\r\n    }\r\n    return result;\r\n}\r\nexport function isCombineMorphing(path) {\r\n    return path.__isCombineMorphing;\r\n}\r\nexport function isMorphing(el) {\r\n    return el.__morphT >= 0;\r\n}\r\nvar SAVED_METHOD_PREFIX = '__mOriginal_';\r\nfunction saveAndModifyMethod(obj, methodName, modifiers) {\r\n    var savedMethodName = SAVED_METHOD_PREFIX + methodName;\r\n    var originalMethod = obj[savedMethodName] || obj[methodName];\r\n    if (!obj[savedMethodName]) {\r\n        obj[savedMethodName] = obj[methodName];\r\n    }\r\n    var replace = modifiers.replace;\r\n    var after = modifiers.after;\r\n    var before = modifiers.before;\r\n    obj[methodName] = function () {\r\n        var args = arguments;\r\n        var res;\r\n        before && before.apply(this, args);\r\n        if (replace) {\r\n            res = replace.apply(this, args);\r\n        }\r\n        else {\r\n            res = originalMethod.apply(this, args);\r\n        }\r\n        after && after.apply(this, args);\r\n        return res;\r\n    };\r\n}\r\nfunction restoreMethod(obj, methodName) {\r\n    var savedMethodName = SAVED_METHOD_PREFIX + methodName;\r\n    if (obj[savedMethodName]) {\r\n        obj[methodName] = obj[savedMethodName];\r\n        obj[savedMethodName] = null;\r\n    }\r\n}\r\nfunction applyTransformOnBeziers(bezierCurves, mm) {\r\n    for (var i = 0; i < bezierCurves.length; i++) {\r\n        var subBeziers = bezierCurves[i];\r\n        for (var k = 0; k < subBeziers.length;) {\r\n            var x = subBeziers[k];\r\n            var y = subBeziers[k + 1];\r\n            subBeziers[k++] = mm[0] * x + mm[2] * y + mm[4];\r\n            subBeziers[k++] = mm[1] * x + mm[3] * y + mm[5];\r\n        }\r\n    }\r\n}\r\nfunction prepareMorphPath(fromPath, toPath) {\r\n    var fromPathProxy = fromPath.getUpdatedPathProxy();\r\n    var toPathProxy = toPath.getUpdatedPathProxy();\r\n    var _a = alignBezierCurves(pathToBezierCurves(fromPathProxy), pathToBezierCurves(toPathProxy)), fromBezierCurves = _a[0], toBezierCurves = _a[1];\r\n    var fromPathTransform = fromPath.getComputedTransform();\r\n    var toPathTransform = toPath.getComputedTransform();\r\n    function updateIdentityTransform() {\r\n        this.transform = null;\r\n    }\r\n    fromPathTransform && applyTransformOnBeziers(fromBezierCurves, fromPathTransform);\r\n    toPathTransform && applyTransformOnBeziers(toBezierCurves, toPathTransform);\r\n    saveAndModifyMethod(toPath, 'updateTransform', { replace: updateIdentityTransform });\r\n    toPath.transform = null;\r\n    var morphingData = findBestMorphingRotation(fromBezierCurves, toBezierCurves, 10, Math.PI);\r\n    var tmpArr = [];\r\n    saveAndModifyMethod(toPath, 'buildPath', { replace: function (path) {\r\n            var t = toPath.__morphT;\r\n            var onet = 1 - t;\r\n            var newCp = [];\r\n            for (var i = 0; i < morphingData.length; i++) {\r\n                var item = morphingData[i];\r\n                var from = item.from;\r\n                var to = item.to;\r\n                var angle = item.rotation * t;\r\n                var fromCp = item.fromCp;\r\n                var toCp = item.toCp;\r\n                var sa = Math.sin(angle);\r\n                var ca = Math.cos(angle);\r\n                lerp(newCp, fromCp, toCp, t);\r\n                for (var m = 0; m < from.length; m += 2) {\r\n                    var x0_1 = from[m];\r\n                    var y0_1 = from[m + 1];\r\n                    var x1 = to[m];\r\n                    var y1 = to[m + 1];\r\n                    var x = x0_1 * onet + x1 * t;\r\n                    var y = y0_1 * onet + y1 * t;\r\n                    tmpArr[m] = (x * ca - y * sa) + newCp[0];\r\n                    tmpArr[m + 1] = (x * sa + y * ca) + newCp[1];\r\n                }\r\n                var x0 = tmpArr[0];\r\n                var y0 = tmpArr[1];\r\n                path.moveTo(x0, y0);\r\n                for (var m = 2; m < from.length;) {\r\n                    var x1 = tmpArr[m++];\r\n                    var y1 = tmpArr[m++];\r\n                    var x2 = tmpArr[m++];\r\n                    var y2 = tmpArr[m++];\r\n                    var x3 = tmpArr[m++];\r\n                    var y3 = tmpArr[m++];\r\n                    if (x0 === x1 && y0 === y1 && x2 === x3 && y2 === y3) {\r\n                        path.lineTo(x3, y3);\r\n                    }\r\n                    else {\r\n                        path.bezierCurveTo(x1, y1, x2, y2, x3, y3);\r\n                    }\r\n                    x0 = x3;\r\n                    y0 = y3;\r\n                }\r\n            }\r\n        } });\r\n}\r\nexport function morphPath(fromPath, toPath, animationOpts) {\r\n    if (!fromPath || !toPath) {\r\n        return toPath;\r\n    }\r\n    var oldDone = animationOpts.done;\r\n    var oldDuring = animationOpts.during;\r\n    prepareMorphPath(fromPath, toPath);\r\n    toPath.__morphT = 0;\r\n    function restoreToPath() {\r\n        restoreMethod(toPath, 'buildPath');\r\n        restoreMethod(toPath, 'updateTransform');\r\n        toPath.__morphT = -1;\r\n        toPath.createPathProxy();\r\n        toPath.dirtyShape();\r\n    }\r\n    toPath.animateTo({\r\n        __morphT: 1\r\n    }, defaults({\r\n        during: function (p) {\r\n            toPath.dirtyShape();\r\n            oldDuring && oldDuring(p);\r\n        },\r\n        done: function () {\r\n            restoreToPath();\r\n            oldDone && oldDone();\r\n        }\r\n    }, animationOpts));\r\n    return toPath;\r\n}\r\nfunction hilbert(x, y, minX, minY, maxX, maxY) {\r\n    var bits = 16;\r\n    x = (maxX === minX) ? 0 : Math.round(32767 * (x - minX) / (maxX - minX));\r\n    y = (maxY === minY) ? 0 : Math.round(32767 * (y - minY) / (maxY - minY));\r\n    var d = 0;\r\n    var tmp;\r\n    for (var s = (1 << bits) / 2; s > 0; s /= 2) {\r\n        var rx = 0;\r\n        var ry = 0;\r\n        if ((x & s) > 0) {\r\n            rx = 1;\r\n        }\r\n        if ((y & s) > 0) {\r\n            ry = 1;\r\n        }\r\n        d += s * s * ((3 * rx) ^ ry);\r\n        if (ry === 0) {\r\n            if (rx === 1) {\r\n                x = s - 1 - x;\r\n                y = s - 1 - y;\r\n            }\r\n            tmp = x;\r\n            x = y;\r\n            y = tmp;\r\n        }\r\n    }\r\n    return d;\r\n}\r\nfunction sortPaths(pathList) {\r\n    var xMin = Infinity;\r\n    var yMin = Infinity;\r\n    var xMax = -Infinity;\r\n    var yMax = -Infinity;\r\n    var cps = map(pathList, function (path) {\r\n        var rect = path.getBoundingRect();\r\n        var m = path.getComputedTransform();\r\n        var x = rect.x + rect.width / 2 + (m ? m[4] : 0);\r\n        var y = rect.y + rect.height / 2 + (m ? m[5] : 0);\r\n        xMin = Math.min(x, xMin);\r\n        yMin = Math.min(y, yMin);\r\n        xMax = Math.max(x, xMax);\r\n        yMax = Math.max(y, yMax);\r\n        return [x, y];\r\n    });\r\n    var items = map(cps, function (cp, idx) {\r\n        return {\r\n            cp: cp,\r\n            z: hilbert(cp[0], cp[1], xMin, yMin, xMax, yMax),\r\n            path: pathList[idx]\r\n        };\r\n    });\r\n    return items.sort(function (a, b) { return a.z - b.z; }).map(function (item) { return item.path; });\r\n}\r\n;\r\nfunction defaultDividePath(param) {\r\n    return split(param.path, param.count);\r\n}\r\nfunction createEmptyReturn() {\r\n    return {\r\n        fromIndividuals: [],\r\n        toIndividuals: [],\r\n        count: 0\r\n    };\r\n}\r\nexport function combineMorph(fromList, toPath, animationOpts) {\r\n    var fromPathList = [];\r\n    function addFromPath(fromList) {\r\n        for (var i = 0; i < fromList.length; i++) {\r\n            var from = fromList[i];\r\n            if (isCombineMorphing(from)) {\r\n                addFromPath(from.childrenRef());\r\n            }\r\n            else if (from instanceof Path) {\r\n                fromPathList.push(from);\r\n            }\r\n        }\r\n    }\r\n    addFromPath(fromList);\r\n    var separateCount = fromPathList.length;\r\n    if (!separateCount) {\r\n        return createEmptyReturn();\r\n    }\r\n    var dividePath = animationOpts.dividePath || defaultDividePath;\r\n    var toSubPathList = dividePath({\r\n        path: toPath, count: separateCount\r\n    });\r\n    if (toSubPathList.length !== separateCount) {\r\n        console.error('Invalid morphing: unmatched splitted path');\r\n        return createEmptyReturn();\r\n    }\r\n    fromPathList = sortPaths(fromPathList);\r\n    toSubPathList = sortPaths(toSubPathList);\r\n    var oldDone = animationOpts.done;\r\n    var oldDuring = animationOpts.during;\r\n    var individualDelay = animationOpts.individualDelay;\r\n    var identityTransform = new Transformable();\r\n    for (var i = 0; i < separateCount; i++) {\r\n        var from = fromPathList[i];\r\n        var to = toSubPathList[i];\r\n        to.parent = toPath;\r\n        to.copyTransform(identityTransform);\r\n        if (!individualDelay) {\r\n            prepareMorphPath(from, to);\r\n        }\r\n    }\r\n    toPath.__isCombineMorphing = true;\r\n    toPath.childrenRef = function () {\r\n        return toSubPathList;\r\n    };\r\n    function addToSubPathListToZr(zr) {\r\n        for (var i = 0; i < toSubPathList.length; i++) {\r\n            toSubPathList[i].addSelfToZr(zr);\r\n        }\r\n    }\r\n    saveAndModifyMethod(toPath, 'addSelfToZr', {\r\n        after: function (zr) {\r\n            addToSubPathListToZr(zr);\r\n        }\r\n    });\r\n    saveAndModifyMethod(toPath, 'removeSelfFromZr', {\r\n        after: function (zr) {\r\n            for (var i = 0; i < toSubPathList.length; i++) {\r\n                toSubPathList[i].removeSelfFromZr(zr);\r\n            }\r\n        }\r\n    });\r\n    function restoreToPath() {\r\n        toPath.__isCombineMorphing = false;\r\n        toPath.__morphT = -1;\r\n        toPath.childrenRef = null;\r\n        restoreMethod(toPath, 'addSelfToZr');\r\n        restoreMethod(toPath, 'removeSelfFromZr');\r\n    }\r\n    var toLen = toSubPathList.length;\r\n    if (individualDelay) {\r\n        var animating_1 = toLen;\r\n        var eachDone = function () {\r\n            animating_1--;\r\n            if (animating_1 === 0) {\r\n                restoreToPath();\r\n                oldDone && oldDone();\r\n            }\r\n        };\r\n        for (var i = 0; i < toLen; i++) {\r\n            var indivdualAnimationOpts = individualDelay ? defaults({\r\n                delay: (animationOpts.delay || 0) + individualDelay(i, toLen, fromPathList[i], toSubPathList[i]),\r\n                done: eachDone\r\n            }, animationOpts) : animationOpts;\r\n            morphPath(fromPathList[i], toSubPathList[i], indivdualAnimationOpts);\r\n        }\r\n    }\r\n    else {\r\n        toPath.__morphT = 0;\r\n        toPath.animateTo({\r\n            __morphT: 1\r\n        }, defaults({\r\n            during: function (p) {\r\n                for (var i = 0; i < toLen; i++) {\r\n                    var child = toSubPathList[i];\r\n                    child.__morphT = toPath.__morphT;\r\n                    child.dirtyShape();\r\n                }\r\n                oldDuring && oldDuring(p);\r\n            },\r\n            done: function () {\r\n                restoreToPath();\r\n                for (var i = 0; i < fromList.length; i++) {\r\n                    restoreMethod(fromList[i], 'updateTransform');\r\n                }\r\n                oldDone && oldDone();\r\n            }\r\n        }, animationOpts));\r\n    }\r\n    if (toPath.__zr) {\r\n        addToSubPathListToZr(toPath.__zr);\r\n    }\r\n    return {\r\n        fromIndividuals: fromPathList,\r\n        toIndividuals: toSubPathList,\r\n        count: toLen\r\n    };\r\n}\r\nexport function separateMorph(fromPath, toPathList, animationOpts) {\r\n    var toLen = toPathList.length;\r\n    var fromPathList = [];\r\n    var dividePath = animationOpts.dividePath || defaultDividePath;\r\n    function addFromPath(fromList) {\r\n        for (var i = 0; i < fromList.length; i++) {\r\n            var from = fromList[i];\r\n            if (isCombineMorphing(from)) {\r\n                addFromPath(from.childrenRef());\r\n            }\r\n            else if (from instanceof Path) {\r\n                fromPathList.push(from);\r\n            }\r\n        }\r\n    }\r\n    if (isCombineMorphing(fromPath)) {\r\n        addFromPath(fromPath.childrenRef());\r\n        var fromLen = fromPathList.length;\r\n        if (fromLen < toLen) {\r\n            var k = 0;\r\n            for (var i = fromLen; i < toLen; i++) {\r\n                fromPathList.push(clonePath(fromPathList[k++ % fromLen]));\r\n            }\r\n        }\r\n        fromPathList.length = toLen;\r\n    }\r\n    else {\r\n        fromPathList = dividePath({ path: fromPath, count: toLen });\r\n        var fromPathTransform = fromPath.getComputedTransform();\r\n        for (var i = 0; i < fromPathList.length; i++) {\r\n            fromPathList[i].setLocalTransform(fromPathTransform);\r\n        }\r\n        if (fromPathList.length !== toLen) {\r\n            console.error('Invalid morphing: unmatched splitted path');\r\n            return createEmptyReturn();\r\n        }\r\n    }\r\n    fromPathList = sortPaths(fromPathList);\r\n    toPathList = sortPaths(toPathList);\r\n    var individualDelay = animationOpts.individualDelay;\r\n    for (var i = 0; i < toLen; i++) {\r\n        var indivdualAnimationOpts = individualDelay ? defaults({\r\n            delay: (animationOpts.delay || 0) + individualDelay(i, toLen, fromPathList[i], toPathList[i])\r\n        }, animationOpts) : animationOpts;\r\n        morphPath(fromPathList[i], toPathList[i], indivdualAnimationOpts);\r\n    }\r\n    return {\r\n        fromIndividuals: fromPathList,\r\n        toIndividuals: toPathList,\r\n        count: toPathList.length\r\n    };\r\n}\r\nexport { split as defaultDividePath };\r\n", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { separateMorph, combineMorph, morphPath, isCombineMorphing } from 'zrender/lib/tool/morphPath';\r\nimport { Path } from '../util/graphic';\r\nimport { defaults, isArray } from 'zrender/lib/core/util';\r\nimport { getAnimationConfig } from './basicTrasition';\r\nimport { clonePath } from 'zrender/lib/tool/path';\r\n\r\nfunction isMultiple(elements) {\r\n  return isArray(elements[0]);\r\n}\r\n\r\nfunction prepareMorphBatches(one, many) {\r\n  var batches = [];\r\n  var batchCount = one.length;\r\n\r\n  for (var i = 0; i < batchCount; i++) {\r\n    batches.push({\r\n      one: one[i],\r\n      many: []\r\n    });\r\n  }\r\n\r\n  for (var i = 0; i < many.length; i++) {\r\n    var len = many[i].length;\r\n    var k = void 0;\r\n\r\n    for (k = 0; k < len; k++) {\r\n      batches[k % batchCount].many.push(many[i][k]);\r\n    }\r\n  }\r\n\r\n  var off = 0; // If one has more paths than each one of many. average them.\r\n\r\n  for (var i = batchCount - 1; i >= 0; i--) {\r\n    if (!batches[i].many.length) {\r\n      var moveFrom = batches[off].many;\r\n\r\n      if (moveFrom.length <= 1) {\r\n        // Not enough\r\n        // Start from the first one.\r\n        if (off) {\r\n          off = 0;\r\n        } else {\r\n          return batches;\r\n        }\r\n      }\r\n\r\n      var len = moveFrom.length;\r\n      var mid = Math.ceil(len / 2);\r\n      batches[i].many = moveFrom.slice(mid, len);\r\n      batches[off].many = moveFrom.slice(0, mid);\r\n      off++;\r\n    }\r\n  }\r\n\r\n  return batches;\r\n}\r\n\r\nvar pathDividers = {\r\n  clone: function (params) {\r\n    var ret = []; // Fitting the alpha\r\n\r\n    var approxOpacity = 1 - Math.pow(1 - params.path.style.opacity, 1 / params.count);\r\n\r\n    for (var i = 0; i < params.count; i++) {\r\n      var cloned = clonePath(params.path);\r\n      cloned.setStyle('opacity', approxOpacity);\r\n      ret.push(cloned);\r\n    }\r\n\r\n    return ret;\r\n  },\r\n  // Use the default divider\r\n  split: null\r\n};\r\nexport function applyMorphAnimation(from, to, divideShape, seriesModel, dataIndex, animateOtherProps) {\r\n  if (!from.length || !to.length) {\r\n    return;\r\n  }\r\n\r\n  var updateAnimationCfg = getAnimationConfig('update', seriesModel, dataIndex);\r\n\r\n  if (!(updateAnimationCfg && updateAnimationCfg.duration > 0)) {\r\n    return;\r\n  }\r\n\r\n  var animationDelay = seriesModel.getModel('universalTransition').get('delay');\r\n  var animationCfg = Object.assign({\r\n    // Need to setToFinal so the further calculation based on the style can be correct.\r\n    // Like emphasis color.\r\n    setToFinal: true\r\n  }, updateAnimationCfg);\r\n  var many;\r\n  var one;\r\n\r\n  if (isMultiple(from)) {\r\n    // manyToOne\r\n    many = from;\r\n    one = to;\r\n  }\r\n\r\n  if (isMultiple(to)) {\r\n    // oneToMany\r\n    many = to;\r\n    one = from;\r\n  }\r\n\r\n  function morphOneBatch(batch, fromIsMany, animateIndex, animateCount, forceManyOne) {\r\n    var batchMany = batch.many;\r\n    var batchOne = batch.one;\r\n\r\n    if (batchMany.length === 1 && !forceManyOne) {\r\n      // Is one to one\r\n      var batchFrom = fromIsMany ? batchMany[0] : batchOne;\r\n      var batchTo = fromIsMany ? batchOne : batchMany[0];\r\n\r\n      if (isCombineMorphing(batchFrom)) {\r\n        // Keep doing combine animation.\r\n        morphOneBatch({\r\n          many: [batchFrom],\r\n          one: batchTo\r\n        }, true, animateIndex, animateCount, true);\r\n      } else {\r\n        var individualAnimationCfg = animationDelay ? defaults({\r\n          delay: animationDelay(animateIndex, animateCount)\r\n        }, animationCfg) : animationCfg;\r\n        morphPath(batchFrom, batchTo, individualAnimationCfg);\r\n        animateOtherProps(batchFrom, batchTo, batchFrom, batchTo, individualAnimationCfg);\r\n      }\r\n    } else {\r\n      var separateAnimationCfg = defaults({\r\n        dividePath: pathDividers[divideShape],\r\n        individualDelay: animationDelay && function (idx, count, fromPath, toPath) {\r\n          return animationDelay(idx + animateIndex, animateCount);\r\n        }\r\n      }, animationCfg);\r\n\r\n      var _a = fromIsMany ? combineMorph(batchMany, batchOne, separateAnimationCfg) : separateMorph(batchOne, batchMany, separateAnimationCfg),\r\n          fromIndividuals = _a.fromIndividuals,\r\n          toIndividuals = _a.toIndividuals;\r\n\r\n      var count = fromIndividuals.length;\r\n\r\n      for (var k = 0; k < count; k++) {\r\n        var individualAnimationCfg = animationDelay ? defaults({\r\n          delay: animationDelay(k, count)\r\n        }, animationCfg) : animationCfg;\r\n        animateOtherProps(fromIndividuals[k], toIndividuals[k], fromIsMany ? batchMany[k] : batch.one, fromIsMany ? batch.one : batchMany[k], individualAnimationCfg);\r\n      }\r\n    }\r\n  }\r\n\r\n  var fromIsMany = many ? many === from // Is one to one. If the path number not match. also needs do merge and separate morphing.\r\n  : from.length > to.length;\r\n  var morphBatches = many ? prepareMorphBatches(one, many) : prepareMorphBatches(fromIsMany ? to : from, [fromIsMany ? from : to]);\r\n  var animateCount = 0;\r\n\r\n  for (var i = 0; i < morphBatches.length; i++) {\r\n    animateCount += morphBatches[i].many.length;\r\n  }\r\n\r\n  var animateIndex = 0;\r\n\r\n  for (var i = 0; i < morphBatches.length; i++) {\r\n    morphOneBatch(morphBatches[i], fromIsMany, animateIndex, animateCount);\r\n    animateIndex += morphBatches[i].many.length;\r\n  }\r\n}\r\nexport function getPathList(elements) {\r\n  if (!elements) {\r\n    return [];\r\n  }\r\n\r\n  if (isArray(elements)) {\r\n    var pathList_1 = [];\r\n\r\n    for (var i = 0; i < elements.length; i++) {\r\n      pathList_1.push(getPathList(elements[i]));\r\n    }\r\n\r\n    return pathList_1;\r\n  }\r\n\r\n  var pathList = [];\r\n  elements.traverse(function (el) {\r\n    if (el instanceof Path && !el.disableMorphing && !el.invisible && !el.ignore) {\r\n      pathList.push(el);\r\n    }\r\n  });\r\n  return pathList;\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// Universal transitions that can animate between any shapes(series) and any properties in any amounts.\r\nimport { SERIES_UNIVERSAL_TRANSITION_PROP } from '../model/Series';\r\nimport { createHashMap, each, map, filter, isArray } from 'zrender/lib/core/util';\r\nimport { applyMorphAnimation, getPathList } from './morphTransitionHelper';\r\nimport Path from 'zrender/lib/graphic/Path';\r\nimport { initProps } from '../util/graphic';\r\nimport DataDiffer from '../data/DataDiffer';\r\nimport { makeInner, normalizeToArray } from '../util/model';\r\nimport { warn } from '../util/log';\r\nimport { getAnimationConfig, getOldStyle } from './basicTrasition';\r\nimport Displayable from 'zrender/lib/graphic/Displayable';\r\nvar DATA_COUNT_THRESHOLD = 1e4;\r\n;\r\nvar getUniversalTransitionGlobalStore = makeInner();\r\n\r\nfunction getGroupIdDimension(data) {\r\n  var dimensions = data.dimensions;\r\n\r\n  for (var i = 0; i < dimensions.length; i++) {\r\n    var dimInfo = data.getDimensionInfo(dimensions[i]);\r\n\r\n    if (dimInfo && dimInfo.otherDims.itemGroupId === 0) {\r\n      return dimensions[i];\r\n    }\r\n  }\r\n}\r\n\r\nfunction flattenDataDiffItems(list) {\r\n  var items = [];\r\n  each(list, function (seriesInfo) {\r\n    var data = seriesInfo.data;\r\n\r\n    if (data.count() > DATA_COUNT_THRESHOLD) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        warn('Universal transition is disabled on large data > 10k.');\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    var indices = data.getIndices();\r\n    var groupDim = getGroupIdDimension(data);\r\n\r\n    for (var dataIndex = 0; dataIndex < indices.length; dataIndex++) {\r\n      items.push({\r\n        data: data,\r\n        dim: seriesInfo.dim || groupDim,\r\n        divide: seriesInfo.divide,\r\n        dataIndex: dataIndex\r\n      });\r\n    }\r\n  });\r\n  return items;\r\n}\r\n\r\nfunction fadeInElement(newEl, newSeries, newIndex) {\r\n  newEl.traverse(function (el) {\r\n    if (el instanceof Path) {\r\n      // TODO use fade in animation for target element.\r\n      initProps(el, {\r\n        style: {\r\n          opacity: 0\r\n        }\r\n      }, newSeries, {\r\n        dataIndex: newIndex,\r\n        isFrom: true\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nfunction removeEl(el) {\r\n  if (el.parent) {\r\n    // Bake parent transform to element.\r\n    // So it can still have proper transform to transition after it's removed.\r\n    var computedTransform = el.getComputedTransform();\r\n    el.setLocalTransform(computedTransform);\r\n    el.parent.remove(el);\r\n  }\r\n}\r\n\r\nfunction stopAnimation(el) {\r\n  el.stopAnimation();\r\n\r\n  if (el.isGroup) {\r\n    el.traverse(function (child) {\r\n      child.stopAnimation();\r\n    });\r\n  }\r\n}\r\n\r\nfunction animateElementStyles(el, dataIndex, seriesModel) {\r\n  var animationConfig = getAnimationConfig('update', seriesModel, dataIndex);\r\n  animationConfig && el.traverse(function (child) {\r\n    if (child instanceof Displayable) {\r\n      var oldStyle = getOldStyle(child);\r\n\r\n      if (oldStyle) {\r\n        child.animateFrom({\r\n          style: oldStyle\r\n        }, animationConfig);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction isAllIdSame(oldDiffItems, newDiffItems) {\r\n  var len = oldDiffItems.length;\r\n\r\n  if (len !== newDiffItems.length) {\r\n    return false;\r\n  }\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    var oldItem = oldDiffItems[i];\r\n    var newItem = newDiffItems[i];\r\n\r\n    if (oldItem.data.getId(oldItem.dataIndex) !== newItem.data.getId(newItem.dataIndex)) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction transitionBetween(oldList, newList, api) {\r\n  var oldDiffItems = flattenDataDiffItems(oldList);\r\n  var newDiffItems = flattenDataDiffItems(newList);\r\n\r\n  function updateMorphingPathProps(from, to, rawFrom, rawTo, animationCfg) {\r\n    if (rawFrom || from) {\r\n      to.animateFrom({\r\n        style: (rawFrom || from).style\r\n      }, animationCfg);\r\n    }\r\n  }\r\n\r\n  function findKeyDim(items) {\r\n    for (var i = 0; i < items.length; i++) {\r\n      if (items[i].dim) {\r\n        return items[i].dim;\r\n      }\r\n    }\r\n  }\r\n\r\n  var oldKeyDim = findKeyDim(oldDiffItems);\r\n  var newKeyDim = findKeyDim(newDiffItems);\r\n  var hasMorphAnimation = false;\r\n\r\n  function createKeyGetter(isOld, onlyGetId) {\r\n    return function (diffItem) {\r\n      var data = diffItem.data;\r\n      var dataIndex = diffItem.dataIndex; // TODO if specified dim\r\n\r\n      if (onlyGetId) {\r\n        return data.getId(dataIndex);\r\n      } // Use group id as transition key by default.\r\n      // So we can achieve multiple to multiple animation like drilldown / up naturally.\r\n      // If group id not exits. Use id instead. If so, only one to one transition will be applied.\r\n\r\n\r\n      var dataGroupId = data.hostModel && data.hostModel.get('dataGroupId'); // If specified key dimension(itemGroupId by default). Use this same dimension from other data.\r\n      // PENDING: If only use key dimension of newData.\r\n\r\n      var keyDim = isOld ? oldKeyDim || newKeyDim : newKeyDim || oldKeyDim;\r\n      var dimInfo = keyDim && data.getDimensionInfo(keyDim);\r\n      var dimOrdinalMeta = dimInfo && dimInfo.ordinalMeta;\r\n\r\n      if (dimInfo) {\r\n        // Get from encode.itemGroupId.\r\n        var key = data.get(dimInfo.name, dataIndex);\r\n\r\n        if (dimOrdinalMeta) {\r\n          return dimOrdinalMeta.categories[key] || key + '';\r\n        }\r\n\r\n        return key + '';\r\n      } // Get groupId from raw item. { groupId: '' }\r\n\r\n\r\n      var itemVal = data.getRawDataItem(dataIndex);\r\n\r\n      if (itemVal && itemVal.groupId) {\r\n        return itemVal.groupId + '';\r\n      }\r\n\r\n      return dataGroupId || data.getId(dataIndex);\r\n    };\r\n  } // Use id if it's very likely to be an one to one animation\r\n  // It's more robust than groupId\r\n  // TODO Check if key dimension is specified.\r\n\r\n\r\n  var useId = isAllIdSame(oldDiffItems, newDiffItems);\r\n  var isElementStillInChart = {};\r\n\r\n  if (!useId) {\r\n    // We may have different diff strategy with basicTransition if we use other dimension as key.\r\n    // If so, we can't simply check if oldEl is same with newEl. We need a map to check if oldEl is still being used in the new chart.\r\n    // We can't use the elements that already being morphed. Let it keep it's original basic transition.\r\n    for (var i = 0; i < newDiffItems.length; i++) {\r\n      var newItem = newDiffItems[i];\r\n      var el = newItem.data.getItemGraphicEl(newItem.dataIndex);\r\n\r\n      if (el) {\r\n        isElementStillInChart[el.id] = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateOneToOne(newIndex, oldIndex) {\r\n    var oldItem = oldDiffItems[oldIndex];\r\n    var newItem = newDiffItems[newIndex];\r\n    var newSeries = newItem.data.hostModel; // TODO Mark this elements is morphed and don't morph them anymore\r\n\r\n    var oldEl = oldItem.data.getItemGraphicEl(oldItem.dataIndex);\r\n    var newEl = newItem.data.getItemGraphicEl(newItem.dataIndex); // Can't handle same elements.\r\n\r\n    if (oldEl === newEl) {\r\n      newEl && animateElementStyles(newEl, newItem.dataIndex, newSeries);\r\n      return;\r\n    }\r\n\r\n    if ( // We can't use the elements that already being morphed\r\n    oldEl && isElementStillInChart[oldEl.id]) {\r\n      return;\r\n    }\r\n\r\n    if (newEl) {\r\n      // TODO: If keep animating the group in case\r\n      // some of the elements don't want to be morphed.\r\n      // TODO Label?\r\n      stopAnimation(newEl);\r\n\r\n      if (oldEl) {\r\n        stopAnimation(oldEl); // If old element is doing leaving animation. stop it and remove it immediately.\r\n\r\n        removeEl(oldEl);\r\n        hasMorphAnimation = true;\r\n        applyMorphAnimation(getPathList(oldEl), getPathList(newEl), newItem.divide, newSeries, newIndex, updateMorphingPathProps);\r\n      } else {\r\n        fadeInElement(newEl, newSeries, newIndex);\r\n      }\r\n    } // else keep oldEl leaving animation.\r\n\r\n  }\r\n\r\n  new DataDiffer(oldDiffItems, newDiffItems, createKeyGetter(true, useId), createKeyGetter(false, useId), null, 'multiple').update(updateOneToOne).updateManyToOne(function (newIndex, oldIndices) {\r\n    var newItem = newDiffItems[newIndex];\r\n    var newData = newItem.data;\r\n    var newSeries = newData.hostModel;\r\n    var newEl = newData.getItemGraphicEl(newItem.dataIndex);\r\n    var oldElsList = filter(map(oldIndices, function (idx) {\r\n      return oldDiffItems[idx].data.getItemGraphicEl(oldDiffItems[idx].dataIndex);\r\n    }), function (oldEl) {\r\n      return oldEl && oldEl !== newEl && !isElementStillInChart[oldEl.id];\r\n    });\r\n\r\n    if (newEl) {\r\n      stopAnimation(newEl);\r\n\r\n      if (oldElsList.length) {\r\n        // If old element is doing leaving animation. stop it and remove it immediately.\r\n        each(oldElsList, function (oldEl) {\r\n          stopAnimation(oldEl);\r\n          removeEl(oldEl);\r\n        });\r\n        hasMorphAnimation = true;\r\n        applyMorphAnimation(getPathList(oldElsList), getPathList(newEl), newItem.divide, newSeries, newIndex, updateMorphingPathProps);\r\n      } else {\r\n        fadeInElement(newEl, newSeries, newItem.dataIndex);\r\n      }\r\n    } // else keep oldEl leaving animation.\r\n\r\n  }).updateOneToMany(function (newIndices, oldIndex) {\r\n    var oldItem = oldDiffItems[oldIndex];\r\n    var oldEl = oldItem.data.getItemGraphicEl(oldItem.dataIndex); // We can't use the elements that already being morphed\r\n\r\n    if (oldEl && isElementStillInChart[oldEl.id]) {\r\n      return;\r\n    }\r\n\r\n    var newElsList = filter(map(newIndices, function (idx) {\r\n      return newDiffItems[idx].data.getItemGraphicEl(newDiffItems[idx].dataIndex);\r\n    }), function (el) {\r\n      return el && el !== oldEl;\r\n    });\r\n    var newSeris = newDiffItems[newIndices[0]].data.hostModel;\r\n\r\n    if (newElsList.length) {\r\n      each(newElsList, function (newEl) {\r\n        return stopAnimation(newEl);\r\n      });\r\n\r\n      if (oldEl) {\r\n        stopAnimation(oldEl); // If old element is doing leaving animation. stop it and remove it immediately.\r\n\r\n        removeEl(oldEl);\r\n        hasMorphAnimation = true;\r\n        applyMorphAnimation(getPathList(oldEl), getPathList(newElsList), oldItem.divide, // Use divide on old.\r\n        newSeris, newIndices[0], updateMorphingPathProps);\r\n      } else {\r\n        each(newElsList, function (newEl) {\r\n          return fadeInElement(newEl, newSeris, newIndices[0]);\r\n        });\r\n      }\r\n    } // else keep oldEl leaving animation.\r\n\r\n  }).updateManyToMany(function (newIndices, oldIndices) {\r\n    // If two data are same and both have groupId.\r\n    // Normally they should be diff by id.\r\n    new DataDiffer(oldIndices, newIndices, function (rawIdx) {\r\n      return oldDiffItems[rawIdx].data.getId(oldDiffItems[rawIdx].dataIndex);\r\n    }, function (rawIdx) {\r\n      return newDiffItems[rawIdx].data.getId(newDiffItems[rawIdx].dataIndex);\r\n    }).update(function (newIndex, oldIndex) {\r\n      // Use the original index\r\n      updateOneToOne(newIndices[newIndex], oldIndices[oldIndex]);\r\n    }).execute();\r\n  }).execute();\r\n\r\n  if (hasMorphAnimation) {\r\n    each(newList, function (_a) {\r\n      var data = _a.data;\r\n      var seriesModel = data.hostModel;\r\n      var view = seriesModel && api.getViewOfSeriesModel(seriesModel);\r\n      var animationCfg = getAnimationConfig('update', seriesModel, 0); // use 0 index.\r\n\r\n      if (view && seriesModel.isAnimationEnabled() && animationCfg && animationCfg.duration > 0) {\r\n        view.group.traverse(function (el) {\r\n          if (el instanceof Path && !el.animators.length) {\r\n            // We can't accept there still exists element that has no animation\r\n            // if universalTransition is enabled\r\n            el.animateFrom({\r\n              style: {\r\n                opacity: 0\r\n              }\r\n            }, animationCfg);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction getSeriesTransitionKey(series) {\r\n  var seriesKey = series.getModel('universalTransition').get('seriesKey');\r\n\r\n  if (!seriesKey) {\r\n    // Use series id by default.\r\n    return series.id;\r\n  }\r\n\r\n  return seriesKey;\r\n}\r\n\r\nfunction convertArraySeriesKeyToString(seriesKey) {\r\n  if (isArray(seriesKey)) {\r\n    // Order independent.\r\n    return seriesKey.sort().join(',');\r\n  }\r\n\r\n  return seriesKey;\r\n}\r\n\r\nfunction getDivideShapeFromData(data) {\r\n  if (data.hostModel) {\r\n    return data.hostModel.getModel('universalTransition').get('divideShape');\r\n  }\r\n}\r\n\r\nfunction findTransitionSeriesBatches(globalStore, params) {\r\n  var updateBatches = createHashMap();\r\n  var oldDataMap = createHashMap(); // Map that only store key in array seriesKey.\r\n  // Which is used to query the old data when transition from one to multiple series.\r\n\r\n  var oldDataMapForSplit = createHashMap();\r\n  each(globalStore.oldSeries, function (series, idx) {\r\n    var oldData = globalStore.oldData[idx];\r\n    var transitionKey = getSeriesTransitionKey(series);\r\n    var transitionKeyStr = convertArraySeriesKeyToString(transitionKey);\r\n    oldDataMap.set(transitionKeyStr, oldData);\r\n\r\n    if (isArray(transitionKey)) {\r\n      // Same key can't in different array seriesKey.\r\n      each(transitionKey, function (key) {\r\n        oldDataMapForSplit.set(key, {\r\n          data: oldData,\r\n          key: transitionKeyStr\r\n        });\r\n      });\r\n    }\r\n  });\r\n\r\n  function checkTransitionSeriesKeyDuplicated(transitionKeyStr) {\r\n    if (updateBatches.get(transitionKeyStr)) {\r\n      warn(\"Duplicated seriesKey in universalTransition \" + transitionKeyStr);\r\n    }\r\n  }\r\n\r\n  each(params.updatedSeries, function (series) {\r\n    if (series.isUniversalTransitionEnabled() && series.isAnimationEnabled()) {\r\n      var newData = series.getData();\r\n      var transitionKey = getSeriesTransitionKey(series);\r\n      var transitionKeyStr = convertArraySeriesKeyToString(transitionKey); // Only transition between series with same id.\r\n\r\n      var oldData = oldDataMap.get(transitionKeyStr); // string transition key is the best match.\r\n\r\n      if (oldData) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          checkTransitionSeriesKeyDuplicated(transitionKeyStr);\r\n        } // TODO check if data is same?\r\n\r\n\r\n        updateBatches.set(transitionKeyStr, {\r\n          oldSeries: [{\r\n            divide: getDivideShapeFromData(oldData),\r\n            data: oldData\r\n          }],\r\n          newSeries: [{\r\n            divide: getDivideShapeFromData(newData),\r\n            data: newData\r\n          }]\r\n        });\r\n      } else {\r\n        // Transition from multiple series.\r\n        if (isArray(transitionKey)) {\r\n          if (process.env.NODE_ENV !== 'production') {\r\n            checkTransitionSeriesKeyDuplicated(transitionKeyStr);\r\n          }\r\n\r\n          var oldSeries_1 = [];\r\n          each(transitionKey, function (key) {\r\n            var oldData = oldDataMap.get(key);\r\n\r\n            if (oldData) {\r\n              oldSeries_1.push({\r\n                divide: getDivideShapeFromData(oldData),\r\n                data: oldData\r\n              });\r\n            }\r\n          });\r\n\r\n          if (oldSeries_1.length) {\r\n            updateBatches.set(transitionKeyStr, {\r\n              oldSeries: oldSeries_1,\r\n              newSeries: [{\r\n                data: newData,\r\n                divide: getDivideShapeFromData(newData)\r\n              }]\r\n            });\r\n          }\r\n        } else {\r\n          // Try transition to multiple series.\r\n          var oldData_1 = oldDataMapForSplit.get(transitionKey);\r\n\r\n          if (oldData_1) {\r\n            var batch = updateBatches.get(oldData_1.key);\r\n\r\n            if (!batch) {\r\n              batch = {\r\n                oldSeries: [{\r\n                  data: oldData_1.data,\r\n                  divide: getDivideShapeFromData(oldData_1.data)\r\n                }],\r\n                newSeries: []\r\n              };\r\n              updateBatches.set(oldData_1.key, batch);\r\n            }\r\n\r\n            batch.newSeries.push({\r\n              data: newData,\r\n              divide: getDivideShapeFromData(newData)\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n  return updateBatches;\r\n}\r\n\r\nfunction querySeries(series, finder) {\r\n  for (var i = 0; i < series.length; i++) {\r\n    var found = finder.seriesIndex != null && finder.seriesIndex === series[i].seriesIndex || finder.seriesId != null && finder.seriesId === series[i].id;\r\n\r\n    if (found) {\r\n      return i;\r\n    }\r\n  }\r\n}\r\n\r\nfunction transitionSeriesFromOpt(transitionOpt, globalStore, params, api) {\r\n  var from = [];\r\n  var to = [];\r\n  each(normalizeToArray(transitionOpt.from), function (finder) {\r\n    var idx = querySeries(globalStore.oldSeries, finder);\r\n\r\n    if (idx >= 0) {\r\n      from.push({\r\n        data: globalStore.oldData[idx],\r\n        // TODO can specify divideShape in transition.\r\n        divide: getDivideShapeFromData(globalStore.oldData[idx]),\r\n        dim: finder.dimension\r\n      });\r\n    }\r\n  });\r\n  each(normalizeToArray(transitionOpt.to), function (finder) {\r\n    var idx = querySeries(params.updatedSeries, finder);\r\n\r\n    if (idx >= 0) {\r\n      var data = params.updatedSeries[idx].getData();\r\n      to.push({\r\n        data: data,\r\n        divide: getDivideShapeFromData(data),\r\n        dim: finder.dimension\r\n      });\r\n    }\r\n  });\r\n\r\n  if (from.length > 0 && to.length > 0) {\r\n    transitionBetween(from, to, api);\r\n  }\r\n}\r\n\r\nexport function installUniversalTransition(registers) {\r\n  registers.registerUpdateLifecycle('series:beforeupdate', function (ecMOdel, api, params) {\r\n    each(normalizeToArray(params.seriesTransition), function (transOpt) {\r\n      each(normalizeToArray(transOpt.to), function (finder) {\r\n        var series = params.updatedSeries;\r\n\r\n        for (var i = 0; i < series.length; i++) {\r\n          if (finder.seriesIndex != null && finder.seriesIndex === series[i].seriesIndex || finder.seriesId != null && finder.seriesId === series[i].id) {\r\n            series[i][SERIES_UNIVERSAL_TRANSITION_PROP] = true;\r\n          }\r\n        }\r\n      });\r\n    });\r\n  });\r\n  registers.registerUpdateLifecycle('series:transition', function (ecModel, api, params) {\r\n    // TODO api provide an namespace that can save stuff per instance\r\n    var globalStore = getUniversalTransitionGlobalStore(api); // TODO multiple to multiple series.\r\n\r\n    if (globalStore.oldSeries && params.updatedSeries && params.optionChanged) {\r\n      // Use give transition config if its' give;\r\n      var transitionOpt = params.seriesTransition;\r\n\r\n      if (transitionOpt) {\r\n        each(normalizeToArray(transitionOpt), function (opt) {\r\n          transitionSeriesFromOpt(opt, globalStore, params, api);\r\n        });\r\n      } else {\r\n        // Else guess from series based on transition series key.\r\n        var updateBatches_1 = findTransitionSeriesBatches(globalStore, params);\r\n        each(updateBatches_1.keys(), function (key) {\r\n          var batch = updateBatches_1.get(key);\r\n          transitionBetween(batch.oldSeries, batch.newSeries, api);\r\n        });\r\n      } // Reset\r\n\r\n\r\n      each(params.updatedSeries, function (series) {\r\n        // Reset;\r\n        if (series[SERIES_UNIVERSAL_TRANSITION_PROP]) {\r\n          series[SERIES_UNIVERSAL_TRANSITION_PROP] = false;\r\n        }\r\n      });\r\n    } // Save all series of current update. Not only the updated one.\r\n\r\n\r\n    var allSeries = ecModel.getSeries();\r\n    var savedSeries = globalStore.oldSeries = [];\r\n    var savedData = globalStore.oldData = [];\r\n\r\n    for (var i = 0; i < allSeries.length; i++) {\r\n      var data = allSeries[i].getData(); // Only save the data that can have transition.\r\n      // Avoid large data costing too much extra memory\r\n\r\n      if (data.count() < DATA_COUNT_THRESHOLD) {\r\n        savedSeries.push(allSeries[i]);\r\n        savedData.push(data);\r\n      }\r\n    }\r\n  });\r\n}", "\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { use } from './lib/extension';\r\nexport * from './lib/export/core'; // ----------------------------------------------\r\n// All of the modules that are allowed to be\r\n// imported are listed below.\r\n//\r\n// Users MUST NOT import other modules that are\r\n// not included in this list.\r\n// ----------------------------------------------\r\n\r\nimport { SVGRenderer, CanvasRenderer } from './lib/export/renderers';\r\nimport { LineChart, BarChart, PieChart, ScatterChart, RadarChart, MapChart, TreeChart, TreemapChart, GraphChart, GaugeChart, FunnelChart, ParallelChart, SankeyChart, BoxplotChart, CandlestickChart, EffectScatterChart, LinesChart, HeatmapChart, PictorialBarChart, ThemeRiverChart, SunburstChart, CustomChart } from './lib/export/charts';\r\nimport { GridComponent, PolarComponent, GeoComponent, SingleAxisComponent, ParallelComponent, CalendarComponent, GraphicComponent, ToolboxComponent, TooltipComponent, AxisPointerComponent, BrushComponent, TitleComponent, TimelineComponent, MarkPointComponent, MarkLineComponent, MarkAreaComponent, LegendComponent, DataZoomComponent, DataZoomInsideComponent, DataZoomSliderComponent, VisualMapComponent, VisualMapContinuousComponent, VisualMapPiecewiseComponent, AriaComponent, DatasetComponent, TransformComponent } from './lib/export/components';\r\nimport { UniversalTransition, LabelLayout } from './lib/export/features'; // -----------------\r\n// Render engines\r\n// -----------------\r\n// Render via Canvas.\r\n// echarts.init(dom, null, { renderer: 'canvas' })\r\n\r\nuse([CanvasRenderer]); // Render via SVG.\r\n// echarts.init(dom, null, { renderer: 'svg' })\r\n\r\nuse([SVGRenderer]); // ----------------\r\n// Charts (series)\r\n// ----------------\r\n// All of the series types, for example:\r\n// chart.setOption({\r\n//     series: [{\r\n//         type: 'line' // or 'bar', 'pie', ...\r\n//     }]\r\n// });\r\n\r\nuse([LineChart, BarChart, PieChart, ScatterChart, RadarChart, MapChart, TreeChart, TreemapChart, GraphChart, GaugeChart, FunnelChart, ParallelChart, SankeyChart, BoxplotChart, CandlestickChart, EffectScatterChart, LinesChart, HeatmapChart, PictorialBarChart, ThemeRiverChart, SunburstChart, CustomChart]); // -------------------\r\n// Coordinate systems\r\n// -------------------\r\n// All of the axis modules have been included in the\r\n// coordinate system module below, do not need to\r\n// make extra import.\r\n// `cartesian` coordinate system. For some historical\r\n// reasons, it is named as grid, for example:\r\n// chart.setOption({\r\n//     grid: {...},\r\n//     xAxis: {...},\r\n//     yAxis: {...},\r\n//     series: [{...}]\r\n// });\r\n\r\nuse(GridComponent); // `polar` coordinate system, for example:\r\n// chart.setOption({\r\n//     polar: {...},\r\n//     radiusAxis: {...},\r\n//     angleAxis: {...},\r\n//     series: [{\r\n//         coordinateSystem: 'polar'\r\n//     }]\r\n// });\r\n\r\nuse(PolarComponent); // `geo` coordinate system, for example:\r\n// chart.setOption({\r\n//     geo: {...},\r\n//     series: [{\r\n//         coordinateSystem: 'geo'\r\n//     }]\r\n// });\r\n\r\nuse(GeoComponent); // `singleAxis` coordinate system (notice, it is a coordinate system\r\n// with only one axis, work for chart like theme river), for example:\r\n// chart.setOption({\r\n//     singleAxis: {...}\r\n//     series: [{type: 'themeRiver', ...}]\r\n// });\r\n\r\nuse(SingleAxisComponent); // `parallel` coordinate system, only work for parallel series, for example:\r\n// chart.setOption({\r\n//     parallel: {...},\r\n//     parallelAxis: [{...}, ...],\r\n//     series: [{\r\n//         type: 'parallel'\r\n//     }]\r\n// });\r\n\r\nuse(ParallelComponent); // `calendar` coordinate system. for example,\r\n// chart.setOptionp({\r\n//     calendar: {...},\r\n//     series: [{\r\n//         coordinateSystem: 'calendar'\r\n//     }]\r\n// );\r\n\r\nuse(CalendarComponent); // ------------------\r\n// Other components\r\n// ------------------\r\n// `graphic` component, for example:\r\n// chart.setOption({\r\n//     graphic: {...}\r\n// });\r\n\r\nuse(GraphicComponent); // `toolbox` component, for example:\r\n// chart.setOption({\r\n//     toolbox: {...}\r\n// });\r\n\r\nuse(ToolboxComponent); // `tooltip` component, for example:\r\n// chart.setOption({\r\n//     tooltip: {...}\r\n// });\r\n\r\nuse(TooltipComponent); // `axisPointer` component, for example:\r\n// chart.setOption({\r\n//     tooltip: {axisPointer: {...}, ...}\r\n// });\r\n// Or\r\n// chart.setOption({\r\n//     axisPointer: {...}\r\n// });\r\n\r\nuse(AxisPointerComponent); // `brush` component, for example:\r\n// chart.setOption({\r\n//     brush: {...}\r\n// });\r\n// Or\r\n// chart.setOption({\r\n//     tooltip: {feature: {brush: {...}}\r\n// })\r\n\r\nuse(BrushComponent); // `title` component, for example:\r\n// chart.setOption({\r\n//     title: {...}\r\n// });\r\n\r\nuse(TitleComponent); // `timeline` component, for example:\r\n// chart.setOption({\r\n//     timeline: {...}\r\n// });\r\n\r\nuse(TimelineComponent); // `markPoint` component, for example:\r\n// chart.setOption({\r\n//     series: [{markPoint: {...}}]\r\n// });\r\n\r\nuse(MarkPointComponent); // `markLine` component, for example:\r\n// chart.setOption({\r\n//     series: [{markLine: {...}}]\r\n// });\r\n\r\nuse(MarkLineComponent); // `markArea` component, for example:\r\n// chart.setOption({\r\n//     series: [{markArea: {...}}]\r\n// });\r\n\r\nuse(MarkAreaComponent); // `legend` component not scrollable. for example:\r\n// chart.setOption({\r\n//     legend: {...}\r\n// });\r\n\r\nuse(LegendComponent); // `dataZoom` component including both `dataZoomInside` and `dataZoomSlider`.\r\n\r\nuse(DataZoomComponent); // `dataZoom` component providing drag, pinch, wheel behaviors\r\n// inside coodinate system, for example:\r\n// chart.setOption({\r\n//     dataZoom: {type: 'inside'}\r\n// });\r\n\r\nuse(DataZoomInsideComponent); // `dataZoom` component providing a slider bar, for example:\r\n// chart.setOption({\r\n//     dataZoom: {type: 'slider'}\r\n// });\r\n\r\nuse(DataZoomSliderComponent); // `visualMap` component including both `visualMapContinuous` and `visualMapPiecewise`.\r\n\r\nuse(VisualMapComponent); // `visualMap` component providing continuous bar, for example:\r\n// chart.setOption({\r\n//     visualMap: {type: 'continuous'}\r\n// });\r\n\r\nuse(VisualMapContinuousComponent); // `visualMap` component providing pieces bar, for example:\r\n// chart.setOption({\r\n//     visualMap: {type: 'piecewise'}\r\n// });\r\n\r\nuse(VisualMapPiecewiseComponent); // `aria` component providing aria, for example:\r\n// chart.setOption({\r\n//     aria: {...}\r\n// });\r\n\r\nuse(AriaComponent); // dataset transform\r\n// chart.setOption({\r\n//     dataset: {\r\n//          transform: []\r\n//     }\r\n// });\r\n\r\nuse(TransformComponent);\r\nuse(DatasetComponent); // universal transition\r\n// chart.setOption({\r\n//     series: {\r\n//         universalTransition: { enabled: true }\r\n//     }\r\n// })\r\n\r\nuse(UniversalTransition); // label layout\r\n// chart.setOption({\r\n//     series: {\r\n//         labelLayout: { hideOverlap: true }\r\n//     }\r\n// })\r\n\r\nuse(LabelLayout);"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACO,uBAAuB,MAAM;AAChC,SAAO,SAAS,gBAAgB,8BAA8B;AAAA;AAE3D,wBAAwB,OAAO;AAClC,MAAI;AACJ,MAAI,CAAC,SAAS,UAAU,eAAe;AACnC,YAAQ;AAAA,aAEH,OAAO,UAAU,YAAY,MAAM,QAAQ,UAAU,IAAI;AAC9D,QAAI,MAAM,MAAM;AAChB,QAAI,KAAK;AACL,cAAQ,SAAS,IAAI,KAAK,MAAM,IAAI,KAAK,MAAM,IAAI,KAAK;AACxD,gBAAU,IAAI;AAAA;AAAA;AAGtB,SAAO;AAAA,IACH;AAAA,IACA,SAAS,WAAW,OAAO,IAAI;AAAA;AAAA;;;AClBvC,cAAc,QAAQ,QAAQ,QAAQ;AAClC,MAAI,CAAC,QAAQ;AACT,aAAS,SAAU,GAAG,GAAG;AACrB,aAAO,MAAM;AAAA;AAAA;AAGrB,WAAS,OAAO;AAChB,WAAS,OAAO;AAChB,MAAI,SAAS,OAAO;AACpB,MAAI,SAAS,OAAO;AACpB,MAAI,aAAa;AACjB,MAAI,gBAAgB,SAAS;AAC7B,MAAI,WAAW,CAAC,EAAE,QAAQ,IAAI,YAAY;AAC1C,MAAI,SAAS,cAAc,SAAS,IAAI,QAAQ,QAAQ,GAAG;AAC3D,MAAI,SAAS,GAAG,SAAS,KAAK,UAAU,SAAS,KAAK,QAAQ;AAC1D,QAAI,UAAU;AACd,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,cAAQ,KAAK;AAAA;AAEjB,WAAO,CAAC;AAAA,MACA;AAAA,MACA,OAAO,OAAO;AAAA,MACd,OAAO;AAAA,MACP,SAAS;AAAA;AAAA;AAGrB,4BAA0B;AACtB,aAAS,eAAe,KAAK,YAAY,gBAAgB,YAAY,gBAAgB,GAAG;AACpF,UAAI;AACJ,UAAI,UAAU,SAAS,eAAe;AACtC,UAAI,aAAa,SAAS,eAAe;AACzC,UAAI,UAAU,cAAa,WAAW,SAAS,KAAK;AACpD,UAAI,SAAS;AACT,iBAAS,eAAe,KAAK;AAAA;AAEjC,UAAI,SAAS,WAAW,QAAQ,SAAS,IAAI;AAC7C,UAAI,YAAY,cAAc,KAAK,WAAU,UAAS;AACtD,UAAI,CAAC,UAAU,CAAC,WAAW;AACvB,iBAAS,gBAAgB;AACzB;AAAA;AAEJ,UAAI,CAAC,UAAW,aAAa,QAAQ,SAAS,WAAW,QAAS;AAC9D,mBAAW,WAAU;AACrB,sBAAc,SAAS,YAAY,OAAO;AAAA,aAEzC;AACD,mBAAW;AACX,iBAAS;AACT,sBAAc,SAAS,YAAY,MAAM;AAAA;AAE7C,gBAAS,cAAc,UAAU,QAAQ,QAAQ,cAAc;AAC/D,UAAI,SAAS,SAAS,KAAK,UAAU,UAAS,KAAK,QAAQ;AACvD,eAAO,YAAY,SAAS;AAAA,aAE3B;AACD,iBAAS,gBAAgB;AAAA;AAAA;AAGjC;AAAA;AAEJ,SAAO,cAAc,eAAe;AAChC,QAAI,MAAM;AACV,QAAI,KAAK;AACL,aAAO;AAAA;AAAA;AAAA;AAInB,uBAAuB,UAAU,QAAQ,QAAQ,cAAc,QAAQ;AACnE,MAAI,SAAS,OAAO;AACpB,MAAI,SAAS,OAAO;AACpB,MAAI,SAAS,SAAS;AACtB,MAAI,SAAS,SAAS;AACtB,MAAI,cAAc;AAClB,SAAO,SAAS,IAAI,UAAU,SAAS,IAAI,UAAU,OAAO,OAAO,SAAS,IAAI,OAAO,SAAS,KAAK;AACjG;AACA;AACA;AAAA;AAEJ,MAAI,aAAa;AACb,aAAS,WAAW,KAAK;AAAA,MACrB,OAAO;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA;AAAA;AAGjB,WAAS,SAAS;AAClB,SAAO;AAAA;AAEX,uBAAuB,YAAY,OAAO,SAAS;AAC/C,MAAI,OAAO,WAAW,WAAW,SAAS;AAC1C,MAAI,QAAQ,KAAK,UAAU,SAAS,KAAK,YAAY,SAAS;AAC1D,eAAW,WAAW,SAAS,KAAK;AAAA,MAChC,OAAO,KAAK,QAAQ;AAAA,MACpB;AAAA,MACA;AAAA,MACA,SAAS;AAAA;AAAA,SAGZ;AACD,eAAW,KAAK;AAAA,MACZ,OAAO;AAAA,MACP;AAAA,MACA;AAAA,MACA,SAAS;AAAA;AAAA;AAAA;AAIrB,qBAAqB,YAAY;AAC7B,MAAI,eAAe;AACnB,MAAI,eAAe,WAAW;AAC9B,MAAI,SAAS;AACb,MAAI,SAAS;AACb,SAAO,eAAe,cAAc,gBAAgB;AAChD,QAAI,YAAY,WAAW;AAC3B,QAAI,CAAC,UAAU,SAAS;AACpB,UAAI,UAAU;AACd,eAAS,IAAI,QAAQ,IAAI,SAAS,UAAU,OAAO,KAAK;AACpD,gBAAQ,KAAK;AAAA;AAEjB,gBAAU,UAAU;AACpB,gBAAU,UAAU;AACpB,UAAI,CAAC,UAAU,OAAO;AAClB,kBAAU,UAAU;AAAA;AAAA,WAGvB;AACD,eAAS,IAAI,QAAQ,IAAI,SAAS,UAAU,OAAO,KAAK;AACpD,kBAAU,QAAQ,KAAK;AAAA;AAE3B,gBAAU,UAAU;AAAA;AAAA;AAG5B,SAAO;AAAA;AAEX,oBAAmB,MAAM;AACrB,SAAO,EAAE,QAAQ,KAAK,QAAQ,YAAY,KAAK,WAAW,MAAM;AAAA;AAErD,mBAAmB,QAAQ,QAAQ,OAAO;AACrD,SAAO,KAAK,QAAQ,QAAQ;AAAA;;;ACtIhC,IAAI,OAAO;AACX,IAAI,YAAY,KAAK;AACrB,IAAI,UAAU,KAAK;AACnB,IAAI,UAAU,KAAK;AACnB,IAAI,KAAK,KAAK;AACd,IAAI,MAAM,KAAK,KAAK;AACpB,IAAI,SAAS,MAAM;AACnB,IAAI,UAAU;AACd,gBAAgB,KAAK;AACjB,SAAO,UAAU,MAAM,OAAO;AAAA;AAElC,gBAAgB,KAAK;AACjB,SAAO,UAAU,MAAM,OAAO;AAAA;AAElC,sBAAsB,KAAK;AACvB,SAAO,MAAM,WAAW,MAAM,CAAC;AAAA;AAEnC,qBAAqB,OAAO;AACxB,MAAI,OAAO,MAAM;AACjB,SAAO,QAAQ,QAAQ,SAAS;AAAA;AAEpC,uBAAuB,OAAO;AAC1B,MAAI,SAAS,MAAM;AACnB,SAAO,UAAU,QAAQ,WAAW;AAAA;AAExC,sBAAsB,OAAO,GAAG;AAC5B,MAAI,GAAG;AACH,SAAK,OAAO,aAAa,YACnB,OAAO,EAAE,MAAM,MACf,OAAO,EAAE,MAAM,MACf,OAAO,EAAE,MAAM,MACf,OAAO,EAAE,MAAM,MACf,OAAO,EAAE,MAAM,MACf,OAAO,EAAE,MACT;AAAA;AAAA;AAGd,cAAc,IAAI,KAAK,KAAK;AACxB,MAAI,CAAC,OAAO,IAAI,SAAS,YAAY,IAAI,SAAS,UAAU;AACxD,OAAG,aAAa,KAAK;AAAA;AAAA;AAG7B,mBAAmB,IAAI,KAAK,KAAK;AAC7B,KAAG,eAAe,gCAAgC,KAAK;AAAA;AAE3D,iBAAiB,IAAI,KAAK,KAAK;AAC3B,KAAG,eAAe,wCAAwC,KAAK;AAAA;AAEnE,mBAAmB,OAAO,OAAO,IAAI;AACjC,MAAI,UAAU,MAAM,WAAW,OAAO,IAAI,MAAM;AAChD,MAAI,cAAc,eAAS;AACvB,SAAK,OAAO,WAAW,UAAU;AACjC;AAAA;AAEJ,MAAI,YAAY,QAAQ;AACpB,QAAI,OAAO,eAAe,MAAM;AAChC,SAAK,OAAO,QAAQ,KAAK;AACzB,SAAK,OAAO,gBAAiB,OAAM,eAAe,OAC5C,MAAM,cAAc,KAAK,UAAU,UACnC,KAAK,UAAU,WAAW;AAAA,SAE/B;AACD,SAAK,OAAO,QAAQ;AAAA;AAExB,MAAI,cAAc,QAAQ;AACtB,QAAI,SAAS,eAAe,MAAM;AAClC,SAAK,OAAO,UAAU,OAAO;AAC7B,QAAI,cAAc,MAAM;AACxB,QAAI,gBAAgB,MAAM,gBACpB,GAAG,iBACH;AACN,SAAK,OAAO,gBAAiB,iBAAgB,cAAc,gBAAgB,KAAK;AAChF,SAAK,OAAO,eAAe,MAAM,cAAc,WAAW;AAC1D,SAAK,OAAO,kBAAmB,OAAM,iBAAiB,OAChD,MAAM,gBAAgB,OAAO,UAAU,UACvC,OAAO,UAAU,WAAW;AAClC,QAAI,WAAW,MAAM,YAAY,cAAc,KAAK,kBAAkB,MAAM,UAAU;AACtF,QAAI,UAAU;AACV,UAAI,iBAAiB,MAAM;AAC3B,UAAI,iBAAiB,kBAAkB,GAAG;AACtC,mBAAW,IAAI,UAAU,SAAU,QAAQ;AACvC,iBAAO,SAAS;AAAA;AAEpB,YAAI,gBAAgB;AAChB,4BAAkB;AAClB,2BAAiB,UAAU;AAAA;AAAA;AAGnC,WAAK,OAAO,oBAAoB,SAAS,KAAK;AAC9C,WAAK,OAAO,qBAAsB,mBAAkB,KAAK;AAAA,WAExD;AACD,WAAK,OAAO,oBAAoB;AAAA;AAEpC,UAAM,WAAW,KAAK,OAAO,kBAAkB,MAAM;AACrD,UAAM,YAAY,KAAK,OAAO,mBAAmB,MAAM;AACvD,UAAM,cAAc,KAAK,OAAO,qBAAqB,MAAM,aAAa;AAAA,SAEvE;AACD,SAAK,OAAO,UAAU;AAAA;AAAA;AAG9B,IAAI,mBAAoB,WAAY;AAChC,+BAA4B;AAAA;AAE5B,oBAAiB,UAAU,QAAQ,WAAY;AAC3C,SAAK,KAAK;AACV,SAAK,OAAO;AAAA;AAEhB,oBAAiB,UAAU,SAAS,SAAU,GAAG,GAAG;AAChD,SAAK,KAAK,KAAK,GAAG;AAAA;AAEtB,oBAAiB,UAAU,SAAS,SAAU,GAAG,GAAG;AAChD,SAAK,KAAK,KAAK,GAAG;AAAA;AAEtB,oBAAiB,UAAU,gBAAgB,SAAU,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI;AACvE,SAAK,KAAK,KAAK,GAAG,GAAG,IAAI,IAAI,IAAI;AAAA;AAErC,oBAAiB,UAAU,mBAAmB,SAAU,GAAG,GAAG,IAAI,IAAI;AAClE,SAAK,KAAK,KAAK,GAAG,GAAG,IAAI;AAAA;AAE7B,oBAAiB,UAAU,MAAM,SAAU,IAAI,IAAI,GAAG,YAAY,UAAU,eAAe;AACvF,SAAK,QAAQ,IAAI,IAAI,GAAG,GAAG,GAAG,YAAY,UAAU;AAAA;AAExD,oBAAiB,UAAU,UAAU,SAAU,IAAI,IAAI,IAAI,IAAI,KAAK,YAAY,UAAU,eAAe;AACrG,QAAI,WAAW,KAAK,GAAG,WAAW;AAClC,QAAI,SAAS,WAAW;AACxB,QAAI,YAAY,CAAC;AACjB,QAAI,iBAAiB,KAAK,IAAI;AAC9B,QAAI,WAAW,aAAa,iBAAiB,QACrC,aAAY,UAAU,MAAM,CAAC,UAAU;AAC/C,QAAI,eAAe,SAAS,IAAI,SAAS,MAAO,SAAS,MAAM;AAC/D,QAAI,QAAQ;AACZ,QAAI,UAAU;AACV,cAAQ;AAAA,eAEH,aAAa,iBAAiB;AACnC,cAAQ;AAAA,WAEP;AACD,cAAS,gBAAgB,OAAQ,CAAC,CAAC;AAAA;AAEvC,QAAI,KAAK,OAAO,KAAK,KAAK,QAAQ;AAClC,QAAI,KAAK,OAAO,KAAK,KAAK,QAAQ;AAClC,QAAI,UAAU;AACV,UAAI,WAAW;AACX,iBAAS,MAAM;AAAA,aAEd;AACD,iBAAS,CAAC,MAAM;AAAA;AAEpB,cAAQ;AACR,UAAI,UAAU;AACV,aAAK,GAAG,KAAK,KAAK,IAAI;AAAA;AAAA;AAG9B,QAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,aAAa;AAC9C,QAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,aAAa;AAC9C,QAAI,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,QAAQ,MAAM,WAAW,MAAM,MAAM,MAAM,IAAI;AACzG,aAAO;AAAA;AAEX,SAAK,GAAG,KAAK,KAAK,OAAO,KAAK,OAAO,KAAK,UAAU,MAAM,SAAS,CAAC,OAAO,CAAC,WAAW,GAAG;AAAA;AAE9F,oBAAiB,UAAU,OAAO,SAAU,GAAG,GAAG,GAAG,GAAG;AACpD,SAAK,KAAK,KAAK,GAAG;AAClB,SAAK,KAAK,KAAK,IAAI,GAAG;AACtB,SAAK,KAAK,KAAK,IAAI,GAAG,IAAI;AAC1B,SAAK,KAAK,KAAK,GAAG,IAAI;AACtB,SAAK,KAAK,KAAK,GAAG;AAClB,SAAK,KAAK;AAAA;AAEd,oBAAiB,UAAU,YAAY,WAAY;AAC/C,QAAI,KAAK,GAAG,SAAS,GAAG;AACpB,WAAK,KAAK;AAAA;AAAA;AAGlB,oBAAiB,UAAU,OAAO,SAAU,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AACrE,SAAK,GAAG,KAAK;AACb,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACvC,UAAI,MAAM,UAAU;AACpB,UAAI,MAAM,MAAM;AACZ,aAAK,WAAW;AAChB;AAAA;AAEJ,WAAK,GAAG,KAAK,OAAO;AAAA;AAAA;AAG5B,oBAAiB,UAAU,cAAc,WAAY;AACjD,SAAK,OAAO,KAAK,WAAW,KAAK,KAAK,GAAG,KAAK;AAC9C,SAAK,KAAK;AAAA;AAEd,oBAAiB,UAAU,SAAS,WAAY;AAC5C,WAAO,KAAK;AAAA;AAEhB,SAAO;AAAA;AAEX,IAAI,UAAU;AAAA,EACV,OAAO,SAAU,IAAI;AACjB,QAAI,QAAQ,GAAG;AACf,QAAI,QAAQ,GAAG;AACf,QAAI,CAAC,OAAO;AACR,cAAQ,cAAc;AACtB,SAAG,UAAU;AAAA;AAEjB,QAAI,CAAC,GAAG,MAAM;AACV,SAAG;AAAA;AAEP,QAAI,OAAO,GAAG;AACd,QAAI,GAAG,gBAAgB;AACnB,WAAK;AACL,SAAG,UAAU,MAAM,GAAG;AACtB,SAAG;AAAA;AAEP,QAAI,cAAc,KAAK;AACvB,QAAI,QAAQ;AACZ,QAAI,iBAAiB,MAAM;AAC3B,QAAI,MAAM,qBAAqB,eAAe,CAAC,kBAAkB,GAAG,MAAM,gBAAgB,GAAG;AACzF,UAAI,CAAC,gBAAgB;AACjB,yBAAiB,MAAM,mBAAmB,IAAI;AAAA;AAElD,qBAAe;AACf,WAAK,YAAY,gBAAgB,GAAG,MAAM;AAC1C,qBAAe;AACf,YAAM,mBAAmB;AAAA;AAE7B,SAAK,OAAO,KAAK,eAAe;AAChC,cAAU,OAAO,OAAO;AACxB,iBAAa,OAAO,GAAG;AAAA;AAAA;AAI/B,IAAI,WAAW;AAAA,EACX,OAAO,SAAU,IAAI;AACjB,QAAI,QAAQ,GAAG;AACf,QAAI,QAAQ,MAAM;AAClB,QAAI,iBAAiB,kBAAkB;AACnC,cAAQ,MAAM;AAAA,eAET,iBAAiB,mBAAmB;AACzC,cAAQ,MAAM;AAAA;AAElB,QAAI,CAAC,OAAO;AACR;AAAA;AAEJ,QAAI,IAAI,MAAM,KAAK;AACnB,QAAI,IAAI,MAAM,KAAK;AACnB,QAAI,KAAK,MAAM;AACf,QAAI,KAAK,MAAM;AACf,QAAI,QAAQ,GAAG;AACf,QAAI,CAAC,OAAO;AACR,cAAQ,cAAc;AACtB,SAAG,UAAU;AAAA;AAEjB,QAAI,UAAU,GAAG,YAAY;AACzB,gBAAU,OAAO,QAAQ;AACzB,SAAG,aAAa;AAAA;AAEpB,SAAK,OAAO,SAAS,KAAK;AAC1B,SAAK,OAAO,UAAU,KAAK;AAC3B,SAAK,OAAO,KAAK,IAAI;AACrB,SAAK,OAAO,KAAK,IAAI;AACrB,cAAU,OAAO,OAAO;AACxB,iBAAa,OAAO,GAAG;AAAA;AAAA;AAI/B,IAAI,uBAAuB;AAAA,EACvB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA;AAEZ,qBAAqB,GAAG,YAAY,cAAc;AAC9C,MAAI,iBAAiB,OAAO;AACxB,SAAK,aAAa;AAAA,aAEb,iBAAiB,UAAU;AAChC,SAAK,aAAa;AAAA;AAEtB,SAAO;AAAA;AAEX,IAAI,UAAU;AAAA,EACV,OAAO,SAAU,IAAI;AACjB,QAAI,QAAQ,GAAG;AACf,QAAI,OAAO,MAAM;AACjB,YAAQ,QAAS,SAAQ;AACzB,QAAI,CAAC,QAAQ,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AAC3C;AAAA;AAEJ,QAAI,YAAY,GAAG;AACnB,QAAI,CAAC,WAAW;AACZ,kBAAY,cAAc;AAC1B,cAAQ,WAAW,aAAa;AAChC,SAAG,UAAU;AAAA;AAEjB,QAAI,OAAO,MAAM,QAAQ;AACzB,QAAI,iBAAiB,UAAU;AAC/B,mBAAe,OAAO;AACtB,cAAU,cAAc;AACxB,cAAU,WAAW,OAAO;AAC5B,iBAAa,WAAW,GAAG;AAC3B,QAAI,IAAI,MAAM,KAAK;AACnB,QAAI,IAAI,YAAY,MAAM,KAAK,GAAG,cAAc,OAAO,MAAM;AAC7D,QAAI,YAAY,qBAAqB,MAAM,cACpC,MAAM;AACb,SAAK,WAAW,qBAAqB;AACrC,SAAK,WAAW,eAAe;AAC/B,SAAK,WAAW,KAAK,IAAI;AACzB,SAAK,WAAW,KAAK,IAAI;AAAA;AAAA;;;ACnTjC,IAAI,cAAc;AAClB,IAAI,YAAY;AAChB,IAAI,YAAa,WAAY;AACzB,sBAAmB,MAAM,SAAS,UAAU,WAAW,SAAS;AAC5D,SAAK,SAAS;AACd,SAAK,WAAW;AAChB,SAAK,gBAAgB;AACrB,SAAK,QAAQ;AACb,SAAK,WAAW;AAChB,SAAK,YAAY,OAAO,aAAa,WAAW,CAAC,YAAY;AAC7D,SAAK,aAAa;AAClB,QAAI,SAAS;AACT,WAAK,WAAW;AAAA;AAAA;AAGxB,aAAU,UAAU,UAAU,SAAU,iBAAiB;AACrD,QAAI,UAAU,KAAK;AACnB,QAAI,OAAO,KAAK,SAAS,qBAAqB;AAC9C,QAAI,KAAK,WAAW,GAAG;AACnB,UAAI,iBAAiB;AACjB,YAAI,SAAS,QAAQ,aAAa,KAAK,cAAc,SAAS,QAAQ;AACtE,YAAI,CAAC,OAAO,UAAU;AAClB,iBAAO,WAAW,SAAU,IAAI;AAC5B,gBAAI,WAAW,OAAO;AACtB,gBAAI,CAAC,UAAU;AACX,qBAAO;AAAA;AAEX,qBAAS,IAAI,SAAS,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AAC3C,kBAAI,SAAS,OAAO,IAAI;AACpB,uBAAO;AAAA;AAAA;AAGf,mBAAO;AAAA;AAAA;AAGf,eAAO;AAAA,aAEN;AACD,eAAO;AAAA;AAAA,WAGV;AACD,aAAO,KAAK;AAAA;AAAA;AAGpB,aAAU,UAAU,WAAW,SAAU,QAAQ,UAAU;AACvD,QAAI,CAAC,QAAQ;AACT;AAAA;AAEJ,QAAI,OAAO,KAAK,QAAQ;AACxB,QAAI,OAAO,KAAK,aAAa,KAAK,SAAS,OAAO,KAAK,YAAY;AAC/D,UAAI,OAAO,aAAa,YAAY;AAChC,iBAAS;AAAA;AAAA,WAGZ;AACD,UAAI,MAAM,KAAK,IAAI;AACnB,UAAI,KAAK;AACL,eAAO,KAAK,YAAY;AAAA;AAAA;AAAA;AAIpC,aAAU,UAAU,MAAM,SAAU,QAAQ;AACxC,WAAO;AAAA;AAEX,aAAU,UAAU,SAAS,SAAU,KAAK;AACxC,QAAI,OAAO,KAAK,QAAQ;AACxB,QAAI,IAAI,eAAe,MAAM;AACzB,WAAK,YAAY;AAAA;AAAA;AAGzB,aAAU,UAAU,YAAY,SAAU,QAAQ;AAC9C,QAAI,OAAO,KAAK,QAAQ;AACxB,QAAI,QAAQ,OAAO,KAAK,WAAW;AAC/B,WAAK,YAAY,OAAO,KAAK;AAC7B,aAAO,KAAK,YAAY;AAAA;AAAA;AAGhC,aAAU,UAAU,UAAU,WAAY;AACtC,QAAI,OAAO,KAAK,QAAQ;AACxB,QAAI,CAAC,MAAM;AACP,aAAO;AAAA;AAEX,QAAI,OAAO;AACX,IAAO,KAAK,KAAK,WAAW,SAAU,SAAS;AAC3C,UAAI,OAAO,KAAK,qBAAqB;AACrC,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,aAAK,KAAK,KAAK;AAAA;AAAA;AAGvB,WAAO;AAAA;AAEX,aAAU,UAAU,gBAAgB,WAAY;AAC5C,QAAI,OAAO,KAAK;AAChB,QAAI,OAAO;AACX,IAAO,KAAK,MAAM,SAAU,KAAK;AAC7B,UAAI,KAAK,cAAc;AAAA;AAAA;AAG/B,aAAU,UAAU,cAAc,SAAU,KAAK;AAC7C,WAAQ,KAAI,KAAK,cAAc;AAAA;AAEnC;AACA,aAAU,UAAU,gBAAgB,SAAU,KAAK;AAC/C,WAAQ,KAAI,KAAK,cAAc;AAAA;AAEnC;AACA,aAAU,UAAU,cAAc,SAAU,KAAK;AAC7C,WAAO,OAAO,IAAI,KAAK,gBAAgB;AAAA;AAE3C,aAAU,UAAU,eAAe,WAAY;AAC3C,QAAI,QAAQ;AACZ,QAAI,OAAO,KAAK,QAAQ;AACxB,QAAI,CAAC,MAAM;AACP;AAAA;AAEJ,QAAI,OAAO,KAAK;AAChB,IAAO,KAAK,MAAM,SAAU,KAAK;AAC7B,UAAI,MAAM,YAAY,MAAM;AACxB,aAAK,YAAY;AAAA;AAAA;AAAA;AAI7B,aAAU,UAAU,cAAc,SAAU,aAAa;AACrD,QAAI,uBAAuB,cAAM;AAC7B,aAAO;AAAA,eAEF,uBAAuB,eAAS;AACrC,aAAO;AAAA,eAEF,uBAAuB,eAAO;AACnC,aAAO;AAAA,WAEN;AACD,aAAO;AAAA;AAAA;AAGf,aAAU,UAAU,gBAAgB,SAAU,aAAa;AACvD,WAAO,YAAY;AAAA;AAEvB,SAAO;AAAA;AAEX,IAAO,oBAAQ;;;AChJf,0BAA0B,OAAO;AAC7B,SAAO,MAAM,SAAS;AAAA;AAE1B,0BAA0B,OAAO;AAC7B,SAAO,MAAM,SAAS;AAAA;AAE1B,oBAAoB,OAAO;AACvB,SAAO,SAAU,OAAM,SAAS,YACzB,MAAM,SAAS;AAAA;AAE1B,IAAI,kBAAmB,SAAU,QAAQ;AACrC,YAAU,kBAAiB;AAC3B,4BAAyB,MAAM,SAAS;AACpC,WAAO,OAAO,KAAK,MAAM,MAAM,SAAS,CAAC,kBAAkB,mBAAmB,0BAA0B;AAAA;AAE5G,mBAAgB,UAAU,mBAAmB,SAAU,YAAY,aAAa;AAC5E,QAAI,eAAe,YAAY,OAAO;AAClC,UAAI,SAAS;AACb,MAAO,KAAK,CAAC,QAAQ,WAAW,SAAU,cAAc;AACpD,YAAI,QAAQ,YAAY,MAAM;AAC9B,YAAI,WAAW,QAAQ;AACnB,cAAI,WAAW;AACf,cAAI,OAAO,OAAO,QAAQ;AAC1B,cAAI,MAAM;AACV,cAAI,SAAS,OAAO;AAChB,kBAAM,SAAS;AACf,gBAAI,CAAC,KAAK,SAAS,SAAS,QAAQ;AAChC,qBAAO,OAAO;AAAA;AAAA,iBAGjB;AACD,kBAAM,OAAO,IAAI;AAAA;AAErB,iBAAO,SAAS;AAChB,cAAI,KAAK,IAAI,aAAa;AAC1B,qBAAW,aAAa,cAAc,UAAU,KAAK;AAAA;AAAA;AAAA;AAAA;AAKrE,mBAAgB,UAAU,MAAM,SAAU,UAAU;AAChD,QAAI;AACJ,QAAI,iBAAiB,WAAW;AAC5B,YAAM,KAAK,cAAc;AAAA,eAEpB,iBAAiB,WAAW;AACjC,YAAM,KAAK,cAAc;AAAA,WAExB;AACD,MAAO,SAAS;AAChB,aAAO;AAAA;AAEX,aAAS,KAAK,SAAS,MAAM,KAAK;AAClC,QAAI,aAAa,MAAM,OAAO,KAAK,QAC7B,eAAe,SAAS;AAC9B,SAAK,UAAU,UAAU;AACzB,SAAK,OAAO;AACZ,WAAO;AAAA;AAEX,mBAAgB,UAAU,SAAS,SAAU,UAAU;AACnD,QAAI,CAAC,WAAW,WAAW;AACvB;AAAA;AAEJ,QAAI,OAAO;AACX,SAAK,SAAS,UAAU,WAAY;AAChC,UAAI,MAAM,SAAS;AACnB,UAAI,CAAC,KAAK;AACN;AAAA;AAEJ,UAAI,UAAU,IAAI;AAClB,UAAI,OAAO,SAAS;AACpB,UAAI,SAAS,YAAY,YAAY,oBAC9B,SAAS,YAAY,YAAY,kBAAkB;AACtD,aAAK,UAAU,UAAU,SAAS;AAAA,aAEjC;AACD,aAAK,UAAU;AACf,aAAK,IAAI;AAAA;AAAA;AAAA;AAIrB,mBAAgB,UAAU,YAAY,SAAU,UAAU,KAAK;AAC3D,QAAI,iBAAiB,WAAW;AAC5B,UAAI,aAAa,MAAM,SAAS,IAAI;AACpC,UAAI,aAAa,MAAM,SAAS,IAAI;AACpC,UAAI,aAAa,MAAM,SAAS,KAAK;AACrC,UAAI,aAAa,MAAM,SAAS,KAAK;AAAA,eAEhC,iBAAiB,WAAW;AACjC,UAAI,aAAa,MAAM,SAAS,IAAI;AACpC,UAAI,aAAa,MAAM,SAAS,IAAI;AACpC,UAAI,aAAa,KAAK,SAAS,IAAI;AAAA,WAElC;AACD,MAAO,SAAS;AAChB;AAAA;AAEJ,QAAI,SAAS,QAAQ;AACjB,UAAI,aAAa,iBAAiB;AAAA,WAEjC;AACD,UAAI,aAAa,iBAAiB;AAAA;AAEtC,QAAI,YAAY;AAChB,QAAI,SAAS,SAAS;AACtB,aAAS,IAAI,GAAG,OAAM,OAAO,QAAQ,IAAI,MAAK,EAAE,GAAG;AAC/C,UAAI,SAAS,KAAK,cAAc;AAChC,aAAO,aAAa,UAAU,OAAO,GAAG,SAAS,MAAM;AACvD,UAAI,QAAQ,OAAO,GAAG;AACtB,UAAI,MAAM,QAAQ,UAAU,IAAI;AAC5B,YAAI,UAAU,AAAU,MAAM,OAAO;AACrC,YAAI,MAAM,AAAU,MAAM;AAC1B,eAAO,aAAa,cAAc,MAAM;AACxC,eAAO,aAAa,gBAAgB,UAAU;AAAA,aAE7C;AACD,eAAO,aAAa,cAAc,OAAO,GAAG;AAAA;AAEhD,UAAI,YAAY;AAAA;AAEpB,aAAS,QAAQ;AAAA;AAErB,mBAAgB,UAAU,WAAW,SAAU,aAAa;AACxD,QAAI,YAAY,OAAO;AACnB,UAAI,WAAW,YAAY,MAAM;AACjC,UAAI,YAAY,SAAS,OAAO;AAC5B,eAAO,UAAU,YAAY,KAAK,MAAM,SAAS;AAAA;AAErD,iBAAW,YAAY,MAAM;AAC7B,UAAI,YAAY,SAAS,OAAO;AAC5B,eAAO,UAAU,YAAY,KAAK,MAAM,SAAS;AAAA;AAAA;AAAA;AAI7D,SAAO;AAAA,EACT;AACF,IAAO,0BAAQ;;;ACvIf,mBAAmB,OAAO;AACtB,SAAO,SAAU,EAAC,CAAC,MAAM,SAAS,CAAC,CAAC,MAAM;AAAA;AAE9C,IAAI,gBAAgB,IAAI;AACxB,IAAI,iBAAkB,SAAU,QAAQ;AACpC,YAAU,iBAAgB;AAC1B,2BAAwB,MAAM,SAAS;AACnC,WAAO,OAAO,KAAK,MAAM,MAAM,SAAS,CAAC,YAAY,yBAAyB;AAAA;AAElF,kBAAe,UAAU,mBAAmB,SAAU,YAAY,aAAa;AAC3E,QAAI,eAAe,YAAY,OAAO;AAClC,UAAI,SAAS;AACb,MAAO,KAAK,CAAC,QAAQ,WAAW,SAAU,cAAc;AACpD,YAAI,UAAU,YAAY,MAAM;AAChC,YAAI,UAAU,UAAU;AACpB,cAAI,OAAO,OAAO,QAAQ;AAC1B,cAAI,MAAM,cAAc,IAAI;AAC5B,cAAI,KAAK;AACL,gBAAI,CAAC,KAAK,SAAS,MAAM;AACrB,qBAAO,OAAO;AAAA;AAAA,iBAGjB;AACD,kBAAM,OAAO,IAAI;AAAA;AAErB,iBAAO,SAAS;AAChB,cAAI,KAAK,IAAI,aAAa;AAC1B,qBAAW,aAAa,cAAc,UAAU,KAAK;AAAA;AAAA;AAAA;AAAA;AAKrE,kBAAe,UAAU,MAAM,SAAU,SAAS;AAC9C,QAAI,CAAC,UAAU,UAAU;AACrB;AAAA;AAEJ,QAAI,MAAM,KAAK,cAAc;AAC7B,YAAQ,KAAK,QAAQ,MAAM,OAAO,KAAK,WAAW,QAAQ;AAC1D,QAAI,aAAa,MAAM,OAAO,KAAK,QAC7B,cAAc,QAAQ;AAC5B,QAAI,aAAa,KAAK;AACtB,QAAI,aAAa,KAAK;AACtB,QAAI,aAAa,gBAAgB;AACjC,SAAK,UAAU,SAAS;AACxB,SAAK,OAAO;AACZ,WAAO;AAAA;AAEX,kBAAe,UAAU,SAAS,SAAU,SAAS;AACjD,QAAI,CAAC,UAAU,UAAU;AACrB;AAAA;AAEJ,QAAI,OAAO;AACX,SAAK,SAAS,SAAS,WAAY;AAC/B,UAAI,MAAM,cAAc,IAAI;AAC5B,WAAK,UAAU,SAAS;AAAA;AAAA;AAGhC,kBAAe,UAAU,YAAY,SAAU,SAAS,YAAY;AAChE,QAAI,aAAa,QAAQ;AACzB,QAAI,sBAAsB,YAAY;AAClC,UAAI,WAAW,eAAe,YAAY;AACtC,mBAAW,YAAY;AACvB,mBAAW,YAAY;AACvB,mBAAW,aAAa,SAAS,QAAQ,WAAW;AACpD,mBAAW,aAAa,UAAU,QAAQ,YAAY;AAAA;AAAA,WAGzD;AACD,UAAI,MAAM;AACV,UAAI,YAAY,WAAW,qBAAqB;AAChD,UAAI,UAAU,QAAQ;AAClB,YAAI,QAAQ,OAAO;AACf,gBAAM,UAAU;AAAA,eAEf;AACD,qBAAW,YAAY,UAAU;AACjC;AAAA;AAAA,iBAGC,QAAQ,OAAO;AACpB,cAAM,KAAK,cAAc;AAAA;AAE7B,UAAI,KAAK;AACL,YAAI,WAAW;AACf,YAAI,eAAe,QAAQ;AAC3B,YAAI,OAAO,iBAAiB,UAAU;AAClC,qBAAW;AAAA,mBAEN,wBAAwB,kBAAkB;AAC/C,qBAAW,aAAa;AAAA,mBAEnB,wBAAwB,mBAAmB;AAChD,qBAAW,aAAa;AAAA;AAE5B,YAAI,UAAU;AACV,cAAI,aAAa,QAAQ;AACzB,cAAI,aAAa,KAAK;AACtB,cAAI,aAAa,KAAK;AACtB,cAAI,SAAS;AAAA,YACT,OAAO,WAAY;AAAA;AAAA;AAEvB,cAAI,eAAe,oBAAoB,UAAU,KAAK,QAAQ,SAAU,MAAK;AACzE,uBAAW,aAAa,SAAS,KAAI,QAAQ;AAC7C,uBAAW,aAAa,UAAU,KAAI,SAAS;AAAA;AAEnD,cAAI,gBAAgB,aAAa,SAAS,aAAa,QAAQ;AAC3D,uBAAW,aAAa,SAAS,aAAa,QAAQ;AACtD,uBAAW,aAAa,UAAU,aAAa,SAAS;AAAA;AAE5D,qBAAW,YAAY;AAAA;AAAA;AAAA;AAInC,QAAI,IAAI,QAAQ,KAAK;AACrB,QAAI,IAAI,QAAQ,KAAK;AACrB,QAAI,WAAY,SAAQ,YAAY,KAAK,KAAK,KAAK;AACnD,QAAI,SAAS,QAAQ,UAAU;AAC/B,QAAI,SAAS,QAAQ,UAAU;AAC/B,QAAI,aAAY,eAAe,IAAI,OAAO,IAAI,cAAc,WAAW,aAAa,SAAS,OAAO,SAAS;AAC7G,eAAW,aAAa,oBAAoB;AAC5C,kBAAc,IAAI,SAAS;AAAA;AAE/B,kBAAe,UAAU,WAAW,SAAU,aAAa;AACvD,QAAI,YAAY,OAAO;AACnB,UAAI,UAAU,YAAY,MAAM,OAAO;AACnC,eAAO,UAAU,YAAY,KAAK,MAAM,cAAc,IAAI,YAAY,MAAM;AAAA;AAEhF,UAAI,UAAU,YAAY,MAAM,SAAS;AACrC,eAAO,UAAU,YAAY,KAAK,MAAM,cAAc,IAAI,YAAY,MAAM;AAAA;AAAA;AAAA;AAIxF,SAAO;AAAA,EACT;AACF,IAAO,yBAAQ;;;ACvIf,8BAA8B,WAAW;AACrC,MAAI,MAAM;AACV,MAAI,WAAW;AACX,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACvC,UAAI,WAAW,UAAU;AACzB,UAAI,KAAK,SAAS;AAAA;AAAA;AAG1B,SAAO,IAAI,KAAK;AAAA;AAEb,qBAAqB,aAAa;AACrC,MAAI,YAAY,YAAY;AAC5B,SAAO,aAAa,UAAU,SAAS;AAAA;AAE3C,IAAI,kBAAmB,SAAU,QAAQ;AACrC,YAAU,kBAAiB;AAC3B,4BAAyB,MAAM,SAAS;AACpC,QAAI,QAAQ,OAAO,KAAK,MAAM,MAAM,SAAS,YAAY,0BAA0B;AACnF,UAAM,aAAa;AACnB,UAAM,qBAAqB;AAC3B,WAAO;AAAA;AAEX,mBAAgB,UAAU,gBAAgB,WAAY;AAClD,WAAO,UAAU,cAAc,KAAK;AACpC,QAAI,YAAY,KAAK;AACrB,aAAS,OAAO,WAAW;AACvB,UAAI,UAAU,eAAe,MAAM;AAC/B,aAAK,cAAc,UAAU;AAAA;AAAA;AAGrC,SAAK,qBAAqB;AAAA;AAE9B,mBAAgB,UAAU,oBAAoB,SAAU,aAAa,iBAAiB;AAClF,QAAI,CAAC,YAAY,cAAc;AAC3B;AAAA;AAEJ,QAAI,YAAY,YAAY;AAC5B,QAAI,oBAAoB,KAAK;AAC7B,QAAI,cAAc,qBAAqB;AACvC,QAAI,kBAAkB,WAAW,mBAAmB,gBAAgB,cAAc;AAC9E,wBAAkB,eAAe,kBAAkB,gBAAgB;AACnE,wBAAkB,gBAAiB,gBAAe,MAAM,kBAAkB;AAC1E,wBAAkB;AAAA;AAEtB,WAAO,KAAK,WAAW,gBACf,MAAK,WAAW,eAAe,KAAK,cAAc;AAAA;AAE9D,mBAAgB,UAAU,SAAS,SAAU,aAAa,iBAAiB;AACvE,QAAI,YAAY,KAAK,kBAAkB,aAAa;AACpD,QAAI,WAAW;AACX,WAAK,YAAY;AACjB,WAAK,UAAU,WAAW,YAAY;AAAA;AAE1C,WAAO;AAAA;AAEX;AACA,mBAAgB,UAAU,YAAY,SAAU,UAAU,WAAW;AACjE,QAAI,aAAa,UAAU,SAAS,GAAG;AACnC,UAAI,OAAO,KAAK,QAAQ;AACxB,UAAI,WAAW,UAAU;AACzB,UAAI,aAAa;AACjB,UAAI,KAAK;AACT,UAAI,SAAS,MAAM;AACf,aAAK,SAAS,KAAK,aAAa;AAChC,qBAAa,SAAS;AACtB,YAAI,CAAC,KAAK,SAAS,aAAa;AAC5B,eAAK,YAAY;AAAA;AAAA,aAGpB;AACD,aAAK,OAAO,KAAK,QAAQ,WAAW,KAAK;AACzC,UAAE,KAAK;AACP,qBAAa,KAAK,cAAc;AAChC,mBAAW,aAAa,MAAM;AAC9B,aAAK,YAAY;AACjB,iBAAS,OAAO;AAAA;AAEpB,UAAI,WAAW,KAAK,YAAY;AAChC,eAAS,MAAM;AACf,UAAI,SAAS,KAAK,cAAc;AAChC,iBAAW,YAAY;AACvB,iBAAW,YAAY;AACvB,eAAS,aAAa,aAAa,UAAU,KAAK;AAClD,UAAI,UAAU,SAAS,GAAG;AACtB,aAAK,UAAU,YAAY,UAAU,MAAM;AAAA;AAAA,WAG9C;AACD,UAAI,UAAU;AACV,iBAAS,aAAa,aAAa;AAAA;AAAA;AAAA;AAI/C;AACA,mBAAgB,UAAU,WAAW,SAAU,aAAa;AACxD,QAAI,QAAQ;AACZ,QAAI,YAAY,aAAa;AACzB,MAAO,KAAK,YAAY,aAAa,SAAU,UAAU;AACrD,YAAI,SAAS,MAAM;AACf,iBAAO,UAAU,YAAY,KAAK,OAAO,SAAS;AAAA;AAAA;AAAA;AAAA;AAKlE;AACA,mBAAgB,UAAU,eAAe,WAAY;AACjD,WAAO,UAAU,aAAa,KAAK;AACnC,QAAI,kBAAkB;AACtB,QAAI,YAAY,KAAK;AACrB,aAAS,OAAO,WAAW;AACvB,UAAI,UAAU,eAAe,MAAM;AAC/B,YAAI,QAAQ,UAAU;AACtB,YAAI,CAAC,KAAK,YAAY,QAAQ;AAC1B,0BAAgB,OAAO;AAAA,mBAElB,MAAM,YAAY;AACvB,gBAAM,WAAW,YAAY;AAAA;AAAA;AAAA;AAIzC,SAAK,aAAa;AAAA;AAEtB,SAAO;AAAA,EACT;AACF,IAAO,0BAAQ;;;AC7Hf,IAAI,gBAAiB,SAAU,QAAQ;AACnC,YAAU,gBAAe;AACzB,0BAAuB,MAAM,SAAS;AAClC,QAAI,QAAQ,OAAO,KAAK,MAAM,MAAM,SAAS,CAAC,WAAW,qBAAqB,iBAAiB;AAC/F,UAAM,gBAAgB;AACtB,UAAM,iBAAiB;AACvB,WAAO;AAAA;AAEX,iBAAc,UAAU,eAAe,WAAY;AAC/C,QAAI,YAAY,KAAK,eAAe;AACpC,QAAI,CAAC,WAAW;AACZ,kBAAY,KAAK,cAAc;AAC/B,gBAAU,aAAa,MAAM,OAAO,KAAK,QAAQ,aAAa,KAAK;AACnE,UAAI,WAAW,KAAK,cAAc;AAClC,gBAAU,YAAY;AACtB,WAAK,OAAO;AAAA;AAEhB,WAAO;AAAA;AAEX,iBAAc,UAAU,SAAS,SAAU,YAAY,aAAa;AAChE,QAAI,QAAQ,YAAY;AACxB,QAAI,UAAU,QAAQ;AAClB,UAAI,YAAY,aAAa;AAC7B,UAAI,YAAY,YAAY,aAAa,KAAK,cAAc;AAC5D,UAAI,CAAC,WAAW;AACZ,oBAAY,KAAK;AACjB,aAAK,cAAc,aAAa;AAAA;AAEpC,WAAK,UAAU,YAAY,aAAa;AAAA,WAEvC;AACD,WAAK,OAAO,YAAY;AAAA;AAAA;AAGhC,iBAAc,UAAU,SAAS,SAAU,YAAY,aAAa;AAChE,QAAI,YAAY,cAAc,MAAM;AAChC,kBAAY,aAAa;AACzB,iBAAW,gBAAgB;AAAA;AAAA;AAGnC,iBAAc,UAAU,YAAY,SAAU,YAAY,aAAa,WAAW;AAC9E,QAAI,WAAW,UAAU,SAAS;AAClC,QAAI,QAAQ,YAAY;AACxB,QAAI,cAAc,YAAY;AAC9B,QAAI,SAAS,YAAY;AACzB,QAAI,SAAS,YAAY;AACzB,QAAI,CAAC,UAAU,CAAC,QAAQ;AACpB;AAAA;AAEJ,QAAI,UAAU,MAAM,iBAAiB;AACrC,QAAI,UAAU,MAAM,iBAAiB;AACrC,QAAI,OAAO,MAAM;AACjB,QAAI,kBAAkB,eAAe,MAAM;AAC3C,aAAS,aAAa,MAAM,UAAU,SAAS;AAC/C,aAAS,aAAa,MAAM,UAAU,SAAS;AAC/C,aAAS,aAAa,eAAe,gBAAgB;AACrD,aAAS,aAAa,iBAAiB,gBAAgB,UAAU;AACjE,QAAI,QAAQ,OAAO,IAAI;AACvB,QAAI,QAAQ,OAAO,IAAI;AACvB,QAAI,eAAe,QAAQ,MAAM;AACjC,aAAS,aAAa,gBAAgB;AACtC,cAAU,aAAa,KAAK;AAC5B,cAAU,aAAa,KAAK;AAC5B,cAAU,aAAa,SAAS;AAChC,cAAU,aAAa,UAAU;AACjC,gBAAY,aAAa;AACzB,QAAI,KAAK,UAAU,aAAa;AAChC,eAAW,aAAa,UAAU,UAAU,KAAK;AAAA;AAErD,iBAAc,UAAU,eAAe,WAAY;AAC/C,QAAI,OAAO,KAAK,QAAQ;AACxB,QAAI,CAAC,MAAM;AACP;AAAA;AAEJ,QAAI,iBAAiB,KAAK;AAC1B,QAAI,eAAe,KAAK;AACxB,aAAS,OAAO,cAAc;AAC1B,UAAI,aAAa,eAAe,MAAM;AAClC,uBAAe,KAAK,aAAa;AAAA;AAAA;AAGzC,SAAK,gBAAgB;AAAA;AAEzB,SAAO;AAAA,EACT;AACF,IAAO,wBAAQ;AACf,mBAAmB,OAAO;AACtB,SAAO,SACC,OAAM,cAAc,MAAM,iBAAiB,MAAM;AAAA;AAE7D,sBAAsB,aAAa;AAC/B,MAAI,QAAQ,YAAY;AACxB,MAAI,cAAc,YAAY;AAC9B,SAAO;AAAA,IACH,MAAM;AAAA,IACL,OAAM,cAAc,GAAG,QAAQ;AAAA,IAC/B,OAAM,iBAAiB,GAAG,QAAQ;AAAA,IAClC,OAAM,iBAAiB,GAAG,QAAQ;AAAA,IACnC,YAAY;AAAA,IACZ,YAAY;AAAA,IACd,KAAK;AAAA;;;AC5FX,oBAAoB,KAAK;AACrB,SAAO,SAAS,KAAK;AAAA;AAEzB,qBAAqB,IAAI;AACrB,MAAI,cAAc,cAAM;AACpB,WAAO;AAAA,aAEF,cAAc,eAAS;AAC5B,WAAO;AAAA,aAEF,cAAc,eAAO;AAC1B,WAAO;AAAA,SAEN;AACD,WAAO;AAAA;AAAA;AAGf,8BAA8B,QAAQ,OAAO;AACzC,SAAO,SAAS,UAAU,MAAM,eAAe;AAAA;AAEnD,qBAAqB,QAAQ,OAAO,aAAa;AAC7C,MAAI,qBAAqB,QAAQ,UAAU,aAAa;AACpD,QAAI,cAAc,YAAY;AAC9B,kBAAc,OAAO,aAAa,OAAO,eACnC,OAAO,YAAY;AAAA;AAAA;AAGjC,iBAAiB,QAAQ,OAAO;AAC5B,MAAI,qBAAqB,QAAQ,QAAQ;AACrC,QAAI,aAAa,OAAO;AACxB,iBAAa,OAAO,aAAa,OAAO,cAClC,OAAO,YAAY;AAAA;AAAA;AAGjC,gBAAgB,QAAQ,OAAO;AAC3B,MAAI,SAAS,UAAU,MAAM,eAAe,QAAQ;AAChD,WAAO,YAAY;AAAA;AAAA;AAG3B,4BAA4B,OAAO;AAC/B,MAAI,SAAS,MAAM,YAAY;AAC3B,UAAM,WAAW,YAAY;AAAA;AAAA;AAGrC,uBAAuB,aAAa;AAChC,SAAO,YAAY;AAAA;AAEvB,IAAI,aAAc,WAAY;AAC1B,uBAAoB,MAAM,SAAS,MAAM,MAAM;AAC3C,SAAK,OAAO;AACZ,SAAK,eAAe,uBAAuB;AAC3C,SAAK,cAAc,uBAAuB;AAC1C,SAAK,cAAc,uBAAuB;AAC1C,SAAK,OAAO;AACZ,SAAK,UAAU;AACf,SAAK,QAAQ,OAAO,AAAK,OAAO,IAAI,QAAQ;AAC5C,QAAI,SAAS,cAAc;AAC3B,WAAO,eAAe,iCAAiC,SAAS;AAChE,WAAO,eAAe,iCAAiC,eAAe;AACtE,WAAO,aAAa,WAAW;AAC/B,WAAO,aAAa,eAAe;AACnC,WAAO,MAAM,UAAU;AACvB,QAAI,SAAS,cAAc;AAC3B,WAAO,YAAY;AACnB,QAAI,UAAU,cAAc;AAC5B,WAAO,YAAY;AACnB,SAAK,mBAAmB,IAAI,wBAAgB,MAAM;AAClD,SAAK,kBAAkB,IAAI,uBAAe,MAAM;AAChD,SAAK,mBAAmB,IAAI,wBAAgB,MAAM;AAClD,SAAK,iBAAiB,IAAI,sBAAc,MAAM;AAC9C,QAAI,WAAW,SAAS,cAAc;AACtC,aAAS,MAAM,UAAU;AACzB,SAAK,UAAU;AACf,SAAK,WAAW;AAChB,SAAK,kBAAkB;AACvB,SAAK,YAAY;AACjB,SAAK,YAAY;AACjB,aAAS,YAAY;AACrB,SAAK,OAAO,KAAK,OAAO,KAAK;AAC7B,SAAK,eAAe;AAAA;AAExB,cAAW,UAAU,UAAU,WAAY;AACvC,WAAO;AAAA;AAEX,cAAW,UAAU,kBAAkB,WAAY;AAC/C,WAAO,KAAK;AAAA;AAEhB,cAAW,UAAU,YAAY,WAAY;AACzC,WAAO,KAAK;AAAA;AAEhB,cAAW,UAAU,aAAa,WAAY;AAC1C,WAAO,KAAK;AAAA;AAEhB,cAAW,UAAU,wBAAwB,WAAY;AACrD,QAAI,eAAe,KAAK;AACxB,QAAI,cAAc;AACd,aAAO;AAAA,QACH,YAAY,aAAa,cAAc;AAAA,QACvC,WAAW,aAAa,aAAa;AAAA;AAAA;AAAA;AAIjD,cAAW,UAAU,UAAU,WAAY;AACvC,QAAI,OAAO,KAAK,QAAQ,eAAe;AACvC,SAAK,WAAW;AAAA;AAEpB,cAAW,UAAU,qBAAqB,SAAU,iBAAiB;AACjE,QAAI,KAAK,mBAAmB,KAAK,iBAAiB;AAC9C,WAAK,gBAAgB,YAAY,KAAK;AAAA;AAE1C,QAAI,SAAS,cAAc;AAC3B,WAAO,aAAa,SAAS,KAAK;AAClC,WAAO,aAAa,UAAU,KAAK;AACnC,WAAO,aAAa,KAAK;AACzB,WAAO,aAAa,KAAK;AACzB,WAAO,aAAa,MAAM;AAC1B,QAAI,KAAK,eAAe,kBAAkB,QAAQ,GAAG,OAAO,UAAU,GAAG;AACzE,WAAO,aAAa,QAAQ;AAC5B,WAAO,aAAa,gBAAgB;AACpC,SAAK,gBAAgB,YAAY;AACjC,SAAK,kBAAkB;AAAA;AAE3B,cAAW,UAAU,mBAAmB,SAAU,KAAK;AACnD,WAAO,cAAc;AAAA;AAEzB,cAAW,UAAU,WAAW,SAAU,IAAI;AAC1C,QAAI,WAAW,YAAY;AAC3B,gBAAY,SAAS,MAAM;AAC3B,WAAO,cAAc;AAAA;AAEzB,cAAW,UAAU,aAAa,SAAU,MAAM;AAC9C,QAAI,kBAAkB,KAAK;AAC3B,QAAI,iBAAiB,KAAK;AAC1B,QAAI,kBAAkB,KAAK;AAC3B,QAAI,gBAAgB,KAAK;AACzB,oBAAgB;AAChB,mBAAe;AACf,oBAAgB;AAChB,kBAAc;AACd,QAAI,UAAU,KAAK;AACnB,QAAI,cAAc,KAAK;AACvB,QAAI,UAAU,KAAK;AACnB,QAAI,iBAAiB;AACrB,aAAS,IAAI,GAAG,IAAI,SAAS,KAAK;AAC9B,UAAI,cAAc,KAAK;AACvB,UAAI,WAAW,YAAY;AAC3B,UAAI,aAAa,cAAc;AAC/B,UAAI,CAAC,YAAY,WAAW;AACxB,YAAI,YAAY,WAAW,CAAC,YAAY;AACpC,sBAAY,SAAS,MAAM;AAC3B,uBAAa,cAAc;AAC3B,cAAI,cAAc,YAAY,OAAO;AACjC,4BAAgB,OAAO,YAAY,MAAM;AACzC,4BAAgB,OAAO,YAAY,MAAM;AACzC,2BAAe,OAAO,YAAY,MAAM;AACxC,2BAAe,OAAO,YAAY,MAAM;AACxC,0BAAc,OAAO,YAAY;AAAA;AAErC,sBAAY,UAAU;AAAA;AAE1B,YAAI,YAAY;AACZ,yBAAe,KAAK;AAAA;AAAA;AAAA;AAIhC,QAAI,QAAO,UAAU,aAAa;AAClC,QAAI;AACJ,QAAI;AACJ,aAAS,IAAI,GAAG,IAAI,MAAK,QAAQ,KAAK;AAClC,UAAI,OAAO,MAAK;AAChB,UAAI,KAAK,SAAS;AACd,iBAAS,IAAI,GAAG,IAAI,KAAK,OAAO,KAAK;AACjC,cAAI,cAAc,YAAY,KAAK,QAAQ;AAC3C,cAAI,aAAa,cAAc;AAC/B,sBAAY,eAAe,mBAAmB,cACxC,OAAO,SAAS;AAAA;AAAA;AAAA;AAIlC,QAAI;AACJ,QAAI;AACJ,aAAS,IAAI,GAAG,IAAI,MAAK,QAAQ,KAAK;AAClC,UAAI,OAAO,MAAK;AAChB,UAAI,KAAK,SAAS;AACd;AAAA;AAEJ,eAAS,IAAI,GAAG,IAAI,KAAK,OAAO,KAAK;AACjC,YAAI,cAAc,eAAe,KAAK,QAAQ;AAC9C,YAAI,YAAY,gBAAgB,OAAO,aAAa;AACpD,YAAI,cAAc,kBAAkB;AAChC,2BAAiB;AACjB,cAAI,WAAW;AACX,6BAAiB,YAAY,SAAS,WAAW,kBAC3C,QAAQ,SAAS;AACvB,gCAAoB;AACpB,6BAAiB;AAAA;AAErB,6BAAmB;AAAA;AAEvB,YAAI,aAAa,cAAc;AAC/B,yBACM,YAAY,oBAAoB,SAAS,YAAY,kBACrD,QAAQ,oBAAoB,SAAS;AAC3C,yBAAiB,cAAc;AAC/B,YAAI,CAAC,kBAAkB;AACnB,8BAAoB;AAAA;AAExB,wBAAgB,SAAS;AACzB,wBAAgB,iBAAiB,YAAY;AAC7C,uBAAe,SAAS;AACxB,uBAAe,iBAAiB,YAAY;AAC5C,wBAAgB,SAAS;AACzB,0BAAkB;AAAA;AAAA;AAG1B,oBAAgB;AAChB,mBAAe;AACf,oBAAgB;AAChB,kBAAc;AACd,SAAK,eAAe;AAAA;AAExB,cAAW,UAAU,SAAS,SAAU,OAAO,QAAQ;AACnD,QAAI,WAAW,KAAK;AACpB,aAAS,MAAM,UAAU;AACzB,QAAI,OAAO,KAAK;AAChB,aAAS,QAAS,MAAK,QAAQ;AAC/B,cAAU,QAAS,MAAK,SAAS;AACjC,YAAQ,KAAK,SAAS;AACtB,aAAS,KAAK,SAAS;AACvB,aAAS,MAAM,UAAU;AACzB,QAAI,KAAK,WAAW,SAAS,KAAK,YAAY,QAAQ;AAClD,WAAK,SAAS;AACd,WAAK,UAAU;AACf,UAAI,gBAAgB,SAAS;AAC7B,oBAAc,QAAQ,QAAQ;AAC9B,oBAAc,SAAS,SAAS;AAChC,UAAI,UAAU,KAAK;AACnB,cAAQ,aAAa,SAAS,QAAQ;AACtC,cAAQ,aAAa,UAAU,SAAS;AAAA;AAE5C,QAAI,KAAK,iBAAiB;AACtB,WAAK,gBAAgB,aAAa,SAAS;AAC3C,WAAK,gBAAgB,aAAa,UAAU;AAAA;AAAA;AAGpD,cAAW,UAAU,WAAW,WAAY;AACxC,WAAO,KAAK;AAAA;AAEhB,cAAW,UAAU,YAAY,WAAY;AACzC,WAAO,KAAK;AAAA;AAEhB,cAAW,UAAU,WAAW,SAAU,OAAO;AAC7C,QAAI,OAAO,KAAK;AAChB,QAAI,KAAK,CAAC,SAAS,UAAU;AAC7B,QAAI,MAAM,CAAC,eAAe,gBAAgB;AAC1C,QAAI,MAAM,CAAC,eAAe,cAAc;AACxC,QAAI,MAAM,CAAC,gBAAgB,iBAAiB;AAC5C,QAAI,KAAK,OAAO,QAAQ,KAAK,QAAQ,QAAQ;AACzC,aAAO,WAAW,KAAK;AAAA;AAE3B,QAAI,OAAO,KAAK;AAChB,QAAI,MAAM,SAAS,YAAY,iBAAiB;AAChD,WAAS,MAAK,QAAQ,WAAW,IAAI,QAAQ,WAAW,KAAK,MAAM,QAC5D,YAAW,IAAI,SAAS,KACxB,YAAW,IAAI,SAAS,KAAM;AAAA;AAEzC,cAAW,UAAU,UAAU,WAAY;AACvC,SAAK,KAAK,YAAY;AACtB,SAAK,WACD,KAAK,kBACD,KAAK,UACD,KAAK,kBACD,KAAK,YAAY,KAAK,UAAU;AAAA;AAEpD,cAAW,UAAU,QAAQ,WAAY;AACrC,QAAI,eAAe,KAAK;AACxB,QAAI,gBAAgB,aAAa,YAAY;AACzC,mBAAa,WAAW,YAAY;AAAA;AAAA;AAG5C,cAAW,UAAU,YAAY,WAAY;AACzC,SAAK;AACL,QAAI,SAAS,KAAK;AAClB,QAAI,YAAY,OAAO,aACf,QAAO,cAAc,OAAO,YAAY;AAChD,QAAI,OAAO,mBAAmB,UAAU,QAAQ,OAAO;AACvD,WAAO,sCAAsC;AAAA;AAEjD,SAAO;AAAA;AAEX,gCAAgC,QAAQ;AACpC,SAAO,WAAY;AACf,IAAK,SAAS,6CAA6C,SAAS;AAAA;AAAA;AAG5E,IAAO,kBAAQ;;;ACtQR,kBAAiB,WAAW;AACjC,YAAU,gBAAgB,OAAO;AAAA;;;ACInC,IAAI,kBAEJ,SAAU,QAAQ;AAChB,YAAU,kBAAiB;AAE3B,8BAA2B;AACzB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,iBAAgB;AAC7B,UAAM,kBAAkB;AACxB,WAAO;AAAA;AAGT,mBAAgB,UAAU,iBAAiB,SAAU,QAAQ;AAC3D,QAAI,MAAuC;AACzC,UAAI,WAAW,OAAO;AAEtB,UAAI,aAAa,WAAW,aAAa,eAAe;AACtD,cAAM,IAAI,MAAM;AAAA;AAAA;AAIpB,WAAO,yBAAiB,MAAM,MAAM;AAAA,MAClC,oBAAoB;AAAA;AAAA;AAIxB,mBAAgB,UAAU,gBAAgB,SAAU,KAAK;AACvD,QAAI,QAAQ,IAAI;AAChB,QAAI,OAAO,aAAa,QAAQ,GAAG,IAAI,aAAa,GAAG,IAAI,WAAW,GAAG,IAAI,UAAU,QAAQ;AAC/F,UAAM,IAAI;AACV,SAAK,SAAS,IAAI;AAClB,QAAI,aAAa,KAAK,UAAU,UAAU;AAC1C,QAAI,eAAe,KAAK,UAAU,UAAU;AAC5C,QAAI,aAAa,eAAe,SAAS,WAAW;AAEpD,QAAI,OAAO,IAAI,aAAa;AAC5B,QAAI,SAAS,aAAa,YAAa,KAAI,YAAY,QAAQ,GAAI,KAAI,aAAa,QAAQ,GAAG,MAAM,MAAM,IAAI,UAAU;AACzH,UAAM,IAAI;AACV,WAAO,SAAS,IAAI;AACpB,QAAI,eAAe,IAAI,eAAe,YAAY,eAAe,IAAI,cAAc;AACnF,WAAO,WAAW,eAAe,KAAK,KAAK;AAC3C,WAAO,UAAU,CAAC,IAAI,YAAY,GAAG,IAAI,aAAa;AAEtD,QAAI,WAAW,QAAQ,WAAW,IAAI;AACpC,aAAO,MAAM,SAAS,OAAO,MAAM;AACnC,aAAO,MAAM,OAAO;AACpB,aAAO,MAAM,YAAY;AAAA;AAG3B,WAAO;AAAA;AAGT,mBAAgB,OAAO;AACvB,mBAAgB,eAAe,CAAC,QAAQ;AACxC,mBAAgB,gBAAgB;AAAA,IAC9B,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,kBAAkB;AAAA,IAClB,iBAAiB;AAAA,IACjB,MAAM;AAAA,IACN,OAAO;AAAA,MACL,UAAU;AAAA;AAAA,IAIZ,UAAU;AAAA,MACR,MAAM;AAAA,MACN,gBAAgB;AAAA,MAChB,UAAU;AAAA;AAAA,IAEZ,WAAW;AAAA,MACT,OAAO;AAAA,MACP,MAAM;AAAA;AAAA,IAER,UAAU;AAAA,MACR,OAAO;AAAA,MACP,WAAW;AAAA,QACT,OAAO;AAAA;AAAA;AAAA,IAWX,MAAM;AAAA,IAEN,QAAQ;AAAA,IACR,gBAAgB;AAAA,IAChB,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,YAAY;AAAA,IAKZ,eAAe;AAAA,IAEf,cAAc;AAAA,IAEd,UAAU;AAAA,IACV,iBAAiB;AAAA,IAEjB,aAAa;AAAA,IACb,qBAAqB;AAAA,IACrB,qBAAqB;AAAA,MACnB,aAAa;AAAA;AAAA,IAEf,kBAAkB;AAAA;AAEpB,SAAO;AAAA,EACP;AAEF,IAAO,qBAAQ;;;ACtHR,yBAAyB,MAAM,WAAW;AAC/C,MAAI,YAAY,KAAK,iBAAiB;AACtC,MAAI,OAAM,UAAU;AAEpB,MAAI,SAAQ,GAAG;AACb,QAAI,SAAS,iBAAiB,MAAM,WAAW,UAAU;AACzD,WAAO,UAAU,OAAO,SAAS,KAAK;AAAA,aAC7B,MAAK;AACd,QAAI,OAAO;AAEX,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,WAAK,KAAK,iBAAiB,MAAM,WAAW,UAAU;AAAA;AAGxD,WAAO,KAAK,KAAK;AAAA;AAAA;AAGd,qCAAqC,MAAM,mBAAmB;AACnE,MAAI,YAAY,KAAK,iBAAiB;AAEtC,MAAI,CAAC,QAAQ,oBAAoB;AAC/B,WAAO,oBAAoB;AAAA;AAG7B,MAAI,OAAO;AAEX,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,QAAI,WAAW,KAAK,kBAAkB,UAAU;AAEhD,QAAI,YAAY,GAAG;AACjB,WAAK,KAAK,kBAAkB;AAAA;AAAA;AAIhC,SAAO,KAAK,KAAK;AAAA;;;AC7BnB,IAAI,SAEJ,SAAU,QAAQ;AAChB,YAAU,SAAQ;AAElB,mBAAgB,MAAM,KAAK,aAAa,MAAM;AAC5C,QAAI,QAAQ,OAAO,KAAK,SAAS;AAEjC,UAAM,WAAW,MAAM,KAAK,aAAa;AAEzC,WAAO;AAAA;AAGT,UAAO,UAAU,gBAAgB,SAAU,YAAY,MAAM,KAAK,YAAY,YAAY;AAExF,SAAK;AAOL,QAAI,aAAa,aAAa,YAAY,IAAI,IAAI,GAAG,GAAG,MAAM;AAC9D,eAAW,KAAK;AAAA,MACd,IAAI;AAAA,MACJ,SAAS;AAAA,MACT,QAAQ,WAAW,KAAK;AAAA,MACxB,QAAQ,WAAW,KAAK;AAAA;AAG1B,eAAW,QAAQ;AACnB,SAAK,cAAc;AACnB,SAAK,IAAI;AAAA;AAQX,UAAO,UAAU,sBAAsB,SAAU,aAAa;AAC5D,SAAK,QAAQ,GAAG,cAAc,MAAM;AAAA;AAGtC,UAAO,UAAU,gBAAgB,WAAY;AAC3C,WAAO,KAAK;AAAA;AAad,UAAO,UAAU,gBAAgB,WAAY;AAC3C,WAAO,KAAK,QAAQ;AAAA;AAOtB,UAAO,UAAU,YAAY,WAAY;AACvC,kBAAc,KAAK,QAAQ;AAAA;AAO7B,UAAO,UAAU,WAAW,WAAY;AACtC,kBAAc,KAAK,QAAQ;AAAA;AAQ7B,UAAO,UAAU,OAAO,SAAU,QAAQ,GAAG;AAC3C,QAAI,aAAa,KAAK,QAAQ;AAC9B,eAAW,SAAS;AACpB,eAAW,IAAI;AAAA;AAGjB,UAAO,UAAU,eAAe,SAAU,WAAW;AACnD,QAAI,aAAa,KAAK,QAAQ;AAC9B,eAAW,YAAY;AACvB,eAAW,SAAS,YAAY,SAAS,WAAW;AAAA;AAOtD,UAAO,UAAU,aAAa,SAAU,MAAM,KAAK,aAAa,MAAM;AACpE,SAAK,SAAS;AACd,QAAI,aAAa,KAAK,cAAc,KAAK,aAAa;AACtD,QAAI,cAAc,KAAK;AACvB,QAAI,aAAa,QAAO,cAAc,MAAM;AAC5C,QAAI,SAAS,eAAe,KAAK;AACjC,QAAI,mBAAmB,QAAQ,KAAK;AAEpC,QAAI,QAAQ;AACV,UAAI,aAAa,KAAK,cAAc,KAAK;AAEzC,WAAK,cAAc,YAAY,MAAM,KAAK,YAAY;AAAA,WACjD;AACL,UAAI,aAAa,KAAK,QAAQ;AAC9B,iBAAW,SAAS;AACpB,UAAI,SAAS;AAAA,QACX,QAAQ,WAAW,KAAK;AAAA,QACxB,QAAQ,WAAW,KAAK;AAAA;AAE1B,yBAAmB,WAAW,KAAK,UAAU,AAAQ,YAAY,YAAY,QAAQ,aAAa;AAClG,mBAAa;AAAA;AAGf,SAAK,cAAc,MAAM,KAAK,YAAY,aAAa;AAEvD,QAAI,QAAQ;AACV,UAAI,aAAa,KAAK,QAAQ;AAE9B,UAAI,CAAC,kBAAkB;AACrB,YAAI,SAAS;AAAA,UACX,QAAQ,KAAK;AAAA,UACb,QAAQ,KAAK;AAAA,UACb,OAAO;AAAA,YAEL,SAAS,WAAW,MAAM;AAAA;AAAA;AAG9B,mBAAW,SAAS,WAAW,SAAS;AACxC,mBAAW,MAAM,UAAU;AAC3B,QAAQ,UAAU,YAAY,QAAQ,aAAa;AAAA;AAAA;AAIvD,QAAI,kBAAkB;AAEpB,WAAK,QAAQ,GAAG,cAAc;AAAA;AAGhC,SAAK,eAAe;AAAA;AAGtB,UAAO,UAAU,gBAAgB,SAAU,MAAM,KAAK,YAAY,aAAa,MAAM;AACnF,QAAI,aAAa,KAAK,QAAQ;AAC9B,QAAI,cAAc,KAAK;AACvB,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI;AAEJ,QAAI,aAAa;AACf,0BAAoB,YAAY;AAChC,sBAAgB,YAAY;AAC5B,wBAAkB,YAAY;AAC9B,cAAQ,YAAY;AACpB,kBAAY,YAAY;AACxB,0BAAoB,YAAY;AAChC,mBAAa,YAAY;AACzB,oBAAc,YAAY;AAAA;AAG5B,QAAI,CAAC,eAAe,KAAK,eAAe;AACtC,UAAI,YAAY,eAAe,YAAY,YAAY,YAAY,YAAY,KAAK,aAAa;AACjG,UAAI,gBAAgB,UAAU,SAAS;AACvC,0BAAoB,cAAc,SAAS,aAAa;AACxD,wBAAkB,UAAU,SAAS,CAAC,UAAU,cAAc;AAC9D,sBAAgB,UAAU,SAAS,CAAC,QAAQ,cAAc;AAC1D,cAAQ,cAAc,IAAI;AAC1B,kBAAY,cAAc,IAAI;AAC9B,0BAAoB,qBAAqB;AACzC,mBAAa,cAAc,WAAW;AACtC,oBAAc,UAAU,WAAW;AAAA;AAGrC,QAAI,eAAe,KAAK,cAAc,KAAK;AAC3C,eAAW,KAAK,YAAa,iBAAgB,KAAK,KAAK,KAAK,OAAO;AACnE,QAAI,eAAe,sBAAsB,KAAK,cAAc,KAAK,iBAAiB;AAElF,QAAI,cAAc;AAChB,iBAAW,IAAI,aAAa;AAC5B,iBAAW,IAAI,aAAa;AAAA;AAG9B,mBAAe,WAAW,KAAK,UAAU;AACzC,QAAI,cAAc,KAAK,cAAc,KAAK;AAC1C,QAAI,cAAc,YAAY;AAE9B,QAAI,sBAAsB,eAAS;AACjC,UAAI,YAAY,WAAW;AAC3B,iBAAW,SAAS,OAAO;AAAA,QAEzB,OAAO,UAAU;AAAA,QACjB,GAAG,UAAU;AAAA,QACb,GAAG,UAAU;AAAA,QACb,OAAO,UAAU;AAAA,QACjB,QAAQ,UAAU;AAAA,SACjB;AAAA,WACE;AACL,UAAI,WAAW,gBAAgB;AAI7B,mBAAW,SAAS,OAAO,IAAI;AAAA,aAC1B;AACL,mBAAW,SAAS;AAAA;AAItB,iBAAW,MAAM,QAAQ;AACzB,iBAAW,SAAS,aAAa,QAAQ,KAAK;AAC9C,iBAAW,MAAM,gBAAgB;AAAA;AAGnC,QAAI,QAAQ,KAAK,cAAc,KAAK;AACpC,QAAI,WAAW,KAAK;AAEpB,QAAI,SAAS,MAAM;AACjB,UAAI,YAAY,MAAM;AACpB,aAAK,MAAM,WAAW;AACtB,mBAAW,MAAM;AAAA;AAAA,eAEV,YAAY,MAAM;AAC3B,iBAAW,KAAK;AAChB,WAAK,MAAM;AAAA;AAGb,QAAI,eAAe,QAAQ,KAAK;AAChC,kBAAc,YAAY,mBAAmB;AAAA,MAC3C,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,aAAa;AAAA,MACb,cAAc;AAAA,MACd,gBAAgB,YAAY;AAAA;AAG9B,iCAA6B,MAAK;AAChC,aAAO,eAAe,KAAK,QAAQ,QAAO,gBAAgB,MAAM;AAAA;AAGlE,SAAK,SAAS,WAAW,KAAK;AAC9B,SAAK,SAAS,WAAW,KAAK;AAC9B,QAAI,gBAAgB,WAAW,YAAY;AAC3C,kBAAc,QAAQ;AACtB,eAAW,YAAY,UAAU,QAAQ;AACzC,eAAW,YAAY,QAAQ,QAAQ;AAEvC,QAAI,YAAY;AACd,UAAI,aAAa,KAAK,IAAI,KAAK,IAAI,KAAK;AACxC,oBAAc,SAAS,KAAK,SAAS;AACrC,oBAAc,SAAS,KAAK,SAAS;AAAA;AAGvC,SAAK,eAAe;AACpB,wBAAoB,MAAM,OAAO;AAAA;AAGnC,UAAO,UAAU,iBAAiB,SAAU,QAAO;AACjD,SAAK,SAAS,KAAK,SAAS;AAAA;AAG9B,UAAO,UAAU,UAAU,SAAU,IAAI,KAAK;AAC5C,QAAI,aAAa,KAAK,QAAQ;AAC9B,QAAI,cAAc,KAAK;AACvB,QAAI,YAAY,UAAU,MAAM;AAChC,QAAI,eAAe,OAAO,IAAI;AAE9B,SAAK,SAAS,WAAW,SAAS;AAElC,QAAI,OAAO,IAAI,WAAW;AACxB,UAAI,cAAc,WAAW;AAE7B,UAAI,aAAa;AACf,QAAQ,cAAc,aAAa;AAAA,UACjC,OAAO;AAAA,YACL,SAAS;AAAA;AAAA,WAEV,aAAa;AAAA,UACd;AAAA,UACA,WAAW;AAAA,UACX,IAAI,WAAY;AACd,uBAAW;AAAA;AAAA;AAAA;AAAA,WAIZ;AACL,iBAAW;AAAA;AAGb,IAAQ,cAAc,YAAY;AAAA,MAChC,OAAO;AAAA,QACL,SAAS;AAAA;AAAA,MAEX,QAAQ;AAAA,MACR,QAAQ;AAAA,OACP,aAAa;AAAA,MACd;AAAA,MACA;AAAA,MACA,WAAW;AAAA;AAAA;AAIf,UAAO,gBAAgB,SAAU,MAAM,KAAK;AAC1C,WAAO,oBAAoB,KAAK,cAAc,KAAK;AAAA;AAGrD,SAAO;AAAA,EACC;AAEV,qBAAqB,IAAI,IAAI;AAC3B,OAAK,OAAO,MAAM,IAAI;AAAA;AAGxB,IAAO,iBAAQ;;;AC1Uf,yBAAyB,MAAM,OAAO,KAAK,KAAK;AAC9C,SAAO,SAAS,CAAC,MAAM,MAAM,OAAO,CAAC,MAAM,MAAM,OAAO,CAAE,KAAI,YAAY,IAAI,SAAS,SAGpF,CAAE,KAAI,aAAa,CAAC,IAAI,UAAU,QAAQ,MAAM,IAAI,MAAM,QAAQ,KAAK,cAAc,KAAK,cAAc;AAAA;AAG7G,4BAA4B,KAAK;AAC/B,MAAI,OAAO,QAAQ,CAAC,SAAS,MAAM;AACjC,UAAM;AAAA,MACJ,UAAU;AAAA;AAAA;AAId,SAAO,OAAO;AAAA;AAGhB,yBAAyB,MAAM;AAC7B,MAAI,cAAc,KAAK;AACvB,MAAI,gBAAgB,YAAY,SAAS;AACzC,SAAO;AAAA,IACL,mBAAmB,cAAc,SAAS,aAAa;AAAA,IACvD,eAAe,YAAY,SAAS,CAAC,QAAQ,cAAc;AAAA,IAC3D,iBAAiB,YAAY,SAAS,CAAC,UAAU,cAAc;AAAA,IAC/D,OAAO,cAAc,IAAI;AAAA,IACzB,WAAW,cAAc,IAAI;AAAA,IAC7B,YAAY,cAAc,IAAI;AAAA,IAC9B,mBAAmB,qBAAqB;AAAA,IACxC,aAAa,YAAY,IAAI;AAAA;AAAA;AAIjC,IAAI,aAEJ,WAAY;AACV,uBAAoB,YAAY;AAC9B,SAAK,QAAQ,IAAY;AACzB,SAAK,cAAc,cAAc;AAAA;AAOnC,cAAW,UAAU,aAAa,SAAU,MAAM,KAAK;AACrD,UAAM,mBAAmB;AACzB,QAAI,QAAQ,KAAK;AACjB,QAAI,cAAc,KAAK;AACvB,QAAI,UAAU,KAAK;AACnB,QAAI,aAAa,KAAK;AACtB,QAAI,mBAAmB,IAAI;AAC3B,QAAI,cAAc,gBAAgB;AAClC,QAAI,kBAAkB;AAAA,MACpB;AAAA;AAGF,QAAI,iBAAiB,IAAI,kBAAkB,SAAU,KAAK;AACxD,aAAO,KAAK,cAAc;AAAA;AAK5B,QAAI,CAAC,SAAS;AACZ,YAAM;AAAA;AAGR,SAAK,KAAK,SAAS,IAAI,SAAU,QAAQ;AACvC,UAAI,QAAQ,eAAe;AAE3B,UAAI,gBAAgB,MAAM,OAAO,QAAQ,MAAM;AAC7C,YAAI,WAAW,IAAI,WAAW,MAAM,QAAQ,aAAa;AACzD,iBAAS,YAAY;AACrB,aAAK,iBAAiB,QAAQ;AAC9B,cAAM,IAAI;AAAA;AAAA,OAEX,OAAO,SAAU,QAAQ,QAAQ;AAClC,UAAI,WAAW,QAAQ,iBAAiB;AACxC,UAAI,QAAQ,eAAe;AAE3B,UAAI,CAAC,gBAAgB,MAAM,OAAO,QAAQ,MAAM;AAC9C,cAAM,OAAO;AACb;AAAA;AAGF,UAAI,gBAAgB,KAAK,cAAc,QAAQ,aAAa;AAC5D,UAAI,gBAAgB,YAAY,SAAS,iBAAiB,SAAS;AAEnE,UAAI,CAAC,YACF,iBAAiB,kBAAkB,eAAe;AACnD,cAAM,OAAO;AACb,mBAAW,IAAI,WAAW,MAAM,QAAQ,aAAa;AACrD,iBAAS,YAAY;AAAA,aAChB;AACL,iBAAS,WAAW,MAAM,QAAQ,aAAa;AAC/C,YAAI,SAAS;AAAA,UACX,GAAG,MAAM;AAAA,UACT,GAAG,MAAM;AAAA;AAEX,2BAAmB,SAAS,KAAK,UAAU,AAAQ,YAAY,UAAU,QAAQ;AAAA;AAInF,YAAM,IAAI;AACV,WAAK,iBAAiB,QAAQ;AAAA,OAC7B,OAAO,SAAU,QAAQ;AAC1B,UAAI,KAAK,QAAQ,iBAAiB;AAClC,YAAM,GAAG,QAAQ,WAAY;AAC3B,cAAM,OAAO;AAAA;AAAA,OAEd;AACH,SAAK,kBAAkB;AACvB,SAAK,QAAQ;AAAA;AAGf;AAEA,cAAW,UAAU,eAAe,WAAY;AAC9C,WAAO;AAAA;AAGT;AAEA,cAAW,UAAU,eAAe,WAAY;AAC9C,QAAI,QAAQ;AAEZ,QAAI,OAAO,KAAK;AAEhB,QAAI,MAAM;AAER,WAAK,kBAAkB,SAAU,IAAI,KAAK;AACxC,YAAI,QAAQ,MAAM,gBAAgB;AAElC,WAAG,YAAY;AACf,WAAG;AAAA;AAAA;AAAA;AAKT;AAEA,cAAW,UAAU,2BAA2B,SAAU,MAAM;AAC9D,SAAK,eAAe,gBAAgB;AACpC,SAAK,QAAQ;AACb,SAAK,MAAM;AAAA;AAGb;AAKA,cAAW,UAAU,oBAAoB,SAAU,YAAY,MAAM,KAAK;AACxE,UAAM,mBAAmB;AAEzB,uCAAmC,KAAI;AACrC,UAAI,CAAC,IAAG,SAAS;AACf,YAAG,cAAc;AACjB,YAAG,YAAY,YAAY,aAAa;AAAA;AAAA;AAI5C,aAAS,MAAM,WAAW,OAAO,MAAM,WAAW,KAAK,OAAO;AAC5D,UAAI,QAAQ,KAAK,cAAc;AAE/B,UAAI,gBAAgB,MAAM,OAAO,KAAK,MAAM;AAC1C,YAAI,KAAK,IAAI,KAAK,YAAY,MAAM,KAAK,KAAK;AAC9C,WAAG,SAAS;AACZ,WAAG,YAAY;AACf,aAAK,MAAM,IAAI;AACf,aAAK,iBAAiB,KAAK;AAAA;AAAA;AAAA;AAKjC;AAEA,cAAW,UAAU,SAAS,SAAU,iBAAiB;AACvD,QAAI,QAAQ,KAAK;AACjB,QAAI,OAAO,KAAK;AAEhB,QAAI,QAAQ,iBAAiB;AAC3B,WAAK,kBAAkB,SAAU,IAAI;AACnC,WAAG,QAAQ,WAAY;AACrB,gBAAM,OAAO;AAAA;AAAA;AAAA,WAGZ;AACL,YAAM;AAAA;AAAA;AAIV;AACA,SAAO;AAAA;AAGT,IAAO,qBAAQ;;;ACtMR,8BAA8B,UAAU,MAAM,aAAa;AAChE,MAAI,WAAW,SAAS;AACxB,MAAI,aAAY,SAAS,aAAa;AACtC,MAAI,aAAa,cAAc,YAAW;AAC1C,MAAI,cAAc,SAAS;AAC3B,MAAI,eAAe,WAAU;AAC7B,MAAI,WAAW,KAAK,aAAa;AACjC,MAAI,UAAU,KAAK,aAAa;AAChC,MAAI,iBAAiB,iBAAiB,OAAO,iBAAiB,WAAW,IAAI;AAC7E,MAAI,OAAO,IAAI,SAAS,YAAY,SAAU,UAAU;AACtD,WAAO,KAAK,aAAa;AAAA;AAE3B,MAAI,UAAU;AACd,MAAI,iBAAiB,KAAK,mBAAmB;AAE7C,MAAI,mBAAmB,MAAM,KAAK,KAE/B;AAED,cAAU;AACV,SAAK,KAAK;AAAA;AAGZ,MAAI,mBAAmB,MAAM,KAAK,KAE/B;AAED,cAAU;AACV,SAAK,KAAK;AAAA;AAGZ,SAAO;AAAA,IACL,kBAAkB;AAAA,IAClB;AAAA,IACA;AAAA,IACA;AAAA,IACA,SAAS,CAAC,CAAC;AAAA,IACX;AAAA,IACA;AAAA,IACA;AAAA,IACA,sBAAsB,KAAK,mBAAmB;AAAA;AAAA;AAIlD,uBAAuB,YAAW,aAAa;AAC7C,MAAI,aAAa;AACjB,MAAI,SAAS,WAAU,MAAM;AAE7B,MAAI,gBAAgB,SAAS;AAC3B,iBAAa,OAAO;AAAA,aACX,gBAAgB,OAAO;AAChC,iBAAa,OAAO;AAAA,SAEjB;AAED,QAAI,OAAO,KAAK,GAAG;AACjB,mBAAa,OAAO;AAAA,eAEb,OAAO,KAAK,GAAG;AACpB,mBAAa,OAAO;AAAA;AAAA;AAK5B,SAAO;AAAA;AAGF,2BAA2B,eAAe,UAAU,MAAM,KAAK;AACpE,MAAI,QAAQ;AAEZ,MAAI,cAAc,SAAS;AACzB,YAAQ,KAAK,IAAI,KAAK,mBAAmB,yBAAyB;AAAA;AAGpE,MAAI,MAAM,QAAQ;AAChB,YAAQ,cAAc;AAAA;AAGxB,MAAI,iBAAiB,cAAc;AACnC,MAAI,cAAc;AAClB,cAAY,kBAAkB,KAAK,IAAI,cAAc,SAAS;AAC9D,cAAY,IAAI,kBAAkB;AAClC,SAAO,SAAS,YAAY;AAAA;;;ACjF9B,IAAI,sBAAsB,OAAO,iBAAiB;AAClD,IAAI,mBAAmB,CAAC,sBAAsB,QAAQ;AAC/C,4BAA4B,KAAK;AACtC,MAAI,QAAQ,MAAM;AAEhB,WAAO,sBAAsB,IAAI,aAAa,OAAO;AAAA;AAIvD,SAAO,IAAI,iBAAiB;AAAA;;;ACT9B,kBAAkB,SAAS,SAAS;AAClC,MAAI,aAAa;AACjB,UAAQ,KAAK,SAAS,IAAI,SAAU,KAAK;AACvC,eAAW,KAAK;AAAA,MACd,KAAK;AAAA,MACL;AAAA;AAAA,KAED,OAAO,SAAU,QAAQ,QAAQ;AAClC,eAAW,KAAK;AAAA,MACd,KAAK;AAAA,MACL,KAAK;AAAA,MACL,MAAM;AAAA;AAAA,KAEP,OAAO,SAAU,KAAK;AACvB,eAAW,KAAK;AAAA,MACd,KAAK;AAAA,MACL;AAAA;AAAA,KAED;AACH,SAAO;AAAA;AAGM,2BAA2B,SAAS,SAAS,oBAAoB,oBAAoB,aAAa,aAAa,gBAAgB,gBAAgB;AAC5J,MAAI,QAAO,SAAS,SAAS;AAM7B,MAAI,aAAa;AACjB,MAAI,aAAa;AAEjB,MAAI,oBAAoB;AACxB,MAAI,oBAAoB;AACxB,MAAI,SAAS;AACb,MAAI,gBAAgB;AACpB,MAAI,aAAa;AACjB,MAAI,sBAAsB,qBAAqB,aAAa,SAAS;AAErE,MAAI,YAAY,QAAQ,UAAU,aAAa;AAC/C,MAAI,YAAY,QAAQ,UAAU,aAAa;AAE/C,WAAS,IAAI,GAAG,IAAI,MAAK,QAAQ,KAAK;AACpC,QAAI,WAAW,MAAK;AACpB,QAAI,aAAa;AACjB,QAAI,UAAU;AACd,QAAI,UAAU;AAGd,YAAQ,SAAS;AAAA,WACV;AACH,kBAAU,SAAS,MAAM;AACzB,kBAAU,SAAS,OAAO;AAC1B,YAAI,WAAW,UAAU;AACzB,YAAI,WAAW,UAAU,UAAU;AACnC,YAAI,QAAQ,UAAU;AACtB,YAAI,QAAQ,UAAU,UAAU;AAEhC,YAAI,MAAM,aAAa,MAAM,WAAW;AACtC,qBAAW;AACX,qBAAW;AAAA;AAGb,mBAAW,KAAK,UAAU;AAC1B,mBAAW,KAAK,OAAO;AACvB,0BAAkB,KAAK,mBAAmB,UAAU,mBAAmB,UAAU;AACjF,0BAAkB,KAAK,mBAAmB,UAAU,mBAAmB,UAAU;AACjF,mBAAW,KAAK,QAAQ,YAAY,SAAS;AAC7C;AAAA,WAEG;AACH,YAAI,SAAS,SAAS;AACtB,YAAI,sBAAsB,oBAAoB;AAC9C,YAAI,QAAQ,YAAY,YAAY,CAAC,QAAQ,IAAI,oBAAoB,IAAI,SAAS,QAAQ,IAAI,oBAAoB,IAAI;AACtH,kBAAU,SAAS;AACnB,mBAAW,KAAK,MAAM,IAAI,MAAM;AAChC,mBAAW,KAAK,UAAU,UAAU,UAAU,UAAU;AACxD,YAAI,iBAAiB,kBAAkB,qBAAqB,aAAa,SAAS;AAClF,0BAAkB,KAAK,eAAe,IAAI,eAAe;AACzD,0BAAkB,KAAK,mBAAmB,UAAU,mBAAmB,UAAU;AACjF,mBAAW,KAAK,QAAQ,YAAY;AACpC;AAAA,WAEG;AACH,qBAAa;AAAA;AAIjB,QAAI,YAAY;AACd,aAAO,KAAK;AACZ,oBAAc,KAAK,cAAc;AAAA;AAAA;AAMrC,gBAAc,KAAK,SAAU,GAAG,GAAG;AACjC,WAAO,WAAW,KAAK,WAAW;AAAA;AAEpC,MAAI,OAAM,WAAW;AACrB,MAAI,mBAAmB,mBAAmB;AAC1C,MAAI,mBAAmB,mBAAmB;AAC1C,MAAI,0BAA0B,mBAAmB;AACjD,MAAI,0BAA0B,mBAAmB;AACjD,MAAI,eAAe;AAEnB,WAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AAC7C,QAAI,MAAM,cAAc;AACxB,QAAI,KAAK,IAAI;AACb,QAAI,OAAO,MAAM;AACjB,qBAAiB,MAAM,WAAW;AAClC,qBAAiB,KAAK,KAAK,WAAW,OAAO;AAC7C,qBAAiB,MAAM,WAAW;AAClC,qBAAiB,KAAK,KAAK,WAAW,OAAO;AAC7C,4BAAwB,MAAM,kBAAkB;AAChD,4BAAwB,KAAK,KAAK,kBAAkB,OAAO;AAC3D,4BAAwB,MAAM,kBAAkB;AAChD,4BAAwB,KAAK,KAAK,kBAAkB,OAAO;AAC3D,iBAAa,KAAK,OAAO;AAAA;AAG3B,SAAO;AAAA,IACL,SAAS;AAAA,IACT,MAAM;AAAA,IACN,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,QAAQ;AAAA;AAAA;;;AC5HZ,IAAI,UAAU,KAAK;AACnB,IAAI,UAAU,KAAK;AAEnB,qBAAqB,GAAG,GAAG;AACzB,SAAO,MAAM,MAAM,MAAM;AAAA;AAS3B,qBAAqB,KAAK,QAAQ,OAAO,QAAQ,QAAQ,KAAK,QAAQ,gBAAgB,cAAc;AAClG,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,MAAM;AACV,MAAI,IAAI;AAER,SAAO,IAAI,QAAQ,KAAK;AACtB,QAAI,IAAI,OAAO,MAAM;AACrB,QAAI,IAAI,OAAO,MAAM,IAAI;AAEzB,QAAI,OAAO,UAAU,MAAM,GAAG;AAC5B;AAAA;AAGF,QAAI,YAAY,GAAG,IAAI;AACrB,UAAI,cAAc;AAChB,eAAO;AACP;AAAA;AAGF;AAAA;AAGF,QAAI,QAAQ,OAAO;AACjB,UAAI,MAAM,IAAI,WAAW,UAAU,GAAG;AACtC,aAAO;AACP,aAAO;AAAA,WACF;AACL,UAAI,KAAK,IAAI;AACb,UAAI,KAAK,IAAI;AAEb,UAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AAC3B,eAAO;AACP;AAAA;AAGF,UAAI,SAAS,GAAG;AACd,YAAI,UAAU,MAAM;AACpB,YAAI,QAAQ,OAAO,UAAU;AAC7B,YAAI,QAAQ,OAAO,UAAU,IAAI;AAEjC,eAAO,UAAU,KAAK,UAAU,KAAK,IAAI,QAAQ;AAC/C;AACA,qBAAW;AACX,iBAAO;AACP,kBAAQ,OAAO,UAAU;AACzB,kBAAQ,OAAO,UAAU,IAAI;AAC7B,cAAI,OAAO,MAAM;AACjB,cAAI,OAAO,MAAM,IAAI;AACrB,eAAK,IAAI;AACT,eAAK,IAAI;AAAA;AAGX,YAAI,OAAO,IAAI;AAEf,YAAI,cAAc;AAEhB,iBAAO,YAAY,OAAO,UAAU,OAAO,QAAQ;AACjD;AACA,uBAAW;AACX,oBAAQ,OAAO,UAAU;AACzB,oBAAQ,OAAO,UAAU,IAAI;AAAA;AAAA;AAIjC,YAAI,eAAe;AACnB,YAAI,KAAK;AACT,YAAI,KAAK;AACT,YAAI,WAAW;AACf,YAAI,WAAW;AAEf,YAAI,QAAQ,UAAU,YAAY,OAAO,QAAQ;AAC/C,iBAAO;AACP,iBAAO;AAAA,eACF;AACL,eAAK,QAAQ;AACb,eAAK,QAAQ;AACb,cAAI,MAAM,IAAI;AACd,cAAI,MAAM,QAAQ;AAClB,cAAI,MAAM,IAAI;AACd,cAAI,MAAM,QAAQ;AAClB,cAAI,aAAa;AACjB,cAAI,aAAa;AAEjB,cAAI,mBAAmB,KAAK;AAC1B,yBAAa,KAAK,IAAI;AACtB,yBAAa,KAAK,IAAI;AACtB,mBAAO,IAAI,aAAa;AACxB,mBAAO;AACP,uBAAW,IAAI,aAAa;AAC5B,uBAAW;AAAA,qBACF,mBAAmB,KAAK;AACjC,yBAAa,KAAK,IAAI;AACtB,yBAAa,KAAK,IAAI;AACtB,mBAAO;AACP,mBAAO,IAAI,aAAa;AACxB,uBAAW;AACX,uBAAW,IAAI,aAAa;AAAA,iBACvB;AACL,yBAAa,KAAK,KAAK,MAAM,MAAM,MAAM;AACzC,yBAAa,KAAK,KAAK,MAAM,MAAM,MAAM;AAEzC,2BAAe,aAAc,cAAa;AAC1C,mBAAO,IAAI,KAAK,SAAU,KAAI;AAC9B,mBAAO,IAAI,KAAK,SAAU,KAAI;AAE9B,uBAAW,IAAI,KAAK,SAAS;AAC7B,uBAAW,IAAI,KAAK,SAAS;AAG7B,uBAAW,QAAQ,UAAU,QAAQ,OAAO;AAC5C,uBAAW,QAAQ,UAAU,QAAQ,OAAO;AAC5C,uBAAW,QAAQ,UAAU,QAAQ,OAAO;AAC5C,uBAAW,QAAQ,UAAU,QAAQ,OAAO;AAE5C,iBAAK,WAAW;AAChB,iBAAK,WAAW;AAChB,mBAAO,IAAI,KAAK,aAAa;AAC7B,mBAAO,IAAI,KAAK,aAAa;AAG7B,mBAAO,QAAQ,MAAM,QAAQ,OAAO;AACpC,mBAAO,QAAQ,MAAM,QAAQ,OAAO;AACpC,mBAAO,QAAQ,MAAM,QAAQ,OAAO;AACpC,mBAAO,QAAQ,MAAM,QAAQ,OAAO;AAEpC,iBAAK,IAAI;AACT,iBAAK,IAAI;AACT,uBAAW,IAAI,KAAK,aAAa;AACjC,uBAAW,IAAI,KAAK,aAAa;AAAA;AAAA;AAIrC,YAAI,cAAc,MAAM,MAAM,MAAM,MAAM,GAAG;AAC7C,eAAO;AACP,eAAO;AAAA,aACF;AACL,YAAI,OAAO,GAAG;AAAA;AAAA;AAIlB,YAAQ;AACR,YAAQ;AACR,WAAO;AAAA;AAGT,SAAO;AAAA;AAGT,IAAI,kBAEJ,WAAY;AACV,8BAA2B;AACzB,SAAK,SAAS;AACd,SAAK,mBAAmB;AAAA;AAG1B,SAAO;AAAA;AAGT,IAAI,aAEJ,SAAU,QAAQ;AAChB,YAAU,aAAY;AAEtB,uBAAoB,MAAM;AACxB,QAAI,QAAQ,OAAO,KAAK,MAAM,SAAS;AAEvC,UAAM,OAAO;AACb,WAAO;AAAA;AAGT,cAAW,UAAU,kBAAkB,WAAY;AACjD,WAAO;AAAA,MACL,QAAQ;AAAA,MACR,MAAM;AAAA;AAAA;AAIV,cAAW,UAAU,kBAAkB,WAAY;AACjD,WAAO,IAAI;AAAA;AAGb,cAAW,UAAU,YAAY,SAAU,KAAK,OAAO;AACrD,QAAI,SAAS,MAAM;AACnB,QAAI,IAAI;AACR,QAAI,OAAM,OAAO,SAAS;AAE1B,QAAI,MAAM,cAAc;AAEtB,aAAO,OAAM,GAAG,QAAO;AACrB,YAAI,CAAC,YAAY,OAAO,OAAM,IAAI,IAAI,OAAO,OAAM,IAAI,KAAK;AAC1D;AAAA;AAAA;AAIJ,aAAO,IAAI,MAAK,KAAK;AACnB,YAAI,CAAC,YAAY,OAAO,IAAI,IAAI,OAAO,IAAI,IAAI,KAAK;AAClD;AAAA;AAAA;AAAA;AAKN,WAAO,IAAI,MAAK;AACd,WAAK,YAAY,KAAK,QAAQ,GAAG,MAAK,MAAK,GAAG,MAAM,QAAQ,MAAM,gBAAgB,MAAM,gBAAgB;AAAA;AAAA;AAI5G,cAAW,UAAU,aAAa,SAAU,MAAM,KAAK;AACrD,QAAI,CAAC,KAAK,MAAM;AACd,WAAK;AACL,WAAK,UAAU,KAAK,MAAM,KAAK;AAAA;AAGjC,QAAI,OAAO,KAAK;AAChB,QAAI,OAAO,KAAK;AAChB,QAAI,OAAM,kBAAU;AACpB,QAAI;AACJ,QAAI;AACJ,QAAI,SAAS,QAAQ;AACrB,QAAI,QAAQ;AAEZ,aAAS,IAAI,GAAG,IAAI,KAAK,UAAS;AAChC,UAAI,MAAM,KAAK;AACf,UAAI,IAAI;AACR,UAAI,IAAI;AACR,UAAI,KAAK;AACT,UAAI,KAAK;AACT,UAAI,KAAK;AACT,UAAI,KAAK;AACT,UAAI,IAAI;AAER,cAAQ;AAAA,aACD,KAAI;AACP,eAAK,KAAK;AACV,eAAK,KAAK;AACV;AAAA,aAEG,KAAI;AACP,cAAI,KAAK;AACT,cAAI,KAAK;AACT,cAAI,SAAU,QAAO,MAAO,KAAI,MAAO,QAAO,MAAO,KAAI;AAEzD,cAAI,KAAK,KAAK,KAAK,GAAG;AACpB,gBAAI,MAAM,SAAU,KAAI,MAAM,IAAI,KAAM,KAAI,MAAM,IAAI;AACtD,mBAAO,SAAS,CAAC,MAAM,OAAO,CAAC,KAAK;AAAA;AAGtC,eAAK;AACL,eAAK;AACL;AAAA,aAEG,KAAI;AACP,cAAI,KAAK;AACT,cAAI,KAAK;AACT,eAAK,KAAK;AACV,eAAK,KAAK;AACV,eAAK,KAAK;AACV,eAAK,KAAK;AACV,cAAI,QAAQ,SAAS,YAAY,IAAI,GAAG,IAAI,IAAI,MAAM,SAAS,YAAY,IAAI,GAAG,IAAI,IAAI,MAAM;AAEhG,cAAI,QAAQ,GAAG;AACb,qBAAS,MAAM,GAAG,MAAM,OAAO,OAAO;AACpC,kBAAI,MAAM,MAAM;AAEhB,kBAAI,OAAO,KAAK,OAAO,GAAG;AACxB,oBAAI,MAAM,SAAS,QAAQ,IAAI,GAAG,IAAI,IAAI,OAAO,QAAQ,IAAI,GAAG,IAAI,IAAI;AACxE,uBAAO,SAAS,CAAC,MAAM,OAAO,CAAC,KAAK;AAAA;AAAA;AAAA;AAK1C,eAAK;AACL,eAAK;AACL;AAAA;AAAA;AAAA;AAKR,SAAO;AAAA,EACP;AAIF,IAAI,iBAEJ,SAAU,QAAQ;AAChB,YAAU,iBAAgB;AAE1B,6BAA0B;AACxB,WAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAAA;AAG7D,SAAO;AAAA,EACP;AAEF,IAAI,YAEJ,SAAU,QAAQ;AAChB,YAAU,YAAW;AAErB,sBAAmB,MAAM;AACvB,QAAI,QAAQ,OAAO,KAAK,MAAM,SAAS;AAEvC,UAAM,OAAO;AACb,WAAO;AAAA;AAGT,aAAU,UAAU,kBAAkB,WAAY;AAChD,WAAO,IAAI;AAAA;AAGb,aAAU,UAAU,YAAY,SAAU,KAAK,OAAO;AACpD,QAAI,SAAS,MAAM;AACnB,QAAI,kBAAkB,MAAM;AAC5B,QAAI,IAAI;AACR,QAAI,OAAM,OAAO,SAAS;AAC1B,QAAI,iBAAiB,MAAM;AAE3B,QAAI,MAAM,cAAc;AAEtB,aAAO,OAAM,GAAG,QAAO;AACrB,YAAI,CAAC,YAAY,OAAO,OAAM,IAAI,IAAI,OAAO,OAAM,IAAI,KAAK;AAC1D;AAAA;AAAA;AAIJ,aAAO,IAAI,MAAK,KAAK;AACnB,YAAI,CAAC,YAAY,OAAO,IAAI,IAAI,OAAO,IAAI,IAAI,KAAK;AAClD;AAAA;AAAA;AAAA;AAKN,WAAO,IAAI,MAAK;AACd,UAAI,IAAI,YAAY,KAAK,QAAQ,GAAG,MAAK,MAAK,GAAG,MAAM,QAAQ,gBAAgB,MAAM;AACrF,kBAAY,KAAK,iBAAiB,IAAI,IAAI,GAAG,GAAG,MAAK,IAAI,MAAM,iBAAiB,gBAAgB,MAAM;AACtG,WAAK,IAAI;AACT,UAAI;AAAA;AAAA;AAIR,SAAO;AAAA,EACP;;;AC1WF,4BAA4B,WAAW,cAAc,aAAa,MAAM,QAAQ;AAC9E,MAAI,OAAO,UAAU;AACrB,MAAI,IAAI,KAAK;AACb,MAAI,IAAI,KAAK;AACb,MAAI,QAAQ,KAAK;AACjB,MAAI,SAAS,KAAK;AAClB,MAAI,YAAY,YAAY,IAAI,CAAC,aAAa,aAAa;AAE3D,OAAK,YAAY;AACjB,OAAK,YAAY;AACjB,WAAS;AACT,YAAU;AAEV,MAAI,KAAK,MAAM;AACf,UAAQ,KAAK,MAAM;AACnB,MAAI,WAAW,IAAY,aAAK;AAAA,IAC9B,OAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAIJ,MAAI,cAAc;AAChB,QAAI,WAAW,UAAU;AACzB,QAAI,eAAe,SAAS;AAC5B,QAAI,iBAAiB,SAAS;AAE9B,QAAI,cAAc;AAChB,UAAI,gBAAgB;AAClB,iBAAS,MAAM,KAAK;AAAA;AAGtB,eAAS,MAAM,QAAQ;AAAA,WAClB;AACL,UAAI,CAAC,gBAAgB;AACnB,iBAAS,MAAM,KAAK;AAAA;AAGtB,eAAS,MAAM,SAAS;AAAA;AAG1B,QAAI,WAAW,OAAO,WAAW,aAAa,SAAU,SAAS;AAC/D,aAAO,SAAS;AAAA,QACd;AACJ,IAAQ,UAAU,UAAU;AAAA,MAC1B,OAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAAA,OAED,aAAa,MAAM,MAAM;AAAA;AAG9B,SAAO;AAAA;AAGT,6BAA6B,OAAO,cAAc,aAAa;AAC7D,MAAI,aAAa,MAAM;AAEvB,MAAI,KAAK,MAAM,WAAW,IAAI;AAC9B,MAAI,IAAI,MAAM,WAAW,GAAG;AAC5B,MAAI,WAAW,IAAY,eAAO;AAAA,IAChC,OAAO;AAAA,MACL,IAAI,MAAM,MAAM,IAAI;AAAA,MACpB,IAAI,MAAM,MAAM,IAAI;AAAA,MACpB;AAAA,MACA;AAAA,MACA,YAAY,WAAW;AAAA,MACvB,UAAU,WAAW;AAAA,MACrB,WAAW,WAAW;AAAA;AAAA;AAI1B,MAAI,cAAc;AAChB,QAAI,WAAW,MAAM,cAAc,QAAQ;AAE3C,QAAI,UAAU;AACZ,eAAS,MAAM,WAAW,WAAW;AAAA,WAChC;AACL,eAAS,MAAM,IAAI;AAAA;AAGrB,IAAQ,UAAU,UAAU;AAAA,MAC1B,OAAO;AAAA,QACL,UAAU,WAAW;AAAA,QACrB;AAAA;AAAA,OAED;AAAA;AAGL,SAAO;AAAA;AAGT,wBAAwB,UAAU,cAAc,aAAa,MAAM,QAAQ;AACzE,MAAI,CAAC,UAAU;AACb,WAAO;AAAA,aACE,SAAS,SAAS,SAAS;AACpC,WAAO,oBAAoB,UAAU,cAAc;AAAA,aAC1C,SAAS,SAAS,eAAe;AAC1C,WAAO,mBAAmB,UAAU,cAAc,aAAa,MAAM;AAAA;AAGvE,SAAO;AAAA;;;AC5GF,gCAAgC,UAAU,MAAM;AACrD,SAAO,SAAS,SAAS;AAAA;;;ACoB3B,sBAAsB,SAAS,SAAS;AACtC,MAAI,QAAQ,WAAW,QAAQ,QAAQ;AACrC;AAAA;AAGF,WAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,QAAI,QAAQ,OAAO,QAAQ,IAAI;AAC7B;AAAA;AAAA;AAIJ,SAAO;AAAA;AAGT,wBAAwB,QAAQ;AAC9B,MAAI,OAAO;AACX,MAAI,OAAO;AACX,MAAI,OAAO;AACX,MAAI,OAAO;AAEX,WAAS,IAAI,GAAG,IAAI,OAAO,UAAS;AAClC,QAAI,IAAI,OAAO;AACf,QAAI,IAAI,OAAO;AAEf,QAAI,CAAC,MAAM,IAAI;AACb,aAAO,KAAK,IAAI,GAAG;AACnB,aAAO,KAAK,IAAI,GAAG;AAAA;AAGrB,QAAI,CAAC,MAAM,IAAI;AACb,aAAO,KAAK,IAAI,GAAG;AACnB,aAAO,KAAK,IAAI,GAAG;AAAA;AAAA;AAIvB,SAAO,CAAC,CAAC,MAAM,OAAO,CAAC,MAAM;AAAA;AAG/B,yBAAyB,SAAS,SAAS;AACzC,MAAI,KAAK,eAAe,UACpB,OAAO,GAAG,IACV,OAAO,GAAG;AAEd,MAAI,KAAK,eAAe,UACpB,OAAO,GAAG,IACV,OAAO,GAAG;AAGd,SAAO,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK;AAAA;AAGjI,mBAAmB,QAAQ;AACzB,SAAO,OAAO,WAAW,WAAW,SAAS,SAAS,MAAM;AAAA;AAG9D,4BAA4B,UAAU,MAAM,eAAe;AACzD,MAAI,CAAC,cAAc,UAAU;AAC3B,WAAO;AAAA;AAGT,MAAI,OAAM,KAAK;AACf,MAAI,SAAS,mBAAmB,OAAM;AAEtC,WAAS,MAAM,GAAG,MAAM,MAAK,OAAO;AAClC,QAAI,KAAK,kBAAkB,eAAe,UAAU,MAAM;AAC1D,WAAO,MAAM,KAAK,GAAG;AACrB,WAAO,MAAM,IAAI,KAAK,GAAG;AAAA;AAG3B,SAAO;AAAA;AAGT,4BAA4B,QAAQ,UAAU,YAAY;AACxD,MAAI,WAAW,SAAS;AACxB,MAAI,YAAY,SAAS,QAAQ,OAAO,SAAS,QAAQ,WAAW,IAAI;AACxE,MAAI,aAAa;AACjB,MAAI,IAAI;AACR,MAAI,SAAS;AACb,MAAI,KAAK;AACT,MAAI,SAAS;AAEb,SAAO,IAAI,OAAO,SAAS,GAAG,KAAK,GAAG;AACpC,WAAO,KAAK,OAAO,IAAI;AACvB,WAAO,KAAK,OAAO,IAAI;AACvB,OAAG,KAAK,OAAO;AACf,OAAG,KAAK,OAAO,IAAI;AACnB,eAAW,KAAK,GAAG,IAAI,GAAG;AAE1B,YAAQ;AAAA,WACD;AACH,eAAO,aAAa,OAAO;AAC3B,eAAO,IAAI,aAAa,GAAG,IAAI;AAC/B,mBAAW,KAAK,OAAO,IAAI,OAAO;AAClC;AAAA,WAEG;AACH,YAAI,SAAU,IAAG,aAAa,OAAO,cAAc;AACnD,YAAI,UAAU;AACd,eAAO,aAAa,QAAQ,aAAa;AACzC,eAAO,IAAI,aAAa,GAAG,IAAI;AAC/B,gBAAQ,IAAI,aAAa,OAAO,IAAI;AACpC,mBAAW,KAAK,OAAO,IAAI,OAAO;AAClC,mBAAW,KAAK,QAAQ,IAAI,QAAQ;AACpC;AAAA;AAIA,eAAO,aAAa,GAAG;AACvB,eAAO,IAAI,aAAa,OAAO,IAAI;AACnC,mBAAW,KAAK,OAAO,IAAI,OAAO;AAAA;AAAA;AAKxC,aAAW,KAAK,OAAO,MAAM,OAAO;AACpC,SAAO;AAAA;AAUT,wBAAwB,YAAY,SAAS;AAC3C,MAAI,gBAAgB;AACpB,MAAI,OAAM,WAAW;AAErB,MAAI;AACJ,MAAI;AAEJ,oBAAkB,OAAO,OAAO,cAAc;AAC5C,QAAI,SAAS,MAAM;AACnB,QAAI,IAAK,gBAAe,UAAW,OAAM,QAAQ;AACjD,QAAI,QAAQ,MAAK,GAAG,CAAC,MAAM,OAAO,MAAM;AACxC,WAAO;AAAA,MACL,OAAO;AAAA,MACP;AAAA;AAAA;AAIJ,WAAS,IAAI,GAAG,IAAI,MAAK,KAAK;AAC5B,QAAI,SAAS,WAAW;AACxB,QAAI,QAAQ,OAAO;AAEnB,QAAI,QAAQ,GAAG;AACb,gCAA0B;AAAA,eACjB,QAAQ,SAAS;AAC1B,UAAI,sBAAsB;AACxB,sBAAc,KAAK,SAAS,sBAAsB,QAAQ;AAAA,iBACjD,yBAAyB;AAElC,sBAAc,KAAK,SAAS,yBAAyB,QAAQ,IAAI,SAAS,yBAAyB,QAAQ;AAAA;AAI7G;AAAA,WACK;AACL,UAAI,yBAAyB;AAC3B,sBAAc,KAAK,SAAS,yBAAyB,QAAQ;AAE7D,kCAA0B;AAAA;AAG5B,oBAAc,KAAK;AACnB,6BAAuB;AAAA;AAAA;AAI3B,SAAO;AAAA;AAGT,2BAA2B,MAAM,UAAU,KAAK;AAC9C,MAAI,iBAAiB,KAAK,UAAU;AAEpC,MAAI,CAAC,kBAAkB,CAAC,eAAe,UAAU,CAAC,KAAK,SAAS;AAE9D;AAAA;AAGF,MAAI,SAAS,SAAS,eAAe;AACnC,QAAI,MAAuC;AACzC,cAAQ,KAAK;AAAA;AAGf;AAAA;AAGF,MAAI;AACJ,MAAI;AAEJ,WAAS,IAAI,eAAe,SAAS,GAAG,KAAK,GAAG,KAAK;AACnD,QAAI,UAAU,KAAK,iBAAiB,eAAe,GAAG;AACtD,eAAW,WAAW,QAAQ;AAE9B,QAAI,aAAa,OAAO,aAAa,KAAK;AACxC,mBAAa,eAAe;AAC5B;AAAA;AAAA;AAIJ,MAAI,CAAC,YAAY;AACf,QAAI,MAAuC;AACzC,cAAQ,KAAK;AAAA;AAGf;AAAA;AASF,MAAI,OAAO,SAAS,QAAQ;AAE5B,MAAI,aAAa,AAAO,IAAI,WAAW,OAAO,SAAU,OAAM;AAE5D,WAAO;AAAA,MACL,OAAO,KAAK,cAAc,KAAK,YAAY,MAAK;AAAA,MAChD,OAAO,MAAK;AAAA;AAAA;AAGhB,MAAI,UAAU,WAAW;AACzB,MAAI,cAAc,WAAW,YAAY;AAEzC,MAAI,WAAW,WAAW,GAAG,QAAQ,WAAW,UAAU,GAAG,OAAO;AAClE,eAAW;AACX,gBAAY;AAAA;AAGd,MAAI,oBAAoB,eAAe,YAAY,aAAa,MAAM,IAAI,aAAa,IAAI;AAC3F,MAAI,iBAAiB,kBAAkB;AAEvC,MAAI,CAAC,kBAAkB,SAAS;AAE9B,WAAO,WAAW,GAAG,QAAQ,IAAI,YAAY,KAAK,YAAY,KAAK,WAAW,UAAU,GAAG,QAAQ,YAAY,KAAK,YAAY,KAAK,WAAW,GAAG;AAAA;AAGrJ,MAAI,aAAa;AAEjB,MAAI,WAAW,kBAAkB,GAAG,QAAQ;AAC5C,MAAI,WAAW,kBAAkB,iBAAiB,GAAG,QAAQ;AAC7D,MAAI,YAAY,WAAW;AAE3B,MAAI,YAAY,MAAM;AACpB,WAAO;AAAA;AAGT,EAAO,KAAK,mBAAmB,SAAU,OAAM;AAC7C,UAAK,SAAU,OAAK,QAAQ,YAAY;AAAA;AAE1C,oBAAkB,KAAK;AAAA,IAErB,QAAQ,iBAAiB,kBAAkB,iBAAiB,GAAG,SAAS;AAAA,IACxE,OAAO,YAAY,MAAM;AAAA;AAE3B,oBAAkB,QAAQ;AAAA,IACxB,QAAQ,iBAAiB,kBAAkB,GAAG,SAAS;AAAA,IACvD,OAAO,YAAY,MAAM;AAAA;AAE3B,MAAI,WAAW,IAAY,uBAAe,GAAG,GAAG,GAAG,GAAG,mBAAmB;AACzE,WAAS,YAAY;AACrB,WAAS,WAAW,OAAO;AAC3B,SAAO;AAAA;AAGT,yBAAyB,aAAa,MAAM,UAAU;AACpD,MAAI,gBAAgB,YAAY,IAAI;AACpC,MAAI,SAAS,kBAAkB;AAE/B,MAAI,iBAAiB,CAAC,QAAQ;AAC5B;AAAA;AAGF,MAAI,gBAAe,SAAS,eAAe,WAAW;AAEtD,MAAI,CAAC,eAAc;AACjB;AAAA;AAMF,MAAI,UACD,4BAA4B,eAAc,OAAO;AAClD;AAAA;AAIF,MAAI,kBAAkB,KAAK,aAAa,cAAa;AACrD,MAAI,WAAW;AACf,EAAO,KAAK,cAAa,iBAAiB,SAAU,WAAW;AAC7D,QAAI,gBAAgB,cAAa,MAAM,oBAAoB,UAAU;AACrE,aAAS,iBAAiB;AAAA;AAE5B,SAAO,SAAU,WAAW;AAC1B,WAAO,CAAC,SAAS,eAAe,KAAK,IAAI,iBAAiB;AAAA;AAAA;AAI9D,qCAAqC,eAAc,MAAM;AAKvD,MAAI,aAAa,cAAa;AAC9B,MAAI,YAAY,KAAK,IAAI,WAAW,KAAK,WAAW,MAAM,cAAa,MAAM;AAC7E,QAAM,cAAe,aAAY;AAGjC,MAAI,UAAU,KAAK;AACnB,MAAI,OAAO,KAAK,IAAI,GAAG,KAAK,MAAM,UAAU;AAE5C,WAAS,YAAY,GAAG,YAAY,SAAS,aAAa,MAAM;AAC9D,QAAI,eAAU,cAAc,MAAM,WAChC,cAAa,iBAAiB,IAAI,KAClC,MAAM,WAAW;AACjB,aAAO;AAAA;AAAA;AAIX,SAAO;AAAA;AAGT,sBAAqB,GAAG,GAAG;AACzB,SAAO,MAAM,MAAM,MAAM;AAAA;AAG3B,6BAA6B,QAAQ;AACnC,MAAI,OAAM,OAAO,SAAS;AAE1B,SAAO,OAAM,GAAG,QAAO;AACrB,QAAI,CAAC,aAAY,OAAO,OAAM,IAAI,IAAI,OAAO,OAAM,IAAI,KAAK;AAC1D;AAAA;AAAA;AAIJ,SAAO,OAAM;AAAA;AAGf,yBAAyB,QAAQ,KAAK;AACpC,SAAO,CAAC,OAAO,MAAM,IAAI,OAAO,MAAM,IAAI;AAAA;AAG5C,uBAAuB,QAAQ,MAAM,KAAK;AACxC,MAAI,OAAM,OAAO,SAAS;AAC1B,MAAI,SAAS,QAAQ,MAAM,IAAI;AAC/B,MAAI;AACJ,MAAI;AACJ,MAAI,YAAY;AAChB,MAAI,YAAY;AAEhB,WAAS,IAAI,GAAG,IAAI,MAAK,KAAK;AAC5B,QAAI,OAAO,IAAI,IAAI;AAEnB,QAAI,MAAM,MAAM,MAAM,OAAO,IAAI,IAAI,IAAI,UAAU;AACjD;AAAA;AAGF,QAAI,MAAM,GAAG;AACX,UAAI;AACJ;AAAA;AAGF,QAAI,KAAK,QAAQ,KAAK,QAAQ,KAAK,QAAQ,KAAK,MAAM;AACpD,kBAAY;AACZ;AAAA;AAGF,gBAAY;AACZ,QAAI;AAAA;AAGN,SAAO;AAAA,IACL,OAAO,CAAC,WAAW;AAAA,IACnB,GAAI,QAAO,KAAM,KAAI;AAAA;AAAA;AAIzB,8BAA8B,aAAa;AACzC,MAAI,YAAY,IAAI,CAAC,YAAY,UAAU;AACzC,WAAO;AAAA;AAGT,WAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK;AAC9C,QAAI,YAAY,IAAI,CAAC,eAAe,IAAI,YAAY,UAAU;AAC5D,aAAO;AAAA;AAAA;AAIX,SAAO;AAAA;AAGT,4BAA4B,UAAU,UAAU,cAAc,aAAa;AACzE,MAAI,uBAAuB,UAAU,gBAAgB;AACnD,QAAI,kBAAkB,YAAY,SAAS;AAC3C,QAAI,mBAAmB,gBAAgB,IAAI;AAC3C,QAAI,SAAS,YAAY;AACzB,QAAI,yBAAyB;AAAA,MAC3B,gBAAgB;AAAA;AAElB,QAAI,SAAS,qBAAqB,eAAe,SAAU,SAAS,UAAU;AAC5E,eAAS,kBAAkB,SAAS,UAAU,QAAQ,wBAAwB,kBAAkB,iBAAiB;AAAA,QAC/G;AACJ,QAAI,eAAe,SAAS,cAAc;AAC1C,QAAI,WAAW,mBAAmB,UAAU,cAAc,aAAa,WAAY;AACjF,UAAI,WAAW,SAAS;AAExB,UAAI,YAAY,cAAc;AAC5B,YAAI,uBAAuB,aAAa,MAAM;AAC5C,mBAAS,KAAK;AAAA,YACZ,GAAG,uBAAuB;AAAA,YAC1B,GAAG,uBAAuB;AAAA;AAAA;AAAA;AAAA,OAI/B;AAEH,QAAI,CAAC,YAAY,IAAI,QAAQ,OAAO;AAClC,UAAI,YAAY,SAAS;AACzB,UAAI,aAAa,KAAK,IAAI,UAAU,OAAO,UAAU;AAErD,UAAI,cAAc;AAChB,kBAAU,KAAK;AACf,kBAAU,UAAU,aAAa;AAAA,aAC5B;AACL,kBAAU,KAAK;AACf,kBAAU,SAAS,aAAa;AAAA;AAAA;AAKpC,QAAI,QAAQ;AACV,aAAO,GAAG;AAAA;AAGZ,WAAO;AAAA,SACF;AACL,QAAI,MAAuC;AACzC,UAAI,YAAY,IAAI,CAAC,YAAY,UAAU;AACzC,gBAAQ,KAAK;AAAA;AAAA;AAIjB,WAAO,oBAAoB,UAAU,cAAc;AAAA;AAAA;AAIvD,mCAAmC,eAAe,UAAU;AAC1D,MAAI,WAAW,SAAS;AACxB,MAAI,eAAe,SAAS;AAC5B,MAAI,iBAAiB,SAAS;AAC9B,MAAI,QAAQ,eAAe,iBAAiB,UAAU,SAAS;AAC/D,MAAI,gBAAgB,eAAe,WAAW,iBAAiB,QAAQ;AACvE,SAAO;AAAA,IACL,QAAQ;AAAA,MACN,OAAO,cAAc,IAAI,YAAY;AAAA,MACrC,eAAe,cAAc,IAAI,oBAAoB;AAAA;AAAA;AAAA;AAK3D,IAAI,WAEJ,SAAU,QAAQ;AAChB,YAAU,WAAU;AAEpB,uBAAoB;AAClB,WAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAAA;AAG7D,YAAS,UAAU,OAAO,WAAY;AACpC,QAAI,YAAY,IAAY;AAC5B,QAAI,aAAa,IAAI;AACrB,SAAK,MAAM,IAAI,WAAW;AAC1B,SAAK,cAAc;AACnB,SAAK,aAAa;AAAA;AAGpB,YAAS,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK;AAC/D,QAAI,QAAQ;AAEZ,QAAI,WAAW,YAAY;AAC3B,QAAI,QAAQ,KAAK;AACjB,QAAI,OAAO,YAAY;AACvB,QAAI,iBAAiB,YAAY,SAAS;AAC1C,QAAI,iBAAiB,YAAY,SAAS;AAC1C,QAAI,SAAS,KAAK,UAAU,aAAa;AACzC,QAAI,kBAAkB,SAAS,SAAS;AACxC,QAAI,eAAe,KAAK;AACxB,QAAI,aAAa,KAAK;AACtB,QAAI,WAAW,KAAK;AACpB,QAAI,UAAU,KAAK;AACnB,QAAI,YAAY,KAAK;AACrB,QAAI,eAAe,YAAY,IAAI;AACnC,QAAI,cAAc,CAAC,eAAe;AAClC,QAAI,cAAc,eAAe,IAAI;AACrC,QAAI,gBAAgB,qBAAqB,UAAU,MAAM;AACzD,QAAI,kBAAkB,eAAe,mBAAmB,UAAU,MAAM;AACxE,QAAI,aAAa,YAAY,IAAI;AACjC,QAAI,eAAe,cAAc,CAAC,mBAAmB,gBAAgB,aAAa,MAAM;AAExF,QAAI,UAAU,KAAK;AACnB,eAAW,QAAQ,kBAAkB,SAAU,IAAI,KAAK;AACtD,UAAI,GAAG,QAAQ;AACb,cAAM,OAAO;AACb,gBAAQ,iBAAiB,KAAK;AAAA;AAAA;AAIlC,QAAI,CAAC,YAAY;AACf,iBAAW;AAAA;AAGb,UAAM,IAAI;AAEV,QAAI,OAAO,CAAC,kBAAkB,YAAY,IAAI,UAAU;AACxD,QAAI;AAEJ,QAAI,YAAY,SAAS,WAAW,YAAY,IAAI,QAAQ,OAAO;AACjE,2BAAqB,SAAS;AAG9B,UAAI,mBAAmB,SAAS,MAAM;AACpC,2BAAmB,KAAK;AACxB,2BAAmB,KAAK;AACxB,2BAAmB,SAAS;AAC5B,2BAAmB,UAAU;AAAA,iBACpB,mBAAmB,IAAI;AAChC,2BAAmB,MAAM;AACzB,2BAAmB,KAAK;AAAA;AAAA;AAI5B,SAAK,sBAAsB;AAC3B,QAAI,cAAc,kBAAkB,MAAM,UAAU,QAAQ,KAAK,UAAU,SAAS,KAAK,UAAU;AAEnG,QAAI,CAAE,aAAY,aAAa,SAAS,SAAS,QAAQ,SAAS,KAAK,QAAQ;AAC7E,oBAAc,WAAW,WAAW,MAAM;AAAA,QACxC,UAAU;AAAA,QACV,WAAW;AAAA,QACX,kBAAkB;AAAA,QAClB,gBAAgB,SAAU,KAAK;AAC7B,iBAAO,CAAC,OAAO,MAAM,IAAI,OAAO,MAAM,IAAI;AAAA;AAAA;AAG9C,sBAAgB,KAAK,0BAA0B,MAAM,UAAU;AAE/D,UAAI,MAAM;AAER,iBAAS,mBAAmB,QAAQ,UAAU;AAE9C,YAAI,iBAAiB;AACnB,4BAAkB,mBAAmB,iBAAiB,UAAU;AAAA;AAAA;AAIpE,iBAAW,KAAK,aAAa;AAE7B,UAAI,aAAa;AACf,kBAAU,KAAK,YAAY,QAAQ;AAAA;AAIrC,UAAI,CAAC,iBAAiB;AACpB,aAAK,sBAAsB,aAAa,UAAU,qBAAqB;AAAA;AAGzE,gBAAU,YAAY,mBAAmB,MAAM,UAAU,MAAM;AAAA,WAC1D;AACL,UAAI,eAAe,CAAC,SAAS;AAE3B,kBAAU,KAAK,YAAY,QAAQ;AAAA,iBAC1B,WAAW,CAAC,aAAa;AAElC,kBAAU,OAAO;AACjB,kBAAU,KAAK,WAAW;AAAA;AAI5B,UAAI,CAAC,iBAAiB;AACpB,aAAK,sBAAsB,aAAa,UAAU,qBAAqB;AAAA;AAIzE,UAAI,cAAc,UAAU;AAE5B,UAAI,aAAa;AACf,YAAI,cAAc,mBAAmB,MAAM,UAAU,OAAO;AAC5D,QAAQ,UAAU,aAAa;AAAA,UAC7B,OAAO,YAAY;AAAA,WAClB;AAAA,aACE;AACL,kBAAU,YAAY,mBAAmB,MAAM,UAAU,MAAM;AAAA;AAKjE,oBAAc,WAAW,WAAW,MAAM;AAAA,QACxC,UAAU;AAAA,QACV,WAAW;AAAA,QACX,kBAAkB;AAAA,QAClB,gBAAgB,SAAU,KAAK;AAC7B,iBAAO,CAAC,OAAO,MAAM,IAAI,OAAO,MAAM,IAAI;AAAA;AAAA;AAK9C,UAAI,CAAC,aAAa,KAAK,kBAAkB,oBAAoB,CAAC,aAAa,KAAK,SAAS,SAAS;AAChG,YAAI,cAAc;AAChB,eAAK,mBAAmB,MAAM,iBAAiB,UAAU,KAAK,MAAM;AAAA,eAC/D;AAEL,cAAI,MAAM;AAER,qBAAS,mBAAmB,QAAQ,UAAU;AAE9C,gBAAI,iBAAiB;AACnB,gCAAkB,mBAAmB,iBAAiB,UAAU;AAAA;AAAA;AAIpE,mBAAS,SAAS;AAAA,YAChB;AAAA;AAEF,qBAAW,QAAQ,SAAS;AAAA,YAC1B;AAAA,YACA;AAAA;AAAA;AAAA;AAAA;AAMR,QAAI,QAAQ,YAAY,IAAI,CAAC,YAAY;AACzC,QAAI,YAAY,YAAY,IAAI,CAAC,YAAY;AAC7C,aAAS,SAAS,AAAO,SACzB,eAAe,gBAAgB;AAAA,MAC7B,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,UAAU;AAAA;AAEZ,6BAAyB,UAAU,aAAa;AAEhD,QAAI,SAAS,MAAM,YAAY,KAAK,YAAY,IAAI,CAAC,YAAY,aAAa,cAAc,UAAU;AACpG,UAAI,oBAAoB,SAAS,SAAS,YAAY;AACtD,wBAAkB,YAAY,CAAC,SAAS,MAAM,YAAY;AAAA;AAI5D,cAAU,UAAU,cAAc,YAAY;AAC9C,wBAAoB,UAAU,OAAO;AACrC,QAAI,SAAS,UAAU,YAAY,IAAI;AACvC,QAAI,iBAAiB,YAAY,IAAI;AACrC,QAAI,eAAe,YAAY,IAAI;AACnC,aAAS,SAAS;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA;AAGF,QAAI,SAAS;AACX,UAAI,kBAAkB,KAAK,mBAAmB;AAC9C,UAAI,kBAAkB;AACtB,cAAQ,SAAS,AAAO,SAAS,eAAe,gBAAgB;AAAA,QAC9D,MAAM;AAAA,QACN,SAAS;AAAA,QACT,UAAU;AAAA,QACV,OAAO,KAAK,UAAU,SAAS;AAAA;AAGjC,UAAI,iBAAiB;AACnB,0BAAkB,UAAU,gBAAgB,IAAI;AAAA;AAGlD,cAAQ,SAAS;AAAA,QACf;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAEF,+BAAyB,SAAS,aAAa;AAE/C,gBAAU,SAAS,cAAc,YAAY;AAC7C,0BAAoB,SAAS,OAAO;AAAA;AAGtC,QAAI,kBAAkB,SAAU,SAAS;AACvC,YAAM,iBAAiB;AAAA;AAGzB,SAAK,kBAAkB,SAAU,IAAI;AAEnC,YAAO,IAAG,qBAAqB;AAAA;AAEjC,SAAK,UAAU,qBAAqB;AACpC,SAAK,QAAQ;AAEb,SAAK,YAAY;AACjB,SAAK,mBAAmB;AACxB,SAAK,UAAU;AACf,SAAK,QAAQ;AACb,SAAK,eAAe;AAEpB,QAAI,YAAY,IAAI,qBAAqB;AACvC,WAAK,cAAc,aAAa;AAChC,iBAAW,KAAK,cAAc,aAAa;AAAA;AAAA;AAI/C,YAAS,UAAU,gBAAgB,SAAU,aAAa,IAAI;AAC5D,cAAU,IAAI,YAAY;AAAA,MACxB,eAAe;AAAA,MACf,kBAAkB;AAAA,MAClB,gBAAgB,YAAY;AAAA,MAC5B,aAAa,YAAY;AAAA,MACzB,YAAY,YAAY;AAAA,MACxB,YAAY;AAAA;AAAA;AAIhB,YAAS,UAAU,YAAY,SAAU,aAAa,SAAS,KAAK,SAAS;AAC3E,QAAI,OAAO,YAAY;AACvB,QAAI,YAAY,AAAU,eAAe,MAAM;AAE/C,SAAK,iBAAiB;AAEtB,QAAI,CAAE,sBAAqB,UAAU,aAAa,QAAQ,aAAa,GAAG;AACxE,UAAI,SAAS,KAAK,UAAU;AAC5B,UAAI,SAAS,KAAK,iBAAiB;AAEnC,UAAI,CAAC,QAAQ;AAEX,YAAI,IAAI,OAAO,YAAY;AAC3B,YAAI,IAAI,OAAO,YAAY,IAAI;AAE/B,YAAI,MAAM,MAAM,MAAM,IAAI;AAExB;AAAA;AAIF,YAAI,KAAK,uBAAuB,CAAC,KAAK,oBAAoB,QAAQ,GAAG,IAAI;AACvE;AAAA;AAGF,YAAI,SAAS,YAAY,IAAI;AAC7B,YAAI,IAAI,YAAY,IAAI;AACxB,iBAAS,IAAI,eAAU,MAAM;AAC7B,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,KAAK,QAAQ;AAEpB,YAAI,cAAc,OAAO,gBAAgB;AAEzC,YAAI,aAAa;AACf,sBAAY,SAAS;AACrB,sBAAY,IAAI;AAChB,sBAAY,KAAK,KAAK,UAAU,KAAK;AAAA;AAGvC,eAAO,SAAS;AAChB,aAAK,iBAAiB,WAAW;AAEjC,eAAO,oBAAoB;AAC3B,aAAK,MAAM,IAAI;AAAA;AAGjB,aAAO;AAAA,WACF;AAEL,oBAAU,UAAU,UAAU,KAAK,MAAM,aAAa,SAAS,KAAK;AAAA;AAAA;AAIxE,YAAS,UAAU,WAAW,SAAU,aAAa,SAAS,KAAK,SAAS;AAC1E,QAAI,OAAO,YAAY;AACvB,QAAI,YAAY,AAAU,eAAe,MAAM;AAE/C,SAAK,iBAAiB;AAEtB,QAAI,aAAa,QAAQ,aAAa,GAAG;AACvC,UAAI,SAAS,KAAK,iBAAiB;AAEnC,UAAI,QAAQ;AACV,YAAI,OAAO,QAAQ;AACjB,eAAK,iBAAiB,WAAW;AACjC,eAAK,MAAM,OAAO;AAAA,eACb;AACL,iBAAO;AAAA;AAAA;AAAA,WAGN;AAIL,oBAAU,UAAU,SAAS,KAAK,MAAM,aAAa,SAAS,KAAK;AAAA;AAAA;AAIvE,YAAS,UAAU,mBAAmB,SAAU,SAAS;AACvD,QAAI,UAAU,KAAK;AACnB,kBAAc,KAAK,WAAW;AAC9B,eAAW,cAAc,SAAS;AAAA;AAGpC,YAAS,UAAU,eAAe,SAAU,QAAQ;AAClD,QAAI,WAAW,KAAK;AAEpB,QAAI,UAAU;AACZ,WAAK,WAAW,OAAO;AAAA;AAGzB,eAAW,IAAI,WAAW;AAAA,MACxB,OAAO;AAAA,QACL;AAAA;AAAA,MAEF,wBAAwB;AAAA,MACxB,IAAI;AAAA;AAGN,SAAK,WAAW,IAAI;AAEpB,SAAK,YAAY;AACjB,WAAO;AAAA;AAGT,YAAS,UAAU,cAAc,SAAU,QAAQ,iBAAiB;AAClE,QAAI,UAAU,KAAK;AAEnB,QAAI,SAAS;AACX,WAAK,WAAW,OAAO;AAAA;AAGzB,cAAU,IAAI,UAAU;AAAA,MACtB,OAAO;AAAA,QACL;AAAA,QACA;AAAA;AAAA,MAEF,wBAAwB;AAAA;AAG1B,SAAK,WAAW,IAAI;AAEpB,SAAK,WAAW;AAChB,WAAO;AAAA;AAGT,YAAS,UAAU,4BAA4B,SAAU,MAAM,UAAU,WAAW;AAClF,QAAI;AACJ,QAAI;AACJ,QAAI,WAAW,SAAS;AACxB,QAAI,gBAAgB,SAAS;AAE7B,QAAI,SAAS,SAAS,eAAe;AACnC,6BAAuB,SAAS;AAChC,wBAAkB;AAAA,eACT,SAAS,SAAS,SAAS;AACpC,6BAAuB,SAAS,QAAQ;AACxC,wBAAkB;AAAA;AAGpB,QAAI,cAAc,KAAK;AACvB,QAAI,iBAAiB,YAAY,IAAI;AAErC,QAAI,OAAO,mBAAmB,YAAY;AACxC,uBAAiB,eAAe;AAAA;AAGlC,QAAI,cAAc,YAAY,IAAI,qBAAqB;AACvD,QAAI,mBAAmB,OAAO,gBAAgB,aAAa,YAAY,QAAQ;AAC/E,SAAK,kBAAkB,SAAU,QAAQ,KAAK;AAC5C,UAAI,KAAK;AAET,UAAI,IAAI;AACN,YAAI,QAAQ,CAAC,OAAO,GAAG,OAAO;AAC9B,YAAI,QAAQ;AACZ,YAAI,MAAM;AACV,YAAI,UAAU;AAEd,YAAI,WAAW;AACb,cAAI,iBAAiB;AACnB,gBAAI,YAAY;AAChB,gBAAI,QAAQ,SAAS,aAAa;AAElC,gBAAI,sBAAsB;AACxB,sBAAQ,UAAU;AAClB,oBAAM,UAAU;AAChB,wBAAU,CAAC,MAAM,KAAK,MAAM,KAAK;AAAA,mBAC5B;AACL,sBAAQ,UAAU;AAClB,oBAAM,UAAU;AAChB,wBAAU,MAAM;AAAA;AAAA,iBAEb;AACL,gBAAI,WAAW;AAEf,gBAAI,sBAAsB;AACxB,sBAAQ,SAAS;AACjB,oBAAM,SAAS,IAAI,SAAS;AAC5B,wBAAU,OAAO;AAAA,mBACZ;AACL,sBAAQ,SAAS,IAAI,SAAS;AAC9B,oBAAM,SAAS;AACf,wBAAU,OAAO;AAAA;AAAA;AAAA;AAKvB,YAAI,QAAQ,QAAQ,QAAQ,IAAK,WAAU,SAAU,OAAM;AAE3D,YAAI,eAAe;AACjB,kBAAQ,IAAI;AAAA;AAGd,YAAI,QAAQ,OAAO,gBAAgB,aAAa,YAAY,OAAO,iBAAiB,QAAQ;AAC5F,YAAI,aAAa,GAAG;AACpB,YAAI,OAAO,WAAW;AACtB,WAAG,KAAK;AAAA,UACN,QAAQ;AAAA,UACR,QAAQ;AAAA;AAEV,WAAG,UAAU;AAAA,UACX,QAAQ;AAAA,UACR,QAAQ;AAAA,WACP;AAAA,UACD,UAAU;AAAA,UACV,YAAY;AAAA,UACZ;AAAA;AAGF,YAAI,MAAM;AACR,eAAK,YAAY;AAAA,YACf,OAAO;AAAA,cACL,SAAS;AAAA;AAAA,aAEV;AAAA,YACD,UAAU;AAAA,YACV;AAAA;AAAA;AAIJ,mBAAW,wBAAwB;AAAA;AAAA;AAAA;AAKzC,YAAS,UAAU,wBAAwB,SAAU,aAAa,UAAU,cAAc;AACxF,QAAI,gBAAgB,YAAY,SAAS;AAEzC,QAAI,qBAAqB,cAAc;AACrC,UAAI,SAAS,YAAY;AACzB,UAAI,WAAW,KAAK;AACpB,UAAI,WAAW,KAAK;AAEpB,UAAI,CAAC,UAAU;AACb,mBAAW,KAAK,YAAY,IAAY,aAAK;AAAA,UAC3C,IAAI;AAAA;AAGN,iBAAS,aAAa;AACtB,iBAAS,eAAe,KAAK;AAC7B,iBAAS,wBAAwB;AAAA;AAInC,UAAI,YAAY,oBAAoB,OAAO,UAAU;AAErD,UAAI,aAAa,GAAG;AAClB,sBAAc,UAAU,qBAAqB,aAAa,aAAa;AAAA,UACrE;AAAA,UACA,cAAc;AAAA,UACd,gBAAgB;AAAA,UAChB,aAAa,SAAU,YAAW,KAAK,mBAAmB;AACxD,mBAAO,qBAAqB,OAAO,4BAA4B,QAAQ,qBAAqB,gBAAgB,QAAQ;AAAA;AAAA,UAEtH,kBAAkB;AAAA,WACjB,0BAA0B,eAAe;AAC5C,iBAAS,WAAW,WAAW;AAAA;AAAA,eAExB,KAAK,WAAW;AACzB,WAAK,UAAU;AAEf,WAAK,YAAY;AAAA;AAAA;AAIrB,YAAS,UAAU,oBAAoB,SAAU,SAAS,UAAU,MAAM,iBAAiB,gBAAgB,eAAe,UAAU;AAClI,QAAI,WAAW,KAAK;AACpB,QAAI,WAAW,KAAK;AAEpB,QAAI,UAAU;AAGZ,UAAI,UAAU,KAAK,gBAAgB,aAAa,MAAM;AACpD,wBAAgB,YAAY,SAAS;AACrC,wBAAgB,YAAY,SAAS;AAAA;AAGvC,UAAI,SAAS,KAAK,UAAU;AAC5B,UAAI,cAAc,KAAK;AACvB,UAAI,eAAe,YAAY,IAAI;AACnC,UAAI,YAAY,cAAc,IAAI;AAClC,UAAI,WAAW,cAAc,IAAI,eAAe;AAChD,UAAI,WAAW,SAAS;AACxB,UAAI,eAAe,SAAS;AAC5B,UAAI,iBAAiB,SAAS;AAC9B,UAAI,YAAY,SAAS;AACzB,UAAI,OAAO,iBAAiB,eAAe,UAAU,IAAI,UAAU,IAAI,UAAU,SAAS,eAAe,UAAU,IAAI,UAAU,QAAQ,UAAU;AACnJ,UAAI,YAAa,gBAAe,WAAW,KAAM,kBAAiB,KAAK;AACvE,UAAI,YAAa,gBAAe,IAAI,CAAC,YAAa,kBAAiB,KAAK;AACxE,UAAI,MAAM,eAAe,MAAM;AAC/B,UAAI,iBAAiB,cAAc,QAAQ,MAAM;AACjD,UAAI,UAAU,eAAe;AAC7B,UAAI,QAAO,QAAQ,KAAK,QAAQ;AAChC,UAAI,QAAQ;AAEZ,UAAI,SAAQ,GAAG;AAEb,YAAI,QAAO,KAAK,CAAC,cAAc;AAC7B,cAAI,KAAK,gBAAgB,QAAQ,QAAQ;AACzC,mBAAS,KAAK;AAAA,YACZ,GAAG,GAAG,KAAK;AAAA,YACX,GAAG,GAAG,KAAK;AAAA;AAEb,4BAAmB,SAAQ,YAAY,YAAY,QAAQ;AAAA,eACtD;AACL,cAAI,KAAK,SAAS,WAAW,MAAM;AACnC,gBAAM,SAAS,KAAK;AAAA,YAClB,GAAG,GAAG,KAAK;AAAA,YACX,GAAG,GAAG,KAAK;AAAA;AAEb,cAAI,aAAa,YAAY,YAAY,QAAQ;AACjD,cAAI,WAAW,YAAY,YAAY,QAAQ;AAC/C,4BAAmB,SAAQ,AAAU,qBAAqB,MAAM,WAAW,YAAY,UAAU,eAAe;AAAA;AAGlH,wBAAgB,iBAAiB,QAAQ;AAAA,aACpC;AAGL,YAAI,MAAM,YAAY,KAAK,gBAAgB,iBAAiB,IAAI,QAAQ,KAAK;AAC7E,YAAI,KAAK,gBAAgB,QAAQ;AACjC,0BAAmB,SAAQ,YAAY,YAAY;AACnD,iBAAS,KAAK;AAAA,UACZ,GAAG,GAAG,KAAK;AAAA,UACX,GAAG,GAAG,KAAK;AAAA;AAAA;AAIf,UAAI,gBAAgB;AAClB,mBAAW,UAAU,aAAa;AAAA;AAAA;AAAA;AAUxC,YAAS,UAAU,qBAAqB,SAAU,MAAM,iBAAiB,UAAU,KAAK,MAAM,aAAa;AACzG,QAAI,WAAW,KAAK;AACpB,QAAI,UAAU,KAAK;AACnB,QAAI,cAAc,KAAK;AACvB,QAAI,QAAO,kBAAkB,KAAK,OAAO,MAAM,KAAK,kBAAkB,iBAAiB,KAAK,WAAW,UAAU,KAAK,cAAc;AACpI,QAAI,UAAU,MAAK;AACnB,QAAI,mBAAmB,MAAK;AAC5B,QAAI,OAAO,MAAK;AAChB,QAAI,gBAAgB,MAAK;AAEzB,QAAI,MAAM;AAER,gBAAU,mBAAmB,MAAK,SAAS,UAAU;AACrD,yBAAmB,mBAAmB,MAAK,kBAAkB,UAAU;AACvE,aAAO,mBAAmB,MAAK,MAAM,UAAU;AAC/C,sBAAgB,mBAAmB,MAAK,eAAe,UAAU;AAAA;AAMnE,QAAI,gBAAgB,SAAS,QAAQ,OAAQ,WAAW,gBAAgB,kBAAkB,iBAAiB,KAAM;AAC/G,eAAS;AACT,eAAS,SAAS;AAAA,QAChB,QAAQ;AAAA;AAGV,UAAI,SAAS;AACX,gBAAQ;AACR,gBAAQ,SAAS;AAAA,UACf,QAAQ;AAAA,UACR,iBAAiB;AAAA;AAAA;AAIrB;AAAA;AAGF,aAAS,MAAM,WAAW,MAAK;AAC/B,aAAS,MAAM,SAAS;AACxB,QAAI,SAAS;AAAA,MACX,OAAO;AAAA,QACL,QAAQ;AAAA;AAAA;AAKZ,QAAI,MAAK,YAAY,SAAS;AAC5B,aAAO,MAAM,WAAW,MAAK;AAAA;AAI/B,aAAS;AACT,IAAQ,YAAY,UAAU,QAAQ;AAEtC,QAAI,SAAS;AACX,cAAQ,SAAS;AAAA,QAEf,QAAQ;AAAA,QACR,iBAAiB;AAAA;AAEnB,cAAQ;AACR,MAAQ,YAAY,SAAS;AAAA,QAC3B,OAAO;AAAA,UACL,iBAAiB;AAAA;AAAA,SAElB;AAEH,UAAI,SAAS,MAAM,WAAW,QAAQ,MAAM,QAAQ;AAClD,gBAAQ,MAAM,SAAS,SAAS,MAAM;AAAA;AAAA;AAI1C,QAAI,kBAAkB;AACtB,QAAI,aAAa,MAAK;AAEtB,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,UAAI,MAAM,WAAW,GAAG;AAExB,UAAI,QAAQ,KAAK;AACf,YAAI,KAAK,KAAK,iBAAiB,WAAW,GAAG;AAE7C,YAAI,IAAI;AACN,0BAAgB,KAAK;AAAA,YACnB;AAAA,YACA,OAAO;AAAA;AAAA;AAAA;AAAA;AAOf,QAAI,SAAS,aAAa,SAAS,UAAU,QAAQ;AACnD,eAAS,UAAU,GAAG,OAAO,WAAY;AACvC,mBAAW,QAAQ;AACnB,YAAI,SAAS,SAAS,MAAM;AAE5B,iBAAS,KAAI,GAAG,KAAI,gBAAgB,QAAQ,MAAK;AAC/C,cAAI,MAAK,gBAAgB,IAAG;AAC5B,cAAI,SAAS,gBAAgB,IAAG,QAAQ;AACxC,cAAG,IAAI,OAAO;AACd,cAAG,IAAI,OAAO,SAAS;AACvB,cAAG;AAAA;AAAA;AAAA;AAAA;AAMX,YAAS,UAAU,SAAS,SAAU,SAAS;AAC7C,QAAI,QAAQ,KAAK;AACjB,QAAI,UAAU,KAAK;AAEnB,SAAK,WAAW;AAEhB,SAAK,YAAY,OAAO;AAGxB,eAAW,QAAQ,kBAAkB,SAAU,IAAI,KAAK;AACtD,UAAI,GAAG,QAAQ;AACb,cAAM,OAAO;AACb,gBAAQ,iBAAiB,KAAK;AAAA;AAAA;AAGlC,SAAK,YAAY,KAAK,WAAW,KAAK,YAAY,KAAK,UAAU,KAAK,mBAAmB,KAAK,YAAY,KAAK,QAAQ;AAAA;AAGzH,YAAS,OAAO;AAChB,SAAO;AAAA,EACP;AAEF,IAAO,mBAAQ;;;AC1rCA,sBAAsB,YAAY,wBAAwB;AACvE,SAAO;AAAA,IACL;AAAA,IACA,MAAM;AAAA,IACN,OAAO,SAAU,aAAa;AAC5B,UAAI,OAAO,YAAY;AACvB,UAAI,WAAW,YAAY;AAC3B,UAAI,kBAAkB,YAAY;AAClC,UAAI,gBAAgB,0BAA0B,gBAAgB;AAE9D,UAAI,CAAC,UAAU;AACb;AAAA;AAGF,UAAI,OAAO,IAAI,SAAS,YAAY,SAAU,KAAK;AACjD,eAAO,KAAK,aAAa;AAAA,SACxB,MAAM,GAAG;AACZ,UAAI,SAAS,KAAK;AAClB,UAAI,iBAAiB,KAAK,mBAAmB;AAE7C,UAAI,mBAAmB,MAAM,KAAK,KAE/B;AACD,aAAK,KAAK;AAAA;AAGZ,UAAI,mBAAmB,MAAM,KAAK,KAE/B;AACD,aAAK,KAAK;AAAA;AAGZ,UAAI,QAAQ,KAAK;AACjB,UAAI,UAAU,KAAK,kBAAkB,KAAK;AAC1C,UAAI,UAAU,KAAK,kBAAkB,KAAK;AAC1C,aAAO,UAAU;AAAA,QACf,UAAU,SAAU,QAAQ,OAAM;AAChC,cAAI,WAAW,OAAO,MAAM,OAAO;AACnC,cAAI,SAAS,iBAAiB,mBAAmB,WAAW;AAC5D,cAAI,QAAQ;AACZ,cAAI,SAAS;AAEb,mBAAS,IAAI,OAAO,OAAO,SAAS,GAAG,IAAI,OAAO,KAAK,KAAK;AAC1D,gBAAI,QAAQ;AAEZ,gBAAI,WAAW,GAAG;AAChB,kBAAI,IAAI,MAAM,IAAI,SAAS;AAE3B,sBAAQ,SAAS,YAAY,GAAG,MAAM;AAAA,mBACjC;AACL,oBAAM,KAAK,MAAM,IAAI,SAAS;AAC9B,oBAAM,KAAK,MAAM,IAAI,SAAS;AAE9B,sBAAQ,SAAS,YAAY,OAAO,MAAM;AAAA;AAG5C,gBAAI,eAAe;AACjB,qBAAO,YAAY,MAAM;AACzB,qBAAO,YAAY,MAAM;AAAA,mBACpB;AACL,oBAAK,cAAc,GAAG,MAAM;AAAA;AAAA;AAIhC,2BAAiB,MAAK,UAAU,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACpEpD,IAAI,WAAW;AAAA,EACb,SAAS,SAAU,OAAO;AACxB,QAAI,OAAM;AACV,QAAI,SAAQ;AAEZ,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,UAAI,CAAC,MAAM,MAAM,KAAK;AACpB,gBAAO,MAAM;AACb;AAAA;AAAA;AAKJ,WAAO,WAAU,IAAI,MAAM,OAAM;AAAA;AAAA,EAEnC,KAAK,SAAU,OAAO;AACpB,QAAI,OAAM;AAEV,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AAErC,cAAO,MAAM,MAAM;AAAA;AAGrB,WAAO;AAAA;AAAA,EAET,KAAK,SAAU,OAAO;AACpB,QAAI,MAAM;AAEV,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,YAAM,KAAK,OAAQ,OAAM,MAAM;AAAA;AAIjC,WAAO,SAAS,OAAO,MAAM;AAAA;AAAA,EAE/B,KAAK,SAAU,OAAO;AACpB,QAAI,MAAM;AAEV,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,YAAM,KAAK,OAAQ,OAAM,MAAM;AAAA;AAIjC,WAAO,SAAS,OAAO,MAAM;AAAA;AAAA,EAI/B,SAAS,SAAU,OAAO;AACxB,WAAO,MAAM;AAAA;AAAA;AAIjB,IAAI,eAAe,SAAU,OAAO;AAClC,SAAO,KAAK,MAAM,MAAM,SAAS;AAAA;AAGpB,oBAAoB,YAAY;AAC7C,SAAO;AAAA,IACL;AAAA,IAGA,OAAO,SAAU,aAAa,SAAS,KAAK;AAC1C,UAAI,OAAO,YAAY;AACvB,UAAI,WAAW,YAAY,IAAI;AAC/B,UAAI,WAAW,YAAY;AAC3B,UAAI,SAAQ,KAAK;AAEjB,UAAI,SAAQ,MAAM,SAAS,SAAS,iBAAiB,UAAU;AAC7D,YAAI,WAAW,SAAS;AACxB,YAAI,aAAY,SAAS,aAAa;AACtC,YAAI,SAAS,SAAS;AACtB,YAAI,MAAM,IAAI;AAEd,YAAI,OAAO,KAAK,IAAI,OAAO,KAAK,OAAO,MAAO,QAAO;AACrD,YAAI,OAAO,KAAK,MAAM,SAAQ;AAE9B,YAAI,OAAO,GAAG;AACZ,cAAI,aAAa,QAAQ;AACvB,wBAAY,QAAQ,KAAK,eAAe,KAAK,aAAa,WAAU,MAAM,IAAI;AAAA;AAGhF,cAAI,UAAU;AAEd,cAAI,OAAO,aAAa,UAAU;AAChC,sBAAU,SAAS;AAAA,qBACV,OAAO,aAAa,YAAY;AACzC,sBAAU;AAAA;AAGZ,cAAI,SAAS;AAEX,wBAAY,QAAQ,KAAK,WAAW,KAAK,aAAa,WAAU,MAAM,IAAI,MAAM,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACtF9F,kBAAiB,WAAW;AACjC,YAAU,kBAAkB;AAC5B,YAAU,oBAAoB;AAC9B,YAAU,eAAe,aAAa,QAAQ;AAC9C,YAAU,eAAe;AAAA,IACvB,YAAY;AAAA,IACZ,OAAO,SAAU,aAAa;AAC5B,UAAI,OAAO,YAAY;AAEvB,UAAI,YAAY,YAAY,SAAS,aAAa;AAElD,UAAI,aAAa,CAAC,UAAU,QAAQ;AAGlC,kBAAU,SAAS,KAAK,UAAU,SAAS;AAAA;AAG7C,WAAK,UAAU,mBAAmB;AAAA;AAAA;AAItC,YAAU,kBAAkB,UAAU,SAAS,UAAU,WAAW,WAAW;AAAA;;;ACtBjF,IAAI,qBAEJ,SAAU,QAAQ;AAChB,YAAU,qBAAoB;AAE9B,iCAA8B;AAC5B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,oBAAmB;AAChC,WAAO;AAAA;AAGT,sBAAmB,UAAU,iBAAiB,SAAU,QAAQ,SAAS;AACvE,WAAO,yBAAiB,MAAM,MAAM;AAAA,MAClC,oBAAoB;AAAA;AAAA;AAIxB,sBAAmB,UAAU,oBAAoB,SAAU,OAAO;AAChE,QAAI,WAAW,KAAK;AAEpB,QAAI,YAAY,SAAS,WAAW;AAElC,UAAI,KAAK,SAAS,YAAY,SAAS,UAAU;AACjD,UAAI,OAAO,KAAK;AAChB,UAAI,SAAS,KAAK,UAAU;AAC5B,UAAI,OAAO,KAAK,UAAU;AAC1B,UAAI,cAAc,SAAS,cAAc,iBAAiB,IAAI;AAC9D,SAAG,gBAAgB,SAAS,OAAO;AACnC,aAAO;AAAA;AAGT,WAAO,CAAC,KAAK;AAAA;AAGf,sBAAmB,OAAO;AAC1B,sBAAmB,gBAAgB;AAAA,IACjC,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,kBAAkB;AAAA,IAClB,iBAAiB;AAAA,IAKjB,cAAc;AAAA,IACd,aAAa;AAAA,IAEb,OAAO;AAAA,IACP,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,sBAAsB;AAAA;AAExB,SAAO;AAAA,EACP;AAEF,eAAY,cAAc;AAC1B,IAAO,wBAAQ;;;ACxDf,IAAI,iBAEJ,SAAU,QAAQ;AAChB,YAAU,iBAAgB;AAE1B,6BAA0B;AACxB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,gBAAe;AAC5B,WAAO;AAAA;AAGT,kBAAe,UAAU,iBAAiB,WAAY;AACpD,WAAO,yBAAiB,MAAM,MAAM;AAAA,MAClC,oBAAoB;AAAA,MACpB,uBAAuB,CAAC,CAAC,KAAK,IAAI,gBAAgB,SAAS;AAAA;AAAA;AAQ/D,kBAAe,UAAU,iBAAiB,WAAY;AAEpD,WAAO,KAAK,IAAI,WAAW,KAAK,IAAI,iBAAiB;AAAA;AAOvD,kBAAe,UAAU,0BAA0B,WAAY;AAE7D,QAAI,uBAAuB,KAAK,IAAI;AACpC,QAAI,iBAAiB,KAAK,IAAI;AAE9B,QAAI,iBAAiB,sBAAsB;AACzC,6BAAuB;AAAA;AAGzB,WAAO;AAAA;AAGT,kBAAe,UAAU,gBAAgB,SAAU,WAAW,MAAM,WAAW;AAC7E,WAAO,UAAU,KAAK,KAAK,cAAc;AAAA;AAG3C,kBAAe,OAAO;AACtB,kBAAe,eAAe,CAAC,QAAQ;AACvC,kBAAe,gBAAgB,qBAAqB,sBAAmB,eAAe;AAAA,IAGpF,MAAM;AAAA,IACN,UAAU;AAAA,IACV,gBAAgB;AAAA,IAChB,iBAAiB;AAAA,MACf,OAAO;AAAA,MACP,aAAa;AAAA,MACb,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,eAAe;AAAA,MACf,eAAe;AAAA,MACf,SAAS;AAAA;AAAA,IAEX,QAAQ;AAAA,MACN,WAAW;AAAA,QACT,aAAa;AAAA;AAAA;AAAA,IAGjB,cAAc;AAAA;AAEhB,SAAO;AAAA,EACP;AAEF,IAAO,oBAAQ;;;AC7Ef,IAAI,eAEJ,WAAY;AACV,2BAAwB;AACtB,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,IAAI;AACT,SAAK,aAAa;AAClB,SAAK,WAAW,KAAK,KAAK;AAC1B,SAAK,YAAY;AAAA;AAGnB,SAAO;AAAA;AAGT,IAAI,cAEJ,SAAU,QAAQ;AAChB,YAAU,cAAa;AAEvB,wBAAqB,MAAM;AACzB,QAAI,QAAQ,OAAO,KAAK,MAAM,SAAS;AAEvC,UAAM,OAAO;AACb,WAAO;AAAA;AAGT,eAAY,UAAU,kBAAkB,WAAY;AAClD,WAAO,IAAI;AAAA;AAGb,eAAY,UAAU,YAAY,SAAU,KAAK,OAAO;AACtD,QAAI,IAAI,MAAM;AACd,QAAI,IAAI,MAAM;AACd,QAAI,KAAK,KAAK,IAAI,MAAM,MAAM,GAAG;AACjC,QAAI,IAAI,KAAK,IAAI,MAAM,GAAG;AAC1B,QAAI,KAAM,KAAI,MAAM;AACpB,QAAI,UAAU,KAAK;AACnB,QAAI,aAAa,MAAM;AACvB,QAAI,WAAW,MAAM;AACrB,QAAI,YAAY,MAAM;AACtB,QAAI,aAAa,KAAK,IAAI;AAC1B,QAAI,aAAa,KAAK,IAAI;AAC1B,QAAI,WAAW,KAAK,IAAI;AACxB,QAAI,WAAW,KAAK,IAAI;AACxB,QAAI,iBAAiB,YAAY,WAAW,aAAa,KAAK,KAAK,IAAI,aAAa,WAAW,KAAK,KAAK;AAEzG,QAAI,gBAAgB;AAClB,UAAI,OAAO,aAAa,KAAK,GAAG,aAAa,KAAK;AAClD,UAAI,IAAI,aAAa,UAAU,GAAG,aAAa,UAAU,GAAG,IAAI,CAAC,KAAK,KAAK,YAAY,YAAY,CAAC;AAAA;AAGtG,QAAI,IAAI,GAAG,GAAG,GAAG,YAAY,UAAU,CAAC;AACxC,QAAI,OAAO,WAAW,IAAI,GAAG,WAAW,IAAI;AAC5C,QAAI,IAAI,WAAW,UAAU,GAAG,WAAW,UAAU,GAAG,IAAI,WAAW,KAAK,KAAK,GAAG,WAAW,KAAK,IAAI,CAAC;AAEzG,QAAI,OAAO,GAAG;AACZ,UAAI,IAAI,GAAG,GAAG,IAAI,UAAU,YAAY;AACxC,UAAI,OAAO,aAAa,KAAK,GAAG,WAAW,KAAK;AAAA;AAGlD,QAAI;AAAA;AAGN,SAAO;AAAA,EACP;AAEF,IAAO,kBAAQ;;;ACxER,2CAA2C,iBAAiB,MAAM;AACvE,SAAO,QAAQ;AACf,MAAI,aAAa,KAAK;AACtB,SAAO,SAAU,KAAK,OAAM,cAAc;AACxC,QAAI,eAAe,MAAK;AAExB,QAAI,CAAC,gBAAgB,wBAAwB,OAAO;AAClD,aAAO,sBAAsB,KAAK,OAAM;AAAA;AAG1C,QAAI,uBAAuB,gBAAgB;AAC3C,QAAI,WAAW,MAAK,YAAY,OAAO,MAAK,WAAW;AACvD,QAAI,SAAS,KAAK;AAClB,QAAI,KAAK,OAAO;AAChB,QAAI,KAAK,OAAO;AAChB,QAAI,IAAI,OAAO;AACf,QAAI,KAAK,OAAO;AAChB,QAAI,UAAW,KAAI,MAAM;AACzB,QAAI,aAAa,OAAO;AACxB,QAAI,WAAW,OAAO;AACtB,QAAI,cAAe,cAAa,YAAY;AAC5C,QAAI,YAAY,aAAa,KAAK,IAAI,IAAI,MAAM,IAAI;AACpD,QAAI,WAAU,KAAK;AACnB,QAAI,WAAU,KAAK;AAEnB,QAAI,IAAI,KAAK,IAAI,SAAQ;AACzB,QAAI,IAAI,KAAK,IAAI,SAAQ;AACzB,QAAI,YAAY;AAChB,QAAI,oBAAoB;AAExB,YAAQ;AAAA,WACD;AACH,YAAI,KAAM,MAAK,YAAY,SAAQ;AACnC,YAAI,KAAM,MAAK,YAAY,SAAQ;AACnC,oBAAY;AACZ,4BAAoB;AACpB;AAAA,WAEG;AACH,YAAI,KAAM,MAAK,YAAY,SAAQ;AACnC,YAAI,KAAM,MAAK,YAAY,SAAQ;AACnC,oBAAY;AACZ,4BAAoB;AACpB;AAAA,WAEG;AACH,YAAI,KAAK,UAAU,SAAQ,cAAc,qBAAqB,YAAY,WAAW,WAAW;AAChG,YAAI,KAAK,UAAU,SAAQ,cAAc,qBAAqB,YAAY,WAAW,WAAW;AAChG,oBAAY;AACZ,4BAAoB;AACpB;AAAA,WAEG;AACH,YAAI,KAAK,UAAU,SAAQ,cAAc,qBAAqB,YAAY,CAAC,WAAW,WAAW;AACjG,YAAI,KAAK,UAAU,SAAQ,cAAc,qBAAqB,YAAY,CAAC,WAAW,WAAW;AACjG,oBAAY;AACZ,4BAAoB;AACpB;AAAA,WAEG;AACH,YAAI,KAAK,UAAU,SAAQ;AAC3B,YAAI,KAAK,UAAU,SAAQ;AAC3B,oBAAY;AACZ,4BAAoB;AACpB;AAAA,WAEG;AACH,YAAI,KAAM,KAAI,YAAY,SAAQ;AAClC,YAAI,KAAM,KAAI,YAAY,SAAQ;AAClC,oBAAY;AACZ,4BAAoB;AACpB;AAAA,WAEG;AACH,YAAI,KAAM,KAAI,YAAY,SAAQ;AAClC,YAAI,KAAM,KAAI,YAAY,SAAQ;AAClC,oBAAY;AACZ,4BAAoB;AACpB;AAAA,WAEG;AACH,YAAI,KAAK,UAAU,SAAQ,YAAY,qBAAqB,UAAU,WAAW,WAAW;AAC5F,YAAI,KAAK,UAAU,SAAQ,YAAY,qBAAqB,UAAU,WAAW,WAAW;AAC5F,oBAAY;AACZ,4BAAoB;AACpB;AAAA,WAEG;AACH,YAAI,KAAK,UAAU,SAAQ,YAAY,qBAAqB,UAAU,CAAC,WAAW,WAAW;AAC7F,YAAI,KAAK,UAAU,SAAQ,YAAY,qBAAqB,UAAU,CAAC,WAAW,WAAW;AAC7F,oBAAY;AACZ,4BAAoB;AACpB;AAAA;AAGA,eAAO,sBAAsB,KAAK,OAAM;AAAA;AAG5C,UAAM,OAAO;AACb,QAAI,IAAI;AACR,QAAI,IAAI;AACR,QAAI,QAAQ;AACZ,QAAI,gBAAgB;AACpB,WAAO;AAAA;AAAA;AAGJ,+BAA+B,QAAQ,cAAc,iBAAiB,YAAY;AACvF,MAAI,OAAO,eAAe,UAAU;AAElC,WAAO,cAAc;AAAA,MACnB,UAAU;AAAA;AAEZ;AAAA,aACS,QAAQ,eAAe;AAEhC,WAAO,cAAc;AAAA,MACnB,UAAU;AAAA;AAEZ;AAAA;AAGF,MAAI,QAAQ,OAAO;AACnB,MAAI,aAAa,MAAM,YAAY,MAAM,aAAa,MAAM;AAC5D,MAAI,WAAW,MAAM,YAAY,MAAM,WAAW,MAAM;AACxD,MAAI,cAAe,cAAa,YAAY;AAC5C,MAAI;AACJ,MAAI,uBAAuB,gBAAgB;AAE3C,UAAQ;AAAA,SACD;AAAA,SACA;AAAA,SACA;AAAA,SACA;AAAA,SACA;AACH,oBAAc;AACd;AAAA,SAEG;AAAA,SACA;AACH,oBAAc;AACd;AAAA,SAEG;AAAA,SACA;AACH,oBAAc;AACd;AAAA;AAGA,aAAO,cAAc;AAAA,QACnB,UAAU;AAAA;AAEZ;AAAA;AAGJ,MAAI,UAAS,KAAK,KAAK,MAAM;AAS7B,MAAI,yBAAyB,YAAY,UAAS,KAAK,KAAK,KAAK,UAAS,KAAK,KAAK,KAAK;AACvF,eAAU,KAAK;AAAA;AAGjB,SAAO,cAAc;AAAA,IACnB,UAAU;AAAA;AAAA;AAId,8BAA8B,OAAO,UAAU,OAAO;AACpD,SAAO,WAAW,KAAK,IAAI,SAAU,SAAQ,KAAK;AAAA;AAGpD,8BAA8B,OAAO,UAAU,OAAO;AACpD,SAAO,WAAW,KAAK,IAAI,SAAU,SAAQ,IAAI;AAAA;;;AClKnD,IAAI,YAAY,CAAC,GAAG;AACpB,IAAI,WAAU,KAAK;AACnB,IAAI,WAAU,KAAK;AAEnB,qBAAqB,OAAO,MAAM;AAChC,MAAI,mBAAmB,MAAM,WAAW,MAAM;AAE9C,MAAI,uBAAuB,OAAO,gBAAgB;AAChD,QAAI,WAAW,MAAM;AAIrB,QAAI,SAAS,SAAS,cAAc,CAAC,SAAS,QAAQ;AACpD,UAAI,cAAc,KAAK,UAAU;AAEjC,UAAI,SAAS,gBAAgB;AAC3B,yBAAiB,KAAK;AACtB,yBAAiB,SAAS,cAAc;AAAA,aACnC;AACL,yBAAiB,KAAK;AACtB,yBAAiB,UAAU,cAAc;AAAA;AAAA;AAAA;AAK/C,SAAO;AAAA;AAGT,IAAI,UAEJ,SAAU,QAAQ;AAChB,YAAU,UAAS;AAEnB,sBAAmB;AACjB,QAAI,QAAQ,OAAO,KAAK,SAAS;AAEjC,UAAM,OAAO,SAAQ;AACrB,UAAM,gBAAgB;AACtB,WAAO;AAAA;AAGT,WAAQ,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK,SAAS;AACvE,SAAK,SAAS;AAEd,SAAK,0BAA0B;AAE/B,SAAK,gBAAgB;AAErB,QAAI,uBAAuB,YAAY,IAAI;AAE3C,QAAI,yBAAyB,iBAAiB,yBAAyB,SAAS;AAC9E,WAAK,eAAe,KAAK,aAAa,aAAa,SAAS,OAAO,KAAK,cAAc,aAAa,SAAS,KAAK;AAAA,eACxG,MAAuC;AAChD,WAAK;AAAA;AAAA;AAIT,WAAQ,UAAU,2BAA2B,SAAU,aAAa;AAClE,SAAK;AAEL,SAAK,gBAAgB;AAIrB,SAAK,iBAAiB;AAAA;AAGxB,WAAQ,UAAU,oBAAoB,SAAU,QAAQ,aAAa;AAEnE,SAAK,wBAAwB,QAAQ;AAAA;AAGvC,WAAQ,UAAU,kBAAkB,SAAU,aAAa;AACzD,QAAI,cAAc,YAAY,gBAAgB;AAE9C,QAAI,KAAK,gBAAgB,QAAQ,gBAAgB,KAAK,cAAc;AAClE,WAAK,eAAe;AAEpB,WAAK;AAAA;AAAA;AAIT,WAAQ,UAAU,gBAAgB,SAAU,aAAa,SAAS,KAAK,SAAS;AAC9E,QAAI,QAAQ,KAAK;AACjB,QAAI,OAAO,YAAY;AACvB,QAAI,UAAU,KAAK;AACnB,QAAI,QAAQ,YAAY;AACxB,QAAI,WAAW,MAAM;AACrB,QAAI;AAEJ,QAAI,MAAM,SAAS,eAAe;AAChC,6BAAuB,SAAS;AAAA,eACvB,MAAM,SAAS,SAAS;AACjC,6BAAuB,SAAS,QAAQ;AAAA;AAG1C,QAAI,iBAAiB,YAAY,uBAAuB,cAAc;AACtE,QAAI,kBAAkB,mBAAmB,aAAa;AAEtD,QAAI,iBAAiB;AACnB,WAAK,oBAAoB,iBAAiB,MAAM;AAAA;AAGlD,QAAI,YAAY,YAAY,IAAI,QAAQ,SAAS;AACjD,QAAI,mBAAmB,YAAY,OAAO;AAE1C,UAAM;AAGN,QAAI,WAAW,YAAY,IAAI,YAAY;AAC3C,QAAI,iBAAiB,YAAY,IAAI,kBAAkB;AACvD,QAAI,kBAAkB,YAAY,SAAS;AAC3C,QAAI,kBAAkB,gBAAgB,IAAI,mBAAmB;AAC7D,QAAI,QAAQ;AACZ,QAAI,WAAW,KAAK;AACpB,QAAI,aAAa,WAAW,QAAQ;AACpC,QAAI,gBAAgB,WAAW,QAAQ,SAAS;AAEhD,8BAA0B,WAAW;AACnC,UAAI,WAAW,UAAU,MAAM,MAAM,MAAM;AAC3C,UAAI,OAAO,mBAAmB,OAAO,sBAAsB;AAC3D,WAAK,SAAS,gBAAgB;AAE9B,UAAI,MAAM,SAAS,eAAe;AAChC,aAAK,SAAS,KAAK;AAAA;AAGrB,YAAM,aAAa;AACnB,aAAO;AAAA;AAGT;AACA,SAAK,KAAK,SAAS,IAAI,SAAU,WAAW;AAC1C,UAAI,YAAY,KAAK,aAAa;AAClC,UAAI,WAAS,UAAU,MAAM,MAAM,MAAM,WAAW;AAEpD,UAAI,gBAAgB;AAClB,yBAAiB;AAAA;AAInB,UAAI,CAAC,KAAK,SAAS,cAAc,CAAC,cAAc,MAAM,MAAM,WAAS;AACnE;AAAA;AAGF,UAAI,YAAY;AAEhB,UAAI,WAAW;AAGb,oBAAY,KAAK,MAAM,MAAM,kBAAkB;AAAA;AAGjD,UAAI,KAAK,eAAe,MAAM,MAAM,aAAa,MAAM,WAAW,UAAQ,sBAAsB,gBAAgB,SAAS,OAAO,OAAO;AAEvI,UAAI,iBAAiB;AASnB,WAAG,sBAAsB;AAAA;AAG3B,kBAAY,IAAI,MAAM,WAAW,WAAW,UAAQ,aAAa,sBAAsB,MAAM,SAAS;AAEtG,UAAI,YAAY;AACd,WAAG,KAAK;AAAA,UACN,OAAO;AAAA;AAAA,iBAEA,iBAAiB;AAC1B,gCAAwB,iBAAiB,gBAAgB,IAAI,UAAQ,WAAW,sBAAsB,OAAO;AAAA,aACxG;AACL,kBAAU,IAAI;AAAA,UACZ,OAAO;AAAA,WACN,aAAa;AAAA;AAGlB,WAAK,iBAAiB,WAAW;AACjC,YAAM,IAAI;AACV,SAAG,SAAS;AAAA,OACX,OAAO,SAAU,UAAU,UAAU;AACtC,UAAI,YAAY,KAAK,aAAa;AAClC,UAAI,WAAS,UAAU,MAAM,MAAM,MAAM,UAAU;AAEnD,UAAI,gBAAgB;AAClB,YAAI,OAAO;AAEX,YAAI,SAAS,WAAW,GAAG;AACzB,iBAAO,iBAAiB;AAAA,eACnB;AACL,iBAAO,SAAS;AAChB,eAAK,SAAS,gBAAgB;AAE9B,cAAI,MAAM,SAAS,eAAe;AAChC,iBAAK,SAAS,KAAK;AAAA;AAGrB,gBAAM,YAAY;AAAA;AAGpB,YAAI,WAAW,UAAU,MAAM,MAAM,MAAM;AAC3C,YAAI,QAAQ,sBAAsB,sBAAsB,UAAU;AAClE,oBAAY,MAAM;AAAA,UAChB;AAAA,WACC,gBAAgB;AAAA;AAGrB,UAAI,KAAK,QAAQ,iBAAiB;AAElC,UAAI,CAAC,KAAK,SAAS,aAAa,CAAC,cAAc,MAAM,MAAM,WAAS;AAClE,cAAM,OAAO;AACb;AAAA;AAGF,UAAI,YAAY;AAEhB,UAAI,WAAW;AACb,oBAAY,KAAK,MAAM,MAAM,kBAAkB;AAE/C,YAAI,WAAW;AACb,gBAAM,OAAO;AAAA;AAAA;AAIjB,UAAI,CAAC,IAAI;AACP,aAAK,eAAe,MAAM,MAAM,aAAa,MAAM,UAAU,UAAQ,sBAAsB,gBAAgB,SAAS,OAAO,CAAC,CAAC,IAAI;AAAA,aAC5H;AACL,qBAAa;AAAA;AAGf,UAAI,iBAAiB;AACnB,WAAG,sBAAsB;AAAA;AAG3B,UAAI,eAAe;AACjB,YAAI,SAAS,GAAG;AAEhB,YAAI,QAAQ;AACV,cAAI,kBAAkB,WAAW;AAEjC,cAAI,gBAAgB,aAAa,MAAM;AAOrC,4BAAgB,YAAY,gBAAgB;AAAA;AAAA;AAAA;AAOlD,UAAI,CAAC,eAAe;AAClB,oBAAY,IAAI,MAAM,UAAU,WAAW,UAAQ,aAAa,sBAAsB,MAAM,SAAS;AAAA;AAGvG,UAAI,YAAY;AACd,WAAG,KAAK;AAAA,UACN,OAAO;AAAA;AAAA,iBAEA,iBAAiB;AAC1B,gCAAwB,iBAAiB,gBAAgB,IAAI,UAAQ,UAAU,sBAAsB,MAAM;AAAA,aACtG;AACL,oBAAY,IAAI;AAAA,UACd,OAAO;AAAA,WACN,aAAa,UAAU;AAAA;AAG5B,WAAK,iBAAiB,UAAU;AAChC,SAAG,SAAS;AACZ,YAAM,IAAI;AAAA,OACT,OAAO,SAAU,WAAW;AAC7B,UAAI,KAAK,QAAQ,iBAAiB;AAClC,YAAM,yBAAyB,IAAI,aAAa;AAAA,OAC/C;AACH,QAAI,UAAU,KAAK,oBAAqB,MAAK,mBAAmB,IAAI;AACpE,YAAQ;AAER,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,EAAE,GAAG;AACrC,cAAQ,IAAI,MAAM;AAAA;AAGpB,UAAM,IAAI;AACV,SAAK,iBAAiB;AACtB,SAAK,QAAQ;AAAA;AAGf,WAAQ,UAAU,eAAe,SAAU,aAAa,SAAS,KAAK;AACpE,SAAK;AAEL,gBAAY,aAAa,KAAK;AAE9B,SAAK,iBAAiB;AAAA;AAGxB,WAAQ,UAAU,0BAA0B,SAAU,QAAQ,aAAa;AACzE,SAAK;AAEL,gBAAY,aAAa,KAAK,OAAO;AAAA;AAGvC,WAAQ,UAAU,mBAAmB,SAAU,aAAa;AAE1D,QAAI,WAAW,YAAY,IAAI,QAAQ,QAAQ,eAAe,YAAY,kBAAkB,OAAO,eAAe;AAElH,QAAI,UAAU;AACZ,WAAK,MAAM,YAAY;AAAA,WAClB;AACL,WAAK,MAAM;AAAA;AAAA;AAIf,WAAQ,UAAU,sBAAsB,SAAU,iBAAiB,MAAM,KAAK;AAC5E,QAAI,QAAQ;AAGZ,QAAI,CAAC,KAAK,SAAS;AACjB;AAAA;AAGF,QAAI,WAAW,gBAAgB;AAE/B,QAAI,KAAK,eAAe;AACtB,WAAK,kBAAkB,MAAM,iBAAiB;AAE9C,WAAK,gBAAgB;AAAA,WAChB;AACL,UAAI,iBAAiB,SAAU,KAAK;AAClC,YAAI,KAAK,KAAK,iBAAiB;AAE/B,YAAI,IAAI;AACN,cAAI,QAAQ,GAAG;AAEf,iBAAQ,UAAS,iBAEf,KAAK,IAAI,MAAM,UAAU,KAAK,IAAI,MAAM,WAAW;AAAA,eAChD;AACL,iBAAO;AAAA;AAAA;AAIX,WAAK,cAAc,WAAY;AAC7B,cAAM,0BAA0B,MAAM,gBAAgB,UAAU;AAAA;AAGlE,UAAI,QAAQ,GAAG,YAAY,KAAK;AAAA;AAAA;AAIpC,WAAQ,UAAU,YAAY,SAAU,MAAM,UAAU,cAAc;AACpE,QAAI,OAAO;AACX,SAAK,KAAK,KAAK,aAAa,SAAS,MAAM,SAAU,eAAe,SAAS;AAC3E,UAAI,cAAc,aAAa;AAC/B,oBAAc,eAAe,OAAO,MAAM;AAC1C,WAAK,KAAK;AAAA,QACR,WAAW;AAAA,QACX;AAAA,QACA;AAAA;AAAA;AAGJ,SAAK,KAAK,SAAU,GAAG,GAAG;AAExB,aAAO,EAAE,cAAc,EAAE;AAAA;AAE3B,WAAO;AAAA,MACL,gBAAgB,IAAI,MAAM,SAAU,MAAM;AACxC,eAAO,KAAK;AAAA;AAAA;AAAA;AAKlB,WAAQ,UAAU,gCAAgC,SAAU,MAAM,cAAc,UAAU;AACxF,QAAI,SAAQ,SAAS;AACrB,QAAI,iBAAiB,KAAK,aAAa,SAAS;AAChD,QAAI,YAAY,OAAO;AAEvB,aAAS,UAAU,GAAG,OAAM,OAAM,iBAAiB,WAAW,QAAQ,UAAU,MAAK,EAAE,SAAS;AAC9F,UAAI,SAAS,KAAK,WAAW,gBAAgB,OAAM,oBAAoB;AACvE,UAAI,QAAQ,SAAS,IACnB,OAAO,YACP,aAAa,KAAK,gBAAgB;AAEpC,UAAI,QAAQ,WAAW;AACrB,eAAO;AAAA;AAGT,kBAAY;AAAA;AAGd,WAAO;AAAA;AAST,WAAQ,UAAU,0BAA0B,SAAU,WAAW,UAAU;AACzE,QAAI,SAAQ,SAAS;AACrB,QAAI,SAAS,OAAM;AACnB,QAAI,UAAU,KAAK,IAAI,GAAG,OAAO;AACjC,QAAI,UAAU,KAAK,IAAI,OAAO,IAAI,OAAM,iBAAiB,WAAW,SAAS;AAE7E,WAAO,WAAW,SAAS,EAAE,SAAS;AACpC,UAAI,UAAU,eAAe,aAAa,OAAM,oBAAoB,UAAU;AAC5E,eAAO;AAAA;AAAA;AAAA;AAKb,WAAQ,UAAU,4BAA4B,SAAU,MAAM,cAAc,UAAU,KAAK;AACzF,QAAI,CAAC,KAAK,8BAA8B,MAAM,cAAc,WAAW;AACrE;AAAA;AAGF,QAAI,WAAW,KAAK,UAAU,MAAM,UAAU;AAE9C,QAAI,KAAK,wBAAwB,UAAU,WAAW;AACpD,WAAK,0BAA0B;AAE/B,UAAI,eAAe;AAAA,QACjB,MAAM;AAAA,QACN,eAAe,SAAS,MAAM;AAAA,QAC9B,QAAQ,SAAS;AAAA,QACjB;AAAA;AAAA;AAAA;AAKN,WAAQ,UAAU,oBAAoB,SAAU,MAAM,iBAAiB,KAAK;AAC1E,QAAI,WAAW,gBAAgB;AAE/B,QAAI,aAAa,KAAK,UAAU,MAAM,UAAU,SAAU,SAAS;AACjE,aAAO,KAAK,IAAI,KAAK,aAAa,gBAAgB,UAAU,MAAM;AAAA;AAGpE,QAAI,eAAe;AAAA,MACjB,MAAM;AAAA,MACN,eAAe,SAAS,MAAM;AAAA,MAC9B,YAAY;AAAA,MACZ,QAAQ,SAAS;AAAA,MACjB,UAAU;AAAA;AAAA;AAId,WAAQ,UAAU,SAAS,SAAU,SAAS,KAAK;AACjD,SAAK,OAAO,KAAK;AAEjB,SAAK,0BAA0B;AAAA;AAGjC,WAAQ,UAAU,UAAU,SAAU,SAAS,KAAK;AAClD,SAAK,0BAA0B;AAAA;AAGjC,WAAQ,UAAU,4BAA4B,SAAU,KAAK;AAC3D,QAAI,KAAK,aAAa;AACpB,UAAI,QAAQ,IAAI,YAAY,KAAK;AACjC,WAAK,cAAc;AAAA;AAAA;AAIvB,WAAQ,UAAU,SAAS,SAAU,OAAO;AAC1C,QAAI,QAAQ,KAAK;AACjB,QAAI,OAAO,KAAK;AAEhB,QAAI,SAAS,MAAM,wBAAwB,QAAQ,CAAC,KAAK,cAAc;AACrE,WAAK;AAEL,WAAK,iBAAiB;AACtB,WAAK,kBAAkB,SAAU,IAAI;AACnC,iCAAyB,IAAI,OAAO,UAAU,IAAI;AAAA;AAAA,WAE/C;AACL,YAAM;AAAA;AAGR,SAAK,QAAQ;AACb,SAAK,gBAAgB;AAAA;AAGvB,WAAQ,UAAU,oBAAoB,WAAY;AAChD,SAAK,MAAM,OAAO,KAAK;AACvB,SAAK,mBAAmB;AAAA;AAG1B,WAAQ,OAAO;AACf,SAAO;AAAA,EACP;AAEF,IAAI,OAAO;AAAA,EACT,aAAa,SAAU,sBAAsB,UAAQ;AACnD,QAAI,YAAY,SAAO,QAAQ,IAAI,KAAK;AACxC,QAAI,aAAa,SAAO,SAAS,IAAI,KAAK;AAE1C,QAAI,YAAY,GAAG;AACjB,eAAO,KAAK,SAAO;AACnB,eAAO,QAAQ,CAAC,SAAO;AAAA;AAGzB,QAAI,aAAa,GAAG;AAClB,eAAO,KAAK,SAAO;AACnB,eAAO,SAAS,CAAC,SAAO;AAAA;AAG1B,QAAI,aAAa,qBAAqB,IAAI,qBAAqB;AAC/D,QAAI,aAAa,qBAAqB,IAAI,qBAAqB;AAC/D,QAAI,IAAI,SAAQ,SAAO,GAAG,qBAAqB;AAC/C,QAAI,KAAK,SAAQ,SAAO,IAAI,SAAO,OAAO;AAC1C,QAAI,IAAI,SAAQ,SAAO,GAAG,qBAAqB;AAC/C,QAAI,KAAK,SAAQ,SAAO,IAAI,SAAO,QAAQ;AAC3C,QAAI,WAAW,KAAK;AACpB,QAAI,WAAW,KAAK;AAKpB,aAAO,IAAI,YAAY,IAAI,aAAa,KAAK;AAC7C,aAAO,IAAI,YAAY,IAAI,aAAa,KAAK;AAC7C,aAAO,QAAQ,WAAW,IAAI,KAAK;AACnC,aAAO,SAAS,WAAW,IAAI,KAAK;AAEpC,QAAI,YAAY,GAAG;AACjB,eAAO,KAAK,SAAO;AACnB,eAAO,QAAQ,CAAC,SAAO;AAAA;AAGzB,QAAI,aAAa,GAAG;AAClB,eAAO,KAAK,SAAO;AACnB,eAAO,SAAS,CAAC,SAAO;AAAA;AAG1B,WAAO,YAAY;AAAA;AAAA,EAErB,OAAO,SAAU,kBAAkB,UAAQ;AACzC,QAAI,QAAQ,SAAO,MAAM,SAAO,IAAI,IAAI;AAExC,QAAI,QAAQ,GAAG;AACb,UAAI,MAAM,SAAO;AACjB,eAAO,IAAI,SAAO;AAClB,eAAO,KAAK;AAAA;AAGd,QAAI,IAAI,SAAQ,SAAO,GAAG,iBAAiB;AAC3C,QAAI,KAAK,SAAQ,SAAO,IAAI,iBAAiB;AAC7C,aAAO,IAAI;AACX,aAAO,KAAK;AACZ,QAAI,UAAU,IAAI,KAAK;AAEvB,QAAI,QAAQ,GAAG;AACb,UAAI,MAAM,SAAO;AACjB,eAAO,IAAI,SAAO;AAClB,eAAO,KAAK;AAAA;AAGd,WAAO;AAAA;AAAA;AAGX,IAAI,iBAAiB;AAAA,EACnB,aAAa,SAAU,aAAa,MAAM,UAAU,UAAQ,cAAc,gBAAgB,WAAW,UAAU,UAAU;AACvH,QAAI,OAAO,IAAI,aAAK;AAAA,MAClB,OAAO,OAAO,IAAI;AAAA,MAClB,IAAI;AAAA;AAEN,SAAK,cAAc;AACnB,SAAK,OAAO;AAEZ,QAAI,gBAAgB;AAClB,UAAI,YAAY,KAAK;AACrB,UAAI,kBAAkB,eAAe,WAAW;AAChD,gBAAU,mBAAmB;AAAA;AAG/B,WAAO;AAAA;AAAA,EAET,OAAO,SAAU,aAAa,MAAM,UAAU,UAAQ,UAAU,gBAAgB,WAAW,UAAU,UAAU;AAC7G,QAAI,aAAa,CAAC,YAAY,WAAW,kBAAU;AACnD,QAAI,SAAS,IAAI,WAAW;AAAA,MAC1B,OAAO;AAAA,MACP,IAAI;AAAA;AAEN,WAAO,OAAO;AACd,QAAI,cAAc,2BAA2B;AAC7C,WAAO,wBAAwB,kCAAkC,aAAa;AAAA,MAC5E,YAAY,eAAe;AAAA;AAG7B,QAAI,gBAAgB;AAClB,UAAI,cAAc,OAAO;AACzB,UAAI,kBAAkB,WAAW,MAAM;AACvC,UAAI,gBAAgB;AACpB,kBAAY,mBAAmB,WAAW,IAAI,SAAO;AACrD,oBAAc,mBAAmB,SAAO;AACxC,MAAC,YAAW,cAAc,WAAW,QAAQ;AAAA,QAC3C,OAAO;AAAA,SAEN;AAAA;AAGL,WAAO;AAAA;AAAA;AAIX,4BAA4B,aAAa,UAAU;AACjD,MAAI,qBAAqB,YAAY,IAAI,gBAAgB;AACzD,MAAI,WAAW,SAAS;AAExB,MAAI,MAAuC;AACzC,QAAI,oBAAoB;AACtB,UAAI,SAAS,SAAS,YAAY;AAChC,aAAK;AAAA;AAGP,UAAI,SAAS,SAAS,eAAe;AACnC,aAAK;AAAA;AAAA;AAAA;AAKX,MAAI,sBAAsB,SAAS,SAAS,cAAc,SAAS,SAAS,eAAe;AACzF,WAAO;AAAA,MACL;AAAA,MACA,WAAW,SAAS,aAAa;AAAA;AAAA;AAAA;AAKvC,iCAAiC,iBAAiB,sBAAsB,IAAI,UAAQ,UAAU,cAAc,UAAU,eAAe;AACnI,MAAI;AACJ,MAAI;AAEJ,MAAI,cAAc;AAChB,iBAAa;AAAA,MACX,GAAG,SAAO;AAAA,MACV,OAAO,SAAO;AAAA;AAEhB,mBAAe;AAAA,MACb,GAAG,SAAO;AAAA,MACV,QAAQ,SAAO;AAAA;AAAA,SAEZ;AACL,iBAAa;AAAA,MACX,GAAG,SAAO;AAAA,MACV,QAAQ,SAAO;AAAA;AAEjB,mBAAe;AAAA,MACb,GAAG,SAAO;AAAA,MACV,OAAO,SAAO;AAAA;AAAA;AAIlB,MAAI,CAAC,eAAe;AAGlB,IAAC,YAAW,cAAc,WAAW,IAAI;AAAA,MACvC,OAAO;AAAA,OACN,sBAAsB,UAAU;AAAA;AAGrC,MAAI,qBAAqB,uBAAuB,gBAAgB,SAAS,QAAQ;AACjF,EAAC,YAAW,cAAc,WAAW,IAAI;AAAA,IACvC,OAAO;AAAA,KACN,oBAAoB;AAAA;AAGzB,iCAAiC,KAAK,OAAO;AAC3C,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,QAAI,CAAC,SAAS,IAAI,MAAM,MAAM;AAC5B,aAAO;AAAA;AAAA;AAIX,SAAO;AAAA;AAGT,IAAI,eAAe,CAAC,KAAK,KAAK,SAAS;AACvC,IAAI,gBAAgB,CAAC,MAAM,MAAM,KAAK,cAAc;AACpD,IAAI,gBAAgB;AAAA,EAClB,aAAa,SAAU,UAAQ;AAC7B,WAAO,CAAC,wBAAwB,UAAQ;AAAA;AAAA,EAE1C,OAAO,SAAU,UAAQ;AACvB,WAAO,CAAC,wBAAwB,UAAQ;AAAA;AAAA;AAG5C,IAAI,YAAY;AAAA,EAGd,aAAa,SAAU,MAAM,WAAW,WAAW;AACjD,QAAI,WAAS,KAAK,cAAc;AAChC,QAAI,iBAAiB,YAAY,aAAa,WAAW,YAAU;AAEnE,QAAI,QAAQ,SAAO,QAAQ,IAAI,IAAI;AACnC,QAAI,QAAQ,SAAO,SAAS,IAAI,IAAI;AACpC,WAAO;AAAA,MACL,GAAG,SAAO,IAAI,QAAQ,iBAAiB;AAAA,MACvC,GAAG,SAAO,IAAI,QAAQ,iBAAiB;AAAA,MACvC,OAAO,SAAO,QAAQ,QAAQ;AAAA,MAC9B,QAAQ,SAAO,SAAS,QAAQ;AAAA;AAAA;AAAA,EAGpC,OAAO,SAAU,MAAM,WAAW,WAAW;AAC3C,QAAI,WAAS,KAAK,cAAc;AAChC,WAAO;AAAA,MACL,IAAI,SAAO;AAAA,MACX,IAAI,SAAO;AAAA,MACX,IAAI,SAAO;AAAA,MACX,GAAG,SAAO;AAAA,MACV,YAAY,SAAO;AAAA,MACnB,UAAU,SAAO;AAAA,MACjB,WAAW,SAAO;AAAA;AAAA;AAAA;AAKxB,uBAAuB,UAAQ;AAC7B,SAAO,SAAO,cAAc,QAAQ,SAAO,YAAY,QAAQ,SAAO,eAAe,SAAO;AAAA;AAG9F,oCAAoC,UAAU;AAC5C,SAAO,SAAU,WAAU;AACzB,QAAI,aAAa,YAAW,QAAQ;AACpC,WAAO,SAAU,WAAU;AACzB,cAAQ;AAAA,aACD;AAAA,aACA;AAAA,aACA;AAAA,aACA;AACH,iBAAO,YAAW;AAAA;AAGlB,iBAAO;AAAA;AAAA;AAAA,IAGb;AAAA;AAGJ,qBAAqB,IAAI,MAAM,WAAW,WAAW,UAAQ,aAAa,sBAAsB,SAAS;AACvG,MAAI,QAAQ,KAAK,cAAc,WAAW;AAE1C,MAAI,CAAC,SAAS;AACZ,OAAG,SAAS,KAAK,UAAU,IAAI,CAAC,aAAa,oBAAoB;AAAA;AAGnE,KAAG,SAAS;AACZ,MAAI,cAAc,UAAU,WAAW;AACvC,iBAAe,GAAG,KAAK,UAAU;AACjC,MAAI,uBAAuB,UAAU,uBAAuB,SAAO,KAAK,SAAO,KAAK,WAAW,aAAa,SAAO,YAAY,SAAO,aAAa,aAAa,eAAe,uBAAuB,SAAO,UAAU,IAAI,WAAW,QAAQ,SAAO,SAAS,IAAI,UAAU;AAC5Q,MAAI,oBAAoB,qBAAqB;AAC7C,gBAAc,IAAI,mBAAmB;AAAA,IACnC,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,aAAa,gBAAgB,YAAY,WAAW;AAAA,IACpD,cAAc,MAAM;AAAA,IACpB,gBAAgB,MAAM;AAAA,IACtB,wBAAwB;AAAA;AAE1B,MAAI,QAAQ,GAAG;AAEf,MAAI,WAAW,OAAO;AACpB,QAAI,YAAW,UAAU,IAAI,CAAC,SAAS;AACvC,OAAG,WAAW,SAAS,cAAa,WAAW,OAAO;AACtD,0BAAsB,IAAI,cAAa,YAAY,uBAAuB,WAAU,2BAA2B,uBAAuB,UAAU,IAAI,CAAC,SAAS;AAAA;AAGhK,yBAAuB,OAAO,mBAAmB,YAAY,YAAY,YAAY,SAAU,OAAO;AACpG,WAAO,4BAA4B,MAAM;AAAA;AAE3C,MAAI,gBAAgB,UAAU,SAAS,CAAC;AACxC,sBAAoB,IAAI,cAAc,IAAI,UAAU,cAAc,IAAI;AACtE,2BAAyB,IAAI;AAE7B,MAAI,cAAc,WAAS;AACzB,OAAG,MAAM,OAAO;AAChB,OAAG,MAAM,SAAS;AAClB,SAAK,GAAG,QAAQ,SAAU,OAAO;AAC/B,UAAI,MAAM,OAAO;AACf,cAAM,MAAM,OAAO,MAAM,MAAM,SAAS;AAAA;AAAA;AAAA;AAAA;AAOhD,sBAAsB,WAAW,WAAW;AAE1C,MAAI,cAAc,UAAU,IAAI,CAAC,aAAa;AAE9C,MAAI,CAAC,eAAe,gBAAgB,QAAQ;AAC1C,WAAO;AAAA;AAGT,MAAI,YAAY,UAAU,IAAI,CAAC,aAAa,mBAAmB;AAE/D,MAAI,QAAQ,MAAM,UAAU,SAAS,OAAO,YAAY,KAAK,IAAI,UAAU;AAC3E,MAAI,SAAS,MAAM,UAAU,UAAU,OAAO,YAAY,KAAK,IAAI,UAAU;AAC7E,SAAO,KAAK,IAAI,WAAW,OAAO;AAAA;AAGpC,IAAI,gBAEJ,WAAY;AACV,4BAAyB;AAAA;AAEzB,SAAO;AAAA;AAGT,IAAI,YAEJ,SAAU,QAAQ;AAChB,YAAU,YAAW;AAErB,sBAAmB,MAAM;AACvB,QAAI,QAAQ,OAAO,KAAK,MAAM,SAAS;AAEvC,UAAM,OAAO;AACb,WAAO;AAAA;AAGT;AAEA,aAAU,UAAU,kBAAkB,WAAY;AAChD,WAAO,IAAI;AAAA;AAGb,aAAU,UAAU,YAAY,SAAU,KAAK,OAAO;AAGpD,QAAI,SAAS,MAAM;AACnB,QAAI,aAAa,KAAK;AACtB,QAAI,aAAa,KAAK;AAEtB,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK,GAAG;AACzC,iBAAW,cAAc,OAAO,IAAI;AACpC,UAAI,OAAO,WAAW,IAAI,WAAW;AACrC,UAAI,OAAO,OAAO,IAAI,OAAO,IAAI;AAAA;AAAA;AAIrC,SAAO;AAAA,EACP;AAEF,qBAAqB,aAAa,OAAO,aAAa;AAEpD,MAAI,OAAO,YAAY;AACvB,MAAI,aAAa;AACjB,MAAI,aAAa,KAAK,UAAU,yBAAyB,IAAI;AAC7D,aAAW,IAAI,cAAc,KAAK,UAAU;AAC5C,MAAI,mBAAmB,KAAK,UAAU;AACtC,MAAI,WAAW,KAAK,UAAU;AAC9B,MAAI,kBAAkB,YAAY,SAAS;AAC3C,MAAI,iBAAiB,YAAY,IAAI,kBAAkB;AAEvD,MAAI,gBAAgB;AAClB,QAAI,SAAS,KAAK,UAAU;AAC5B,QAAI,uBAAuB;AAC3B,yBAAqB,IAAI,cAAc,KAAK,UAAU;AACtD,QAAI,OAAO,IAAI,UAAU;AAAA,MACvB,OAAO;AAAA,QACL;AAAA;AAAA,MAEF,aAAa,CAAC,CAAC;AAAA,MACf,QAAQ;AAAA,MACR,IAAI;AAAA;AAEN,SAAK,eAAe;AACpB,SAAK,eAAe;AACpB,SAAK,qBAAqB;AAC1B,SAAK,aAAa;AAClB,4BAAwB,MAAM,iBAAiB;AAC/C,UAAM,IAAI;AAAA;AAGZ,MAAI,KAAK,IAAI,UAAU;AAAA,IACrB,OAAO;AAAA,MACL,QAAQ,KAAK,UAAU;AAAA;AAAA,IAEzB,aAAa,CAAC,CAAC;AAAA;AAEjB,KAAG,eAAe;AAClB,KAAG,eAAe;AAClB,KAAG,qBAAqB;AACxB,KAAG,aAAa;AAChB,QAAM,IAAI;AACV,gBAAc,IAAI,aAAa;AAE/B,YAAU,IAAI,cAAc,YAAY;AAExC,MAAI,CAAC,YAAY,IAAI,WAAW;AAC9B,OAAG,GAAG,aAAa;AACnB,OAAG,GAAG,aAAa;AAAA;AAAA;AAKvB,IAAI,2BAA2B,SAAS,SAAU,OAAO;AACvD,MAAI,YAAY;AAChB,MAAI,YAAY,uBAAuB,WAAW,MAAM,SAAS,MAAM;AACvE,YAAU,WAAW,YAAY,aAAa,IAAI,YAAY;AAAA,GAC7D,IAAI;AAEP,gCAAgC,WAAW,GAAG,GAAG;AAC/C,MAAI,aAAa,UAAU;AAC3B,MAAI,cAAc,IAAI;AACtB,MAAI,SAAS,UAAU,MAAM;AAC7B,MAAI,mBAAmB,UAAU;AACjC,MAAI,eAAe,KAAK,IAAI,UAAU,aAAa;AACnD,MAAI,gBAAgB,UAAU,aAAa;AAC3C,YAAU,KAAK;AACf,YAAU,KAAK;AACf,MAAI,iBAAiB,UAAU;AAC/B,MAAI,kBAAkB,UAAU,IAAI;AACpC,MAAI,iBAAiB,iBAAiB;AACtC,MAAI,iBAAiB,iBAAiB;AAEtC,WAAS,IAAI,GAAG,OAAM,OAAO,SAAS,GAAG,IAAI,MAAK,KAAK;AACrD,QAAI,KAAK,IAAI;AACb,QAAI,aAAa,OAAO,KAAK;AAC7B,QAAI,cAAc,OAAO,KAAK;AAE9B,QAAI,cAAc,kBAAkB,cAAc,kBAAmB,kBAAiB,cAAc,mBAAmB,iBAAiB,mBAAmB,cAAc,mBAAmB,eAAe,mBAAmB,gBAAgB;AAC5O,aAAO,iBAAiB;AAAA;AAAA;AAI5B,SAAO;AAAA;AAGT,uBAAuB,IAAI,aAAa,MAAM;AAC5C,MAAI,cAAc,KAAK,UAAU;AACjC,KAAG,SAAS,OAAO,IAAI;AAEvB,KAAG,MAAM,OAAO;AAChB,KAAG,MAAM,SAAS,YAAY;AAC9B,KAAG,MAAM,YAAY,KAAK,UAAU;AAAA;AAGtC,iCAAiC,IAAI,iBAAiB,MAAM;AAC1D,MAAI,cAAc,gBAAgB,IAAI,kBAAkB,gBAAgB,IAAI;AAC5E,MAAI,YAAY,gBAAgB;AAChC,KAAG,SAAS;AACZ,KAAG,MAAM,OAAO;AAChB,KAAG,MAAM,SAAS;AAClB,KAAG,MAAM,YAAY,KAAK,UAAU;AAAA;AAGtC,+BAA+B,sBAAsB,UAAQ,OAAO;AAClE,MAAI,uBAAuB,OAAO,gBAAgB;AAChD,QAAI,YAAY;AAChB,QAAI,cAAc,MAAM;AACxB,WAAO;AAAA,MACL,GAAG,uBAAuB,UAAU,IAAI,YAAY;AAAA,MACpD,GAAG,uBAAuB,YAAY,IAAI,UAAU;AAAA,MACpD,OAAO,uBAAuB,UAAU,QAAQ,YAAY;AAAA,MAC5D,QAAQ,uBAAuB,YAAY,SAAS,UAAU;AAAA;AAAA,SAE3D;AACL,QAAI,cAAc,MAAM;AACxB,QAAI,cAAc;AAClB,WAAO;AAAA,MACL,IAAI,YAAY;AAAA,MAChB,IAAI,YAAY;AAAA,MAChB,IAAI,uBAAuB,YAAY,KAAK,YAAY;AAAA,MACxD,GAAG,uBAAuB,YAAY,IAAI,YAAY;AAAA,MACtD,YAAY,uBAAuB,YAAY,aAAa;AAAA,MAC5D,UAAU,uBAAuB,YAAY,WAAW,KAAK,KAAK;AAAA;AAAA;AAAA;AAKxE,4BAA4B,OAAO,sBAAsB,UAAQ;AAC/D,MAAI,aAAa,MAAM,SAAS,UAAU,iBAAS;AACnD,SAAO,IAAI,WAAW;AAAA,IACpB,OAAO,sBAAsB,sBAAsB,UAAQ;AAAA,IAC3D,QAAQ;AAAA,IACR,IAAI;AAAA;AAAA;AAIR,IAAO,kBAAQ;;;ACt+BR,kBAAiB,WAAW;AACjC,YAAU,kBAAkB;AAC5B,YAAU,oBAAoB;AAC9B,YAAU,eAAe,UAAU,SAAS,OAAO,QAAQ,AAAO,MAAM,QAAQ;AAGhF,YAAU,eAAe,UAAU,SAAS,OAAO,oBAAoB;AAEvE,YAAU,kBAAkB,UAAU,SAAS,UAAU,WAAW,WAAW;AAW/E,YAAU,eAAe;AAAA,IACvB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,KACP,SAAU,SAAS,SAAS;AAC7B,QAAI,gBAAgB,QAAQ,iBAAiB;AAC7C,YAAQ,cAAc;AAAA,MACpB,UAAU;AAAA,MACV,OAAO;AAAA,OACN,SAAU,gBAAgB;AAC3B,UAAI,QAAQ,UAAU;AACpB,uBAAe,KAAK,oBAAoB,QAAQ;AAAA;AAAA;AAAA;AAAA;;;AChCxD,IAAI,OAAM,KAAK,KAAK;AACpB,IAAI,SAAS,KAAK,KAAK;AAEvB,qBAAqB,aAAa,KAAK;AACrC,SAAO,AAAO,cAAc,YAAY,sBAAsB;AAAA,IAC5D,OAAO,IAAI;AAAA,IACX,QAAQ,IAAI;AAAA;AAAA;AAIT,2BAA2B,aAAa,KAAK;AAClD,MAAI,WAAW,YAAY,aAAa;AACxC,MAAI,UAAS,YAAY,IAAI;AAC7B,MAAI,SAAS,YAAY,IAAI;AAE7B,MAAI,CAAC,AAAO,QAAQ,SAAS;AAC3B,aAAS,CAAC,GAAG;AAAA;AAGf,MAAI,CAAC,AAAO,QAAQ,UAAS;AAC3B,cAAS,CAAC,SAAQ;AAAA;AAGpB,MAAI,QAAQ,cAAa,SAAS,OAAO,IAAI;AAC7C,MAAI,SAAS,cAAa,SAAS,QAAQ,IAAI;AAC/C,MAAI,OAAO,KAAK,IAAI,OAAO;AAC3B,MAAI,KAAK,cAAa,QAAO,IAAI,SAAS,SAAS;AACnD,MAAI,KAAK,cAAa,QAAO,IAAI,UAAU,SAAS;AACpD,MAAI,KAAK,cAAa,OAAO,IAAI,OAAO;AACxC,MAAI,IAAI,cAAa,OAAO,IAAI,OAAO;AACvC,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA;AAGW,mBAAmB,YAAY,SAAS,KAAK;AAC1D,UAAQ,iBAAiB,YAAY,SAAU,aAAa;AAC1D,QAAI,OAAO,YAAY;AACvB,QAAI,WAAW,KAAK,aAAa;AACjC,QAAI,WAAW,YAAY,aAAa;AAExC,QAAI,KAAK,kBAAkB,aAAa,MACpC,KAAK,GAAG,IACR,KAAK,GAAG,IACR,IAAI,GAAG,GACP,KAAK,GAAG;AAEZ,QAAI,aAAa,CAAC,YAAY,IAAI,gBAAgB;AAClD,QAAI,WAAW,YAAY,IAAI,cAAc;AAC7C,QAAI,iBAAiB;AACrB,SAAK,KAAK,UAAU,SAAU,OAAO;AACnC,OAAC,MAAM,UAAU;AAAA;AAEnB,QAAI,OAAM,KAAK,OAAO;AAEtB,QAAI,aAAa,KAAK,KAAM,SAAO,kBAAkB;AACrD,QAAI,YAAY,YAAY,IAAI;AAChC,QAAI,WAAW,YAAY,IAAI;AAC/B,QAAI,mBAAmB,YAAY,IAAI;AAEvC,QAAI,SAAS,KAAK,cAAc;AAChC,WAAO,KAAK;AAEZ,QAAI,YAAY;AAChB,QAAI,6BAA6B;AACjC,QAAI,eAAe;AACnB,QAAI,MAAM,YAAY,IAAI;AAC1B,SAAK,UAAU;AAAA,MACb;AAAA,MACA;AAAA;AAEF,SAAK,KAAK,UAAU,SAAU,OAAO,KAAK;AACxC,UAAI;AAEJ,UAAI,MAAM,QAAQ;AAChB,aAAK,cAAc,KAAK;AAAA,UACtB,OAAO;AAAA,UACP,YAAY;AAAA,UACZ,UAAU;AAAA,UACV;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,GAAG,WAAW,MAAM;AAAA;AAEtB;AAAA;AAIF,UAAI,aAAa,QAAQ;AACvB,gBAAQ,SAAQ,KAAK,mBAAmB,aAAa,QAAQ;AAAA,aACxD;AACL,gBAAQ,OAAM;AAAA;AAGhB,UAAI,QAAQ,UAAU;AACpB,gBAAQ;AACR,qBAAa;AAAA,aACR;AACL,sCAA8B;AAAA;AAGhC,UAAI,WAAW,eAAe,MAAM;AACpC,WAAK,cAAc,KAAK;AAAA,QACtB;AAAA,QACA,YAAY;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,GAAG,WAAW,UAAU,OAAO,QAAQ,CAAC,IAAI,MAAM;AAAA;AAEpD,qBAAe;AAAA;AAIjB,QAAI,YAAY,QAAO,gBAAgB;AAGrC,UAAI,aAAa,MAAM;AACrB,YAAI,UAAU,OAAM;AACpB,aAAK,KAAK,UAAU,SAAU,OAAO,KAAK;AACxC,cAAI,CAAC,MAAM,QAAQ;AACjB,gBAAI,WAAW,KAAK,cAAc;AAClC,qBAAS,QAAQ;AACjB,qBAAS,aAAa,aAAa,MAAM,MAAM;AAC/C,qBAAS,WAAW,aAAa,MAAO,OAAM,KAAK;AAAA;AAAA;AAAA,aAGlD;AACL,qBAAa,YAAY;AACzB,uBAAe;AACf,aAAK,KAAK,UAAU,SAAU,OAAO,KAAK;AACxC,cAAI,CAAC,MAAM,QAAQ;AACjB,gBAAI,WAAW,KAAK,cAAc;AAClC,gBAAI,QAAQ,SAAS,UAAU,WAAW,WAAW,QAAQ;AAC7D,qBAAS,aAAa;AACtB,qBAAS,WAAW,eAAe,MAAM;AACzC,4BAAgB,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AChJnB,oBAAoB,YAAY;AAC7C,SAAO;AAAA,IACL;AAAA,IACA,OAAO,SAAU,aAAa,SAAS;AACrC,UAAI,eAAe,QAAQ,eAAe;AAAA,QACxC,UAAU;AAAA;AAGZ,UAAI,CAAC,gBAAgB,CAAC,aAAa,QAAQ;AACzC;AAAA;AAGF,UAAI,OAAO,YAAY;AACvB,WAAK,WAAW,SAAU,KAAK;AAC7B,YAAI,OAAO,KAAK,QAAQ;AAExB,iBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAE5C,cAAI,CAAC,aAAa,GAAG,WAAW,OAAO;AACrC,mBAAO;AAAA;AAAA;AAIX,eAAO;AAAA;AAAA;AAAA;AAAA;;;ACjBf,IAAI,UAAS,KAAK,KAAK;AAEvB,0BAA0B,MAAM,IAAI,IAAI,GAAG,KAAK,WAAW,YAAY,UAAU,SAAS,WAAW;AACnG,MAAI,KAAK,SAAS,GAAG;AACnB;AAAA;AAGF;AAEA,mDAAiD,MAAM;AACrD,QAAI,KAAK,KAAK;AACd,QAAI,MAAM,KAAK;AAEf,aAAS,KAAI,GAAG,KAAI,KAAK,KAAK,QAAQ,MAAK;AACzC,UAAI,OAAO,KAAK,KAAK;AACrB,UAAI,KAAK,KAAK,IAAI,KAAK,MAAM,IAAI;AAEjC,UAAI,KAAK,IAAI,KAAK;AAClB,UAAI,MAAM,KAAK;AAEf,UAAI,MAAK,KAAK,KAAM,KAAI,KAAK,IAAI,KAAK,KAAK,QAAQ;AACnD,WAAK,MAAM,IAAI,KAAM,OAAK,KAAK,QAAQ;AAAA;AAAA;AAK3C,wBAAsB,OAAO;AAE3B,QAAI,UAAU;AAAA,MACZ,MAAM;AAAA,MACN,MAAM;AAAA;AAER,QAAI,aAAa;AAAA,MACf,MAAM;AAAA,MACN,MAAM;AAAA;AAGR,aAAS,KAAI,GAAG,KAAI,MAAM,QAAQ,MAAK;AACrC,UAAI,MAAM,IAAG,iBAAiB,QAAQ;AACpC;AAAA;AAGF,UAAI,OAAO,MAAM;AACjB,UAAI,OAAO,KAAK,MAAM,IAAI,KAAK,aAAa;AAC5C,UAAI,KAAK,KAAK,IAAI,KAAK,MAAM,IAAI;AAEjC,UAAI,KAAK,KAAK,MAAM;AAClB,YAAI,MAAK,KAAK,MAAM,IAAI,KAAK,KAAK,OAAO;AAEzC,YAAI,KAAK,IAAI,KAAK;AAElB,YAAI,KAAK,KAAK,IAAI,OAAM,KAAK,KAAK,KAAK,KAAK,KAAM,KAAI,MAAK,MAAK,KAAK,OAAO;AAC5E,aAAK,KAAK;AACV,aAAK,OAAO;AAAA;AAGd,WAAK,KAAK,KAAK;AAAA;AAGjB,4CAAwC;AACxC,4CAAwC;AAAA;AAG1C,MAAI,OAAM,KAAK;AAEf,WAAS,IAAI,GAAG,IAAI,MAAK,KAAK;AAC5B,QAAI,KAAK,GAAG,aAAa,WAAW,KAAK,GAAG,iBAAiB,aAAa;AACxE,UAAI,KAAK,KAAK,GAAG,MAAM,IAAI;AAC3B,WAAK,GAAG,WAAW,GAAG,MAAM;AAC5B,WAAK,GAAG,MAAM,IAAI;AAAA;AAAA;AAItB,MAAI,eAAe,MAAM,SAAS,UAAU,aAAa;AACvD,iBAAa;AAAA;AAAA;AAIjB,sBAAsB,iBAAiB,IAAI,IAAI,GAAG,WAAW,YAAY,UAAU,SAAS;AAC1F,MAAI,WAAW;AACf,MAAI,YAAY;AAChB,MAAI,YAAY,OAAO;AACvB,MAAI,aAAa,CAAC,OAAO;AAEzB,WAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,QAAI,QAAQ,gBAAgB,GAAG;AAE/B,QAAI,iBAAiB,gBAAgB,KAAK;AACxC;AAAA;AAGF,QAAI,MAAM,IAAI,IAAI;AAChB,kBAAY,KAAK,IAAI,WAAW,MAAM;AACtC,eAAS,KAAK,gBAAgB;AAAA,WACzB;AACL,mBAAa,KAAK,IAAI,YAAY,MAAM;AACxC,gBAAU,KAAK,gBAAgB;AAAA;AAAA;AAInC,mBAAiB,WAAW,IAAI,IAAI,GAAG,GAAG,WAAW,YAAY,UAAU,SAAS;AACpF,mBAAiB,UAAU,IAAI,IAAI,GAAG,IAAI,WAAW,YAAY,UAAU,SAAS;AAEpF,WAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,QAAI,WAAS,gBAAgB;AAC7B,QAAI,QAAQ,SAAO;AAEnB,QAAI,iBAAiB,WAAS;AAC5B;AAAA;AAGF,QAAI,aAAa,SAAO;AAExB,QAAI,YAAY;AACd,UAAI,gBAAgB,SAAO,iBAAiB;AAC5C,UAAI,gBAAgB,SAAO,KAAK;AAChC,UAAI,kBAAkB;AAEtB,UAAI,eAAe;AACjB,YAAI,MAAM,IAAI,IAAI;AAChB,4BAAkB,WAAW,GAAG,KAAK,SAAO,gBAAgB,WAAW,SAAO;AAAA,eACzE;AACL,4BAAkB,WAAW,YAAY,SAAO,eAAe,WAAW,GAAG,KAAK,SAAO;AAAA;AAAA,aAEtF;AACL,YAAI,MAAM,IAAI,IAAI;AAChB,4BAAkB,MAAM,IAAI,WAAW,SAAO;AAAA,eACzC;AACL,4BAAkB,WAAW,YAAY,MAAM,IAAI,SAAO;AAAA;AAAA;AAI9D,UAAI,kBAAkB,SAAO,KAAK,OAAO;AAGvC,iBAAO,MAAM,MAAM,QAAQ;AAE3B,YAAI,SAAO,iBAAiB,QAAQ;AAClC,0BAAgB;AAAA;AAAA;AAIpB,UAAI,QAAO,WAAW,GAAG,KAAK,WAAW,GAAG;AAE5C,UAAI,eAAe;AACjB,YAAI,MAAM,IAAI,IAAI;AAChB,qBAAW,GAAG,KAAK,WAAW,SAAO,eAAe,gBAAgB,SAAO;AAAA,eACtE;AACL,qBAAW,GAAG,KAAK,WAAW,YAAY,SAAO,eAAe,gBAAgB,SAAO;AAAA;AAAA,aAEpF;AACL,YAAI,MAAM,IAAI,IAAI;AAChB,qBAAW,GAAG,KAAK,MAAM,IAAI,SAAO;AAAA,eAC/B;AACL,qBAAW,GAAG,KAAK,MAAM,IAAI,SAAO;AAAA;AAGtC,mBAAW,GAAG,KAAK,WAAW,GAAG,KAAK;AAAA;AAGxC,iBAAW,GAAG,KAAK,WAAW,GAAG,KAAK,MAAM;AAAA;AAAA;AAAA;AAKlD,0BAA0B,aAAa;AAErC,SAAO,YAAY,aAAa;AAAA;AAGnB,wBAAwB,aAAa;AAClD,MAAI,OAAO,YAAY;AACvB,MAAI,kBAAkB;AACtB,MAAI;AACJ,MAAI;AACJ,MAAI,iBAAiB;AACrB,MAAI,qBAAsB,aAAY,IAAI,wBAAwB,KAAK;AACvE,MAAI,WAAW,KAAK,UAAU;AAC9B,MAAI,IAAI,KAAK,UAAU;AACvB,MAAI,YAAY,SAAS;AACzB,MAAI,WAAW,SAAS;AACxB,MAAI,UAAU,SAAS;AACvB,MAAI,aAAa,SAAS;AAE1B,sBAAoB,IAAI;AACtB,OAAG,SAAS;AAAA;AAGd,wBAAsB,QAAO;AAC3B,QAAI,CAAC,OAAM,QAAQ;AACjB,aAAO;AAAA;AAGT,aAAS,OAAO,OAAM,QAAQ;AAC5B,UAAI,OAAM,OAAO,KAAK,WAAW,OAAO;AACtC,eAAO;AAAA;AAAA;AAIX,WAAO;AAAA;AAGT,OAAK,KAAK,SAAU,KAAK;AACvB,QAAI,SAAS,KAAK,iBAAiB;AACnC,QAAI,cAAc,OAAO;AACzB,QAAI,SAAQ,OAAO;AACnB,QAAI,aAAY,OAAO;AACvB,QAAI,YAAY,KAAK,aAAa;AAClC,QAAI,aAAa,UAAU,SAAS;AAEpC,QAAI,gBAAgB,WAAW,IAAI,eAAe,UAAU,IAAI,CAAC,YAAY,SAAS;AACtF,QAAI,gBAAgB,WAAW,IAAI;AACnC,QAAI,eAAe,WAAW,IAAI;AAClC,QAAI,eAAe,cAAa,WAAW,IAAI,iBAAiB;AAChE,QAAI,cAAc,WAAW,IAAI;AACjC,QAAI,iBAAiB,UAAU,SAAS;AACxC,QAAI,eAAe,eAAe,IAAI;AACtC,mBAAe,cAAa,cAAc;AAC1C,QAAI,gBAAgB,eAAe,IAAI;AACvC,oBAAgB,cAAa,eAAe;AAE5C,QAAI,KAAK,IAAI,YAAY,WAAW,YAAY,cAAc,oBAAoB;AAChF,WAAK,OAAM,QAAQ;AACnB,aAAM,SAAS;AACf;AAAA;AAGF,QAAI,CAAC,aAAa,SAAQ;AACxB;AAAA;AAGF,QAAI,WAAY,aAAY,aAAa,YAAY,YAAY;AACjE,QAAI,KAAK,KAAK,IAAI;AAClB,QAAI,KAAK,KAAK,IAAI;AAClB,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,SAAK,YAAY;AACjB,SAAK,YAAY;AACjB,QAAI,gBAAgB,kBAAkB,YAAY,kBAAkB;AAEpE,QAAI,kBAAkB,UAAU;AAC9B,cAAQ,YAAY;AACpB,cAAQ,YAAY;AACpB,kBAAY;AAAA,WACP;AACL,UAAI,KAAM,iBAAiB,aAAY,IAAI,YAAY,MAAM,IAAI,KAAK,YAAY,IAAI,MAAM;AAC5F,UAAI,KAAM,iBAAiB,aAAY,IAAI,YAAY,MAAM,IAAI,KAAK,YAAY,IAAI,MAAM;AAC5F,cAAQ,KAAK,KAAK;AAClB,cAAQ,KAAK,KAAK;AAElB,UAAI,CAAC,eAAe;AAElB,YAAI,KAAK,KAAK,KAAM,gBAAe,IAAI,YAAY;AACnD,YAAI,KAAK,KAAK,KAAM,gBAAe,IAAI,YAAY;AACnD,YAAI,KAAK,KAAM,MAAK,IAAI,KAAK,KAAK;AAClC,YAAI,KAAK;AAET,YAAI,iBAAiB,QAAQ;AAE3B,kBAAQ,KAAK,IAAI,WAAW,eAAe,WAAW,YAAY;AAAA,eAC7D;AACL,kBAAQ,KAAM,MAAK,IAAI,CAAC,gBAAgB;AAAA;AAG1C,gBAAQ;AACR,sBAAa,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI;AAAA;AAGzC,kBAAY,gBAAgB,WAAW,iBAAiB,SAAS,KAAK,IAAI,UAAU,SAAS,KAAK,IAAI,SAAS;AAAA;AAGjH,QAAI;AACJ,QAAI,UAAS,WAAW,IAAI;AAE5B,QAAI,OAAO,YAAW,UAAU;AAC9B,oBAAc,UAAU,MAAK,KAAK;AAAA,eACzB,kBAAkB,UAAU;AACrC,oBAAc;AAAA,WACT;AACL,UAAI,cAAc,KAAK,IAAI,CAAC,WAAW,KAAK,KAAK,CAAC;AAElD,UAAI,YAAW,YAAY,YAAW,MAAM;AAC1C,sBAAc;AAAA,iBACL,YAAW,gBAAgB,kBAAkB,aAAa,kBAAkB,SAAS;AAC9F,sBAAc,cAAc,KAAK,KAAK;AAEtC,YAAI,cAAc,KAAK,KAAK,GAAG;AAC7B,yBAAe,KAAK;AAAA;AAAA,aAEjB;AACL,sBAAc;AAAA;AAAA;AAIlB,qBAAiB,CAAC,CAAC;AACnB,WAAM,IAAI;AACV,WAAM,IAAI;AACV,WAAM,WAAW;AACjB,WAAM,SAAS;AAAA,MACb,eAAe;AAAA;AAGjB,QAAI,CAAC,eAAe;AAClB,UAAI,WAAW,OAAM,kBAAkB;AACvC,eAAS,eAAe,OAAM;AAE9B,UAAI,SAAU,QAAM,MAAM,UAAU,KAAK;AACzC,eAAS,KAAK,SAAS;AACvB,eAAS,UAAU;AACnB,sBAAgB,KAAK;AAAA,QACnB,OAAO;AAAA,QACP,WAAW;AAAA,QACX,UAAU;AAAA,QACV,KAAK;AAAA,QACL,MAAM;AAAA,QACN,cAAc,eAAe,IAAI;AAAA,QACjC,iBAAiB,eAAe,IAAI;AAAA,QACpC,eAAe,IAAI,cAAM,IAAI;AAAA,QAC7B,YAAY;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,MAAM;AAAA;AAAA,WAEH;AACL,aAAM,SAAS;AAAA,QACb,OAAO;AAAA;AAET,UAAI,eAAc,OAAM,OAAO;AAE/B,UAAI,cAAa;AACf,qBAAY,KAAK,OAAM;AACvB,qBAAY,KAAK,OAAM;AAAA;AAAA;AAI3B,WAAO,cAAc;AAAA,MACnB,QAAQ;AAAA;AAAA;AAIZ,MAAI,CAAC,kBAAkB,YAAY,IAAI,sBAAsB;AAC3D,iBAAa,iBAAiB,IAAI,IAAI,GAAG,WAAW,YAAY,UAAU;AAAA;AAG5E,WAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,QAAI,WAAS,gBAAgB;AAC7B,QAAI,QAAQ,SAAO;AACnB,QAAI,YAAY,SAAO;AACvB,QAAI,eAAe,MAAM,MAAM,MAAM,MAAM,MAAM;AAEjD,QAAI,OAAO;AACT,YAAM,SAAS;AAAA,QACb,OAAO,SAAO;AAAA;AAGhB,UAAI,cAAc;AAChB,aAAK,MAAM,QAAQ;AACnB,cAAM,SAAS;AAAA;AAGjB,UAAI,cAAc,MAAM,OAAO;AAE/B,UAAI,aAAa;AACf,oBAAY,KAAK,MAAM;AACvB,oBAAY,KAAK,MAAM;AAAA;AAAA;AAI3B,QAAI,WAAW;AACb,UAAI,aAAa,SAAO;AAExB,UAAI,gBAAgB,CAAC,YAAY;AAC/B,aAAK,UAAU,QAAQ;AACvB,kBAAU,SAAS;AAAA,aACd;AACL,uBAAe,YAAY,SAAO;AAClC,0BAAkB,YAAY,SAAO,eAAe,SAAO;AAC3D,kBAAU,SAAS;AAAA,UACjB,QAAQ;AAAA;AAGV,cAAM,aAAa,sBAAsB;AAAA,UACvC,QAAQ,IAAI,cAAM,WAAW,GAAG,IAAI,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACvYrD,+BAA+B,OAAO,OAAO,YAAY;AAC9D,MAAI,eAAe,MAAM,IAAI;AAE7B,MAAI,gBAAgB,MAAM;AACxB,WAAO,aAAa;AAAA,MAClB,mBAAmB;AAAA,MACnB,cAAc;AAAA,QACZ;AAAA;AAGN,MAAI,CAAC,QAAQ,eAAe;AAC1B,mBAAe,CAAC,cAAc;AAAA;AAGhC,SAAO;AAAA,IACL,mBAAmB,aAAa,aAAa,IAAI,MAAM;AAAA,IACvD,cAAc,aAAa,aAAa,IAAI,MAAM;AAAA;AAAA;;;ACHtD,IAAI,WAEJ,SAAU,QAAQ;AAChB,YAAU,WAAU;AAEpB,qBAAkB,MAAM,KAAK,YAAY;AACvC,QAAI,QAAQ,OAAO,KAAK,SAAS;AAEjC,UAAM,KAAK;AACX,QAAI,OAAO,IAAY;AAEvB,UAAM,eAAe;AAErB,UAAM,WAAW,MAAM,KAAK,YAAY;AAExC,WAAO;AAAA;AAGT,YAAS,UAAU,aAAa,SAAU,MAAM,KAAK,YAAY,aAAa;AAC5E,QAAI,SAAS;AACb,QAAI,cAAc,KAAK;AACvB,QAAI,YAAY,KAAK,aAAa;AAClC,QAAI,gBAAgB,UAAU,SAAS;AACvC,QAAI,WAAS,KAAK,cAAc;AAGhC,QAAI,cAAc,OAAO,sBAAsB,UAAU,SAAS,cAAc,UAAQ,OAAO;AAE/F,QAAI,MAAM,YAAY,aAAa;AAEjC,aAAO,SAAS;AAChB;AAAA;AAGF,QAAI,aAAa;AACf,aAAO,SAAS;AAChB,UAAI,gBAAgB,YAAY,WAAW;AAE3C,UAAI,kBAAkB,SAAS;AAC7B,eAAO,MAAM,IAAI,SAAO;AACxB,QAAQ,UAAU,QAAQ;AAAA,UACxB,OAAO;AAAA,YACL,GAAG,SAAO;AAAA;AAAA,WAEX,aAAa;AAAA,aAEb;AACD,YAAI,cAAc,MAAM;AACtB,iBAAO,SAAS;AAAA,YACd;AAAA,YACA,UAAU;AAAA;AAEZ,UAAQ,UAAU,QAAQ;AAAA,YACxB,OAAO;AAAA,cACL,YAAY,SAAO;AAAA,cACnB,UAAU,SAAO;AAAA;AAAA,aAElB,aAAa;AAAA,eACX;AACL,iBAAO,MAAM,WAAW,SAAO;AAC/B,UAAQ,YAAY,QAAQ;AAAA,YAC1B,OAAO;AAAA,cACL,UAAU,SAAO;AAAA;AAAA,aAElB,aAAa;AAAA;AAAA;AAAA,WAGjB;AACL,mBAAa;AAEb,MAAQ,YAAY,QAAQ;AAAA,QAC1B,OAAO;AAAA,SACN,aAAa;AAAA;AAGlB,WAAO,SAAS,KAAK,cAAc,KAAK;AACxC,6BAAyB,QAAQ;AACjC,QAAI,WAAY,UAAO,aAAa,SAAO,YAAY;AACvD,QAAI,SAAS,YAAY,IAAI;AAC7B,QAAI,KAAK,KAAK,IAAI,YAAY;AAC9B,QAAI,KAAK,KAAK,IAAI,YAAY;AAC9B,QAAI,cAAc,UAAU,WAAW;AACvC,mBAAe,OAAO,KAAK,UAAU;AAErC,SAAK,aAAa,aAAa,MAAM;AAErC,WAAO,YAAY,YAAY,QAAQ,SAAS;AAAA,MAC9C,GAAG,SAAO,IAAK,eAAc,IAAI,WAAW,cAAc,IAAI,gBAAgB,IAAI;AAAA,OACjF,sBAAsB,cAAc,SAAS,cAAc;AAC9D,WAAO,OAAO,YAAY,WAAW;AAAA,MACnC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO,sBAAsB,UAAU,SAAS,CAAC,UAAU,eAAe;AAAA;AAE5E,WAAO,OAAO,YAAY,SAAS;AAAA,MACjC,OAAO,sBAAsB,UAAU,SAAS,CAAC,QAAQ,eAAe;AAAA;AAE1E,QAAI,YAAY,OAAO;AACvB,QAAI,YAAY,OAAO;AACvB,iBAAa,OAAO,UAAU,YAAY,WAAW;AAAA,MACnD,GAAG;AAAA,MACH,GAAG;AAAA;AAGL,WAAO,UAAU,YAAY,WAAW;AAAA,MACtC,GAAG;AAAA,MACH,GAAG;AAAA;AAEL,wBAAoB,MAAM,cAAc,IAAI,UAAU,cAAc,IAAI;AAAA;AAG1E,YAAS,UAAU,eAAe,SAAU,aAAa,MAAM,KAAK;AAClE,QAAI,SAAS;AACb,QAAI,YAAY,KAAK,aAAa;AAClC,QAAI,iBAAiB,UAAU,SAAS;AACxC,QAAI,QAAQ,KAAK,cAAc,KAAK;AACpC,QAAI,cAAc,SAAS,MAAM;AACjC,QAAI,gBAAgB,SAAS,MAAM;AACnC,kBAAc,QAAQ,qBAAqB,YAAY;AAAA,MACrD,cAAc,KAAK;AAAA,MACnB,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,aAAa,YAAY,kBAAkB,KAAK,aAAa,KAAK,QAAQ;AAAA;AAE5E,QAAI,YAAY,OAAO;AAEvB,WAAO,cAAc;AAAA,MAEnB,UAAU;AAAA,MACV,UAAU;AAAA;AAIZ,cAAU,KAAK;AAAA,MACb,IAAI;AAAA;AAEN,QAAI,gBAAgB,YAAY,IAAI,CAAC,SAAS;AAE9C,QAAI,kBAAkB,aAAa,kBAAkB,SAAS;AAC5D,aAAO;AAAA,WACF;AACL,UAAI,WAAW,KAAK;AAEpB,UAAI,CAAC,UAAU;AACb,mBAAW,IAAY;AACvB,aAAK,iBAAiB;AAAA;AAIxB,wBAAkB,MAAM,yBAAyB,YAAY;AAAA,QAC3D,QAAQ;AAAA,QACR,SAAS,UAAU,eAAe,IAAI,CAAC,aAAa,aAAa,eAAe;AAAA;AAAA;AAAA;AAKtF,SAAO;AAAA,EACC;AAGV,IAAI,UAEJ,SAAU,QAAQ;AAChB,YAAU,UAAS;AAEnB,sBAAmB;AACjB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,wBAAwB;AAC9B,WAAO;AAAA;AAGT,WAAQ,UAAU,OAAO,WAAY;AACnC,QAAI,cAAc,IAAY;AAC9B,SAAK,eAAe;AAAA;AAGtB,WAAQ,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK,SAAS;AACvE,QAAI,OAAO,YAAY;AACvB,QAAI,UAAU,KAAK;AACnB,QAAI,QAAQ,KAAK;AACjB,QAAI;AAEJ,QAAI,CAAC,WAAW,KAAK,UAAU,GAAG;AAChC,UAAI,QAAQ,KAAK,cAAc;AAE/B,eAAS,IAAI,GAAG,MAAM,SAAS,MAAM,eAAe,IAAI,KAAK,SAAS,EAAE,GAAG;AACzE,gBAAQ,KAAK,cAAc;AAAA;AAG7B,UAAI,OAAO;AACT,qBAAa,MAAM;AAAA;AAAA;AAKvB,QAAI,KAAK,oBAAoB;AAC3B,YAAM,OAAO,KAAK;AAAA;AAIpB,QAAI,KAAK,YAAY,KAAK,YAAY,IAAI,oBAAoB;AAC5D,UAAI,SAAS,IAAY,eAAO;AAAA,QAC9B,OAAO,kBAAkB,aAAa;AAAA;AAExC,aAAO,SAAS,YAAY,SAAS,oBAAoB;AACzD,WAAK,qBAAqB;AAC1B,YAAM,IAAI;AAAA;AAGZ,SAAK,KAAK,SAAS,IAAI,SAAU,KAAK;AACpC,UAAI,WAAW,IAAI,SAAS,MAAM,KAAK;AACvC,WAAK,iBAAiB,KAAK;AAC3B,YAAM,IAAI;AAAA,OACT,OAAO,SAAU,QAAQ,QAAQ;AAClC,UAAI,WAAW,QAAQ,iBAAiB;AACxC,eAAS,WAAW,MAAM,QAAQ;AAClC,eAAS,IAAI;AACb,YAAM,IAAI;AACV,WAAK,iBAAiB,QAAQ;AAAA,OAC7B,OAAO,SAAU,KAAK;AACvB,UAAI,WAAW,QAAQ,iBAAiB;AACxC,MAAQ,yBAAyB,UAAU,aAAa;AAAA,OACvD;AACH,mBAAY;AAEZ,QAAI,YAAY,IAAI,2BAA2B,aAAa;AAC1D,WAAK,QAAQ;AAAA;AAAA;AAIjB,WAAQ,UAAU,UAAU,WAAY;AAAA;AAExC,WAAQ,UAAU,eAAe,SAAU,OAAO,aAAa;AAC7D,QAAI,OAAO,YAAY;AACvB,QAAI,aAAa,KAAK,cAAc;AAEpC,QAAI,YAAY;AACd,UAAI,KAAK,MAAM,KAAK,WAAW;AAC/B,UAAI,KAAK,MAAM,KAAK,WAAW;AAC/B,UAAI,SAAS,KAAK,KAAK,KAAK,KAAK,KAAK;AACtC,aAAO,UAAU,WAAW,KAAK,UAAU,WAAW;AAAA;AAAA;AAI1D,WAAQ,OAAO;AACf,SAAO;AAAA,EACP;AAEF,IAAO,kBAAQ;;;AC3PA,gCAAgC,aAAa,KAAK,UAAU;AACzE,QAAM,QAAQ,QAAQ;AAAA,IACpB,iBAAiB;AAAA,OACd,OAAO;AAAA,IACV,cAAc,YAAY;AAAA,KACzB;AACH,MAAI,SAAS,YAAY;AACzB,MAAI,aAAa,wBAAwB,QAAQ,KAAK;AACtD,MAAI,OAAO,IAAI,mBAAW,YAAY;AACtC,OAAK,SAAS,QAAQ;AACtB,SAAO;AAAA;;;ACnBT,IAAI,uBAEJ,WAAY;AACV,iCACA,0BACA,YAAY;AACV,SAAK,4BAA4B;AACjC,SAAK,cAAc;AAAA;AAGrB,wBAAqB,UAAU,cAAc,WAAY;AACvD,QAAI,UAAU,KAAK;AAInB,WAAO,QAAQ,SAAS,QAAQ;AAAA;AAGlC,wBAAqB,UAAU,cAAc,SAAU,MAAM;AAC3D,QAAI,UAAU,KAAK;AAEnB,WAAO,QAAQ,YAAY,SAAS;AAAA;AAGtC,wBAAqB,UAAU,cAAc,SAAU,MAAM;AAI3D,QAAI,wBAAwB,KAAK;AAEjC,WAAO,sBAAsB,YAAY;AAAA;AAG3C,wBAAqB,UAAU,gBAAgB,SAAU,WAAW,KAAK;AAEvE,QAAI,wBAAwB,KAAK;AAEjC,WAAO,sBAAsB,cAAc,WAAW;AAAA;AAGxD,SAAO;AAAA;AAGT,IAAO,+BAAQ;;;ACvCf,IAAI,iBAEJ,SAAU,QAAQ;AAChB,YAAU,iBAAgB;AAE1B,6BAA0B;AACxB,WAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAAA;AAO7D,kBAAe,UAAU,OAAO,SAAU,QAAQ;AAChD,WAAO,UAAU,KAAK,MAAM,MAAM;AAIlC,SAAK,uBAAuB,IAAI,6BAAqB,AAAO,KAAK,KAAK,SAAS,OAAO,AAAO,KAAK,KAAK,YAAY;AAEnH,SAAK,kBAAkB;AAAA;AAOzB,kBAAe,UAAU,cAAc,WAAY;AACjD,WAAO,UAAU,YAAY,MAAM,MAAM;AAAA;AAO3C,kBAAe,UAAU,iBAAiB,WAAY;AACpD,WAAO,uBAAuB,MAAM;AAAA,MAClC,iBAAiB,CAAC;AAAA,MAClB,iBAAiB,AAAO,MAAM,8BAA8B;AAAA;AAAA;AAQhE,kBAAe,UAAU,gBAAgB,SAAU,WAAW;AAC5D,QAAI,OAAO,KAAK;AAEhB,QAAI,SAAS,OAAO,UAAU,cAAc,KAAK,MAAM;AAGvD,QAAI,YAAY;AAChB,SAAK,KAAK,KAAK,aAAa,UAAU,SAAU,OAAO;AACrD,gBAAU,KAAK;AAAA;AAEjB,WAAO,UAAU,wBAAwB,WAAW,WAAW,KAAK,UAAU,IAAI;AAClF,WAAO,MAAM,KAAK;AAClB,WAAO;AAAA;AAGT,kBAAe,UAAU,oBAAoB,SAAU,QAAQ;AAE7D,IAAU,gBAAgB,QAAQ,aAAa,CAAC;AAChD,QAAI,qBAAqB,OAAO;AAChC,QAAI,uBAAuB,OAAO,SAAS;AAE3C,uBAAmB,OAAO,mBAAmB,QAAQ,OAAO,MAAM;AAClE,yBAAqB,OAAO,qBAAqB,QAAQ,OAAO,SAAS,MAAM;AAAA;AAGjF,kBAAe,OAAO;AACtB,kBAAe,gBAAgB;AAAA,IAC7B,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,iBAAiB;AAAA,IACjB,SAAS;AAAA,IAET,QAAQ,CAAC,OAAO;AAAA,IAChB,QAAQ,CAAC,GAAG;AAAA,IAEZ,WAAW;AAAA,IACX,YAAY;AAAA,IAEZ,UAAU;AAAA,IAGV,mBAAmB;AAAA,IAEnB,gBAAgB;AAAA,IAKhB,kBAAkB;AAAA,IAElB,kBAAkB;AAAA,IAElB,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,OAAO;AAAA,MAGL,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MAEV,UAAU;AAAA,MAEV,SAAS;AAAA,MAGT,cAAc;AAAA,MAEd,aAAa;AAAA,MAEb,qBAAqB;AAAA;AAAA,IAMvB,WAAW;AAAA,MACT,MAAM;AAAA,MAEN,QAAQ;AAAA,MAER,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,cAAc;AAAA,MACd,iBAAiB;AAAA,MACjB,WAAW;AAAA,QAET,OAAO;AAAA,QACP,MAAM;AAAA;AAAA;AAAA,IAGV,WAAW;AAAA,MACT,aAAa;AAAA,MACb,YAAY;AAAA;AAAA,IAEd,iBAAiB;AAAA,IACjB,kBAAkB;AAAA,MAChB,OAAO;AAAA,MACP,SAAS;AAAA;AAAA,IAEX,aAAa;AAAA,MAEX,aAAa;AAAA;AAAA,IAEf,UAAU;AAAA,MACR,OAAO;AAAA,MACP,WAAW;AAAA;AAAA,IAGb,mBAAmB;AAAA,IAEnB,eAAe;AAAA,IACf,mBAAmB;AAAA,IAEnB,qBAAqB;AAAA,IACrB,uBAAuB;AAAA,IACvB,yBAAyB;AAAA,IACzB,iBAAiB;AAAA;AAEnB,SAAO;AAAA,EACP;AAEF,IAAO,oBAAQ;;;ACrLA,4BAA4B,YAAY;AACrD,SAAO;AAAA,IACL;AAAA,IACA,OAAO,SAAU,aAAa,SAAS;AACrC,UAAI,OAAO,YAAY;AACvB,WAAK,WAAW,SAAU,KAAK;AAE7B,YAAI,WAAW,KAAK,aAAa;AACjC,YAAI,WAAW,KAAK,IAAI,UAAU;AAElC,YAAI,OAAO,aAAa,YAAY,CAAC,MAAM,aAAa,WAAW,GAAG;AACpE,iBAAO;AAAA;AAGT,eAAO;AAAA;AAAA;AAAA;AAAA;;;ACPR,kBAAiB,WAAW;AACjC,YAAU,kBAAkB;AAC5B,YAAU,oBAAoB;AAC9B,+BAA6B,OAAO,UAAU;AAC9C,YAAU,eAAe,MAAM,WAAW;AAC1C,YAAU,kBAAkB,WAAW;AACvC,YAAU,kBAAkB,mBAAmB;AAAA;;;ACTjD,IAAI,qBAEJ,SAAU,QAAQ;AAChB,YAAU,qBAAoB;AAE9B,iCAA8B;AAC5B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,oBAAmB;AAChC,UAAM,kBAAkB;AACxB,WAAO;AAAA;AAGT,sBAAmB,UAAU,iBAAiB,SAAU,QAAQ,SAAS;AACvE,WAAO,yBAAiB,MAAM,MAAM;AAAA,MAClC,oBAAoB;AAAA;AAAA;AAIxB,sBAAmB,UAAU,iBAAiB,WAAY;AACxD,QAAI,cAAc,KAAK,OAAO;AAE9B,QAAI,eAAe,MAAM;AAEvB,aAAO,KAAK,OAAO,QAAQ,MAAM,KAAK,IAAI;AAAA;AAG5C,WAAO;AAAA;AAGT,sBAAmB,UAAU,0BAA0B,WAAY;AACjE,QAAI,uBAAuB,KAAK,OAAO;AAEvC,QAAI,wBAAwB,MAAM;AAEhC,aAAO,KAAK,OAAO,QAAQ,MAAM,KAAK,IAAI;AAAA;AAG5C,WAAO;AAAA;AAGT,sBAAmB,UAAU,gBAAgB,SAAU,WAAW,MAAM,WAAW;AACjF,WAAO,UAAU,MAAM,KAAK,cAAc;AAAA;AAG5C,sBAAmB,OAAO;AAC1B,sBAAmB,eAAe,CAAC,QAAQ,SAAS,OAAO,cAAc;AACzE,sBAAmB,gBAAgB;AAAA,IACjC,kBAAkB;AAAA,IAClB,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,iBAAiB;AAAA,IACjB,YAAY;AAAA,IAEZ,OAAO;AAAA,IAEP,gBAAgB;AAAA,IAEhB,WAAW;AAAA,MACT,SAAS;AAAA;AAAA,IAGX,UAAU;AAAA,MACR,OAAO;AAAA;AAAA,IAIT,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,WAAW;AAAA,QACT,aAAa;AAAA;AAAA;AAAA,IAGjB,qBAAqB;AAAA,MACnB,aAAa;AAAA;AAAA;AAIjB,SAAO;AAAA,EACP;AAEF,IAAO,wBAAQ;;;AC7Ef,IAAI,uBAAuB;AAE3B,IAAI,uBAEJ,WAAY;AACV,mCAAgC;AAAA;AAEhC,SAAO;AAAA;AAGT,IAAI,kBAEJ,SAAU,QAAQ;AAChB,YAAU,kBAAiB;AAE3B,4BAAyB,MAAM;AAC7B,WAAO,OAAO,KAAK,MAAM,SAAS;AAAA;AAGpC,mBAAgB,UAAU,kBAAkB,WAAY;AACtD,WAAO,IAAI;AAAA;AAGb,mBAAgB,UAAU,YAAY,SAAU,MAAM,OAAO;AAC3D,QAAI,SAAS,MAAM;AACnB,QAAI,OAAO,MAAM;AACjB,QAAI,cAAc,KAAK;AACvB,QAAI,mBAAmB,YAAY;AACnC,QAAI,MAAM,KAAK,aAAa,KAAK,eAAe;AAChD,QAAI,WAAW,OAAO,KAAK,KAAK;AAEhC,QAAI,UAAU;AACZ,WAAK,OAAO;AACZ;AAAA;AAGF,SAAK,OAAO;AAEZ,aAAS,IAAI,GAAG,IAAI,OAAO,UAAS;AAClC,UAAI,IAAI,OAAO;AACf,UAAI,IAAI,OAAO;AAEf,UAAI,MAAM,MAAM,MAAM,IAAI;AACxB;AAAA;AAGF,UAAI,KAAK,iBAAiB,CAAC,KAAK,cAAc,QAAQ,GAAG,IAAI;AAC3D;AAAA;AAGF,uBAAiB,IAAI,IAAI,KAAK,KAAK;AACnC,uBAAiB,IAAI,IAAI,KAAK,KAAK;AACnC,uBAAiB,QAAQ,KAAK;AAC9B,uBAAiB,SAAS,KAAK;AAC/B,kBAAY,UAAU,MAAM,kBAAkB;AAAA;AAAA;AAIlD,mBAAgB,UAAU,aAAa,WAAY;AACjD,QAAI,QAAQ,KAAK;AACjB,QAAI,SAAS,MAAM;AACnB,QAAI,OAAO,MAAM;AACjB,QAAI,MAAM,KAAK;AAEf,QAAI,CAAC,KAAK;AACR;AAAA;AAIF,aAAS,IAAI,GAAG,IAAI,OAAO,UAAS;AAClC,UAAI,IAAI,OAAO;AACf,UAAI,IAAI,OAAO;AAEf,UAAI,MAAM,MAAM,MAAM,IAAI;AACxB;AAAA;AAGF,UAAI,KAAK,iBAAiB,CAAC,KAAK,cAAc,QAAQ,GAAG,IAAI;AAC3D;AAAA;AAKF,UAAI,SAAS,IAAI,KAAK,KAAK,GAAG,IAAI,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK;AAAA;AAAA;AAIjE,mBAAgB,UAAU,gBAAgB,SAAU,GAAG,GAAG;AAGxD,QAAI,QAAQ,KAAK;AACjB,QAAI,SAAS,MAAM;AACnB,QAAI,OAAO,MAAM;AACjB,QAAI,IAAI,KAAK,IAAI,KAAK,IAAI;AAC1B,QAAI,IAAI,KAAK,IAAI,KAAK,IAAI;AAI1B,aAAS,MAAM,OAAO,SAAS,IAAI,GAAG,OAAO,GAAG,OAAO;AACrD,UAAI,IAAI,MAAM;AACd,UAAI,KAAK,OAAO,KAAK,IAAI;AACzB,UAAI,KAAK,OAAO,IAAI,KAAK,IAAI;AAE7B,UAAI,KAAK,MAAM,KAAK,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AACpD,eAAO;AAAA;AAAA;AAIX,WAAO;AAAA;AAGT,SAAO;AAAA,EACC;AAEV,IAAI,kBAEJ,WAAY;AACV,8BAA2B;AACzB,SAAK,QAAQ,IAAY;AAAA;AAG3B,mBAAgB,UAAU,eAAe,WAAY;AACnD,WAAO,CAAC,KAAK;AAAA;AAGf;AAKA,mBAAgB,UAAU,aAAa,SAAU,MAAM,KAAK;AAC1D,SAAK,MAAM;AACX,QAAI,WAAW,IAAI,gBAAgB;AAAA,MACjC,WAAW;AAAA,MACX,QAAQ;AAAA;AAEV,aAAS,SAAS;AAAA,MAChB,QAAQ,KAAK,UAAU;AAAA;AAGzB,SAAK,WAAW,UAAU,MAAM,OAAO;AAEvC,SAAK,MAAM,IAAI;AACf,SAAK,eAAe;AAAA;AAGtB,mBAAgB,UAAU,eAAe,SAAU,MAAM;AACvD,QAAI,KAAK,cAAc;AACrB;AAAA;AAGF,QAAI,SAAS,KAAK,UAAU;AAC5B,SAAK,MAAM,UAAU,SAAU,OAAO;AACpC,UAAI,MAAM,cAAc,MAAM;AAC5B,YAAI,OAAO,OAAM,WAAW,MAAM,cAAc;AAChD,YAAI,aAAa,MAAM,aAAa,IAAI;AACxC,iBAAS,IAAI,aAAa,OAAO,QAAQ,YAAY;AAAA;AAGvD,YAAM,SAAS,UAAU;AAAA;AAAA;AAI7B,mBAAgB,UAAU,2BAA2B,SAAU,MAAM;AACnE,SAAK,MAAM;AAEX,SAAK;AAIL,QAAI,KAAK,UAAU,KAAK;AACtB,UAAI,CAAC,KAAK,cAAc;AACtB,aAAK,eAAe,IAAI,+BAAuB;AAAA,UAC7C,QAAQ;AAAA;AAAA;AAIZ,WAAK,MAAM,IAAI,KAAK;AAAA,WACf;AACL,WAAK,eAAe;AAAA;AAAA;AAIxB,mBAAgB,UAAU,oBAAoB,SAAU,YAAY,MAAM,KAAK;AAC7E,QAAI;AAEJ,QAAI,KAAK,cAAc;AACrB,iBAAW,IAAI;AAEf,WAAK,aAAa,eAAe,UAAU;AAAA,WACtC;AACL,iBAAW,IAAI,gBAAgB;AAAA,QAC7B,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,YAAY,WAAW;AAAA,QACvB,UAAU,WAAW;AAAA;AAEvB,eAAS,cAAc;AACvB,WAAK,MAAM,IAAI;AAAA;AAGjB,aAAS,SAAS;AAAA,MAChB,QAAQ,KAAK,UAAU;AAAA;AAGzB,SAAK,WAAW,UAAU,MAAM,CAAC,CAAC,KAAK,cAAc;AAAA;AAGvD,mBAAgB,UAAU,aAAa,SAAU,UAAU,MAAM,eAAe,KAAK;AACnF,QAAI,YAAY,KAAK;AACrB,UAAM,OAAO;AACb,QAAI,OAAO,KAAK,UAAU;AAC1B,aAAS,SAAS,QAAQ,gBAAgB,QAAQ,OAAO,CAAC,MAAM;AAChE,aAAS,gBAAgB,IAAI,aAAa;AAE1C,aAAS,cAAc,aAAa,KAAK,UAAU,WAAW,GAAG,GAAG,GAAG;AAEvE,aAAS,WAAW,SAAS,YAAY;AACzC,QAAI,gBAAgB,SAAS,MAAM,KAAK,KAAK;AAC7C,aAAS,SACT,UAAU,SAAS,aAAa,aAAa,gBAAgB,CAAC,SAAS,cAAc,iBAAiB,CAAC;AACvG,QAAI,cAAc,KAAK,UAAU;AACjC,QAAI,cAAc,eAAe,YAAY;AAE7C,QAAI,aAAa;AACf,eAAS,SAAS;AAAA;AAGpB,QAAI,CAAC,eAAe;AAClB,UAAI,WAAW,UAAU;AAGzB,eAAS,cAAc,UAAU;AACjC,eAAS,GAAG,aAAa,SAAU,GAAG;AACpC,iBAAS,YAAY;AACrB,YAAI,YAAY,SAAS,cAAc,EAAE,SAAS,EAAE;AAEpD,YAAI,aAAa,GAAG;AAElB,mBAAS,YAAY,YAAa,UAAS,cAAc;AAAA;AAAA;AAAA;AAAA;AAMjE,mBAAgB,UAAU,SAAS,WAAY;AAC7C,SAAK;AAEL,SAAK,eAAe;AACpB,SAAK,MAAM;AAAA;AAGb,mBAAgB,UAAU,oBAAoB,WAAY;AACxD,QAAI,cAAc,KAAK;AAEvB,QAAI,aAAa;AACf,kBAAY;AAAA;AAAA;AAIhB,SAAO;AAAA;AAGT,IAAO,0BAAQ;;;ACzQf,IAAI,cAEJ,SAAU,QAAQ;AAChB,YAAU,cAAa;AAEvB,0BAAuB;AACrB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,aAAY;AACzB,WAAO;AAAA;AAGT,eAAY,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK;AAClE,QAAI,OAAO,YAAY;AAEvB,QAAI,aAAa,KAAK,kBAAkB,MAAM;AAE9C,eAAW,WAAW,MAAM;AAAA,MAK1B,WAAW,KAAK,cAAc;AAAA;AAEhC,SAAK,YAAY;AAAA;AAGnB,eAAY,UAAU,2BAA2B,SAAU,aAAa,SAAS,KAAK;AACpF,QAAI,OAAO,YAAY;AAEvB,QAAI,aAAa,KAAK,kBAAkB,MAAM;AAE9C,eAAW,yBAAyB;AACpC,SAAK,YAAY;AAAA;AAGnB,eAAY,UAAU,oBAAoB,SAAU,YAAY,aAAa,SAAS;AACpF,SAAK,YAAY,kBAAkB,YAAY,YAAY,WAAW;AAAA,MACpE,WAAW,KAAK,cAAc;AAAA;AAGhC,SAAK,YAAY,WAAW,QAAQ,YAAY,UAAU;AAAA;AAG5D,eAAY,UAAU,kBAAkB,SAAU,aAAa,SAAS,KAAK;AAC3E,QAAI,OAAO,YAAY;AAGvB,SAAK,MAAM;AAEX,QAAI,CAAC,KAAK,aAAa,KAAK,UAAU,OAAO,CAAC,KAAK,YAAY,gBAAgB;AAC7E,aAAO;AAAA,QACL,QAAQ;AAAA;AAAA,WAEL;AACL,UAAI,MAAM,aAAa,IAAI,MAAM,aAAa,SAAS;AAEvD,UAAI,IAAI,UAAU;AAChB,YAAI,SAAS;AAAA,UACX,OAAO;AAAA,UACP,KAAK,KAAK;AAAA,UACV,OAAO,KAAK;AAAA,WACX;AAAA;AAGL,WAAK,YAAY,aAAa;AAAA;AAAA;AAIlC,eAAY,UAAU,gBAAgB,SAAU,aAAa;AAC3D,QAAI,WAAW,YAAY;AAC3B,QAAI,WAAW,YAAY,SAAS,WAAW,SAAS;AACxD,WAAO,YAAY,IAAI,QAAQ,QAAQ,WAAW;AAAA;AAGpD,eAAY,UAAU,oBAAoB,SAAU,MAAM,aAAa;AACrE,QAAI,aAAa,KAAK;AACtB,QAAI,kBAAkB,YAAY;AAClC,QAAI,cAAc,gBAAgB;AAElC,QAAI,CAAC,cAAc,gBAAgB,KAAK,cAAc;AACpD,oBAAc,WAAW;AACzB,mBAAa,KAAK,cAAc,cAAc,IAAI,4BAAoB,IAAI;AAC1E,WAAK,eAAe;AACpB,WAAK,MAAM;AAAA;AAGb,SAAK,MAAM,IAAI,WAAW;AAC1B,WAAO;AAAA;AAGT,eAAY,UAAU,SAAS,SAAU,SAAS,KAAK;AACrD,SAAK,eAAe,KAAK,YAAY,OAAO;AAC5C,SAAK,cAAc;AAAA;AAGrB,eAAY,UAAU,UAAU,WAAY;AAAA;AAE5C,eAAY,OAAO;AACnB,SAAO;AAAA,EACP;AAEF,IAAO,sBAAQ;;;ACzGf,IAAI,YAEJ,SAAU,QAAQ;AAChB,YAAU,YAAW;AAErB,wBAAqB;AACnB,WAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAAA;AAG7D,aAAU,OAAO;AACjB,aAAU,eAAe,CAAC,SAAS;AACnC,aAAU,aAAa;AACvB,aAAU,gBAAgB;AAAA,IACxB,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IAER,cAAc;AAAA,IAGd,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,aAAa;AAAA;AAEf,SAAO;AAAA,EACP;AAEF,IAAO,oBAAQ;;;AC5Bf,IAAI,qBAEJ,SAAU,QAAQ;AAChB,YAAU,qBAAoB;AAE9B,iCAA8B;AAC5B,WAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAAA;AAG7D,sBAAmB,UAAU,mBAAmB,WAAY;AAC1D,WAAO,KAAK,uBAAuB,QAAQ,kBAAkB,OAAO;AAAA;AAGtE,sBAAmB,OAAO;AAC1B,SAAO;AAAA,EACP;AAGF,AAAO,MAAM,oBAAoB;;;ACvBjC,IAAI,gBAAgB;AAAA,EAClB,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,GAAG;AAAA,EAEH,SAAS;AAAA,EAET,MAAM;AAAA,EAEN,cAAc;AAAA,EAEd,YAAY;AAAA,EACZ,cAAc;AAAA,IACZ,UAAU;AAAA,IACV,UAAU;AAAA,IACV,aAAa;AAAA;AAAA,EAGf,eAAe;AAAA,EAEf,SAAS;AAAA,EAET,QAAQ;AAAA,EAER,cAAc;AAAA,EACd,SAAS;AAAA,IACP,MAAM;AAAA;AAAA,EAER,aAAa;AAAA,EACb,UAAU;AAAA,IACR,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,iBAAiB;AAAA,IACjB,WAAW;AAAA,MACT,OAAO;AAAA,MACP,OAAO;AAAA,MACP,MAAM;AAAA;AAAA,IAGR,QAAQ,CAAC,QAAQ;AAAA,IACjB,YAAY,CAAC,IAAI;AAAA;AAAA,EAEnB,UAAU;AAAA,IACR,MAAM;AAAA,IAEN,QAAQ;AAAA,IAER,QAAQ;AAAA,IACR,WAAW;AAAA,MACT,OAAO;AAAA;AAAA;AAAA,EAGX,WAAW;AAAA,IACT,MAAM;AAAA,IAEN,QAAQ;AAAA,IACR,QAAQ;AAAA,IAER,cAAc;AAAA,IAEd,cAAc;AAAA,IACd,QAAQ;AAAA,IAER,UAAU;AAAA;AAAA,EAEZ,WAAW;AAAA,IACT,MAAM;AAAA,IACN,WAAW;AAAA,MACT,OAAO,CAAC;AAAA,MACR,OAAO;AAAA,MACP,MAAM;AAAA;AAAA;AAAA,EAGV,WAAW;AAAA,IACT,MAAM;AAAA,IACN,WAAW;AAAA,MACT,OAAO,CAAC,yBAAyB;AAAA;AAAA;AAAA;AAIvC,IAAI,eAAe,AAAO,MAAM;AAAA,EAE9B,aAAa;AAAA,EAEb,eAAe;AAAA,EAIf,WAAW;AAAA,IACT,MAAM;AAAA;AAAA,EAER,UAAU;AAAA,IAER,gBAAgB;AAAA,IAChB,UAAU;AAAA;AAAA,EAEZ,WAAW;AAAA,IACT,UAAU;AAAA;AAAA,GAEX;AACH,IAAI,YAAY,AAAO,MAAM;AAAA,EAC3B,aAAa,CAAC,GAAG;AAAA,EACjB,UAAU;AAAA,IAER,MAAM;AAAA;AAAA,EAER,UAAU;AAAA,IAER,MAAM;AAAA;AAAA,EAIR,aAAa;AAAA,EACb,WAAW;AAAA,IAET,MAAM;AAAA,IAEN,aAAa;AAAA,IAEb,QAAQ;AAAA,IAER,WAAW;AAAA;AAAA,EAGb,gBAAgB;AAAA,IACd,MAAM;AAAA,IACN,WAAW;AAAA,MACT,OAAO;AAAA,MACP,OAAO;AAAA;AAAA;AAAA,GAGV;AACH,IAAI,WAAW,AAAO,MAAM;AAAA,EAC1B,OAAO;AAAA,EACP,aAAa;AAAA,EACb,WAAW;AAAA,IAET,cAAc;AAAA,IACd,cAAc;AAAA,IACd,MAAM;AAAA,MACJ,SAAS;AAAA,QACP,YAAY;AAAA;AAAA;AAAA;AAAA,EAIlB,WAAW;AAAA,IACT,MAAM;AAAA;AAAA,GAEP;AACH,IAAI,UAAU,AAAO,SAAS;AAAA,EAC5B,OAAO;AAAA,EACP,SAAS;AAAA,GACR;AACH,IAAO,sBAAQ;AAAA,EACb,UAAU;AAAA,EACV,OAAO;AAAA,EACP,MAAM;AAAA,EACN,KAAK;AAAA;;;AC9JA,IAAI,aAAa;AAAA,EACtB,OAAO;AAAA,EACP,UAAU;AAAA,EACV,MAAM;AAAA,EACN,KAAK;AAAA;;;ACOQ,0BAA0B,WAAW,UAAU,oBAAoB,oBAAoB;AACpG,OAAK,YAAY,SAAU,GAAG,UAAU;AACtC,QAAI,iBAAgB,MAAM,MAAM,IAAI,oBAAY,WAAW,OAAO,oBAAoB;AAEtF,QAAI,YAEJ,SAAU,QAAQ;AAChB,gBAAU,YAAW;AAErB,4BAAqB;AACnB,YAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,cAAM,OAAO,WAAW,UAAU;AAClC,eAAO;AAAA;AAGT,iBAAU,UAAU,uBAAuB,SAAU,QAAQ,SAAS;AACpE,YAAI,aAAa,gBAAgB;AACjC,YAAI,sBAAsB,aAAa,gBAAgB,UAAU;AACjE,YAAI,aAAa,QAAQ;AACzB,cAAM,QAAQ,WAAW,IAAI,WAAW;AACxC,cAAM,QAAQ,KAAK;AACnB,eAAO,OAAO,YAAY;AAE1B,YAAI,YAAY;AACd,2BAAiB,QAAQ,qBAAqB;AAAA;AAAA;AAIlD,iBAAU,UAAU,gBAAgB,WAAY;AAC9C,YAAI,aAAa,KAAK;AAEtB,YAAI,WAAW,SAAS,YAAY;AAClC,eAAK,gBAAgB,oBAAY,kBAAkB;AAAA;AAAA;AASvD,iBAAU,UAAU,gBAAgB,SAAU,SAAS;AACrD,YAAI,SAAS,KAAK;AAGlB,YAAI,OAAO,SAAS,YAAY;AAC9B,cAAI,SAAS;AACX,mBAAO,OAAO;AAAA;AAGhB,iBAAO,KAAK,cAAc;AAAA;AAAA;AAI9B,iBAAU,UAAU,iBAAiB,WAAY;AAC/C,eAAO,KAAK;AAAA;AAGd,iBAAU,OAAO,WAAW,UAAU;AACtC,iBAAU,gBAAgB;AAC1B,aAAO;AAAA,MACP;AAEF,cAAU,uBAAuB;AAAA;AAEnC,YAAU,yBAAyB,WAAW,QAAQ;AAAA;AAGxD,qBAAqB,QAAQ;AAE3B,SAAO,OAAO,QAAS,QAAO,OAAO,aAAa;AAAA;;;AC7E7C,IAAI,wBAAwB,CAAC,KAAK;AAEzC,qCAAqC,QAAO;AAC1C,SAAO,OAAM,SAAS,cAAc,OAAM,SAAS;AAAA;AAGrD,IAAI,cAEJ,SAAU,QAAQ;AAChB,YAAU,cAAa;AAEvB,0BAAuB;AACrB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO;AACb,UAAM,aAAa;AACnB,WAAO;AAAA;AAQT,eAAY,UAAU,sBAAsB,WAAY;AACtD,SAAK,aAAa,KAAK,gBAAgB;AACvC,QAAI,aAAa,KAAK,QAAQ,KAAK;AACnC,QAAI,aAAa,KAAK,QAAQ,KAAK;AAEnC,QAAI,CAAC,4BAA4B,eAAe,CAAC,4BAA4B,aAAa;AACxF;AAAA;AAGF,QAAI,eAAe,WAAW;AAC9B,QAAI,eAAe,WAAW;AAC9B,QAAI,QAAQ,KAAK,YAAY,CAAC,aAAa,IAAI,aAAa;AAC5D,QAAI,MAAM,KAAK,YAAY,CAAC,aAAa,IAAI,aAAa;AAC1D,QAAI,aAAa,aAAa,KAAK,aAAa;AAChD,QAAI,aAAa,aAAa,KAAK,aAAa;AAEhD,QAAI,CAAC,cAAc,CAAC,YAAY;AAC9B;AAAA;AAIF,QAAI,SAAU,KAAI,KAAK,MAAM,MAAM;AACnC,QAAI,SAAU,KAAI,KAAK,MAAM,MAAM;AACnC,QAAI,aAAa,MAAM,KAAK,aAAa,KAAK;AAC9C,QAAI,aAAa,MAAM,KAAK,aAAa,KAAK;AAC9C,QAAI,IAAI,KAAK,aAAa,CAAC,QAAQ,GAAG,GAAG,QAAQ,YAAY;AAC7D,SAAK,gBAAgB,OAAO,IAAI;AAAA;AAOlC,eAAY,UAAU,cAAc,WAAY;AAC9C,WAAO,KAAK,eAAe,WAAW,MAAM,KAAK,eAAe,QAAQ,MAAM,KAAK,QAAQ;AAAA;AAG7F,eAAY,UAAU,eAAe,SAAU,OAAO;AACpD,QAAI,QAAQ,KAAK,QAAQ;AACzB,QAAI,QAAQ,KAAK,QAAQ;AACzB,WAAO,MAAM,QAAQ,MAAM,aAAa,MAAM,QAAQ,MAAM,QAAQ,MAAM,aAAa,MAAM;AAAA;AAG/F,eAAY,UAAU,cAAc,SAAU,MAAM;AAClD,WAAO,KAAK,QAAQ,KAAK,YAAY,KAAK,OAAO,KAAK,QAAQ,KAAK,YAAY,KAAK;AAAA;AAGtF,eAAY,UAAU,cAAc,SAAU,MAAM,OAAO,KAAK;AAC9D,UAAM,OAAO;AACb,QAAI,OAAO,KAAK;AAChB,QAAI,OAAO,KAAK;AAEhB,QAAI,KAAK,cACN,QAAQ,QAAQ,SAAS,SAAS,QAAQ,QAAQ,SAAS,OAAO;AACnE,aAAO,eAAe,KAAK,MAAM,KAAK;AAAA;AAGxC,QAAI,QAAQ,KAAK,QAAQ;AACzB,QAAI,QAAQ,KAAK,QAAQ;AACzB,QAAI,KAAK,MAAM,cAAc,MAAM,YAAY,MAAM;AACrD,QAAI,KAAK,MAAM,cAAc,MAAM,YAAY,MAAM;AACrD,WAAO;AAAA;AAGT,eAAY,UAAU,YAAY,SAAU,MAAM,KAAK;AACrD,QAAI,SAAS,KAAK,QAAQ,KAAK;AAC/B,QAAI,SAAS,KAAK,QAAQ,KAAK;AAC/B,QAAI,cAAc,OAAO;AACzB,QAAI,cAAc,OAAO;AACzB,QAAI,IAAI,OAAO,MAAM,KAAK;AAC1B,QAAI,IAAI,OAAO,MAAM,KAAK;AAC1B,UAAM,OAAO;AACb,QAAI,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,YAAY,IAAI,YAAY,KAAK,IAAI,KAAK,IAAI,YAAY,IAAI,YAAY;AAC9G,QAAI,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,YAAY,IAAI,YAAY,KAAK,IAAI,KAAK,IAAI,YAAY,IAAI,YAAY;AAC9G,WAAO;AAAA;AAGT,eAAY,UAAU,cAAc,SAAU,OAAO,OAAO;AAC1D,QAAI,MAAM;AAEV,QAAI,KAAK,eAAe;AACtB,aAAO,eAAe,KAAK,OAAO,KAAK;AAAA;AAGzC,QAAI,QAAQ,KAAK,QAAQ;AACzB,QAAI,QAAQ,KAAK,QAAQ;AACzB,QAAI,KAAK,MAAM,YAAY,MAAM,aAAa,MAAM,KAAK;AACzD,QAAI,KAAK,MAAM,YAAY,MAAM,aAAa,MAAM,KAAK;AACzD,WAAO;AAAA;AAGT,eAAY,UAAU,eAAe,SAAU,MAAM;AACnD,WAAO,KAAK,QAAQ,KAAK,QAAQ,MAAM,MAAM;AAAA;AAQ/C,eAAY,UAAU,UAAU,WAAY;AAC1C,QAAI,UAAU,KAAK,QAAQ,KAAK;AAChC,QAAI,UAAU,KAAK,QAAQ,KAAK;AAChC,QAAI,IAAI,KAAK,IAAI,QAAQ,IAAI,QAAQ;AACrC,QAAI,IAAI,KAAK,IAAI,QAAQ,IAAI,QAAQ;AACrC,QAAI,QAAQ,KAAK,IAAI,QAAQ,IAAI,QAAQ,MAAM;AAC/C,QAAI,SAAS,KAAK,IAAI,QAAQ,IAAI,QAAQ,MAAM;AAChD,WAAO,IAAI,qBAAa,GAAG,GAAG,OAAO;AAAA;AAGvC,SAAO;AAAA,EACP;AAGF,IAAO,sBAAQ;;;AC5If,IAAI,SAEJ,SAAU,QAAQ;AAChB,YAAU,SAAQ;AAElB,mBAAgB,KAAK,QAAO,aAAa,UAAU,WAAU;AAC3D,QAAI,QAAQ,OAAO,KAAK,MAAM,KAAK,QAAO,gBAAgB;AAO1D,UAAM,QAAQ;AACd,UAAM,OAAO,YAAY;AACzB,UAAM,WAAW,aAAY;AAC7B,WAAO;AAAA;AAGT,UAAO,UAAU,eAAe,WAAY;AAC1C,QAAI,YAAW,KAAK;AACpB,WAAO,cAAa,SAAS,cAAa;AAAA;AAY5C,UAAO,UAAU,kBAAkB,SAAU,MAAK;AAChD,QAAI,MAAM,KAAK;AACf,QAAI,KAAK,KAAK,cAAc,IAAI;AAChC,QAAI,KAAK,KAAK,cAAc,IAAI;AAChC,YAAO,IAAI,KAAK,IAAI,MAAM,IAAI;AAC9B,WAAO;AAAA;AAGT,UAAO,UAAU,cAAc,SAAU,OAAO,OAAO;AACrD,WAAO,KAAK,YAAY,KAAK,aAAa,MAAM,KAAK,QAAQ,MAAM,IAAI,KAAK;AAAA;AAQ9E,UAAO,UAAU,sBAAsB,SAAU,MAAM;AACrD,QAAI,KAAK,SAAS,YAAY;AAC5B,aAAO;AAAA;AAGT,SAAK,MAAM,OAAO,mBAAmB;AACrC,SAAK,MAAM,YAAY;AAAA;AAGzB,SAAO;AAAA,EACP;AAEF,IAAO,iBAAQ;;;AC1DR,iBAAgB,WAAW,WAAW,KAAK;AAChD,QAAM,OAAO;AACb,MAAI,OAAO,UAAU;AACrB,MAAI,OAAO,UAAU;AACrB,MAAI,WAAS;AACb,MAAI,oBAAoB,KAAK,kBAAkB;AAC/C,MAAI,kBAAkB,KAAK;AAC3B,MAAI,eAAe,oBAAoB,WAAW;AAClD,MAAI,UAAU,KAAK;AACnB,MAAI,OAAO,KAAK;AAChB,MAAI,YAAY,CAAC,KAAK,GAAG,KAAK,IAAI,KAAK,OAAO,KAAK,GAAG,KAAK,IAAI,KAAK;AACpE,MAAI,MAAM;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,IACL,QAAQ;AAAA,IACR,QAAQ;AAAA;AAEV,MAAI,aAAa,UAAU,IAAI,aAAa;AAC5C,MAAI,WAAW,YAAY,MAAM,CAAC,UAAU,KAAK,YAAY,UAAU,KAAK,cAAc,CAAC,UAAU,KAAK,YAAY,UAAU,KAAK;AAErI,MAAI,mBAAmB;AACrB,QAAI,cAAc,kBAAkB,cAAc,kBAAkB,YAAY;AAChF,aAAS,IAAI,UAAU,KAAK,IAAI,KAAK,IAAI,aAAa,SAAS,KAAK,SAAS;AAAA;AAI/E,WAAO,WAAW,CAAC,YAAY,MAAM,SAAS,IAAI,iBAAiB,UAAU,IAAI,YAAY,MAAM,SAAS,IAAI,iBAAiB,UAAU;AAE3I,WAAO,WAAW,KAAK,KAAK,IAAK,aAAY,MAAM,IAAI;AAEvD,MAAI,SAAS;AAAA,IACX,KAAK;AAAA,IACL,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,OAAO;AAAA;AAET,WAAO,iBAAiB,SAAO,gBAAgB,SAAO,gBAAgB,OAAO;AAC7E,WAAO,cAAc,oBAAoB,SAAS,IAAI,oBAAoB,SAAS,IAAI,UAAU;AAEjG,MAAI,UAAU,IAAI,CAAC,YAAY,YAAY;AACzC,aAAO,gBAAgB,CAAC,SAAO;AAAA;AAGjC,MAAI,AAAO,SAAS,IAAI,aAAa,UAAU,IAAI,CAAC,aAAa,aAAa;AAC5E,aAAO,iBAAiB,CAAC,SAAO;AAAA;AAIlC,MAAI,cAAc,UAAU,IAAI,CAAC,aAAa;AAC9C,WAAO,cAAc,iBAAiB,QAAQ,CAAC,cAAc;AAE7D,WAAO,KAAK;AACZ,SAAO;AAAA;AAEF,6BAA6B,aAAa;AAC/C,SAAO,YAAY,IAAI,wBAAwB;AAAA;AAE1C,wBAAwB,aAAa;AAC1C,MAAI,eAAe;AAAA,IACjB,YAAY;AAAA,IACZ,YAAY;AAAA;AAEd,EAAO,KAAK,cAAc,SAAU,GAAG,KAAK;AAC1C,QAAI,WAAW,IAAI,QAAQ,UAAU;AACrC,QAAI,YAAY,YAAY,uBAAuB,UAAU,kBAAkB,OAAO;AAEtF,QAAI,MAAuC;AACzC,UAAI,CAAC,WAAW;AACd,cAAM,IAAI,MAAM,WAAW,OAAO,AAAO,UAAU,YAAY,IAAI,WAAW,UAAU,YAAY,IAAI,WAAW,OAAO,KAAK;AAAA;AAAA;AAInI,iBAAa,OAAO;AAAA;AAEtB,SAAO;AAAA;;;ACpET,IAAI,OAEJ,WAAY;AACV,iBAAc,WAAW,SAAS,KAAK;AAErC,SAAK,OAAO;AACZ,SAAK,aAAa;AAClB,SAAK,cAAc;AACnB,SAAK,WAAW;AAChB,SAAK,YAAY;AACjB,SAAK,qBAAqB;AAC1B,SAAK,aAAa;AAElB,SAAK,eAAe,WAAW,SAAS;AAExC,SAAK,QAAQ;AAAA;AAGf,QAAK,UAAU,UAAU,WAAY;AACnC,WAAO,KAAK;AAAA;AAGd,QAAK,UAAU,SAAS,SAAU,SAAS,KAAK;AAC9C,QAAI,UAAU,KAAK;AAEnB,SAAK,aAAa,SAAS,KAAK;AAEhC,SAAK,QAAQ,GAAG,SAAU,OAAO;AAC/B,sBAAgB,MAAM,OAAO,MAAM;AAAA;AAErC,SAAK,QAAQ,GAAG,SAAU,OAAO;AAC/B,sBAAgB,MAAM,OAAO,MAAM;AAAA;AAGrC,QAAI,gBAAgB;AACpB,SAAK,QAAQ,GAAG,SAAU,OAAO;AAC/B,oBAAc,SAAS,KAAK,OAAO;AAAA;AAErC,SAAK,QAAQ,GAAG,SAAU,OAAO;AAC/B,oBAAc,SAAS,KAAK,OAAO;AAAA;AAIrC,SAAK,OAAO,KAAK,OAAO;AAAA;AAO1B,QAAK,UAAU,SAAS,SAAU,WAAW,KAAK,oBAAoB;AACpE,QAAI,kBAAkB,UAAU;AAChC,QAAI,iBAAiB,CAAC,sBAAsB,UAAU,IAAI;AAC1D,QAAI,WAAW,cAAc,iBAAiB;AAAA,MAC5C,OAAO,IAAI;AAAA,MACX,QAAQ,IAAI;AAAA;AAEd,SAAK,QAAQ;AACb,QAAI,WAAW,KAAK;AACpB;AAEA,QAAI,gBAAgB;AAClB,WAAK,UAAU,SAAU,MAAM;AAC7B,YAAI,CAAC,KAAK,MAAM,IAAI,CAAC,aAAa,YAAY;AAC5C,cAAI,iBAAiB,uBAAuB;AAE5C,cAAI,gBAAgB;AAClB,gBAAI,MAAM,KAAK,iBAAiB,WAAW;AAC3C,gBAAI,SAAS,KAAK,MAAM,IAAI,CAAC,aAAa;AAC1C,qBAAS,QAAQ,eAAe,OAAO;AAEvC,gBAAI,KAAK,aAAa,OAAO;AAC3B,uBAAS,KAAK,eAAe,SAAS;AAAA,uBAC7B,KAAK,aAAa,QAAQ;AACnC,uBAAS,KAAK,eAAe,QAAQ;AAAA;AAAA;AAAA;AAAA;AAK7C;AAAA;AAGF,SAAK,KAAK,aAAa,SAAU,OAAO;AAGtC,YAAM;AAAA;AAGR,0BAAsB;AACpB,WAAK,UAAU,SAAU,MAAM;AAC7B,YAAI,eAAe,KAAK;AACxB,YAAI,SAAS,eAAe,CAAC,GAAG,SAAS,SAAS,CAAC,GAAG,SAAS;AAC/D,YAAI,MAAM,KAAK,UAAU,IAAI;AAC7B,aAAK,UAAU,OAAO,MAAM,OAAO,IAAI;AACvC,4BAAoB,MAAM,eAAe,SAAS,IAAI,SAAS;AAAA;AAAA;AAAA;AAKrE,QAAK,UAAU,UAAU,SAAU,KAAK,WAAW;AACjD,QAAI,eAAe,KAAK,SAAS;AAEjC,QAAI,gBAAgB,MAAM;AACxB,aAAO,aAAa,aAAa;AAAA;AAAA;AAYrC,QAAK,UAAU,UAAU,WAAY;AACnC,WAAO,KAAK,UAAU;AAAA;AAGxB,QAAK,UAAU,eAAe,SAAU,YAAY,YAAY;AAC9D,QAAI,cAAc,QAAQ,cAAc,MAAM;AAC5C,UAAI,MAAM,MAAM,aAAa,MAAM;AACnC,aAAO,KAAK,WAAW;AAAA;AAGzB,QAAI,SAAS,aAAa;AACxB,mBAAa,WAAW;AACxB,mBAAa,WAAW;AAAA;AAG1B,aAAS,IAAI,GAAG,YAAY,KAAK,aAAa,IAAI,UAAU,QAAQ,KAAK;AACvE,UAAI,UAAU,GAAG,QAAQ,KAAK,UAAU,cAAc,UAAU,GAAG,QAAQ,KAAK,UAAU,YAAY;AACpG,eAAO,UAAU;AAAA;AAAA;AAAA;AAKvB,QAAK,UAAU,gBAAgB,WAAY;AACzC,WAAO,KAAK,YAAY;AAAA;AAO1B,QAAK,UAAU,iBAAiB,SAAU,SAAS,QAAQ,OAAO;AAChE,QAAI,SAAS,KAAK,mBAAmB;AAErC,WAAO,OAAO,YAAY,OAAO,UAAU,YAAY,SAAS,OAAO,OAAO,OAAO,KAAK,cAAc,OAAO,KAAK,YAAY,UAAU;AAAA;AAO5I,QAAK,UAAU,mBAAmB,SAAU,SAAS,QAAQ,OAAO;AAClE,QAAI,SAAS,KAAK,mBAAmB;AAErC,WAAO,OAAO,YAAY,OAAO,UAAU,YAAY,SAAS,OAAO,OAAO,OAAO,KAAK,YAAY,OAAO,KAAK,aAAa,UAAU;AAAA;AAG3I,QAAK,UAAU,qBAAqB,SAAU,QAAQ;AACpD,QAAI,cAAc,OAAO;AACzB,QAAI,aAAa,OAAO,cAAc,eAAe,YAAY,uBAAuB,SAAS,kBAAkB,OAAO;AAC1H,QAAI,aAAa,OAAO,cAAc,eAAe,YAAY,uBAAuB,SAAS,kBAAkB,OAAO;AAC1H,QAAI,YAAY,OAAO;AACvB,QAAI,aAAa,KAAK;AACtB,QAAI;AACJ,QAAI;AAEJ,QAAI,aAAa;AACf,kBAAY,YAAY;AACxB,cAAQ,YAAY,aAAa,KAAM,aAAY;AAAA,eAC1C,cAAc,YAAY;AACnC,kBAAY,KAAK,aAAa,WAAW,gBAAgB,WAAW;AAAA,eAC3D,YAAY;AACrB,aAAO,KAAK,QAAQ,KAAK,WAAW;AAAA,eAC3B,YAAY;AACrB,aAAO,KAAK,QAAQ,KAAK,WAAW;AAAA,eAE7B,WAAW;AAChB,UAAI,OAAO,UAAU;AAErB,UAAI,SAAS,MAAM;AACjB,oBAAY,KAAK,YAAY;AAAA;AAAA;AAInC,WAAO;AAAA,MACL;AAAA,MACA;AAAA;AAAA;AAQJ,QAAK,UAAU,eAAe,SAAU,OAAO;AAC7C,QAAI,QAAQ,KAAK,YAAY;AAE7B,QAAI,OAAO;AACT,aAAO,MAAM,aAAa;AAAA;AAAA;AAQ9B,QAAK,UAAU,iBAAiB,SAAU,WAAW,SAAS,KAAK;AACjE,QAAI,QAAQ;AAEZ,QAAI,OAAO;AACX,QAAI,mBAAmB;AAAA,MACrB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,MACL,QAAQ;AAAA;AAEV,QAAI,UAAU;AAAA,MACZ,GAAG;AAAA,MACH,GAAG;AAAA;AAEL,QAAI,YAAY;AAAA,MACd,GAAG;AAAA,MACH,GAAG;AAAA;AAGL,YAAQ,cAAc,SAAS,kBAAkB,MAAM;AACvD,YAAQ,cAAc,SAAS,kBAAkB,MAAM;AAEvD,QAAI,CAAC,UAAU,KAAK,CAAC,UAAU,GAAG;AAEhC,WAAK,WAAW;AAChB,WAAK,YAAY;AACjB;AAAA;AAGF,SAAK,WAAW;AAEhB,SAAK,QAAQ,GAAG,SAAU,OAAO,YAAY;AAC3C,WAAK,QAAQ,GAAG,SAAU,OAAO,YAAY;AAC3C,YAAI,MAAM,MAAM,aAAa,MAAM;AACnC,YAAI,YAAY,IAAI,oBAAY;AAChC,kBAAU,SAAS;AACnB,kBAAU,QAAQ;AAClB,cAAM,WAAW,OAAO;AAExB,cAAM,YAAY,KAAK;AAEvB,kBAAU,QAAQ;AAClB,kBAAU,QAAQ;AAAA;AAAA;AAItB,+BAA2B,SAAS;AAClC,aAAO,SAAU,WAAW,KAAK;AAC/B,YAAI,CAAC,oBAAoB,WAAW,YAAY;AAC9C;AAAA;AAGF,YAAI,eAAe,UAAU,IAAI;AAEjC,YAAI,YAAY,KAAK;AAEnB,cAAI,iBAAiB,SAAS,iBAAiB,UAAU;AAEvD,2BAAe,iBAAiB,SAAS,QAAQ;AAAA;AAAA,eAE9C;AAEL,cAAI,iBAAiB,UAAU,iBAAiB,SAAS;AAEvD,2BAAe,iBAAiB,OAAO,UAAU;AAAA;AAAA;AAIrD,yBAAiB,gBAAgB;AACjC,YAAI,OAAO,IAAI,eAAO,SAAS,mBAAmB,YAAY,CAAC,GAAG,IAAI,UAAU,IAAI,SAAS;AAC7F,YAAI,aAAa,KAAK,SAAS;AAC/B,aAAK,SAAS,cAAc,UAAU,IAAI;AAC1C,aAAK,UAAU,UAAU,IAAI;AAE7B,kBAAU,OAAO;AAEjB,aAAK,QAAQ;AAEb,aAAK,OAAO;AAEZ,aAAK,QAAQ;AAEb,aAAK,UAAU,KAAK;AAEpB,gBAAQ,SAAS,OAAO;AACxB,kBAAU;AAAA;AAAA;AAAA;AAShB,QAAK,UAAU,eAAe,SAAU,SAAS,WAAW;AAE1D,SAAK,KAAK,WAAW,SAAU,MAAM;AACnC,WAAK,MAAM,UAAU,UAAU;AAE/B,UAAI,KAAK,SAAS,YAAY;AAC5B,YAAI,mBAAmB,KAAK,MAAM,IAAI;AACtC,aAAK,MAAM,YAAY;AAAA;AAAA;AAG3B,YAAQ,WAAW,SAAU,aAAa;AACxC,UAAI,oBAAoB,cAAc;AACpC,YAAI,eAAe,eAAe;AAClC,YAAI,aAAa,aAAa;AAC9B,YAAI,aAAa,aAAa;AAE9B,YAAI,CAAC,oBAAoB,YAAY,cAAc,CAAC,oBAAoB,YAAY,YAAY;AAC9F;AAAA;AAGF,YAAI,YAAY,KAAK,aAAa,WAAW,gBAAgB,WAAW;AACxE,YAAI,OAAO,YAAY;AACvB,YAAI,QAAQ,UAAU,QAAQ;AAC9B,YAAI,QAAQ,UAAU,QAAQ;AAE9B,YAAI,KAAK,SAAS,QAAQ;AACxB,sBAAY,MAAM;AAClB,sBAAY,MAAM;AAAA;AAAA;AAAA,OAGrB;AAEH,yBAAqB,MAAM,MAAM;AAC/B,WAAK,wBAAwB,MAAM,KAAK,MAAM,SAAU,KAAK;AAC3D,aAAK,MAAM,oBAAoB,MAAM;AAAA;AAAA;AAAA;AAS3C,QAAK,UAAU,iBAAiB,SAAU,KAAK;AAC7C,QAAI,WAAW;AACf,QAAI,YAAY;AAChB,SAAK,KAAK,iBAAiB,SAAU,WAAW;AAC9C,UAAI,WAAW,OAAO,QAAQ,QAAQ,SAAS,UAAU,QAAQ,OAAO,UAAU;AAClF,UAAI,YAAY,UAAU,aAAa;AACvC,cAAQ,UAAU,YAAY,KAAK,SAAS,KAAK;AACjD,cAAQ,WAAW,aAAa,KAAK,UAAU,KAAK;AAAA;AAEtD,WAAO;AAAA,MACL;AAAA,MACA;AAAA;AAAA;AAIJ,QAAK,SAAS,SAAU,SAAS,KAAK;AACpC,QAAI,QAAQ;AACZ,YAAQ,cAAc,QAAQ,SAAU,WAAW,KAAK;AACtD,UAAI,OAAO,IAAI,MAAK,WAAW,SAAS;AACxC,WAAK,OAAO,UAAU;AAGtB,WAAK,OAAO,WAAW,KAAK;AAC5B,gBAAU,mBAAmB;AAC7B,YAAM,KAAK;AAAA;AAGb,YAAQ,WAAW,SAAU,aAAa;AACxC,UAAI,CAAC,oBAAoB,cAAc;AACrC;AAAA;AAGF,UAAI,eAAe,eAAe;AAClC,UAAI,aAAa,aAAa;AAC9B,UAAI,aAAa,aAAa;AAC9B,UAAI,YAAY,WAAW;AAE3B,UAAI,MAAuC;AACzC,YAAI,CAAC,WAAW;AACd,gBAAM,IAAI,MAAM,WAAW,UAAU,WAAW,IAAI,cAAc,WAAW,IAAI,WAAW,KAAK;AAAA;AAGnG,YAAI,WAAW,uBAAuB,WAAW,oBAAoB;AACnE,gBAAM,IAAI,MAAM;AAAA;AAAA;AAIpB,UAAI,OAAO,UAAU;AACrB,kBAAY,mBAAmB,KAAK,aAAa,WAAW,gBAAgB,WAAW;AAAA;AAEzF,WAAO;AAAA;AAIT,QAAK,aAAa;AAClB,SAAO;AAAA;AAOT,6BAA6B,WAAW,WAAW;AACjD,SAAO,UAAU,uBAAuB;AAAA;AAG1C,uBAAuB,SAAS,cAAc,MAC9C,eAAe;AACb,OAAK,kBAAkB,WAAY;AAEjC,WAAO,oBAAoB,CAAC,qBAAqB;AAAA;AAMnD,MAAI,YAAY,QAAQ;AACxB,MAAI;AACJ,MAAI,YAAY,KAAK;AACrB,MAAI,SAAS,UAAU,IAAI,CAAC,YAAY;AACxC,MAAI,kBAAkB,UAAU,IAAI,CAAC,YAAY;AAEjD,MAAI,CAAC,QAAQ;AACX;AAAA;AAIF,MAAI,mBAAmB,MAAM;AAC3B,QAAI,gBAAgB,UAAU,mBAAmB;AAC/C,0BAAoB,UAAU;AAAA;AAAA,SAE3B;AAEL,aAAS,OAAO,WAAW;AACzB,UAAI,UAAU,eAAe,QAAQ,gBAAgB,UAAU,SAE5D,CAAC,cAAc,mBAAmB,UAAU,QAAQ;AACrD,4BAAoB,UAAU;AAC9B;AAAA;AAAA;AAAA;AAKN,MAAI,mBAAmB;AACrB,kBAAc,mBAAmB,sBAAsB;AAAA;AAGzD,8BAA4B,OAAM;AAChC,WAAO,MAAK,MAAM,MAAM,MAAK;AAAA;AAAA;AAIjC,yBAAyB,MAAM;AAC7B,SAAO,QAAQ,KAAK,SAAS,cAAc,KAAK,SAAS,UAAU,gBAAgB;AAAA;AAGrF,6BAA6B,MAAM,WAAW;AAC5C,MAAI,aAAa,KAAK;AACtB,MAAI,gBAAgB,WAAW,KAAK,WAAW;AAE/C,OAAK,gBAAgB,KAAK,QAAQ,MAAM,SAAU,OAAO;AACvD,WAAO,QAAQ;AAAA,MACb,SAAU,OAAO;AACnB,WAAO,gBAAgB,QAAQ;AAAA;AAEjC,OAAK,eAAe,KAAK,QAAQ,MAAM,SAAU,OAAO;AACtD,WAAO,QAAQ;AAAA,MACb,SAAU,OAAO;AACnB,WAAO,gBAAgB,QAAQ;AAAA;AAAA;AAInC,IAAO,eAAQ;;;AClef,IAAI,MAAK,KAAK;AAwBd,IAAI,cAEJ,WAAY;AACV,wBAAqB,WAAW,KAAK;AACnC,SAAK,QAAQ,IAAY;AACzB,SAAK,MAAM;AACX,SAAK,YAAY;AAEjB,aAAS,KAAK;AAAA,MACZ,aAAa;AAAA,MACb,eAAe;AAAA,MACf,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,QAAQ;AAAA,MACR,iBAAiB,WAAY;AAC3B,eAAO;AAAA;AAAA;AAIX,QAAI,iBAAiB,IAAY,cAAM;AAAA,MACrC,GAAG,IAAI,SAAS;AAAA,MAChB,GAAG,IAAI,SAAS;AAAA,MAChB,UAAU,IAAI;AAAA;AAIhB,mBAAe;AACf,SAAK,kBAAkB;AAAA;AAGzB,eAAY,UAAU,aAAa,SAAU,MAAM;AACjD,WAAO,CAAC,CAAC,SAAS;AAAA;AAGpB,eAAY,UAAU,MAAM,SAAU,MAAM;AAC1C,aAAS,MAAM,KAAK,KAAK,KAAK,WAAW,KAAK,OAAO,KAAK;AAAA;AAG5D,eAAY,UAAU,WAAW,WAAY;AAC3C,WAAO,KAAK;AAAA;AAGd,eAAY,kBAAkB,SAAU,cAAc,cAAc,WAAW;AAC7E,QAAI,eAAe,UAAU,eAAe;AAC5C,QAAI;AACJ,QAAI;AAEJ,QAAI,mBAAmB,eAAe;AAEpC,0BAAoB,YAAY,IAAI,QAAQ;AAC5C,kBAAY;AAAA,eACH,mBAAmB,eAAe,MAAK;AAEhD,0BAAoB,YAAY,IAAI,WAAW;AAC/C,kBAAY;AAAA,WACP;AACL,0BAAoB;AAEpB,UAAI,eAAe,KAAK,eAAe,KAAI;AACzC,oBAAY,YAAY,IAAI,UAAU;AAAA,aACjC;AACL,oBAAY,YAAY,IAAI,SAAS;AAAA;AAAA;AAIzC,WAAO;AAAA,MACL,UAAU;AAAA,MACV;AAAA,MACA;AAAA;AAAA;AAIJ,eAAY,wBAAwB,SAAU,WAAW;AACvD,QAAI,YAAY;AAAA,MACd,eAAe,UAAU;AAAA,MACzB,gBAAgB,UAAU;AAAA;AAE5B,cAAU,UAAU,WAAW,WAAW,UAAU;AACpD,WAAO;AAAA;AAGT,eAAY,gBAAgB,SAAU,WAAW;AAC/C,QAAI,aAAa,UAAU,IAAI;AAC/B,WAAO,UAAU,IAAI,aAClB,CAAE,WAAU,IAAI,mBAAmB,cAAc,WAAW;AAAA;AAGjE,SAAO;AAAA;AAIT,IAAI,WAAW;AAAA,EACb,UAAU,SAAU,KAAK,WAAW,OAAO,gBAAgB;AACzD,QAAI,QAAQ,UAAU,IAAI,CAAC,YAAY;AAEvC,QAAI,UAAU,UAAU,IAAI,iBAAiB;AAC3C,cAAQ,IAAI,gBAAgB;AAAA;AAG9B,QAAI,CAAC,OAAO;AACV;AAAA;AAGF,QAAI,SAAS,UAAU,KAAK;AAC5B,QAAI,UAAS,eAAe;AAC5B,QAAI,MAAM,CAAC,OAAO,IAAI;AACtB,QAAI,MAAM,CAAC,OAAO,IAAI;AAEtB,QAAI,SAAQ;AACV,qBAAiB,KAAK,KAAK;AAC3B,qBAAiB,KAAK,KAAK;AAAA;AAG7B,QAAI,YAAY,OAAO;AAAA,MACrB,SAAS;AAAA,OACR,UAAU,SAAS,CAAC,YAAY,cAAc;AACjD,QAAI,OAAO,IAAY,aAAK;AAAA,MAE1B,kBAAkB;AAAA,MAClB,OAAO;AAAA,QACL,IAAI,IAAI;AAAA,QACR,IAAI,IAAI;AAAA,QACR,IAAI,IAAI;AAAA,QACR,IAAI,IAAI;AAAA;AAAA,MAEV,OAAO;AAAA,MACP,wBAAwB,IAAI,0BAA0B;AAAA,MACtD,QAAQ;AAAA,MACR,IAAI;AAAA;AAEN,SAAK,OAAO;AACZ,UAAM,IAAI;AACV,QAAI,SAAS,UAAU,IAAI,CAAC,YAAY;AAExC,QAAI,UAAU,MAAM;AAClB,UAAI,YAAY,UAAU,IAAI,CAAC,YAAY;AAE3C,UAAI,OAAO,WAAW,UAAU;AAE9B,iBAAS,CAAC,QAAQ;AAAA;AAGpB,UAAI,OAAO,cAAc,YAAY,OAAO,cAAc,UAAU;AAElE,oBAAY,CAAC,WAAW;AAAA;AAG1B,UAAI,cAAc,sBAAsB,UAAU,IAAI,CAAC,YAAY,oBAAoB,GAAG;AAC1F,UAAI,gBAAgB,UAAU;AAC9B,UAAI,iBAAiB,UAAU;AAC/B,WAAK,CAAC;AAAA,QACJ,QAAQ,IAAI,WAAW,KAAK,KAAK;AAAA,QACjC,QAAQ,YAAY;AAAA,QACpB,GAAG;AAAA,SACF;AAAA,QACD,QAAQ,IAAI,WAAW,KAAK,KAAK;AAAA,QACjC,QAAQ,YAAY;AAAA,QACpB,GAAG,KAAK,KAAM,KAAI,KAAK,IAAI,MAAO,KAAI,KAAK,IAAI,MAAO,KAAI,KAAK,IAAI,MAAO,KAAI,KAAK,IAAI;AAAA,UACrF,SAAU,OAAO,OAAO;AAC1B,YAAI,OAAO,WAAW,UAAU,OAAO,UAAU,MAAM;AACrD,cAAI,SAAS,aAAa,OAAO,QAAQ,CAAC,gBAAgB,GAAG,CAAC,iBAAiB,GAAG,eAAe,gBAAgB,UAAU,QAAQ;AAEnI,cAAI,IAAI,MAAM,IAAI,MAAM;AACxB,iBAAO,KAAK;AAAA,YACV,UAAU,MAAM;AAAA,YAChB,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI;AAAA,YAC7B,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI;AAAA,YAC7B,QAAQ;AAAA,YACR,IAAI;AAAA;AAEN,gBAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAKlB,eAAe,SAAU,KAAK,WAAW,OAAO,gBAAgB;AAC9D,QAAI,WAAW,oBAAoB,OAAO,gBAAgB,WAAW;AACrE,QAAI,WAAW,eAAe,OAAO,gBAAgB,WAAW;AAChE,uBAAmB,WAAW,UAAU;AACxC,wBAAoB,OAAO,gBAAgB,WAAW,IAAI;AAG1D,QAAI,UAAU,IAAI,CAAC,aAAa,iBAAiB;AAC/C,UAAI,YAAY,kBAAkB,IAAI,UAAU,SAAU,OAAO;AAC/D,eAAO;AAAA,UACL;AAAA,UACA,UAAU,MAAM;AAAA,UAChB,aAAa;AAAA,YACX,QAAQ,MAAM;AAAA;AAAA;AAAA;AAIpB,kBAAY;AAAA;AAAA;AAAA,EAGhB,UAAU,SAAU,KAAK,WAAW,OAAO,gBAAgB;AACzD,QAAI,OAAO,SAAS,IAAI,UAAU,UAAU,IAAI;AAEhD,QAAI,CAAC,MAAM;AACT;AAAA;AAGF,QAAI,eAAe,UAAU,IAAI;AACjC,QAAI,gBAAgB,IAAI;AACxB,QAAI,iBAAiB,UAAU,SAAS;AACxC,QAAI,MAAM,UAAU,IAAI,cAAc;AACtC,QAAI,SAAS,UAAU,KAAK;AAC5B,QAAI,YAAY,OAAO,KAAK,OAAO,KAAK,KAAK;AAC7C,QAAI,MAAM;AAAA,MAAC,iBAAiB,UAAU,OAAO,KAAK,YAAY,MAAM,iBAAiB,QAAQ,OAAO,KAAK,YAAY,MAAO,QAAO,KAAK,OAAO,MAAM;AAAA,MACrJ,qBAAqB,gBAAgB,IAAI,cAAc,gBAAgB,MAAM;AAAA;AAC7E,QAAI;AACJ,QAAI,eAAe,UAAU,IAAI;AAEjC,QAAI,gBAAgB,MAAM;AACxB,qBAAe,eAAe,MAAK;AAAA;AAGrC,QAAI;AAEJ,QAAI,qBAAqB,eAAe;AACtC,qBAAc,YAAY,gBAAgB,IAAI,UAAU,gBAAgB,OAAO,eAAe,IAAI,UAClG;AAAA,WACK;AACL,qBAAc,cAAc,IAAI,UAAU,cAAc,gBAAgB,GAAG;AAC3E,+BAAyB,IAAI;AAE7B,UAAI,0BAA0B,MAAM;AAClC,iCAAyB,KAAK,IAAI,yBAAyB,KAAK,IAAI,aAAY;AAChF,SAAC,SAAS,2BAA4B,0BAAyB;AAAA;AAAA;AAInE,QAAI,WAAW,eAAe;AAC9B,QAAI,cAAc,UAAU,IAAI,gBAAgB,SAAS;AACzD,QAAI,WAAW,YAAY;AAC3B,QAAI,WAAW,SAAS,IAAI,sBAAsB,YAAY,UAAU;AACxE,QAAI,SAAS,IAAY,aAAK;AAAA,MAC5B,GAAG,IAAI;AAAA,MACP,GAAG,IAAI;AAAA,MACP,UAAU,aAAY;AAAA,MACtB,QAAQ,YAAY,cAAc;AAAA,MAClC,OAAO,gBAAgB,gBAAgB;AAAA,QACrC,MAAM;AAAA,QACN,MAAM;AAAA,QACN,UAAU;AAAA,QACV,OAAO;AAAA,QACP;AAAA,QACA,MAAM,eAAe,kBAAkB,UAAU,IAAI,CAAC,YAAY,aAAa;AAAA,QAC/E,OAAO,eAAe,IAAI,YAAY,aAAY;AAAA,QAClD,eAAe,eAAe,IAAI,oBAAoB,aAAY;AAAA;AAAA,MAEpE,IAAI;AAAA;AAEN,IAAQ,iBAAiB;AAAA,MACvB,IAAI;AAAA,MACJ,gBAAgB;AAAA,MAChB,UAAU;AAAA;AAEZ,WAAO,aAAa;AAEpB,WAAO,OAAO;AAEd,QAAI,UAAU,IAAI,iBAAiB;AACjC,UAAI,YAAY,YAAY,sBAAsB;AAClD,gBAAU,aAAa;AACvB,gBAAU,OAAO;AACjB,gBAAU,QAAQ,YAAY;AAAA;AAIhC,mBAAe,IAAI;AACnB,WAAO;AACP,UAAM,IAAI;AACV,WAAO;AAAA;AAAA;AAIX,uBAAuB,UAAU,cAAc,YAAY,QAAQ;AACjE,MAAI,eAAe,UAAU,aAAa;AAC1C,MAAI;AACJ,MAAI;AACJ,MAAI,UAAU,OAAO,KAAK,OAAO;AACjC,MAAI,SAAS,iBAAiB,WAAW,CAAC,WAAW,iBAAiB,WAAW;AAEjF,MAAI,mBAAmB,eAAe,MAAK,IAAI;AAC7C,wBAAoB,SAAS,WAAW;AACxC,gBAAY;AAAA,aACH,mBAAmB,eAAe,MAAK,MAAM;AACtD,wBAAoB,SAAS,QAAQ;AACrC,gBAAY;AAAA,SACP;AACL,wBAAoB;AAEpB,QAAI,eAAe,MAAK,OAAO,eAAe,MAAK,GAAG;AACpD,kBAAY,SAAS,SAAS;AAAA,WACzB;AACL,kBAAY,SAAS,UAAU;AAAA;AAAA;AAInC,SAAO;AAAA,IACL,UAAU;AAAA,IACV;AAAA,IACA;AAAA;AAAA;AAIJ,4BAA4B,WAAW,UAAU,SAAS;AACxD,MAAI,oBAAoB,UAAU,OAAO;AACvC;AAAA;AAMF,MAAI,eAAe,UAAU,IAAI,CAAC,aAAa;AAC/C,MAAI,eAAe,UAAU,IAAI,CAAC,aAAa;AAG/C,aAAW,YAAY;AACvB,YAAU,WAAW;AACrB,MAAI,aAAa,SAAS;AAC1B,MAAI,YAAY,SAAS;AACzB,MAAI,YAAY,SAAS,SAAS,SAAS;AAC3C,MAAI,YAAY,SAAS,SAAS,SAAS;AAC3C,MAAI,YAAY,QAAQ;AACxB,MAAI,WAAW,QAAQ;AACvB,MAAI,WAAW,QAAQ,QAAQ,SAAS;AACxC,MAAI,WAAW,QAAQ,QAAQ,SAAS;AAExC,MAAI,iBAAiB,OAAO;AAC1B,aAAS;AACT,aAAS;AAAA,aACA,qBAAqB,YAAY,YAAY;AACtD,QAAI,cAAc;AAChB,eAAS;AACT,eAAS;AAAA,WACJ;AACL,eAAS;AACT,eAAS;AAAA;AAAA;AAIb,MAAI,iBAAiB,OAAO;AAC1B,aAAS;AACT,aAAS;AAAA,aACA,qBAAqB,WAAW,YAAY;AACrD,QAAI,cAAc;AAChB,eAAS;AACT,eAAS;AAAA,WACJ;AACL,eAAS;AACT,eAAS;AAAA;AAAA;AAAA;AAKf,kBAAkB,IAAI;AACpB,QAAO,IAAG,SAAS;AAAA;AAGrB,8BAA8B,SAAS,MAAM;AAE3C,MAAI,YAAY,WAAW,QAAQ,kBAAkB;AACrD,MAAI,WAAW,QAAQ,KAAK,kBAAkB;AAE9C,MAAI,CAAC,aAAa,CAAC,UAAU;AAC3B;AAAA;AAKF,MAAI,gBAAgB,AAAW,SAAS;AACxC,EAAW,OAAO,eAAe,eAAe,CAAC,QAAQ;AACzD,YAAU,eAAe,AAAW,IAAI,IAAI,eAAe,QAAQ;AACnE,WAAS,eAAe,AAAW,IAAI,IAAI,eAAe,KAAK;AAC/D,SAAO,UAAU,UAAU;AAAA;AAG7B,8BAA8B,cAAc;AAC1C,SAAO,iBAAiB,YAAY,iBAAiB;AAAA;AAGvD,qBAAqB,aAAa,eAAe,cAAc,eAAe,YAAY;AACxF,MAAI,UAAU;AACd,MAAI,MAAM;AACV,MAAI,MAAM;AAEV,WAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,QAAI,YAAY,YAAY,GAAG;AAC/B,QAAI,KAAK;AACT,QAAI,KAAK;AACT,QAAI,KAAK;AACT,QAAI,KAAK;AAET,QAAI,eAAe;AACjB,qBAAiB,KAAK,KAAK;AAC3B,qBAAiB,KAAK,KAAK;AAAA;AAI7B,QAAI,SAAS,IAAY,aAAK;AAAA,MAC5B,kBAAkB;AAAA,MAClB,OAAO;AAAA,QACL,IAAI,IAAI;AAAA,QACR,IAAI,IAAI;AAAA,QACR,IAAI,IAAI;AAAA,QACR,IAAI,IAAI;AAAA;AAAA,MAEV,OAAO;AAAA,MACP,IAAI;AAAA,MACJ,WAAW;AAAA,MACX,QAAQ;AAAA;AAEV,WAAO,OAAO,aAAa,MAAM,YAAY,GAAG;AAChD,YAAQ,KAAK;AAAA;AAGf,SAAO;AAAA;AAGT,6BAA6B,OAAO,gBAAgB,WAAW,KAAK;AAClE,MAAI,OAAO,UAAU;AACrB,MAAI,YAAY,UAAU,SAAS;AACnC,MAAI,QAAQ,UAAU,IAAI;AAE1B,MAAI,UAAU,UAAU,IAAI,iBAAiB;AAC3C,YAAQ,IAAI,gBAAgB;AAAA;AAG9B,MAAI,CAAC,SAAS,KAAK,MAAM,WAAW;AAClC;AAAA;AAGF,MAAI,iBAAiB,UAAU,SAAS;AACxC,MAAI,eAAe,IAAI,gBAAgB,UAAU,IAAI;AACrD,MAAI,cAAc,KAAK;AACvB,MAAI,WAAW,YAAY,aAAa,eAAe,WAAW,cAAc,SAAS,eAAe,gBAAgB;AAAA,IACtH,QAAQ,UAAU,IAAI,CAAC,YAAY,aAAa;AAAA,MAC9C;AAEJ,WAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,UAAM,IAAI,SAAS;AAAA;AAGrB,SAAO;AAAA;AAGT,6BAA6B,OAAO,gBAAgB,WAAW,eAAe;AAC5E,MAAI,OAAO,UAAU;AACrB,MAAI,iBAAiB,UAAU,SAAS;AAExC,MAAI,CAAC,eAAe,IAAI,WAAW,KAAK,MAAM,WAAW;AACvD;AAAA;AAGF,MAAI,mBAAmB,KAAK;AAE5B,MAAI,CAAC,iBAAiB,QAAQ;AAC5B;AAAA;AAGF,MAAI,iBAAiB,eAAe,SAAS;AAC7C,MAAI,eAAe,gBAAgB,eAAe,IAAI;AACtD,MAAI,qBAAqB,SAAS,eAAe,gBAAgB,SAAS,UAAU,SAAS,YAAY,gBAAgB;AAAA,IACvH,QAAQ,UAAU,IAAI,CAAC,YAAY,aAAa;AAAA;AAGlD,WAAS,IAAI,GAAG,IAAI,iBAAiB,QAAQ,KAAK;AAChD,QAAI,gBAAgB,YAAY,iBAAiB,IAAI,eAAe,WAAW,cAAc,oBAAoB,gBAAgB;AAEjI,aAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AAC7C,YAAM,IAAI,cAAc;AAAA;AAAA;AAAA;AAK9B,wBAAwB,OAAO,gBAAgB,WAAW,KAAK;AAC7D,MAAI,OAAO,UAAU;AACrB,MAAI,OAAO,SAAS,IAAI,eAAe,UAAU,IAAI,CAAC,aAAa;AAEnE,MAAI,CAAC,QAAQ,KAAK,MAAM,WAAW;AACjC;AAAA;AAGF,MAAI,aAAa,UAAU,SAAS;AACpC,MAAI,cAAc,WAAW,IAAI;AACjC,MAAI,SAAS,KAAK;AAElB,MAAI,gBAAiB,UAAS,IAAI,aAAa,WAAW,IAAI,cAAc,KAAK,MAAK;AACtF,MAAI,eAAc,YAAY,gBAAgB,IAAI,UAAU,eAAe,IAAI;AAC/E,MAAI,kBAAkB,UAAU,iBAAiB,UAAU,cAAc;AACzE,MAAI,WAAW;AACf,MAAI,SAAS,YAAY,cAAc;AACvC,MAAI,eAAe,UAAU,IAAI;AACjC,OAAK,QAAQ,SAAU,WAAW,OAAO;AACvC,QAAI,YAAY,KAAK,MAAM,SAAS,YAAY,KAAK,MAAM,oBAAoB,UAAU,aAAa,UAAU;AAChH,QAAI,iBAAiB,UAAU;AAC/B,QAAI,WAAW,UAAU;AACzB,QAAI,iBAAiB;AAErB,QAAI,mBAAmB,gBAAgB,YAAY;AACjD,UAAI,kBAAkB,gBAAgB;AAEtC,UAAI,SAAS,oBAAoB,gBAAgB,WAAW;AAC1D,yBAAiB,IAAI,cAAM,gBAAgB,WAAW,YAAY,UAAU;AAAA;AAAA;AAIhF,QAAI,YAAY,eAAe,kBAAkB,UAAU,IAAI,CAAC,YAAY,aAAa;AACzF,QAAI,YAAY,KAAK,YAAY;AACjC,QAAI,SAAS,IAAY,aAAK;AAAA,MAC5B,GAAG;AAAA,MACH,GAAG,IAAI,cAAc,IAAI,iBAAiB;AAAA,MAC1C,UAAU,aAAY;AAAA,MACtB;AAAA,MACA,IAAI,KAAM,WAAU,SAAS;AAAA,MAC7B,OAAO,gBAAgB,gBAAgB;AAAA,QACrC,MAAM;AAAA,QACN,OAAO,eAAe,WAAW,SAAS,SAAS,aAAY;AAAA,QAC/D,eAAe,eAAe,WAAW,iBAAiB,SAAS,eAAe,WAAW,YAAY,SAAS,aAAY;AAAA,QAC9H,MAAM,OAAO,cAAc,aAAa,UAOxC,KAAK,SAAS,aAAa,WAAW,KAAK,SAAS,UAAU,YAAY,KAAK,WAAW,SAAS;AAAA;AAAA;AAGvG,WAAO,OAAO,WAAW;AAEzB,QAAI,cAAc;AAChB,UAAI,YAAY,YAAY,sBAAsB;AAClD,gBAAU,aAAa;AACvB,gBAAU,QAAQ;AAClB,gBAAU,QAAQ,YAAY;AAAA;AAIhC,mBAAe,IAAI;AACnB,WAAO;AACP,aAAS,KAAK;AACd,UAAM,IAAI;AACV,WAAO;AAAA;AAET,SAAO;AAAA;AAGT,IAAO,sBAAQ;;;ACrkBR,iBAAiB,SAAS,KAAK;AACpC,MAAI,SAAS;AAAA,IAcX,UAAU;AAAA,IACV,gBAAgB;AAAA,IAMhB,kBAAkB;AAAA,IAClB,aAAa;AAAA;AAEf,kBAAgB,QAAQ,SAAS;AAEjC,SAAO,kBAAkB,kBAAkB,QAAQ;AACnD,SAAO;AAAA;AAGT,yBAAyB,QAAQ,SAAS,KAAK;AAC7C,MAAI,qBAAqB,QAAQ,aAAa;AAC9C,MAAI,yBAAyB,QAAQ,aAAa;AAElD,MAAI,cAAc,uBAAuB,IAAI,QAAQ,SAAS;AAC9D,MAAI,aAAa;AAEjB,OAAK,IAAI,wBAAwB,SAAU,UAAU;AAEnD,QAAI,CAAC,SAAS,oBAAoB;AAChC;AAAA;AAGF,QAAI,cAAc,QAAQ,SAAS;AACnC,QAAI,qBAAqB,OAAO,iBAAiB,eAAe;AAChE,WAAO,YAAY,eAAe;AAGlC,QAAI,gBAAgB,SAAS;AAC7B,QAAI,mBAAmB,cAAc,SAAS,WAAW;AACzD,SAAK,SAAS,WAAW,MAAM,qBAAqB,OAAO;AAG3D,QAAI,SAAS,kBAAkB,sBAE5B,iBAAiB,IAAI,SAAS;AAG/B,UAAI,cAAc,iBAAiB,IAAI,eAAe;AACtD,UAAI,QAAQ,iBAAiB,IAAI,CAAC,eAAe,aAAa;AAC9D,UAAI,cAAc,SAAS,eAAe,iBAAiB,IAAI,CAAC,eAAe;AAE/E,UAAI,eAAe,OAAO;AACxB,aAAK,YAAY,UAAU,MAAM,qBAAqB,QAAQ,UAAU,MAAM;AAAA;AAGhF,UAAI,OAAO;AACT,aAAK,YAAY,WAAW,MAAM,qBAAqB,SAAS;AAAA;AAAA;AAMpE,iCAA6B,aAAa,gBAAgB,MAAM;AAC9D,UAAI,mBAAmB,KAAK,MAAM,SAAS,eAAe;AAC1D,UAAI,kBAAkB,iBAAiB,IAAI;AAE3C,UAAI,CAAC,mBAAmB,oBAAoB,UAAU,CAAC,eAAe,CAAC,gBAAgB,mBAAmB;AACxG;AAAA;AAGF,UAAI,kBAAkB,MAAM;AAC1B,yBAAiB,iBAAiB,IAAI;AAAA;AAGxC,yBAAmB,cAAc,qBAAqB,MAAM,kBAAkB,wBAAwB,SAAS,aAAa,kBAAkB;AAC9I,UAAI,OAAO,iBAAiB,IAAI;AAChC,UAAI,UAAU,QAAQ,KAAK;AAC3B,UAAI,gBAAgB,kBAAkB,QAAQ,KAAK,SAAS;AAE5D,UAAI,WAAW,OAAO,SAAS,WAAW;AAAA,QACxC,KAAK;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,WAAW,gBAAgB;AAAA,QAC3B,cAAc;AAAA,QACd,WAAW;AAAA;AAEb,yBAAmB,WAAW;AAC9B,aAAO,iBAAiB,OAAO,kBAAkB;AACjD,UAAI,aAAa,kBAAkB,aAAa;AAEhD,UAAI,cAAc,MAAM;AACtB,YAAI,YAAY,WAAW,eAAgB,YAAW,cAAc;AAAA,UAClE,UAAU;AAAA;AAEZ,kBAAU,SAAS,WAAW;AAC9B,kBAAU,SAAS,YAAY,YAAY;AAC3C,iBAAS,YAAY;AAAA;AAAA;AAAA;AAAA;AAM7B,8BAA8B,MAAM,kBAAkB,wBAAwB,SAAS,aAAa,gBAAgB;AAClH,MAAI,0BAA0B,iBAAiB,SAAS;AACxD,MAAI,SAAS,CAAC,QAAQ,QAAQ,aAAa,eAAe,SAAS,aAAa,2BAA2B,yBAAyB;AACpI,MAAI,iBAAiB;AACrB,OAAK,QAAQ,SAAU,OAAO;AAC5B,mBAAe,SAAS,MAAM,wBAAwB,IAAI;AAAA;AAK5D,iBAAe,OAAO,KAAK,SAAS,cAAc,CAAC,CAAC;AAGpD,MAAI,wBAAwB,IAAI,YAAY,SAAS;AACnD,mBAAe,OAAO;AAAA;AAGxB,MAAI,cAAc,eAAe,SAAU,gBAAe,QAAQ;AAElE,cAAY,QAAQ,QAAS,aAAY,OAAO;AAEhD,MAAI,gBAAgB,SAAS;AAE3B,QAAI,8BAA8B,wBAAwB,IAAI,CAAC,SAAS;AACxE,gBAAY,OAAO,+BAA+B,OAAO,8BAA8B;AAGvF,QAAI,CAAC,gBAAgB;AACnB,UAAI,aAAa,eAAe,YAAY,wBAAwB,IAAI;AACxE,oBAAc,SAAS,aAAa,WAAW;AAAA;AAAA;AAInD,SAAO,KAAK,MAAM,SAAS,eAAe,IAAI,cAAM,gBAAgB,wBAAwB;AAAA;AAG9F,2BAA2B,QAAQ,SAAS;AAE1C,UAAQ,WAAW,SAAU,aAAa;AAExC,QAAI,WAAW,YAAY;AAC3B,QAAI,uBAAuB,YAAY,IAAI,CAAC,WAAW,YAAY;AACnE,QAAI,oBAAoB,YAAY,IAAI,CAAC,WAAW,SAAS;AAE7D,QAAI,CAAC,YAAY,yBAAyB,UAAU,yBAAyB,SAAS,yBAAyB,UAAU,sBAAsB,SAAS,YAAY,IAAI,CAAC,eAAe,SAAS,UAAU,OAAO;AAChN;AAAA;AAGF,SAAK,OAAO,iBAAiB,QAAQ,SAAS,SAAS,SAAU,UAAU;AACzE,UAAI,OAAO,SAAS;AAEpB,UAAI,SAAS,QAAQ,KAAK,SAAS,MAAM;AACvC,iBAAS,aAAa,KAAK;AAC3B,iBAAS,mBAAmB,QAAS,UAAS,kBAAkB;AAChE,iBAAS,mBAAmB,YAAY,UAAU;AAAA;AAAA;AAAA;AAAA;AAqB1D,2BAA2B,aAAa,MAAM;AAC5C,MAAI,YAAY,KAAK;AACrB,MAAI,MAAM,KAAK;AAEf,WAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,QAAI,aAAa,YAAY,MAAM;AAEnC,QAAI,gBAAgB,WAAW,MAAM,WAAW,UAAU,OAAO,gBAAgB,WAAW,MAAM,cAAc,UAAU,mBAAmB,gBAAgB,WAAW,MAAM,aAAa,UAAU,OAAO;AAC1M,aAAO;AAAA;AAAA;AAAA;AAKb,yBAAyB,eAAe,eAAe;AACrD,SAAO,kBAAkB,SAAS,QAAQ,kBAAkB,QAAQ,eAAe,kBAAkB,KAAK,kBAAkB;AAAA;AAGvH,kBAAkB,WAAW;AAClC,MAAI,WAAW,YAAY;AAE3B,MAAI,CAAC,UAAU;AACb;AAAA;AAGF,MAAI,mBAAmB,SAAS;AAChC,MAAI,SAAQ,SAAS,KAAK;AAC1B,MAAI,SAAS,iBAAiB;AAC9B,MAAI,SAAS,iBAAiB,IAAI;AAClC,MAAI,QAAQ,iBAAiB,IAAI;AAEjC,MAAI,SAAS,MAAM;AACjB,YAAQ,OAAM,MAAM;AAAA;AAGtB,MAAI,YAAY,gBAAgB;AAGhC,MAAI,UAAU,MAAM;AAClB,WAAO,SAAS,YAAY,SAAS;AAAA;AAGvC,MAAI,SAAS,OAAM,YAAY;AAC/B,SAAO,KAAK,OAAO,MAAM,OAAO;AAEhC,MACA,SAAS,QAEN,QAAQ,OAAO,IAAI;AAEpB,YAAQ,OAAO;AAAA;AAGjB,MAAI,QAAQ,OAAO,IAAI;AACrB,YAAQ,OAAO;AAAA;AAGjB,SAAO,QAAQ;AAEf,MAAI,WAAW;AACb,WAAO,SAAS,SAAS,KAAK,MAAM,YAAY,SAAS;AAAA;AAAA;AAGtD,qBAAqB,WAAW;AACrC,MAAI,mBAAoB,WAAU,QAAQ,aAAa,kBAAkB,IAAI;AAC7E,SAAO,oBAAoB,iBAAiB,SAAS,QAAQ;AAAA;AAExD,6BAA6B,WAAW;AAC7C,MAAI,WAAW,YAAY;AAC3B,SAAO,YAAY,SAAS;AAAA;AAG9B,yBAAyB,kBAAkB;AACzC,SAAO,CAAC,CAAC,iBAAiB,IAAI,CAAC,UAAU;AAAA;AAQpC,iBAAiB,OAAO;AAC7B,SAAO,MAAM,OAAO,OAAO,MAAM;AAAA;;;ACpRnC,IAAI,mBAAmB;AAKvB,IAAI,WAEJ,SAAU,QAAQ;AAChB,YAAU,WAAU;AAEpB,uBAAoB;AAClB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,UAAS;AACtB,WAAO;AAAA;AAOT,YAAS,UAAU,SAAS,SAAU,WAAW,SAAS,KAAK,SAAS;AAMtE,SAAK,oBAAoB,AAAuB,SAAS;AAEzD,WAAO,UAAU,OAAO,MAAM,MAAM;AAEpC,SAAK,0BAA0B,WAAW,KAAK;AAAA;AAOjD,YAAS,UAAU,oBAAoB,SAAU,WAAW,SAAS,KAAK,SAAS;AACjF,SAAK,0BAA0B,WAAW,KAAK;AAAA;AAOjD,YAAS,UAAU,SAAS,SAAU,SAAS,KAAK;AAClD,QAAI,cAAc,KAAK;AACvB,mBAAe,YAAY,OAAO;AAAA;AAOpC,YAAS,UAAU,UAAU,SAAU,SAAS,KAAK;AACnD,SAAK,oBAAoB;AAEzB,WAAO,UAAU,QAAQ,MAAM,MAAM;AAAA;AAGvC,YAAS,UAAU,4BAA4B,SAAU,WAAW,KAAK,aAAa;AACpF,QAAI,QAAQ,UAAS,oBAAoB,KAAK;AAE9C,QAAI,CAAC,OAAO;AACV;AAAA;AAGF,QAAI,mBAAmB,AAAuB,oBAAoB;AAClE,uBAAoB,MAAK,gBAAiB,MAAK,eAAe,IAAI,UAAU,OAAO,WAAW,kBAAkB,KAAK,eAAe,KAAK,oBAAoB;AAAA;AAG/J,YAAS,UAAU,sBAAsB,SAAU,KAAK;AACtD,SAAK,gBAAgB,KAAK,aAAa,QAAQ;AAC/C,SAAK,eAAe;AAAA;AAGtB,YAAS,2BAA2B,SAAU,MAAM,OAAO;AACzD,QAAI,MAAuC;AACzC,UAAI,iBAAiB,OAAO;AAC1B,cAAM,IAAI,MAAM,iBAAiB,OAAO;AAAA;AAAA;AAI5C,qBAAiB,QAAQ;AAAA;AAG3B;AAEA,YAAS,sBAAsB,SAAU,MAAM;AAC7C,WAAO,QAAQ,iBAAiB;AAAA;AAGlC;AACA,YAAS,OAAO;AAChB,SAAO;AAAA,EACP;AAEF,IAAO,mBAAQ;;;AClGf,IAAI,QAAQ;AACL,qCAAqC,UAAU,WAAW,WAAW,WAAW;AACrF,MAAI,OAAO,UAAU;AAErB,MAAI,KAAK,MAAM,WAAW;AACxB;AAAA;AAIF,MAAI,iBAAiB,UAAU,SAAS;AACxC,MAAI,iBAAiB,eAAe,SAAS;AAC7C,MAAI,aAAa,eAAe,IAAI;AACpC,MAAI,WAAW,UAAU,iBAAiB;AAC1C,MAAI,cAAc,KAAK,eAAe;AAAA,IACpC,WAAW;AAAA,IACX,OAAO;AAAA;AAGT,MAAI,CAAC,YAAY,QAAQ;AACvB;AAAA;AAKF,MAAI,gBAAgB,WAAW;AAC/B,MAAI,sBAAsB,MAAM,UAAU;AAC1C,MAAI,qBAAqB,AAAO;AAChC,MAAI,aAAa;AAEjB,MAAI,qBAAqB;AACvB,aAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,UAAI,SAAS,oBAAoB,IAAI,YAAY,GAAG;AAEpD,UAAI,UAAU,MAAM;AAClB,qBAAc,UAAU,iBAAgB,KAAK,KAAK;AAClD;AAAA;AAAA;AAAA;AAKN,MAAI,OAAO,KAAK,cAAc,YAAY,GAAG;AAC7C,MAAI,YAAY,eAAe;AAC/B,eAAa,AAAO,QAAQ,cAAc,aAAa,CAAC;AAExD,WAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,QAAI,YAAY,KAAK,cAAc,YAAY,GAAG;AAClD,QAAI,IAAI;AACR,QAAI,IAAI;AACR,QAAI,QAAQ;AACZ,QAAI,SAAS;AAEb,QAAI,KAAK,gBAAgB;AACvB,UAAI;AACJ,UAAI,SAAS;AACb,cAAQ,YAAY;AACpB,eAAS,SAAS;AAClB,aAAO,IAAI;AAAA,WACN;AACL,UAAI,SAAS;AACb,UAAI;AACJ,cAAQ,SAAS;AACjB,eAAS,YAAY;AACrB,aAAO,IAAI;AAAA;AAGb,QAAI,YAAY,YAAY,IAAI,GAAG;AACnC,iBAAa,QAAQ,mBAAmB,IAAI,WAAW;AACvD,cAAU,IAAI,IAAY,aAAK;AAAA,MAC7B,MAAM,aAAa,OAAO,UAAU,YAAY;AAAA,MAChD,OAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAAA,MAEF,OAAO,AAAO,SAAS;AAAA,QACrB,MAAM,WAAW;AAAA,SAChB;AAAA,MACH,WAAW;AAAA,MACX,QAAQ;AAAA;AAEV,iBAAc,cAAa,KAAK;AAAA;AAGlC,QAAM,UAAU,kBAAkB;AAAA;AAE7B,mCAAmC,UAAU;AAClD,QAAM,UAAU,kBAAkB;AAAA;;;ACnFpC,IAAI,mBAAmB,CAAC,YAAY,iBAAiB;AACrD,IAAI,mBAAmB,CAAC,aAAa,aAAa;AAElD,IAAI,oBAEJ,SAAU,QAAQ;AAChB,YAAU,oBAAmB;AAE7B,gCAA6B;AAC3B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,mBAAkB;AAC/B,UAAM,mBAAmB;AACzB,WAAO;AAAA;AAOT,qBAAkB,UAAU,SAAS,SAAU,WAAW,SAAS,KAAK,SAAS;AAC/E,SAAK,MAAM;AACX,QAAI,eAAe,KAAK;AACxB,SAAK,aAAa,IAAY;AAC9B,SAAK,MAAM,IAAI,KAAK;AAEpB,QAAI,CAAC,UAAU,IAAI,SAAS;AAC1B;AAAA;AAGF,QAAI,YAAY,UAAU;AAC1B,QAAI,WAAS,AAAoB,QAAO,WAAW;AACnD,QAAI,cAAc,IAAI,oBAAY,WAAW,AAAO,OAAO;AAAA,MACzD,iBAAiB,SAAU,aAAa;AACtC,YAAI,aAAa,UAAU,iBAAiB;AAE5C,iBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,cAAI,gBAAgB,WAAW,GAAG,aAAa,UAAU,MAAM;AAE/D,cAAI,kBAAkB,WAAW,kBAAkB,OAAO;AAExD,mBAAO;AAAA;AAAA;AAKX,eAAO;AAAA;AAAA,OAER;AACH,IAAO,KAAK,kBAAkB,YAAY,KAAK;AAE/C,SAAK,WAAW,IAAI,YAAY;AAEhC,IAAO,KAAK,kBAAkB,SAAU,MAAM;AAC5C,UAAI,UAAU,IAAI,CAAC,MAAM,UAAU;AACjC,4BAAoB,MAAM,MAAM,KAAK,YAAY,WAAW;AAAA;AAAA,OAE7D;AAIH,QAAI,6BAA6B,WAAW,QAAQ,SAAS,qBAAqB,QAAQ;AAE1F,QAAI,CAAC,4BAA4B;AAC/B,MAAQ,gBAAgB,cAAc,KAAK,YAAY;AAAA;AAGzD,WAAO,UAAU,OAAO,KAAK,MAAM,WAAW,SAAS,KAAK;AAAA;AAG9D,qBAAkB,UAAU,SAAS,WAAY;AAC/C,8BAA0B;AAAA;AAG5B,qBAAkB,OAAO;AACzB,SAAO;AAAA,EACP;AAEF,IAAI,sBAAsB;AAAA,EACxB,WAAW,SAAU,UAAU,WAAW,WAAW,WAAW;AAC9D,QAAI,OAAO,UAAU;AAErB,QAAI,KAAK,MAAM,WAAW;AACxB;AAAA;AAGF,QAAI,iBAAiB,UAAU,SAAS;AACxC,QAAI,iBAAiB,eAAe,SAAS;AAC7C,QAAI,aAAa,eAAe,IAAI;AACpC,iBAAa,AAAO,QAAQ,cAAc,aAAa,CAAC;AACxD,QAAI,WAAW,UAAU,iBAAiB;AAC1C,QAAI,eAAe,KAAK;AACxB,QAAI,YAAY;AAChB,QAAI,cAAc,KAAK,eAAe;AAAA,MACpC,WAAW;AAAA;AAEb,QAAI,KAAK;AACT,QAAI,KAAK;AACT,QAAI,YAAY,eAAe;AAE/B,aAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,UAAI,YAAY,KAAK,cAAc,YAAY,GAAG;AAElD,UAAI,cAAc;AAChB,WAAG,KAAK;AACR,WAAG,KAAK,SAAS;AACjB,WAAG,KAAK;AACR,WAAG,KAAK,SAAS,IAAI,SAAS;AAAA,aACzB;AACL,WAAG,KAAK,SAAS;AACjB,WAAG,KAAK;AACR,WAAG,KAAK,SAAS,IAAI,SAAS;AAC9B,WAAG,KAAK;AAAA;AAGV,UAAI,aAAa,cAAc,WAAW;AAC1C,UAAI,YAAY,YAAY,GAAG;AAC/B,gBAAU,IAAI,IAAY,aAAK;AAAA,QAC7B,MAAM,aAAa,OAAO,UAAU,YAAY,GAAG,YAAY;AAAA,QAC/D,kBAAkB;AAAA,QAClB,WAAW;AAAA,QACX,OAAO;AAAA,UACL,IAAI,GAAG;AAAA,UACP,IAAI,GAAG;AAAA,UACP,IAAI,GAAG;AAAA,UACP,IAAI,GAAG;AAAA;AAAA,QAET,OAAO,AAAO,SAAS;AAAA,UACrB,QAAQ,WAAW;AAAA,WAClB;AAAA,QACH,QAAQ;AAAA;AAAA;AAAA;AAAA,EAId,gBAAgB,SAAU,UAAU,WAAW,WAAW,WAAW;AACnE,QAAI,OAAO,UAAU;AACrB,QAAI,sBAAsB,UAAU,SAAS;AAC7C,QAAI,iBAAiB,oBAAoB,SAAS;AAClD,QAAI,WAAW,UAAU,iBAAiB;AAC1C,QAAI,eAAe,KAAK;AACxB,QAAI,mBAAmB,KAAK;AAE5B,QAAI,CAAC,iBAAiB,QAAQ;AAC5B;AAAA;AAGF,QAAI,KAAK;AACT,QAAI,KAAK;AACT,QAAI,YAAY,eAAe;AAE/B,aAAS,IAAI,GAAG,IAAI,iBAAiB,QAAQ,KAAK;AAChD,eAAS,IAAI,GAAG,IAAI,iBAAiB,GAAG,QAAQ,KAAK;AACnD,YAAI,YAAY,KAAK,cAAc,iBAAiB,GAAG,GAAG;AAE1D,YAAI,cAAc;AAChB,aAAG,KAAK;AACR,aAAG,KAAK,SAAS;AACjB,aAAG,KAAK;AACR,aAAG,KAAK,SAAS,IAAI,SAAS;AAAA,eACzB;AACL,aAAG,KAAK,SAAS;AACjB,aAAG,KAAK;AACR,aAAG,KAAK,SAAS,IAAI,SAAS;AAC9B,aAAG,KAAK;AAAA;AAGV,kBAAU,IAAI,IAAY,aAAK;AAAA,UAC7B,MAAM,gBAAgB,iBAAiB,GAAG,GAAG;AAAA,UAC7C,kBAAkB;AAAA,UAClB,WAAW;AAAA,UACX,OAAO;AAAA,YACL,IAAI,GAAG;AAAA,YACP,IAAI,GAAG;AAAA,YACP,IAAI,GAAG;AAAA,YACP,IAAI,GAAG;AAAA;AAAA,UAET,OAAO;AAAA,UACP,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,EAKhB,WAAW,SAAU,UAAU,WAAW,WAAW,WAAW;AAC9D,gCAA4B,UAAU,WAAW,WAAW;AAAA;AAAA;AAIhE,IAAI,qBAEJ,SAAU,QAAQ;AAChB,YAAU,qBAAoB;AAE9B,iCAA8B;AAC5B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,oBAAmB;AAChC,WAAO;AAAA;AAGT,sBAAmB,OAAO;AAC1B,SAAO;AAAA,EACP;AAIF,IAAI,qBAEJ,SAAU,QAAQ;AAChB,YAAU,qBAAoB;AAE9B,iCAA8B;AAC5B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,mBAAmB;AAChC,WAAO;AAAA;AAGT,sBAAmB,OAAO;AAC1B,SAAO;AAAA,EACP;;;ACxNF,IAAI,WAEJ,SAAU,QAAQ;AAChB,YAAU,WAAU;AAEpB,uBAAoB;AAClB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO;AACb,WAAO;AAAA;AAGT,YAAS,UAAU,SAAS,SAAU,WAAW,SAAS;AACxD,SAAK,MAAM;AAEX,QAAI,UAAU,IAAI,SAAS;AACzB,WAAK,MAAM,IAAI,IAAI,aAAK;AAAA,QACtB,OAAO,UAAU,iBAAiB;AAAA,QAClC,OAAO,SAAS;AAAA,UACd,MAAM,UAAU,IAAI;AAAA,WACnB,UAAU;AAAA,QACb,QAAQ;AAAA,QACR,IAAI;AAAA;AAAA;AAAA;AAKV,YAAS,OAAO;AAChB,SAAO;AAAA,EACP;AAEF,IAAI,cAAc;AAAA,EAGhB,QAAQ;AAAA;AAEH,kBAAiB,WAAW;AACjC,YAAU,sBAAsB;AAChC,YAAU,uBAAuB;AACjC,YAAU,yBAAyB,eAAe;AAClD,mBAAiB,WAAW,KAAK,oBAAoB;AACrD,mBAAiB,WAAW,KAAK,oBAAoB;AACrD,YAAU,sBAAsB;AAChC,YAAU,sBAAsB;AAChC,YAAU,qBAAqB,SAAU,QAAQ;AAE/C,QAAI,OAAO,SAAS,OAAO,SAAS,CAAC,OAAO,MAAM;AAChD,aAAO,OAAO;AAAA;AAAA;AAAA;;;ACpDb,kBAAiB,WAAW;AAEjC,MAAI;AACJ,YAAU,oBAAoB;AAC9B,YAAU,kBAAkB;AAC5B,YAAU,eAAe,aAAa;AAAA;;;ACTzB,qBAAqB,SAAS;AAC3C,UAAQ,iBAAiB,SAAS,SAAU,aAAa;AACvD,QAAI,OAAO,YAAY;AACvB,QAAI,SAAS;AACb,QAAI,WAAW,YAAY;AAE3B,QAAI,CAAC,UAAU;AACb;AAAA;AAGF,QAAI,OAAO,SAAS;AACpB,IAAO,KAAK,MAAM,SAAU,MAAM,WAAW;AAC3C,WAAK,KAAK,KAAK,aAAa,KAAK,WAAW,MAAM,SAAU,KAAK,WAAW;AAC1E,eAAO,aAAa,OAAO,cAAc;AACzC,YAAI,QAAQ,SAAS,YAAY,KAAK;AACtC,eAAO,WAAW,aAAa,aAAa,SAAS,QAAQ,qBAAqB;AAAA;AAAA;AAItF,SAAK,KAAK,SAAU,KAAK;AAIvB,UAAI,aAAa,AAAO,KAAK,OAAO,MAAM,SAAU,OAAO;AACzD,eAAO,aAAa;AAAA,YAChB,qBAAqB;AAE3B,aAAO,KAAK,KAAK,WAAW;AAC5B,WAAK,cAAc,KAAK,OAAO;AAAA;AAAA;AAAA;AAKrC,sBAAsB,OAAO;AAC3B,SAAO,CAAC,MAAM,MAAM,OAAO,CAAC,MAAM,MAAM;AAAA;AAG1C,8BAA8B,UAAU;AAGtC,SAAO,CAAC,SAAS,IAAI,SAAS;AAAA;;;ACtCjB,6BAA6B,QAAQ;AAClD,MAAI,cAAc,OAAO;AAEzB,MAAI,aAAa;AACf,QAAI,CAAC,AAAO,QAAQ,cAAc;AAChC,oBAAc,CAAC;AAAA;AAGjB,QAAI,kBAAkB;AACtB,IAAO,KAAK,aAAa,SAAU,UAAU,KAAK;AAChD,UAAI,SAAS,WAAW;AACtB,YAAI,SAAS,QAAQ,CAAC,SAAS,OAAO;AACpC,mBAAS,QAAQ,SAAS;AAAA;AAG5B,eAAO,QAAQ,OAAO,SAAS;AAE/B,YAAI,CAAC,AAAO,QAAQ,OAAO,QAAQ;AACjC,iBAAO,QAAQ,CAAC,OAAO;AAAA;AAGzB,eAAO,MAAM,KAAK;AAAA,aACb;AACL,wBAAgB,KAAK;AAAA;AAAA;AAGzB,WAAO,QAAQ;AAAA;AAGjB,EAAO,KAAK,OAAO,QAAQ,SAAU,WAAW;AAC9C,QAAI,aAAa,UAAU,SAAS,WAAW,UAAU,YAAY;AACnE,gBAAU,aAAa,UAAU;AAAA;AAAA;AAAA;;;ACxBvC,IAAI,YAEJ,SAAU,QAAQ;AAChB,YAAU,YAAW;AAErB,wBAAqB;AACnB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,WAAU;AACvB,WAAO;AAAA;AAGT,aAAU,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK;AAChE,QAAI,QAAQ,YAAY;AACxB,QAAI,QAAQ,KAAK;AACjB,QAAI,OAAO,YAAY;AACvB,QAAI,UAAU,KAAK;AAEnB,2BAAsB,OAAM,KAAK;AAC/B,UAAI,aAAa,MAAK,cAAc,KAAK,aAAa;AAEtD,UAAI,eAAe,QAAQ;AACzB;AAAA;AAGF,UAAI,aAAa,AAAW,oBAAoB,MAAK,cAAc,KAAK;AACxE,UAAI,aAAa,AAAW,aAAa,YAAY,IAAI,IAAI,GAAG;AAChE,UAAI,eAAe,MAAK,cAAc,KAAK,mBAAmB;AAC9D,iBAAW,KAAK;AAAA,QACd,OAAO;AAAA,UACL,eAAe;AAAA;AAAA,QAEjB,IAAI;AAAA,QACJ,QAAQ,WAAW,KAAK;AAAA,QACxB,QAAQ,WAAW,KAAK;AAAA,QACxB,UAAU,eAAe,KAAK,KAAK,OAAO;AAAA;AAE5C,aAAO;AAAA;AAGT,2BAAuB,WAAW,WAAW,aAAa,OAAM,KAAK,QAAQ;AAE3E,kBAAY;AAEZ,eAAS,IAAI,GAAG,IAAI,UAAU,SAAS,GAAG,KAAK;AAC7C,YAAI,aAAa,cAAa,OAAM;AAEpC,YAAI,YAAY;AACd,qBAAW,WAAW;AAEtB,cAAI,UAAU,IAAI;AAChB,uBAAW,YAAY,UAAU;AACjC,4BAAQ,SAAS,cAAc,eAAe,YAAY;AAAA,cACxD,GAAG,UAAU,GAAG;AAAA,cAChB,GAAG,UAAU,GAAG;AAAA,eACf,aAAa;AAAA,iBACX;AACL,uBAAW,YAAY,UAAU;AAAA;AAGnC,sBAAY,IAAI;AAAA;AAAA;AAAA;AAKtB,8BAA0B,QAAQ;AAChC,aAAO,AAAO,IAAI,QAAQ,SAAU,IAAI;AACtC,eAAO,CAAC,MAAM,IAAI,MAAM;AAAA;AAAA;AAI5B,SAAK,KAAK,SAAS,IAAI,SAAU,KAAK;AACpC,UAAI,SAAS,KAAK,cAAc;AAEhC,UAAI,CAAC,QAAQ;AACX;AAAA;AAGF,UAAI,UAAU,IAAY;AAC1B,UAAI,WAAW,IAAY;AAC3B,UAAI,SAAS;AAAA,QACX,OAAO;AAAA,UACL;AAAA;AAAA;AAGJ,cAAQ,MAAM,SAAS,iBAAiB;AACxC,eAAS,MAAM,SAAS,iBAAiB;AACzC,MAAQ,UAAU,SAAS,QAAQ,aAAa;AAChD,MAAQ,UAAU,UAAU,QAAQ,aAAa;AACjD,UAAI,YAAY,IAAY;AAC5B,UAAI,cAAc,IAAY;AAC9B,gBAAU,IAAI;AACd,gBAAU,IAAI;AACd,gBAAU,IAAI;AACd,oBAAc,SAAS,MAAM,QAAQ,QAAQ,aAAa,MAAM,KAAK;AACrE,WAAK,iBAAiB,KAAK;AAAA,OAC1B,OAAO,SAAU,QAAQ,QAAQ;AAClC,UAAI,YAAY,QAAQ,iBAAiB;AACzC,UAAI,WAAW,UAAU,QAAQ;AACjC,UAAI,UAAU,UAAU,QAAQ;AAChC,UAAI,cAAc,UAAU,QAAQ;AACpC,UAAI,SAAS;AAAA,QACX,OAAO;AAAA,UACL,QAAQ,KAAK,cAAc;AAAA;AAAA;AAI/B,UAAI,CAAC,OAAO,MAAM,QAAQ;AACxB;AAAA;AAGF,oBAAc,SAAS,MAAM,QAAQ,OAAO,MAAM,QAAQ,aAAa,MAAM,QAAQ;AACrF,mBAAa;AACb,mBAAa;AACb,MAAQ,YAAY,UAAU,QAAQ;AACtC,MAAQ,YAAY,SAAS,QAAQ;AACrC,WAAK,iBAAiB,QAAQ;AAAA,OAC7B,OAAO,SAAU,KAAK;AACvB,YAAM,OAAO,QAAQ,iBAAiB;AAAA,OACrC;AACH,SAAK,kBAAkB,SAAU,WAAW,KAAK;AAC/C,UAAI,YAAY,KAAK,aAAa;AAClC,UAAI,WAAW,UAAU,QAAQ;AACjC,UAAI,UAAU,UAAU,QAAQ;AAChC,UAAI,cAAc,UAAU,QAAQ;AAEpC,UAAI,YAAY,KAAK,cAAc,KAAK;AACxC,UAAI,QAAQ,UAAU;AACtB,YAAM,IAAI;AACV,eAAS,SAAS,AAAO,SAAS,UAAU,SAAS,aAAa,gBAAgB;AAAA,QAChF,MAAM;AAAA,QACN,QAAQ;AAAA;AAEV,+BAAyB,UAAU,WAAW;AAC9C,+BAAyB,SAAS,WAAW;AAC7C,UAAI,iBAAiB,UAAU,SAAS;AACxC,UAAI,gBAAgB,eAAe,aAAa,eAAe,YAAY;AAC3E,cAAQ,SAAS;AACjB,MAAO,KAAK,CAAC,YAAY,UAAU,SAAS,SAAU,WAAW;AAC/D,YAAI,aAAa,UAAU,SAAS,CAAC,WAAW;AAChD,YAAI,cAAc,WAAW,aAAa,WAAW,YAAY;AAEjE,gBAAQ,YAAY,WAAW,SAAS,eAAe;AAAA;AAEzD,cAAQ,SAAS,AAAO,SAAS,eAAe,gBAAgB;AAAA,QAC9D,MAAM;AAAA,QACN,SAAS;AAAA,QACT,OAAO,UAAU;AAAA;AAEnB,UAAI,gBAAgB,UAAU,SAAS;AACvC,UAAI,iBAAiB,cAAc,SAAS,aAAa;AACzD,kBAAY,UAAU,SAAU,YAAY;AAC1C,YAAI,sBAAsB,eAAS;AACjC,cAAI,YAAY,WAAW;AAC3B,qBAAW,SAAS,AAAO,OAAO;AAAA,YAEhC,OAAO,UAAU;AAAA,YACjB,GAAG,UAAU;AAAA,YACb,GAAG,UAAU;AAAA,YACb,OAAO,UAAU;AAAA,YACjB,QAAQ,UAAU;AAAA,aACjB;AAAA,eACE;AACL,qBAAW,SAAS;AACpB,qBAAW,SAAS;AACpB,qBAAW,MAAM,gBAAgB;AAAA;AAGnC,YAAI,oBAAoB,WAAW,YAAY;AAC/C,0BAAkB,QAAQ,AAAO,MAAM;AACvC,YAAI,cAAc,KAAK,WAAW,IAAI,KAAK,kBAAkB,WAAW,WAAW;AACnF,QAAC,gBAAe,QAAQ,MAAM,iBAAkB,eAAc;AAC9D,sBAAc,YAAY,qBAAqB,YAAY;AAAA,UACzD,cAAc,KAAK;AAAA,UACnB,gBAAgB;AAAA,UAChB,eAAe,WAAW;AAAA,UAC1B;AAAA,UACA,cAAc;AAAA,UACd,gBAAgB,UAAU;AAAA;AAAA;AAG9B,0BAAoB,WAAW,cAAc,IAAI,UAAU,cAAc,IAAI;AAAA;AAE/E,SAAK,QAAQ;AAAA;AAGf,aAAU,UAAU,SAAS,WAAY;AACvC,SAAK,MAAM;AACX,SAAK,QAAQ;AAAA;AAGf,aAAU,OAAO;AACjB,SAAO;AAAA,EACP;AAEF,IAAO,oBAAQ;;;ACtMf,IAAI,mBAEJ,SAAU,QAAQ;AAChB,YAAU,mBAAkB;AAE5B,+BAA4B;AAC1B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,kBAAiB;AAC9B,UAAM,kBAAkB;AACxB,WAAO;AAAA;AAIT,oBAAiB,UAAU,OAAO,SAAU,QAAQ;AAClD,WAAO,UAAU,KAAK,MAAM,MAAM;AAIlC,SAAK,uBAAuB,IAAI,6BAAqB,AAAO,KAAK,KAAK,SAAS,OAAO,AAAO,KAAK,KAAK,YAAY;AAAA;AAGrH,oBAAiB,UAAU,iBAAiB,SAAU,QAAQ,SAAS;AACrE,WAAO,uBAAuB,MAAM;AAAA,MAClC,eAAe;AAAA,MACf,oBAAoB;AAAA;AAAA;AAIxB,oBAAiB,UAAU,gBAAgB,SAAU,WAAW,gBAAgB,UAAU;AACxF,QAAI,OAAO,KAAK;AAChB,QAAI,WAAW,KAAK;AACpB,QAAI,gBAAgB,SAAS;AAC7B,QAAI,OAAO,KAAK,UAAU,QAAQ;AAClC,QAAI,gBAAgB,SAAS,KAAK,KAAK,OAAO;AAC9C,QAAI,cAAc,oCAAoC,MAAM;AAC5D,WAAO,oBAAoB,WAAW;AAAA,MACpC,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,QAAQ,AAAO,IAAI,eAAe,SAAU,MAAM;AAChD,YAAI,MAAM,KAAK,IAAI,KAAK,aAAa,KAAK,MAAM;AAChD,eAAO,oBAAoB,aAAa;AAAA,UACtC,YAAY;AAAA,UACZ;AAAA,UACA,MAAM,KAAK;AAAA,UACX,OAAO;AAAA,UACP,WAAW;AAAA;AAAA;AAAA;AAAA;AAMnB,oBAAiB,UAAU,qBAAqB,SAAU,WAAW;AACnE,QAAI,aAAa,MAAM;AACrB,UAAI,SAAS,KAAK;AAClB,UAAI,WAAW,KAAK;AACpB,UAAI,SAAS,OAAO,UAAU,AAAO,IAAI,SAAS,YAAY,SAAU,KAAK;AAC3E,eAAO,OAAO,aAAa;AAAA,UACzB;AAEJ,eAAS,IAAI,GAAG,OAAM,OAAO,QAAQ,IAAI,MAAK,KAAK;AACjD,YAAI,CAAC,MAAM,OAAO,KAAK;AACrB,cAAI,gBAAgB,SAAS;AAC7B,iBAAO,SAAS,aAAa,cAAc,GAAG,YAAY,OAAO,KAAK;AAAA;AAAA;AAAA;AAAA;AAM9E,oBAAiB,OAAO;AACxB,oBAAiB,eAAe,CAAC;AACjC,oBAAiB,gBAAgB;AAAA,IAC/B,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,SAAS;AAAA,IACT,kBAAkB;AAAA,IAClB,iBAAiB;AAAA,IACjB,YAAY;AAAA,IACZ,WAAW;AAAA,MACT,OAAO;AAAA,MACP,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,IAER,OAAO;AAAA,MACL,UAAU;AAAA;AAAA,IAKZ,YAAY;AAAA;AAGd,SAAO;AAAA,EACP;AAEF,IAAO,sBAAQ;;;AChGf,IAAI,mBAAmB,oBAAY;AAEnC,sBAAsB,KAAK,MAAM;AAC/B,SAAO,AAAO,SAAS;AAAA,IACrB;AAAA,KACC;AAAA;AAGL,IAAI,aAEJ,SAAU,QAAQ;AAChB,YAAU,aAAY;AAEtB,yBAAsB;AACpB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,YAAW;AACxB,WAAO;AAAA;AAGT,cAAW,UAAU,gBAAgB,WAAY;AAC/C,QAAI,cAAc,KAAK,IAAI;AAC3B,QAAI,cAAc,KAAK,IAAI;AAC3B,QAAI,SAAQ,KAAK,IAAI;AACrB,QAAI,WAAW,KAAK,IAAI;AACxB,QAAI,WAAW,KAAK,IAAI;AAExB,QAAI,YAAY,KAAK,IAAI;AACzB,QAAI,gBAAgB,KAAK,IAAI;AAC7B,QAAI,WAAW,KAAK,IAAI,CAAC,YAAY;AACrC,QAAI,gBAAgB,KAAK,IAAI,CAAC,YAAY;AAC1C,QAAI,UAAU,KAAK,IAAI;AACvB,QAAI,eAAe,KAAK,IAAI;AAC5B,QAAI,kBAAkB,AAAO,IAAI,KAAK,IAAI,gBAAgB,IAAI,SAAU,cAAc;AAEpF,UAAI,aAAa,OAAO,QAAQ,aAAa,MAAM,KAAK,CAAC,aAAa,KAAK;AACzE,qBAAa,MAAM;AAAA,iBACV,aAAa,OAAO,QAAQ,aAAa,MAAM,KAAK,CAAC,aAAa,KAAK;AAChF,qBAAa,MAAM;AAAA;AAGrB,UAAI,iBAAiB;AAErB,UAAI,aAAa,SAAS,MAAM;AAC9B,yBAAiB,AAAO,SAAS;AAAA,UAC/B,OAAO,aAAa;AAAA,WACnB;AAAA;AAIL,UAAI,oBAAoB,AAAO,MAAM,AAAO,MAAM,eAAe;AAAA,QAC/D;AAAA,QACA;AAAA,QACA,OAAO;AAAA,QACP;AAAA,QACA;AAAA,QAEA;AAAA,QAEA,MAAM,aAAa;AAAA,QACnB,cAAc;AAAA,QACd;AAAA,QAEA,eAAe;AAAA,QACf;AAAA,SACC;AAEH,UAAI,CAAC,UAAU;AACb,0BAAkB,OAAO;AAAA;AAG3B,UAAI,OAAO,kBAAkB,UAAU;AACrC,YAAI,UAAU,kBAAkB;AAChC,0BAAkB,OAAO,cAAc,QAAQ,WAAW,WAAW,OAAO,UAAU;AAAA,iBAC7E,OAAO,kBAAkB,YAAY;AAC9C,0BAAkB,OAAO,cAAc,kBAAkB,MAAM;AAAA;AAGjE,UAAI,QAAQ,IAAI,cAAM,mBAAmB,MAAM,KAAK;AACpD,MAAO,MAAM,OAAO,qBAAqB;AAEzC,YAAM,WAAW;AACjB,YAAM,iBAAiB,KAAK;AAC5B,aAAO;AAAA,OACN;AACH,SAAK,mBAAmB;AAAA;AAG1B,cAAW,UAAU,qBAAqB,WAAY;AACpD,WAAO,KAAK;AAAA;AAGd,cAAW,OAAO;AAClB,cAAW,gBAAgB;AAAA,IACzB,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,QAAQ,CAAC,OAAO;AAAA,IAChB,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,UAAU;AAAA,MACR,MAAM;AAAA;AAAA,IAIR,aAAa,CAAC,GAAG;AAAA,IACjB,aAAa;AAAA,IACb,aAAa;AAAA,IACb,OAAO;AAAA,IAEP,OAAO;AAAA,IACP,UAAU,AAAO,MAAM;AAAA,MACrB,WAAW;AAAA,QACT,OAAO;AAAA;AAAA,OAER,iBAAiB;AAAA,IACpB,WAAW,aAAa,iBAAiB,WAAW;AAAA,IACpD,UAAU,aAAa,iBAAiB,UAAU;AAAA,IAElD,WAAW,aAAa,iBAAiB,WAAW;AAAA,IACpD,WAAW,aAAa,iBAAiB,WAAW;AAAA,IAEpD,WAAW;AAAA;AAEb,SAAO;AAAA,EACP;AAEF,IAAO,qBAAQ;;;AC/Hf,IAAI,oBAAmB,CAAC,YAAY,iBAAiB;AAErD,IAAI,aAEJ,SAAU,QAAQ;AAChB,YAAU,YAAW;AAErB,wBAAqB;AACnB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,WAAU;AACvB,WAAO;AAAA;AAGT,aAAU,UAAU,SAAS,SAAU,YAAY,SAAS,KAAK;AAC/D,QAAI,QAAQ,KAAK;AACjB,UAAM;AAEN,SAAK,WAAW;AAEhB,SAAK,uBAAuB;AAAA;AAG9B,aAAU,UAAU,aAAa,SAAU,YAAY;AACrD,QAAI,QAAQ,WAAW;AACvB,QAAI,gBAAgB,MAAM;AAC1B,QAAI,eAAe,AAAO,IAAI,eAAe,SAAU,eAAe;AACpE,UAAI,cAAc,IAAI,oBAAY,cAAc,OAAO;AAAA,QACrD,UAAU,CAAC,MAAM,IAAI,MAAM;AAAA,QAC3B,UAAU,cAAc;AAAA,QACxB,gBAAgB;AAAA,QAChB,eAAe;AAAA,QACf,eAAe;AAAA;AAEjB,aAAO;AAAA;AAET,IAAO,KAAK,cAAc,SAAU,aAAa;AAC/C,MAAO,KAAK,mBAAkB,YAAY,KAAK;AAC/C,WAAK,MAAM,IAAI,YAAY;AAAA,OAC1B;AAAA;AAGL,aAAU,UAAU,yBAAyB,SAAU,YAAY;AACjE,QAAI,QAAQ,WAAW;AACvB,QAAI,gBAAgB,MAAM;AAE1B,QAAI,CAAC,cAAc,QAAQ;AACzB;AAAA;AAGF,QAAI,QAAQ,WAAW,IAAI;AAC3B,QAAI,iBAAiB,WAAW,SAAS;AACzC,QAAI,iBAAiB,WAAW,SAAS;AACzC,QAAI,iBAAiB,eAAe,SAAS;AAC7C,QAAI,iBAAiB,eAAe,SAAS;AAC7C,QAAI,gBAAgB,eAAe,IAAI;AACvC,QAAI,gBAAgB,eAAe,IAAI;AACvC,QAAI,kBAAkB,eAAe,IAAI;AACzC,QAAI,kBAAkB,eAAe,IAAI;AACzC,QAAI,qBAAqB,AAAO,QAAQ,mBAAmB,kBAAkB,CAAC;AAC9E,QAAI,qBAAqB,AAAO,QAAQ,mBAAmB,kBAAkB,CAAC;AAC9E,QAAI,aAAa;AACjB,QAAI,aAAa;AAEjB,2BAAuB,YAAY,qBAAqB,KAAK;AAC3D,UAAI,cAAa,MAAM,oBAAoB;AAC3C,iBAAW,eAAc,WAAW,gBAAe;AACnD,aAAO;AAAA;AAGT,QAAI,UAAU,UAAU;AACtB,UAAI,cAAc,cAAc,GAAG;AACnC,UAAI,KAAK,MAAM;AACf,UAAI,KAAK,MAAM;AAEf,eAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,YAAI,eAAe;AACjB,cAAI,aAAa,cAAc,YAAY,oBAAoB;AAC/D,qBAAW,YAAY,KAAK,IAAY,eAAO;AAAA,YAC7C,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA,GAAG,YAAY,GAAG;AAAA;AAAA;AAAA;AAKxB,YAAI,iBAAiB,IAAI,YAAY,SAAS,GAAG;AAC/C,cAAI,aAAa,cAAc,YAAY,oBAAoB;AAC/D,qBAAW,YAAY,KAAK,IAAY,aAAK;AAAA,YAC3C,OAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA,IAAI,YAAY,GAAG;AAAA,cACnB,GAAG,YAAY,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA,WAM3B;AACD,UAAI;AACJ,UAAI,kBAAkB,AAAO,IAAI,eAAe,SAAU,eAAe,KAAK;AAC5E,YAAI,cAAc,cAAc;AAChC,4BAAoB,qBAAqB,OAAO,YAAY,SAAS,IAAI,KAAK,IAAI,YAAY,SAAS,GAAG;AAC1G,eAAO,AAAO,IAAI,aAAa,SAAU,WAAW;AAClD,iBAAO,MAAM,aAAa,UAAU,OAAO;AAAA;AAAA;AAG/C,UAAI,aAAa;AAEjB,eAAS,IAAI,GAAG,KAAK,mBAAmB,KAAK;AAC3C,YAAI,SAAS;AAEb,iBAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AAC7C,iBAAO,KAAK,gBAAgB,GAAG;AAAA;AAIjC,YAAI,OAAO,IAAI;AACb,iBAAO,KAAK,OAAO,GAAG;AAAA,eACjB;AACL,cAAI,MAAuC;AACzC,oBAAQ,MAAM,2BAA4B;AAAA;AAAA;AAI9C,YAAI,eAAe;AACjB,cAAI,aAAa,cAAc,YAAY,oBAAoB;AAC/D,qBAAW,YAAY,KAAK,IAAY,iBAAS;AAAA,YAC/C,OAAO;AAAA,cACL;AAAA;AAAA;AAAA;AAKN,YAAI,iBAAiB,YAAY;AAC/B,cAAI,aAAa,cAAc,YAAY,oBAAoB,IAAI;AACnE,qBAAW,YAAY,KAAK,IAAY,gBAAQ;AAAA,YAC9C,OAAO;AAAA,cACL,QAAQ,OAAO,OAAO;AAAA;AAAA;AAAA;AAK5B,qBAAa,OAAO,QAAQ;AAAA;AAAA;AAIlC,QAAI,YAAY,eAAe;AAC/B,QAAI,YAAY,eAAe;AAE/B,IAAO,KAAK,YAAY,SAAU,aAAY,KAAK;AACjD,WAAK,MAAM,IAAI,AAAQ,UAAU,aAAY;AAAA,QAC3C,OAAO,AAAO,SAAS;AAAA,UACrB,QAAQ;AAAA,UACR,MAAM,mBAAmB,MAAM,mBAAmB;AAAA,WACjD;AAAA,QACH,QAAQ;AAAA;AAAA,OAET;AACH,IAAO,KAAK,YAAY,SAAU,aAAY,KAAK;AACjD,WAAK,MAAM,IAAI,AAAQ,UAAU,aAAY;AAAA,QAC3C,OAAO,AAAO,SAAS;AAAA,UACrB,MAAM;AAAA,UACN,QAAQ,mBAAmB,MAAM,mBAAmB;AAAA,WACnD;AAAA,QACH,QAAQ;AAAA;AAAA,OAET;AAAA;AAGL,aAAU,OAAO;AACjB,SAAO;AAAA,EACP;AAEF,IAAO,qBAAQ;;;AClLf,IAAI,gBAEJ,SAAU,QAAQ;AAChB,YAAU,gBAAe;AAEzB,0BAAuB,KAAK,QAAO,cAAc;AAC/C,QAAI,QAAQ,OAAO,KAAK,MAAM,KAAK,QAAO,iBAAiB;AAE3D,UAAM,OAAO;AACb,UAAM,QAAQ;AACd,UAAM,OAAO;AACb,WAAO;AAAA;AAGT,SAAO;AAAA,EACP;AAEF,IAAO,wBAAQ;;;ACZf,IAAI,QAEJ,WAAY;AACV,kBAAe,YAAY,SAAS,KAAK;AAKvC,SAAK,aAAa;AAClB,SAAK,SAAS;AACd,SAAK,iBAAiB,IAAI,WAAW,sBAAsB,SAAU,gBAAgB,KAAK;AACxF,UAAI,MAAM,eAAe;AACzB,UAAI,gBAAgB,IAAI,sBAAc,KAAK,IAAI;AAE/C,oBAAc,OAAO,eAAe,IAAI;AAExC,oBAAc,QAAQ;AACtB,qBAAe,OAAO;AACtB,WAAK,WAAW,KAAK;AACrB,aAAO;AAAA,OACN;AACH,SAAK,OAAO,YAAY;AAAA;AAG1B,SAAM,UAAU,mBAAmB,WAAY;AAC7C,WAAO,KAAK;AAAA;AAGd,SAAM,UAAU,cAAc,SAAU,OAAO,gBAAgB;AAC7D,QAAI,gBAAgB,KAAK,eAAe;AACxC,WAAO,KAAK,aAAa,cAAc,YAAY,QAAQ;AAAA;AAI7D,SAAM,UAAU,eAAe,SAAU,OAAO,gBAAgB;AAC9D,QAAI,gBAAgB,KAAK,eAAe;AACxC,QAAI,QAAQ,cAAc;AAC1B,QAAI,IAAI,KAAK,KAAK,QAAQ,KAAK,IAAI;AACnC,QAAI,IAAI,KAAK,KAAK,QAAQ,KAAK,IAAI;AACnC,WAAO,CAAC,GAAG;AAAA;AAGb,SAAM,UAAU,cAAc,SAAU,IAAI;AAC1C,QAAI,KAAK,GAAG,KAAK,KAAK;AACtB,QAAI,KAAK,GAAG,KAAK,KAAK;AACtB,QAAI,SAAS,KAAK,KAAK,KAAK,KAAK,KAAK;AACtC,UAAM;AACN,UAAM;AACN,QAAI,SAAS,KAAK,MAAM,CAAC,IAAI;AAG7B,QAAI,gBAAgB;AACpB,QAAI;AACJ,QAAI,iBAAiB;AAErB,aAAS,IAAI,GAAG,IAAI,KAAK,eAAe,QAAQ,KAAK;AACnD,UAAI,gBAAgB,KAAK,eAAe;AACxC,UAAI,QAAO,KAAK,IAAI,SAAS,cAAc;AAE3C,UAAI,QAAO,eAAe;AACxB,sBAAc;AACd,yBAAiB;AACjB,wBAAgB;AAAA;AAAA;AAIpB,WAAO,CAAC,gBAAgB,CAAE,gBAAe,YAAY,YAAY;AAAA;AAGnE,SAAM,UAAU,SAAS,SAAU,YAAY,KAAK;AAClD,QAAI,UAAS,WAAW,IAAI;AAC5B,QAAI,YAAY,IAAI;AACpB,QAAI,aAAa,IAAI;AACrB,QAAI,WAAW,KAAK,IAAI,WAAW,cAAc;AACjD,SAAK,KAAK,AAAW,cAAa,QAAO,IAAI;AAC7C,SAAK,KAAK,AAAW,cAAa,QAAO,IAAI;AAC7C,SAAK,aAAa,WAAW,IAAI,gBAAgB,KAAK,KAAK;AAE3D,QAAI,SAAS,WAAW,IAAI;AAE5B,QAAI,OAAO,WAAW,YAAY,OAAO,WAAW,UAAU;AAC5D,eAAS,CAAC,GAAG;AAAA;AAGf,SAAK,KAAK,AAAW,cAAa,OAAO,IAAI;AAC7C,SAAK,IAAI,AAAW,cAAa,OAAO,IAAI;AAC5C,SAAK,KAAK,gBAAgB,SAAU,eAAe,KAAK;AACtD,oBAAc,UAAU,KAAK,IAAI,KAAK;AACtC,UAAI,QAAQ,KAAK,aAAa,MAAM,KAAK,KAAK,IAAI,KAAK,eAAe;AAEtE,cAAQ,KAAK,MAAM,KAAK,IAAI,QAAQ,KAAK,IAAI;AAC7C,oBAAc,QAAQ;AAAA,OACrB;AAAA;AAGL,SAAM,UAAU,SAAS,SAAU,SAAS,KAAK;AAC/C,QAAI,gBAAgB,KAAK;AACzB,QAAI,aAAa,KAAK;AACtB,SAAK,eAAe,SAAU,eAAe;AAC3C,oBAAc,MAAM,UAAU,UAAU;AAAA;AAE1C,YAAQ,iBAAiB,SAAS,SAAU,aAAa,KAAK;AAC5D,UAAI,YAAY,IAAI,wBAAwB,WACzC,QAAQ,aAAa,SAAS,YAAY,IAAI,mBAAmB,YAAY;AAC9E;AAAA;AAGF,UAAI,OAAO,YAAY;AACvB,WAAK,eAAe,SAAU,eAAe;AAC3C,sBAAc,MAAM,oBAAoB,MAAM,KAAK,aAAa,cAAc;AAAA;AAAA,OAE/E;AACH,QAAI,cAAc,WAAW,IAAI;AAEjC,8BAA0B,UAAU;AAClC,UAAI,QAAQ,KAAK,IAAI,IAAI,KAAK,MAAM,KAAK,IAAI,YAAY,KAAK;AAE9D,UAAI,IAAI,WAAW;AAEnB,UAAI,MAAM,GAAG;AACX,YAAI;AAAA,aACC;AAEL,aAAK;AAAA;AAGP,aAAO,IAAI;AAAA;AAIb,SAAK,eAAe,SAAU,eAAe,KAAK;AAChD,UAAI,YAAY,eAAe,cAAc,OAAO,cAAc,OAAO;AACzE,sBAAgB,cAAc,OAAO,cAAc;AACnD,UAAI,YAAY,cAAc;AAC9B,UAAI,SAAQ,cAAc;AAC1B,UAAI,WAAW,qBAAqB,QAAO,UAAU,IAAI,OAAO;AAChE,UAAI,WAAW,qBAAqB,QAAO,UAAU,IAAI,OAAO;AAChE,UAAI,WAAW,OAAM;AAErB,UAAI,YAAY,QAAQ,YAAY,MAAM;AAExC,eAAM,UAAU,CAAC,UAAU,CAAC;AAC5B,eAAM,YAAa,YAAW,YAAY;AAAA,iBACjC,YAAY,MAAM;AAC3B,YAAI,MAAM;AAEV,WAAG;AACD,gBAAM,WAAW,WAAW;AAC5B,iBAAM,UAAU,CAAC,UAAU;AAG3B,iBAAM,YAAY;AAClB,qBAAW,iBAAiB;AAAA,iBACrB,MAAM,UAAU,MAAM,SAAS,QAAQ,SAAS,UAAU;AAAA,iBAC1D,YAAY,MAAM;AAC3B,YAAI,MAAM;AAEV,WAAG;AACD,gBAAM,WAAW,WAAW;AAC5B,iBAAM,UAAU,KAAK,CAAC;AACtB,iBAAM,YAAY;AAClB,qBAAW,iBAAiB;AAAA,iBACrB,MAAM,UAAU,MAAM,SAAS,QAAQ,SAAS,UAAU;AAAA,aAC9D;AACL,YAAI,mBAAmB,OAAM,WAAW,SAAS;AAEjD,YAAI,mBAAmB,aAAa;AAClC,qBAAW,iBAAiB;AAAA;AAI9B,YAAI,MAAM,KAAK,KAAK,UAAU,KAAK,YAAY;AAC/C,YAAI,MAAM,AAAW,MAAM,MAAM,WAAW;AAC5C,eAAM,UAAU,KAAK;AACrB,eAAM,YAAY;AAAA;AAAA;AAAA;AAKxB,SAAM,UAAU,iBAAiB,SAAU,SAAS,QAAQ,OAAO;AACjE,YAAQ,KAAK;AACb,WAAO;AAAA;AAGT,SAAM,UAAU,mBAAmB,SAAU,SAAS,QAAQ,OAAO;AACnE,YAAQ,KAAK;AACb,WAAO;AAAA;AAGT,SAAM,UAAU,eAAe,SAAU,OAAO;AAC9C,YAAQ,KAAK;AACb,WAAO;AAAA;AAGT,SAAM,SAAS,SAAU,SAAS,KAAK;AACrC,QAAI,YAAY;AAChB,YAAQ,cAAc,SAAS,SAAU,YAAY;AACnD,UAAI,QAAQ,IAAI,OAAM,YAAY,SAAS;AAC3C,gBAAU,KAAK;AACf,iBAAW,mBAAmB;AAAA;AAEhC,YAAQ,iBAAiB,SAAS,SAAU,aAAa;AACvD,UAAI,YAAY,IAAI,wBAAwB,SAAS;AAGnD,oBAAY,mBAAmB,UAAU,YAAY,IAAI,iBAAiB;AAAA;AAAA;AAG9E,WAAO;AAAA;AAOT,SAAM,aAAa;AACnB,SAAO;AAAA;AAGT,IAAO,gBAAQ;;;AChOR,kBAAiB,WAAW;AACjC,YAAU,yBAAyB,SAAS;AAC5C,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAChC,YAAU,eAAe;AAAA,IACvB,YAAY;AAAA,IACZ,OAAO,SAAU,aAAa;AAC5B,UAAI,OAAO,YAAY;AAEvB,WAAK,KAAK,SAAU,KAAK;AACvB,aAAK,cAAc,KAAK,cAAc;AAAA;AAGxC,WAAK,UAAU,cAAc;AAAA;AAAA;AAAA;;;ACT5B,mBAAiB,WAAW;AACjC,MAAI;AACJ,YAAU,kBAAkB;AAC5B,YAAU,oBAAoB;AAC9B,YAAU,eAAe;AACzB,YAAU,kBAAkB,WAAW;AACvC,YAAU,qBAAqB;AAAA;;;ACXjC,IAAI,OAAO;AACJ,cAAc,IAAI,aAAa,SAAS;AAC7C,MAAI,QAAQ,SAAS;AACrB,QAAM,eAAe;AAAA;AAEhB,iBAAiB,IAAI,aAAa,SAAS;AAChD,MAAI,QAAQ,SAAS;AACrB,MAAI,OAAO,MAAM;AAEjB,MAAI,SAAS,SAAS;AACpB,UAAM,eAAe;AAAA;AAAA;AAGlB,iBAAiB,IAAI,aAAa;AACvC,SAAO,CAAC,CAAC,SAAS,IAAI;AAAA;AAGxB,kBAAkB,IAAI;AACpB,SAAO,GAAG,SAAU,IAAG,QAAQ;AAAA;AAYjC,AAAQ,eAAe;AAAA,EACrB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,GACP,WAAY;AAAA;;;AC7Bf,IAAI,iBAEJ,SAAU,QAAQ;AAChB,YAAU,iBAAgB;AAE1B,2BAAwB,IAAI;AAC1B,QAAI,QAAQ,OAAO,KAAK,SAAS;AAEjC,UAAM,MAAM;AAEZ,QAAI,mBAAmB,KAAK,MAAM,mBAAmB;AACrD,QAAI,mBAAmB,KAAK,MAAM,mBAAmB;AACrD,QAAI,iBAAiB,KAAK,MAAM,iBAAiB;AACjD,QAAI,oBAAoB,KAAK,MAAM,oBAAoB;AACvD,QAAI,eAAe,KAAK,MAAM,eAAe;AAO7C,UAAM,SAAS,SAAU,aAAa,KAAK;AAEzC,WAAK;AACL,WAAK,OAAO,SAAS,MAAM,QAAQ,IAAI;AAAA,QACrC,kBAAkB;AAAA,QAClB,iBAAiB;AAAA,QAEjB,kBAAkB;AAAA,QAClB,yBAAyB;AAAA;AAG3B,UAAI,eAAe,MAAM;AACvB,sBAAc;AAAA;AAGhB,UAAI,gBAAgB,QAAQ,gBAAgB,UAAU,gBAAgB,OAAO;AAC3E,WAAG,GAAG,aAAa;AACnB,WAAG,GAAG,aAAa;AACnB,WAAG,GAAG,WAAW;AAAA;AAGnB,UAAI,gBAAgB,QAAQ,gBAAgB,WAAW,gBAAgB,QAAQ;AAC7E,WAAG,GAAG,cAAc;AACpB,WAAG,GAAG,SAAS;AAAA;AAAA;AAInB,UAAM,UAAU,WAAY;AAC1B,SAAG,IAAI,aAAa;AACpB,SAAG,IAAI,aAAa;AACpB,SAAG,IAAI,WAAW;AAClB,SAAG,IAAI,cAAc;AACrB,SAAG,IAAI,SAAS;AAAA;AAGlB,WAAO;AAAA;AAGT,kBAAe,UAAU,aAAa,WAAY;AAChD,WAAO,KAAK;AAAA;AAGd,kBAAe,UAAU,aAAa,WAAY;AAChD,WAAO,KAAK;AAAA;AAGd,kBAAe,UAAU,oBAAoB,SAAU,gBAAgB;AACrE,SAAK,iBAAiB;AAAA;AAGxB,kBAAe,UAAU,UAAU,WAAY;AAC7C,SAAK;AAAA;AAGP,kBAAe,UAAU,oBAAoB,SAAU,GAAG;AACxD,QAAI,AAAU,mCAAmC,MAAM,EAAE,UAAU,EAAE,OAAO,WAAW;AACrF;AAAA;AAGF,QAAI,IAAI,EAAE;AACV,QAAI,IAAI,EAAE;AAGV,QAAI,KAAK,kBAAkB,KAAK,eAAe,GAAG,GAAG,IAAI;AACvD,WAAK,KAAK;AACV,WAAK,KAAK;AACV,WAAK,YAAY;AAAA;AAAA;AAIrB,kBAAe,UAAU,oBAAoB,SAAU,GAAG;AACxD,QAAI,CAAC,KAAK,aAAa,CAAC,oBAAoB,mBAAmB,GAAG,KAAK,SAAS,EAAE,iBAAiB,WAAW,AAAiB,QAAQ,KAAK,KAAK,cAAc;AAC7J;AAAA;AAGF,QAAI,IAAI,EAAE;AACV,QAAI,IAAI,EAAE;AACV,QAAI,OAAO,KAAK;AAChB,QAAI,OAAO,KAAK;AAChB,QAAI,KAAK,IAAI;AACb,QAAI,KAAK,IAAI;AACb,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,KAAK,2BAA2B,AAAU,KAAK,EAAE;AACtD,YAAQ,MAAM,OAAO,mBAAmB,GAAG;AAAA,MACzC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,qBAAqB;AAAA;AAAA;AAIzB,kBAAe,UAAU,kBAAkB,SAAU,GAAG;AACtD,QAAI,CAAC,AAAU,mCAAmC,IAAI;AACpD,WAAK,YAAY;AAAA;AAAA;AAIrB,kBAAe,UAAU,qBAAqB,SAAU,GAAG;AACzD,QAAI,aAAa,oBAAoB,oBAAoB,GAAG,KAAK;AACjE,QAAI,aAAa,oBAAoB,oBAAoB,GAAG,KAAK;AACjE,QAAI,aAAa,EAAE;AACnB,QAAI,qBAAqB,KAAK,IAAI;AAClC,QAAI,UAAU,EAAE;AAChB,QAAI,UAAU,EAAE;AAEhB,QAAI,eAAe,KAAK,CAAC,cAAc,CAAC,YAAY;AAClD;AAAA;AAMF,QAAI,YAAY;AASd,UAAI,SAAS,qBAAqB,IAAI,MAAM,qBAAqB,IAAI,MAAM;AAC3E,UAAI,SAAQ,aAAa,IAAI,SAAS,IAAI;AAC1C,6BAAuB,MAAM,QAAQ,oBAAoB,GAAG;AAAA,QAC1D,OAAO;AAAA,QACP;AAAA,QACA;AAAA,QACA,qBAAqB;AAAA;AAAA;AAIzB,QAAI,YAAY;AAEd,UAAI,WAAW,KAAK,IAAI;AAExB,UAAI,cAAe,cAAa,IAAI,IAAI,MAAO,YAAW,IAAI,MAAM,WAAW,IAAI,OAAO;AAC1F,6BAAuB,MAAM,cAAc,oBAAoB,GAAG;AAAA,QAChE;AAAA,QACA;AAAA,QACA;AAAA,QACA,qBAAqB;AAAA;AAAA;AAAA;AAK3B,kBAAe,UAAU,gBAAgB,SAAU,GAAG;AACpD,QAAI,AAAiB,QAAQ,KAAK,KAAK,cAAc;AACnD;AAAA;AAGF,QAAI,SAAQ,EAAE,aAAa,IAAI,MAAM,IAAI;AACzC,2BAAuB,MAAM,QAAQ,MAAM,GAAG;AAAA,MAC5C,OAAO;AAAA,MACP,SAAS,EAAE;AAAA,MACX,SAAS,EAAE;AAAA,MACX,qBAAqB;AAAA;AAAA;AAIzB,SAAO;AAAA,EACP;AAEF,gCAAgC,YAAY,WAAW,iBAAiB,GAAG,gBAAgB;AACzF,MAAI,WAAW,kBAAkB,WAAW,eAAe,GAAG,eAAe,SAAS,eAAe,UAAU;AAI7G,IAAU,KAAK,EAAE;AACjB,YAAQ,YAAY,WAAW,iBAAiB,GAAG;AAAA;AAAA;AAIvD,iBAAiB,YAAY,WAAW,iBAAiB,GAAG,gBAAgB;AAG1E,iBAAe,sBAAsB,KAAK,qBAAqB,MAAM,iBAAiB;AAEtF,aAAW,QAAQ,WAAW;AAAA;AAShC,6BAA6B,iBAAiB,GAAG,UAAU;AACzD,MAAI,UAAU,SAAS;AACvB,SAAO,CAAC,mBAAmB,WAAY,EAAC,SAAS,YAAY,EAAE,MAAM,UAAU;AAAA;AAGjF,IAAO,yBAAQ;;;AC3NR,yBAAyB,gBAAgB,IAAI,IAAI;AACtD,MAAI,SAAS,eAAe;AAC5B,SAAO,KAAK;AACZ,SAAO,KAAK;AACZ,SAAO;AAAA;AAMF,0BAA0B,gBAAgB,WAAW,OAAO,OAAO;AACxE,MAAI,SAAS,eAAe;AAC5B,MAAI,YAAY,eAAe;AAC/B,MAAI,UAAU,eAAe,OAAO,eAAe,QAAQ;AAC3D,aAAW;AAEX,MAAI,WAAW;AACb,QAAI,UAAU,UAAU,OAAO;AAC/B,QAAI,UAAU,UAAU,OAAO;AAC/B,cAAU,KAAK,IAAI,KAAK,IAAI,SAAS,UAAU;AAAA;AAGjD,MAAI,YAAY,UAAU,eAAe;AACzC,iBAAe,OAAO;AAEtB,SAAO,KAAM,SAAQ,OAAO,KAAM,aAAY;AAC9C,SAAO,KAAM,SAAQ,OAAO,KAAM,aAAY;AAC9C,SAAO,UAAU;AACjB,SAAO,UAAU;AACjB,SAAO;AAAA;;;ACjCT,IAAI,sBAAsB;AAAA,EACxB,eAAe;AAAA,EACf,WAAW;AAAA,EACX,SAAS;AAAA;AAOJ,6BAA6B,GAAG,KAAK,qBAAqB;AAC/D,MAAI,QAAQ,IAAI,sBAAsB,EAAE;AAExC,MAAI,WAAW,SAAS,MAAM;AAC9B,SAAO,SAAS,UAAU,uBAAuB,CAAC,oBAAoB,eAAe,MAAM,aAAa,YAAY,SAAS,UAAU;AAAA;;;ACKzI,IAAI,4BAA4B,CAAC,QAAQ,UAAU,QAAQ,WAAW,WAAW,YAAY;AAC7F,IAAI,+BAA+B,AAAO,cAAc;AACxD,IAAI,wBAAwB,AAAO,cAAc,0BAA0B,OAAO,CAAC;AACnF,IAAI,iBAAiB,AAAO,cAAc,0BAA0B,OAAO,CAAC;AAC5E,IAAI,cAAc;AAElB,2BAA2B,OAAO;AAChC,MAAI,YAAY,MAAM;AACtB,MAAI,YAAY,MAAM,IAAI;AAG1B,MAAI,aAAa,MAAM;AACrB,cAAU,OAAO;AAAA;AAGnB,SAAO;AAAA;AAGT,IAAI,UAEJ,WAAY;AACV,oBAAiB,KAAK;AACpB,QAAI,QAAQ,IAAY;AACxB,SAAK,MAAM,OAAO;AAClB,SAAK,cAAc,IAAI,uBAAe,IAAI;AAC1C,SAAK,kBAAkB;AAAA,MACrB,QAAQ;AAAA;AAEV,SAAK,QAAQ;AACb,UAAM,IAAI,KAAK,gBAAgB,IAAY;AAC3C,UAAM,IAAI,KAAK,YAAY,IAAY;AAAA;AAGzC,WAAQ,UAAU,OAAO,SAAU,eAAe,SAAS,KAAK,UAAU,SAAS;AACjF,QAAI,QAAQ,cAAc,aAAa;AAGvC,QAAI,OAAO,cAAc,WAAW,cAAc;AAClD,aAAS,QAAQ,cAAc;AAAA,MAC7B,UAAU;AAAA,MACV,SAAS;AAAA,OACR,SAAU,WAAW;AACtB,UAAI,CAAC,QAAQ,UAAU,sBAAsB,eAAe;AAC1D,eAAO,UAAU;AAAA;AAAA;AAGrB,QAAI,MAAM,cAAc;AACxB,QAAI,eAAe,KAAK;AACxB,QAAI,QAAQ,KAAK;AACjB,QAAI,gBAAgB,IAAI;AACxB,QAAI,mBAAmB,cAAc;AACrC,QAAI,oBAAoB,cAAc;AAEtC,QAAI,cAAc,CAAC,aAAa,QAAQ,MAAM;AAE9C,QAAI,aAAa;AACf,YAAM,IAAI,kBAAkB;AAC5B,YAAM,IAAI,kBAAkB;AAC5B,YAAM,SAAS,kBAAkB;AACjC,YAAM,SAAS,kBAAkB;AACjC,YAAM;AAAA,WACD;AACL,MAAQ,YAAY,OAAO,mBAAmB;AAAA;AAGhD,QAAI,6BAA6B,QAAQ,KAAK,UAAU,iBAAiB,KAAK,UAAU,cAAc,SAAS;AAC/G,QAAI,eAAe;AAAA,MACjB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAGF,QAAI,IAAI,iBAAiB,WAAW;AAClC,WAAK,cAAc;AAAA,eACV,IAAI,iBAAiB,UAAU;AACxC,WAAK,UAAU;AAAA;AAGjB,SAAK,kBAAkB,eAAe,SAAS;AAE/C,SAAK,wBAAwB,eAAe,cAAc,KAAK;AAAA;AAGjE,WAAQ,UAAU,gBAAgB,SAAU,cAAc;AACxD,QAAI,qBAAqB,KAAK,sBAAsB,AAAO;AAC3D,QAAI,oBAAoB,AAAO;AAC/B,QAAI,eAAe,KAAK;AACxB,QAAI,mBAAmB,aAAa;AACpC,QAAI,gBAAgB,aAAa;AACjC,QAAI,OAAO,aAAa;AAExB,QAAI,iBAAiB,SAAU,OAAO;AACpC,aAAO,CAAC,MAAM,KAAK,iBAAiB,SAAS,iBAAiB,GAAG,MAAM,KAAK,iBAAiB,SAAS,iBAAiB;AAAA;AAGzH,iBAAa;AAEb,IAAO,KAAK,aAAa,IAAI,SAAS,SAAU,QAAQ;AACtD,UAAI,aAAa,OAAO;AAMxB,UAAI,cAAc,mBAAmB,IAAI;AAEzC,UAAI,KAAK,kBAAkB,IAAI,eAAe,IAC1C,UAAU,GAAG,SACb,cAAc,GAAG;AAErB,UAAI,CAAC,aAAa;AAChB,sBAAc,mBAAmB,IAAI,YAAY,IAAY;AAC7D,qBAAa,IAAI;AACjB,kBAAU,OAAO,KAAK,YAAY,cAAc;AAChD,sBAAc,aAAa,QAAQ,cAAc,eAAe,cAAc,OAAO,KAAK,aAAa,WAAW;AAClH,0BAAkB,IAAI,YAAY;AAAA,UAChC;AAAA,UACA;AAAA;AAAA;AAIJ,UAAI,eAAe,IAAY,qBAAa;AAAA,QAC1C,wBAAwB;AAAA,QACxB,OAAO;AAAA,UACL,OAAO;AAAA;AAAA;AAGX,kBAAY,IAAI;AAChB,MAAO,KAAK,OAAO,YAAY,SAAU,UAAU;AACjD,YAAI,SAAS,SAAS,WAAW;AAC/B;AAAA;AAGF,YAAI,SAAS;AAEb,iBAAS,IAAI,GAAG,IAAI,SAAS,SAAS,QAAQ,EAAE,GAAG;AACjD,iBAAO,KAAK,eAAe,SAAS,SAAS;AAAA;AAG/C,qBAAa,MAAM,MAAM,KAAK,IAAY,gBAAQ;AAAA,UAChD,wBAAwB;AAAA,UACxB,OAAO;AAAA,YACL;AAAA;AAAA;AAIJ,iBAAS,IAAI,GAAG,IAAK,UAAS,YAAY,SAAS,UAAU,SAAS,IAAI,EAAE,GAAG;AAC7E,cAAI,WAAW,SAAS,UAAU;AAClC,cAAI,WAAW;AAEf,mBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,EAAE,GAAG;AACxC,qBAAS,KAAK,eAAe,SAAS;AAAA;AAGxC,uBAAa,MAAM,MAAM,KAAK,IAAY,gBAAQ;AAAA,YAChD,wBAAwB;AAAA,YACxB,OAAO;AAAA,cACL,QAAQ;AAAA;AAAA;AAAA;AAAA;AAKhB,gCAA0B,cAAc,cAAc,SAAS;AAE/D,UAAI,wBAAwB,qBAAa;AACvC,qBAAa,UAAU;AAAA;AAGzB,UAAI,WAAW,eAAe,OAAO;AACrC,0BAAoB,cAAc,cAAc,YAAY,aAAa,eAAe,SAAS;AAAA;AAGnG,uBAAmB,KAAK,SAAU,aAAa,YAAY;AACzD,UAAI,KAAK,kBAAkB,IAAI,aAC3B,UAAU,GAAG,SACb,cAAc,GAAG;AAErB,iCAA2B,cAAc,aAAa,YAAY,aAAa,eAAe;AAC9F,4BAAsB,cAAc,aAAa,YAAY,aAAa;AAC1E,iCAA2B,cAAc,aAAa,YAAY,aAAa;AAAA,OAC9E;AAAA;AAGL,WAAQ,UAAU,YAAY,SAAU,cAAc;AACpD,QAAI,UAAU,aAAa,IAAI;AAC/B,QAAI,mBAAmB,aAAa;AACpC,SAAK,UAAU,IAAI,iBAAiB;AACpC,SAAK,UAAU,IAAI,iBAAiB;AACpC,SAAK,UAAU,SAAS,iBAAiB;AACzC,SAAK,UAAU,SAAS,iBAAiB;AAEzC,QAAI,KAAK,oBAAoB,UAAU;AACrC,WAAK;AAEL,WAAK,QAAQ;AAAA;AAGf,QAAI,mBAAmB,KAAK,oBAAoB,AAAO;AACvD,QAAI,YAAY;AAChB,IAAO,KAAK,KAAK,kBAAkB,OAAO,SAAU,WAAW;AAK7D,UAAI,aAAa,UAAU;AAC3B,UAAI,gBAAgB,aAAa;AACjC,UAAI,OAAO,aAAa;AACxB,UAAI,kBAAkB,UAAU;AAChC,UAAI,KAAK,UAAU;AACnB,UAAI,UAAU,OAAO,KAAK,YAAY,cAAc;AACpD,UAAI,cAAc,cAAc,eAAe;AAE/C,UAAI,6BAA6B,IAAI,oBAAoB,QAAQ,cAAc,qBAAa;AAC1F,kCAA0B,cAAc,IAAI,SAAS;AAAA;AAGvD,UAAI,cAAc,qBAAa;AAC7B,WAAG,UAAU;AAAA;AAMf,SAAG,iBAAiB;AAEpB,UAAI,CAAC,UAAU,WAAW;AAGxB,YAAI,eAAe,IAAI,oBAAoB,MAAM;AAC/C,8BAAoB,cAAc,IAAI,YAAY,aAAa,eAAe,SAAS;AAAA;AAGzF,mCAA2B,cAAc,IAAI,YAAY,aAAa,eAAe;AACrF,8BAAsB,cAAc,IAAI,YAAY,aAAa;AAEjE,YAAI,sBAAsB,IAAI,oBAAoB,MAAM;AACtD,cAAI,UAAU,2BAA2B,cAAc,IAAI,YAAY,aAAa;AAEpF,cAAI,YAAY,QAAQ;AACtB,wBAAY;AAAA;AAGd,cAAI,MAAM,iBAAiB,IAAI,eAAe,iBAAiB,IAAI,YAAY;AAC/E,cAAI,KAAK;AAAA;AAAA;AAAA,OAGZ;AAEH,SAAK,qBAAqB,WAAW;AAAA;AAGvC,WAAQ,UAAU,uBAAuB,SAAU,WAAW,cAAc;AAI1E,QAAI,aAAa,aAAa,OAAO;AACnC,UAAI,YAAY,aAAa,cAAc,SAAS,CAAC,QAAQ,cAAc;AAG3E,UAAI,YAAY,UAAU;AAE1B,WAAK,kBAAkB,KAAK,SAAS,SAAU,IAAI;AACjD,YAAI,CAAC,GAAG,SAAS;AAGf,+BAAqB;AACrB,cAAI,QAAQ,GAAG,YAAY,QAAQ,SAAS;AAE5C,cAAI,MAAM,WAAW,QAAQ,aAAa,MAAM;AAC9C,kBAAM,UAAU;AAAA;AAKlB,aAAG,YAAY;AAAA;AAAA;AAAA;AAAA;AAMvB,WAAQ,UAAU,SAAS,WAAY;AACrC,SAAK,cAAc;AAEnB,SAAK,sBAAsB;AAE3B,SAAK,UAAU;AAEf,SAAK;AAEL,SAAK,YAAY;AAEjB,SAAK,kBAAkB;AAAA;AAGzB,WAAQ,UAAU,0BAA0B,SAAU,MAAM,UAAU;AACpE,QAAI,QAAQ,MAAM;AAChB,aAAO;AAAA;AAGT,QAAI,MAAM,SAAS;AAEnB,QAAI,IAAI,iBAAiB,WAAW;AAClC,UAAI,qBAAqB,KAAK;AAE9B,UAAI,oBAAoB;AACtB,YAAI,cAAc,mBAAmB,IAAI;AACzC,eAAO,cAAc,CAAC,eAAe;AAAA;AAAA,eAE9B,IAAI,iBAAiB,UAAU;AACxC,aAAO,KAAK,qBAAqB,KAAK,kBAAkB,IAAI,SAAS;AAAA;AAAA;AAIzE,WAAQ,UAAU,sBAAsB,SAAU,SAAS;AACzD,WAAO,KAAK,gBAAgB;AAAA;AAG9B,WAAQ,UAAU,UAAU,SAAU,SAAS;AAC7C,QAAI,WAAW,yBAAiB,eAAe;AAE/C,QAAI,YAAY,SAAS,SAAS,UAAU;AAC1C,UAAI,aAAa,SAAS,WAAW,KAAK;AAE1C,WAAK,UAAU,IAAI,WAAW;AAE9B,WAAK,oBAAoB;AACzB,WAAK,cAAc;AAAA;AAAA;AAIvB,WAAQ,UAAU,WAAW,WAAY;AACvC,QAAI,UAAU,KAAK;AAEnB,QAAI,WAAW,MAAM;AACnB;AAAA;AAGF,QAAI,WAAW,yBAAiB,eAAe;AAE/C,QAAI,YAAY,SAAS,SAAS,UAAU;AAC1C,eAAS,YAAY,KAAK;AAAA;AAG5B,SAAK,oBAAoB;AACzB,SAAK,oBAAoB;AAEzB,SAAK,UAAU;AAEf,SAAK,cAAc;AAAA;AAGrB,WAAQ,UAAU,oBAAoB,SAAU,eAAe,SAAS,KAAK;AAC3E,QAAI,MAAM,cAAc;AACxB,QAAI,aAAa,KAAK;AACtB,QAAI,iBAAiB,KAAK;AAE1B,mBAAe,YAAY,cAAc,IAAI;AAC7C,mBAAe,OAAO,IAAI;AAG1B,eAAW,OAAO,cAAc,IAAI,WAAW;AAC/C,QAAI,WAAW,cAAc;AAE7B,8BAA0B;AACxB,UAAI,SAAS;AAAA,QACX,MAAM;AAAA,QACN,eAAe;AAAA;AAEjB,aAAO,WAAW,QAAQ,cAAc;AACxC,aAAO;AAAA;AAGT,eAAW,IAAI,OAAO,GAAG,OAAO,SAAU,GAAG;AAC3C,WAAK,iBAAiB;AACtB,MAAW,gBAAgB,gBAAgB,EAAE,IAAI,EAAE;AACnD,UAAI,eAAe,AAAO,OAAO,kBAAkB;AAAA,QACjD,IAAI,EAAE;AAAA,QACN,IAAI,EAAE;AAAA;AAAA,OAEP;AACH,eAAW,IAAI,QAAQ,GAAG,QAAQ,SAAU,GAAG;AAC7C,WAAK,iBAAiB;AACtB,MAAW,iBAAiB,gBAAgB,EAAE,OAAO,EAAE,SAAS,EAAE;AAClE,UAAI,eAAe,AAAO,OAAO,kBAAkB;AAAA,QACjD,MAAM,EAAE;AAAA,QACR,SAAS,EAAE;AAAA,QACX,SAAS,EAAE;AAAA;AAAA,OAEZ;AACH,eAAW,kBAAkB,SAAU,GAAG,GAAG,GAAG;AAC9C,aAAO,IAAI,aAAa,CAAC,GAAG,OAAO,CAAC,oBAAoB,GAAG,KAAK;AAAA;AAAA;AAgBpE,WAAQ,UAAU,sBAAsB,WAAY;AAClD,SAAK,MAAM,SAAS,SAAU,IAAI;AAChC,UAAI,QAAQ,GAAG;AAEf,UAAI,OAAO;AACT,cAAM,SAAS,YAAY,OAAO;AAAA;AAAA;AAAA;AAKxC,WAAQ,UAAU,0BAA0B,SAAU,eAAe,cAAc,KAAK,UAAU;AAChG,QAAI,UAAU;AACd,iBAAa,IAAI;AACjB,iBAAa,IAAI;AAEjB,QAAI,cAAc,IAAI,iBAAiB;AACrC,mBAAa,GAAG,aAAa,WAAY;AACvC,gBAAQ,iBAAiB;AAAA;AAE3B,mBAAa,GAAG,SAAS,SAAU,GAAG;AACpC,YAAI,CAAC,QAAQ,gBAAgB;AAC3B;AAAA;AAGF,gBAAQ,iBAAiB;AAAA;AAAA;AAAA;AAK/B,SAAO;AAAA;AAKT,mCAAmC,cAAc,IAAI,WAAW,aAAa;AAQ3E,MAAI,mBAAmB,YAAY,SAAS;AAC5C,MAAI,qBAAqB,YAAY,SAAS,CAAC,YAAY;AAC3D,MAAI,iBAAiB,YAAY,SAAS,CAAC,QAAQ;AACnD,MAAI,mBAAmB,YAAY,SAAS,CAAC,UAAU;AAGvD,MAAI,cAAc,kBAAkB;AACpC,MAAI,gBAAgB,kBAAkB;AACtC,MAAI,cAAc,kBAAkB;AACpC,MAAI,YAAY,kBAAkB;AAElC,MAAI,OAAO,aAAa;AAExB,MAAI,MAAM;AAIR,QAAI,QAAQ,KAAK,cAAc,WAAW;AAC1C,QAAI,QAAQ,KAAK,cAAc,WAAW;AAE1C,QAAI,aAAa,8BAA8B,MAAM,MAAM;AACzD,kBAAY,OAAO,MAAM;AAAA;AAG3B,QAAI,OAAO;AACT,kBAAY,QAAQ,+BAA+B,OAAO,aAAa;AAAA;AAAA;AAM3E,KAAG,SAAS;AACZ,KAAG,MAAM,gBAAgB;AACzB,KAAG,YAAY,YAAY,QAAQ;AACnC,KAAG,YAAY,UAAU,QAAQ;AACjC,KAAG,YAAY,QAAQ,QAAQ;AAE/B,uBAAqB;AAAA;AAGvB,6BAA6B,cAAc,IAAI,YAAY,aAAa,eACxE,SACA,SAAS;AACP,MAAI,OAAO,aAAa;AACxB,MAAI,QAAQ,aAAa;AACzB,MAAI,YAAY,QAAQ,MAAM,KAAK,IAAI,KAAK,aAAa,UAAU;AACnE,MAAI,aAAa,QAAQ,KAAK,cAAc;AAK5C,MAAI,SAAS,aAAa,cAAc,WAAW,WAAW;AAC5D,QAAI,QAAQ,CAAC,QAAQ,UAAU;AAC/B,QAAI,eAAe;AAEnB,QAAI,CAAC,QAAQ,WAAW,GAAG;AACzB,qBAAe;AAAA;AAGjB,QAAI,mBAAmB,UAAU;AAAA,MAC/B,QAAQ;AAAA,QACN,OAAO;AAAA,QACP,eAAe;AAAA;AAAA,QAEf;AAGJ,kBAAc,IAAI,qBAAqB,cAAc;AAAA,MACnD;AAAA,MACA,gBAAgB;AAAA,MAChB,aAAa;AAAA,OACZ;AACH,QAAI,SAAS,GAAG;AAEhB,QAAI,QAAQ;AACV,kBAAY,QAAQ,SAAS,OAAO;AAEpC,UAAI,GAAG,cAAc,SAAS;AAE5B,YAAI,OAAO,GAAG,kBAAkB;AAKhC,WAAG,WAAW,aAAa;AAC3B,WAAG,WAAW,WAAW,CAAE,SAAQ,KAAK,KAAK,KAAK,KAAK,QAAQ,MAAM,KAAM,SAAQ,KAAK,KAAK,KAAK,KAAK,SAAS,MAAM;AAAA;AAAA;AAU1H,OAAG,wBAAwB;AAAA,SACtB;AACL,OAAG;AACH,OAAG;AACH,OAAG,wBAAwB;AAAA;AAAA;AAI/B,oCAAoC,cAAc,cAAc,YAAY,aAAa,eACzF,SAAS;AAGP,MAAI,aAAa,MAAM;AAQrB,iBAAa,KAAK,iBAAiB,SAAS;AAAA,SAMzC;AAED,cAAU,cAAc,YAAY;AAAA,MAClC,eAAe;AAAA,MACf,gBAAgB,cAAc;AAAA,MAC9B,UAAU,cAAc;AAAA,MACxB,MAAM;AAAA,MACN,QAAQ,eAAe,YAAY,UAAU;AAAA;AAAA;AAAA;AAKrD,+BAA+B,cAAc,IAAI,YAAY,aAAa,eAAe;AACvF,MAAI,CAAC,aAAa,MAAM;AACtB,IAAQ,iBAAiB;AAAA,MACvB;AAAA,MACA,gBAAgB;AAAA,MAChB,UAAU;AAAA,MAEV,mBAAmB,YAAY,IAAI;AAAA;AAAA;AAAA;AAKzC,oCAAoC,cAAc,IAAI,YAAY,aAAa,eAAe;AAE5F,KAAG,wBAAwB,CAAC,CAAC,cAAc,IAAI;AAE/C,MAAI,gBAAgB,YAAY,SAAS;AACzC,MAAI,QAAQ,cAAc,IAAI;AAC9B,sBAAoB,IAAI,OAAO,cAAc,IAAI;AAEjD,MAAI,aAAa,OAAO;AACtB,oCAAgC,IAAI,eAAe;AAAA;AAGrD,SAAO;AAAA;AAGT,IAAO,kBAAQ;;;AChnBf,IAAI,UAEJ,SAAU,QAAQ;AAChB,YAAU,UAAS;AAEnB,sBAAmB;AACjB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,SAAQ;AACrB,WAAO;AAAA;AAGT,WAAQ,UAAU,SAAS,SAAU,UAAU,SAAS,KAAK,SAAS;AAEpE,QAAI,WAAW,QAAQ,SAAS,qBAAqB,QAAQ,SAAS,KAAK,KAAK;AAC9E;AAAA;AAGF,QAAI,QAAQ,KAAK;AACjB,UAAM;AAEN,QAAI,SAAS,mBAAmB;AAC9B;AAAA;AAGF,QAAI,KAAK,YAAY,WAAW,QAAQ,SAAS,WAAW;AAC1D,WAAK,SAAS;AAAA;AAIhB,QAAI,CAAE,YAAW,QAAQ,SAAS,aAAa,QAAQ,kBAAkB,YAAY,QAAQ,aAAa,SAAS,KAAK;AACtH,UAAI,SAAS,cAAc;AACzB,YAAI,UAAU,KAAK,YAAY,IAAI,gBAAQ;AAC3C,cAAM,IAAI,QAAQ;AAClB,gBAAQ,KAAK,UAAU,SAAS,KAAK,MAAM;AAC3C,aAAK,WAAW;AAAA,aACX;AAEL,aAAK,YAAY,KAAK,SAAS;AAC/B,aAAK,WAAW;AAAA;AAAA,WAEb;AACL,UAAI,UAAU,KAAK;AACnB,iBAAW,MAAM,IAAI,QAAQ;AAAA;AAG/B,aAAS,IAAI,uBAAuB,QAAQ,aAAa,aAAa,KAAK,eAAe,UAAU,SAAS;AAAA;AAG/G,WAAQ,UAAU,SAAS,WAAY;AACrC,SAAK,YAAY,KAAK,SAAS;AAC/B,SAAK,WAAW;AAChB,SAAK,MAAM;AAAA;AAGb,WAAQ,UAAU,UAAU,WAAY;AACtC,SAAK,YAAY,KAAK,SAAS;AAC/B,SAAK,WAAW;AAAA;AAGlB,WAAQ,UAAU,iBAAiB,SAAU,UAAU,SAAS,KAAK;AACnE,QAAI,eAAe,SAAS;AAC5B,QAAI,QAAQ,KAAK;AACjB,iBAAa,KAAK,aAAa,aAAa,UAAU,SAAU,OAAO,mBAAmB;AACxF,UAAI,MAAM,QAAQ;AAChB;AAAA;AAGF,UAAI,WAAS,aAAa,cAAc;AAExC,UAAI,CAAC,YAAU,CAAC,SAAO,OAAO;AAE5B;AAAA;AAGF,UAAI,QAAQ,SAAO;AACnB,UAAI,SAAS,SAAO;AACpB,UAAI,SAAS,IAAY,eAAO;AAAA,QAC9B,OAAO;AAAA,UAOL,MAAM,SAAS,UAAU,UAAU,SAAS;AAAA;AAAA,QAE9C,OAAO;AAAA,UACL,IAAI,MAAM,KAAK,SAAS;AAAA,UACxB,IAAI,MAAM;AAAA,UACV,GAAG;AAAA;AAAA,QAEL,QAAQ;AAAA,QAER,IAAI,IAAK,EAAC,SAAS,mBAAmB,IAAI;AAAA;AAW5C,UAAI,CAAC,QAAQ;AACX,YAAI,WAAW,SAAS,WAAW;AACnC,YAAI,SAAS,aAAa,QAAQ;AAClC,YAAI,cAAc,SAAS,YAAY;AACvC,YAAI,YAAY,aAAa,aAAa;AAC1C,YAAI,aAAa,UAAU,SAAS;AACpC,YAAI,cAAc,SAAS,iBAAiB;AAQ5C,sBAAc,QAAQ,qBAAqB,YAAY;AAAA,UACrD,cAAc;AAAA,YACZ,mBAAmB,SAAU,KAAK,OAAO;AACvC,qBAAO,SAAS,kBAAkB,aAAa;AAAA;AAAA;AAAA;AAIrD,eAAO,wBAAwB;AAE/B,YAAI,CAAC,WAAW,IAAI,aAAa;AAC/B,iBAAO,cAAc;AAAA,YACnB,UAAU;AAAA;AAAA;AAId,oBAAY,qBAAqB,SAAU,SAAS;AAClD,wBAAc,QAAQ;AAAA;AAAA;AAI1B,YAAM,IAAI;AAAA;AAAA;AAId,WAAQ,OAAO;AACf,SAAO;AAAA,EACP;AAEF,IAAO,kBAAQ;;;ACjJf,IAAI,YAEJ,SAAU,QAAQ;AAChB,YAAU,YAAW;AAErB,wBAAqB;AACnB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,WAAU;AAEvB,UAAM,eAAe;AAErB,UAAM,cAAc;AAEpB,UAAM,qBAAqB,SAAU,WAAW;AAC9C,UAAI,aAAa,MAAM;AACrB,YAAI,SAAS,KAAK,UAAU,QAAQ;AACpC,YAAI,MAAM,KAAK;AACf,YAAI,SAAS,IAAI,UAAU;AAC3B,eAAO,UAAU,IAAI,YAAY,OAAO;AAAA;AAAA;AAI5C,WAAO;AAAA;AAGT,aAAU,UAAU,iBAAiB,SAAU,QAAQ;AACrD,QAAI,OAAO,uBAAuB,MAAM;AAAA,MACtC,iBAAiB,CAAC;AAAA,MAClB,iBAAiB,AAAO,MAAM,8BAA8B;AAAA;AAE9D,QAAI,cAAc,AAAO;AACzB,QAAI,gBAAgB;AAEpB,aAAS,IAAI,GAAG,OAAM,KAAK,SAAS,IAAI,MAAK,KAAK;AAChD,UAAI,SAAS,KAAK,QAAQ;AAC1B,kBAAY,IAAI,QAAQ;AAAA;AAG1B,QAAI,YAAY,yBAAiB,KAAK,KAAK,cAAc,KAAK,OAAO,SAAS,KAAK,OAAO;AAC1F,IAAO,KAAK,UAAU,SAAS,SAAU,QAAQ;AAC/C,UAAI,OAAO,OAAO;AAElB,UAAI,CAAC,YAAY,IAAI,OAAO;AAC1B,sBAAc,KAAK;AAAA;AAAA;AAMvB,SAAK,aAAa,IAAI;AACtB,WAAO;AAAA;AAQT,aAAU,UAAU,kBAAkB,WAAY;AAChD,QAAI,WAAW,KAAK,OAAO;AAC3B,WAAO,YAAY,OAAO,KAAK,QAAQ,aAAa,OAAO,YAAY;AAAA;AAGzE,aAAU,UAAU,aAAa,WAAY;AAC3C,WAAQ,MAAK,qBAAqB,MAAM,OAAO;AAAA;AASjD,aAAU,UAAU,cAAc,SAAU,WAAW;AAGrD,QAAI,OAAO,KAAK;AAChB,WAAO,KAAK,IAAI,KAAK,aAAa,UAAU;AAAA;AAO9C,aAAU,UAAU,iBAAiB,SAAU,YAAY;AACzD,QAAI,OAAO,KAAK;AAChB,WAAO,KAAK,aAAa,KAAK,YAAY;AAAA;AAO5C,aAAU,UAAU,gBAAgB,SAAU,WAAW,gBAAgB,UAAU;AAEjF,QAAI,OAAO,KAAK;AAChB,QAAI,QAAQ,KAAK,YAAY;AAC7B,QAAI,OAAO,KAAK,QAAQ;AACxB,QAAI,cAAc,KAAK;AACvB,QAAI,cAAc;AAElB,aAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,UAAI,aAAa,YAAY,GAAG,aAAa,YAAY;AACzD,UAAI,WAAW,KAAK,aAAa;AAEjC,UAAI,CAAC,MAAM,YAAY,GAAG,aAAa,IAAI,UAAU,cAAc;AACjE,oBAAY,KAAK,YAAY,GAAG;AAAA;AAAA;AAIpC,WAAO,oBAAoB,WAAW;AAAA,MACpC,QAAQ,YAAY,KAAK;AAAA,MACzB,UAAU,CAAC,YAAY;AAAA,MACvB,QAAQ,CAAC,oBAAoB,aAAa;AAAA,QACxC;AAAA,QACA;AAAA;AAAA;AAAA;AAKN,aAAU,UAAU,UAAU,SAAU,MAAM;AAC5C,SAAK,OAAO,OAAO;AAAA;AAGrB,aAAU,UAAU,YAAY,SAAU,SAAQ;AAChD,SAAK,OAAO,SAAS;AAAA;AAGvB,aAAU,UAAU,gBAAgB,SAAU,KAAK;AACjD,QAAI,WAAW,IAAI,QAAQ;AAC3B,QAAI,OAAO,aAAa,UAAU,GAAG,GAAG,IAAI,WAAW,IAAI,YAAY,IAAI,UAAU;AACrF,SAAK,SAAS,IAAI;AAElB,SAAK,MAAM,SAAS;AAEpB,QAAI,SAAS,QAAQ,WAAW,IAAI;AAClC,WAAK,MAAM,SAAS,KAAK,MAAM;AAC/B,WAAK,MAAM,OAAO;AAClB,WAAK,MAAM,YAAY;AAAA;AAGzB,WAAO;AAAA;AAGT,aAAU,OAAO;AACjB,aAAU,eAAe,CAAC;AAC1B,aAAU,aAAa;AACvB,aAAU,gBAAgB;AAAA,IAExB,QAAQ;AAAA,IAER,GAAG;AAAA,IACH,kBAAkB;AAAA,IAElB,KAAK;AAAA,IAML,MAAM;AAAA,IAEN,KAAK;AAAA,IAUL,aAAa;AAAA,IAMb,kBAAkB;AAAA,IAIlB,gBAAgB;AAAA,IAEhB,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,OAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA;AAAA,IAGT,WAAW;AAAA,MACT,aAAa;AAAA,MACb,aAAa;AAAA,MACb,WAAW;AAAA;AAAA,IAEb,UAAU;AAAA,MACR,OAAO;AAAA,QACL,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,MAET,WAAW;AAAA,QACT,WAAW;AAAA;AAAA;AAAA,IAGf,QAAQ;AAAA,MACN,OAAO;AAAA,QACL,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,MAET,WAAW;AAAA,QACT,OAAO;AAAA;AAAA;AAAA,IAGX,cAAc;AAAA;AAEhB,SAAO;AAAA,EACP;AAEF,IAAO,oBAAQ;;;ACrOf,wBAAwB,OAAO,eAAe;AAC5C,MAAI,cAAc;AAClB,EAAO,KAAK,OAAO,SAAU,MAAM;AACjC,SAAK,KAAK,KAAK,aAAa,UAAU,SAAU,OAAO,KAAK;AAE1D,UAAI,SAAS,QAAQ,KAAK,QAAQ;AAClC,kBAAY,UAAU,YAAY,WAAW;AAE7C,UAAI,CAAC,MAAM,QAAQ;AACjB,oBAAY,QAAQ,KAAK;AAAA;AAAA;AAAA;AAI/B,SAAO,MAAM,GAAG,IAAI,MAAM,GAAG,aAAa,UAAU,SAAU,OAAO,KAAK;AACxE,QAAI,SAAS,QAAQ,MAAM,GAAG,QAAQ;AACtC,QAAI,OAAM;AACV,QAAI,MAAM;AACV,QAAI,MAAM;AACV,QAAI,OAAM,YAAY,QAAQ;AAE9B,aAAS,IAAI,GAAG,IAAI,MAAK,KAAK;AAC5B,YAAM,KAAK,IAAI,KAAK,YAAY,QAAQ;AACxC,YAAM,KAAK,IAAI,KAAK,YAAY,QAAQ;AACxC,cAAO,YAAY,QAAQ;AAAA;AAG7B,QAAI;AAEJ,QAAI,kBAAkB,OAAO;AAC3B,eAAS;AAAA,eACA,kBAAkB,OAAO;AAClC,eAAS;AAAA,eACA,kBAAkB,WAAW;AACtC,eAAS,OAAM;AAAA,WACV;AACL,eAAS;AAAA;AAGX,WAAO,SAAQ,IAAI,MAAM;AAAA;AAAA;AAId,0BAA0B,SAAS;AAChD,MAAI,eAAe;AACnB,UAAQ,iBAAiB,OAAO,SAAU,aAAa;AACrD,QAAI,eAAe,YAAY;AAC/B,QAAI,MAAM,eAAe,MAAM,aAAa,KAAK,MAAM,YAAY;AACnE,IAAC,cAAa,OAAO,aAAa,QAAQ,IAAI,KAAK;AAAA;AAErD,EAAO,KAAK,cAAc,SAAU,YAAY,KAAK;AACnD,QAAI,OAAO,eAAe,AAAO,IAAI,YAAY,SAAU,aAAa;AACtE,aAAO,YAAY;AAAA,QACjB,WAAW,GAAG,IAAI;AAEtB,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,iBAAW,GAAG,eAAe,WAAW,GAAG;AAAA;AAI7C,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,iBAAW,GAAG,cAAc;AAC5B,iBAAW,GAAG,eAAe,MAAM,KAAK,CAAC,WAAW,GAAG;AACvD,iBAAW,GAAG,QAAQ,KAAK;AAC3B,iBAAW,GAAG,aAAa,WAAW;AAAA;AAAA;AAAA;;;AChE7B,yBAAyB,SAAS;AAC/C,MAAI,mBAAmB;AACvB,UAAQ,iBAAiB,OAAO,SAAU,WAAW;AACnD,QAAI,UAAU,UAAU;AAExB,QAAI,UAAU,qBAAqB,iBAAiB,UAAU;AAC5D;AAAA;AAGF,QAAI,mBAAmB;AACvB,IAAO,KAAK,UAAU,aAAa,SAAU,cAAc;AACzD,UAAI,MAAM,aAAa;AACvB,UAAI,QAAO,aAAa;AAExB,UAAI,aAAa,IAAI,uBAAuB,QAAQ,aAAa,WAAW;AAC1E,cAAK,KAAK,MAAK,aAAa,UAAU,SAAU,OAAO,KAAK;AAC1D,cAAI,OAAO,MAAK,QAAQ;AACxB,cAAI,SAAS,IAAI,UAAU;AAI3B,cAAI,CAAC,UAAU,MAAM,QAAQ;AAC3B;AAAA;AAGF,cAAI,SAAS,iBAAiB,SAAS;AACvC,cAAI,QAAQ,IAAI,YAAY,OAAO;AACnC,2BAAiB,QAAQ,SAAS;AAClC,gBAAK,cAAc,KAAK;AAAA,YACtB;AAAA,YACA;AAAA;AAAA;AAAA;AAAA;AAMR,QAAI,OAAO,UAAU;AACrB,SAAK,KAAK,SAAU,KAAK;AACvB,UAAI,OAAO,KAAK,QAAQ;AACxB,UAAI,WAAS,KAAK,cAAc,QAAQ;AACxC,eAAO,YAAY,CAAC,iBAAiB;AACrC,WAAK,cAAc,KAAK;AAAA;AAE1B,qBAAiB,WAAW;AAAA;AAAA;;;AClChC,IAAI,mBAA0B;AAE9B,IAAI,OAEJ,SAAU,QAAQ;AAChB,YAAU,OAAM;AAEhB,iBAAc,MAAM;AAClB,QAAI,QAAQ,OAAO,KAAK,SAAS;AAEjC,UAAM,OAAO;AACb,UAAM,aAAa,CAAC,KAAK;AAOzB,UAAM,qBAAqB,IAAI;AAK/B,UAAM,oBAAoB,IAAI;AAC9B,UAAM,OAAO;AACb,WAAO;AAAA;AAGT,QAAK,UAAU,kBAAkB,SAAU,GAAG,GAAG,OAAO,QAAQ;AAC9D,SAAK,QAAQ,IAAI,qBAAa,GAAG,GAAG,OAAO;AAC3C,WAAO,KAAK;AAAA;AAOd,QAAK,UAAU,kBAAkB,WAAY;AAC3C,WAAO,KAAK;AAAA;AAGd,QAAK,UAAU,cAAc,SAAU,GAAG,GAAG,OAAO,QAAQ;AAC1D,SAAK,aAAa,GAAG,GAAG,OAAO;AAE/B,SAAK,YAAY,IAAI,qBAAa,GAAG,GAAG,OAAO;AAAA;AAOjD,QAAK,UAAU,eAAe,SAAU,GAAG,GAAG,OAAO,QAAQ;AAC3D,QAAI,OAAO,KAAK;AAChB,QAAI,eAAe,KAAK;AACxB,iBAAa,YAAY,KAAK,mBAAmB,IAAI,qBAAa,GAAG,GAAG,OAAO;AAC/E,QAAI,YAAY,aAAa;AAC7B,iBAAa,SAAS;AACtB,iBAAa;AACb,iBAAa,SAAS;AAEtB,SAAK;AAAA;AAOP,QAAK,UAAU,YAAY,SAAU,aAAa;AAChD,QAAI,CAAC,aAAa;AAChB;AAAA;AAGF,SAAK,UAAU;AAEf,SAAK;AAAA;AAGP,QAAK,UAAU,UAAU,SAAU,MAAM;AACvC,WAAO,QAAQ;AACf,QAAI,YAAY,KAAK;AAErB,QAAI,WAAW;AACb,UAAI,UAAU,OAAO,MAAM;AACzB,eAAO,KAAK,IAAI,UAAU,KAAK;AAAA;AAGjC,UAAI,UAAU,OAAO,MAAM;AACzB,eAAO,KAAK,IAAI,UAAU,KAAK;AAAA;AAAA;AAInC,SAAK,QAAQ;AAEb,SAAK;AAAA;AAOP,QAAK,UAAU,mBAAmB,WAAY;AAE5C,QAAI,UAAU,KAAK;AACnB,QAAI,KAAK,QAAQ,IAAI,QAAQ,QAAQ;AACrC,QAAI,KAAK,QAAQ,IAAI,QAAQ,SAAS;AACtC,WAAO,CAAC,IAAI;AAAA;AAGd,QAAK,UAAU,YAAY,WAAY;AACrC,WAAO,KAAK,WAAW,KAAK;AAAA;AAG9B,QAAK,UAAU,UAAU,WAAY;AACnC,WAAO,KAAK,SAAS;AAAA;AAGvB,QAAK,UAAU,mBAAmB,WAAY;AAC5C,WAAO,KAAK,mBAAmB;AAAA;AAOjC,QAAK,UAAU,uBAAuB,WAAY;AAEhD,QAAI,qBAAqB,KAAK,kBAAkB;AAEhD,QAAI,gBAAgB,KAAK;AACzB,QAAI,gBAAgB,KAAK;AACzB,QAAI,UAAS,KAAK;AAClB,QAAI,OAAO,KAAK;AAChB,cAAS,AAAO,eAAe,IAAI,SAAQ;AAC3C,oBAAgB,AAAO,eAAe,IAAI,eAAe;AACzD,kBAAc,UAAU,QAAO;AAC/B,kBAAc,UAAU,QAAO;AAC/B,kBAAc,IAAI,cAAc,KAAK,QAAO;AAC5C,kBAAc,IAAI,cAAc,KAAK,QAAO;AAC5C,kBAAc,SAAS,cAAc,SAAS;AAE9C,SAAK;AAAA;AAQP,QAAK,UAAU,mBAAmB,WAAY;AAC5C,QAAI,oBAAoB,KAAK;AAC7B,QAAI,mBAAmB,KAAK;AAC5B,qBAAiB,SAAS;AAC1B,sBAAkB;AAClB,qBAAiB;AACjB,IAAO,MAAK,KAAK,aAAc,MAAK,YAAY,KAAK,iBAAiB,aAAa,AAAO;AAC1F,SAAK,gBAAgB,iBAAiB;AACtC,SAAK,eAAe,KAAK,gBAAgB;AACzC,IAAO,OAAO,KAAK,cAAc,KAAK;AACtC,SAAK;AAAA;AAGP,QAAK,UAAU,mBAAmB,WAAY;AAC5C,QAAI,mBAAmB,KAAK;AAC5B,QAAI,oBAAoB,KAAK;AAI7B,QAAI,qBAAqB,IAAI;AAC7B,uBAAmB,YAAY,kBAAkB;AACjD,uBAAmB;AACnB,WAAO;AAAA,MACL,MAAM;AAAA,QACJ,GAAG,mBAAmB;AAAA,QACtB,GAAG,mBAAmB;AAAA,QACtB,QAAQ,mBAAmB;AAAA,QAC3B,QAAQ,mBAAmB;AAAA;AAAA,MAE7B,KAAK;AAAA,QACH,GAAG,iBAAiB;AAAA,QACpB,GAAG,iBAAiB;AAAA,QACpB,QAAQ,iBAAiB;AAAA,QACzB,QAAQ,iBAAiB;AAAA;AAAA;AAAA;AAK/B,QAAK,UAAU,cAAc,WAAY;AACvC,WAAO,KAAK;AAAA;AAOd,QAAK,UAAU,uBAAuB,WAAY;AAChD,QAAI,OAAO,KAAK,kBAAkB;AAClC,SAAK,eAAe,KAAK;AACzB,WAAO;AAAA;AAOT,QAAK,UAAU,cAAc,SAAU,MAAM,QAAQ,KAAK;AACxD,QAAI,aAAY,SAAS,KAAK,gBAAgB,KAAK;AACnD,UAAM,OAAO;AACb,WAAO,aAAY,iBAAiB,KAAK,MAAM,cAAa,AAAO,KAAK,KAAK;AAAA;AAO/E,QAAK,UAAU,cAAc,SAAU,OAAO;AAC5C,QAAI,eAAe,KAAK;AACxB,WAAO,eAAe,iBAAiB,IAAI,OAAO,gBAAgB,CAAC,MAAM,IAAI,MAAM;AAAA;AAGrF,QAAK,UAAU,iBAAiB,SAAU,SAAS,QAAQ,OAAO;AAChE,QAAI,WAAW,YAAY;AAC3B,WAAO,aAAa,OAAO,SAAS,YAAY,SAAS;AAAA;AAG3D,QAAK,UAAU,mBAAmB,SAAU,SAAS,QAAQ,OAAO;AAClE,QAAI,WAAW,YAAY;AAC3B,WAAO,aAAa,OAAO,SAAS,YAAY,SAAS;AAAA;AAO3D,QAAK,UAAU,eAAe,SAAU,OAAO;AAC7C,WAAO,KAAK,uBAAuB,QAAQ,MAAM,IAAI,MAAM;AAAA;AAG7D,QAAK,aAAa,CAAC,KAAK;AACxB,SAAO;AAAA,EACP;AAEF,qBAAqB,QAAQ;AAC3B,MAAI,cAAc,OAAO;AACzB,SAAO,cAAc,YAAY,mBAAmB;AAAA;AAGtD,IAAO,eAAQ;;;AC1Pf,IAAI,qBAAqB;AAAA,EACvB,WAAW;AAAA,IACT,aAAa;AAAA,IACb,iBAAiB;AAAA;AAAA,EAEnB,UAAU;AAAA,IACR,aAAa;AAAA,IACb,iBAAiB;AAAA;AAAA;AAGd,IAAI,kBAAkB,CAAC,OAAO;AAErC,IAAI,MAEJ,SAAU,QAAQ;AAChB,YAAU,MAAK;AAEf,gBAAa,MAAM,MAAK,KAAK;AAC3B,QAAI,QAAQ,OAAO,KAAK,MAAM,SAAS;AAEvC,UAAM,aAAa;AACnB,UAAM,OAAO;AAEb,UAAM,gBAAgB,AAAO;AAC7B,UAAM,MAAM;AACZ,QAAI,SAAS,yBAAiB,KAAK,MAAK,IAAI,SAAS,IAAI;AACzD,QAAI,WAAW,yBAAiB,eAAe;AAC/C,UAAM,eAAe,WAAW,SAAS,OAAO;AAChD,QAAI,gBAAgB,mBAAmB,SAAS;AAChD,UAAM,cAAc,OAAO;AAC3B,UAAM,mBAAmB,cAAc;AACvC,UAAM,UAAU,OAAO;AACvB,UAAM,cAAc,AAAO,UAAU,IAAI,aAAa,cAAc;AACpE,QAAI,eAAe,OAAO;AAE1B,UAAM,gBAAgB,aAAa,GAAG,aAAa,GAAG,aAAa,OAAO,aAAa;AAEvF,WAAO;AAAA;AAkBT,OAAI,UAAU,eAAe,SAAU,GAAG,GAAG,OAAO,QAAQ;AAC1D,QAAI,OAAO,KAAK;AAChB,QAAI,kBAAkB,KAAK;AAC3B,WAAO,KAAK;AAEZ,QAAI,iBAAiB;AAEnB,WAAK,IAAI,CAAC,KAAK,IAAI,KAAK;AAAA;AAG1B,QAAI,mBAAmB,KAAK;AAC5B,qBAAiB,YAAY,KAAK,mBAAmB,IAAI,qBAAa,GAAG,GAAG,OAAO;AACnF,QAAI,YAAY,iBAAiB;AACjC,qBAAiB,SAAS;AAC1B,qBAAiB;AACjB,qBAAiB,SAAS;AAE1B,QAAI,iBAAiB;AACnB,uBAAiB,SAAS,CAAC,iBAAiB;AAAA;AAG9C,SAAK;AAAA;AAGP,OAAI,UAAU,YAAY,SAAU,MAAM;AACxC,WAAO,KAAK,YAAY,IAAI;AAAA;AAG9B,OAAI,UAAU,mBAAmB,SAAU,OAAO;AAChD,QAAI,UAAU,KAAK;AAEnB,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,UAAI,SAAS,QAAQ;AAErB,UAAI,OAAO,SAAS,aAAa,OAAO,QAAQ,QAAQ;AACtD,eAAO,QAAQ;AAAA;AAAA;AAAA;AASrB,OAAI,UAAU,cAAc,SAAU,MAAM,UAAU;AACpD,SAAK,cAAc,IAAI,MAAM;AAAA;AAO/B,OAAI,UAAU,cAAc,SAAU,MAAM;AAC1C,QAAI,SAAS,KAAK,YAAY,IAAI;AAGlC,WAAO,KAAK,cAAc,IAAI,SAAS,UAAU,OAAO;AAAA;AAG1D,OAAI,UAAU,cAAc,SAAU,MAAM,QAAQ,KAAK;AACvD,QAAI,OAAO,SAAS,UAAU;AAE5B,aAAO,KAAK,YAAY;AAAA;AAG1B,QAAI,MAAM;AACR,aAAO,aAAK,UAAU,YAAY,KAAK,MAAM,MAAM,QAAQ;AAAA;AAAA;AAI/D,OAAI,UAAU,iBAAiB,SAAU,SAAS,QAAQ,OAAO;AAC/D,QAAI,WAAW,aAAY;AAC3B,WAAO,aAAa,OAAO,SAAS,YAAY,SAAS;AAAA;AAG3D,OAAI,UAAU,mBAAmB,SAAU,SAAS,QAAQ,OAAO;AACjE,QAAI,WAAW,aAAY;AAC3B,WAAO,aAAa,OAAO,SAAS,YAAY,SAAS;AAAA;AAG3D,SAAO;AAAA,EACP;AAGF,AAAO,MAAM,KAAK;AAElB,sBAAqB,QAAQ;AAC3B,MAAI,WAAW,OAAO;AACtB,MAAI,cAAc,OAAO;AACzB,SAAO,WAAW,SAAS,mBAAmB,cAAc,YAAY,oBACpE,aAAY,uBAAuB,OAAO,kBAAkB,OAAO,MAAM,IAAI,mBAAmB;AAAA;AAGtG,IAAO,cAAQ;;;ACjJf,mBAAmB,UAAU,KAAK;AAChC,MAAI,iBAAiB,SAAS,IAAI;AAElC,MAAI,kBAAkB,MAAM;AAC1B,QAAI,UAAU,eAAe;AAC7B,QAAI,cAAc,eAAe;AAEjC,QAAI,MAAM,QAAQ,OAAO,MAAM,QAAQ,OAAO,MAAM,YAAY,OAAO,MAAM,YAAY,KAAK;AAC5F,UAAI,MAAuC;AACzC,gBAAQ,MAAM;AAAA;AAAA,WAEX;AACL,WAAK,gBAAgB,QAAQ,IAAI,QAAQ,IAAI,YAAY,KAAK,QAAQ,IAAI,YAAY,KAAK,QAAQ;AAAA;AAAA;AAIvG,MAAI,OAAO,KAAK;AAChB,MAAI,eAAe,SAAS,IAAI;AAChC,MAAI,aAAa,SAAS,IAAI;AAC9B,MAAI,YAAY,IAAI;AACpB,MAAI,aAAa,IAAI;AACrB,MAAI,SAAS,KAAK,QAAQ,KAAK,SAAS,KAAK;AAC7C,MAAI,mBAAmB;AACvB,MAAI;AACJ,MAAI;AAEJ,MAAI,gBAAgB,YAAY;AAC9B,cAAS,CAAC,AAAW,cAAa,aAAa,IAAI,YAAY,AAAW,cAAa,aAAa,IAAI;AACxG,WAAO,AAAW,cAAa,YAAY,KAAK,IAAI,WAAW;AAE/D,QAAI,CAAC,MAAM,QAAO,OAAO,CAAC,MAAM,QAAO,OAAO,CAAC,MAAM,OAAO;AAC1D,yBAAmB;AAAA,WACd;AACL,UAAI,MAAuC;AACzC,gBAAQ,KAAK;AAAA;AAAA;AAAA;AAKnB,MAAI;AAEJ,MAAI,kBAAkB;AACpB,eAAW;AAEX,QAAI,SAAS,GAAG;AAEd,eAAS,QAAQ;AACjB,eAAS,SAAS,OAAO;AAAA,WACpB;AACL,eAAS,SAAS;AAClB,eAAS,QAAQ,OAAO;AAAA;AAG1B,aAAS,IAAI,QAAO,KAAK,SAAS,SAAS;AAC3C,aAAS,IAAI,QAAO,KAAK,SAAS,QAAQ;AAAA,SACrC;AAEL,QAAI,kBAAkB,SAAS;AAC/B,oBAAgB,SAAS;AACzB,eAAW,AAAO,cAAc,iBAAiB;AAAA,MAC/C,OAAO;AAAA,MACP,QAAQ;AAAA;AAAA;AAIZ,OAAK,YAAY,SAAS,GAAG,SAAS,GAAG,SAAS,OAAO,SAAS;AAClE,OAAK,UAAU,SAAS,IAAI;AAC5B,OAAK,QAAQ,SAAS,IAAI;AAAA;AAK5B,sBAAsB,KAAK,OAAO;AAChC,EAAO,KAAK,MAAM,IAAI,aAAa,SAAU,UAAU,MAAM;AAC3D,QAAI,YAAY,MAAM;AAAA;AAAA;AAI1B,IAAI,aAEJ,WAAY;AACV,yBAAsB;AAEpB,SAAK,aAAa;AAAA;AAGpB,cAAW,UAAU,SAAS,SAAU,SAAS,KAAK;AACpD,QAAI,UAAU;AAEd,YAAQ,cAAc,OAAO,SAAU,UAAU,KAAK;AACpD,UAAI,OAAO,SAAS,IAAI;AACxB,UAAI,MAAM,IAAI,YAAI,OAAO,KAAK,MAAM;AAAA,QAClC,SAAS,SAAS,IAAI;AAAA,QACtB,cAAc,SAAS,IAAI;AAAA,QAC3B,aAAa,SAAS,IAAI;AAAA;AAE5B,UAAI,YAAY,SAAS,IAAI;AAC7B,cAAQ,KAAK;AAEb,eAAS,mBAAmB;AAC5B,UAAI,QAAQ;AAEZ,UAAI,SAAS;AACb,UAAI,OAAO,UAAU;AAAA;AAEvB,YAAQ,WAAW,SAAU,aAAa;AACxC,UAAI,WAAW,YAAY,IAAI;AAE/B,UAAI,aAAa,OAAO;AACtB,YAAI,WAAW,YAAY,IAAI,eAAe;AAC9C,oBAAY,mBAAmB,QAAQ;AAAA;AAAA;AAI3C,QAAI,wBAAwB;AAC5B,YAAQ,iBAAiB,OAAO,SAAU,aAAa;AACrD,UAAI,CAAC,YAAY,mBAAmB;AAClC,YAAI,UAAU,YAAY;AAC1B,8BAAsB,WAAW,sBAAsB,YAAY;AACnE,8BAAsB,SAAS,KAAK;AAAA;AAAA;AAGxC,IAAO,KAAK,uBAAuB,SAAU,WAAW,SAAS;AAC/D,UAAI,cAAc,AAAO,IAAI,WAAW,SAAU,iBAAiB;AACjE,eAAO,gBAAgB,IAAI;AAAA;AAE7B,UAAI,MAAM,IAAI,YAAI,SAAS,SAAS;AAAA,QAClC,SAAS,AAAO,SAAS;AAAA,QACzB,cAAc,UAAU,GAAG,IAAI;AAAA,QAC/B,aAAa,UAAU,GAAG,IAAI;AAAA;AAEhC,UAAI,YAAY,AAAO,SAAS,MAAM,MAAM,AAAO,IAAI,WAAW,SAAU,iBAAiB;AAC3F,eAAO,gBAAgB,IAAI;AAAA;AAE7B,cAAQ,KAAK;AAEb,UAAI,SAAS;AACb,UAAI,OAAO,UAAU,IAAI;AACzB,MAAO,KAAK,WAAW,SAAU,iBAAiB;AAChD,wBAAgB,mBAAmB;AACnC,qBAAa,KAAK;AAAA;AAAA;AAGtB,WAAO;AAAA;AAOT,cAAW,UAAU,mBAAmB,SAAU,iBAAiB,SAAS,SAAS,cAAc;AAEjG,QAAI,aAAc,oBAAmB,IAAI;AACzC,QAAI,cAAc,AAAO;AAEzB,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,kBAAY,IAAI,WAAW,GAAG,MAAM,WAAW;AAAA;AAGjD,QAAI,SAAS,yBAAiB,KAAK,SAAS,SAAS;AACrD,IAAO,KAAK,OAAO,SAAS,SAAU,QAAQ;AAC5C,UAAI,OAAO,OAAO;AAClB,OAAC,YAAY,IAAI,SAAS,WAAW,KAAK;AAAA,QACxC;AAAA;AAAA;AAGJ,WAAO;AAAA;AAGT,SAAO;AAAA;AAGT,IAAI,aAAa,IAAI;AACrB,IAAO,qBAAQ;;;AC7Kf,IAAI,WAEJ,SAAU,QAAQ;AAChB,YAAU,WAAU;AAEpB,uBAAoB;AAClB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,UAAS;AACtB,WAAO;AAAA;AAGT,YAAS,UAAU,OAAO,SAAU,QAAQ,aAAa,SAAS;AAChE,QAAI,SAAS,yBAAiB,eAAe,OAAO;AAEpD,QAAI,UAAU,OAAO,SAAS,WAAW;AACvC,UAAI,YAAY,OAAO,YAAY,OAAO,aAAa;AAEvD,UAAI,CAAE,YAAW,YAAY;AAC3B,kBAAU,QAAQ;AAAA;AAAA;AAItB,SAAK,qBAAqB,QAAQ;AAElC,IAAU,gBAAgB,QAAQ,SAAS,CAAC;AAAA;AAG9C,YAAS,UAAU,gBAAgB,WAAY;AAC7C,QAAI,QAAQ;AAEZ,QAAI,SAAS,KAAK;AAClB,WAAO,UAAU,mBAAW,iBAAiB,OAAO,SAAS,OAAO,KAAK,OAAO,SAAS,OAAO;AAChG,QAAI,cAAc;AAClB,SAAK,kBAAkB,AAAO,OAAO,OAAO,WAAW,IAAI,SAAU,gBAAgB,WAAW;AAC9F,UAAI,aAAa,UAAU;AAE3B,UAAI,YAAY;AACd,uBAAe,IAAI,YAAY,IAAI,cAAM,WAAW,OAAO,MAAM;AAEjE,YAAI,UAAU,UAAU;AACtB,sBAAY,cAAc;AAAA;AAAA;AAI9B,aAAO;AAAA,OACN,AAAO;AAEV,QAAI,CAAC,OAAO,aAAa;AACvB,aAAO,cAAc;AAAA;AAAA;AAQzB,YAAS,UAAU,iBAAiB,SAAU,MAAM;AAClD,WAAO,KAAK,gBAAgB,IAAI,SAAS,IAAI,cAAM,MAAM,MAAM,KAAK;AAAA;AAQtE,YAAS,UAAU,oBAAoB,SAAU,MAAM,QAAQ;AAC7D,QAAI,cAAc,KAAK,eAAe;AACtC,QAAI,YAAY,WAAW,WAAW,YAAY,IAAI,CAAC,SAAS,gBAAgB,YAAY,IAAI,CAAC,YAAY,SAAS;AACtH,QAAI,SAAS;AAAA,MACX;AAAA;AAGF,QAAI,OAAO,cAAc,YAAY;AACnC,aAAO,SAAS;AAChB,aAAO,UAAU;AAAA,eACR,OAAO,cAAc,UAAU;AACxC,aAAO,UAAU,QAAQ,OAAO,QAAQ,OAAO,OAAO;AAAA;AAAA;AAI1D,YAAS,UAAU,UAAU,SAAU,MAAM;AAC3C,SAAK,OAAO,OAAO;AAAA;AAGrB,YAAS,UAAU,YAAY,SAAU,SAAQ;AAC/C,SAAK,OAAO,SAAS;AAAA;AAIvB,YAAS,UAAU,SAAS,SAAU,MAAM;AAC1C,QAAI,SAAS,KAAK;AAClB,QAAI,eAAe,OAAO;AAE1B,QAAI,CAAC,cAAc;AACjB;AAAA;AAGF,QAAI,iBAAiB,YAAY;AAC/B,aAAO,cAAc;AAAA;AAGvB,QAAI,cAAc,OAAO,eAAgB,QAAO,cAAc;AAC9D,gBAAY,QAAQ;AAAA;AAGtB,YAAS,UAAU,WAAW,SAAU,MAAM;AAC5C,QAAI,cAAc,KAAK,OAAO;AAE9B,QAAI,aAAa;AACf,kBAAY,QAAQ;AAAA;AAAA;AAIxB,YAAS,UAAU,iBAAiB,SAAU,MAAM;AAClD,SAAK,KAAK,WAAW,QAAQ,aAAa,UAAU;AAAA;AAGtD,YAAS,UAAU,aAAa,SAAU,MAAM;AAC9C,QAAI,cAAc,KAAK,OAAO;AAC9B,WAAO,CAAC,CAAE,gBAAe,YAAY;AAAA;AAGvC,YAAS,OAAO;AAChB,YAAS,aAAa;AACtB,YAAS,gBAAgB;AAAA,IACvB,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,MAAM;AAAA,IACN,MAAM;AAAA,IACN,KAAK;AAAA,IAIL,aAAa;AAAA,IAMb,QAAQ;AAAA,IAER,KAAK;AAAA,IAGL,gBAAgB;AAAA,IAEhB,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,YAAY;AAAA,IAEZ,OAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA;AAAA,IAET,WAAW;AAAA,MACT,aAAa;AAAA,MACb,aAAa;AAAA;AAAA,IAMf,UAAU;AAAA,MACR,OAAO;AAAA,QACL,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,MAET,WAAW;AAAA,QACT,OAAO;AAAA;AAAA;AAAA,IAGX,QAAQ;AAAA,MACN,OAAO;AAAA,QACL,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,MAET,WAAW;AAAA,QACT,OAAO;AAAA;AAAA;AAAA,IAGX,SAAS;AAAA;AAKX,SAAO;AAAA,EACP;AAEF,IAAO,mBAAQ;;;ACtMR,6BAA6B,MAAM,SAAS,WAAW;AAC5D,MAAI,eAAe,KAAK;AACxB,MAAI,UAAS,KAAK;AAClB,MAAI,OAAO,QAAQ;AACnB,MAAI,QAAQ,KAAK,YAAY;AAE7B,MAAI,QAAQ,MAAM,QAAQ,QAAQ,MAAM,MAAM;AAC5C,UAAM,MAAM,QAAQ;AACpB,UAAM,MAAM,QAAQ;AACpB,SAAK,UAAU,KAAK,YAAY;AAAA;AAGlC,MAAI,QAAQ,MAAM;AAChB,QAAI,WAAW;AACb,UAAI,UAAU,UAAU,OAAO;AAC/B,UAAI,UAAU,UAAU,OAAO;AAC/B,aAAO,KAAK,IAAI,KAAK,IAAI,eAAe,MAAM,UAAU,WAAW;AAAA;AAIrE,SAAK,UAAU;AACf,SAAK,UAAU;AACf,QAAI,OAAQ,SAAQ,UAAU,KAAK,KAAM,QAAO;AAChD,QAAI,OAAQ,SAAQ,UAAU,KAAK,KAAM,QAAO;AAChD,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK;AAEL,SAAK,UAAU,KAAK,YAAY;AAChC,SAAK,QAAQ,OAAO;AAAA;AAGtB,SAAO;AAAA,IACL,QAAQ,KAAK;AAAA,IACb,MAAM,KAAK;AAAA;AAAA;;;AC5Bf,IAAI,UAEJ,SAAU,QAAQ;AAChB,YAAU,UAAS;AAEnB,sBAAmB;AACjB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,SAAQ;AACrB,UAAM,mBAAmB;AACzB,WAAO;AAAA;AAGT,WAAQ,UAAU,OAAO,SAAU,SAAS,KAAK;AAC/C,SAAK,OAAO;AAAA;AAGd,WAAQ,UAAU,SAAS,SAAU,UAAU,SAAS,KAAK,SAAS;AACpE,SAAK,SAAS;AAEd,QAAI,CAAC,SAAS,IAAI,SAAS;AACzB,WAAK,YAAY,KAAK,SAAS;AAC/B,WAAK,WAAW;AAChB;AAAA;AAGF,QAAI,CAAC,KAAK,UAAU;AAClB,WAAK,WAAW,IAAI,gBAAQ;AAAA;AAG9B,QAAI,UAAU,KAAK;AACnB,YAAQ,KAAK,UAAU,SAAS,KAAK,MAAM;AAC3C,YAAQ,MAAM,GAAG,SAAS,KAAK,oBAAoB;AACnD,YAAQ,MAAM,SAAS,SAAS,IAAI;AACpC,SAAK,MAAM,IAAI,QAAQ;AACvB,SAAK,mBAAmB,UAAU,SAAS;AAAA;AAG7C,WAAQ,UAAU,qBAAqB,SAAU,GAAG;AAClD,QAAI;AACJ,wBAAoB,EAAE,QAAQ,SAAU,SAAS;AAC/C,aAAQ,aAAY,UAAU,SAAS,cAAc;AAAA,OACpD;AAEH,QAAI,WAAW;AACb,WAAK,KAAK,eAAe;AAAA,QACvB,MAAM;AAAA,QACN,OAAO,KAAK,OAAO;AAAA,QACnB,MAAM,UAAU;AAAA;AAAA;AAAA;AAKtB,WAAQ,UAAU,qBAAqB,SAAU,OAAO,SAAS,KAAK;AACpE,QAAI,QAAQ;AAEZ,SAAK,SAAS,MAAM,SAAS,SAAU,MAAM;AAC3C,UAAI,YAAY,UAAU,MAAM;AAEhC,UAAI,WAAW;AACb,cAAM,OAAO,WAAW,UAAU,QAAQ,IAAI,YAAY,QAAQ,IAAI,YAAY;AAElF,eAAO;AAAA;AAAA;AAAA;AAKb,WAAQ,UAAU,0BAA0B,SAAU,MAAM;AAC1D,WAAO,KAAK,YAAY,KAAK,SAAS,wBAAwB,MAAM,KAAK;AAAA;AAG3E,WAAQ,UAAU,UAAU,WAAY;AACtC,SAAK,YAAY,KAAK,SAAS;AAAA;AAGjC,WAAQ,OAAO;AACf,SAAO;AAAA,EACP;AAEF,IAAO,kBAAQ;;;AChFR,mBAAiB,WAAW;AACjC,YAAU,yBAAyB,OAAO;AAC1C,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAEhC,sBAAoB,QAAQ,aAAY;AACtC,gBAAW,SAAS;AACpB,cAAU,eAAe,aAAY,SAAU,SAAS,SAAS;AAC/D,UAAI,WAAW;AACf,UAAI,cAAc;AAClB,cAAQ,cAAc;AAAA,QACpB,UAAU;AAAA,QACV,OAAO;AAAA,SACN,SAAU,UAAU;AACrB,iBAAS,QAAQ,QAAQ;AACzB,YAAI,MAAM,SAAS;AACnB,aAAK,IAAI,SAAS,SAAU,QAAQ;AAClC,mBAAS,OAAO,QAAQ,SAAS,WAAW,OAAO,SAAS;AAAA;AAG9D,YAAI,QAAQ;AACZ,aAAK,UAAU,SAAU,GAAG,MAAM;AAChC,mBAAS,SAAS,MAAM,KAAK;AAAA;AAE/B,oBAAY,KAAK;AAAA,UACf,UAAU,SAAS;AAAA,UAEnB,MAAM;AAAA;AAAA;AAGV,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA,MAAM,QAAQ;AAAA;AAAA;AAAA;AAKpB,aAAW,kBAAkB;AAAA,IAC3B,MAAM;AAAA,IACN,OAAO;AAAA;AAET,aAAW,UAAU;AAAA,IACnB,MAAM;AAAA,IACN,OAAO;AAAA;AAET,aAAW,YAAY;AAAA,IACrB,MAAM;AAAA,IACN,OAAO;AAAA;AAYT,YAAU,eAAe;AAAA,IACvB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,KACP,SAAU,SAAS,SAAS;AAC7B,QAAI,gBAAgB,QAAQ,iBAAiB;AAC7C,YAAQ,cAAc;AAAA,MACpB,UAAU;AAAA,MACV,OAAO;AAAA,OACN,SAAU,gBAAgB;AAC3B,UAAI,MAAM,eAAe;AAEzB,UAAI,IAAI,SAAS,OAAO;AACtB;AAAA;AAGF,UAAI,MAAM,oBAAoB,KAAK,SAAS,eAAe,IAAI;AAC/D,qBAAe,aAAa,eAAe,UAAU,IAAI;AACzD,qBAAe,WAAW,eAAe,QAAQ,IAAI;AAGrD,UAAI,kBAAkB,UAAU;AAC9B,aAAK,eAAe,aAAa,SAAU,aAAa;AACtD,sBAAY,UAAU,IAAI;AAC1B,sBAAY,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;;;AClF3B,mBAAiB,WAAW;AACjC,MAAI;AACJ,YAAU,kBAAkB;AAC5B,YAAU,oBAAoB;AAC9B,YAAU,eAAe;AACzB,YAAU,kBAAkB,UAAU,SAAS,UAAU,WAAW;AACpE,+BAA6B,OAAO,UAAU;AAAA;;;ACQzC,eAAc,QAAQ;AAC3B,MAAI,OAAO;AACX,OAAK,WAAW;AAAA,IACd,iBAAiB;AAAA,IACjB,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,GAAG;AAAA,IACH,QAAQ;AAAA;AAEV,MAAI,QAAQ,CAAC;AACb,MAAI;AACJ,MAAI;AAEJ,SAAO,OAAO,MAAM,OAAO;AAEzB,eAAW,KAAK;AAEhB,QAAI,KAAK,YAAY,SAAS,QAAQ;AACpC,UAAI,IAAI,SAAS;AAEjB,eAAS,IAAI,IAAI,GAAG,KAAK,GAAG,KAAK;AAC/B,YAAI,QAAQ,SAAS;AACrB,cAAM,WAAW;AAAA,UACf,iBAAiB;AAAA,UACjB,UAAU;AAAA,UACV,QAAQ;AAAA,UACR,UAAU;AAAA,UACV,QAAQ;AAAA,UACR,OAAO;AAAA,UACP;AAAA,UACA,QAAQ;AAAA;AAEV,cAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAiBZ,mBAAmB,MAAM,aAAY;AAC1C,MAAI,WAAW,KAAK,WAAW,KAAK,WAAW;AAC/C,MAAI,WAAW,KAAK,WAAW;AAC/B,MAAI,WAAW,KAAK,SAAS,IAAI,SAAS,KAAK,SAAS,IAAI,KAAK;AAEjE,MAAI,SAAS,QAAQ;AACnB,kBAAc;AACd,QAAI,WAAY,UAAS,GAAG,SAAS,SAAS,SAAS,SAAS,SAAS,GAAG,SAAS,UAAU;AAE/F,QAAI,UAAU;AACZ,WAAK,SAAS,SAAS,SAAS,SAAS,SAAS,YAAW,MAAM;AACnE,WAAK,SAAS,WAAW,KAAK,SAAS,SAAS;AAAA,WAC3C;AACL,WAAK,SAAS,SAAS;AAAA;AAAA,aAEhB,UAAU;AACnB,SAAK,SAAS,SAAS,SAAS,SAAS,SAAS,YAAW,MAAM;AAAA;AAGrE,OAAK,WAAW,SAAS,kBAAkB,UAAU,MAAM,UAAU,KAAK,WAAW,SAAS,mBAAmB,SAAS,IAAI;AAAA;AAWzH,oBAAoB,MAAM;AAC/B,MAAI,QAAQ,KAAK,SAAS,SAAS,KAAK,WAAW,SAAS;AAC5D,OAAK,UAAU;AAAA,IACb,GAAG;AAAA,KACF;AACH,OAAK,SAAS,YAAY,KAAK,WAAW,SAAS;AAAA;AAE9C,oBAAoB,IAAI;AAC7B,SAAO,UAAU,SAAS,KAAK;AAAA;AAM1B,0BAA0B,KAAK,GAAG;AACvC,SAAO,KAAK,KAAK;AACjB,SAAO;AAAA,IACL,GAAG,IAAI,KAAK,IAAI;AAAA,IAChB,GAAG,IAAI,KAAK,IAAI;AAAA;AAAA;AAOb,sBAAqB,aAAa,KAAK;AAC5C,SAAO,AAAO,cAAc,YAAY,sBAAsB;AAAA,IAC5D,OAAO,IAAI;AAAA,IACX,QAAQ,IAAI;AAAA;AAAA;AAahB,uBAAuB,MAAM;AAC3B,MAAI,WAAW,KAAK;AACpB,MAAI,IAAI,SAAS;AACjB,MAAI,QAAQ;AACZ,MAAI,SAAS;AAEb,SAAO,EAAE,KAAK,GAAG;AACf,QAAI,QAAQ,SAAS;AACrB,UAAM,SAAS,UAAU;AACzB,UAAM,SAAS,YAAY;AAC3B,cAAU,MAAM,SAAS;AACzB,aAAS,MAAM,SAAS,QAAQ;AAAA;AAAA;AAmBpC,mBAAmB,UAAU,UAAU,UAAU,aAAY;AAC3D,MAAI,UAAU;AACZ,QAAI,eAAe;AACnB,QAAI,cAAc;AAClB,QAAI,cAAc,YAAY,WAAW,SAAS;AAClD,QAAI,aAAa;AACjB,QAAI,cAAc,aAAa,SAAS;AACxC,QAAI,aAAa,YAAY,SAAS;AACtC,QAAI,aAAa,YAAY,SAAS;AACtC,QAAI,YAAY,WAAW,SAAS;AAEpC,WAAO,aAAa,UAAU,aAAa,cAAc,SAAS,cAAc,cAAc,aAAa;AACzG,qBAAe,UAAU;AACzB,oBAAc,SAAS;AACvB,mBAAa,SAAS,WAAW;AACjC,UAAI,QAAQ,WAAW,SAAS,SAAS,YAAY,YAAY,SAAS,SAAS,aAAa,YAAW,YAAY;AAEvH,UAAI,QAAQ,GAAG;AACb,oBAAY,aAAa,YAAY,UAAU,WAAW,UAAU;AACpE,sBAAc;AACd,uBAAe;AAAA;AAGjB,mBAAa,WAAW,SAAS;AACjC,oBAAc,YAAY,SAAS;AACnC,qBAAe,aAAa,SAAS;AACrC,oBAAc,YAAY,SAAS;AAAA;AAGrC,QAAI,cAAc,CAAC,UAAU,eAAe;AAC1C,mBAAa,SAAS,SAAS;AAC/B,mBAAa,SAAS,YAAY,YAAY;AAAA;AAGhD,QAAI,eAAe,CAAC,SAAS,cAAc;AACzC,kBAAY,SAAS,SAAS;AAC9B,kBAAY,SAAS,YAAY,aAAa;AAC9C,iBAAW;AAAA;AAAA;AAIf,SAAO;AAAA;AAST,mBAAmB,MAAM;AACvB,MAAI,WAAW,KAAK;AACpB,SAAO,SAAS,UAAU,KAAK,WAAW,SAAS,SAAS,SAAS,KAAK,KAAK,SAAS;AAAA;AAS1F,kBAAkB,MAAM;AACtB,MAAI,WAAW,KAAK;AACpB,SAAO,SAAS,UAAU,KAAK,WAAW,SAAS,KAAK,KAAK,SAAS;AAAA;AAQxE,sBAAsB,YAAY,MAAM,UAAU;AAChD,SAAO,WAAW,SAAS,SAAS,eAAe,KAAK,aAAa,WAAW,SAAS,WAAW;AAAA;AAatG,qBAAqB,IAAI,IAAI,OAAO;AAClC,MAAI,SAAS,QAAS,IAAG,SAAS,IAAI,GAAG,SAAS;AAClD,KAAG,SAAS,UAAU;AACtB,KAAG,SAAS,SAAS;AACrB,KAAG,SAAS,YAAY;AACxB,KAAG,SAAS,UAAU;AACtB,KAAG,SAAS,UAAU;AAAA;AAUxB,2BAA2B,OAAO,OAAO;AACvC,SAAO,MAAM,eAAe,MAAM,aAAa,IAAI;AAAA;;;ACpQrD,IAAI,gBAEJ,WAAY;AACV,4BAAyB;AACvB,SAAK,cAAc;AACnB,SAAK,cAAc;AAAA;AAGrB,SAAO;AAAA;AAGT,IAAI,WAEJ,SAAU,QAAQ;AAChB,YAAU,WAAU;AAEpB,qBAAkB,MAAM;AACtB,WAAO,OAAO,KAAK,MAAM,SAAS;AAAA;AAGpC,YAAS,UAAU,kBAAkB,WAAY;AAC/C,WAAO;AAAA,MACL,QAAQ;AAAA,MACR,MAAM;AAAA;AAAA;AAIV,YAAS,UAAU,kBAAkB,WAAY;AAC/C,WAAO,IAAI;AAAA;AAGb,YAAS,UAAU,YAAY,SAAU,KAAK,OAAO;AACnD,QAAI,cAAc,MAAM;AACxB,QAAI,WAAW,YAAY;AAC3B,QAAI,cAAc,MAAM;AACxB,QAAI,gBAAgB,YAAY;AAChC,QAAI,eAAe,YAAY,WAAW;AAE1C,QAAI,aAAa,GAAG;AAClB,UAAI,OAAO,YAAY,IAAI,YAAY;AACvC,UAAI,OAAO,cAAc,IAAI,cAAc;AAC3C;AAAA;AAGF,QAAI,SAAS,MAAM;AACnB,QAAI,UAAU,WAAW,QAAQ,WAAW,OAAO,IAAI;AACvD,QAAI,WAAW,IAAI;AACnB,QAAI,eAAe,cAAa,MAAM,cAAc;AACpD,QAAI,WAAW;AACf,aAAS,WAAW,YAAY;AAChC,aAAS,YAAY,YAAY,YAAa,cAAa,YAAY,YAAY,aAAa;AAChG,QAAI,OAAO,YAAY,IAAI,YAAY;AACvC,QAAI,OAAO,SAAS,IAAI,SAAS;AACjC,QAAI,OAAO,cAAc,IAAI,cAAc;AAC3C,aAAS,WAAW,cAAc;AAClC,QAAI,OAAO,SAAS,IAAI,SAAS;AACjC,aAAS,WAAW,aAAa;AACjC,QAAI,OAAO,SAAS,IAAI,SAAS;AACjC,QAAI,OAAO,aAAa,IAAI,aAAa;AAEzC,aAAS,IAAI,GAAG,IAAI,WAAW,GAAG,KAAK;AACrC,UAAI,QAAQ,YAAY;AACxB,UAAI,OAAO,MAAM,IAAI,MAAM;AAC3B,eAAS,WAAW,MAAM;AAC1B,UAAI,OAAO,SAAS,IAAI,SAAS;AAAA;AAAA;AAIrC,SAAO;AAAA,EACP;AAEF,IAAI,WAEJ,SAAU,QAAQ;AAChB,YAAU,WAAU;AAEpB,uBAAoB;AAClB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,UAAS;AACtB,UAAM,aAAa,IAAY;AAC/B,WAAO;AAAA;AAGT,YAAS,UAAU,OAAO,SAAU,SAAS,KAAK;AAChD,SAAK,cAAc,IAAI,uBAAe,IAAI;AAC1C,SAAK,kBAAkB;AAAA,MACrB,QAAQ,KAAK;AAAA;AAEf,SAAK,MAAM,IAAI,KAAK;AAAA;AAGtB,YAAS,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK;AAC/D,QAAI,OAAO,YAAY;AACvB,QAAI,aAAa,YAAY;AAC7B,QAAI,QAAQ,KAAK;AACjB,QAAI,WAAS,YAAY,IAAI;AAE7B,QAAI,aAAW,UAAU;AACvB,YAAM,IAAI,WAAW,IAAI,WAAW,QAAQ;AAC5C,YAAM,IAAI,WAAW,IAAI,WAAW,SAAS;AAAA,WACxC;AACL,YAAM,IAAI,WAAW;AACrB,YAAM,IAAI,WAAW;AAAA;AAGvB,SAAK,oBAAoB;AAEzB,SAAK,kBAAkB,aAAa,SAAS;AAE7C,QAAI,UAAU,KAAK;AACnB,SAAK,KAAK,SAAS,IAAI,SAAU,QAAQ;AACvC,UAAI,iBAAgB,MAAM,SAAS;AAEjC,mBAAW,MAAM,QAAQ,MAAM,OAAO;AAAA;AAAA,OAEvC,OAAO,SAAU,QAAQ,QAAQ;AAClC,UAAI,WAAW,QAAQ,iBAAiB;AAExC,UAAI,CAAC,iBAAgB,MAAM,SAAS;AAClC,oBAAY,WAAW,SAAS,QAAQ,UAAU,OAAO;AACzD;AAAA;AAIF,iBAAW,MAAM,QAAQ,UAAU,OAAO;AAAA,OACzC,OAAO,SAAU,QAAQ;AAC1B,UAAI,WAAW,QAAQ,iBAAiB;AAMxC,UAAI,UAAU;AACZ,mBAAW,SAAS,QAAQ,UAAU,OAAO;AAAA;AAAA,OAE9C;AACH,SAAK,kBAAkB,YAAY,IAAI;AAEvC,SAAK,wBAAwB;AAE7B,QAAI,YAAY,IAAI,yBAAyB,MAAM;AACjD,WAAK,kBAAkB,SAAU,IAAI,WAAW;AAC9C,WAAG,IAAI,SAAS,GAAG,SAAS,WAAY;AACtC,cAAI,eAAe;AAAA,YACjB,MAAM;AAAA,YACN,UAAU,YAAY;AAAA,YACtB;AAAA;AAAA;AAAA;AAAA;AAMR,SAAK,QAAQ;AAAA;AAGf,YAAS,UAAU,sBAAsB,SAAU,aAAa;AAC9D,QAAI,OAAO,YAAY;AACvB,QAAI,SAAS;AACb,SAAK,KAAK,SAAU,KAAK;AACvB,UAAI,WAAS,KAAK,cAAc;AAEhC,UAAI,YAAU,CAAC,MAAM,SAAO,MAAM,CAAC,MAAM,SAAO,IAAI;AAClD,eAAO,KAAK,CAAC,CAAC,SAAO,GAAG,CAAC,SAAO;AAAA;AAAA;AAGpC,QAAI,MAAM;AACV,QAAI,MAAM;AACV,IAAK,WAAW,QAAQ,KAAK;AAG7B,QAAI,SAAS,KAAK;AAClB,QAAI,SAAS,KAAK;AAElB,QAAI,IAAI,KAAK,IAAI,OAAO,GAAG;AACzB,UAAI,KAAK,SAAS,OAAO,KAAK,IAAI,KAAK;AACvC,UAAI,KAAK,SAAS,OAAO,KAAK,IAAI,KAAK;AAAA;AAGzC,QAAI,IAAI,KAAK,IAAI,OAAO,GAAG;AACzB,UAAI,KAAK,SAAS,OAAO,KAAK,IAAI,KAAK;AACvC,UAAI,KAAK,SAAS,OAAO,KAAK,IAAI,KAAK;AAAA;AAGzC,QAAI,eAAe,YAAY,mBAAmB,IAAI;AACtD,iBAAa,YAAY,YAAY,IAAI;AACzC,iBAAa,gBAAgB,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI;AAC3E,iBAAa,UAAU,YAAY,IAAI;AACvC,iBAAa,QAAQ,YAAY,IAAI;AAErC,SAAK,MAAM,KAAK;AAAA,MACd,GAAG,aAAa;AAAA,MAChB,GAAG,aAAa;AAAA,MAChB,QAAQ,aAAa;AAAA,MACrB,QAAQ,aAAa;AAAA;AAEvB,SAAK,OAAO;AACZ,SAAK,OAAO;AAAA;AAGd,YAAS,UAAU,oBAAoB,SAAU,aAAa,SAAS,KAAK;AAC1E,QAAI,QAAQ;AAEZ,QAAI,aAAa,KAAK;AACtB,QAAI,iBAAiB,KAAK;AAC1B,QAAI,QAAQ,KAAK;AACjB,eAAW,kBAAkB,SAAU,GAAG,GAAG,GAAG;AAC9C,UAAI,OAAO,MAAM;AACjB,WAAK,eAAe,MAAM;AAC1B,aAAO,KAAK,QAAQ,GAAG,MAAM,CAAC,oBAAoB,GAAG,KAAK;AAAA;AAE5D,eAAW,OAAO,YAAY,IAAI;AAClC,mBAAe,YAAY,YAAY,IAAI;AAC3C,mBAAe,OAAO,YAAY,iBAAiB;AACnD,eAAW,IAAI,OAAO,IAAI,QAAQ,GAAG,OAAO,SAAU,GAAG;AACvD,MAAW,gBAAgB,gBAAgB,EAAE,IAAI,EAAE;AACnD,UAAI,eAAe;AAAA,QACjB,UAAU,YAAY;AAAA,QACtB,MAAM;AAAA,QACN,IAAI,EAAE;AAAA,QACN,IAAI,EAAE;AAAA;AAAA,OAEP,GAAG,QAAQ,SAAU,GAAG;AACzB,MAAW,iBAAiB,gBAAgB,EAAE,OAAO,EAAE,SAAS,EAAE;AAClE,UAAI,eAAe;AAAA,QACjB,UAAU,YAAY;AAAA,QACtB,MAAM;AAAA,QACN,MAAM,EAAE;AAAA,QACR,SAAS,EAAE;AAAA,QACX,SAAS,EAAE;AAAA;AAGb,YAAM,wBAAwB;AAG9B,UAAI;AAAA;AAAA;AAIR,YAAS,UAAU,0BAA0B,SAAU,aAAa;AAClE,QAAI,OAAO,YAAY;AAEvB,QAAI,YAAY,KAAK,oBAAoB;AAEzC,SAAK,kBAAkB,SAAU,IAAI,KAAK;AACxC,SAAG,eAAe;AAAA;AAAA;AAItB,YAAS,UAAU,sBAAsB,SAAU,aAAa;AAC9D,QAAI,WAAW,YAAY;AAE3B,QAAI,SAAS,SAAS,QAAQ;AAC5B,aAAO;AAAA;AAGT,QAAI,iBAAiB,KAAK;AAC1B,QAAI,YAAY,SAAS,UAAU;AAEnC,QAAI,WAAW,SAAS;AACxB,QAAI,YAAa,YAAW,KAAK,iBAAiB;AAClD,WAAO,YAAY;AAAA;AAGrB,YAAS,UAAU,UAAU,WAAY;AACvC,SAAK,eAAe,KAAK,YAAY;AACrC,SAAK,kBAAkB;AAAA;AAGzB,YAAS,UAAU,SAAS,WAAY;AACtC,SAAK,WAAW;AAEhB,SAAK,QAAQ;AAAA;AAGf,YAAS,OAAO;AAChB,SAAO;AAAA,EACP;AAEF,0BAAyB,MAAM,WAAW;AACxC,MAAI,WAAS,KAAK,cAAc;AAChC,SAAO,YAAU,CAAC,MAAM,SAAO,MAAM,CAAC,MAAM,SAAO;AAAA;AAGrD,oBAAoB,MAAM,WAAW,UAAU,OAAO,aAAa;AACjE,MAAI,SAAS,CAAC;AACd,MAAI,OAAO,KAAK,KAAK,mBAAmB;AACxC,MAAI,YAAY,KAAK;AACrB,MAAI,cAAc,KAAK,UAAU,SAAS;AAC1C,MAAI,mBAAmB,KAAK,aAAa,SAAS,KAAK,SAAS,WAAW,IAAI,cAAc;AAC7F,MAAI,cAAc,KAAK,KAAK;AAC5B,MAAI,SAAS,KAAK,eAAe,cAAc,OAAO,KAAK,cAAc;AACzE,MAAI,iBAAiB,KAAK,iBAAiB,OAAO;AAClD,MAAI,eAAe,OAAO;AAC1B,MAAI,kBAAkB,iBAAiB;AAAA,IACrC,GAAG,eAAe;AAAA,IAClB,GAAG,eAAe;AAAA,IAClB,MAAM,eAAe;AAAA,IACrB,MAAM,eAAe;AAAA,MACnB;AACJ,MAAI,eAAe,KAAK;AAExB,MAAI,QAAQ;AACV,eAAW,IAAI,eAAU,MAAM,WAAW,MAAM;AAAA,MAC9C;AAAA,MACA,cAAc;AAAA;AAEhB,aAAS,IAAI,gBAAgB;AAC7B,aAAS,IAAI,gBAAgB;AAAA,SACxB;AACL,aAAS,WAAW,MAAM,WAAW,MAAM;AAAA,MACzC;AAAA,MACA,cAAc;AAAA;AAAA;AAIlB,WAAS,kBAAkB,SAAS;AACpC,WAAS,kBAAkB,SAAS;AACpC,WAAS,eAAe,aAAa;AACrC,WAAS,eAAe,aAAa;AACrC,QAAM,IAAI;AACV,OAAK,iBAAiB,WAAW;AACjC,WAAS,SAAS,SAAS;AAC3B,WAAS,SAAS,SAAS;AAC3B,EAAQ,YAAY,UAAU;AAAA,IAC5B,GAAG,aAAa;AAAA,IAChB,GAAG,aAAa;AAAA,KACf;AACH,MAAI,aAAa,SAAS;AAE1B,MAAI,YAAY,IAAI,cAAc,UAAU;AAC1C,QAAI,WAAW,YAAY,SAAS;AACpC,QAAI,aAAa,SAAS;AAC1B,QAAI,WAAW,SAAS,SAAS;AACjC,QAAI,MAAM;AACV,QAAI,SAAS;AAEb,QAAI,aAAa,MAAM,WAAW,KAAK,KAAK,aAAa,MAAM;AAC7D,UAAI,UAAS;AAAA,QACX,GAAI,UAAS,SAAS,GAAG,YAAY,IAAI,SAAS,SAAS,WAAW,GAAG,YAAY,KAAK;AAAA,QAC1F,GAAI,UAAS,SAAS,GAAG,YAAY,IAAI,SAAS,SAAS,WAAW,GAAG,YAAY,KAAK;AAAA;AAE5F,YAAM,KAAK,MAAM,QAAO,IAAI,WAAW,GAAG,QAAO,IAAI,WAAW;AAEhE,UAAI,MAAM,GAAG;AACX,cAAM,KAAK,KAAK,IAAI;AAAA;AAGtB,eAAS,QAAO,IAAI,WAAW;AAE/B,UAAI,QAAQ;AACV,cAAM,MAAM,KAAK;AAAA;AAAA,WAEd;AACL,YAAM,KAAK,MAAM,aAAa,IAAI,WAAW,GAAG,aAAa,IAAI,WAAW;AAE5E,UAAI,MAAM,GAAG;AACX,cAAM,KAAK,KAAK,IAAI;AAAA;AAGtB,UAAI,KAAK,SAAS,WAAW,KAAK,KAAK,SAAS,WAAW,KAAK,KAAK,aAAa,OAAO;AACvF,iBAAS,aAAa,IAAI,WAAW;AAErC,YAAI,QAAQ;AACV,gBAAM,MAAM,KAAK;AAAA;AAAA,aAEd;AACL,iBAAS,aAAa,IAAI,WAAW;AAErC,YAAI,CAAC,QAAQ;AACX,gBAAM,MAAM,KAAK;AAAA;AAAA;AAAA;AAKvB,QAAI,eAAe,SAAS,SAAS;AACrC,QAAI,mBAAmB,UAAU,SAAS;AAC1C,QAAI,UAAS,iBAAiB,IAAI;AAClC,QAAI,oBAAoB,UAAU,MAAK,KAAK;AAC5C,QAAI,cAAc,WAAW;AAE7B,QAAI,aAAa;AACf,iBAAW,cAAc;AAAA,QACvB,UAAU,iBAAiB,IAAI,eAAe;AAAA,QAC9C,UAAU,WAAU,OAAO,CAAC,MAAM;AAAA,QAClC,QAAQ;AAAA;AAEV,kBAAY,SAAS,iBAAiB;AAAA;AAAA;AAK1C,MAAI,QAAQ,UAAU,IAAI,CAAC,YAAY;AACvC,MAAI,mBAAmB,UAAU,aAAa,KAAK,wBAAwB,UAAU,eAAe,KAAK,yBAAyB;AAElI,MAAI,kBAAkB;AAEpB,cAAU,UAAU,QAAQ;AAAA;AAG9B,WAAS,aAAa,MAAM,aAAa,UAAU,iBAAiB,cAAc,cAAc;AAEhG,MAAI,SAAS,QAAQ;AACnB,aAAS,qBAAqB,SAAU,SAAS;AAC/C,UAAI,YAAY,QAAQ;AAItB,YAAI,WAAW,KAAK,cAAc,KAAK,iBAAiB,KAAK,WAAW;AAExE,YAAI,CAAE,aAAY,SAAS,eAAe,mBAAmB;AAC3D,wBAAc,SAAS,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAOzC,kBAAkB,aAAa,MAAM,aAAa,UAAU,iBAAiB,cAAc,cAAc,OAAO;AAC9G,MAAI,YAAY,KAAK;AACrB,MAAI,YAAY,YAAY,IAAI;AAChC,MAAI,WAAS,YAAY,IAAI;AAC7B,MAAI,SAAS,YAAY;AACzB,MAAI,YAAY,YAAY,IAAI,CAAC,aAAa;AAC9C,MAAI,mBAAmB,YAAY,IAAI;AACvC,MAAI,YAAY,UAAU,SAAS,aAAa;AAChD,MAAI,OAAO,SAAS;AAEpB,MAAI,cAAc,SAAS;AACzB,QAAI,KAAK,cAAc,KAAK,eAAe,aAAa;AACtD,UAAI,CAAC,MAAM;AACT,eAAO,SAAS,SAAS,IAAY,oBAAY;AAAA,UAC/C,OAAO,aAAa,UAAQ,QAAQ,WAAW,iBAAiB;AAAA;AAAA;AAIpE,MAAQ,YAAY,MAAM;AAAA,QACxB,OAAO,aAAa,UAAQ,QAAQ,WAAW,cAAc;AAAA,SAC5D;AAAA;AAAA,aAEI,cAAc,YAAY;AACnC,QAAI,aAAW,cAAc;AAC3B,UAAI,SAAS,eAAe,KAAK,YAAY,KAAK,SAAS,WAAW,KAAK,KAAK,aAAa,MAAM;AACjG,YAAI,WAAW,KAAK;AACpB,YAAI,cAAc;AAElB,iBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,cAAI,cAAc,SAAS,GAAG;AAC9B,sBAAY,KAAK,CAAC,YAAY,GAAG,YAAY;AAAA;AAG/C,YAAI,CAAC,MAAM;AACT,iBAAO,SAAS,SAAS,IAAI,SAAS;AAAA,YACpC,OAAO;AAAA,cACL,aAAa,CAAC,aAAa,GAAG,aAAa;AAAA,cAC3C,aAAa,CAAC,CAAC,aAAa,GAAG,aAAa;AAAA,cAC5C;AAAA,cACA,cAAc;AAAA;AAAA;AAAA;AAKpB,QAAQ,YAAY,MAAM;AAAA,UACxB,OAAO;AAAA,YACL,aAAa,CAAC,aAAa,GAAG,aAAa;AAAA,YAC3C;AAAA;AAAA,WAED;AAAA;AAAA,WAEA;AACL,UAAI,MAAuC;AACzC,cAAM,IAAI,MAAM;AAAA;AAAA;AAAA;AAKtB,MAAI,MAAM;AACR,SAAK,SAAS,AAAO,SAAS;AAAA,MAC5B,eAAe;AAAA,MACf,MAAM;AAAA,OACL;AACH,6BAAyB,MAAM,WAAW;AAC1C,yBAAqB;AACrB,UAAM,IAAI;AAAA;AAAA;AAId,wBAAwB,MAAM,MAAM,OAAO,aAAa,oBAAoB;AAC1E,MAAI,cAAc,KAAK,KAAK;AAE5B,MAAI,KAAK,cAAc,aAAa,OAChC,SAAS,GAAG,QACZ,eAAe,GAAG;AAEtB,MAAI,WAAW,KAAK,iBAAiB,KAAK;AAE1C,MAAI,CAAC,UAAU;AACb;AAAA;AAGF,MAAI,iBAAiB,KAAK,iBAAiB,OAAO;AAClD,MAAI,aAAa,eAAe;AAKhC,MAAI,OAAO,SAAS,UAAW,QAAO,aAAa,SAAS,OAAO,SAAS,WAAW,IAAI,aAAa;AACxG,MAAI,YAAY,YAAY,IAAI;AAChC,MAAI,YAAY,YAAY,IAAI;AAChC,MAAI,SAAS,YAAY,IAAI;AAC7B,MAAI,YAAY,YAAY,IAAI,CAAC,aAAa;AAE9C,MAAI,MAAM;AACR,QAAI,cAAc,SAAS;AACzB,MAAQ,cAAc,MAAM;AAAA,QAC1B,OAAO,aAAa,WAAW,QAAQ,WAAW,cAAc;AAAA,QAChE,OAAO;AAAA,UACL,SAAS;AAAA;AAAA,SAEV,aAAa;AAAA,QACd,IAAI,WAAY;AACd,gBAAM,OAAO;AAAA;AAAA,QAEf,WAAW;AAAA;AAAA,eAEJ,cAAc,cAAc,YAAY,IAAI,cAAc,cAAc;AACjF,MAAQ,cAAc,MAAM;AAAA,QAC1B,OAAO;AAAA,UACL,aAAa,CAAC,aAAa,GAAG,aAAa;AAAA,UAC3C,aAAa,CAAC,CAAC,aAAa,GAAG,aAAa;AAAA;AAAA,QAE9C,OAAO;AAAA,UACL,SAAS;AAAA;AAAA,SAEV,aAAa;AAAA,QACd,IAAI,WAAY;AACd,gBAAM,OAAO;AAAA;AAAA,QAEf,WAAW;AAAA;AAAA;AAAA;AAAA;AAMnB,uBAAuB,aAAa,MAAM;AACxC,MAAI,SAAS,KAAK,eAAe,cAAc,OAAO,KAAK,cAAc;AACzE,MAAI;AAEJ,SAAO,eAAe,OAAO,aAAa,gBAAgB,MAAM;AAC9D,aAAS,OAAO,eAAe,cAAc,SAAS,OAAO,cAAc;AAAA;AAG7E,SAAO;AAAA,IACL;AAAA,IACA;AAAA;AAAA;AAIJ,oBAAoB,MAAM,WAAW,UAAU,OAAO,aAAa;AACjE,MAAI,OAAO,KAAK,KAAK,mBAAmB;AACxC,MAAI,cAAc,KAAK,KAAK;AAC5B,MAAI,eAAe,cAAc,aAAa,MAAM;AAEpD,MAAI,qBAAqB;AAAA,IACvB,UAAU,YAAY,IAAI;AAAA,IAC1B,QAAQ,YAAY,IAAI;AAAA;AAE1B,EAAQ,cAAc,UAAU;AAAA,IAC9B,GAAG,aAAa,IAAI;AAAA,IACpB,GAAG,aAAa,IAAI;AAAA,KACnB,aAAa;AAAA,IACd,IAAI,WAAY;AACd,YAAM,OAAO;AACb,WAAK,iBAAiB,WAAW;AAAA;AAAA,IAEnC,WAAW;AAAA;AAEb,WAAS,QAAQ,MAAM;AAAA,IACrB,WAAW;AAAA,IACX,WAAW;AAAA;AAGb,OAAK,SAAS,QAAQ,SAAU,WAAW;AACzC,mBAAe,WAAW,MAAM,OAAO,aAAa;AAAA;AAGtD,iBAAe,MAAM,MAAM,OAAO,aAAa;AAAA;AAGjD,sBAAsB,WAAW,QAAQ,WAAW,cAAc,cAAc;AAC9E,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AAEJ,MAAI,cAAc,UAAU;AAC1B,SAAK,aAAa;AAClB,SAAK,aAAa;AAClB,SAAK,aAAa;AAClB,SAAK,aAAa;AAClB,QAAI,cAAc,iBAAiB,IAAI;AACvC,QAAI,cAAc,iBAAiB,IAAI,KAAM,MAAK,MAAM;AACxD,QAAI,cAAc,iBAAiB,IAAI,KAAM,MAAK,MAAM;AACxD,QAAI,cAAc,iBAAiB,IAAI;AACvC,WAAO;AAAA,MACL,IAAI,YAAY,KAAK;AAAA,MACrB,IAAI,YAAY,KAAK;AAAA,MACrB,IAAI,YAAY,KAAK;AAAA,MACrB,IAAI,YAAY,KAAK;AAAA,MACrB,MAAM,YAAY,KAAK;AAAA,MACvB,MAAM,YAAY,KAAK;AAAA,MACvB,MAAM,YAAY,KAAK;AAAA,MACvB,MAAM,YAAY,KAAK;AAAA;AAAA,SAEpB;AACL,SAAK,aAAa;AAClB,SAAK,aAAa;AAClB,SAAK,aAAa;AAClB,SAAK,aAAa;AAElB,QAAI,WAAW,QAAQ,WAAW,MAAM;AACtC,aAAO,KAAM,MAAK,MAAM;AACxB,aAAO;AACP,aAAO,KAAM,MAAK,MAAM;AACxB,aAAO;AAAA;AAGT,QAAI,WAAW,QAAQ,WAAW,MAAM;AACtC,aAAO;AACP,aAAO,KAAM,MAAK,MAAM;AACxB,aAAO;AACP,aAAO,KAAM,MAAK,MAAM;AAAA;AAAA;AAI5B,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA;AAIJ,IAAO,mBAAQ;;;ACjpBf,IAAI,WAEJ,WAAY;AACV,qBAAkB,MAAM,UAAU;AAChC,SAAK,QAAQ;AACb,SAAK,SAAS;AASd,SAAK,YAAY;AACjB,SAAK,WAAW;AAChB,SAAK,eAAe;AACpB,SAAK,WAAW;AAChB,SAAK,OAAO,QAAQ;AACpB,SAAK,WAAW;AAAA;AAOlB,YAAS,UAAU,YAAY,WAAY;AACzC,WAAO,KAAK,YAAY;AAAA;AAG1B,YAAS,UAAU,WAAW,SAAU,SAAS,IAAI,SAAS;AAC5D,QAAI,OAAO,YAAY,YAAY;AACjC,gBAAU;AACV,WAAK;AACL,gBAAU;AAAA;AAGZ,cAAU,WAAW;AAErB,QAAI,AAAO,SAAS,UAAU;AAC5B,gBAAU;AAAA,QACR,OAAO;AAAA;AAAA;AAIX,QAAI,QAAQ,QAAQ,SAAS;AAC7B,QAAI,WAAW,KAAK,QAAQ,QAAQ;AACpC,QAAI;AACJ,cAAU,cAAe,oBAAmB,GAAG,KAAK,SAAS;AAE7D,aAAS,IAAI,GAAG,CAAC,oBAAoB,IAAI,SAAS,QAAQ,KAAK;AAC7D,eAAS,GAAG,SAAS,SAAS,IAAI;AAAA;AAGpC,cAAU,eAAe,GAAG,KAAK,SAAS;AAAA;AAO5C,YAAS,UAAU,uBAAuB,SAAU,OAAO;AACzD,QAAI,SAAS;AACb,SAAK,QAAQ;AAEb,aAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC7C,UAAI,QAAQ,KAAK,SAAS;AAC1B,YAAM,qBAAqB,QAAQ;AAEnC,UAAI,MAAM,SAAS,QAAQ;AACzB,iBAAS,MAAM;AAAA;AAAA;AAInB,SAAK,SAAS,SAAS;AAAA;AAGzB,YAAS,UAAU,cAAc,SAAU,IAAI;AAC7C,QAAI,KAAK,YAAY,IAAI;AACvB,aAAO;AAAA;AAGT,aAAS,IAAI,GAAG,WAAW,KAAK,UAAU,OAAM,SAAS,QAAQ,IAAI,MAAK,KAAK;AAC7E,UAAI,MAAM,SAAS,GAAG,YAAY;AAElC,UAAI,KAAK;AACP,eAAO;AAAA;AAAA;AAAA;AAKb,YAAS,UAAU,WAAW,SAAU,MAAM;AAC5C,QAAI,SAAS,MAAM;AACjB,aAAO;AAAA;AAGT,aAAS,IAAI,GAAG,WAAW,KAAK,UAAU,OAAM,SAAS,QAAQ,IAAI,MAAK,KAAK;AAC7E,UAAI,MAAM,SAAS,GAAG,SAAS;AAE/B,UAAI,KAAK;AACP,eAAO;AAAA;AAAA;AAAA;AAUb,YAAS,UAAU,eAAe,SAAU,aAAa;AACvD,QAAI,YAAY;AAChB,QAAI,OAAO,cAAc,OAAO,KAAK;AAErC,WAAO,MAAM;AACX,gBAAU,KAAK;AACf,aAAO,KAAK;AAAA;AAGd,cAAU;AACV,WAAO;AAAA;AAGT,YAAS,UAAU,sBAAsB,WAAY;AACnD,QAAI,UAAU;AACd,QAAI,WAAW;AAEf,WAAO,UAAU;AACf,cAAQ,KAAK,SAAS;AACtB,iBAAW,SAAS;AAAA;AAGtB,YAAQ;AACR,WAAO;AAAA;AAGT,YAAS,UAAU,uBAAuB,WAAY;AACpD,QAAI,UAAU;AACd,SAAK,SAAS,SAAU,WAAW;AACjC,cAAQ,KAAK,UAAU;AAAA;AAEzB,WAAO;AAAA;AAGT,YAAS,UAAU,WAAW,SAAU,WAAW;AACjD,QAAI,OAAO,KAAK,SAAS;AACzB,WAAO,KAAK,WAAW,IAAI,KAAK,kBAAkB,aAAa,UAAU,KAAK;AAAA;AAGhF,YAAS,UAAU,YAAY,SAAU,UAAQ,QAAO;AACtD,SAAK,aAAa,KAAK,KAAK,SAAS,KAAK,cAAc,KAAK,WAAW,UAAQ;AAAA;AAOlF,YAAS,UAAU,YAAY,WAAY;AACzC,WAAO,KAAK,SAAS,KAAK,cAAc,KAAK;AAAA;AAM/C,YAAS,UAAU,WAAW,SAAU,MAAM;AAC5C,QAAI,KAAK,YAAY,GAAG;AACtB;AAAA;AAGF,QAAI,WAAW,KAAK;AACpB,QAAI,YAAY,SAAS,KAAK,aAAa,KAAK;AAChD,WAAO,UAAU,SAAS;AAAA;AAI5B,YAAS,UAAU,gBAAgB,WAAY;AAC7C,WAAQ,MAAK,SAAS,eAAe,IAAI,KAAK;AAAA;AAGhD,YAAS,UAAU,YAAY,SAAU,KAAK,OAAO;AACnD,SAAK,aAAa,KAAK,KAAK,SAAS,KAAK,cAAc,KAAK,WAAW,KAAK;AAAA;AAQ/E,YAAS,UAAU,YAAY,SAAU,KAAK;AAC5C,WAAO,KAAK,SAAS,KAAK,cAAc,KAAK,WAAW;AAAA;AAG1D,YAAS,UAAU,cAAc,WAAY;AAC3C,WAAO,KAAK,SAAS,KAAK,YAAY,KAAK;AAAA;AAG7C,YAAS,UAAU,QAAQ,WAAY;AACrC,WAAO,KAAK,SAAS,KAAK,MAAM,KAAK;AAAA;AAOvC,YAAS,UAAU,gBAAgB,WAAY;AAC7C,QAAI,KAAK,YAAY;AACnB,UAAI,WAAW,KAAK,WAAW;AAE/B,eAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,EAAE,GAAG;AACxC,YAAI,SAAS,OAAO,MAAM;AACxB,iBAAO;AAAA;AAAA;AAIX,aAAO;AAAA;AAGT,WAAO;AAAA;AAUT,YAAS,UAAU,eAAe,SAAU,MAAM;AAChD,QAAI,SAAS,KAAK;AAElB,WAAO,QAAQ;AACb,UAAI,WAAW,MAAM;AACnB,eAAO;AAAA;AAGT,eAAS,OAAO;AAAA;AAGlB,WAAO;AAAA;AAUT,YAAS,UAAU,iBAAiB,SAAU,MAAM;AAClD,WAAO,SAAS,QAAQ,KAAK,aAAa;AAAA;AAG5C,SAAO;AAAA;AAMT,IAAI,OAEJ,WAAY;AACV,iBAAc,WAAW;AACvB,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,YAAY;AAAA;AAGnB,QAAK,UAAU,WAAW,SAAU,SAAS,IAAI,SAAS;AACxD,SAAK,KAAK,SAAS,SAAS,IAAI;AAAA;AAGlC,QAAK,UAAU,qBAAqB,SAAU,WAAW;AACvD,QAAI,WAAW,KAAK,KAAK,YAAY;AACrC,WAAO,KAAK,OAAO;AAAA;AAGrB,QAAK,UAAU,cAAc,SAAU,MAAM;AAC3C,WAAO,KAAK,KAAK,YAAY;AAAA;AAQ/B,QAAK,UAAU,SAAS,WAAY;AAClC,QAAI,OAAO,KAAK;AAChB,QAAI,QAAQ,KAAK;AAEjB,aAAS,IAAI,GAAG,OAAM,MAAM,QAAQ,IAAI,MAAK,KAAK;AAChD,YAAM,GAAG,YAAY;AAAA;AAGvB,aAAS,IAAI,GAAG,OAAM,KAAK,SAAS,IAAI,MAAK,KAAK;AAChD,YAAM,KAAK,YAAY,IAAI,YAAY;AAAA;AAAA;AAQ3C,QAAK,UAAU,eAAe,WAAY;AACxC,SAAK,KAAK;AAAA;AAmBZ,QAAK,aAAa,SAAU,UAAU,WAAW,YAAY;AAC3D,QAAI,OAAO,IAAI,MAAK;AACpB,QAAI,WAAW;AACf,QAAI,SAAS;AACb,mBAAe;AAEf,4BAAwB,UAAU,YAAY;AAC5C,UAAI,QAAQ,SAAS;AACrB,eAAS,KAAK,IAAI,QAAQ,AAAO,QAAQ,SAAS,MAAM,SAAS;AACjE,eAAS,KAAK;AACd,UAAI,OAAO,IAAI,SAAS,oBAAoB,SAAS,MAAM,KAAK;AAChE,mBAAa,SAAS,MAAM,cAAc,KAAK,OAAO;AAEtD,WAAK,OAAO,KAAK;AAEjB,UAAI,WAAW,SAAS;AAExB,UAAI,UAAU;AACZ,iBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,yBAAe,SAAS,IAAI;AAAA;AAAA;AAAA;AAKlC,SAAK,KAAK,qBAAqB;AAC/B,QAAI,aAAa,wBAAwB,UAAU;AAAA,MACjD,iBAAiB,CAAC;AAAA,MAClB,iBAAiB;AAAA,OAChB;AACH,QAAI,OAAO,IAAI,mBAAW,YAAY;AACtC,SAAK,SAAS;AACd,kBAAc,WAAW;AACzB,2BAAe;AAAA,MACb,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,YAAY;AAAA;AAEd,SAAK;AACL,WAAO;AAAA;AAGT,SAAO;AAAA;AAQT,kBAAkB,OAAO,MAAM;AAC7B,MAAI,WAAW,KAAK;AAEpB,MAAI,MAAM,eAAe,MAAM;AAC7B;AAAA;AAGF,WAAS,KAAK;AACd,QAAM,aAAa;AAAA;AAGrB,IAAO,eAAQ;;;ACvYR,4BAA4B,SAAS,mBAAmB,aAAa;AAC1E,MAAI,WAAW,AAAO,QAAQ,mBAAmB,QAAQ,SAAS,GAAG;AACnE,QAAI,OAAO,YAAY,UAAU,KAAK;AACtC,QAAI,aAAa,QAAQ;AAEzB,QAAI,OAAO,eAAe,UAAU;AAClC,mBAAa,KAAK,YAAY;AAAA;AAGhC,QAAI,cAAc,KAAK,SAAS,aAAa;AAC3C,aAAO;AAAA,QACL,MAAM;AAAA;AAAA;AAIV,QAAI,eAAe,QAAQ;AAE3B,QAAI,gBAAgB,QAAS,cAAa,KAAK,YAAY,gBAAgB;AACzE,aAAO;AAAA,QACL,MAAM;AAAA;AAAA;AAAA;AAAA;AAMP,uBAAuB,MAAM;AAClC,MAAI,OAAO;AAEX,SAAO,MAAM;AACX,WAAO,KAAK;AACZ,YAAQ,KAAK,KAAK;AAAA;AAGpB,SAAO,KAAK;AAAA;AAEP,uBAAuB,UAAU,MAAM;AAC5C,MAAI,WAAW,cAAc;AAC7B,SAAO,AAAO,QAAQ,UAAU,SAAS;AAAA;AAGpC,0BAA0B,MAAM,aAAa;AAClD,MAAI,eAAe;AAEnB,SAAO,MAAM;AACX,QAAI,gBAAgB,KAAK;AACzB,iBAAa,KAAK;AAAA,MAChB,MAAM,KAAK;AAAA,MACX,WAAW;AAAA,MACX,OAAO,YAAY,YAAY;AAAA;AAEjC,WAAO,KAAK;AAAA;AAGd,eAAa;AACb,SAAO;AAAA;;;AChDT,IAAI,kBAEJ,SAAU,QAAQ;AAChB,YAAU,kBAAiB;AAE3B,8BAA2B;AACzB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,kBAAkB;AAExB,UAAM,oBAAoB;AAC1B,WAAO;AAAA;AAOT,mBAAgB,UAAU,iBAAiB,SAAU,QAAQ;AAE3D,QAAI,OAAO;AAAA,MACT,MAAM,OAAO;AAAA,MACb,UAAU,OAAO;AAAA;AAEnB,QAAI,SAAS,OAAO,UAAU;AAC9B,QAAI,cAAc,IAAI,cAAM,QAAQ,MAAM,KAAK;AAC/C,QAAI,OAAO,aAAK,WAAW,MAAM,MAAM;AAEvC,wBAAoB,UAAU;AAC5B,eAAS,WAAW,gBAAgB,SAAU,OAAO,KAAK;AACxD,YAAI,OAAO,KAAK,mBAAmB;AAEnC,YAAI,CAAE,SAAQ,KAAK,SAAS,UAAU,KAAK,WAAW;AACpD,gBAAM,cAAc;AAAA;AAGtB,eAAO;AAAA;AAAA;AAIX,QAAI,YAAY;AAChB,SAAK,SAAS,YAAY,SAAU,MAAM;AACxC,UAAI,KAAK,QAAQ,WAAW;AAC1B,oBAAY,KAAK;AAAA;AAAA;AAGrB,QAAI,oBAAoB,OAAO;AAC/B,QAAI,kBAAkB,qBAAqB,OAAO,oBAAoB,IAAI,OAAO,mBAAmB;AACpG,SAAK,KAAK,SAAS,YAAY,SAAU,MAAM;AAC7C,UAAI,OAAO,KAAK,SAAS,KAAK,eAAe,KAAK;AAElD,WAAK,WAAW,QAAQ,KAAK,aAAa,OAAO,CAAC,KAAK,YAAY,KAAK,SAAS;AAAA;AAEnF,WAAO,KAAK;AAAA;AAQd,mBAAgB,UAAU,YAAY,WAAY;AAChD,QAAI,SAAS,KAAK,IAAI;AAEtB,QAAI,WAAW,cAAc;AAC3B,eAAS;AAAA,eACA,WAAW,YAAY;AAChC,eAAS;AAAA;AAGX,WAAO;AAAA;AAGT,mBAAgB,UAAU,UAAU,SAAU,MAAM;AAClD,SAAK,OAAO,OAAO;AAAA;AAGrB,mBAAgB,UAAU,YAAY,SAAU,SAAQ;AACtD,SAAK,OAAO,SAAS;AAAA;AAGvB,mBAAgB,UAAU,gBAAgB,SAAU,WAAW,gBAAgB,UAAU;AACvF,QAAI,OAAO,KAAK,UAAU;AAC1B,QAAI,WAAW,KAAK,KAAK,SAAS;AAClC,QAAI,OAAO,KAAK,mBAAmB;AACnC,QAAI,QAAQ,KAAK;AACjB,QAAI,OAAO,KAAK;AAEhB,WAAO,QAAQ,SAAS,UAAU;AAChC,aAAO,KAAK,WAAW,OAAO,MAAM;AACpC,aAAO,KAAK;AAAA;AAGd,WAAO,oBAAoB,aAAa;AAAA,MACtC;AAAA,MACA;AAAA,MACA,SAAS,MAAM,UAAU,SAAS;AAAA;AAAA;AAKtC,mBAAgB,UAAU,gBAAgB,SAAU,WAAW;AAC7D,QAAI,SAAS,OAAO,UAAU,cAAc,MAAM,MAAM;AAExD,QAAI,OAAO,KAAK,UAAU,KAAK,mBAAmB;AAClD,WAAO,gBAAgB,iBAAiB,MAAM;AAC9C,WAAO;AAAA;AAGT,mBAAgB,OAAO;AAGvB,mBAAgB,aAAa;AAC7B,mBAAgB,gBAAgB;AAAA,IAC9B,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,kBAAkB;AAAA,IAElB,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IAER,QAAQ;AAAA,IAER,WAAW;AAAA,IACX,kBAAkB;AAAA,IAElB,MAAM;AAAA,IAEN,gBAAgB;AAAA,IAEhB,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,mBAAmB;AAAA,IACnB,kBAAkB;AAAA,IAClB,WAAW;AAAA,MACT,OAAO;AAAA,MACP,OAAO;AAAA,MACP,WAAW;AAAA;AAAA,IAEb,WAAW;AAAA,MACT,OAAO;AAAA,MAEP,aAAa;AAAA;AAAA,IAEf,OAAO;AAAA,MACL,MAAM;AAAA;AAAA,IAER,iBAAiB;AAAA,IACjB,mBAAmB;AAAA,IACnB,yBAAyB;AAAA;AAE3B,SAAO;AAAA,EACP;AAEF,IAAO,qBAAQ;;;AClKf,mBAAmB,MAAM,UAAU,aAAY;AAC7C,MAAI,QAAQ,CAAC;AACb,MAAI,OAAO;AACX,MAAI;AAEJ,SAAO,OAAO,MAAM,OAAO;AAEzB,SAAK,KAAK;AAEV,QAAI,KAAK,UAAU;AACjB,UAAI,WAAW,KAAK;AAEpB,UAAI,SAAS,QAAQ;AACnB,iBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,gBAAM,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAM5B,SAAO,OAAO,KAAK,OAAO;AAExB,aAAS,MAAM;AAAA;AAAA;AAQnB,oBAAoB,MAAM,UAAU;AAClC,MAAI,QAAQ,CAAC;AACb,MAAI;AAEJ,SAAO,OAAO,MAAM,OAAO;AAEzB,aAAS;AAET,QAAI,KAAK,UAAU;AACjB,UAAI,WAAW,KAAK;AAEpB,UAAI,SAAS,QAAQ;AACnB,iBAAS,IAAI,SAAS,SAAS,GAAG,KAAK,GAAG,KAAK;AAC7C,gBAAM,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;;;AC7Cf,oBAAoB,SAAS,KAAK;AAC/C,UAAQ,iBAAiB,QAAQ,SAAU,aAAa;AACtD,iBAAa,aAAa;AAAA;AAAA;AAI9B,sBAAsB,aAAa,KAAK;AACtC,MAAI,aAAa,aAAY,aAAa;AAC1C,cAAY,aAAa;AACzB,MAAI,WAAS,YAAY,IAAI;AAC7B,MAAI,QAAQ;AACZ,MAAI,SAAS;AACb,MAAI,cAAa;AAEjB,MAAI,aAAW,UAAU;AACvB,YAAQ,IAAI,KAAK;AACjB,aAAS,KAAK,IAAI,WAAW,QAAQ,WAAW,SAAS;AACzD,kBAAa,WAAI,SAAU,OAAO,OAAO;AACvC,aAAQ,OAAM,eAAe,MAAM,aAAa,IAAI,KAAK,MAAM;AAAA;AAAA,SAE5D;AACL,YAAQ,WAAW;AACnB,aAAS,WAAW;AACpB,kBAAa;AAAA;AAGf,MAAI,cAAc,YAAY,UAAU,KAAK;AAC7C,MAAI,WAAW,YAAY,SAAS;AAEpC,MAAI,UAAU;AACZ,UAAK;AACL,cAAU,UAAU,WAAW;AAC/B,gBAAY,SAAS,WAAW,CAAC,SAAS,SAAS;AACnD,eAAW,UAAU;AACrB,QAAI,SAAS;AACb,QAAI,UAAU;AACd,QAAI,WAAW;AACf,eAAW,UAAU,SAAU,MAAM;AACnC,UAAI,IAAI,KAAK,YAAY;AAEzB,UAAI,IAAI,OAAO,YAAY,GAAG;AAC5B,iBAAS;AAAA;AAGX,UAAI,IAAI,QAAQ,YAAY,GAAG;AAC7B,kBAAU;AAAA;AAGZ,UAAI,KAAK,QAAQ,SAAS,OAAO;AAC/B,mBAAW;AAAA;AAAA;AAGf,QAAI,QAAQ,WAAW,UAAU,IAAI,YAAW,QAAQ,WAAW;AACnE,QAAI,OAAO,QAAQ,OAAO,YAAY;AACtC,QAAI,OAAO;AACX,QAAI,OAAO;AACX,QAAI,UAAU;AACd,QAAI,UAAU;AAEd,QAAI,aAAW,UAAU;AACvB,aAAO,QAAS,SAAQ,YAAY,IAAI,QAAQ;AAEhD,aAAO,SAAU,UAAS,QAAQ,KAAK;AACvC,iBAAW,UAAU,SAAU,MAAM;AACnC,kBAAW,MAAK,YAAY,IAAI,QAAQ;AACxC,kBAAW,MAAK,QAAQ,KAAK;AAC7B,YAAI,YAAY,iBAAiB,SAAS;AAC1C,aAAK,UAAU;AAAA,UACb,GAAG,UAAU;AAAA,UACb,GAAG,UAAU;AAAA,UACb,MAAM;AAAA,UACN,MAAM;AAAA,WACL;AAAA;AAAA,WAEA;AACL,UAAI,WAAW,YAAY;AAE3B,UAAI,aAAa,QAAQ,aAAa,MAAM;AAC1C,eAAO,SAAU,SAAQ,YAAY,IAAI,QAAQ;AACjD,eAAO,QAAS,UAAS,QAAQ,KAAK;AACtC,mBAAW,UAAU,SAAU,MAAM;AACnC,oBAAW,MAAK,YAAY,IAAI,QAAQ;AACxC,oBAAU,aAAa,OAAQ,MAAK,QAAQ,KAAK,OAAO,QAAS,MAAK,QAAQ,KAAK;AACnF,eAAK,UAAU;AAAA,YACb,GAAG;AAAA,YACH,GAAG;AAAA,aACF;AAAA;AAAA,iBAEI,aAAa,QAAQ,aAAa,MAAM;AACjD,eAAO,QAAS,SAAQ,YAAY,IAAI,QAAQ;AAChD,eAAO,SAAU,UAAS,QAAQ,KAAK;AACvC,mBAAW,UAAU,SAAU,MAAM;AACnC,oBAAW,MAAK,YAAY,IAAI,QAAQ;AACxC,oBAAU,aAAa,OAAQ,MAAK,QAAQ,KAAK,OAAO,SAAU,MAAK,QAAQ,KAAK;AACpF,eAAK,UAAU;AAAA,YACb,GAAG;AAAA,YACH,GAAG;AAAA,aACF;AAAA;AAAA;AAAA;AAAA;AAAA;;;AClGE,oBAAoB,SAAS;AAC1C,UAAQ,iBAAiB,QAAQ,SAAU,aAAa;AACtD,QAAI,OAAO,YAAY;AACvB,QAAI,OAAO,KAAK;AAChB,SAAK,SAAS,SAAU,MAAM;AAC5B,UAAI,QAAQ,KAAK;AAEjB,UAAI,QAAQ,MAAM,SAAS,aAAa;AACxC,UAAI,cAAc,KAAK,uBAAuB,KAAK,WAAW;AAC9D,aAAO,aAAa;AAAA;AAAA;AAAA;;;ACTnB,2BAA2B,WAAW;AAC3C,YAAU,eAAe;AAAA,IACvB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,KACP,SAAU,SAAS,SAAS;AAC7B,YAAQ,cAAc;AAAA,MACpB,UAAU;AAAA,MACV,SAAS;AAAA,MACT,OAAO;AAAA,OACN,SAAU,aAAa;AACxB,UAAI,YAAY,QAAQ;AACxB,UAAI,OAAO,YAAY,UAAU;AACjC,UAAI,OAAO,KAAK,mBAAmB;AACnC,WAAK,WAAW,CAAC,KAAK;AAAA;AAAA;AAG1B,YAAU,eAAe;AAAA,IACvB,MAAM;AAAA,IACN,OAAO;AAAA,IAKP,QAAQ;AAAA,KACP,SAAU,SAAS,SAAS;AAC7B,YAAQ,cAAc;AAAA,MACpB,UAAU;AAAA,MACV,SAAS;AAAA,MACT,OAAO;AAAA,OACN,SAAU,aAAa;AACxB,UAAI,WAAW,YAAY;AAC3B,UAAI,MAAM,oBAAoB,UAAU;AACxC,kBAAY,aAAa,YAAY,UAAU,IAAI;AACnD,kBAAY,WAAW,YAAY,QAAQ,IAAI;AAAA;AAAA;AAAA;;;AC9B9C,mBAAiB,WAAW;AACjC,YAAU,kBAAkB;AAC5B,YAAU,oBAAoB;AAC9B,YAAU,eAAe;AACzB,YAAU,eAAe;AACzB,oBAAkB;AAAA;;;ACRpB,IAAI,QAAO,WAAY;AAAA;AAEvB,IAAI,cAAc,CAAC,qBAAqB,iBAAiB;AAClD,8BAA8B,WAAW;AAC9C,WAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,cAAU,eAAe;AAAA,MACvB,MAAM,YAAY;AAAA,MAClB,QAAQ;AAAA,OACP;AAAA;AAGL,YAAU,eAAe;AAAA,IACvB,MAAM;AAAA,IACN,QAAQ;AAAA,KACP,SAAU,SAAS,SAAS;AAC7B,YAAQ,cAAc;AAAA,MACpB,UAAU;AAAA,MACV,SAAS;AAAA,MACT,OAAO;AAAA,OACN;AAEH,8BAA0B,OAAO,OAAO;AACtC,UAAI,QAAQ,CAAC,qBAAqB;AAClC,UAAI,aAAa,AAAO,mBAAmB,SAAS,OAAO;AAE3D,UAAI,YAAY;AACd,YAAI,iBAAiB,MAAM;AAE3B,YAAI,gBAAgB;AAClB,kBAAQ,YAAY,AAAO,cAAc,gBAAgB,WAAW,QAAQ,WAAW;AAAA;AAGzF,cAAM,cAAc,WAAW;AAAA;AAAA;AAAA;AAAA;;;ACjCxB,gCAAgC,aAAa;AAC1D,MAAI,OAAO,YAAY;AACvB,MAAI,OAAO,KAAK;AAChB,MAAI,qBAAoB;AACxB,OAAK,SAAS,SAAU,MAAM;AAE5B,QAAI,UAAU;AAEd,WAAO,WAAW,QAAQ,QAAQ,GAAG;AACnC,gBAAU,QAAQ;AAAA;AAGpB,QAAI,QAAQ,oBAAoB,YAAY,SAAS,QAAQ,QAAQ,QAAQ,YAAY,IAAI;AAC7F,SAAK,UAAU,SAAS;AAAA;AAAA;;;ACJ5B,IAAI,qBAEJ,SAAU,QAAQ;AAChB,YAAU,qBAAoB;AAE9B,iCAA8B;AAC5B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,oBAAmB;AAChC,UAAM,yBAAyB;AAC/B,WAAO;AAAA;AAOT,sBAAmB,UAAU,iBAAiB,SAAU,QAAQ,SAAS;AAEvE,QAAI,OAAO;AAAA,MACT,MAAM,OAAO;AAAA,MACb,UAAU,OAAO;AAAA;AAEnB,sBAAkB;AAClB,QAAI,SAAS,OAAO,UAAU;AAK9B,QAAI,4BAA4B,KAAK,4BAA4B;AACjE,QAAI,wBAAwB,IAAI,cAAM;AAAA,MACpC,WAAW;AAAA,OACV,MAAM;AACT,aAAS,OAAO,SAAS,WAAW,QAAQ;AAC5C,QAAI,cAAc,AAAO,IAAI,UAAU,IAAI,SAAU,aAAa;AAChE,aAAO,IAAI,cAAM,aAAa,uBAAuB;AAAA,OACpD;AAIH,QAAI,OAAO,aAAK,WAAW,MAAM,MAAM;AAEvC,wBAAoB,UAAU;AAC5B,eAAS,WAAW,gBAAgB,SAAU,OAAO,KAAK;AACxD,YAAI,OAAO,KAAK,mBAAmB;AACnC,YAAI,aAAa,OAAO,YAAY,KAAK,SAAS;AAElD,cAAM,cAAc,cAAc;AAClC,eAAO;AAAA;AAAA;AAIX,WAAO,KAAK;AAAA;AAGd,sBAAmB,UAAU,gBAAgB,WAAY;AACvD,SAAK;AAAA;AASP,sBAAmB,UAAU,gBAAgB,SAAU,WAAW,gBAAgB,UAAU;AAC1F,QAAI,OAAO,KAAK;AAChB,QAAI,QAAQ,KAAK,YAAY;AAC7B,QAAI,OAAO,KAAK,QAAQ;AACxB,WAAO,oBAAoB,aAAa;AAAA,MACtC;AAAA,MACA;AAAA;AAAA;AAYJ,sBAAmB,UAAU,gBAAgB,SAAU,WAAW;AAChE,QAAI,SAAS,OAAO,UAAU,cAAc,MAAM,MAAM;AAExD,QAAI,OAAO,KAAK,UAAU,KAAK,mBAAmB;AAClD,WAAO,gBAAgB,iBAAiB,MAAM;AAE9C,WAAO,eAAe,OAAO;AAC7B,WAAO;AAAA;AAaT,sBAAmB,UAAU,gBAAgB,SAAU,YAAY;AAKjE,SAAK,aAAa,KAAK,cAAc;AACrC,IAAO,OAAO,KAAK,YAAY;AAAA;AAQjC,sBAAmB,UAAU,eAAe,SAAU,IAAI;AAaxD,QAAI,aAAa,KAAK;AAEtB,QAAI,CAAC,YAAY;AACf,mBAAa,KAAK,cAAc,AAAO;AAMvC,WAAK,mBAAmB;AAAA;AAG1B,QAAI,QAAQ,WAAW,IAAI;AAE3B,QAAI,SAAS,MAAM;AACjB,iBAAW,IAAI,IAAI,QAAQ,KAAK;AAAA;AAGlC,WAAO;AAAA;AAGT,sBAAmB,UAAU,cAAc,WAAY;AACrD,WAAO,KAAK;AAAA;AAGd,sBAAmB,UAAU,gBAAgB,SAAU,UAAU;AAC/D,eAAW,KAAK,YAAY,WAAW,WAAW,KAAK;AACvD,QAAI,OAAO,KAAK,aAAa,KAAK;AAElC,QAAI,CAAC,YAAY,aAAa,QAAQ,CAAC,KAAK,SAAS,WAAW;AAC9D,WAAK,YAAY;AAAA;AAAA;AAIrB,sBAAmB,UAAU,kBAAkB,WAAY;AACzD,2BAAuB;AAAA;AAGzB,sBAAmB,OAAO;AAC1B,sBAAmB,aAAa;AAChC,sBAAmB,gBAAgB;AAAA,IAEjC,aAAa;AAAA,IAEb,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,aAAa,MAAO,KAAI,KAAK,KAAK;AAAA,IAClC,WAAW;AAAA,IACX,eAAe;AAAA,IAEf,iBAAiB,OAAO;AAAA,IACxB,MAAM;AAAA,IACN,WAAW;AAAA,IACX,WAAW;AAAA,IACX,yBAAyB;AAAA,IACzB,iBAAiB;AAAA,IACjB,YAAY;AAAA,MACV,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,KAAK;AAAA,MAGL,gBAAgB;AAAA,MAChB,WAAW;AAAA,QACT,OAAO;AAAA,QACP,WAAW;AAAA,UACT,OAAO;AAAA;AAAA;AAAA;AAAA,IAIb,OAAO;AAAA,MACL,MAAM;AAAA,MAEN,UAAU;AAAA,MACV,SAAS;AAAA,MACT,UAAU;AAAA,MAEV,OAAO;AAAA,MACP,UAAU;AAAA;AAAA,IAIZ,YAAY;AAAA,MACV,MAAM;AAAA,MACN,UAAU,CAAC,GAAG;AAAA,MACd,QAAQ;AAAA,MAGR,UAAU;AAAA,MAEV,eAAe;AAAA;AAAA,IAEjB,WAAW;AAAA,MACT,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,UAAU;AAAA,MACV,aAAa;AAAA,MACb,uBAAuB;AAAA;AAAA,IAKzB,UAAU;AAAA,MACR,YAAY;AAAA,QACV,MAAM;AAAA,QACN,UAAU,CAAC,GAAG;AAAA,QACd,UAAU;AAAA,QACV,eAAe;AAAA;AAAA;AAAA,IAGnB,iBAAiB;AAAA,IACjB,WAAW;AAAA,IACX,WAAW;AAAA,IACX,OAAO;AAAA,IAUP,YAAY;AAAA,IACZ,iBAAiB;AAAA,IACjB,gBAAgB;AAAA,IAChB,YAAY;AAAA,IAEZ,oBAAoB;AAAA,IAKpB,QAAQ;AAAA;AAWV,SAAO;AAAA,EACP;AAMF,2BAA2B,UAAU;AAInC,MAAI,OAAM;AACV,EAAO,KAAK,SAAS,UAAU,SAAU,OAAO;AAC9C,sBAAkB;AAClB,QAAI,aAAa,MAAM;AACvB,IAAO,QAAQ,eAAgB,cAAa,WAAW;AACvD,YAAO;AAAA;AAET,MAAI,YAAY,SAAS;AAEzB,MAAI,AAAO,QAAQ,YAAY;AAC7B,gBAAY,UAAU;AAAA;AAGxB,MAAI,aAAa,QAAQ,MAAM,YAAY;AACzC,gBAAY;AAAA;AAId,MAAI,YAAY,GAAG;AACjB,gBAAY;AAAA;AAGd,EAAO,QAAQ,SAAS,SAAS,SAAS,MAAM,KAAK,YAAY,SAAS,QAAQ;AAAA;AAOpF,oBAAoB,QAAQ,SAAS;AACnC,MAAI,kBAAkB,iBAAiB,QAAQ,IAAI;AACnD,MAAI,kBAAkB,iBAAiB,QAAQ,IAAI,CAAC,QAAQ,SAAS;AAErE,MAAI,CAAC,iBAAiB;AACpB;AAAA;AAGF,WAAS,UAAU;AACnB,MAAI;AACJ,MAAI;AACJ,EAAO,KAAK,QAAQ,SAAU,aAAa;AACzC,QAAI,QAAQ,IAAI,cAAM;AACtB,QAAI,aAAa,MAAM,IAAI;AAC3B,QAAI,aAAa,MAAM,IAAI;AAE3B,QAAI,MAAM,IAAI,CAAC,aAAa,aAAa,cAAc,eAAe,QAAQ;AAC5E,uBAAiB;AAAA;AAGnB,QAAI,MAAM,IAAI,CAAC,aAAa,aAAa,cAAc,eAAe,QAAQ;AAC5E,uBAAiB;AAAA;AAAA;AAGrB,MAAI,SAAS,OAAO,MAAO,QAAO,KAAK;AAEvC,MAAI,CAAC,gBAAgB;AACnB,WAAO,QAAQ,gBAAgB;AAAA;AAGjC,MAAI,CAAC,kBAAkB,iBAAiB;AACtC,WAAO,QAAQ,gBAAgB;AAAA;AAGjC,SAAO;AAAA;AAGT,IAAO,wBAAQ;;;ACzWf,IAAI,eAAe;AACnB,IAAI,WAAW;AACf,IAAI,eAAe;AAEnB,IAAI,aAEJ,WAAY;AACV,uBAAoB,gBAAgB;AAClC,SAAK,QAAQ,IAAY;AACzB,mBAAe,IAAI,KAAK;AAAA;AAG1B,cAAW,UAAU,SAAS,SAAU,aAAa,KAAK,YAAY,UAAU;AAC9E,QAAI,QAAQ,YAAY,SAAS;AACjC,QAAI,YAAY,KAAK;AACrB,cAAU;AAEV,QAAI,CAAC,MAAM,IAAI,WAAW,CAAC,YAAY;AACrC;AAAA;AAGF,QAAI,mBAAmB,MAAM,SAAS;AAEtC,QAAI,iBAAiB,iBAAiB,SAAS;AAC/C,QAAI,cAAc;AAAA,MAChB,KAAK;AAAA,QACH,MAAM,MAAM,IAAI;AAAA,QAChB,OAAO,MAAM,IAAI;AAAA,QACjB,KAAK,MAAM,IAAI;AAAA,QACf,QAAQ,MAAM,IAAI;AAAA;AAAA,MAEpB,KAAK;AAAA,QACH,OAAO,IAAI;AAAA,QACX,QAAQ,IAAI;AAAA;AAAA,MAEd,gBAAgB,MAAM,IAAI;AAAA,MAC1B,YAAY;AAAA,MACZ,YAAY;AAAA;AAGd,SAAK,SAAS,YAAY,aAAa;AAEvC,SAAK,eAAe,aAAa,aAAa,kBAAkB,gBAAgB;AAEhF,IAAO,gBAAgB,WAAW,YAAY,KAAK,YAAY;AAAA;AAQjE,cAAW,UAAU,WAAW,SAAU,YAAY,aAAa,gBAAgB;AACjF,aAAS,OAAO,YAAY,MAAM,OAAO,KAAK,YAAY;AACxD,UAAI,OAAO,oBAAoB,KAAK,WAAW,IAAI,SAAS;AAC5D,UAAI,WAAW,eAAe,YAAY;AAC1C,UAAI,YAAY,KAAK,IAAI,SAAS,QAAQ,eAAe,GAAG,YAAY;AACxE,kBAAY,cAAc,YAAY;AACtC,kBAAY,WAAW,KAAK;AAAA,QAC1B;AAAA,QACA;AAAA,QACA,OAAO;AAAA;AAAA;AAAA;AASb,cAAW,UAAU,iBAAiB,SAAU,aAAa,aAAa,kBAAkB,gBAAgB,UAAU;AAEpH,QAAI,QAAQ;AACZ,QAAI,iBAAiB,YAAY;AACjC,QAAI,SAAS,YAAY,IAAI,CAAC,cAAc;AAC5C,QAAI,gBAAgB,AAAO,iBAAiB,YAAY,KAAK,YAAY;AACzE,QAAI,aAAa,YAAY;AAC7B,QAAI,aAAa,YAAY;AAE7B,aAAS,IAAI,WAAW,SAAS,GAAG,KAAK,GAAG,KAAK;AAC/C,UAAI,OAAO,WAAW;AACtB,UAAI,WAAW,KAAK;AACpB,UAAI,YAAY,KAAK;AACrB,UAAI,OAAO,KAAK;AAEhB,UAAI,aAAa,cAAc,OAAO;AACpC,sBAAc,YAAY;AAC1B,oBAAY;AACZ,eAAO;AAAA;AAGT,UAAI,KAAK,IAAY,gBAAQ;AAAA,QAC3B,OAAO;AAAA,UACL,QAAQ,eAAe,OAAO,GAAG,WAAW,QAAQ,MAAM,WAAW,SAAS,GAAG,MAAM;AAAA;AAAA,QAEzF,OAAO,SAAS,iBAAiB,gBAAgB;AAAA,UAC/C,UAAU;AAAA;AAAA,QAEZ,aAAa,IAAY,aAAK;AAAA,UAC5B,OAAO;AAAA,YACL;AAAA,YACA,MAAM,eAAe;AAAA,YACrB,MAAM,eAAe;AAAA;AAAA;AAAA,QAGzB,YAAY;AAAA,UACV,UAAU;AAAA;AAAA,QAEZ,IAAI,mBAAmB;AAAA,QACvB,SAAS,MAAM,UAAU;AAAA;AAE3B,SAAG,wBAAwB;AAC3B,WAAK,MAAM,IAAI;AACf,oBAAc,IAAI,aAAa;AAC/B,eAAS,YAAY;AAAA;AAAA;AAIzB,cAAW,UAAU,SAAS,WAAY;AACxC,SAAK,MAAM;AAAA;AAGb,SAAO;AAAA;AAGT,wBAAwB,GAAG,GAAG,WAAW,YAAY,MAAM,MAAM;AAC/D,MAAI,SAAS,CAAC,CAAC,OAAO,IAAI,IAAI,cAAc,IAAI,CAAC,IAAI,WAAW,IAAI,CAAC,IAAI,WAAW,IAAI,aAAa,CAAC,OAAO,IAAI,IAAI,cAAc,IAAI;AACvI,GAAC,QAAQ,OAAO,OAAO,GAAG,GAAG,CAAC,IAAI,YAAY,cAAc,IAAI,aAAa;AAC7E,GAAC,QAAQ,OAAO,KAAK,CAAC,GAAG,IAAI,aAAa;AAC1C,SAAO;AAAA;AAIT,uBAAuB,IAAI,aAAa,UAAU;AAChD,YAAU,IAAI,YAAY;AAAA,IACxB,eAAe;AAAA,IACf,kBAAkB;AAAA,IAClB,gBAAgB,YAAY;AAAA,IAC5B,aAAa,YAAY;AAAA,IACzB,YAAY,YAAY;AAAA,IACxB,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,UAAU;AAAA,MACR,WAAW,YAAY,SAAS;AAAA,MAChC,MAAM,YAAY,SAAS;AAAA;AAAA,IAE7B,cAAc,YAAY,iBAAiB,UAAU;AAAA;AAAA;AAIzD,IAAO,qBAAQ;;;ACjJf,IAAI,gBAEJ,WAAY;AACV,4BAAyB;AACvB,SAAK,WAAW;AAChB,SAAK,eAAe;AAAA;AAWtB,iBAAc,UAAU,MAAM,SAAU,IAAI,QAAQ,UAAU,OAAO,QAAQ;AAC3E,QAAI,KAAK,aAAa,GAAG,KAAK;AAC5B,aAAO;AAAA;AAGT,SAAK,aAAa,GAAG,MAAM;AAE3B,SAAK,SAAS,KAAK;AAAA,MACjB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAGF,WAAO;AAAA;AAOT,iBAAc,UAAU,WAAW,SAAU,UAAU;AACrD,SAAK,oBAAoB;AACzB,WAAO;AAAA;AAOT,iBAAc,UAAU,QAAQ,WAAY;AAC1C,QAAI,QAAQ;AAEZ,QAAI,SAAQ,KAAK,SAAS;AAE1B,QAAI,iBAAiB,WAAY;AAC/B;AAEA,UAAI,UAAS,GAAG;AAEd,cAAM,SAAS,SAAS;AACxB,cAAM,eAAe;AACrB,cAAM,qBAAqB,MAAM;AAAA;AAAA;AAIrC,aAAS,IAAI,GAAG,OAAM,KAAK,SAAS,QAAQ,IAAI,MAAK,KAAK;AACxD,UAAI,OAAO,KAAK,SAAS;AACzB,WAAK,GAAG,UAAU,KAAK,QAAQ;AAAA,QAC7B,UAAU,KAAK;AAAA,QACf,OAAO,KAAK;AAAA,QACZ,QAAQ,KAAK;AAAA,QACb,YAAY;AAAA,QACZ,MAAM;AAAA,QACN,SAAS;AAAA;AAAA;AAIb,WAAO;AAAA;AAGT,SAAO;AAAA;AAGF,sBAAsB;AAC3B,SAAO,IAAI;AAAA;;;AC5Eb,IAAI,QAAgB;AACpB,IAAI,OAAe;AACnB,IAAI,iBAAiB;AACrB,IAAI,oBAAoB;AACxB,IAAI,yBAAyB;AAE7B,IAAI,UAAU,mBAAmB;AAEjC,IAAI,QAAQ,mBAAmB;AAC/B,IAAI,aAAa,mBAAmB;AACpC,IAAI,oBAAoB,gBAAgB;AAAA,EAAC,CAAC,QAAQ;AAAA,EAElD,CAAC,UAAU;AAAA,EAAgB,CAAC,aAAa;AAAA,EAAgB,CAAC;AAAA,EAAe,CAAC;AAAA,EAAkB,CAAC;AAAA,EAAkB,CAAC;AAAA;AAIhH,IAAI,qBAAqB,SAAU,OAAO;AAExC,MAAI,YAAY,kBAAkB;AAElC,YAAU,SAAS,UAAU,OAAO,UAAU,YAAY;AAC1D,SAAO;AAAA;AAGT,IAAI,SAAQ;AAEZ,IAAI,cAEJ,SAAU,QAAQ;AAChB,YAAU,cAAa;AAEvB,0BAAuB;AACrB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,aAAY;AACzB,UAAM,SAAS;AACf,UAAM,WAAW;AACjB,WAAO;AAAA;AAOT,eAAY,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK,SAAS;AAC3E,QAAI,SAAS,QAAQ,eAAe;AAAA,MAClC,UAAU;AAAA,MACV,SAAS;AAAA,MACT,OAAO;AAAA;AAGT,QAAI,QAAQ,QAAQ,eAAe,GAAG;AACpC;AAAA;AAGF,SAAK,cAAc;AACnB,SAAK,MAAM;AACX,SAAK,UAAU;AACf,QAAI,QAAQ,CAAC,qBAAqB;AAClC,QAAI,aAAa,AAAO,mBAAmB,SAAS,OAAO;AAC3D,QAAI,cAAc,WAAW,QAAQ;AACrC,QAAI,aAAa,YAAY;AAC7B,QAAI,SAAS,CAAC,KAAK;AACnB,QAAI,cAAc,KAAK;AAEvB,QAAI,SAAS,gBAAgB,uBAAuB,cAAc,cAAc;AAAA,MAC9E,eAAe,YAAY,UAAU,WAAW,KAAK;AAAA,MACrD,WAAW,QAAQ;AAAA,QACjB;AAEJ,QAAI,iBAAiB,KAAK,oBAAoB;AAE9C,QAAI,eAAe,YAAY,IAAI;AAEnC,QAAI,eAAe,KAAK,UAAU,gBAAgB,aAAa;AAE/D,oBAAgB,CAAC,UAAW,EAAC,eAAe,gBAAgB,uBAAuB,gBAAgB,uBAAuB,KAAK,aAAa,gBAAgB,cAAc,aAAa,UAAU,aAAa;AAE9M,SAAK,iBAAiB;AAEtB,SAAK,kBAAkB,aAAa,KAAK;AAAA;AAG3C,eAAY,UAAU,sBAAsB,SAAU,YAAY;AAChE,QAAI,iBAAiB,KAAK;AAE1B,QAAI,CAAC,gBAAgB;AAGnB,uBAAiB,KAAK,kBAAkB,IAAI;AAE5C,WAAK,YAAY;AAEjB,WAAK,MAAM,IAAI;AAAA;AAGjB,mBAAe,IAAI,WAAW;AAC9B,mBAAe,IAAI,WAAW;AAC9B,WAAO;AAAA;AAGT,eAAY,UAAU,YAAY,SAAU,gBAAgB,aAAa,QAAQ;AAC/E,QAAI,WAAW,YAAY,UAAU;AACrC,QAAI,UAAU,KAAK;AAEnB,QAAI,oBAAoB;AACxB,QAAI,cAAc;AAClB,QAAI,aAAa,KAAK;AACtB,QAAI,mBAAmB;AAEvB,0BAAsB,UAAU,SAAS,aAAa,OAAO;AAC3D,aAAO,WAAW,aAAa,aAAa,YAAY,QAAQ,mBAAmB,kBAAkB,UAAU,SAAS,aAAa;AAAA;AAOvI,eAAW,SAAS,OAAO,CAAC,SAAS,QAAQ,IAAI,WAAW,QAAQ,OAAO,CAAC,QAAQ,QAAQ,IAAI,gBAAgB,aAAa,WAAW,CAAC,SAAS;AAElJ,QAAI,gBAAgB,aAAa;AACjC,SAAK,WAAW;AAChB,SAAK,WAAW;AAChB,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA;AAGF,wBAAoB,kBAAkB,iBAAiB,aAAa,UAAU,OAAO;AAInF,UAAI,UAAU;AACZ,0BAAkB;AAClB,aAAK,kBAAkB,SAAU,OAAO,OAAO;AAC7C,WAAC,MAAM,eAAe,YAAY,OAAO;AAAA;AAAA,aAIxC;AACD,YAAI,mBAAW,iBAAiB,kBAAkB,SAAQ,SAAQ,IAAI,aAAa,OAAO,aAAa,OAAO,MAAM,aAAa,OAAO;AAAA;AAG5I,uBAAgB,MAAM;AAEpB,eAAO,KAAK;AAAA;AAGd,2BAAqB,UAAU,UAAU;AACvC,YAAI,WAAW,YAAY,OAAO,iBAAiB,YAAY;AAC/D,YAAI,UAAU,YAAY,OAAO,gBAAgB,YAAY;AAC7D,YAAI,QAAQ,aAAa,UAAU,SAAS,aAAa;AACzD,iBAAS,WAAW,YAAY,SAAS,gBAAgB,IAAI,WAAW,QAAQ,gBAAgB,IAAI,OAAO,UAAU,QAAQ;AAAA;AAAA;AAIjI,0BAAsB,SAAS;AAC7B,UAAI,iBAAgB;AACpB,iBAAW,KAAK,SAAS,SAAU,OAAO,aAAa;AACrD,YAAI,SAAS,eAAc;AAC3B,aAAK,OAAO,SAAU,IAAI;AACxB,gBAAO,QAAO,KAAK,KAAK,OAAM,IAAI,aAAa;AAAA;AAAA;AAGnD,aAAO;AAAA;AAGT,6BAAyB;AACvB,WAAK,eAAe,SAAU,KAAK;AACjC,aAAK,KAAK,SAAU,IAAI;AACtB,aAAG,UAAU,GAAG,OAAO,OAAO;AAAA;AAAA;AAGlC,WAAK,kBAAkB,SAAU,IAAI;AACnC,WAAG,YAAY;AAGf,WAAG;AAAA;AAAA;AAAA;AAKT,eAAY,UAAU,eAAe,SAAU,gBAAgB,cAAc,aAAa,QAAQ;AAChG,QAAI,iBAAiB,YAAY,IAAI;AACrC,QAAI,eAAe,YAAY,IAAI;AAEnC,QAAI,WAAY,YAAW,kBAAkB,IAAI,mBAAmB;AACpE,QAAI,SAAU,YAAW,gBAAgB,OAAO,iBAAiB;AACjE,QAAI,gBAAgB,AAAc;AAElC,SAAK,aAAa,eAAe,SAAU,OAAO,aAAa;AAC7D,WAAK,OAAO,SAAU,IAAI,UAAU;AAClC,YAAI,GAAG,WAAW;AAChB;AAAA;AAGF,YAAI,SAAS,GAAG;AAEhB,YAAI;AACJ,YAAI,aAAa,OAAM;AAEvB,YAAI,UAAU,OAAO,cAAc,aAAa;AAC9C,mBAAS,WAAW,OAAO,gBAGzB;AAAA,YACA,OAAO;AAAA,cACL,GAAG;AAAA,cACH,GAAG;AAAA,cACH,OAAO,WAAW;AAAA,cAClB,QAAQ,WAAW;AAAA;AAAA,YAErB,OAAO;AAAA,cACL,SAAS;AAAA;AAAA,cAGX;AAAA,YACA,OAAO;AAAA,cACL,SAAS;AAAA;AAAA;AAAA,eAGR;AACL,cAAI,UAAU;AACd,cAAI,UAAU;AAEd,cAAI,CAAC,WAAW,YAAY;AAI1B,sBAAU,WAAW,YAAY;AACjC,sBAAU,WAAW,aAAa;AAAA;AAGpC,mBAAS,gBAAgB,cAAc;AAAA,YACrC,GAAG;AAAA,YACH,GAAG;AAAA,YACH,OAAO;AAAA,cACL,SAAS;AAAA;AAAA,cAET;AAAA,YACF,OAAO;AAAA,cACL,GAAG;AAAA,cACH,GAAG;AAAA,cACH,OAAO;AAAA,cACP,QAAQ;AAAA;AAAA,YAEV,OAAO;AAAA,cACL,SAAS;AAAA;AAAA;AAAA;AAMf,kBAAU,cAAc,IAAI,IAAI,QAAQ,UAAU,GAAG;AAAA;AAAA;AAIzD,SAAK,KAAK,UAAU,SAAU,OAAO,aAAa;AAChD,WAAK,OAAO,SAAU,IAAI,UAAU;AAClC,YAAI,OAAO,aAAa,kBAAkB,aAAa;AACvD,YAAI,SAAS;AAEb,YAAI,CAAC,MAAM;AACT;AAAA;AAGF,YAAI,cAAsB,eAAO;AAC/B,cAAI,KAAK,QAAQ,MAAM;AACrB,mBAAO,IAAI,GAAG;AACd,mBAAO,IAAI,GAAG;AACd,eAAG,IAAI,KAAK;AACZ,eAAG,IAAI,KAAK;AAAA;AAAA,eAET;AACL,cAAI,KAAK,UAAU;AACjB,mBAAO,QAAQ,OAAO,IAAI,GAAG;AAC7B,eAAG,SAAS,KAAK;AAAA;AAGnB,cAAI,KAAK,QAAQ;AACf,eAAG,SAAS,WAAW;AACvB,mBAAO,QAAQ;AAAA,cACb,SAAS;AAAA;AAAA,qBAIJ,GAAG,MAAM,YAAY,GAAG;AAC7B,mBAAO,QAAQ;AAAA,cACb,SAAS;AAAA;AAAA;AAAA;AAKjB,sBAAc,IAAI,IAAI,QAAQ,UAAU,GAAG;AAAA;AAAA,OAE5C;AACH,SAAK,SAAS;AACd,kBAAc,SAAS,KAAK,WAAY;AACtC,WAAK,SAAS;AACd,mBAAa;AAAA,OACZ,OAAO;AAAA;AAGZ,eAAY,UAAU,mBAAmB,SAAU,KAAK;AACtD,QAAI,aAAa,KAAK;AAEtB,QAAI,CAAC,YAAY;AACf,mBAAa,KAAK,cAAc,IAAI,uBAAe,IAAI;AACvD,iBAAW,OAAO,KAAK,YAAY,IAAI;AACvC,iBAAW,GAAG,OAAO,KAAK,KAAK,QAAQ;AACvC,iBAAW,GAAG,QAAQ,KAAK,KAAK,SAAS;AAAA;AAG3C,QAAI,OAAO,IAAI,qBAAa,GAAG,GAAG,IAAI,YAAY,IAAI;AACtD,eAAW,kBAAkB,SAAU,GAAG,GAAG,GAAG;AAC9C,aAAO,KAAK,QAAQ,GAAG;AAAA;AAAA;AAI3B,eAAY,UAAU,mBAAmB,WAAY;AACnD,QAAI,aAAa,KAAK;AAEtB,QAAI,YAAY;AACd,iBAAW;AACX,mBAAa;AAAA;AAAA;AAIjB,eAAY,UAAU,SAAS,SAAU,GAAG;AAC1C,QAAI,KAAK,WAAW,eAAgB,MAAK,IAAI,EAAE,MAAM,kBAAkB,KAAK,IAAI,EAAE,MAAM,iBAAiB;AAEvG,UAAI,OAAO,KAAK,YAAY,UAAU,KAAK;AAE3C,UAAI,CAAC,MAAM;AACT;AAAA;AAGF,UAAI,aAAa,KAAK;AAEtB,UAAI,CAAC,YAAY;AACf;AAAA;AAGF,WAAK,IAAI,eAAe;AAAA,QACtB,MAAM;AAAA,QACN,MAAM,KAAK;AAAA,QACX,UAAU,KAAK,YAAY;AAAA,QAC3B,UAAU;AAAA,UACR,GAAG,WAAW,IAAI,EAAE;AAAA,UACpB,GAAG,WAAW,IAAI,EAAE;AAAA,UACpB,OAAO,WAAW;AAAA,UAClB,QAAQ,WAAW;AAAA;AAAA;AAAA;AAAA;AAM3B,eAAY,UAAU,UAAU,SAAU,GAAG;AAC3C,QAAI,SAAS,EAAE;AACf,QAAI,SAAS,EAAE;AAEf,QAAI,KAAK,WAAW,aAAa;AAE/B,UAAI,OAAO,KAAK,YAAY,UAAU,KAAK;AAE3C,UAAI,CAAC,MAAM;AACT;AAAA;AAGF,UAAI,aAAa,KAAK;AAEtB,UAAI,CAAC,YAAY;AACf;AAAA;AAGF,UAAI,OAAO,IAAI,qBAAa,WAAW,GAAG,WAAW,GAAG,WAAW,OAAO,WAAW;AACrF,UAAI,aAAa,KAAK,YAAY;AAElC,gBAAU,WAAW;AACrB,gBAAU,WAAW;AAErB,UAAI,IAAI,AAAO;AACf,MAAO,UAAU,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC;AAClC,MAAO,MAAM,GAAG,GAAG,CAAC,EAAE,OAAO,EAAE;AAC/B,MAAO,UAAU,GAAG,GAAG,CAAC,QAAQ;AAChC,WAAK,eAAe;AACpB,WAAK,IAAI,eAAe;AAAA,QACtB,MAAM;AAAA,QACN,MAAM,KAAK;AAAA,QACX,UAAU,KAAK,YAAY;AAAA,QAC3B,UAAU;AAAA,UACR,GAAG,KAAK;AAAA,UACR,GAAG,KAAK;AAAA,UACR,OAAO,KAAK;AAAA,UACZ,QAAQ,KAAK;AAAA;AAAA;AAAA;AAAA;AAMrB,eAAY,UAAU,cAAc,SAAU,gBAAgB;AAC5D,QAAI,QAAQ;AAEZ,mBAAe,GAAG,SAAS,SAAU,GAAG;AACtC,UAAI,MAAM,WAAW,SAAS;AAC5B;AAAA;AAGF,UAAI,YAAY,MAAM,YAAY,IAAI,aAAa;AAEnD,UAAI,CAAC,WAAW;AACd;AAAA;AAGF,UAAI,aAAa,MAAM,WAAW,EAAE,SAAS,EAAE;AAE/C,UAAI,CAAC,YAAY;AACf;AAAA;AAGF,UAAI,OAAO,WAAW;AAEtB,UAAI,KAAK,YAAY,YAAY;AAC/B,cAAM,YAAY;AAAA,aACb;AACL,YAAI,cAAc,cAAc;AAC9B,gBAAM,YAAY;AAAA,mBACT,cAAc,QAAQ;AAC/B,cAAI,YAAY,KAAK,SAAS,KAAK,aAAa,KAAK;AACrD,cAAI,OAAO,UAAU,IAAI,QAAQ;AACjC,cAAI,aAAa,UAAU,IAAI,UAAU,SAAS;AAClD,kBAAQ,WAAW,MAAM;AAAA;AAAA;AAAA,OAG5B;AAAA;AAGL,eAAY,UAAU,oBAAoB,SAAU,aAAa,KAAK,YAAY;AAChF,QAAI,QAAQ;AAEZ,QAAI,CAAC,YAAY;AACf,mBAAa,YAAY,IAAI,aAAa,SAAS,OAAO;AAAA,QACxD,MAAM,YAAY;AAAA,UAIlB,KAAK,WAAW,IAAI,aAAa,GAAG,IAAI,cAAc;AAExD,UAAI,CAAC,YAAY;AACf,qBAAa;AAAA,UACX,MAAM,YAAY,UAAU,KAAK;AAAA;AAAA;AAAA;AAKvC,IAAC,MAAK,eAAgB,MAAK,cAAc,IAAI,mBAAW,KAAK,SAAS,OAAO,aAAa,KAAK,WAAW,MAAM,SAAU,MAAM;AAC9H,UAAI,MAAM,WAAW,aAAa;AAChC,QAAO,cAAc,YAAY,eAAe,QAAQ,MAAM,YAAY;AAAA,UACxE;AAAA,aACG,MAAM,YAAY;AAAA,UACrB;AAAA;AAAA;AAAA;AAAA;AAUR,eAAY,UAAU,SAAS,WAAY;AACzC,SAAK;AAEL,SAAK,mBAAmB,KAAK,gBAAgB;AAC7C,SAAK,WAAW;AAChB,SAAK,SAAS;AACd,SAAK,eAAe,KAAK,YAAY;AAAA;AAGvC,eAAY,UAAU,UAAU,WAAY;AAC1C,SAAK;AAAA;AAGP,eAAY,UAAU,cAAc,SAAU,YAAY;AACxD,SAAK,IAAI,eAAe;AAAA,MACtB,MAAM;AAAA,MACN,MAAM,KAAK;AAAA,MACX,UAAU,KAAK,YAAY;AAAA,MAC3B,YAAY,WAAW;AAAA;AAAA;AAI3B,eAAY,UAAU,cAAc,SAAU,YAAY;AACxD,SAAK,IAAI,eAAe;AAAA,MACtB,MAAM;AAAA,MACN,MAAM,KAAK;AAAA,MACX,UAAU,KAAK,YAAY;AAAA,MAC3B,YAAY,WAAW;AAAA;AAAA;AAc3B,eAAY,UAAU,aAAa,SAAU,GAAG,GAAG;AACjD,QAAI;AACJ,QAAI,WAAW,KAAK,YAAY;AAChC,aAAS,SAAS;AAAA,MAChB,MAAM;AAAA,MACN,OAAO;AAAA,OACN,SAAU,MAAM;AACjB,UAAI,OAAO,KAAK,SAAS,WAAW,KAAK;AAGzC,UAAI,MAAM;AACR,YAAI,QAAQ,KAAK,sBAAsB,GAAG;AAC1C,YAAI,QAAQ,KAAK;AAEjB,YAAI,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI,MAAM,SAAS,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI,MAAM,QAAQ;AACzH,uBAAa;AAAA,YACX;AAAA,YACA,SAAS,MAAM;AAAA,YACf,SAAS,MAAM;AAAA;AAAA,eAEZ;AACL,iBAAO;AAAA;AAAA;AAAA,OAGV;AACH,WAAO;AAAA;AAGT,eAAY,OAAO;AACnB,SAAO;AAAA,EACP;AAMF,yBAAyB;AACvB,SAAO;AAAA,IACL,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,SAAS;AAAA;AAAA;AASb,oBAAoB,aAAa,aAAa,YAAY,QAAQ,mBAAmB,kBAAkB,UAAU,SAAS,aAAa,OAAO;AAE5I,MAAI,CAAC,UAAU;AAIb;AAAA;AAKF,MAAI,aAAa,SAAS;AAC1B,MAAI,OAAO,YAAY;AACvB,MAAI,YAAY,SAAS;AAGzB,OAAK,iBAAiB,SAAS,WAAW;AAE1C,MAAI,CAAC,cAAc,CAAC,WAAW,UAAU;AACvC;AAAA;AAGF,MAAI,YAAY,WAAW;AAC3B,MAAI,aAAa,WAAW;AAC5B,MAAI,cAAc,WAAW;AAC7B,MAAI,gBAAgB,WAAW;AAC/B,MAAI,eAAe,SAAS;AAC5B,MAAI,cAAc,WAAW,QAAQ;AACrC,MAAI,mBAAmB,SAAS;AAChC,MAAI,cAAc,WAAW;AAC7B,MAAI,WAAW,oBAAoB,iBAAiB;AACpD,MAAI,uBAAuB,UAAU,SAAS;AAC9C,MAAI,yBAAyB,UAAU,SAAS,CAAC,YAAY;AAC7D,MAAI,qBAAqB,UAAU,SAAS,CAAC,QAAQ;AACrD,MAAI,uBAAuB,UAAU,SAAS,CAAC,UAAU;AACzD,MAAI,eAAe,qBAAqB,IAAI,mBAAmB;AAI/D,MAAI,QAAQ,YAAY,aAAa;AAErC,MAAI,CAAC,OAAO;AACV;AAAA;AAGF,cAAY,IAAI;AAEhB,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM,IAAI,WAAW,KAAK;AAC1B,QAAM;AACN,SAAM,OAAO,YAAY;AACzB,SAAM,OAAO,aAAa;AAE1B,MAAI,WAAW,iBAAiB;AAC9B,WAAO;AAAA;AAIT,MAAI,KAAK,YAAY,cAAc,MAAM,OAAO;AAChD,QAAM,iBAAiB,OAAO,IAAI,YAAY,WAAW;AACzD,MAAI,QAAQ,UAAU,IAAI,CAAC,YAAY;AACvC,MAAI,YAAY,UAAU,IAAI,CAAC,YAAY;AAC3C,MAAI,iBAAiB,UAAU,aAAa,SAAS,wBAAwB,UAAU,eAAe,SAAS,yBAAyB;AAExI,MAAI,UAAU;AAIZ,QAAI,qBAAqB,QAAQ;AAC/B,8BAAwB,OAAO;AAAA;AAGjC,QAAI,IAAI;AACN,8BAAwB,IAAI;AAE5B,WAAK,iBAAiB,SAAS,WAAW;AAC1C,uBAAiB,IAAI,gBAAgB;AAAA;AAAA,SAElC;AACL,QAAI,UAAU,YAAY,WAAW,MAAM,OAAO;AAClD,eAAW,cAAc,OAAO;AAChC,OAAG,kBAAkB;AAErB,QAAI,MAAM,qBAAqB,KAAK;AAClC,8BAAwB,IAAI;AAAA;AAG9B,4BAAwB,OAAO;AAE/B,SAAK,iBAAiB,SAAS,WAAW;AAC1C,qBAAiB,OAAO,gBAAgB;AAAA;AAG1C,SAAO;AAIP,4BAA0B,QAAO,KAAI,eAAe;AAClD,QAAI,SAAS,UAAU;AAEvB,WAAO,YAAY,SAAS;AAC5B,WAAO,cAAc,YAAY;AACjC,QAAG,SAAS;AAAA,MACV,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,GAAG;AAAA;AAGL,QAAI,eAAe;AAIjB,uBAAiB;AAAA,WACZ;AACL,UAAG,YAAY;AACf,UAAI,QAAQ,SAAS,UAAU;AAC/B,UAAI,oBAAoB,MAAM;AAC9B,UAAI,cAAc,mBAAmB;AACrC,kBAAY,OAAO;AACnB,UAAI,gBAAgB,kBAAkB;AACtC,oBAAc,OAAO,uBAAuB,IAAI;AAChD,UAAI,YAAY,kBAAkB;AAClC,gBAAU,OAAO,mBAAmB,IAAI;AACxC,UAAI,cAAc,kBAAkB;AACpC,kBAAY,OAAO,qBAAqB,IAAI;AAE5C,UAAI,eAAe;AACjB,YAAI,kBAAkB,YAAY,IAAI;AACtC,oBACA,KAAI,mBAAmB,MAAM,SAAS;AAAA,UACpC,GAAG;AAAA,UACH,GAAG;AAAA,UACH,OAAO;AAAA,UACP,QAAQ;AAAA;AAAA,aAGP;AACD,YAAG;AAAA;AAGP,UAAG,SAAS;AACZ,UAAG,YAAY,YAAY,QAAQ;AACnC,UAAG,YAAY,QAAQ,QAAQ;AAC/B,UAAG,YAAY,UAAU,QAAQ;AACjC,2BAAqB;AAAA;AAGvB,WAAM,IAAI;AAAA;AAGZ,yBAAuB,QAAO,UAAS;AACrC,QAAI,SAAS,UAAU;AAEvB,WAAO,YAAY,SAAS;AAC5B,WAAO,cAAc,YAAY;AACjC,QAAI,eAAe,KAAK,IAAI,YAAY,IAAI,aAAa;AACzD,QAAI,gBAAgB,KAAK,IAAI,aAAa,IAAI,aAAa;AAC3D,aAAQ,UAAU;AAClB,aAAQ,SAAS;AAAA,MACf,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,GAAG;AAAA;AAGL,QAAI,eAAe;AAIjB,uBAAiB;AAAA,WACZ;AACL,eAAQ,YAAY;AACpB,UAAI,YAAY,SAAS,UAAU;AACnC,UAAI,cAAc,UAAU;AAC5B,UAAI,cAAc,mBAAmB;AACrC,kBAAY,OAAO;AACnB,kBAAY,QAAQ,UAAU;AAC9B,UAAI,gBAAgB,kBAAkB;AACtC,UAAI,YAAY,kBAAkB;AAClC,UAAI,cAAc,kBAAkB;AAEpC,kBAAY,UAAS,aAAa,UAAU,SAAS;AACrD,eAAQ,SAAS;AACjB,eAAQ,YAAY,YAAY,QAAQ;AACxC,eAAQ,YAAY,QAAQ,QAAQ;AACpC,eAAQ,YAAY,UAAU,QAAQ;AACtC,2BAAqB;AAAA;AAGvB,WAAM,IAAI;AAAA;AAGZ,4BAA0B,SAAS;AAGjC,KAAC,QAAQ,aAAa,iBAAiB,KAAK;AAAA;AAG9C,uBAAqB,QAAQ,aAAa,eAC1C,gBAAgB;AACd,QAAI,mBAAmB,UAAU,SAAS,iBAAiB,yBAAyB;AACpF,QAAI,cAAc,oBAAoB,UAAU,IAAI,SAAS;AAC7D,QAAI,SAAS,iBAAiB,WAAW;AACzC,kBAAc,QAAQ,qBAAqB,WAAW,iBAAiB,yBAAyB,oBAAoB;AAAA,MAClH,aAAa,SAAS,cAAc;AAAA,MACpC,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,gBAAgB,SAAS;AAAA;AAE3B,QAAI,SAAS,OAAO;AAEpB,QAAI,CAAC,QAAQ;AACX;AAAA;AAGF,QAAI,YAAY,OAAO;AACvB,QAAI,cAAc,kBAAkB,UAAU,WAAW;AAEzD,QAAI,gBAAgB;AAClB,aAAO,cAAc;AAAA,QACnB,YAAY;AAAA;AAEd,aAAO,qBAAqB;AAAA;AAG9B,WAAO,eAAe,WAAY;AAChC,UAAI,QAAQ,KAAK,IAAK,kBAAiB,eAAe,QAAQ,OAAO,MAAM,SAAS,YAAY,KAAK,YAAY,IAAI;AACrH,UAAI,SAAS,KAAK,IAAK,kBAAiB,eAAe,SAAS,OAAO,MAAM,UAAU,YAAY,KAAK,YAAY,IAAI;AAExH,UAAI,UAAU,UAAU,SAAS,UAAU,WAAW,QAAQ;AAC5D,eAAO,SAAS;AAAA,UACd;AAAA,UACA;AAAA;AAAA;AAAA;AAKN,cAAU,kBAAkB;AAC5B,cAAU,eAAe;AACzB,qBAAiB,WAAW,gBAAgB;AAC5C,QAAI,oBAAoB,OAAO,SAAS;AACxC,qBAAiB,oBAAoB,kBAAkB,QAAQ,MAAM,gBAAgB;AAAA;AAGvF,4BAA0B,OAAO,gBAAgB,aAAY;AAC3D,QAAI,OAAO,QAAQ,MAAM,OAAO;AAEhC,QAAI,CAAC,kBAAkB,YAAW,cAAc,QAAQ,MAAM;AAC5D,UAAI,WAAW,YAAY,IAAI,iBAAiB;AAChD,YAAM,OAAO,WAAW,WAAW,MAAM,OAAO;AAAA;AAAA;AAIpD,uBAAqB,aAAa,MAAM,QAAO,GAAG;AAChD,QAAI,UAAU,eAAe,QAAQ,WAAW,aAAa;AAC7D,QAAI,QAAQ,kBAAkB;AAE9B,QAAI,SAAS;AAEX,iBAAW,aAAa,eAAe;AACvC,iCAA2B,OAAO;AAAA,eAE3B,CAAC,eAAe;AACrB,gBAAU,IAAI;AAEd,UAAI,mBAAmB,qBAAa;AAClC,gBAAQ,KAAK,YAAY,QAAO;AAAA;AAGlC,gCAA0B,OAAO;AAAA;AAIrC,WAAO,YAAY,aAAa,gBAAgB;AAAA;AAGlD,sCAAoC,OAAO,SAAS;AAClD,QAAI,UAAU,MAAM,gBAAgB;AAEpC,QAAI,mBAAmB,OAAO;AAC5B,cAAQ,OAAO,QAAQ;AACvB,cAAQ,OAAO,QAAQ;AAAA,WAClB;AACL,cAAQ,WAAW,OAAO,IAAI,QAAQ;AAAA;AAAA;AAM1C,qCAAmC,OAAO,SAAS;AACjD,QAAI,UAAU,MAAM,gBAAgB;AACpC,QAAI,aAAa,SAAS;AAC1B,QAAI,UAAU,mBAA2B;AAEzC,QAAI,cAAe,EAAC,UAAU,OAAO,cAAc,cAAc;AAC/D,UAAI,aAAa;AACjB,UAAI,aAAa;AAGjB,UAAI,cAAc,kBAAkB,WAAW,WAAW;AAE1D,UAAI,CAAC,UAAU,eAAe,YAAY,UAAU;AAClD,qBAAa,YAAY,SAAS;AAClC,qBAAa,YAAY,SAAS;AAAA;AAKpC,UAAI,SAAS;AACX,gBAAQ,OAAO;AACf,gBAAQ,OAAO;AAAA,aACV;AACL,gBAAQ,WAAW;AAAA,UACjB,GAAG;AAAA,UACH,GAAG;AAAA,UACH,OAAO;AAAA,UACP,QAAQ;AAAA;AAAA;AAAA;AAMd,YAAQ,SAAS,CAAC;AAAA;AAAA;AAUtB,qBAAqB,OAAO,WAAW;AACrC,SAAO,QAAQ,UAAU;AAAA;AAG3B,IAAO,sBAAQ;;;ACp5Bf,IAAI,QAAc;AAClB,IAAI,YAAkB;AACtB,IAAI,gCAAgC;AAEpC,IAAI,gBAEJ,WAAY;AACV,0BAAuB,QAAQ;AAC7B,QAAI,gBAAgB,OAAO;AAC3B,QAAI,aAAa,OAAO;AACxB,QAAI,aAAa,KAAK,SAAS,AAAO,MAAM;AAC5C,SAAK,OAAO;AACZ,SAAK,gBAAgB;AACrB,SAAK,iBAAiB,YAAY;AAClC,QAAI,gBAAgB,eAAc,eAAe;AACjD,SAAK,cAAc,cAAc;AACjC,SAAK,iBAAiB,cAAc;AACpC,SAAK,sBAAsB,cAAc,oBAAoB;AAE7D,QAAI,kBAAkB,aAAa;AACjC,2BAAqB;AACrB,6BAAuB;AAAA,eACd,kBAAkB,YAAY;AACvC,iBAAW,aAAa,+BAA+B,cAErD,qBAAqB,YAAY;AAAA,WAC9B;AAEL,MAAO,OAAO,kBAAkB,YAAY,WAAW;AACvD,2BAAqB;AAAA;AAAA;AAIzB,iBAAc,UAAU,mBAAmB,SAAU,OAAO;AAC1D,QAAI,aAAa,KAAK,eAAe;AAErC,WAAO,KAAK,oBAAoB,YAAY;AAAA;AAG9C,iBAAc,UAAU,gBAAgB,WAAY;AAClD,WAAO,AAAO,KAAK,KAAK,gBAAgB;AAAA;AAU1C,iBAAc,kBAAkB,WAAY;AAC1C,WAAO,AAAO,KAAK,eAAc;AAAA;AAanC,iBAAc,cAAc,SAAU,YAAY;AAChD,WAAO,eAAc,eAAe,eAAe;AAAA;AAQrD,iBAAc,aAAa,SAAU,QAAQ,UAAU,SAAS;AAC9D,QAAI,AAAO,SAAS,SAAS;AAC3B,MAAO,KAAK,QAAQ,UAAU;AAAA,WACzB;AACL,eAAS,KAAK,SAAS;AAAA;AAAA;AAI3B,iBAAc,YAAY,SAAU,QAAQ,UAAU,SAAS;AAC7D,QAAI;AACJ,QAAI,YAAY,AAAO,QAAQ,UAAU,KAAK,AAAO,SAAS,UAAU,KAAM,aAAY,MAAM;AAChG,mBAAc,WAAW,QAAQ,SAAU,GAAG,KAAK;AACjD,UAAI,SAAS,SAAS,KAAK,SAAS,GAAG;AACvC,kBAAY,YAAY,SAAS,UAAU,OAAO;AAAA;AAEpD,WAAO;AAAA;AAOT,iBAAc,kBAAkB,SAAU,KAAK;AAC7C,QAAI,MAAM;AACV,QAAI;AACJ,WAAO,MAAK,eAAc,gBAAgB,SAAU,GAAG,YAAY;AACjE,UAAI,IAAI,eAAe,aAAa;AAClC,YAAI,cAAc,IAAI;AACtB,oBAAY;AAAA;AAAA;AAGhB,WAAO,YAAY,MAAM;AAAA;AAY3B,iBAAc,qBAAqB,SAAU,aAAa;AACxD,QAAI,AAAO,QAAQ,cAAc;AAC/B,oBAAc,YAAY;AAAA,eACjB,UAAS,cAAc;AAChC,UAAI,UAAU;AACd,YAAK,aAAa,SAAU,MAAM,MAAM;AACtC,gBAAQ,KAAK;AAAA;AAEf,oBAAc;AAAA,WACT;AACL,aAAO;AAAA;AAGT,gBAAY,KAAK,SAAU,OAAO,OAAO;AAGvC,aAAO,UAAU,WAAW,UAAU,WAAW,MAAM,QAAQ,aAAa,IAAI,IAAI;AAAA;AAEtF,WAAO;AAAA;AAQT,iBAAc,YAAY,SAAU,aAAa,aAAa;AAC5D,WAAO,gBAAgB,UAAU,CAAC,CAAE,gBAAe,YAAY,QAAQ,iBAAiB,KAAK,gBAAgB;AAAA;AAW/G,iBAAc,iBAAiB,SAAU,OAAO,WAAW,wBAAwB;AACjF,QAAI;AACJ,QAAI,MAAM;AAEV,aAAS,IAAI,GAAG,OAAM,UAAU,QAAQ,IAAI,MAAK,KAAK;AACpD,UAAI,aAAa,UAAU,GAAG;AAE9B,UAAI,cAAc,MAAM;AACtB,YAAI,eAAe,SAKhB,OAAO,eAAe,YAAY,eAAe,QAAQ,IAAI;AAC9D,iBAAO;AAAA;AAGT,kCAA0B,eAAe,YAAY;AAAA;AAAA;AAIzD,aAAS,IAAI,GAAG,OAAM,UAAU,QAAQ,IAAI,MAAK,KAAK;AACpD,UAAI,QAAQ,UAAU;AACtB,UAAI,WAAW,MAAM;AACrB,UAAI,UAAU,MAAM;AAEpB,UAAI,UAAU;AACZ,YAAI,SAAS,OAAO,WAAW;AAC7B,cAAI,WAAW,QAAQ,IAAI,OAAO,SAAS,KAAK;AAC9C,mBAAO;AAAA;AAAA,mBAEA,SAAS,OAAO,UAAU;AACnC,cAAI,WAAW,QAAQ,IAAI,SAAS,IAAI,QAAQ;AAC9C,mBAAO;AAAA;AAAA,mBAEA,WAAW,QAAQ,IAAI,SAAS,IAAI,UAAU,WAAW,QAAQ,IAAI,OAAO,SAAS,KAAK;AACnG,iBAAO;AAAA;AAGT,kCAA0B,eAAe,SAAS,IAAI;AACtD,kCAA0B,eAAe,SAAS,IAAI;AAAA;AAAA;AAI1D,QAAI,wBAAwB;AAC1B,aAAO,UAAU,WAAW,UAAU,SAAS,IAAI,UAAU,YAAY,IAAI;AAAA;AAG/E,4BAAwB,KAAK,OAAO;AAClC,UAAI,SAAS,KAAK,IAAI,MAAM;AAE5B,UAAI,SAAS,KAAK;AAChB,cAAM;AACN,oBAAY;AAAA;AAAA;AAAA;AAKlB,iBAAc,iBAAiB;AAAA,IAC7B,OAAO;AAAA,MACL,aAAa,gBAAgB;AAAA,MAC7B,gBAAgB,WAAY;AAC1B,YAAI,aAAa,KAAK;AACtB,eAAO,AAAO,KAAK,WAAW,kBAAkB,aAAa,SAAU,OAAO,cAAc;AAC1F,WAAC,gBAAiB,SAAQ,KAAK,eAAe;AAC9C,iBAAO,cAAc,KAAK,MAAM;AAAA,YAC9B,SAAU,OAAO,cAAc,KAAK;AAGtC,cAAI,iBAAiB,CAAC,CAAC;AACvB,WAAC,gBAAiB,SAAQ,KAAK,eAAe;AAC9C,gBAAM,AAAQ,SAAS,OAAO,WAAW,cAAc;AACvD,iBAAO,iBAAiB,MAAM,AAAQ,UAAU,KAAK;AAAA,WACpD;AAAA;AAAA,MAEL,qBAAqB;AAAA,QACnB,QAAQ,SAAU,YAAY;AAC5B,iBAAO,AAAQ,UAAU,AAAQ,SAAS,YAAY,KAAK,OAAO,eAAe;AAAA;AAAA,QAEnF,UAAU;AAAA,QACV,WAAW,SAAU,YAAY,OAAO;AACtC,cAAI,SAAS,mBAAmB,KAAK,MAAM;AAE3C,cAAI,UAAU,MAAM;AAClB,qBAAS,AAAQ,UAAU,AAAQ,SAAS,YAAY,KAAK,OAAO,eAAe;AAAA;AAGrF,iBAAO;AAAA;AAAA,QAET,OAAO;AAAA;AAAA;AAAA,IAGX,UAAU,8BAA8B,SAAU,OAAO,OAAO;AAC9D,aAAO,AAAQ,UAAU,OAAO;AAAA;AAAA,IAElC,iBAAiB,8BAA8B,SAAU,OAAO,OAAO;AACrE,aAAO,AAAQ,UAAU,OAAO,MAAM;AAAA;AAAA,IAExC,gBAAgB,8BAA8B,SAAU,OAAO,OAAO;AACpE,aAAO,AAAQ,UAAU,OAAO,MAAM,MAAM;AAAA;AAAA,IAE9C,YAAY,8BAA8B,SAAU,OAAO,OAAO;AAChE,aAAO,AAAQ,YAAY,OAAO;AAAA;AAAA,IAEpC,OAAO;AAAA,MACL,aAAa,gBAAgB;AAAA,MAC7B,qBAAqB;AAAA,QACnB,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,WAAW;AAAA,QACX,OAAO;AAAA;AAAA;AAAA,IAGX,SAAS;AAAA,MACP,aAAa,gBAAgB;AAAA,MAC7B,qBAAqB,gCAAgC,CAAC,GAAG;AAAA;AAAA,IAE3D,OAAO;AAAA,MACL,aAAa,gBAAgB;AAAA,MAC7B,qBAAqB;AAAA,QACnB,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,WAAW;AAAA,QACX,OAAO;AAAA;AAAA;AAAA,IAGX,QAAQ;AAAA,MACN,aAAa,SAAU,OAAO,QAAQ,QAAQ;AAC5C,YAAI,YAAY,KAAK,iBAAiB;AACtC,eAAO,UAAU;AAAA;AAAA,MAEnB,qBAAqB;AAAA,QACnB,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,WAAW,SAAU,YAAY,OAAO;AACtC,cAAI,SAAS,mBAAmB,KAAK,MAAM;AAE3C,cAAI,UAAU,MAAM;AAClB,qBAAS,aAAa,KAAK,MAAM;AAAA;AAGnC,iBAAO;AAAA;AAAA,QAET,OAAO;AAAA;AAAA;AAAA,IAGX,YAAY;AAAA,MACV,aAAa,gBAAgB;AAAA,MAC7B,qBAAqB,gCAAgC,CAAC,GAAG;AAAA;AAAA;AAG7D,SAAO;AAAA;AAGT,gCAAgC,YAAY;AAC1C,MAAI,YAAY,WAAW;AAC3B,aAAW,mBAAmB;AAC9B,EAAO,KAAK,WAAW,SAAU,OAAO,OAAO;AAC7C,UAAM,cAAc;AAGpB,QAAI,MAAM,UAAU,MAAM;AACxB,iBAAW,mBAAmB;AAAA;AAAA;AAAA;AAKpC,wCAAwC,YAAY;AAElD,MAAI,aAAa,WAAW;AAC5B,MAAI,cAAc,WAAW,cAAc;AAC3C,MAAI,SAAS,WAAW;AACxB,QAAK,YAAY,SAAU,MAAM,OAAO;AACtC,gBAAY,QAAQ;AAAA;AAGtB,MAAI,CAAC,AAAO,QAAQ,SAAS;AAC3B,QAAI,cAAc;AAElB,QAAI,AAAO,SAAS,SAAS;AAC3B,YAAK,QAAQ,SAAU,GAAG,MAAM;AAC9B,YAAI,QAAQ,YAAY;AACxB,oBAAY,SAAS,OAAO,QAAQ,iCAAiC;AAAA;AAAA,WAElE;AAEL,kBAAY,iCAAiC;AAAA;AAG/C,aAAS,kBAAkB,YAAY;AAAA;AAKzC,WAAS,IAAI,WAAW,SAAS,GAAG,KAAK,GAAG,KAAK;AAC/C,QAAI,OAAO,MAAM,MAAM;AACrB,aAAO,YAAY,WAAW;AAC9B,iBAAW;AAAA;AAAA;AAAA;AAKjB,8BAA8B,YAAY,YAAY;AACpD,MAAI,SAAS,WAAW;AACxB,MAAI,YAAY;AAEhB,MAAI,AAAO,SAAS,SAAS;AAC3B,UAAK,QAAQ,SAAU,GAAG;AACxB,gBAAU,KAAK;AAAA;AAAA,aAER,UAAU,MAAM;AACzB,cAAU,KAAK;AAAA;AAGjB,MAAI,gBAAgB;AAAA,IAClB,OAAO;AAAA,IACP,QAAQ;AAAA;AAGV,MAAI,CAAC,cAAc,UAAU,WAAW,KAAK,CAAC,cAAc,eAAe,WAAW,OAAO;AAE3F,cAAU,KAAK,UAAU;AAAA;AAG3B,oBAAkB,YAAY;AAAA;AAGhC,uCAAuC,YAAY;AACjD,SAAO;AAAA,IACL,aAAa,SAAU,OAAO,QAAQ,QAAQ;AAE5C,UAAI,eAAe,KAAK,iBAAiB;AAEzC,aAAO,SAAS,WAAW,OAAO,UAAU;AAAA;AAAA,IAE9C,qBAAqB,gCAAgC,CAAC,GAAG;AAAA;AAAA;AAI7D,sBAAsB,YAAY;AAChC,MAAI,SAAS,KAAK,OAAO;AACzB,SAAO,OAAO,KAAK,MAAM,UAAU,YAAY,CAAC,GAAG,IAAI,CAAC,GAAG,OAAO,SAAS,IAAI,WAAW;AAAA;AAG5F,yBAAyB,YAAY;AACnC,SAAO,SAAU,OAAO,QAAQ,QAAQ;AACtC,WAAO,YAAY,KAAK,iBAAiB;AAAA;AAAA;AAI7C,uBAAuB,YAAY;AACjC,MAAI,SAAS,KAAK,OAAO;AACzB,SAAO,OAAO,KAAK,OAAO,QAAQ,eAAe,gCAAgC,aAAa,OAAO,SAAS;AAAA;AAGhH,sBAAsB;AAEpB,SAAO,KAAK,OAAO,OAAO;AAAA;AAO5B,yCAAyC,cAAc;AACrD,SAAO;AAAA,IACL,QAAQ,SAAU,YAAY;AAC5B,aAAO,UAAU,YAAY,cAAc,KAAK,OAAO,QAAQ;AAAA;AAAA,IAEjE,UAAU;AAAA,IACV,WAAW,SAAU,YAAY,OAAO;AACtC,UAAI,SAAS,mBAAmB,KAAK,MAAM;AAE3C,UAAI,UAAU,MAAM;AAClB,iBAAS,UAAU,YAAY,cAAc,KAAK,OAAO,QAAQ;AAAA;AAGnE,aAAO;AAAA;AAAA,IAET,OAAO;AAAA;AAAA;AAIX,4BAA4B,OAAO;AACjC,MAAI,aAAa,KAAK;AACtB,MAAI,YAAY,WAAW;AAE3B,MAAI,WAAW,kBAAkB;AAC/B,QAAI,aAAa,cAAc,eAAe,OAAO;AACrD,QAAI,QAAQ,UAAU;AAEtB,QAAI,SAAS,MAAM,QAAQ;AACzB,aAAO,MAAM,OAAO,KAAK;AAAA;AAAA;AAAA;AAK/B,2BAA2B,YAAY,WAAW;AAChD,aAAW,SAAS;AAEpB,MAAI,WAAW,SAAS,SAAS;AAC/B,eAAW,eAAe,AAAO,IAAI,WAAW,SAAU,MAAM;AAC9D,aAAO,AAAQ,MAAM;AAAA;AAAA;AAIzB,SAAO;AAAA;AAOT,IAAI,cAAc;AAAA,EAChB,QAAQ,SAAU,OAAO;AACvB,WAAO,UAAU,OAAO,KAAK,OAAO,YAAY,CAAC,GAAG,IAAI;AAAA;AAAA,EAE1D,WAAW,SAAU,OAAO;AAC1B,QAAI,YAAY,KAAK,OAAO;AAC5B,QAAI,aAAa,cAAc,eAAe,OAAO,WAAW;AAEhE,QAAI,cAAc,MAAM;AACtB,aAAO,UAAU,YAAY,CAAC,GAAG,UAAU,SAAS,IAAI,CAAC,GAAG,IAAI;AAAA;AAAA;AAAA,EAGpE,UAAU,SAAU,OAAO;AACzB,QAAI,QAAQ,KAAK,OAAO,aAAa,KAAK,OAAO,YAAY,SAAS;AAEtE,WAAO,SAAS,OAAO,gCAAgC;AAAA;AAAA,EAEzD,OAAc;AAAA;AAGhB,oBAAoB,OAAO,GAAG,GAAG;AAC/B,SAAO,QAAQ,KAAK,IAAI,IAAI;AAAA;AAG9B,IAAO,wBAAQ;;;AC1ef,IAAI,oBAAoB;AACxB,IAAI,SAAQ;AACZ,IAAO,wBAAQ;AAAA,EACb,YAAY;AAAA,EACZ,OAAO,SAAU,aAAa;AAC5B,QAAI,OAAO,YAAY,UAAU;AACjC,QAAI,OAAO,KAAK;AAEhB,QAAI,KAAK,aAAa;AACpB;AAAA;AAGF,eAAW,MACX,IAAI,YAAY,cAAc,gBAAgB;AAAA;AAAA;AAIlD,oBAAoB,MAAM,kBAAkB,mBAAmB,aAAa;AAC1E,MAAI,YAAY,KAAK;AACrB,MAAI,aAAa,KAAK;AACtB,MAAI,OAAO,KAAK,SAAS;AAEzB,MAAI,CAAC,cAAc,WAAW,aAAa,CAAC,WAAW,UAAU;AAC/D;AAAA;AAGF,MAAI,qBAAqB,UAAU,SAAS;AAC5C,MAAI,UAAU,aAAa,oBAAoB,kBAAkB;AACjE,MAAI,cAAc,KAAK,uBAAuB,KAAK,WAAW;AAE9D,MAAI,cAAc,mBAAmB,IAAI;AACzC,MAAI,wBAAwB,mBAAmB,IAAI;AACnD,MAAI;AAEJ,MAAI,yBAAyB,MAAM;AAEjC,oBAAgB,eAAe;AAC/B,kBAAc,qBAAqB,uBAAuB;AAAA;AAG5D,cAAY,SAAS;AACrB,MAAI,eAAe,KAAK;AAExB,MAAI,CAAC,gBAAgB,CAAC,aAAa,QAAQ;AACzC,oBAAgB,eAAe;AAE/B,gBAAY,OAAO;AAAA,SACd;AACL,QAAI,YAAY,mBAAmB,MAAM,WAAW,YAAY,oBAAoB,SAAS;AAE7F,SAAK,cAAc,SAAU,OAAO,OAAO;AAEzC,UAAI,MAAM,SAAS,kBAAkB,UAAU,UAAU,kBAAkB,MAAM,QAAQ;AACvF,YAAI,cAAc,UAAU,WAAW,SAAS,OAAO,OAAO,WAAW;AACzE,mBAAW,OAAO,aAAa,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAM1D,sBAAsB,oBAAoB,kBAAkB,aAAa;AACvE,MAAI,UAAU,OAAO,IAAI;AACzB,MAAI,4BAA4B,YAAY;AAC5C,OAAK,CAAC,SAAS,cAAc,oBAAoB,SAAU,YAAY;AAErE,8BAA0B,cAAc,iBAAiB;AACzD,QAAI,MAAM,mBAAmB,IAAI;AACjC,8BAA0B,cAAc;AACxC,WAAO,QAAS,SAAQ,cAAc;AAAA;AAExC,SAAO;AAAA;AAGT,wBAAwB,SAAS;AAC/B,MAAI,QAAQ,qBAAqB,SAAS;AAE1C,MAAI,OAAO;AACT,QAAI,aAAa,qBAAqB,SAAS;AAC/C,QAAI,kBAAkB,qBAAqB,SAAS;AAEpD,QAAI,iBAAiB;AACnB,cAAQ,UAAU,OAAO,MAAM,MAAM;AAAA;AAGvC,QAAI,YAAY;AACd,cAAQ,YAAY,OAAO;AAAA;AAG7B,WAAO;AAAA;AAAA;AAIX,8BAA8B,uBAAuB,eAAe;AAClE,SAAO,iBAAiB,OACtB,UAAU,eAAe,MAAM,MAAM,yBAAyB;AAAA;AAGlE,8BAA8B,SAAS,MAAM;AAC3C,MAAI,QAAQ,QAAQ;AAEpB,MAAI,SAAS,QAAQ,UAAU,QAAQ;AACrC,WAAO;AAAA;AAAA;AAIX,4BAA4B,MAAM,WAAW,YAAY,oBAAoB,SAAS,cAAc;AAClG,MAAI,CAAC,gBAAgB,CAAC,aAAa,QAAQ;AACzC;AAAA;AAGF,MAAI,cAAc,eAAe,WAAW,YAAY,QAAQ,SAAS,QAAQ,QAAQ,UAAU,UAAW,gBAAe,WAAW,iBAAiB,eAAe,WAAW;AAEnL,MAAI,CAAC,aAAa;AAChB;AAAA;AAGF,MAAI,YAAY,UAAU,IAAI;AAC9B,MAAI,YAAY,UAAU,IAAI;AAC9B,MAAI,aAAa,WAAW,WAAW;AACvC,eAAa,QAAQ,YAAY,WAAW,MAAO,YAAW,KAAK;AACnE,eAAa,QAAQ,YAAY,WAAW,MAAO,YAAW,KAAK;AACnE,MAAI,iBAAiB,UAAU,IAAI;AACnC,MAAI,MAAM;AAAA,IACR,MAAM,YAAY;AAAA,IAClB;AAAA,IACA,QAAQ,YAAY;AAAA;AAGtB,MAAI,IAAI,SAAS,WAAY,oBAAmB,WAAW,mBAAmB,OAAO;AACnF,QAAI,gBAAgB;AACpB,QAAI,OAAO;AAAA,SACN;AACL,QAAI,gBAAgB;AAAA;AAGtB,MAAI,UAAU,IAAI,sBAAc;AAChC,SAAM,SAAS,mBAAmB;AAClC,SAAO;AAAA;AAUT,wBAAwB,WAAW,MAAM;AAGvC,MAAI,QAAQ,UAAU,IAAI;AAC1B,SAAO,QAAQ,UAAU,MAAM,SAAS;AAAA,IACtC;AAAA,IACA;AAAA,MACE;AAAA;AAGN,mBAAmB,WAAW,SAAS,OAAO,OAAO,SAAS,aAAa;AACzE,MAAI,eAAe,OAAO,IAAI;AAE9B,MAAI,SAAS;AAEX,QAAI,cAAc,QAAQ;AAC1B,QAAI,iBAAiB,gBAAgB,WAAW,OAAM,SAAS;AAC/D,QAAI,QAAQ,mBAAmB,UAAU,QAAQ,mBAAmB,OAAO,YAAY,aAAa,MAAM,WAAW,MAAM,SAAS,UAAU,IAAI;AAClJ,iBAAa,eAAe,QAAQ,iBAAiB;AAAA;AAGvD,SAAO;AAAA;;;AC7JT,IAAI,WAAU,KAAK;AACnB,IAAI,WAAU,KAAK;AACnB,IAAI,gBAAuB;AAC3B,IAAI,QAAc;AAClB,IAAI,oBAAoB,CAAC,aAAa;AACtC,IAAI,iBAAiB,CAAC,aAAa;AACnC,IAAI,wBAAwB,CAAC,cAAc;AAC3C,IAAI,0BAA0B,CAAC,cAAc;AAM7C,IAAO,wBAAQ;AAAA,EACb,YAAY;AAAA,EACZ,OAAO,SAAU,aAAa,SAAS,KAAK,SAAS;AAGnD,QAAI,UAAU,IAAI;AAClB,QAAI,WAAW,IAAI;AACnB,QAAI,eAAe,YAAY;AAC/B,QAAI,aAAa,AAAO,cAAc,YAAY,sBAAsB;AAAA,MACtE,OAAO,IAAI;AAAA,MACX,QAAQ,IAAI;AAAA;AAEd,QAAI,OAAO,aAAa,QAAQ;AAEhC,QAAI,iBAAiB,cAAa,cAAc,WAAW,OAAO,KAAK,KAAK;AAC5E,QAAI,kBAAkB,cAAa,cAAc,WAAW,QAAQ,KAAK,KAAK;AAE9E,QAAI,cAAc,WAAW,QAAQ;AACrC,QAAI,QAAQ,CAAC,qBAAqB;AAClC,QAAI,aAAa,AAAO,mBAAmB,SAAS,OAAO;AAC3D,QAAI,WAAW,gBAAgB,mBAAmB,gBAAgB,gBAAgB,QAAQ,WAAW;AACrG,QAAI,WAAW,YAAY;AAC3B,QAAI,gBAAgB,AAAO,cAAc;AAEzC,QAAI,gBAAgB,eAAe;AACjC,UAAI,WAAW,gBAAgB,sBAAsB,iBAAiB,aAAa,YAAY,UAAU,gBAAgB,mBAAmB,WAAW,CAAC,SAAS,OAAO,SAAS,UAAU,CAAC,gBAAgB;AAC5M,UAAI,SAAS,aAAa;AAE1B,UAAI,UAAU,WAAW,SAAS,WAAW,QAAQ;AAEnD,iBAAS;AAAA;AAGX,UAAI,UAAU;AAAA,QACZ,aAAa,aAAa;AAAA,QAC1B,MAAM;AAAA,QACN,WAAW,aAAa;AAAA;AAG1B,eAAS,SAAS;AAKlB,UAAI,mBAAmB;AAAA,QACrB,GAAG;AAAA,QACH,GAAG;AAAA,QACH,OAAO,SAAS;AAAA,QAChB,QAAQ,SAAS;AAAA,QACjB,MAAM,SAAS,KAAK,SAAS;AAAA;AAE/B,eAAS,UAAU;AACnB,eAAS,UAAU,SAAS,OAAO;AAEnC,yBAAmB,SAAS;AAC5B,YAAK,eAAe,SAAU,MAAM,OAAO;AACzC,YAAI,aAAc,eAAc,QAAQ,MAAM,UAAU;AACxD,aAAK,UAAU,AAAO,OAAO;AAAA,UAC3B,YAAY,CAAC,YAAY;AAAA,UACzB,aAAa;AAAA,UACb,aAAa;AAAA,WACZ;AAAA;AAAA;AAIP,QAAI,WAAW,YAAY,UAAU,KAAK;AAC1C,aAAS,UAAU,sBAAsB,YAAY,UAAU,aAAa;AAC5E,gBAAY,cAAc;AAG1B,aAAS,UACT,IAAI,qBAAa,CAAC,WAAW,GAAG,CAAC,WAAW,GAAG,SAAS,WAAW,eAAe,UAAU;AAAA;AAAA;AAsBhG,kBAAkB,MAAM,SAAS,cAAc,OAAO;AACpD,MAAI;AACJ,MAAI;AAEJ,MAAI,KAAK,aAAa;AACpB;AAAA;AAGF,MAAI,aAAa,KAAK;AACtB,UAAQ,WAAW;AACnB,WAAS,WAAW;AAEpB,MAAI,YAAY,KAAK;AACrB,MAAI,cAAc,UAAU,IAAI;AAChC,MAAI,eAAe,UAAU,IAAI,kBAAkB;AACnD,MAAI,mBAAmB,oBAAoB;AAC3C,MAAI,cAAc,KAAK,IAAI,aAAa;AACxC,MAAI,eAAe,cAAc;AACjC,MAAI,oBAAoB,cAAc;AACtC,OAAK,UAAU;AAAA,IACb;AAAA,IACA;AAAA,IACA;AAAA,KACC;AACH,UAAQ,SAAQ,QAAQ,IAAI,cAAc;AAC1C,WAAS,SAAQ,SAAS,eAAe,mBAAmB;AAC5D,MAAI,YAAY,QAAQ;AACxB,MAAI,eAAe,aAAa,MAAM,WAAW,WAAW,SAAS,cAAc;AAEnF,MAAI,CAAC,aAAa,QAAQ;AACxB;AAAA;AAGF,MAAI,OAAO;AAAA,IACT,GAAG;AAAA,IACH,GAAG;AAAA,IACH;AAAA,IACA;AAAA;AAEF,MAAI,iBAAiB,SAAQ,OAAO;AACpC,MAAI,OAAO;AAEX,MAAI,MAAM;AACV,MAAI,OAAO;AAEX,WAAS,IAAI,GAAG,OAAM,aAAa,QAAQ,IAAI,QAAM;AACnD,QAAI,QAAQ,aAAa;AACzB,QAAI,KAAK;AACT,QAAI,QAAQ,MAAM,YAAY;AAC9B,QAAI,QAAQ,MAAM,KAAK,gBAAgB,QAAQ;AAE/C,QAAI,SAAS,MAAM;AACjB;AACA,aAAO;AAAA,WAEJ;AACD,UAAI,QAAQ,IAAI,MAAM,YAAY;AAClC,eAAS,KAAK,gBAAgB,MAAM,cAAc;AAClD,uBAAiB,SAAQ,KAAK,OAAO,KAAK;AAC1C,UAAI,SAAS,IAAI,OAAO;AACxB,aAAO;AAAA;AAAA;AAIb,MAAI,IAAI,QAAQ;AACd,aAAS,KAAK,gBAAgB,MAAM,cAAc;AAAA;AAGpD,MAAI,CAAC,cAAc;AACjB,QAAI,qBAAqB,UAAU,IAAI;AAEvC,QAAI,sBAAsB,QAAQ,YAAY,oBAAoB;AAChE,qBAAe;AAAA;AAAA;AAInB,WAAS,IAAI,GAAG,OAAM,aAAa,QAAQ,IAAI,MAAK,KAAK;AACvD,aAAS,aAAa,IAAI,SAAS,cAAc,QAAQ;AAAA;AAAA;AAQ7D,sBAAsB,MAAM,WAAW,WAAW,SAAS,cAAc,OAAO;AAC9E,MAAI,eAAe,KAAK,YAAY;AACpC,MAAI,UAAU,QAAQ;AACtB,cAAY,SAAS,YAAY,UAAW,WAAU;AACtD,MAAI,gBAAgB,QAAQ,aAAa,QAAQ,QAAQ,aAAa;AAEtE,MAAI,gBAAgB,CAAC,eAAe;AAClC,WAAO,KAAK,eAAe;AAAA;AAI7B,iBAAe,AAAO,OAAO,cAAc,SAAU,OAAO;AAC1D,WAAO,CAAC,MAAM;AAAA;AAEhB,OAAK,cAAc;AACnB,MAAI,OAAO,UAAU,WAAW,cAAc;AAE9C,MAAI,KAAK,QAAQ,GAAG;AAClB,WAAO,KAAK,eAAe;AAAA;AAG7B,OAAK,MAAM,kBAAkB,WAAW,WAAW,KAAK,KAAK,SAAS;AAEtE,MAAI,KAAK,QAAQ,GAAG;AAClB,WAAO,KAAK,eAAe;AAAA;AAI7B,WAAS,IAAI,GAAG,OAAM,aAAa,QAAQ,IAAI,MAAK,KAAK;AACvD,QAAI,OAAO,aAAa,GAAG,aAAa,KAAK,MAAM;AAEnD,iBAAa,GAAG,UAAU;AAAA,MACxB;AAAA;AAAA;AAIJ,MAAI,eAAe;AACjB,iBAAa,UAAU,KAAK,UAAU;AAAA,MACpC,YAAY;AAAA,OACX;AACH,iBAAa,SAAS;AAAA;AAGxB,OAAK,eAAe;AACpB,OAAK,UAAU;AAAA,IACb,YAAY,KAAK;AAAA,KAChB;AACH,SAAO;AAAA;AAOT,2BAA2B,WAAW,WAAW,MAAK,SAAS,iBAAiB;AAE9E,MAAI,CAAC,SAAS;AACZ,WAAO;AAAA;AAGT,MAAI,aAAa,UAAU,IAAI;AAC/B,MAAI,OAAM,gBAAgB;AAC1B,MAAI,cAAc;AAElB,WAAS,IAAI,OAAM,GAAG,KAAK,GAAG,KAAK;AACjC,QAAI,QAAQ,gBAAgB,YAAY,QAAQ,OAAM,IAAI,IAAI,GAAG;AAEjE,QAAI,QAAQ,OAAM,YAAY,YAAY;AACxC,oBAAc;AACd,cAAO;AAAA;AAAA;AAIX,cAAY,QAAQ,gBAAgB,OAAO,GAAG,OAAM,eAAe,gBAAgB,OAAO,aAAa,OAAM;AAC7G,SAAO;AAAA;AAOT,cAAc,cAAc,SAAS;AACnC,MAAI,SAAS;AACX,iBAAa,KAAK,SAAU,GAAG,GAAG;AAChC,UAAI,QAAO,YAAY,QAAQ,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa,EAAE;AAC9E,aAAO,UAAS,IAAI,YAAY,QAAQ,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY;AAAA;AAAA;AAIpG,SAAO;AAAA;AAOT,mBAAmB,WAAW,UAAU,SAAS;AAE/C,MAAI,OAAM;AAEV,WAAS,IAAI,GAAG,OAAM,SAAS,QAAQ,IAAI,MAAK,KAAK;AACnD,YAAO,SAAS,GAAG;AAAA;AAOrB,MAAI,YAAY,UAAU,IAAI;AAC9B,MAAI;AAEJ,MAAI,CAAC,YAAY,CAAC,SAAS,QAAQ;AACjC,iBAAa,CAAC,KAAK;AAAA,aACV,cAAc,WAAW,SAAS;AAC3C,iBAAa,CAAC,SAAS,SAAS,SAAS,GAAG,YAAY,SAAS,GAAG;AACpE,gBAAY,SAAS,WAAW;AAAA,SAE7B;AACD,iBAAa,CAAC,UAAU;AACxB,UAAK,UAAU,SAAU,OAAO;AAC9B,UAAI,QAAQ,MAAM,SAAS;AAC3B,cAAQ,WAAW,MAAO,YAAW,KAAK;AAC1C,cAAQ,WAAW,MAAO,YAAW,KAAK;AAAA;AAAA;AAIhD,SAAO;AAAA,IACL,KAAK;AAAA,IACL;AAAA;AAAA;AASJ,eAAe,KAAK,gBAAgB,OAAO;AACzC,MAAI,UAAU;AACd,MAAI,UAAU;AAEd,WAAS,IAAI,GAAG,OAAO,QAAQ,OAAM,IAAI,QAAQ,IAAI,MAAK,KAAK;AAC7D,WAAO,IAAI,GAAG,YAAY;AAE1B,QAAI,MAAM;AACR,aAAO,WAAY,WAAU;AAC7B,aAAO,WAAY,WAAU;AAAA;AAAA;AAIjC,MAAI,aAAa,IAAI,OAAO,IAAI;AAChC,MAAI,IAAI,iBAAiB,iBAAiB;AAC1C,SAAO,aAAa,SAAQ,IAAI,UAAU,YAAY,aAAc,KAAI,YAAY;AAAA;AAOtF,kBAAkB,KAAK,gBAAgB,MAAM,cAAc,OAAO;AAShE,MAAI,YAAY,mBAAmB,KAAK,QAAQ,IAAI;AACpD,MAAI,YAAY,IAAI;AACpB,MAAI,KAAK,CAAC,KAAK;AACf,MAAI,KAAK,CAAC,SAAS;AACnB,MAAI,OAAO,KAAK,GAAG;AACnB,MAAI,iBAAiB,iBAAiB,IAAI,OAAO,iBAAiB;AAElE,MAAI,SAAS,iBAAiB,KAAK,GAAG,aAAa;AACjD,qBAAiB,KAAK,GAAG;AAAA;AAG3B,WAAS,IAAI,GAAG,SAAS,IAAI,QAAQ,IAAI,QAAQ,KAAK;AACpD,QAAI,OAAO,IAAI;AACf,QAAI,aAAa;AACjB,QAAI,OAAO,iBAAiB,KAAK,YAAY,OAAO,iBAAiB;AACrE,QAAI,MAAM,WAAW,GAAG,cAAc,SAAQ,iBAAiB,IAAI,cAAc;AAEjF,QAAI,SAAS,KAAK,GAAG,cAAc,KAAK,GAAG,cAAc;AACzD,QAAI,QAAQ,MAAM,SAAS,KAAK,SAAS,OAAO,SAAS;AACzD,QAAI,MAAM,WAAW,GAAG,cAAc,SAAQ,QAAQ,IAAI,cAAc;AACxE,eAAW,GAAG,cAAc,KAAK,GAAG,cAAc,SAAQ,cAAc,MAAM;AAC9E,eAAW,GAAG,cAAc,OAAO,SAAQ,cAAc,MAAM;AAC/D,YAAQ;AACR,SAAK,UAAU,YAAY;AAAA;AAG7B,OAAK,GAAG,eAAe;AACvB,OAAK,GAAG,eAAe;AAAA;AAIzB,0BAA0B,aAAa,YAAY,UAAU,gBAAgB,iBAAiB;AAG5F,MAAI,WAAY,eAAc,IAAI;AAClC,MAAI,cAAc,CAAC,gBAAgB;AAEnC,MAAI,CAAC,YAAY,aAAa,UAAU;AACtC,WAAO;AAAA;AAGT,MAAI;AACJ,MAAI,WAAW,iBAAiB;AAChC,MAAI,OAAO,WAAW,YAAY,OAAO;AAEzC,SAAO,SAAS,SAAS,YAAY;AAEnC,QAAI,OAAM;AACV,QAAI,WAAW,OAAO;AAEtB,aAAS,IAAI,GAAG,OAAM,SAAS,QAAQ,IAAI,MAAK,KAAK;AACnD,cAAO,SAAS,GAAG;AAAA;AAGrB,QAAI,gBAAgB,SAAS;AAE7B,QAAI,kBAAkB,GAAG;AACvB,aAAO;AAAA;AAGT,YAAQ,OAAM;AAEd,QAAI,cAAc,OAAO;AACzB,QAAI,cAAc,YAAY,IAAI;AAClC,QAAI,cAAc,KAAK,IAAI,aAAa,oBAAoB;AAC5D,YAAQ,IAAI,cAAc,cAAe,KAAI,cAAc,eAAe,KAAK,IAAI,MAAM;AACzF,WAAO,oBAAqB,QAAO;AACnC,eAAW;AAAA;AAGb,SAAO,YAAa,QAAO;AAC3B,MAAI,SAAQ,KAAK,IAAI,OAAO,UAAU;AACtC,SAAO,CAAC,iBAAiB,QAAO,kBAAkB;AAAA;AAIpD,+BAA+B,YAAY,UAAU,YAAY;AAC/D,MAAI,UAAU;AACZ,WAAO;AAAA,MACL,GAAG,SAAS;AAAA,MACZ,GAAG,SAAS;AAAA;AAAA;AAIhB,MAAI,kBAAkB;AAAA,IACpB,GAAG;AAAA,IACH,GAAG;AAAA;AAGL,MAAI,CAAC,YAAY;AACf,WAAO;AAAA;AAMT,MAAI,aAAa,WAAW;AAC5B,MAAI,WAAS,WAAW;AAExB,MAAI,CAAC,UAAQ;AACX,WAAO;AAAA;AAIT,MAAI,eAAe,CAAC,SAAO,QAAQ,GAAG,SAAO,SAAS;AACtD,MAAI,OAAO;AAEX,SAAO,MAAM;AACX,QAAI,aAAa,KAAK;AACtB,iBAAa,MAAM,WAAW;AAC9B,iBAAa,MAAM,WAAW;AAC9B,WAAO,KAAK;AAAA;AAGd,SAAO;AAAA,IACL,GAAG,WAAW,QAAQ,IAAI,aAAa;AAAA,IACvC,GAAG,WAAW,SAAS,IAAI,aAAa;AAAA;AAAA;AAM5C,kBAAkB,MAAM,UAAU,eAAe,UAAU,OAAO;AAChE,MAAI,aAAa,KAAK;AACtB,MAAI,sBAAsB,cAAc;AACxC,MAAI,kBAAkB,uBAAuB,wBAAwB;AAErE,MAAI,uBAAuB,CAAC,mBAAmB,UAAU,cAAc,UAAU,SAAS,UAAU;AAClG;AAAA;AAGF,OAAK,UAAU;AAAA,IAEb,UAAU;AAAA,IAGV,WAAW,CAAC,mBAAmB,CAAC,SAAS,UAAU;AAAA,IACnD;AAAA,KACC;AAEH,MAAI,gBAAgB,IAAI,qBAAa,SAAS,IAAI,WAAW,GAAG,SAAS,IAAI,WAAW,GAAG,SAAS,OAAO,SAAS;AACpH,QAAK,KAAK,gBAAgB,IAAI,SAAU,OAAO;AAC7C,aAAS,OAAO,eAAe,eAAe,UAAU,QAAQ;AAAA;AAAA;AAIpE,6BAA6B,OAAO;AAClC,SAAO,MAAM,IAAI,yBAAyB,MAAM,IAAI,2BAA2B;AAAA;;;ACpgB1E,mBAAiB,WAAW;AACjC,YAAU,oBAAoB;AAC9B,YAAU,kBAAkB;AAC5B,YAAU,eAAe;AACzB,YAAU,eAAe;AACzB,uBAAqB;AAAA;;;ACVR,wBAAwB,SAAS;AAC9C,MAAI,eAAe,QAAQ,eAAe;AAAA,IACxC,UAAU;AAAA;AAGZ,MAAI,CAAC,gBAAgB,CAAC,aAAa,QAAQ;AACzC;AAAA;AAGF,UAAQ,iBAAiB,SAAS,SAAU,aAAa;AACvD,QAAI,iBAAiB,YAAY;AACjC,QAAI,QAAQ,YAAY;AACxB,QAAI,OAAO,MAAM;AACjB,QAAI,gBAAgB,eAAe,SAAS,eAAe;AAC3D,SAAK,WAAW,SAAU,KAAK;AAC7B,UAAI,QAAQ,KAAK,aAAa;AAC9B,UAAI,WAAW,MAAM,WAAW;AAEhC,UAAI,YAAY,MAAM;AACpB,YAAI,OAAO,aAAa,UAAU;AAChC,qBAAW,cAAc;AAAA;AAI3B,iBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,cAAI,CAAC,aAAa,GAAG,WAAW,WAAW;AACzC,mBAAO;AAAA;AAAA;AAAA;AAKb,aAAO;AAAA;AAAA;AAAA;;;AC9BE,wBAAwB,SAAS;AAC9C,MAAI,eAAe;AACnB,UAAQ,iBAAiB,SAAS,SAAU,aAAa;AACvD,QAAI,iBAAiB,YAAY;AACjC,QAAI,OAAO,YAAY;AACvB,QAAI,qBAAqB;AACzB,mBAAe,KAAK,SAAU,KAAK;AACjC,UAAI,OAAO,eAAe,QAAQ;AAElC,yBAAmB,QAAQ,QAAQ;AACnC,UAAI,YAAY,eAAe,aAAa;AAC5C,UAAI,QAAQ,UAAU,SAAS,aAAa;AAE5C,UAAI,CAAC,MAAM,MAAM;AAEf,cAAM,OAAO,YAAY,oBAAoB,MAAM;AAAA;AAGrD,qBAAe,cAAc,KAAK,SAAS;AAC3C,UAAI,mBAAmB,CAAC,UAAU,cAAc;AAEhD,eAAS,IAAI,GAAG,IAAI,iBAAiB,QAAQ,KAAK;AAChD,YAAI,eAAe,UAAU,WAAW,iBAAiB,IAAI;AAE7D,YAAI,gBAAgB,MAAM;AACxB,yBAAe,cAAc,KAAK,iBAAiB,IAAI;AAAA;AAAA;AAAA;AAK7D,QAAI,eAAe,SAAS;AAC1B,WAAK,KAAK,SAAU,KAAK;AACvB,YAAI,QAAQ,KAAK,aAAa;AAC9B,YAAI,cAAc,MAAM,WAAW;AAEnC,YAAI,eAAe,MAAM;AACvB,cAAI,OAAO,gBAAgB,UAAU;AACnC,0BAAc,mBAAmB,QAAQ;AAAA;AAG3C,cAAI,gBAAgB,eAAe,cAAc,aAAa;AAC9D,cAAI,QAAQ,KAAK,uBAAuB,KAAK;AAC7C,iBAAO,OAAO;AACd,cAAI,aAAa,CAAC,UAAU,cAAc;AAE1C,mBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,iBAAK,cAAc,KAAK,WAAW,IAAI,eAAe,cAAc,aAAa,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AC7CxG,oBAAmB,GAAG;AACpB,MAAI,CAAE,cAAa,QAAQ;AACzB,QAAI,CAAC,GAAG;AAAA;AAGV,SAAO;AAAA;AAGM,yBAAyB,SAAS;AAC/C,UAAQ,iBAAiB,SAAS,SAAU,aAAa;AACvD,QAAI,QAAQ,YAAY;AACxB,QAAI,WAAW,YAAY;AAC3B,QAAI,aAAa,WAAU,YAAY,IAAI;AAC3C,QAAI,aAAa,WAAU,YAAY,IAAI;AAG3C,aAAS,UAAU,cAAc,cAAc,WAAW;AAC1D,aAAS,UAAU,YAAY,cAAc,WAAW;AACxD,aAAS,UAAU,kBAAkB,cAAc,WAAW;AAC9D,aAAS,UAAU,gBAAgB,cAAc,WAAW;AAC5D,aAAS,UAAU,SAAS,YAAY,SAAS,aAAa;AAC9D,aAAS,KAAK,SAAU,KAAK;AAC3B,UAAI,YAAY,SAAS,aAAa;AACtC,UAAI,OAAO,MAAM,eAAe;AAChC,UAAI,cAAa,WAAU,UAAU,WAAW,UAAU;AAC1D,UAAI,cAAa,WAAU,UAAU,WAAW,cAAc;AAE9D,UAAI,QAAQ,UAAU,SAAS,aAAa;AAC5C,UAAI,cAAc,SAAS,uBAAuB,KAAK;AACvD,aAAO,aAAa;AAEpB,cAAQ,YAAY;AAAA,aACb,UACH;AACE,cAAI,YAAY,KAAK,MAAM,UAAU;AACrC,sBAAY,SAAS,aAAa,UAAU;AAC5C;AAAA;AAAA,aAGC,UACH;AACE,cAAI,YAAY,KAAK,MAAM,UAAU;AACrC,sBAAY,SAAS,aAAa,UAAU;AAC5C;AAAA;AAAA;AAIN,kBAAW,MAAM,KAAK,UAAU,cAAc,YAAW;AACzD,kBAAW,MAAM,KAAK,UAAU,YAAY,YAAW;AACvD,kBAAW,MAAM,KAAK,UAAU,kBAAkB,YAAW;AAC7D,kBAAW,MAAM,KAAK,UAAU,gBAAgB,YAAW;AAAA;AAAA;AAAA;;;AClDjE,IAAI,gBAAgB;AAOpB,IAAI,yBAAyB,SAAU,aAAa;AAClD,SAAO,YAAY,IAAI,oBAAoB;AAAA;AAU7C,IAAI,kBAAkB,SAAU,aAAa,cAAc;AACzD,MAAI,sBAAsB,uBAAuB;AACjD,MAAI,SAAS;AACb,MAAI,gBAAgB;AAEpB,MAAI,OAAO,wBAAwB,UAAU;AAC3C,aAAS;AAAA,aACA,AAAO,QAAQ,sBAAsB;AAC9C,gBAAY,kBAAkB;AAC9B;AAAA;AAIF,MAAI,eAAe,QAAQ;AACzB,aAAS;AAAA;AAIX,MAAI,OAAM,SAAS,IAAI,SAAS,IAAI,SAAS;AAC7C,kBAAgB;AAEhB,WAAS,IAAI,GAAG,IAAI,MAAK,KAAK;AAC5B,kBAAc,KAAM,KAAI,IAAI,IAAI,IAAI,KAAK,KAAM,KAAI,IAAI,KAAK;AAAA;AAG9D,cAAY,kBAAkB;AAAA;AAWhC,IAAI,gBAAgB,SAAU,IAAI,IAAI,aAAa;AACjD,MAAI,SAAS,CAAC,GAAG,IAAI,GAAG,WAAW,KAAK;AACxC,MAAI,SAAS,CAAC,GAAG,IAAI,GAAG,WAAW,KAAK;AACxC,SAAO,CAAC,YAAY,KAAK,QAAQ,QAAQ,KAAK;AAAA;AAShD,IAAI,iBAAiB,SAAU,KAAK;AAClC,MAAI,QAAO,IAAI,MAAM;AACrB,SAAO,CAAC,MAAK,IAAI,MAAK,IAAI,MAAK,IAAI,KAAK;AAAA;AAS1C,IAAI,iBAAiB,SAAU,MAAM,aAAa;AAChD,MAAI,MAAM,cAAc,KAAK,OAAO,KAAK,OAAO;AAChD,SAAO,YAAY,UAAU;AAAA;AAU/B,IAAI,6BAA6B,SAAU,MAAM,aAAa;AAC5D,MAAI,OAAM,wBAAwB,cAAc,KAAK,OAAO,KAAK,OAAO,cAAc;AACtF,MAAI,OAAO,wBAAwB,cAAc,KAAK,OAAO,KAAK,OAAO,cAAc;AACvF,SAAO,OAAM;AAAA;AAQf,IAAI,0BAA0B,SAAU,KAAK,aAAa;AACxD,MAAI,UAAU,YAAY;AAC1B,SAAO,QAAQ,OAAO,QAAQ,KAAK,SAAS;AAAA;AASvC,2BAA2B,aAAa;AAC7C,MAAI,CAAC,uBAAuB,cAAc;AACxC;AAAA;AAGF,cAAY,kBAAkB;AAC9B,cAAY,YAAY;AAExB,kBAAgB;AAAA;AAUX,mCAAmC,IAAI,IAAI,aAAa,OAAO;AACpE,MAAI,CAAC,uBAAuB,cAAc;AACxC;AAAA;AAGF,MAAI,MAAM,cAAc,IAAI,IAAI;AAChC,MAAI,UAAU,YAAY;AAC1B,MAAI,gBAAgB,QAAQ,eAAe;AAE3C,MAAI,QAAQ,QAAQ,CAAC,eAAe;AAClC,YAAQ,KAAK,YAAY;AAAA,aAChB,iBAAiB,QAAQ,MAAM;AACxC,kBAAc,YAAY;AAC1B,YAAQ,KAAK,YAAY;AAAA;AAG3B,UAAQ,OAAO,QAAQ,QAAQ;AAC/B,UAAQ,KAAK,KAAK;AAAA;AASb,6BAA6B,MAAM,aAAa,OAAO,aAAa;AACzE,MAAI,sBAAsB,uBAAuB;AACjD,MAAI,eAAe,AAAO,QAAQ;AAElC,MAAI,CAAC,qBAAqB;AACxB,WAAO;AAAA;AAGT,MAAI,YAAY,eAAe,MAAM;AAErC,MAAI,CAAC,WAAW;AACd,WAAO;AAAA;AAGT,MAAI,YAAY;AAEhB,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,QAAI,UAAU,OAAO,OAAO;AAC1B,kBAAY;AACZ;AAAA;AAAA;AAKJ,MAAI,WAAW,2BAA2B,MAAM;AAChD,kBAAgB,aAAa;AAC7B,OAAK,YAAY,KAAK,aAAa;AAEnC,MAAI,SAAS,cAAc,KAAK,OAAO,KAAK,OAAO;AACnD,MAAI,gBAAgB,YAAY;AAEhC,MAAI,mBAAmB,eAAe,IAAI,WAAW,IAAI,IAAI;AAE7D,MAAI,CAAC,UAAU,WAAW;AAExB,QAAI,cAAc,eAAe;AACjC,QAAI,OAAM,wBAAwB,aAAa;AAC/C,QAAI,WAAW,cAAc,YAAY,OAAM;AAE/C,QAAI,aAAa;AAEf,UAAI,cAAc;AAChB,YAAI,uBAAuB,oBAAoB,OAAO,GAAG;AACvD,iBAAQ,QAAM,oBAAoB,IAAI,WAAW,CAAC;AAAA,eAC7C;AACL,iBAAS,SAAM,IAAI,IAAI,KAAK,oBAAoB,IAAI,WAAW,CAAC;AAAA;AAAA,aAE7D;AACL,eAAQ,QAAM,oBAAoB,IAAI,WAAW,CAAC;AAAA;AAAA,WAE/C;AACL,aAAO,cAAc,YAAY,OAAM;AAAA;AAAA,SAEpC;AACL,WAAO,cAAc,mBAAmB;AAAA;AAAA;;;AChNrC,sBAAsB,aAAa;AACxC,MAAI,WAAW,YAAY;AAE3B,MAAI,YAAY,SAAS,SAAS,QAAQ;AACxC;AAAA;AAGF,MAAI,QAAQ,YAAY;AACxB,QAAM,SAAS,SAAU,MAAM;AAC7B,QAAI,QAAQ,KAAK;AACjB,SAAK,UAAU,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,IAAI;AAAA;AAE9C,mBAAiB,OAAO;AAAA;AAEnB,0BAA0B,OAAO,aAAa;AACnD,QAAM,SAAS,SAAU,MAAM,OAAO;AACpC,QAAI,YAAY,AAAO,UAAU,KAAK,WAAW,IAAI,CAAC,aAAa,eAAe,CAAC,oBAAoB,MAAM,aAAa,OAAO,OAAO;AACxI,QAAI,KAAK,AAAK,OAAM,KAAK,MAAM;AAC/B,QAAI,KAAK,AAAK,OAAM,KAAK,MAAM;AAC/B,QAAI,SAAS,CAAC,IAAI;AAElB,QAAI,CAAC,WAAW;AACd,aAAO,KAAK,CAAE,IAAG,KAAK,GAAG,MAAM,IAAK,IAAG,KAAK,GAAG,MAAM,WAAY,IAAG,KAAK,GAAG,MAAM,IAAK,IAAG,KAAK,GAAG,MAAM;AAAA;AAG1G,SAAK,UAAU;AAAA;AAAA;;;AC1BJ,2BAA2B,SAAS,KAAK;AACtD,UAAQ,iBAAiB,SAAS,SAAU,aAAa;AACvD,QAAI,WAAS,YAAY,IAAI;AAC7B,QAAI,WAAW,YAAY;AAE3B,QAAI,YAAY,SAAS,SAAS,QAAQ;AACxC,UAAI,SAAS,YAAY;AACzB,UAAI,eAAe;AACnB,WAAK,SAAS,YAAY,SAAU,UAAU;AAC5C,uBAAe,aAAa,OAAO,OAAO,iBAAiB;AAAA;AAG7D,eAAS,YAAY,GAAG,YAAY,OAAO,SAAS,aAAa;AAC/D,YAAI,QAAQ;AACZ,YAAI,WAAW;AAEf,iBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,cAAI,MAAM,OAAO,IAAI,aAAa,IAAI;AAEtC,cAAI,CAAC,MAAM,MAAM;AACf,uBAAW;AAAA;AAGb,gBAAM,KAAK;AAAA;AAGb,YAAI,UAAU;AACZ,iBAAO,cAAc,WAAW,SAAS,YAAY;AAAA,eAChD;AAEL,iBAAO,cAAc,WAAW,CAAC,KAAK;AAAA;AAAA;AAI1C,uBAAiB,OAAO,OAAO;AAAA,eACtB,CAAC,YAAU,aAAW,QAAQ;AACvC,mBAAa;AAAA;AAAA;AAAA;;;ACtCZ,4BAA4B,aAAa;AAC9C,MAAI,WAAW,YAAY;AAE3B,MAAI,SAAS,SAAS,QAAQ;AAC5B,WAAO;AAAA;AAGT,MAAI,iBAAiB,YAAY,OAAO;AACxC,MAAI,YAAY,SAAS;AAEzB,MAAI,WAAW,SAAS;AACxB,MAAI,YAAa,YAAW,KAAK,iBAAiB;AAClD,SAAO,YAAY;AAAA;AAEd,uBAAuB,MAAM;AAClC,MAAI,aAAa,KAAK,UAAU;AAEhC,MAAI,sBAAsB,OAAO;AAC/B,iBAAc,YAAW,KAAK,WAAW,MAAM;AAAA;AAGjD,SAAO,CAAC;AAAA;;;ACjBV,IAAI,MAAK,KAAK;AACd,IAAI,qBAAqB;AAqBlB,wBAAwB,aAAa,SAAS;AACnD,MAAI,WAAW,YAAY;AAE3B,MAAI,YAAY,SAAS,SAAS,QAAQ;AACxC;AAAA;AAGF,MAAI,OAAO,SAAS;AACpB,MAAI,WAAW,YAAY;AAC3B,MAAI,QAAQ,SAAS;AACrB,MAAI,KAAK,KAAK,QAAQ,IAAI,KAAK;AAC/B,MAAI,KAAK,KAAK,SAAS,IAAI,KAAK;AAChC,MAAI,IAAI,KAAK,IAAI,KAAK,OAAO,KAAK,UAAU;AAC5C,MAAI,SAAQ,SAAS;AACrB,WAAS,UAAU;AAAA,IACjB;AAAA,IACA;AAAA;AAGF,MAAI,CAAC,QAAO;AACV;AAAA;AAGF,sBAAoB,SAAS,aAAa,OAAO,UAAU,GAAG,IAAI,IAAI;AAEtE,QAAM,SAAS,SAAU,MAAM,OAAO;AACpC,QAAI,YAAY,AAAO,UAAU,KAAK,WAAW,IAAI,CAAC,aAAa,eAAe,oBAAoB,MAAM,aAAa,QAAQ;AACjI,QAAI,KAAK,AAAK,OAAM,KAAK,MAAM;AAC/B,QAAI,KAAK,AAAK,OAAM,KAAK,MAAM;AAC/B,QAAI;AACJ,QAAI,MAAO,IAAG,KAAK,GAAG,MAAM;AAC5B,QAAI,MAAO,IAAG,KAAK,GAAG,MAAM;AAE5B,QAAI,CAAC,WAAW;AACd,mBAAa;AACb,YAAM,CAAC,KAAK,YAAY,MAAO,KAAI,YAAY,KAAK,YAAY,MAAO,KAAI;AAAA;AAG7E,SAAK,UAAU,CAAC,IAAI,IAAI;AAAA;AAAA;AAG5B,IAAI,sBAAsB;AAAA,EACxB,OAAO,SAAU,aAAa,OAAO,UAAU,GAAG,IAAI,IAAI,QAAO;AAC/D,QAAI,QAAQ;AACZ,QAAI,OAAM,SAAS,OAAO;AAC1B,QAAI,YAAY,KAAK,KAAK,IAAK,SAAO;AACtC,UAAM,SAAS,SAAU,MAAM;AAC7B,UAAI,QAAQ,KAAK,SAAS;AAC1B,UAAI,aAAa,YAAa,QAAM,QAAQ,KAAK;AACjD,eAAS;AACT,WAAK,UAAU,CAAC,IAAI,KAAK,IAAI,SAAS,IAAI,IAAI,KAAK,IAAI,SAAS;AAChE,eAAS;AAAA;AAAA;AAAA,EAGb,YAAY,SAAU,aAAa,OAAO,UAAU,GAAG,IAAI,IAAI,QAAO;AACpE,QAAI,YAAY;AAChB,uBAAmB,SAAS;AAC5B,QAAI,YAAY,mBAAmB;AACnC,UAAM,SAAS,SAAU,MAAM;AAC7B,UAAI,aAAa,cAAc;AAG/B,YAAM,eAAgB,cAAa;AACnC,mBAAa,KAAM,cAAa;AAChC,oBAAc;AACd,UAAI,mBAAmB,KAAK,KAAK,aAAa,IAAI;AAElD,YAAM,qBAAsB,oBAAmB,MAAK;AACpD,yBAAmB,KAAK,aAAa;AACrC,mBAAa,mBAAmB;AAAA;AAElC,QAAI,mBAAoB,KAAI,MAAK,aAAa,SAAQ;AACtD,QAAI,QAAQ;AACZ,UAAM,SAAS,SAAU,MAAM;AAC7B,UAAI,aAAa,mBAAmB,mBAAmB,KAAK;AAC5D,eAAS;AACT,WAAK,UAAU,CAAC,IAAI,KAAK,IAAI,SAAS,IAAI,IAAI,KAAK,IAAI,SAAS;AAChE,eAAS;AAAA;AAAA;AAAA;;;ACtGA,6BAA6B,SAAS;AACnD,UAAQ,iBAAiB,SAAS,SAAU,aAAa;AACvD,QAAI,YAAY,IAAI,cAAc,YAAY;AAC5C,qBAAe,aAAa;AAAA;AAAA;AAAA;;;ACOlC,IAAI,eAAmB;AAIhB,qBAAqB,SAAS,SAAS,MAAM;AAClD,MAAI,QAAQ;AACZ,MAAI,QAAQ;AACZ,MAAI,OAAO,KAAK;AAChB,MAAI,QAAQ,KAAK;AACjB,MAAI,SAAS,KAAK;AAClB,MAAI,UAAS,CAAC,KAAK,IAAI,QAAQ,GAAG,KAAK,IAAI,SAAS;AAEpD,MAAI,UAAU,KAAK,WAAW,OAAO,MAAM,KAAK;AAWhD,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,QAAI,IAAI,MAAM;AAEd,QAAI,CAAC,EAAE,GAAG;AACR,QAAE,IAAI,AAAK,OAAO,QAAS,MAAK,WAAW,OAAO,QAAO,IAAI,SAAU,MAAK,WAAW,OAAO,QAAO;AAAA;AAGvG,MAAE,KAAK,AAAK,OAAM,EAAE;AACpB,MAAE,QAAQ;AAAA;AAMZ,MAAI,kBAAkB,KAAK,YAAY,OAAO,MAAM,KAAK;AACzD,MAAI,WAAW;AACf,MAAI;AACJ,MAAI;AACJ,SAAO;AAAA,IACL,QAAQ,WAAY;AAClB,iBAAW,kBAAkB;AAAA;AAAA,IAE/B,UAAU,SAAU,KAAK;AACvB,YAAM,KAAK,QAAQ;AAAA;AAAA,IAErB,YAAY,SAAU,KAAK;AACzB,YAAM,KAAK,QAAQ;AAAA;AAAA,IAMrB,YAAY,SAAU,IAAI;AACxB,2BAAqB;AAAA;AAAA,IAMvB,WAAW,SAAU,IAAI;AACvB,0BAAoB;AAAA;AAAA,IAStB,MAAM,SAAU,IAAI;AAClB,4BAAsB,mBAAmB,OAAO;AAChD,UAAI,MAAM;AACV,UAAI,OAAO,MAAM;AAEjB,eAAS,KAAI,GAAG,KAAI,MAAM,QAAQ,MAAK;AACrC,YAAI,IAAI,MAAM;AAEd,YAAI,EAAE,mBAAmB;AACvB;AAAA;AAGF,YAAI,KAAK,EAAE;AACX,YAAI,KAAK,EAAE;AACX,QAAK,IAAI,KAAK,GAAG,GAAG,GAAG;AACvB,YAAI,IAAI,AAAK,IAAI,OAAO,EAAE;AAC1B,YAAI,IAAI,GAAG,IAAK,IAAG,IAAI,GAAG;AAE1B,YAAI,MAAM,IAAI;AACZ,cAAI;AAAA;AAGN,QAAK,UAAU,KAAK;AACpB,SAAC,GAAG,SAAS,aAAY,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI;AAClD,SAAC,GAAG,SAAS,aAAY,GAAG,GAAG,GAAG,GAAG,KAAK,CAAE,KAAI,KAAK,IAAI;AAAA;AAI3D,eAAS,KAAI,GAAG,KAAI,MAAM,MAAK;AAC7B,YAAI,KAAI,MAAM;AAEd,YAAI,CAAC,GAAE,OAAO;AACZ,UAAK,IAAI,KAAK,SAAQ,GAAE;AAIxB,uBAAY,GAAE,GAAG,GAAE,GAAG,KAAK,UAAU;AAAA;AAAA;AAMzC,eAAS,KAAI,GAAG,KAAI,MAAM,MAAK;AAC7B,YAAI,KAAK,MAAM;AAEf,iBAAS,IAAI,KAAI,GAAG,IAAI,MAAM,KAAK;AACjC,cAAI,KAAK,MAAM;AACf,UAAK,IAAI,KAAK,GAAG,GAAG,GAAG;AACvB,cAAI,IAAI,AAAK,IAAI;AAEjB,cAAI,MAAM,GAAG;AAEX,YAAK,IAAI,KAAK,KAAK,WAAW,KAAK,KAAK,WAAW;AACnD,gBAAI;AAAA;AAGN,cAAI,UAAW,IAAG,MAAM,GAAG,OAAO,IAAI;AACtC,WAAC,GAAG,SAAS,aAAY,GAAG,IAAI,GAAG,IAAI,KAAK;AAC5C,WAAC,GAAG,SAAS,aAAY,GAAG,IAAI,GAAG,IAAI,KAAK,CAAC;AAAA;AAAA;AAIjD,UAAI,IAAI;AAER,eAAS,KAAI,GAAG,KAAI,MAAM,MAAK;AAC7B,YAAI,KAAI,MAAM;AAEd,YAAI,CAAC,GAAE,OAAO;AACZ,UAAK,IAAI,GAAG,GAAE,GAAG,GAAE;AACnB,uBAAY,GAAE,GAAG,GAAE,GAAG,GAAG;AACzB,UAAK,KAAK,GAAE,IAAI,GAAE;AAAA;AAAA;AAItB,iBAAW,WAAW;AACtB,UAAI,WAAW,WAAW;AAC1B,2BAAqB,kBAAkB,OAAO,OAAO;AACrD,YAAM,GAAG;AAAA;AAAA;AAAA;;;ACzJA,0BAA0B,SAAS;AAChD,UAAQ,iBAAiB,SAAS,SAAU,aAAa;AACvD,QAAI,WAAW,YAAY;AAE3B,QAAI,YAAY,SAAS,SAAS,QAAQ;AACxC;AAAA;AAGF,QAAI,YAAY,IAAI,cAAc,SAAS;AACzC,UAAI,oBAAoB,YAAY,mBAAmB;AACvD,UAAI,UAAU,YAAY;AAC1B,UAAI,aAAa,QAAQ;AACzB,UAAI,WAAW,QAAQ;AACvB,UAAI,aAAa,YAAY,SAAS;AACtC,UAAI,aAAa,WAAW,IAAI;AAEhC,UAAI,YAAY,iBAAiB;AAC/B,mBAAW,KAAK,SAAU,KAAK;AAC7B,cAAI,KAAK,WAAW,MAAM;AAC1B,qBAAW,cAAc,KAAK,kBAAkB,OAAO,CAAC,KAAK;AAAA;AAAA,iBAEtD,CAAC,cAAc,eAAe,QAAQ;AAC/C,qBAAa;AAAA,iBACJ,eAAe,YAAY;AACpC,uBAAe,aAAa;AAAA;AAG9B,UAAI,mBAAmB,WAAW,cAAc;AAChD,UAAI,mBAAmB,SAAS,cAAc;AAE9C,UAAI,YAAY,WAAW,IAAI;AAC/B,UAAI,aAAa,WAAW,IAAI;AAChC,UAAI,iBAAiB,AAAO,QAAQ,aAAa,YAAY,CAAC,WAAW;AACzE,UAAI,kBAAkB,AAAO,QAAQ,cAAc,aAAa,CAAC,YAAY;AAE7E,wBAAkB,CAAC,gBAAgB,IAAI,gBAAgB;AACvD,UAAI,UAAU,WAAW,SAAS,SAAS,SAAU,OAAO,KAAK;AAC/D,YAAI,QAAQ,WAAW,cAAc;AACrC,YAAI,MAAM,UAAU,OAAO,kBAAkB;AAE7C,YAAI,MAAM,MAAM;AACd,gBAAO,gBAAe,KAAK,eAAe,MAAM;AAAA;AAGlD,eAAO;AAAA,UACL,GAAG;AAAA,UACH;AAAA,UACA,OAAO,WAAW,aAAa,KAAK,IAAI;AAAA,UACxC,GAAG,CAAC,SAAS,MAAM,MAAM,OAAO,MAAM,MAAM,MAAM,OAAO;AAAA;AAAA;AAG7D,UAAI,QAAQ,SAAS,SAAS,SAAS,SAAU,OAAO,KAAK;AAC3D,YAAI,OAAO,QAAQ,eAAe;AAClC,YAAI,IAAI,UAAU,OAAO,kBAAkB;AAE3C,YAAI,MAAM,IAAI;AACZ,cAAK,iBAAgB,KAAK,gBAAgB,MAAM;AAAA;AAGlD,YAAI,YAAY,KAAK;AACrB,YAAI,YAAY,AAAO,UAAU,KAAK,WAAW,IAAI,CAAC,aAAa,eAAe,CAAC,oBAAoB,MAAM,aAAa,KAAK,OAAO;AACtI,eAAO;AAAA,UACL,IAAI,QAAQ,KAAK,MAAM;AAAA,UACvB,IAAI,QAAQ,KAAK,MAAM;AAAA,UACvB;AAAA,UACA;AAAA,UACA,mBAAmB,UAAU,IAAI;AAAA;AAAA;AAIrC,UAAI,OAAO,SAAS;AACpB,UAAI,gBAAgB,YAAY,SAAS,OAAO;AAAA,QAC9C;AAAA,QACA,SAAS,WAAW,IAAI;AAAA,QACxB,UAAU,WAAW,IAAI;AAAA;AAE3B,oBAAc,WAAW,SAAU,OAAO,QAAO;AAC/C,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,IAAI,GAAG,KAAK;AAC5C,cAAI,MAAM,GAAG,OAAO;AAElB,YAAK,KAAK,MAAM,GAAG,GAAG,QAAQ,eAAe,GAAG;AAAA;AAAA;AAAA;AAItD,oBAAc,UAAU,SAAU,OAAO,QAAO,SAAS;AACvD,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,IAAI,GAAG,KAAK;AAC5C,cAAI,CAAC,MAAM,GAAG,OAAO;AACnB,oBAAQ,eAAe,GAAG,UAAU,MAAM,GAAG;AAAA;AAG/C,4BAAkB,WAAW,MAAM,MAAM,MAAM,GAAG;AAAA;AAGpD,iBAAS,IAAI,GAAG,IAAI,OAAM,QAAQ,IAAI,GAAG,KAAK;AAC5C,cAAI,IAAI,OAAM;AACd,cAAI,OAAO,QAAQ,eAAe;AAClC,cAAI,KAAK,EAAE,GAAG;AACd,cAAI,KAAK,EAAE,GAAG;AACd,cAAI,SAAS,KAAK;AAClB,mBAAS,SAAS,OAAO,UAAU;AACnC,iBAAO,KAAK,OAAO,MAAM;AACzB,iBAAO,KAAK,OAAO,MAAM;AACzB,UAAK,KAAK,OAAO,IAAI;AACrB,UAAK,KAAK,OAAO,IAAI;AAErB,cAAI,CAAC,EAAE,WAAW;AAChB,mBAAO,KAAK,CAAE,IAAG,KAAK,GAAG,MAAM,IAAK,IAAG,KAAK,GAAG,MAAM,EAAE,WAAY,IAAG,KAAK,GAAG,MAAM,IAAK,IAAG,KAAK,GAAG,MAAM,EAAE;AAAA;AAG9G,eAAK,UAAU;AAAA;AAAA;AAGnB,kBAAY,cAAc;AAC1B,kBAAY,kBAAkB;AAE9B,oBAAc;AAAA,WACT;AAEL,kBAAY,cAAc;AAAA;AAAA;AAAA;;;ACvHhC,sBAAqB,aAAa,KAAK,QAAQ;AAC7C,MAAI,SAAS,OAAO,YAAY,sBAAsB;AAAA,IACpD;AAAA;AAEF,SAAO,cAAc,QAAQ;AAAA,IAC3B,OAAO,IAAI;AAAA,IACX,QAAQ,IAAI;AAAA;AAAA;AAID,4BAA4B,SAAS,KAAK;AACvD,MAAI,WAAW;AACf,UAAQ,iBAAiB,SAAS,SAAU,aAAa;AACvD,QAAI,eAAe,YAAY,IAAI;AAEnC,QAAI,CAAC,gBAAgB,iBAAiB,QAAQ;AAC5C,UAAI,SAAS,YAAY;AACzB,UAAI,YAAY,OAAO,SAAS,SAAU,KAAK;AAC7C,YAAI,YAAY,OAAO,aAAa;AACpC,eAAO,CAAC,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,IAAI;AAAA;AAE9C,UAAI,MAAM;AACV,UAAI,MAAM;AACV,MAAK,WAAW,WAAW,KAAK;AAEhC,UAAI,IAAI,KAAK,IAAI,OAAO,GAAG;AACzB,YAAI,MAAM;AACV,YAAI,MAAM;AAAA;AAGZ,UAAI,IAAI,KAAK,IAAI,OAAO,GAAG;AACzB,YAAI,MAAM;AACV,YAAI,MAAM;AAAA;AAGZ,UAAI,SAAU,KAAI,KAAK,IAAI,MAAO,KAAI,KAAK,IAAI;AAE/C,UAAI,WAAW,aAAY,aAAa,KAAK;AAE7C,UAAI,MAAM,SAAS;AACjB,cAAM,CAAC,SAAS,GAAG,SAAS;AAC5B,cAAM,CAAC,SAAS,IAAI,SAAS,OAAO,SAAS,IAAI,SAAS;AAAA;AAG5D,UAAI,UAAU,IAAI,KAAK,IAAI;AAC3B,UAAI,WAAW,IAAI,KAAK,IAAI;AAC5B,UAAI,YAAY,SAAS;AACzB,UAAI,aAAa,SAAS;AAC1B,UAAI,eAAe,YAAY,mBAAmB,IAAI;AACtD,mBAAa,YAAY,YAAY,IAAI;AACzC,mBAAa,gBAAgB,IAAI,IAAI,IAAI,IAAI,SAAS;AACtD,mBAAa,YAAY,SAAS,GAAG,SAAS,GAAG,WAAW;AAE5D,mBAAa,UAAU,YAAY,IAAI;AACvC,mBAAa,QAAQ,YAAY,IAAI;AACrC,eAAS,KAAK;AAAA;AAAA;AAGlB,SAAO;AAAA;;;ACzDT,IAAI,oBAAoB,AAAQ,aAAK;AACrC,IAAI,mBAAmB,AAAQ,oBAAY;AAE3C,IAAI,oBAEJ,WAAY;AACV,gCAA6B;AAE3B,SAAK,KAAK;AACV,SAAK,KAAK;AAEV,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,UAAU;AAAA;AAGjB,SAAO;AAAA;AAGT,IAAI,aAEJ,SAAU,QAAQ;AAChB,YAAU,aAAY;AAEtB,yBAAsB;AACpB,WAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAAA;AAG7D,SAAO;AAAA,EACP;AAEF,wBAAwB,OAAO;AAC7B,SAAO,MAAM,CAAC,MAAM,SAAS,MAAM,CAAC,MAAM;AAAA;AAG5C,IAAI,aAEJ,SAAU,QAAQ;AAChB,YAAU,aAAY;AAEtB,uBAAoB,MAAM;AACxB,QAAI,QAAQ,OAAO,KAAK,MAAM,SAAS;AAEvC,UAAM,OAAO;AACb,WAAO;AAAA;AAGT,cAAW,UAAU,kBAAkB,WAAY;AACjD,WAAO;AAAA,MACL,QAAQ;AAAA,MACR,MAAM;AAAA;AAAA;AAIV,cAAW,UAAU,kBAAkB,WAAY;AACjD,WAAO,IAAI;AAAA;AAGb,cAAW,UAAU,YAAY,SAAU,KAAK,OAAO;AACrD,QAAI,eAAe,QAAQ;AACzB,wBAAkB,UAAU,KAAK,MAAM,KAAK;AAAA,WACvC;AACL,uBAAiB,UAAU,KAAK,MAAM,KAAK;AAAA;AAAA;AAI/C,cAAW,UAAU,UAAU,SAAU,GAAG;AAC1C,QAAI,eAAe,KAAK,QAAQ;AAC9B,aAAO,kBAAkB,QAAQ,KAAK,MAAM;AAAA,WACvC;AACL,aAAO,iBAAiB,QAAQ,KAAK,MAAM;AAAA;AAAA;AAI/C,cAAW,UAAU,YAAY,SAAU,GAAG;AAC5C,QAAI,QAAQ,KAAK;AACjB,QAAI,IAAI,eAAe,SAAS,CAAC,MAAM,KAAK,MAAM,IAAI,MAAM,KAAK,MAAM,MAAM,iBAAiB,UAAU,KAAK,MAAM;AACnH,WAAO,AAAK,UAAU,GAAG;AAAA;AAG3B,SAAO;AAAA,EACC;AAEV,IAAO,mBAAQ;;;ACjFf,IAAI,oBAAoB,CAAC,cAAc;AAEvC,2BAA2B,gBAAgB;AACzC,SAAO,MAAM,iBAAiB;AAAA;AAOhC,uBAAsB,MAAM,UAAU,KAAK;AACzC,MAAI,aAAa,SAAS,cAAc,KAAK;AAE7C,MAAI,CAAC,cAAc,eAAe,QAAQ;AACxC;AAAA;AAGF,MAAI,aAAa,SAAS,cAAc,KAAK,OAAO;AACpD,MAAI,eAAe,SAAS,cAAc,KAAK,OAAO;AACtD,MAAI,eAAe,SAAS,cAAc,KAAK,OAAO;AACtD,MAAI,mBAAmB,SAAS,cAAc,KAAK,OAAO;AAC1D,MAAI,gBAAgB,AAAW,oBAAoB;AACnD,MAAI,kBAAkB,AAAW,sBAAsB,gBAAgB,GAAG;AAC1E,MAAI,aAAa,AAAW,aAAa,YAAY,CAAC,cAAc,KAAK,IAAI,gBAAgB,IAAI,CAAC,cAAc,KAAK,IAAI,gBAAgB,IAAI,cAAc,IAAI,cAAc,IAAI,MAAM;AACvL,aAAW,sBAAsB,gBAAgB,QAAQ,MAAM,gBAAgB,SAAS,CAAC,eAAe,KAAK,KAAK,OAAO;AACzH,aAAW,OAAO;AAClB,SAAO;AAAA;AAGT,oBAAoB,QAAQ;AAC1B,MAAI,OAAO,IAAI,iBAAW;AAAA,IACxB,MAAM;AAAA,IACN,kBAAkB;AAAA;AAEpB,gBAAc,KAAK,OAAO;AAC1B,SAAO;AAAA;AAGT,uBAAuB,aAAa,QAAQ;AAC1C,cAAY,KAAK,OAAO,GAAG;AAC3B,cAAY,KAAK,OAAO,GAAG;AAC3B,cAAY,KAAK,OAAO,GAAG;AAC3B,cAAY,KAAK,OAAO,GAAG;AAC3B,cAAY,UAAU;AACtB,MAAI,MAAM,OAAO;AAEjB,MAAI,KAAK;AACP,gBAAY,OAAO,IAAI;AACvB,gBAAY,OAAO,IAAI;AAAA,SAClB;AACL,gBAAY,OAAO;AACnB,gBAAY,OAAO;AAAA;AAAA;AAIvB,IAAI,OAEJ,SAAU,QAAQ;AAChB,YAAU,OAAM;AAEhB,iBAAc,UAAU,KAAK,aAAa;AACxC,QAAI,QAAQ,OAAO,KAAK,SAAS;AAEjC,UAAM,YAAY,UAAU,KAAK;AAEjC,WAAO;AAAA;AAGT,QAAK,UAAU,cAAc,SAAU,UAAU,KAAK,aAAa;AACjE,QAAI,cAAc,SAAS;AAC3B,QAAI,aAAa,SAAS,cAAc;AACxC,QAAI,OAAO,WAAW;AACtB,SAAK,MAAM,UAAU;AACrB,IAAQ,UAAU,MAAM;AAAA,MACtB,OAAO;AAAA,QACL,SAAS;AAAA;AAAA,OAEV,aAAa;AAChB,SAAK,IAAI;AACT,SAAK,mBAAmB,SAAU,gBAAgB;AAChD,UAAI,SAAS,cAAa,gBAAgB,UAAU;AAIpD,WAAK,IAAI;AACT,WAAK,kBAAkB,mBAAmB,SAAS,cAAc,KAAK;AAAA,OACrE;AAEH,SAAK,iBAAiB,UAAU,KAAK;AAAA;AAIvC,QAAK,UAAU,aAAa,SAAU,UAAU,KAAK,aAAa;AAChE,QAAI,cAAc,SAAS;AAC3B,QAAI,OAAO,KAAK,YAAY;AAC5B,QAAI,aAAa,SAAS,cAAc;AACxC,QAAI,SAAS;AAAA,MACX,OAAO;AAAA;AAET,kBAAc,OAAO,OAAO;AAC5B,IAAQ,YAAY,MAAM,QAAQ,aAAa;AAC/C,SAAK,mBAAmB,SAAU,gBAAgB;AAChD,UAAI,aAAa,SAAS,cAAc,KAAK;AAC7C,UAAI,MAAM,kBAAkB;AAE5B,UAAI,KAAK,SAAS,YAAY;AAC5B,aAAK,OAAO,KAAK,YAAY;AAC7B,YAAI,SAAS,cAAa,gBAAgB,UAAU;AACpD,aAAK,IAAI;AAAA;AAGX,WAAK,OAAO;AAAA,OACX;AAEH,SAAK,iBAAiB,UAAU,KAAK;AAAA;AAGvC;AAEA,QAAK,UAAU,cAAc,WAAY;AACvC,WAAO,KAAK,QAAQ;AAAA;AAGtB,QAAK,UAAU,mBAAmB,SAAU,UAAU,KAAK,aAAa;AACtE,QAAI,cAAc,SAAS;AAC3B,QAAI,OAAO,KAAK,YAAY;AAC5B,QAAI,oBAAoB,eAAe,YAAY;AACnD,QAAI,gBAAgB,eAAe,YAAY;AAC/C,QAAI,kBAAkB,eAAe,YAAY;AACjD,QAAI,oBAAoB,eAAe,YAAY;AAEnD,QAAI,CAAC,eAAe,SAAS,eAAe;AAC1C,UAAI,YAAY,SAAS,aAAa;AACtC,0BAAoB,UAAU,SAAS,CAAC,YAAY,cAAc;AAClE,sBAAgB,UAAU,SAAS,CAAC,QAAQ,cAAc;AAC1D,wBAAkB,UAAU,SAAS,CAAC,UAAU,cAAc;AAC9D,0BAAoB,qBAAqB;AAAA;AAG3C,QAAI,YAAY,SAAS,cAAc,KAAK;AAC5C,QAAI,cAAc,UAAU;AAC5B,SAAK,SAAS;AACd,SAAK,MAAM,OAAO;AAClB,SAAK,MAAM,gBAAgB;AAC3B,SAAK,YAAY,YAAY,QAAQ;AACrC,SAAK,YAAY,QAAQ,QAAQ;AACjC,SAAK,YAAY,UAAU,QAAQ;AAEnC,SAAK,mBAAmB,SAAU,gBAAgB;AAChD,UAAI,SAAS,KAAK,YAAY;AAE9B,UAAI,QAAQ;AAEV,eAAO,SAAS;AAChB,eAAO,MAAM,UAAU,UAAU;AAEjC,iBAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK;AAC9C,cAAI,YAAY,eAAe;AAC/B,cAAI,YAAY,KAAK,SAAS;AAE9B,cAAI,WAAW;AACb,gBAAI,iBAAiB,UAAU,SAAS;AACxC,gBAAI,QAAQ,OAAO,YAAY;AAC/B,gBAAI,aAAa,MAAM,SAAU,OAAM,QAAQ;AAE/C,gBAAI,eAAe,UAAU,MAAM;AACjC,yBAAW,OAAO,iBAAiB,WAAW,UAAU,eAAe;AAAA;AAGzE,gBAAI,eAAe,WAAW,MAAM;AAClC,yBAAW,UAAU,eAAe;AAAA;AAAA;AAAA;AAK1C,eAAO;AAAA;AAAA,OAER;AACH,QAAI,SAAS,YAAY,YAAY;AACrC,kBAAc,MAAM,mBAAmB;AAAA,MACrC,gBAAgB;AAAA,MAChB,cAAc;AAAA,QACZ,mBAAmB,SAAU,WAAW,WAAW;AACjD,iBAAO,YAAY,kBAAkB,WAAW,WAAW,SAAS;AAAA;AAAA;AAAA,MAGxE,cAAc,eAAe;AAAA,MAC7B,gBAAgB,UAAU;AAAA,MAC1B,aAAc,WAAU,OAAO,SAAS,QAAQ,OAAO,SAAS,UAAU,MAAM,UAAU,UAAU;AAAA;AAEtG,QAAI,QAAQ,KAAK;AAGjB,QAAI,OAAO;AACT,UAAI,mBAAmB,kBAAkB;AACzC,YAAM,UAAU,MAAM,MAAM;AAC5B,YAAM,kBAAkB,MAAM,MAAM;AAEpC,YAAM,aAAa,iBAAiB,IAAI,eAAe;AACvD,UAAI,WAAW,iBAAiB,IAAI;AAEpC,UAAI,CAAC,QAAQ,WAAW;AACtB,mBAAW,CAAC,UAAU;AAAA;AAGxB,YAAM,kBAAkB;AAAA;AAG1B,SAAK,cAAc;AAAA,MACjB,UAAU;AAAA,MACV,OAAO;AAAA,MACP,QAAQ;AAAA;AAGV,wBAAoB;AAAA;AAGtB,QAAK,UAAU,YAAY,WAAY;AACrC,kBAAc;AAAA;AAGhB,QAAK,UAAU,WAAW,WAAY;AACpC,kBAAc;AAAA;AAGhB,QAAK,UAAU,eAAe,SAAU,UAAU,KAAK;AACrD,SAAK,cAAc,SAAS,cAAc;AAAA;AAG5C,QAAK,UAAU,gBAAgB,SAAU,QAAQ;AAC/C,QAAI,WAAW,KAAK,YAAY;AAChC,kBAAc,SAAS,OAAO;AAC9B,aAAS;AAAA;AAGX,QAAK,UAAU,eAAe,WAAY;AACxC,QAAI,YAAY;AAChB,QAAI,aAAa,UAAU,YAAY;AACvC,QAAI,WAAW,UAAU,YAAY;AACrC,QAAI,QAAQ,UAAU;AAEtB,QAAI,CAAC,cAAc,CAAC,YAAa,EAAC,SAAS,MAAM,SAAS;AACxD;AAAA;AAGF,QAAI,WAAW;AACf,QAAI,aAAa,KAAK;AAEtB,WAAO,YAAY;AACjB,UAAI,WAAW,QAAQ;AACrB,oBAAY,WAAW;AAAA;AAGzB,mBAAa,WAAW;AAAA;AAG1B,QAAI,OAAO,UAAU,YAAY;AAGjC,QAAI,CAAC,KAAK,WAAW,CAAC,KAAK,SAAS;AAClC;AAAA;AAGF,QAAI,UAAU,KAAK,MAAM;AACzB,QAAI,UAAU,KAAK,QAAQ;AAC3B,QAAI,QAAQ,KAAK,QAAQ;AACzB,QAAI,IAAI,AAAO,IAAI,IAAI,OAAO;AAC9B,IAAO,UAAU,GAAG;AAEpB,+BAA2B,QAAQ,UAAS;AAK1C,UAAI,oBAAoB,OAAO;AAE/B,UAAI,qBAAqB,MAAM;AAC7B,YAAI,WAAU,KAAK,UAAU;AAC7B,eAAO,KAAK,YAAa,cAAY,IAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,MAAM,SAAQ,IAAI,SAAQ;AAAA,aAC3F;AACL,eAAO,KAAK,YAAY;AAAA;AAAA;AAI5B,QAAI,YAAY;AACd,iBAAW,YAAY;AACvB,wBAAkB,YAAY;AAC9B,iBAAW,SAAS,WAAW,SAAS,WAAW;AACnD,iBAAW;AAAA;AAGb,QAAI,UAAU;AACZ,eAAS,YAAY;AACrB,wBAAkB,UAAU;AAC5B,eAAS,SAAS,SAAS,SAAS,WAAW;AAC/C,eAAS;AAAA;AAGX,QAAI,SAAS,CAAC,MAAM,QAAQ;AAC1B,YAAM,IAAI,MAAM,IAAI;AACpB,YAAM,UAAU,MAAM,UAAU;AAChC,UAAI,YAAY;AAChB,UAAI,oBAAoB;AACxB,UAAI,WAAW,MAAM;AACrB,UAAI,YAAY,SAAS,KAAK;AAC9B,UAAI,YAAY,SAAS,KAAK;AAC9B,UAAI,cAAc,UAAU;AAC5B,UAAI,UAAU,KAAK,UAAU;AAC7B,UAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ;AAC9B,UAAI,KAAK,KAAK,QAAQ;AAEtB,UAAI,EAAE,KAAK,GAAG;AACZ,UAAE,KAAK,CAAC,EAAE;AACV,UAAE,KAAK,CAAC,EAAE;AAAA;AAGZ,UAAI,MAAM,QAAQ,KAAK,IAAI,KAAK;AAEhC,UAAI,MAAM,eAAe,WAAW,MAAM,eAAe,OAAO;AAC9D,YAAI,WAAW,CAAC,KAAK,MAAM,QAAQ,IAAI,QAAQ;AAE/C,YAAI,MAAM,KAAK,QAAQ,IAAI;AACzB,qBAAW,KAAK,KAAK;AAAA;AAGvB,cAAM,WAAW;AAAA;AAGnB,UAAI,KAAK;AAET,cAAQ,MAAM;AAAA,aACP;AAAA,aACA;AAAA,aACA;AAAA,aACA;AACH,eAAK,CAAC;AACN,8BAAoB;AACpB;AAAA,aAEG;AAAA,aACA;AAAA,aACA;AACH,eAAK;AACL,8BAAoB;AACpB;AAAA;AAGA,eAAK;AACL,8BAAoB;AAAA;AAGxB,cAAQ,MAAM;AAAA,aACP;AACH,gBAAM,IAAI,EAAE,KAAK,YAAY,MAAM;AACnC,gBAAM,IAAI,EAAE,KAAK,YAAY,MAAM;AACnC,sBAAY,EAAE,KAAK,MAAM,SAAS,EAAE,KAAK,OAAO,UAAU;AAC1D,8BAAoB,EAAE,KAAK,MAAM,QAAQ,EAAE,KAAK,OAAO,WAAW;AAClE;AAAA,aAEG;AACH,gBAAM,IAAI,CAAC,EAAE,KAAK,YAAY,QAAQ;AACtC,gBAAM,IAAI,CAAC,EAAE,KAAK,YAAY,QAAQ;AACtC,sBAAY,EAAE,KAAK,MAAM,UAAU,EAAE,KAAK,OAAO,SAAS;AAC1D,8BAAoB,EAAE,KAAK,MAAM,WAAW,EAAE,KAAK,OAAO,QAAQ;AAClE;AAAA,aAEG;AAAA,aACA;AAAA,aACA;AACH,gBAAM,IAAI,YAAY,MAAM,QAAQ;AACpC,gBAAM,IAAI,QAAQ,KAAK;AACvB,sBAAY,QAAQ,KAAK,IAAI,UAAU;AACvC,gBAAM,UAAU,CAAC,YAAY;AAC7B,gBAAM,UAAU,CAAC;AACjB;AAAA,aAEG;AAAA,aACA;AAAA,aACA;AAAA,aACA;AACH,gBAAM,IAAI,GAAG;AACb,gBAAM,IAAI,GAAG,KAAK;AAClB,sBAAY;AACZ,gBAAM,UAAU,CAAC;AACjB;AAAA,aAEG;AAAA,aACA;AAAA,aACA;AACH,gBAAM,IAAI,CAAC,YAAY,MAAM,MAAM;AACnC,gBAAM,IAAI,MAAM,KAAK;AACrB,sBAAY,QAAQ,MAAM,IAAI,UAAU;AACxC,gBAAM,UAAU,YAAY;AAC5B,gBAAM,UAAU,CAAC;AACjB;AAAA;AAGJ,YAAM,SAAS,MAAM,SAAS;AAC9B,YAAM,SAAS;AAAA,QAEb,eAAe,MAAM,mBAAmB;AAAA,QACxC,OAAO,MAAM,WAAW;AAAA;AAAA;AAAA;AAK9B,SAAO;AAAA,EACC;AAEV,IAAO,gBAAQ;;;AC9Zf,IAAI,WAEJ,WAAY;AACV,qBAAkB,UAAU;AAC1B,SAAK,QAAQ,IAAY;AACzB,SAAK,YAAY,YAAY;AAAA;AAG/B,YAAS,UAAU,eAAe,WAAY;AAC5C,WAAO;AAAA;AAGT;AAEA,YAAS,UAAU,aAAa,SAAU,UAAU;AAClD,QAAI,QAAQ;AAEZ,QAAI,WAAW;AACf,QAAI,QAAQ,SAAS;AACrB,QAAI,cAAc,SAAS;AAC3B,aAAS,YAAY;AAGrB,QAAI,CAAC,aAAa;AAChB,YAAM;AAAA;AAGR,QAAI,cAAc,iBAAgB;AAClC,aAAS,KAAK,aAAa,IAAI,SAAU,KAAK;AAC5C,YAAM,OAAO,UAAU,KAAK;AAAA,OAC3B,OAAO,SAAU,QAAQ,QAAQ;AAClC,YAAM,UAAU,aAAa,UAAU,QAAQ,QAAQ;AAAA,OACtD,OAAO,SAAU,KAAK;AACvB,YAAM,OAAO,YAAY,iBAAiB;AAAA,OACzC;AAAA;AAGL;AAEA,YAAS,UAAU,eAAe,WAAY;AAC5C,QAAI,WAAW,KAAK;AAEpB,QAAI,CAAC,UAAU;AACb;AAAA;AAGF,aAAS,kBAAkB,SAAU,IAAI,KAAK;AAC5C,SAAG,aAAa,UAAU;AAAA,OACzB;AAAA;AAGL;AAEA,YAAS,UAAU,2BAA2B,SAAU,UAAU;AAChE,SAAK,eAAe,iBAAgB;AACpC,SAAK,YAAY;AACjB,SAAK,MAAM;AAAA;AAGb;AAEA,YAAS,UAAU,oBAAoB,SAAU,YAAY,UAAU;AACrE,uCAAmC,KAAI;AACrC,UAAI,CAAC,IAAG,WAAW,CAAC,eAAe,MAAK;AACtC,YAAG,cAAc;AACjB,YAAG,YAAY,YAAY,aAAa;AAAA;AAAA;AAI5C,aAAS,MAAM,WAAW,OAAO,MAAM,WAAW,KAAK,OAAO;AAC5D,UAAI,aAAa,SAAS,cAAc;AAExC,UAAI,cAAc,aAAa;AAC7B,YAAI,KAAK,IAAI,KAAK,UAAU,UAAU,KAAK,KAAK;AAChD,WAAG,SAAS;AACZ,aAAK,MAAM,IAAI;AACf,iBAAS,iBAAiB,KAAK;AAAA;AAAA;AAAA;AAKrC;AAEA,YAAS,UAAU,SAAS,WAAY;AACtC,SAAK,MAAM;AAAA;AAGb;AAEA,YAAS,UAAU,SAAS,SAAU,UAAU,KAAK,aAAa;AAChE,QAAI,aAAa,SAAS,cAAc;AAExC,QAAI,CAAC,cAAc,aAAa;AAC9B;AAAA;AAGF,QAAI,KAAK,IAAI,KAAK,UAAU,UAAU,KAAK;AAC3C,aAAS,iBAAiB,KAAK;AAC/B,SAAK,MAAM,IAAI;AAAA;AAGjB,YAAS,UAAU,YAAY,SAAU,aAAa,aAAa,QAAQ,QAAQ,aAAa;AAC9F,QAAI,SAAS,YAAY,iBAAiB;AAE1C,QAAI,CAAC,cAAc,YAAY,cAAc,UAAU;AACrD,WAAK,MAAM,OAAO;AAClB;AAAA;AAGF,QAAI,CAAC,QAAQ;AACX,eAAS,IAAI,KAAK,UAAU,aAAa,QAAQ;AAAA,WAC5C;AACL,aAAO,WAAW,aAAa,QAAQ;AAAA;AAGzC,gBAAY,iBAAiB,QAAQ;AACrC,SAAK,MAAM,IAAI;AAAA;AAGjB,SAAO;AAAA;AAGT,wBAAwB,IAAI;AAC1B,SAAO,GAAG,aAAa,GAAG,UAAU,SAAS;AAAA;AAG/C,0BAAyB,UAAU;AACjC,MAAI,YAAY,SAAS;AACzB,SAAO;AAAA,IACL,WAAW,UAAU,SAAS,aAAa;AAAA,IAC3C,mBAAmB,UAAU,SAAS,CAAC,YAAY,cAAc;AAAA,IACjE,eAAe,UAAU,SAAS,CAAC,QAAQ,cAAc;AAAA,IACzD,iBAAiB,UAAU,SAAS,CAAC,UAAU,cAAc;AAAA,IAC7D,mBAAmB,qBAAqB;AAAA;AAAA;AAI5C,oBAAoB,IAAI;AACtB,SAAO,MAAM,GAAG,OAAO,MAAM,GAAG;AAAA;AAGlC,uBAAuB,KAAK;AAC1B,SAAO,CAAC,WAAW,IAAI,OAAO,CAAC,WAAW,IAAI;AAAA;AAGhD,IAAO,mBAAQ;;;AClJf,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,eAAwB;AAC5B,IAAI,eAAoB;AACxB,IAAI,UAAU,KAAK;AAEnB,8BAA8B,aAAa,SAAQ,QAAQ;AACzD,MAAI,KAAK,YAAY;AACrB,MAAI,KAAK,YAAY;AACrB,MAAI,KAAK,YAAY;AACrB,MAAI,IAAI;AACR,MAAI;AACJ,MAAI,eAAe,SAAS;AAC5B,MAAI,WAAW;AAEf,WAAS,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK;AACvC,OAAG,KAAK,aAAY,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;AACzC,OAAG,KAAK,aAAY,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;AACzC,QAAI,QAAO,QAAQ,aAAa,IAAI,WAAU;AAE9C,QAAI,QAAO,GAAG;AACZ,UAAI;AACJ,UAAI;AAAA;AAAA;AAMR,WAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAE3B,QAAI,OAAO,IAAI;AAGf,OAAG,KAAK,aAAY,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;AACzC,OAAG,KAAK,aAAY,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;AACzC,OAAG,KAAK,aAAY,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;AACzC,OAAG,KAAK,aAAY,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;AACzC,QAAI,QAAO,aAAa,IAAI,WAAU;AAEtC,QAAI,QAAQ,SAAQ,MAAM;AACxB;AAAA;AAIF,QAAI,WAAW,aAAa,IAAI,WAAU;AAC1C,gBAAY;AAEZ,QAAI,QAAO,GAAG;AACZ,UAAI,YAAY,GAAG;AACjB,YAAI,IAAI;AAAA,aACH;AACL,YAAI,IAAI;AAAA;AAAA,WAEL;AACL,UAAI,YAAY,GAAG;AACjB,YAAI,IAAI;AAAA,aACH;AACL,YAAI,IAAI;AAAA;AAAA;AAAA;AAKd,SAAO;AAAA;AAIM,oBAAoB,OAAO,QAAO;AAC/C,MAAI,OAAO;AACX,MAAI,sBAA+B;AACnC,MAAI,MAAM,CAAC,IAAI,IAAI;AACnB,MAAI,OAAO,CAAC,IAAI;AAChB,MAAI,IAAI;AACR,YAAS;AACT,QAAM,SAAS,SAAU,MAAM,KAAK;AAClC,QAAI,aAAa,KAAK;AACtB,QAAI,aAAa,KAAK,UAAU;AAChC,QAAI,WAAW,KAAK,UAAU;AAE9B,QAAI,CAAC,WAAW,YAAY;AAC1B,iBAAW,aAAa,CAAC,AAAK,OAAM,WAAW,KAAK,AAAK,OAAM,WAAW;AAE1E,UAAI,WAAW,IAAI;AACjB,mBAAW,WAAW,KAAK,AAAK,OAAM,WAAW;AAAA;AAAA;AAIrD,QAAI,iBAAiB,WAAW;AAEhC,QAAI,WAAW,MAAM,MAAM;AACzB,MAAK,KAAK,IAAI,IAAI,eAAe;AACjC,MAAK,KAAK,IAAI,IAAI,eAAe;AACjC,MAAK,KAAK,IAAI,IAAI,eAAe;AAEjC,UAAI,cAAc,eAAe,QAAQ;AACvC,YAAI,aAAa,cAAc,KAAK;AACpC,YAAI,IAAI,qBAAqB,KAAK,eAAe,IAAI,aAAa;AAElE,4BAAmB,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG;AACvD,YAAI,GAAG,KAAK,KAAK;AACjB,YAAI,GAAG,KAAK,KAAK;AACjB,4BAAmB,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG;AACvD,YAAI,GAAG,KAAK,KAAK;AACjB,YAAI,GAAG,KAAK,KAAK;AAAA;AAGnB,UAAI,YAAY,aAAa,QAAQ;AACnC,YAAI,aAAa,cAAc,KAAK;AACpC,YAAI,IAAI,qBAAqB,KAAK,eAAe,IAAI,aAAa;AAElE,4BAAmB,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG;AACvD,YAAI,GAAG,KAAK,KAAK;AACjB,YAAI,GAAG,KAAK,KAAK;AACjB,4BAAmB,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG;AACvD,YAAI,GAAG,KAAK,KAAK;AACjB,YAAI,GAAG,KAAK,KAAK;AAAA;AAInB,MAAK,KAAK,WAAW,IAAI,IAAI;AAC7B,MAAK,KAAK,WAAW,IAAI,IAAI;AAC7B,MAAK,KAAK,WAAW,IAAI,IAAI;AAAA,WAE1B;AACD,MAAK,KAAK,KAAK,IAAI,eAAe;AAClC,MAAK,KAAK,KAAK,IAAI,eAAe;AAClC,MAAK,IAAI,GAAG,KAAK,IAAI,KAAK;AAC1B,MAAK,UAAU,GAAG;AAElB,UAAI,cAAc,eAAe,QAAQ;AACvC,YAAI,aAAa,cAAc,KAAK;AACpC,QAAK,YAAY,KAAK,IAAI,KAAK,IAAI,GAAG,aAAa;AAAA;AAGrD,UAAI,YAAY,aAAa,QAAQ;AACnC,YAAI,aAAa,cAAc,KAAK;AACpC,QAAK,YAAY,KAAK,IAAI,KAAK,IAAI,GAAG,CAAC,aAAa;AAAA;AAGtD,MAAK,KAAK,WAAW,IAAI,KAAK;AAC9B,MAAK,KAAK,WAAW,IAAI,KAAK;AAAA;AAAA;AAAA;;;AClItC,wBAAwB,UAAU;AAChC,SAAO,SAAS,SAAS;AAAA;AAG3B,IAAI,YAEJ,SAAU,QAAQ;AAChB,YAAU,YAAW;AAErB,wBAAqB;AACnB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,WAAU;AACvB,WAAO;AAAA;AAGT,aAAU,UAAU,OAAO,SAAU,SAAS,KAAK;AACjD,QAAI,aAAa,IAAI;AACrB,QAAI,WAAW,IAAI;AACnB,QAAI,QAAQ,KAAK;AACjB,SAAK,cAAc,IAAI,uBAAe,IAAI;AAC1C,SAAK,kBAAkB;AAAA,MACrB,QAAQ;AAAA;AAEV,UAAM,IAAI,WAAW;AACrB,UAAM,IAAI,SAAS;AACnB,SAAK,cAAc;AACnB,SAAK,YAAY;AACjB,SAAK,eAAe;AAAA;AAGtB,aAAU,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK;AAChE,QAAI,QAAQ;AAEZ,QAAI,WAAW,YAAY;AAC3B,SAAK,SAAS;AACd,QAAI,aAAa,KAAK;AACtB,QAAI,WAAW,KAAK;AACpB,QAAI,QAAQ,KAAK;AAEjB,QAAI,eAAe,WAAW;AAC5B,UAAI,eAAe;AAAA,QACjB,GAAG,SAAS;AAAA,QACZ,GAAG,SAAS;AAAA,QACZ,QAAQ,SAAS;AAAA,QACjB,QAAQ,SAAS;AAAA;AAGnB,UAAI,KAAK,cAAc;AACrB,cAAM,KAAK;AAAA,aACN;AACL,QAAQ,YAAY,OAAO,cAAc;AAAA;AAAA;AAK7C,eAAW,YAAY,YAAY,mBAAmB;AACtD,QAAI,OAAO,YAAY;AACvB,eAAW,WAAW;AACtB,QAAI,WAAW,YAAY;AAE3B,aAAS,WAAW;AAEpB,SAAK;AAEL,SAAK,kBAAkB,aAAa,SAAS;AAE7C,iBAAa,KAAK;AAClB,QAAI,eAAc,YAAY;AAC9B,QAAI,kBAAkB,YAAY,IAAI,CAAC,SAAS;AAEhD,QAAI,cAAa;AACf,WAAK,2BAA2B,cAAa;AAAA;AAG/C,SAAK,MAAM,SAAS,SAAU,MAAM;AAClC,UAAI,MAAM,KAAK;AACf,UAAI,KAAK,KAAK;AACd,UAAI,YAAY,KAAK;AAErB,SAAG,IAAI,QAAQ,IAAI;AACnB,UAAI,YAAY,UAAU,IAAI;AAE9B,UAAI,WAAW;AACb,WAAG,GAAG,QAAQ,WAAY;AACxB,cAAI,cAAa;AACf,yBAAY;AACZ,aAAC,MAAM,cAAc,MAAM,2BAA2B,cAAa;AACnE,yBAAY,SAAS;AAErB,iBAAK,cAAc,KAAK,CAAC,GAAG,GAAG,GAAG;AAAA;AAAA,WAEnC,GAAG,WAAW,WAAY;AAC3B,cAAI,cAAa;AACf,yBAAY,WAAW;AAAA;AAAA;AAAA;AAK7B,SAAG,aAAa,aAAa,CAAC,CAAC;AAC/B,UAAI,QAAQ,UAAU,IAAI,CAAC,YAAY;AAEvC,UAAI,UAAU,aAAa;AACzB,kBAAU,IAAI,QAAQ,KAAK;AAAA;AAAA;AAG/B,SAAK,MAAM,SAAS,SAAU,MAAM;AAClC,UAAI,KAAK,KAAK;AACd,UAAI,QAAQ,KAAK,WAAW,IAAI,CAAC,YAAY;AAE7C,UAAI,UAAU,aAAa;AACzB,kBAAU,IAAI,QAAQ;AAAA,UACpB,MAAM,CAAC,KAAK;AAAA,UACZ,MAAM,CAAC,KAAK,MAAM,WAAW,KAAK,MAAM;AAAA;AAAA;AAAA;AAI9C,QAAI,sBAAsB,YAAY,IAAI,cAAc,cAAc,YAAY,IAAI,CAAC,YAAY;AACnG,QAAI,KAAK,KAAK,UAAU;AACxB,QAAI,KAAK,KAAK,UAAU;AACxB,SAAK,kBAAkB,SAAU,IAAI,KAAK;AACxC,UAAI,YAAY,KAAK,aAAa;AAClC,UAAI,cAAc,UAAU,IAAI,CAAC,SAAS,cAAc;AACxD,UAAI,aAAa,GAAG;AAEpB,UAAI,qBAAqB;AACvB,YAAI,MAAM,KAAK,cAAc;AAC7B,YAAI,MAAM,KAAK,MAAM,IAAI,KAAK,IAAI,IAAI,KAAK;AAE3C,YAAI,MAAM,GAAG;AACX,gBAAM,KAAK,KAAK,IAAI;AAAA;AAGtB,YAAI,SAAS,IAAI,KAAK;AAEtB,YAAI,QAAQ;AACV,gBAAM,MAAM,KAAK;AAAA;AAGnB,YAAI,eAAe,SAAS,SAAS;AACrC,mBAAW,cAAc;AAAA,UACvB,UAAU,CAAC;AAAA,UACX,UAAU;AAAA,UACV,QAAQ;AAAA;AAEV,YAAI,gBAAgB,WAAW,YAAY;AAC3C,QAAO,OAAO,cAAc,cAAe,eAAc,aAAa,KAAK;AAAA,UACzE,UAAU;AAAA;AAAA,aAEP;AACL,mBAAW,cAAc;AAAA,UACvB,UAAU,eAAe,KAAK,KAAK;AAAA;AAAA;AAAA;AAIzC,SAAK,eAAe;AAAA;AAGtB,aAAU,UAAU,UAAU,WAAY;AACxC,SAAK,eAAe,KAAK,YAAY;AACrC,SAAK,kBAAkB;AAAA;AAGzB,aAAU,UAAU,6BAA6B,SAAU,cAAa,iBAAiB;AACvF,QAAI,OAAO;AAEX,IAAC,iBAAgB;AACf,mBAAY,KAAK,SAAU,SAAS;AAClC,aAAK,aAAa,KAAK;AACvB,QAAC,MAAK,aAAa,CAAC,YAAa,mBAAkB,KAAK,iBAAiB,WAAW,MAAM,MAAM;AAAA;AAAA;AAAA;AAKtG,aAAU,UAAU,oBAAoB,SAAU,aAAa,SAAS,KAAK;AAC3E,QAAI,QAAQ;AAEZ,QAAI,aAAa,KAAK;AACtB,QAAI,iBAAiB,KAAK;AAC1B,QAAI,QAAQ,KAAK;AACjB,eAAW,kBAAkB,SAAU,GAAG,GAAG,GAAG;AAC9C,UAAI,OAAO,MAAM;AACjB,WAAK,eAAe,MAAM;AAC1B,aAAO,KAAK,QAAQ,GAAG,MAAM,CAAC,oBAAoB,GAAG,KAAK;AAAA;AAG5D,QAAI,CAAC,eAAe,YAAY,mBAAmB;AACjD,iBAAW;AACX;AAAA;AAGF,eAAW,OAAO,YAAY,IAAI;AAClC,mBAAe,YAAY,YAAY,IAAI;AAC3C,mBAAe,OAAO,YAAY,iBAAiB;AACnD,eAAW,IAAI,OAAO,IAAI,QAAQ,GAAG,OAAO,SAAU,GAAG;AACvD,MAAW,gBAAgB,gBAAgB,EAAE,IAAI,EAAE;AACnD,UAAI,eAAe;AAAA,QACjB,UAAU,YAAY;AAAA,QACtB,MAAM;AAAA,QACN,IAAI,EAAE;AAAA,QACN,IAAI,EAAE;AAAA;AAAA,OAEP,GAAG,QAAQ,SAAU,GAAG;AACzB,MAAW,iBAAiB,gBAAgB,EAAE,OAAO,EAAE,SAAS,EAAE;AAClE,UAAI,eAAe;AAAA,QACjB,UAAU,YAAY;AAAA,QACtB,MAAM;AAAA,QACN,MAAM,EAAE;AAAA,QACR,SAAS,EAAE;AAAA,QACX,SAAS,EAAE;AAAA;AAGb,YAAM;AAEN,iBAAW,YAAY,YAAY,mBAAmB;AAEtD,YAAM,UAAU;AAGhB,UAAI;AAAA;AAAA;AAIR,aAAU,UAAU,0BAA0B,WAAY;AACxD,QAAI,cAAc,KAAK;AACvB,QAAI,OAAO,YAAY;AACvB,QAAI,YAAY,mBAAmB;AACnC,SAAK,kBAAkB,SAAU,IAAI,KAAK;AACxC,SAAG,eAAe;AAAA;AAAA;AAItB,aAAU,UAAU,eAAe,SAAU,aAAa;AACxD,eAAW,YAAY,YAAY,mBAAmB;AAEtD,SAAK,YAAY;AAEjB,SAAK,UAAU;AAAA;AAGjB,aAAU,UAAU,SAAS,SAAU,SAAS,KAAK;AACnD,SAAK,eAAe,KAAK,YAAY;AACrC,SAAK,aAAa,KAAK,UAAU;AAAA;AAGnC,aAAU,OAAO;AACjB,SAAO;AAAA,EACP;AAEF,IAAO,oBAAQ;;;AC9PA,iCAAiC,OAAO,OAAO,aAAa,UAAU,YAAY;AAG/F,MAAI,QAAQ,IAAI,cAAM;AAEtB,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,UAAM,QAAQ,AAAO,SACrB,MAAM,GAAG,IAAI,MAAM,GAAG,MAAM,IAAI;AAAA;AAGlC,MAAI,eAAe;AACnB,MAAI,aAAa;AACjB,MAAI,YAAY;AAEhB,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,QAAI,OAAO,MAAM;AACjB,QAAI,SAAS,KAAK;AAClB,QAAI,SAAS,KAAK;AAElB,QAAI,MAAM,QAAQ,QAAQ,QAAQ,YAAY;AAC5C,iBAAW,KAAK;AAChB,mBAAa,KAAK,AAAO,SAAS,oBAAoB,KAAK,IAAI,OAAO,SAAS,QAAQ;AACvF;AAAA;AAAA;AAIJ,MAAI,WAAW,YAAY,IAAI;AAC/B,MAAI;AAEJ,MAAI,aAAa,iBAAiB,aAAa,SAAS;AACtD,eAAW,yBAAiB,OAAO;AAAA,SAC9B;AACL,QAAI,eAAe,yBAAiB,IAAI;AACxC,QAAI,kBAAkB,eAAe,aAAa,cAAc,KAAK;AAIrE,QAAI,AAAO,QAAQ,iBAAiB,WAAW,GAAG;AAChD,sBAAgB,OAAO,CAAC;AAAA;AAG1B,QAAI,aAAa,wBAAwB,OAAO;AAAA,MAC9C;AAAA,MACA,cAAc,YAAY;AAAA,OACzB;AACH,eAAW,IAAI,mBAAW,YAAY;AACtC,aAAS,SAAS;AAAA;AAGpB,MAAI,WAAW,IAAI,mBAAW,CAAC,UAAU;AACzC,WAAS,SAAS,YAAY;AAC9B,gBAAc,WAAW,UAAU;AACnC,yBAAe;AAAA,IACb,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,OAAO;AAAA,MACL,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,IAER,WAAW;AAAA,MACT,MAAM;AAAA,MACN,MAAM;AAAA;AAAA;AAIV,QAAM;AACN,SAAO;AAAA;;;AC/DT,IAAI,mBAEJ,SAAU,QAAQ;AAChB,YAAU,mBAAkB;AAE5B,+BAA4B;AAC1B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,kBAAiB;AAC9B,UAAM,kBAAkB;AACxB,WAAO;AAAA;AAGT,oBAAiB,UAAU,OAAO,SAAU,QAAQ;AAClD,WAAO,UAAU,KAAK,MAAM,MAAM;AAElC,QAAI,OAAO;AAEX,iCAA6B;AAC3B,aAAO,KAAK;AAAA;AAId,SAAK,uBAAuB,IAAI,6BAAqB,mBAAmB;AACxE,SAAK,kBAAkB,OAAO,SAAS,OAAO;AAE9C,SAAK;AAAA;AAGP,oBAAiB,UAAU,cAAc,SAAU,QAAQ;AACzD,WAAO,UAAU,YAAY,MAAM,MAAM;AAEzC,SAAK,kBAAkB,OAAO,SAAS,OAAO;AAE9C,SAAK;AAAA;AAGP,oBAAiB,UAAU,uBAAuB,SAAU,QAAQ;AAClE,WAAO,UAAU,qBAAqB,MAAM,MAAM;AAElD,oBAAgB,QAAQ,aAAa,CAAC;AAAA;AAGxC,oBAAiB,UAAU,iBAAiB,SAAU,QAAQ,SAAS;AACrE,QAAI,QAAQ,OAAO,SAAS,OAAO,SAAS;AAC5C,QAAI,QAAQ,OAAO,QAAQ,OAAO,SAAS;AAC3C,QAAI,OAAO;AAEX,QAAI,SAAS,OAAO;AAElB,wBAAkB;AAClB,UAAI,QAAQ,wBAAwB,OAAO,OAAO,MAAM,MAAM;AAC9D,MAAO,KAAK,MAAM,OAAO,SAAU,MAAM;AACvC,kCAA0B,KAAK,OAAO,KAAK,OAAO,MAAM,KAAK;AAAA,SAC5D;AACH,aAAO,MAAM;AAAA;AAGf,wBAAoB,UAAU,UAAU;AAEtC,eAAS,WAAW,gBAAgB,SAAU,OAAO;AACnD,YAAI,mBAAmB,KAAK;AAC5B,YAAI,cAAc,MAAM,WAAW;AACnC,YAAI,gBAAgB,iBAAiB;AAErC,YAAI,eAAe;AACjB,wBAAc,cAAc,MAAM;AAClC,gBAAM,cAAc;AAAA;AAGtB,eAAO;AAAA;AAGT,UAAI,cAAc,cAAM,UAAU;AAElC,2BAAqB,MAAM,aAAa;AACtC,YAAI,QAAQ,YAAY,KAAK,MAAM,MAAM;AACzC,cAAM,oBAAoB;AAC1B,eAAO;AAAA;AAGT,eAAS,WAAW,gBAAgB,SAAU,OAAO;AACnD,cAAM,oBAAoB;AAC1B,cAAM,WAAW;AACjB,eAAO;AAAA;AAGT,iCAA2B,SAAS;AAClC,YAAI,WAAY,SAAQ,OAAO,WAAW,QAAQ,OAAO,UAAU;AACjE,cAAI,aAAa,QAAQ;AAEzB,cAAI,QAAQ,OAAO,SAAS;AAC1B,uBAAW,KAAK;AAAA,qBACP,QAAQ,OAAO,SAAS;AACjC,uBAAW,KAAK;AAAA;AAGlB,iBAAO;AAAA;AAGT,eAAO;AAAA;AAAA;AAAA;AAKb,oBAAiB,UAAU,WAAW,WAAY;AAChD,WAAO,KAAK,UAAU;AAAA;AAGxB,oBAAiB,UAAU,cAAc,WAAY;AACnD,WAAO,KAAK,WAAW;AAAA;AAGzB,oBAAiB,UAAU,oBAAoB,WAAY;AACzD,WAAO,KAAK;AAAA;AAGd,oBAAiB,UAAU,gBAAgB,SAAU,WAAW,gBAAgB,UAAU;AACxF,QAAI,aAAa,QAAQ;AACvB,UAAI,WAAW,KAAK;AACpB,UAAI,SAAS,KAAK,cAAc,WAAW;AAC3C,UAAI,OAAO,SAAS,MAAM,eAAe;AACzC,UAAI,aAAa,SAAS,QAAQ,KAAK,MAAM;AAC7C,UAAI,aAAa,SAAS,QAAQ,KAAK,MAAM;AAC7C,UAAI,UAAU;AACd,oBAAc,QAAQ,QAAQ,KAAK;AACnC,oBAAc,QAAQ,QAAQ,KAAK;AACnC,aAAO,oBAAoB,aAAa;AAAA,QACtC,MAAM,QAAQ,KAAK;AAAA,QACnB,OAAO,OAAO;AAAA,QACd,SAAS,OAAO,SAAS;AAAA;AAAA;AAK7B,QAAI,aAAa,2BAA2B;AAAA,MAC1C,QAAQ;AAAA,MACR;AAAA,MACA;AAAA;AAEF,WAAO;AAAA;AAGT,oBAAiB,UAAU,wBAAwB,WAAY;AAC7D,QAAI,aAAa,AAAO,IAAI,KAAK,OAAO,cAAc,IAAI,SAAU,UAAU;AAE5E,aAAO,SAAS,SAAS,OAAO,WAAW,AAAO,OAAO;AAAA,QACvD,OAAO;AAAA,SACN;AAAA;AAEL,QAAI,iBAAiB,IAAI,mBAAW,CAAC,UAAU;AAC/C,mBAAe,SAAS;AACxB,SAAK,kBAAkB;AACvB,SAAK,oBAAoB,eAAe,SAAS,SAAU,KAAK;AAC9D,aAAO,eAAe,aAAa;AAAA;AAAA;AAIvC,oBAAiB,UAAU,UAAU,SAAU,MAAM;AACnD,SAAK,OAAO,OAAO;AAAA;AAGrB,oBAAiB,UAAU,YAAY,SAAU,SAAQ;AACvD,SAAK,OAAO,SAAS;AAAA;AAGvB,oBAAiB,UAAU,qBAAqB,WAAY;AAC1D,WAAO,OAAO,UAAU,mBAAmB,KAAK,SAC7C,CAAE,MAAK,IAAI,cAAc,WAAW,KAAK,IAAI,CAAC,SAAS;AAAA;AAG5D,oBAAiB,OAAO;AACxB,oBAAiB,eAAe,CAAC,QAAQ,SAAS,OAAO,cAAc;AACvE,oBAAiB,gBAAgB;AAAA,IAC/B,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,kBAAkB;AAAA,IAMlB,iBAAiB;AAAA,IACjB,QAAQ;AAAA,IAER,UAAU;AAAA,MACR,aAAa;AAAA;AAAA,IAGf,OAAO;AAAA,MACL,YAAY;AAAA,MAEZ,WAAW,CAAC,GAAG;AAAA,MACf,SAAS;AAAA,MAET,UAAU;AAAA,MAEV,YAAY;AAAA,MACZ,iBAAiB;AAAA;AAAA,IAEnB,MAAM;AAAA,IACN,KAAK;AAAA,IAKL,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,YAAY,CAAC,QAAQ;AAAA,IACrB,gBAAgB;AAAA,IAChB,WAAW;AAAA,MACT,UAAU;AAAA,MACV,UAAU;AAAA;AAAA,IAEZ,WAAW;AAAA,IACX,MAAM;AAAA,IAEN,QAAQ;AAAA,IACR,MAAM;AAAA,IAEN,gBAAgB;AAAA,IAUhB,OAAO;AAAA,MACL,MAAM;AAAA,MACN,WAAW;AAAA;AAAA,IAEb,WAAW;AAAA,IACX,WAAW;AAAA,MACT,OAAO;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA;AAAA,IAEX,UAAU;AAAA,MACR,OAAO;AAAA,MACP,OAAO;AAAA,QACL,MAAM;AAAA;AAAA;AAAA,IAGV,QAAQ;AAAA,MACN,WAAW;AAAA,QACT,aAAa;AAAA;AAAA;AAAA;AAInB,SAAO;AAAA,EACP;AAEF,IAAO,sBAAQ;;;AChQf,IAAI,aAAa;AAAA,EACf,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA;AAEH,mBAAiB,WAAW;AACjC,YAAU,kBAAkB;AAC5B,YAAU,oBAAoB;AAC9B,YAAU,kBAAkB;AAC5B,YAAU,eAAe;AACzB,YAAU,eAAe;AACzB,YAAU,eAAe;AACzB,YAAU,eAAe,UAAU,SAAS,OAAO,mBAAmB;AACtE,YAAU,eAAe;AACzB,YAAU,yBAAyB,aAAa;AAAA,IAC9C,YAAY,aAAK;AAAA,IACjB,QAAQ;AAAA;AAGV,YAAU,eAAe;AAAA,IACvB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,KACP,WAAY;AAAA;AACf,YAAU,eAAe;AAAA,IACvB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,KACP,WAAY;AAAA;AAEf,YAAU,eAAe,YAAY,SAAU,SAAS,SAAS;AAC/D,YAAQ,cAAc;AAAA,MACpB,UAAU;AAAA,MACV,OAAO;AAAA,OACN,SAAU,aAAa;AACxB,UAAI,WAAW,YAAY;AAC3B,UAAI,MAAM,oBAAoB,UAAU;AACxC,kBAAY,aAAa,YAAY,UAAU,IAAI;AACnD,kBAAY,WAAW,YAAY,QAAQ,IAAI;AAAA;AAAA;AAAA;;;AC9CrD,IAAI,eAEJ,WAAY;AACV,2BAAwB;AACtB,SAAK,QAAQ;AACb,SAAK,QAAQ;AACb,SAAK,IAAI;AACT,SAAK,IAAI;AACT,SAAK,IAAI;AAAA;AAGX,SAAO;AAAA;AAGT,IAAI,cAEJ,SAAU,QAAQ;AAChB,YAAU,cAAa;AAEvB,wBAAqB,MAAM;AACzB,QAAI,QAAQ,OAAO,KAAK,MAAM,SAAS;AAEvC,UAAM,OAAO;AACb,WAAO;AAAA;AAGT,eAAY,UAAU,kBAAkB,WAAY;AAClD,WAAO,IAAI;AAAA;AAGb,eAAY,UAAU,YAAY,SAAU,KAAK,OAAO;AACtD,QAAI,WAAU,KAAK;AACnB,QAAI,WAAU,KAAK;AACnB,QAAI,IAAI,MAAM;AACd,QAAI,QAAQ,MAAM;AAClB,QAAI,QAAQ,MAAM;AAClB,QAAI,IAAI,MAAM,IAAI,SAAQ,SAAS,QAAS,UAAS,IAAI,IAAI,IAAI;AACjE,QAAI,IAAI,MAAM,IAAI,SAAQ,SAAS,QAAS,UAAS,IAAI,IAAI,IAAI;AACjE,YAAQ,MAAM,QAAQ,KAAK,KAAK;AAChC,QAAI,OAAO,GAAG;AACd,QAAI,OAAO,MAAM,IAAI,SAAQ,SAAS,OAAO,MAAM,IAAI,SAAQ,SAAS;AACxE,QAAI,OAAO,MAAM,IAAI,SAAQ,MAAM,SAAS,GAAG,MAAM,IAAI,SAAQ,MAAM,SAAS;AAChF,QAAI,OAAO,MAAM,IAAI,SAAQ,SAAS,OAAO,MAAM,IAAI,SAAQ,SAAS;AACxE,QAAI,OAAO,GAAG;AAAA;AAGhB,SAAO;AAAA,EACP;AAEF,IAAO,sBAAQ;;;ACvCf,uBAAuB,aAAa,KAAK;AACvC,MAAI,UAAS,YAAY,IAAI;AAC7B,MAAI,QAAQ,IAAI;AAChB,MAAI,SAAS,IAAI;AACjB,MAAI,OAAO,KAAK,IAAI,OAAO;AAC3B,MAAI,KAAK,cAAa,QAAO,IAAI,IAAI;AACrC,MAAI,KAAK,cAAa,QAAO,IAAI,IAAI;AACrC,MAAI,IAAI,cAAa,YAAY,IAAI,WAAW,OAAO;AACvD,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA;AAAA;AAIJ,qBAAqB,OAAO,gBAAgB;AAC1C,MAAI,QAAQ,SAAS,OAAO,KAAK,QAAQ;AAEzC,MAAI,gBAAgB;AAClB,QAAI,OAAO,mBAAmB,UAAU;AACtC,cAAQ,eAAe,QAAQ,WAAW;AAAA,eACjC,OAAO,mBAAmB,YAAY;AAC/C,cAAQ,eAAe;AAAA;AAAA;AAI3B,SAAO;AAAA;AAGT,IAAI,OAAM,KAAK,KAAK;AAEpB,IAAI,YAEJ,SAAU,QAAQ;AAChB,YAAU,YAAW;AAErB,wBAAqB;AACnB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,WAAU;AACvB,WAAO;AAAA;AAGT,aAAU,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK;AAChE,SAAK,MAAM;AACX,QAAI,YAAY,YAAY,IAAI,CAAC,YAAY,aAAa;AAC1D,QAAI,UAAU,cAAc,aAAa;AAEzC,SAAK,YAAY,aAAa,SAAS,KAAK,WAAW;AAEvD,SAAK,QAAQ,YAAY;AAAA;AAG3B,aAAU,UAAU,UAAU,WAAY;AAAA;AAE1C,aAAU,UAAU,cAAc,SAAU,aAAa,SAAS,KAAK,WAAW,SAAS;AACzF,QAAI,QAAQ,KAAK;AACjB,QAAI,YAAY,YAAY,IAAI;AAChC,QAAI,aAAa,CAAC,YAAY,IAAI,gBAAgB,MAAM,KAAK;AAC7D,QAAI,WAAW,CAAC,YAAY,IAAI,cAAc,MAAM,KAAK;AACzD,QAAI,gBAAgB,YAAY,SAAS;AACzC,QAAI,WAAW,cAAc,IAAI;AACjC,QAAI,WAAW,WAAW,kBAAkB;AAC5C,QAAI,WAAW,cAAc,IAAI;AACjC,QAAI,iBAAiB,cAAc,SAAS;AAC5C,QAAI,gBAAgB,eAAe,IAAI;AACvC,QAAI,iBAAiB,CAAG,aAAW,cAAc,SAAQ,aAAa,aAAa,OAAO,YAAW,cAAc;AACnH,QAAI,eAAe;AAEnB,aAAS,IAAI,GAAG,YAAY,IAAI,UAAU,QAAQ,KAAK;AAErD,UAAI,UAAU,KAAK,IAAI,KAAK,IAAI,UAAU,GAAG,IAAI,IAAI;AACrD,iBAAW,aAAa,iBAAiB;AACzC,UAAI,SAAS,IAAI,SAAS;AAAA,QACxB,OAAO;AAAA,UACL,YAAY;AAAA,UACZ;AAAA,UACA,IAAI,QAAQ;AAAA,UACZ,IAAI,QAAQ;AAAA,UACZ;AAAA,UACA,IAAI,QAAQ,IAAI;AAAA,UAChB,GAAG,QAAQ;AAAA;AAAA,QAEb,QAAQ;AAAA;AAEV,aAAO,SAAS;AAAA,QACd,MAAM,UAAU,GAAG;AAAA;AAErB,aAAO,SAAS,eAAe,aAE/B,CAAC,SAAS;AACV,YAAM,IAAI;AACV,qBAAe;AAAA;AAGjB,QAAI,WAAW,SAAU,UAAS;AAEhC,UAAI,YAAW,GAAG;AAChB,eAAO,UAAU,GAAG;AAAA;AAGtB,UAAI;AAEJ,WAAK,KAAI,GAAG,KAAI,UAAU,QAAQ,MAAK;AACrC,YAAI,UAAU,IAAG,MAAM,YAAY,QAAM,IAAI,IAAI,UAAU,KAAI,GAAG,MAAM,UAAS;AAC/E,iBAAO,UAAU,IAAG;AAAA;AAAA;AAKxB,aAAO,UAAU,KAAI,GAAG;AAAA;AAG1B,QAAI,CAAC,WAAW;AACd,UAAI,MAAM;AACV,mBAAa;AACb,iBAAW;AAAA;AAGb,SAAK,aAAa,aAAa,SAAS,KAAK,UAAU,SAAS,YAAY,UAAU,WAAW;AAEjG,SAAK,sBAAsB,aAAa,SAAS,KAAK,UAAU;AAEhE,SAAK,cAAc,aAAa;AAEhC,SAAK,eAAe,aAAa,SAAS,KAAK,UAAU,SAAS,YAAY,UAAU,WAAW;AAAA;AAGrG,aAAU,UAAU,eAAe,SAAU,aAAa,SAAS,KAAK,UAAU,SAAS,YAAY,UAAU,WAAW,eAAe;AACzI,QAAI,QAAQ,KAAK;AACjB,QAAI,KAAK,QAAQ;AACjB,QAAI,KAAK,QAAQ;AACjB,QAAI,IAAI,QAAQ;AAChB,QAAI,SAAS,CAAC,YAAY,IAAI;AAC9B,QAAI,SAAS,CAAC,YAAY,IAAI;AAC9B,QAAI,iBAAiB,YAAY,SAAS;AAC1C,QAAI,YAAY,YAAY,SAAS;AACrC,QAAI,aAAa,YAAY,SAAS;AACtC,QAAI,cAAc,YAAY,IAAI;AAClC,QAAI,iBAAiB,UAAU,IAAI;AACnC,QAAI,eAAe,cAAa,eAAe,IAAI,WAAW;AAC9D,QAAI,UAAU,cAAa,UAAU,IAAI,WAAW;AACpD,QAAI,QAAQ;AACZ,QAAI,OAAQ,YAAW,cAAc;AACrC,QAAI,UAAU,OAAO;AACrB,QAAI,iBAAiB,eAAe,SAAS,aAAa;AAC1D,QAAI,gBAAgB,UAAU,SAAS,aAAa;AACpD,QAAI,oBAAoB,eAAe,IAAI;AAC3C,QAAI;AACJ,QAAI;AAEJ,aAAS,IAAI,GAAG,KAAK,aAAa,KAAK;AACrC,cAAQ,KAAK,IAAI;AACjB,cAAQ,KAAK,IAAI;AAEjB,UAAI,eAAe,IAAI,SAAS;AAC9B,YAAI,WAAW,oBAAoB,oBAAoB,gBAAgB;AACvE,YAAI,YAAY,IAAY,aAAK;AAAA,UAC/B,OAAO;AAAA,YACL,IAAI,QAAS,KAAI,YAAY;AAAA,YAC7B,IAAI,QAAS,KAAI,YAAY;AAAA,YAC7B,IAAI,QAAS,KAAI,eAAe,YAAY;AAAA,YAC5C,IAAI,QAAS,KAAI,eAAe,YAAY;AAAA;AAAA,UAE9C,OAAO;AAAA,UACP,QAAQ;AAAA;AAGV,YAAI,eAAe,WAAW,QAAQ;AACpC,oBAAU,SAAS;AAAA,YACjB,QAAQ,SAAS,IAAI;AAAA;AAAA;AAIzB,cAAM,IAAI;AAAA;AAIZ,UAAI,WAAW,IAAI,SAAS;AAC1B,YAAI,WAAW,WAAW,IAAI,cAAc;AAC5C,YAAI,QAAQ,YAAY,MAAM,IAAI,cAAe,UAAS,UAAU,SAAS,WAAW,IAAI;AAC5F,YAAI,YAAY,SAAS,IAAI;AAC7B,cAAM,IAAI,IAAY,aAAK;AAAA,UACzB,OAAO,gBAAgB,YAAY;AAAA,YACjC,MAAM;AAAA,YACN,GAAG,QAAS,KAAI,eAAe,YAAY;AAAA,YAC3C,GAAG,QAAS,KAAI,eAAe,YAAY;AAAA,YAC3C,eAAe,QAAQ,OAAO,QAAQ,QAAQ,MAAM,WAAW;AAAA,YAC/D,OAAO,QAAQ,OAAO,SAAS,QAAQ,MAAM,UAAU;AAAA,aACtD;AAAA,YACD,cAAc;AAAA;AAAA,UAEhB,QAAQ;AAAA;AAAA;AAKZ,UAAI,UAAU,IAAI,WAAW,MAAM,aAAa;AAC9C,YAAI,WAAW,UAAU,IAAI;AAC7B,mBAAW,WAAW,WAAW,gBAAgB;AAEjD,iBAAS,IAAI,GAAG,KAAK,gBAAgB,KAAK;AACxC,kBAAQ,KAAK,IAAI;AACjB,kBAAQ,KAAK,IAAI;AACjB,cAAI,WAAW,IAAY,aAAK;AAAA,YAC9B,OAAO;AAAA,cACL,IAAI,QAAS,KAAI,YAAY;AAAA,cAC7B,IAAI,QAAS,KAAI,YAAY;AAAA,cAC7B,IAAI,QAAS,KAAI,UAAU,YAAY;AAAA,cACvC,IAAI,QAAS,KAAI,UAAU,YAAY;AAAA;AAAA,YAEzC,QAAQ;AAAA,YACR,OAAO;AAAA;AAGT,cAAI,cAAc,WAAW,QAAQ;AACnC,qBAAS,SAAS;AAAA,cAChB,QAAQ,SAAU,KAAI,IAAI,kBAAkB;AAAA;AAAA;AAIhD,gBAAM,IAAI;AACV,mBAAS;AAAA;AAGX,iBAAS;AAAA,aACJ;AACL,iBAAS;AAAA;AAAA;AAAA;AAKf,aAAU,UAAU,iBAAiB,SAAU,aAAa,SAAS,KAAK,UAAU,SAAS,YAAY,UAAU,WAAW,eAAe;AAC3I,QAAI,QAAQ,KAAK;AACjB,QAAI,UAAU,KAAK;AACnB,QAAI,kBAAkB,KAAK;AAC3B,QAAI,eAAe;AACnB,QAAI,eAAc,YAAY,IAAI,CAAC,WAAW;AAC9C,QAAI,gBAAgB,YAAY,SAAS;AACzC,QAAI,eAAe,cAAc,IAAI;AACrC,QAAI,OAAO,YAAY;AACvB,QAAI,WAAW,KAAK,aAAa;AACjC,QAAI,SAAS,CAAC,YAAY,IAAI;AAC9B,QAAI,SAAS,CAAC,YAAY,IAAI;AAC9B,QAAI,cAAc,CAAC,QAAQ;AAC3B,QAAI,cAAc,CAAC,YAAY;AAE/B,2BAAuB,KAAK,OAAO;AACjC,UAAI,YAAY,KAAK,aAAa;AAClC,UAAI,eAAe,UAAU,SAAS;AACtC,UAAI,eAAe,cAAa,aAAa,IAAI,UAAU,QAAQ;AACnE,UAAI,gBAAgB,cAAa,aAAa,IAAI,WAAW,QAAQ;AACrE,UAAI,aAAa,YAAY,IAAI,CAAC,WAAW;AAC7C,UAAI,gBAAgB,aAAa,IAAI;AACrC,UAAI,iBAAiB,cAAa,cAAc,IAAI,QAAQ;AAC5D,UAAI,iBAAiB,cAAa,cAAc,IAAI,QAAQ;AAC5D,UAAI,oBAAoB,aAAa,IAAI;AACzC,UAAI;AAEJ,UAAI,YAAY;AACd,kBAAU,aAAa,YAAY,iBAAiB,eAAe,GAAG,iBAAiB,eAAe,cAAc,eAAe,MAAM;AAAA,aACpI;AACL,kBAAU,IAAI,oBAAY;AAAA,UACxB,OAAO;AAAA,YACL,OAAO,CAAC,KAAK,KAAK;AAAA,YAClB,OAAO;AAAA,YACP,GAAG;AAAA,YACH,GAAG;AAAA,YACH,GAAG;AAAA;AAAA;AAAA;AAKT,cAAQ,WAAW,CAAE,SAAQ,KAAK,KAAK;AACvC,cAAQ,IAAI,QAAQ;AACpB,cAAQ,IAAI,QAAQ;AACpB,aAAO;AAAA;AAGT,4BAAwB,KAAK,WAAU;AACrC,UAAI,WAAW,cAAc,IAAI;AACjC,UAAI,eAAe,WAAW,kBAAkB;AAChD,UAAI,YAAY,cAAc,IAAI;AAClC,UAAI,gBAAgB,YAAY,cAAc,IAAI,WAAW,gBAAgB,KAAK;AAClF,UAAI,KAAK,YAAY,QAAQ,IAAI,gBAAgB,QAAQ,IAAK,OAAM,KAAK;AACzE,UAAI,IAAI,YAAY,QAAQ,IAAI,QAAQ,IAAI,MAAM;AAClD,UAAI,WAAW,IAAI,aAAa;AAAA,QAC9B,OAAO;AAAA,UACL;AAAA,UACA,UAAU;AAAA,UACV,IAAI,QAAQ;AAAA,UACZ,IAAI,QAAQ;AAAA,UACZ;AAAA,UACA;AAAA,UACA;AAAA;AAAA;AAGJ,mBAAc,UAAS,KAAK,SAAS,KAAK,IAAI,UAAU,OAAO;AAC/D,aAAO;AAAA;AAGT,QAAI,gBAAgB,cAAa;AAC/B,WAAK,KAAK,SAAS,IAAI,SAAU,KAAK;AACpC,YAAI,cAAa;AACf,cAAI,UAAU,cAAc,KAAK;AACjC,UAAQ,UAAU,SAAS;AAAA,YACzB,UAAU,CAAE,WAAU,KAAK,IAAI,UAAU,MAAM,aAAa,aAAa,QAAQ,KAAK,KAAK;AAAA,aAC1F;AACH,gBAAM,IAAI;AACV,eAAK,iBAAiB,KAAK;AAAA;AAG7B,YAAI,cAAc;AAChB,cAAI,WAAW,eAAe,KAAK;AACnC,cAAI,SAAS,cAAc,IAAI;AAC/B,UAAQ,UAAU,UAAU;AAAA,YAC1B,OAAO;AAAA,cACL,UAAU,UAAU,KAAK,IAAI,UAAU,MAAM,aAAa,aAAa;AAAA;AAAA,aAExE;AACH,gBAAM,IAAI;AAGV,0BAAgB,YAAY,aAAa,KAAK,UAAU,KAAK;AAC7D,uBAAa,OAAO;AAAA;AAAA,SAErB,OAAO,SAAU,QAAQ,QAAQ;AAClC,YAAI,cAAa;AACf,cAAI,kBAAkB,QAAQ,iBAAiB;AAC/C,cAAI,iBAAiB,kBAAkB,gBAAgB,WAAW;AAClE,cAAI,UAAU,cAAc,QAAQ;AACpC,kBAAQ,WAAW;AACnB,UAAQ,YAAY,SAAS;AAAA,YAC3B,UAAU,CAAE,WAAU,KAAK,IAAI,UAAU,SAAS,aAAa,aAAa,QAAQ,KAAK,KAAK;AAAA,aAC7F;AACH,gBAAM,IAAI;AACV,eAAK,iBAAiB,QAAQ;AAAA;AAGhC,YAAI,cAAc;AAChB,cAAI,mBAAmB,gBAAgB;AACvC,cAAI,mBAAmB,mBAAmB,iBAAiB,MAAM,WAAW;AAC5E,cAAI,WAAW,eAAe,QAAQ;AACtC,cAAI,SAAS,cAAc,IAAI;AAC/B,UAAQ,YAAY,UAAU;AAAA,YAC5B,OAAO;AAAA,cACL,UAAU,UAAU,KAAK,IAAI,UAAU,SAAS,aAAa,aAAa;AAAA;AAAA,aAE3E;AACH,gBAAM,IAAI;AAGV,0BAAgB,YAAY,aAAa,KAAK,UAAU,QAAQ;AAChE,uBAAa,UAAU;AAAA;AAAA,SAExB;AACH,WAAK,KAAK,SAAU,KAAK;AACvB,YAAI,YAAY,KAAK,aAAa;AAClC,YAAI,gBAAgB,UAAU,SAAS;AAEvC,YAAI,cAAa;AACf,cAAI,UAAU,KAAK,iBAAiB;AACpC,cAAI,cAAc,KAAK,cAAc,KAAK;AAC1C,cAAI,cAAc,YAAY;AAE9B,cAAI,mBAAmB,eAAS;AAC9B,gBAAI,YAAY,QAAQ;AACxB,oBAAQ,SAAS,OAAO;AAAA,cACtB,OAAO,UAAU;AAAA,cACjB,GAAG,UAAU;AAAA,cACb,GAAG,UAAU;AAAA,cACb,OAAO,UAAU;AAAA,cACjB,QAAQ,UAAU;AAAA,eACjB;AAAA,iBACE;AACL,oBAAQ,SAAS;AACjB,oBAAQ,SAAS,aAAa,QAAQ,SAAS;AAAA;AAGjD,kBAAQ,SAAS,UAAU,SAAS,CAAC,WAAW,cAAc;AAE9D,cAAI,QAAQ,MAAM,SAAS,QAAQ;AACjC,oBAAQ,SAAS,QAAQ,SAAS,UAAU,KAAK,IAAI,UAAU,MAAM,aAAa,CAAC,GAAG,IAAI;AAAA;AAG5F,kBAAQ,iBAAiB;AACzB,mCAAyB,SAAS;AAClC,8BAAoB,SAAS,cAAc,IAAI,UAAU,cAAc,IAAI;AAAA;AAG7E,YAAI,cAAc;AAChB,cAAI,WAAW,aAAa;AAC5B,mBAAS,SAAS,KAAK,cAAc,KAAK;AAC1C,mBAAS,SAAS,UAAU,SAAS,CAAC,YAAY,cAAc;AAChE,mBAAS,iBAAiB;AAC1B,mCAAyB,UAAU;AACnC,8BAAoB,UAAU,cAAc,IAAI,UAAU,cAAc,IAAI;AAAA;AAAA;AAGhF,WAAK,eAAe;AAAA;AAAA;AAIxB,aAAU,UAAU,gBAAgB,SAAU,aAAa,SAAS;AAClE,QAAI,cAAc,YAAY,SAAS;AACvC,QAAI,aAAa,YAAY,IAAI;AAEjC,QAAI,YAAY;AACd,UAAI,aAAa,YAAY,IAAI;AACjC,UAAI,aAAa,YAAY,IAAI;AACjC,UAAI,eAAe,YAAY,IAAI;AACnC,UAAI,mBAAmB,YAAY,IAAI;AACvC,UAAI,SAAS,aAAa,YAAY,QAAQ,KAAK,aAAa,IAAI,cAAa,aAAa,IAAI,QAAQ,IAAI,QAAQ,KAAK,aAAa,IAAI,cAAa,aAAa,IAAI,QAAQ,IAAI,YAAY,YAAY,MAAM;AACpN,aAAO,KAAK,YAAY,IAAI,eAAe,IAAI;AAC/C,aAAO,SAAS,YAAY,SAAS,aAAa;AAClD,WAAK,MAAM,IAAI;AAAA;AAAA;AAInB,aAAU,UAAU,wBAAwB,SAAU,aAAa,SAAS,KAAK,UAAU,SAAS;AAClG,QAAI,QAAQ;AAEZ,QAAI,OAAO,YAAY;AACvB,QAAI,WAAW,KAAK,aAAa;AACjC,QAAI,SAAS,CAAC,YAAY,IAAI;AAC9B,QAAI,SAAS,CAAC,YAAY,IAAI;AAC9B,QAAI,eAAe,IAAY;AAC/B,QAAI,cAAc;AAClB,QAAI,eAAe;AACnB,QAAI,eAAe,YAAY;AAC/B,QAAI,mBAAmB,YAAY,IAAI,CAAC,WAAW;AACnD,SAAK,KAAK,KAAK,OAAO,IAAI,SAAU,KAAK;AACvC,kBAAY,OAAO,IAAY,aAAK;AAAA,QAClC,QAAQ;AAAA;AAEV,mBAAa,OAAO,IAAY,aAAK;AAAA,QACnC,QAAQ;AAAA;AAAA,OAET,OAAO,SAAU,KAAK,QAAQ;AAC/B,kBAAY,OAAO,MAAM,UAAU;AACnC,mBAAa,OAAO,MAAM,WAAW;AAAA,OACpC;AACH,SAAK,KAAK,SAAU,KAAK;AACvB,UAAI,YAAY,KAAK,aAAa;AAClC,UAAI,QAAQ,KAAK,IAAI,UAAU;AAC/B,UAAI,YAAY,IAAY;AAC5B,UAAI,YAAY,SAAS,UAAU,OAAO,CAAC,QAAQ,SAAS,CAAC,GAAG,IAAI;AACpE,UAAI,iBAAiB,UAAU,SAAS;AAExC,UAAI,eAAe,IAAI,SAAS;AAC9B,YAAI,oBAAoB,eAAe,IAAI;AAC3C,YAAI,SAAS,QAAQ,KAAK,cAAa,kBAAkB,IAAI,QAAQ;AACrE,YAAI,SAAS,QAAQ,KAAK,cAAa,kBAAkB,IAAI,QAAQ;AACrE,YAAI,UAAU,YAAY;AAC1B,gBAAQ,KAAK;AAAA,UACX,IAAI,mBAAmB,IAAI;AAAA,UAC3B,OAAO,gBAAgB,gBAAgB;AAAA,YACrC,GAAG;AAAA,YACH,GAAG;AAAA,YACH,MAAM,KAAK,QAAQ;AAAA,YACnB,OAAO;AAAA,YACP,eAAe;AAAA,aACd;AAAA,YACD,cAAc;AAAA;AAAA;AAGlB,kBAAU,IAAI;AAAA;AAGhB,UAAI,kBAAkB,UAAU,SAAS;AAEzC,UAAI,gBAAgB,IAAI,SAAS;AAC/B,YAAI,qBAAqB,gBAAgB,IAAI;AAC7C,YAAI,UAAU,QAAQ,KAAK,cAAa,mBAAmB,IAAI,QAAQ;AACvE,YAAI,UAAU,QAAQ,KAAK,cAAa,mBAAmB,IAAI,QAAQ;AACvE,YAAI,QAAQ,cAAa,gBAAgB,IAAI,UAAU,QAAQ;AAC/D,YAAI,SAAS,cAAa,gBAAgB,IAAI,WAAW,QAAQ;AACjE,YAAI,cAAc,YAAY,IAAI,CAAC,YAAY,WAAW,KAAK,cAAc,KAAK,SAAS,OAAO;AAClG,YAAI,UAAU,aAAa;AAC3B,YAAI,cAAc,gBAAgB,IAAI;AACtC,gBAAQ,KAAK;AAAA,UACX,IAAI,mBAAmB,IAAI;AAAA,UAC3B,OAAO,gBAAgB,iBAAiB;AAAA,YACtC,GAAG;AAAA,YACH,GAAG;AAAA,YACH,MAAM,YAAY,OAAO;AAAA,YACzB,OAAO,MAAM,SAAS,OAAO;AAAA,YAC7B,QAAQ,MAAM,UAAU,OAAO;AAAA,YAC/B,OAAO;AAAA,YACP,eAAe;AAAA,aACd;AAAA,YACD,cAAc;AAAA;AAAA;AAGlB,+BAAuB,SAAS;AAAA,UAC9B,QAAQ;AAAA,WACP,OAAO,SAAU,QAAO;AACzB,iBAAO,YAAY,QAAO;AAAA;AAE5B,wBAAgB,kBAAkB,SAAS,KAAK,MAAM,aAAa;AAAA,UACjE,mBAAmB,SAAU,gBAAgB,QAAQ,UAAU,eAAe,KAAK,cAAc;AAC/F,mBAAO,YAAY,eAAe,aAAa,oBAAoB,OAAO;AAAA;AAAA;AAG9E,kBAAU,IAAI;AAAA;AAGhB,mBAAa,IAAI;AAAA;AAEnB,SAAK,MAAM,IAAI;AACf,SAAK,YAAY;AACjB,SAAK,aAAa;AAAA;AAGpB,aAAU,OAAO;AACjB,SAAO;AAAA,EACP;AAEF,IAAO,oBAAQ;;;AC/gBf,IAAI,mBAEJ,SAAU,QAAQ;AAChB,YAAU,mBAAkB;AAE5B,+BAA4B;AAC1B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,kBAAiB;AAC9B,UAAM,wBAAwB;AAC9B,WAAO;AAAA;AAGT,oBAAiB,UAAU,iBAAiB,SAAU,QAAQ,SAAS;AACrE,WAAO,uBAAuB,MAAM,CAAC;AAAA;AAGvC,oBAAiB,OAAO;AACxB,oBAAiB,gBAAgB;AAAA,IAC/B,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,SAAS;AAAA,IAET,QAAQ,CAAC,OAAO;AAAA,IAChB,iBAAiB;AAAA,IACjB,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,WAAW;AAAA,IAEX,KAAK;AAAA,IAEL,KAAK;AAAA,IAEL,aAAa;AAAA,IAEb,UAAU;AAAA,MAER,MAAM;AAAA,MACN,UAAU;AAAA,MACV,WAAW;AAAA,QACT,OAAO,CAAC,CAAC,GAAG;AAAA,QACZ,OAAO;AAAA;AAAA;AAAA,IAIX,UAAU;AAAA,MAER,MAAM;AAAA,MACN,SAAS;AAAA,MACT,OAAO;AAAA,MACP,UAAU;AAAA,MACV,MAAM;AAAA;AAAA,IAGR,WAAW;AAAA,MAET,MAAM;AAAA,MAEN,QAAQ;AAAA,MACR,UAAU;AAAA,MAEV,WAAW;AAAA,QACT,OAAO;AAAA,QACP,OAAO;AAAA,QACP,MAAM;AAAA;AAAA;AAAA,IAIV,UAAU;AAAA,MAER,MAAM;AAAA,MAEN,aAAa;AAAA,MAEb,QAAQ;AAAA,MACR,UAAU;AAAA,MAEV,WAAW;AAAA,QACT,OAAO;AAAA,QACP,OAAO;AAAA,QACP,MAAM;AAAA;AAAA;AAAA,IAGV,WAAW;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,MAEV,OAAO;AAAA,MACP,UAAU;AAAA;AAAA,IAEZ,SAAS;AAAA,MACP,MAAM;AAAA,MACN,cAAc,CAAC,GAAG;AAAA,MAClB,MAAM;AAAA,MACN,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,YAAY;AAAA;AAAA,IAEd,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,WAAW;AAAA,MACX,MAAM;AAAA,MACN,MAAM;AAAA,MACN,cAAc,CAAC,GAAG;AAAA,MAClB,YAAY;AAAA,MACZ,WAAW;AAAA,QACT,OAAO;AAAA,QACP,aAAa;AAAA,QACb,aAAa;AAAA;AAAA;AAAA,IAGjB,OAAO;AAAA,MACL,MAAM;AAAA,MAEN,cAAc,CAAC,GAAG;AAAA,MAElB,OAAO;AAAA,MACP,UAAU;AAAA,MACV,gBAAgB;AAAA;AAAA,IAElB,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,aAAa;AAAA,MACb,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,SAAS,CAAC,GAAG;AAAA,MAEb,cAAc,CAAC,GAAG;AAAA,MAGlB,OAAO;AAAA,MACP,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,gBAAgB;AAAA;AAAA;AAGpB,SAAO;AAAA,EACP;AAEF,IAAO,sBAAQ;;;AClJR,mBAAiB,WAAW;AACjC,YAAU,kBAAkB;AAC5B,YAAU,oBAAoB;AAAA;;;ACGhC,IAAI,oBAAoB,CAAC,aAAa;AAKtC,IAAI,cAEJ,SAAU,QAAQ;AAChB,YAAU,cAAa;AAEvB,wBAAqB,MAAM,KAAK;AAC9B,QAAI,QAAQ,OAAO,KAAK,SAAS;AAEjC,QAAI,UAAU;AACd,QAAI,YAAY,IAAY;AAC5B,QAAI,OAAO,IAAY;AACvB,YAAQ,eAAe;AAEvB,UAAM,iBAAiB;AAEvB,UAAM,WAAW,MAAM,KAAK;AAE5B,WAAO;AAAA;AAGT,eAAY,UAAU,aAAa,SAAU,MAAM,KAAK,aAAa;AACnE,QAAI,UAAU;AACd,QAAI,cAAc,KAAK;AACvB,QAAI,YAAY,KAAK,aAAa;AAClC,QAAI,WAAS,KAAK,cAAc;AAChC,QAAI,gBAAgB,UAAU,SAAS;AACvC,QAAI,UAAU,UAAU,IAAI;AAC5B,cAAU,WAAW,OAAO,IAAI;AAEhC,QAAI,CAAC,aAAa;AAChB,mBAAa;AAAA;AAIf,YAAQ,SAAS,KAAK,cAAc,KAAK;AACzC,YAAQ,MAAM,WAAW;AAEzB,QAAI,aAAa;AACf,cAAQ,SAAS;AAAA,QACf,QAAQ,SAAO;AAAA;AAEjB,cAAQ,MAAM,UAAU;AACxB,MAAQ,UAAU,SAAS;AAAA,QACzB,OAAO;AAAA,UACL;AAAA;AAAA,SAED,aAAa;AAAA,WACX;AACL,MAAQ,YAAY,SAAS;AAAA,QAC3B,OAAO;AAAA,UACL;AAAA;AAAA,QAEF,OAAO;AAAA,UACL,QAAQ,SAAO;AAAA;AAAA,SAEhB,aAAa;AAAA;AAGlB,6BAAyB,SAAS;AAElC,SAAK,aAAa,MAAM;AAExB,wBAAoB,MAAM,cAAc,IAAI,UAAU,cAAc,IAAI;AAAA;AAG1E,eAAY,UAAU,eAAe,SAAU,MAAM,KAAK;AACxD,QAAI,UAAU;AACd,QAAI,YAAY,KAAK;AACrB,QAAI,YAAY,QAAQ;AACxB,QAAI,cAAc,KAAK;AACvB,QAAI,YAAY,KAAK,aAAa;AAClC,QAAI,WAAS,KAAK,cAAc;AAChC,QAAI,eAAc,SAAO;AACzB,QAAI,QAAQ,KAAK,cAAc,KAAK;AACpC,QAAI,cAAc,MAAM;AACxB,kBACA,WAAW,qBAAqB,YAAY;AAAA,MAC1C,cAAc,KAAK;AAAA,MACnB,gBAAgB;AAAA,MAChB,gBAAgB,MAAM;AAAA,MACtB,aAAa,KAAK,QAAQ;AAAA,OACzB;AAAA,MACD,QAAQ;AAAA,QACN,OAAO,aAAY;AAAA,QACnB,eAAe,aAAY;AAAA;AAAA;AAG/B,YAAQ,cAAc;AAAA,MACpB,OAAO;AAAA,MACP,QAAQ,CAAC,CAAC,aAAY;AAAA,MACtB,cAAc;AAAA,MAEd,aAAa;AAAA;AAEf,QAAI,aAAa,aAAY;AAC7B,cAAU,SAAS;AAAA,MACjB,QAAQ;AAAA;AAEV,YAAQ,sBAAsB;AAAA,MAC5B,QAAQ,aAAa,IAAY,cAAM,WAAW,GAAG,IAAI,WAAW,GAAG,MAAM;AAAA;AAI/E,IAAQ,YAAY,WAAW;AAAA,MAC7B,OAAO;AAAA,QACL,GAAG,aAAY;AAAA,QACf,GAAG,aAAY;AAAA;AAAA,OAEhB,aAAa;AAChB,cAAU,KAAK;AAAA,MACb,UAAU,aAAY;AAAA,MACtB,SAAS,aAAY;AAAA,MACrB,SAAS,aAAY;AAAA,MACrB,IAAI;AAAA;AAEN,sBAAkB,SAAS,yBAAyB,YAAY;AAAA,MAE9D,QAAQ;AAAA;AAAA;AAIZ,SAAO;AAAA,EACC;AAEV,IAAI,aAEJ,SAAU,QAAQ;AAChB,YAAU,aAAY;AAEtB,yBAAsB;AACpB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,YAAW;AACxB,UAAM,wBAAwB;AAC9B,WAAO;AAAA;AAGT,cAAW,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK;AACjE,QAAI,OAAO,YAAY;AACvB,QAAI,UAAU,KAAK;AACnB,QAAI,QAAQ,KAAK;AACjB,SAAK,KAAK,SAAS,IAAI,SAAU,KAAK;AACpC,UAAI,cAAc,IAAI,YAAY,MAAM;AACxC,WAAK,iBAAiB,KAAK;AAC3B,YAAM,IAAI;AAAA,OACT,OAAO,SAAU,QAAQ,QAAQ;AAClC,UAAI,QAAQ,QAAQ,iBAAiB;AACrC,YAAM,WAAW,MAAM;AACvB,YAAM,IAAI;AACV,WAAK,iBAAiB,QAAQ;AAAA,OAC7B,OAAO,SAAU,KAAK;AACvB,UAAI,QAAQ,QAAQ,iBAAiB;AACrC,MAAQ,yBAAyB,OAAO,aAAa;AAAA,OACpD;AACH,SAAK,QAAQ;AAAA;AAGf,cAAW,UAAU,SAAS,WAAY;AACxC,SAAK,MAAM;AACX,SAAK,QAAQ;AAAA;AAGf,cAAW,UAAU,UAAU,WAAY;AAAA;AAE3C,cAAW,OAAO;AAClB,SAAO;AAAA,EACP;AAEF,IAAO,qBAAQ;;;AC5Kf,IAAI,oBAEJ,SAAU,QAAQ;AAChB,YAAU,oBAAmB;AAE7B,gCAA6B;AAC3B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,mBAAkB;AAC/B,WAAO;AAAA;AAGT,qBAAkB,UAAU,OAAO,SAAU,QAAQ;AACnD,WAAO,UAAU,KAAK,MAAM,MAAM;AAIlC,SAAK,uBAAuB,IAAI,6BAAqB,AAAO,KAAK,KAAK,SAAS,OAAO,AAAO,KAAK,KAAK,YAAY;AAEnH,SAAK,kBAAkB;AAAA;AAGzB,qBAAkB,UAAU,iBAAiB,SAAU,QAAQ,SAAS;AACtE,WAAO,uBAAuB,MAAM;AAAA,MAClC,iBAAiB,CAAC;AAAA,MAClB,iBAAiB,AAAO,MAAM,8BAA8B;AAAA;AAAA;AAIhE,qBAAkB,UAAU,oBAAoB,SAAU,QAAQ;AAEhE,oBAAgB,QAAQ,aAAa,CAAC;AACtC,QAAI,qBAAqB,OAAO;AAChC,QAAI,uBAAuB,OAAO,SAAS;AAE3C,uBAAmB,OAAO,mBAAmB,QAAQ,OAAO,MAAM;AAClE,yBAAqB,OAAO,qBAAqB,QAAQ,OAAO,SAAS,MAAM;AAAA;AAIjF,qBAAkB,UAAU,gBAAgB,SAAU,WAAW;AAC/D,QAAI,OAAO,KAAK;AAEhB,QAAI,SAAS,OAAO,UAAU,cAAc,KAAK,MAAM;AAEvD,QAAI,WAAW,KAAK,aAAa;AACjC,QAAI,OAAM,KAAK,OAAO;AAEtB,WAAO,UAAU,CAAC,OAAM,IAAI,CAAE,MAAK,IAAI,UAAU,aAAa,OAAM,KAAK,QAAQ;AACjF,WAAO,MAAM,KAAK;AAClB,WAAO;AAAA;AAGT,qBAAkB,OAAO;AACzB,qBAAkB,gBAAgB;AAAA,IAChC,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,iBAAiB;AAAA,IACjB,SAAS;AAAA,IACT,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IAMR,SAAS;AAAA,IACT,SAAS;AAAA,IACT,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,aAAa;AAAA,IACb,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAGZ,WAAW;AAAA,MACT,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,WAAW;AAAA,QAET,OAAO;AAAA;AAAA;AAAA,IAGX,WAAW;AAAA,MAET,aAAa;AAAA,MACb,aAAa;AAAA;AAAA,IAEf,UAAU;AAAA,MACR,OAAO;AAAA,QACL,MAAM;AAAA;AAAA;AAAA,IAGV,QAAQ;AAAA,MACN,WAAW;AAAA,QACT,aAAa;AAAA;AAAA;AAAA;AAInB,SAAO;AAAA,EACP;AAEF,IAAO,uBAAQ;;;AC/Gf,sBAAqB,aAAa,KAAK;AACrC,SAAO,AAAO,cAAc,YAAY,sBAAsB;AAAA,IAC5D,OAAO,IAAI;AAAA,IACX,QAAQ,IAAI;AAAA;AAAA;AAIhB,0BAA0B,MAAM,OAAM;AACpC,MAAI,WAAW,KAAK,aAAa;AACjC,MAAI,WAAW,KAAK,SAAS,UAAU,SAAU,KAAK;AACpD,WAAO;AAAA;AAET,MAAI,UAAU;AACd,MAAI,cAAc,UAAS;AAE3B,WAAS,IAAI,GAAG,OAAM,KAAK,SAAS,IAAI,MAAK,KAAK;AAChD,YAAQ,KAAK;AAAA;AAIf,MAAI,OAAO,UAAS,YAAY;AAC9B,YAAQ,KAAK;AAAA,aACJ,UAAS,QAAQ;AAC1B,YAAQ,KAAK,SAAU,GAAG,GAAG;AAC3B,aAAO,cAAc,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS;AAAA;AAAA;AAI5E,SAAO;AAAA;AAGT,qBAAqB,MAAM;AACzB,MAAI,cAAc,KAAK;AACvB,MAAI,SAAS,YAAY,IAAI;AAC7B,OAAK,KAAK,SAAU,KAAK;AACvB,QAAI,YAAY,KAAK,aAAa;AAClC,QAAI,aAAa,UAAU,SAAS;AACpC,QAAI,gBAAgB,WAAW,IAAI;AACnC,QAAI,iBAAiB,UAAU,SAAS;AACxC,QAAI,WAAS,KAAK,cAAc;AAChC,QAAI,SAAS,SAAO;AACpB,QAAI,gBAAgB,kBAAkB,WAAW,kBAAkB,YAAY,kBAAkB,YAAY,kBAAkB,gBAAgB,kBAAkB;AACjK,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI;AAEJ,QAAI,eAAe;AACjB,UAAI,kBAAkB,cAAc;AAClC,gBAAS,QAAO,GAAG,KAAK,OAAO,GAAG,MAAM,IAAI;AAC5C,gBAAS,QAAO,GAAG,KAAK,OAAO,GAAG,MAAM;AACxC,oBAAY;AAAA,iBACH,kBAAkB,eAAe;AAC1C,gBAAS,QAAO,GAAG,KAAK,OAAO,GAAG,MAAM,IAAI;AAC5C,gBAAS,QAAO,GAAG,KAAK,OAAO,GAAG,MAAM;AACxC,oBAAY;AAAA,aACP;AACL,gBAAS,QAAO,GAAG,KAAK,OAAO,GAAG,KAAK,OAAO,GAAG,KAAK,OAAO,GAAG,MAAM;AACtE,gBAAS,QAAO,GAAG,KAAK,OAAO,GAAG,KAAK,OAAO,GAAG,KAAK,OAAO,GAAG,MAAM;AACtE,oBAAY;AAAA;AAGd,mBAAa,CAAC,CAAC,OAAO,QAAQ,CAAC,OAAO;AAAA,WACjC;AACL,UAAI,KAAK;AACT,UAAI,KAAK;AACT,UAAI,KAAK;AACT,UAAI,KAAK;AACT,UAAI,eAAe,eAAe,IAAI;AAEtC,UAAI,MAAuC;AACzC,YAAI,WAAW,cAAc,CAAC,OAAO,UAAU,QAAQ,iBAAiB,IAAI;AAC1E,0BAAgB;AAChB,kBAAQ,KAAK;AAAA;AAGf,YAAI,WAAW,gBAAgB,CAAC,QAAQ,SAAS,QAAQ,iBAAiB,IAAI;AAC5E,0BAAgB;AAChB,kBAAQ,KAAK;AAAA;AAAA;AAIjB,UAAI,kBAAkB,QAAQ;AAE5B,aAAM,QAAO,GAAG,KAAK,OAAO,GAAG,MAAM;AACrC,aAAM,QAAO,GAAG,KAAK,OAAO,GAAG,MAAM;AACrC,aAAK,KAAK;AACV,gBAAQ,KAAK;AACb,oBAAY;AAAA,iBACH,kBAAkB,SAAS;AAEpC,aAAM,QAAO,GAAG,KAAK,OAAO,GAAG,MAAM;AACrC,aAAM,QAAO,GAAG,KAAK,OAAO,GAAG,MAAM;AACrC,aAAK,KAAK;AACV,gBAAQ,KAAK;AACb,oBAAY;AAAA,iBACH,kBAAkB,OAAO;AAElC,aAAM,QAAO,GAAG,KAAK,OAAO,GAAG,MAAM;AACrC,aAAM,QAAO,GAAG,KAAK,OAAO,GAAG,MAAM;AACrC,aAAK,KAAK;AACV,gBAAQ,KAAK;AACb,oBAAY;AAAA,iBACH,kBAAkB,UAAU;AAErC,aAAM,QAAO,GAAG,KAAK,OAAO,GAAG,MAAM;AACrC,aAAM,QAAO,GAAG,KAAK,OAAO,GAAG,MAAM;AACrC,aAAK,KAAK;AACV,gBAAQ,KAAK;AACb,oBAAY;AAAA,iBACH,kBAAkB,YAAY;AAEvC,aAAK,WAAW,eAAe,OAAO,GAAG,KAAK,OAAO,GAAG;AACxD,aAAK,WAAW,eAAe,OAAO,GAAG,KAAK,OAAO,GAAG;AAExD,YAAI,WAAW,cAAc;AAC3B,eAAK,KAAK;AACV,kBAAQ,KAAK;AACb,sBAAY;AAAA,eACP;AACL,eAAK,KAAK;AACV,kBAAQ,KAAK;AACb,sBAAY;AAAA;AAAA,iBAEL,kBAAkB,eAAe;AAE1C,aAAK,OAAO,GAAG;AACf,aAAK,OAAO,GAAG;AAEf,YAAI,WAAW,cAAc;AAC3B,eAAK,KAAK;AACV,kBAAQ,KAAK;AACb,sBAAY;AAAA,eACP;AACL,eAAK,KAAK;AACV,kBAAQ,KAAK;AACb,sBAAY;AAAA;AAAA,iBAEL,kBAAkB,WAAW;AAEtC,aAAK,OAAO,GAAG;AACf,aAAK,WAAW,eAAe,OAAO,GAAG,KAAK,OAAO,GAAG;AAExD,YAAI,WAAW,cAAc;AAC3B,eAAK,KAAK;AACV,kBAAQ,KAAK;AACb,sBAAY;AAAA,eACP;AACL,eAAK,KAAK;AACV,kBAAQ,KAAK;AACb,sBAAY;AAAA;AAAA,iBAEL,kBAAkB,cAAc;AAEzC,aAAK,WAAW,eAAe,OAAO,GAAG,KAAK,OAAO,GAAG;AACxD,aAAK,WAAW,eAAe,OAAO,GAAG,KAAK,OAAO,GAAG;AAExD,YAAI,WAAW,cAAc;AAC3B,eAAK,KAAK;AACV,kBAAQ,KAAK;AACb,sBAAY;AAAA,eACP;AACL,eAAK,KAAK;AACV,kBAAQ,KAAK;AACb,sBAAY;AAAA;AAAA,aAET;AAEL,aAAM,QAAO,GAAG,KAAK,OAAO,GAAG,MAAM;AACrC,aAAM,QAAO,GAAG,KAAK,OAAO,GAAG,MAAM;AAErC,YAAI,WAAW,cAAc;AAC3B,eAAK,KAAK;AACV,kBAAQ,KAAK;AACb,sBAAY;AAAA,eACP;AACL,eAAK,KAAK;AACV,kBAAQ,KAAK;AACb,sBAAY;AAAA;AAAA;AAIhB,UAAI,WAAW,cAAc;AAC3B,aAAK;AACL,gBAAQ;AAAA,aACH;AACL,aAAK;AACL,gBAAQ;AAAA;AAGV,mBAAa,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI;AAAA;AAG/B,aAAO,QAAQ;AAAA,MACb;AAAA,MACA,GAAG;AAAA,MACH,GAAG;AAAA,MACH,eAAe;AAAA,MACf;AAAA,MACA,QAAQ;AAAA;AAAA;AAAA;AAKC,sBAAsB,SAAS,KAAK;AACjD,UAAQ,iBAAiB,UAAU,SAAU,aAAa;AACxD,QAAI,OAAO,YAAY;AACvB,QAAI,WAAW,KAAK,aAAa;AACjC,QAAI,QAAO,YAAY,IAAI;AAC3B,QAAI,WAAW,aAAY,aAAa;AACxC,QAAI,SAAS,YAAY,IAAI;AAC7B,QAAI,YAAY,SAAS;AACzB,QAAI,aAAa,SAAS;AAC1B,QAAI,UAAU,iBAAiB,MAAM;AACrC,QAAI,IAAI,SAAS;AACjB,QAAI,IAAI,SAAS;AACjB,QAAI,aAAa,WAAW,eAAe,CAAC,cAAa,YAAY,IAAI,YAAY,aAAa,cAAa,YAAY,IAAI,YAAY,eAAe,CAAC,cAAa,YAAY,IAAI,YAAY,YAAY,cAAa,YAAY,IAAI,YAAY;AACzP,QAAI,aAAa,KAAK,cAAc;AACpC,QAAI,MAAM,YAAY,IAAI;AAC1B,QAAI,MAAM,YAAY,IAAI;AAE1B,QAAI,OAAO,MAAM;AACf,YAAM,KAAK,IAAI,WAAW,IAAI;AAAA;AAGhC,QAAI,OAAO,MAAM;AACf,YAAM,WAAW;AAAA;AAGnB,QAAI,cAAc,YAAY,IAAI;AAClC,QAAI,MAAM,YAAY,IAAI;AAC1B,QAAI,WAAW,WAAW,eAAe,YAAY;AACrD,QAAI,WAAY,YAAW,MAAO,MAAK,UAAU,MAAM,KAAK;AAE5D,QAAI,gBAAgB,SAAU,MAAK,QAAQ;AAEzC,UAAI,WAAW,cAAc;AAC3B,YAAI,QAAQ,KAAK,IAAI,UAAU,SAAQ;AACvC,YAAI,aAAa,UAAU,OAAO,CAAC,KAAK,MAAM,YAAY;AAC1D,YAAI,KAAK;AAET,gBAAQ;AAAA,eACD;AACH,iBAAK;AACL;AAAA,eAEG;AACH,iBAAK,IAAK,cAAa,cAAc;AACrC;AAAA,eAEG;AACH,iBAAK,IAAK,cAAa;AACvB;AAAA;AAGJ,eAAO,CAAC,CAAC,QAAQ,KAAK,CAAC,QAAQ,KAAK;AAAA;AAGtC,UAAI,MAAM,KAAK,IAAI,UAAU,SAAQ;AACrC,UAAI,YAAY,UAAU,KAAK,CAAC,KAAK,MAAM,YAAY;AACvD,UAAI;AAEJ,cAAQ;AAAA,aACD;AACH,eAAK;AACL;AAAA,aAEG;AACH,eAAK,IAAK,aAAY,aAAa;AACnC;AAAA,aAEG;AACH,eAAK,IAAI,YAAY;AACrB;AAAA;AAGJ,aAAO,CAAC,CAAC,IAAI,SAAS,CAAC,KAAK,WAAW;AAAA;AAGzC,QAAI,UAAS,aAAa;AAExB,iBAAW,CAAC;AACZ,YAAM,CAAC;AAEP,UAAI,WAAW,cAAc;AAC3B,aAAK;AAAA,aACA;AACL,aAAK;AAAA;AAGP,gBAAU,QAAQ;AAAA;AAGpB,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,UAAI,MAAM,QAAQ;AAClB,UAAI,UAAU,QAAQ,IAAI;AAC1B,UAAI,YAAY,KAAK,aAAa;AAElC,UAAI,WAAW,cAAc;AAC3B,YAAI,QAAQ,UAAU,IAAI,CAAC,aAAa;AAExC,YAAI,SAAS,MAAM;AACjB,kBAAQ;AAAA,eACH;AACL,kBAAQ,cAAa,OAAO;AAE5B,cAAI,UAAS,aAAa;AACxB,oBAAQ,CAAC;AAAA;AAAA;AAIb,YAAI,QAAQ,cAAc,KAAK;AAC/B,YAAI,MAAM,cAAc,SAAS,IAAI;AACrC,aAAK,QAAQ;AACb,aAAK,cAAc,KAAK;AAAA,UACtB,QAAQ,MAAM,OAAO,IAAI,QAAQ;AAAA;AAAA,aAE9B;AACL,YAAI,SAAS,UAAU,IAAI,CAAC,aAAa;AAEzC,YAAI,UAAU,MAAM;AAClB,mBAAS;AAAA,eACJ;AACL,mBAAS,cAAa,QAAQ;AAE9B,cAAI,UAAS,aAAa;AACxB,qBAAS,CAAC;AAAA;AAAA;AAId,YAAI,QAAQ,cAAc,KAAK;AAC/B,YAAI,MAAM,cAAc,SAAS,IAAI;AACrC,aAAK,SAAS;AACd,aAAK,cAAc,KAAK;AAAA,UACtB,QAAQ,MAAM,OAAO,IAAI,QAAQ;AAAA;AAAA;AAAA;AAKvC,gBAAY;AAAA;AAAA;;;AClVT,mBAAiB,WAAW;AACjC,YAAU,kBAAkB;AAC5B,YAAU,oBAAoB;AAC9B,YAAU,eAAe;AACzB,YAAU,kBAAkB,WAAW;AAAA;;;ACDzC,IAAI,iBAAiB;AAErB,IAAI,eAEJ,SAAU,QAAQ;AAChB,YAAU,eAAc;AAExB,2BAAwB;AACtB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,cAAa;AAC1B,UAAM,aAAa,IAAY;AAC/B,UAAM,eAAe;AACrB,WAAO;AAAA;AAGT,gBAAa,UAAU,OAAO,WAAY;AACxC,SAAK,MAAM,IAAI,KAAK;AAAA;AAOtB,gBAAa,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK,SAAS;AAC5E,QAAI,YAAY,KAAK;AACrB,QAAI,OAAO,YAAY;AACvB,QAAI,UAAU,KAAK;AACnB,QAAI,WAAW,YAAY;AAC3B,QAAI,aAAa,SAAS;AAC1B,QAAI,cAAc,iBAAgB;AAClC,SAAK,KAAK,SAAS,IAAI,KAAK,OAAO,QAAQ,OAAO,SAAQ;AAE1D,iBAAa,cAAc;AACzB,UAAI,OAAO,MAAM,MAAM,WAAW,cAAc,YAAY;AAC5D,qBAAe,MAAM,MAAM,cAAc;AAAA;AAG3C,oBAAgB,cAAc,cAAc;AAC1C,UAAI,OAAO,QAAQ,iBAAiB;AACpC,UAAI,SAAS,iBAAiB,MAAM,cAAc,YAAY;AAC9D,WAAK,iBAAiB,cAAc;AACpC,MAAQ,YAAY,MAAM;AAAA,QACxB,OAAO;AAAA,UACL;AAAA;AAAA,SAED,aAAa;AAChB,mBAAa;AACb,qBAAe,MAAM,MAAM,cAAc;AAAA;AAG3C,qBAAgB,cAAc;AAC5B,UAAI,OAAO,QAAQ,iBAAiB;AACpC,gBAAU,OAAO;AAAA;AAInB,QAAI,CAAC,KAAK,cAAc;AACtB,WAAK,eAAe;AACpB,UAAI,WAAW,oBAAoB,UAAU,aAAa,WAAY;AAEpE,mBAAW,WAAY;AACrB,oBAAU;AAAA;AAAA;AAGd,gBAAU,YAAY;AAAA;AAGxB,SAAK,QAAQ;AAAA;AAGf,gBAAa,UAAU,2BAA2B,SAAU,aAAa,SAAS,KAAK;AACrF,SAAK,eAAe;AACpB,SAAK,QAAQ;AAEb,SAAK,WAAW;AAAA;AAGlB,gBAAa,UAAU,oBAAoB,SAAU,YAAY,aAAa,SAAS;AACrF,QAAI,OAAO,YAAY;AACvB,QAAI,WAAW,YAAY;AAC3B,QAAI,aAAa,SAAS;AAC1B,QAAI,cAAc,iBAAgB;AAElC,aAAS,YAAY,WAAW,OAAO,YAAY,WAAW,KAAK,aAAa;AAC9E,UAAI,OAAO,MAAM,MAAM,KAAK,YAAY,WAAW,YAAY;AAC/D,WAAK,cAAc;AACnB,qBAAe,MAAM,MAAM,WAAW;AAAA;AAAA;AAI1C,gBAAa,UAAU,SAAS,WAAY;AAC1C,SAAK,cAAc,KAAK,WAAW;AACnC,SAAK,QAAQ;AAAA;AAGf,gBAAa,OAAO;AACpB,SAAO;AAAA,EACP;AAEF,6BAA6B,UAAU,aAAa,IAAI;AACtD,MAAI,gBAAgB,SAAS;AAC7B,MAAI,OAAO,SAAS;AACpB,MAAI,SAAS,IAAY,aAAK;AAAA,IAC5B,OAAO;AAAA,MACL,GAAG,KAAK;AAAA,MACR,GAAG,KAAK;AAAA,MACR,OAAO,KAAK;AAAA,MACZ,QAAQ,KAAK;AAAA;AAAA;AAGjB,MAAI,MAAM,cAAc,IAAI,cAAc,eAAe,UAAU;AACnE,SAAO,SAAS,KAAK;AACrB,EAAQ,UAAU,QAAQ;AAAA,IACxB,OAAO;AAAA,MACL,OAAO,KAAK;AAAA,MACZ,QAAQ,KAAK;AAAA;AAAA,KAEd,aAAa;AAChB,SAAO;AAAA;AAGT,0BAA0B,MAAM,WAAW,YAAY,UAAU;AAC/D,MAAI,SAAS;AAEb,WAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,QAAI,UAAU,WAAW;AACzB,QAAI,QAAQ,KAAK,IAAI,KAAK,aAAa,UAAU;AAEjD,QAAI,CAAC,aAAa,OAAO,SAAS,QAAQ,SAAS,OAAO;AACxD,aAAO,KAAK,SAAS,YAAY,OAAO;AAAA;AAAA;AAI5C,SAAO;AAAA;AAGT,eAAe,MAAM,WAAW,WAAW,YAAY,UAAU;AAC/D,MAAI,SAAS,iBAAiB,MAAM,WAAW,YAAY;AAC3D,MAAI,OAAO,IAAY,iBAAS;AAAA,IAC9B,OAAO;AAAA,MACL;AAAA;AAAA,IAGF,IAAI;AAAA;AAEN,YAAU,IAAI;AACd,OAAK,iBAAiB,WAAW;AACjC,SAAO;AAAA;AAGT,0BAAyB,aAAa;AACpC,MAAI,SAAS,YAAY,IAAI,UAAU;AACvC,aAAW,QAAS,UAAS;AAC7B,WAAS,gBAAgB;AACzB,QAAM,WAAY,UAAS;AAC3B,SAAO;AAAA,IACL;AAAA;AAAA;AAIJ,wBAAwB,IAAI,MAAM,WAAW,aAAa;AACxD,KAAG,SAAS,KAAK,cAAc,WAAW;AAC1C,KAAG,MAAM,OAAO;AAChB,KAAG,SAAS,UAAU,YAAY;AAClC,MAAI,YAAY,KAAK,aAAa;AAClC,MAAI,gBAAgB,UAAU,SAAS;AACvC,2BAAyB,IAAI,WAAW;AACxC,sBAAoB,IAAI,cAAc,IAAI,UAAU,cAAc,IAAI;AAAA;AAsBxE,sBAAsB,KAAK,UAAU;AACnC,SAAO,aAAa,aAAa,OAAO,OAAO,OAAO,QAAQ,MAAM;AAAA;AAGtE,IAAO,uBAAQ;;;ACpMf,IAAI,sBAEJ,SAAU,QAAQ;AAChB,YAAU,sBAAqB;AAE/B,kCAA+B;AAC7B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,qBAAoB;AACjC,UAAM,wBAAwB;AAC9B,UAAM,iBAAiB;AACvB,WAAO;AAAA;AAGT,uBAAoB,UAAU,iBAAiB,SAAU,QAAQ,SAAS;AACxE,WAAO,yBAAiB,MAAM,MAAM;AAAA,MAClC,oBAAoB,KAAK,mBAAmB,MAAM;AAAA;AAAA;AAUtD,uBAAoB,UAAU,6BAA6B,SAAU,aAAa;AAChF,QAAI,WAAW,KAAK;AACpB,QAAI,OAAO,KAAK;AAChB,QAAI,UAAU;AACd,aAAS,gBAAgB,MAAM,SAAU,gBAAgB,WAAW;AAClE,UAAI,gBAAgB,gBAAgB;AAClC,gBAAQ,KAAK,KAAK,YAAY;AAAA;AAAA;AAGlC,WAAO;AAAA;AAGT,uBAAoB,OAAO;AAC3B,uBAAoB,eAAe,CAAC;AACpC,uBAAoB,gBAAgB;AAAA,IAClC,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,OAAO;AAAA,MACL,MAAM;AAAA;AAAA,IAER,iBAAiB;AAAA,IACjB,eAAe;AAAA,IACf,WAAW;AAAA,MACT,OAAO;AAAA,MACP,SAAS;AAAA,MACT,MAAM;AAAA;AAAA,IAER,UAAU;AAAA,MACR,OAAO;AAAA,QACL,MAAM;AAAA;AAAA;AAAA,IAGV,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,iBAAiB;AAAA;AAEnB,SAAO;AAAA,EACP;AAEF,2BAA2B,aAAa;AAOtC,MAAI,gBAAgB,YAAY,QAAQ,aAAa,YAAY,YAAY,IAAI;AAEjF,MAAI,CAAC,eAAe;AAClB;AAAA;AAGF,MAAI,eAAe;AACnB,OAAK,cAAc,YAAY,SAAU,SAAS;AAChD,QAAI,eAAe,uBAAuB;AAC1C,iBAAa,WAAW;AAAA;AAE1B,SAAO;AAAA;AAGT,gCAAgC,SAAS;AACvC,SAAO,CAAC,QAAQ,QAAQ,OAAO;AAAA;AAGjC,IAAO,yBAAQ;;;ACjGf,IAAI,qBAAoB,CAAC,aAAa;AACtC,IAAI,iBAAiB;AAAA,EACnB,YAAY;AAAA,EACZ,OAAO,SAAU,aAAa,SAAS;AACrC,QAAI,WAAW,YAAY;AAC3B,QAAI,aAAa;AAAA,MACf,QAAQ,YAAY,IAAI,CAAC,aAAa;AAAA,MACtC,QAAQ,YAAY,IAAI;AAAA,MACxB,UAAU,YAAY,IAAI;AAAA;AAE5B,WAAO;AAAA,MACL,UAAU,SAAU,QAAQ,MAAM;AAChC,iBAAS,gBAAgB,MAAM,SAAU,aAAa,WAAW;AAC/D,cAAI,UAAU,WAAW;AAEzB,cAAI,gBAAgB,YAAY,KAAK,eAAe;AAClD,gBAAI,cAAc,KAAK,aAAa,WAAW,IAAI,oBAAmB;AACtE,2BAAe,QAAS,WAAU;AAAA;AAGpC,cAAI,cAAc,KAAK,uBAAuB,WAAW;AACzD,sBAAY,UAAU;AAAA,WACrB,OAAO,OAAO,OAAO;AAAA;AAAA;AAAA;AAAA;AAKhC,IAAO,yBAAQ;;;ACzBA,8BAA8B,QAAQ;AACnD,yBAAuB;AACvB,8BAA4B;AAAA;AAO9B,gCAAgC,QAAQ;AACtC,MAAI,OAAO,UAAU;AACnB;AAAA;AAGF,MAAI,oBAAoB;AACxB,EAAO,KAAK,OAAO,QAAQ,SAAU,WAAW;AAC9C,QAAI,aAAa,UAAU,SAAS,YAAY;AAC9C,0BAAoB;AAAA;AAAA;AAIxB,MAAI,mBAAmB;AACrB,WAAO,WAAW,CAAC;AAAA;AAAA;AASvB,qCAAqC,QAAQ;AAC3C,MAAI,OAAO,AAAU,iBAAiB,OAAO;AAC7C,EAAO,KAAK,MAAM,SAAU,YAAY;AACtC,QAAI,CAAC,AAAO,SAAS,aAAa;AAChC;AAAA;AAGF,QAAI,gBAAgB,WAAW,iBAAiB;AAChD,QAAI,iBAAiB,AAAU,iBAAiB,OAAO,UAAU;AAEjE,QAAI,kBAAkB,eAAe,qBAAqB;AACxD,MAAO,MAAM,YAAY,eAAe,qBAAqB;AAAA;AAAA;AAAA;;;ACxCnE,IAAI,kBAAkB;AAEtB,IAAI,gBAEJ,SAAU,QAAQ;AAChB,YAAU,eAAc;AAExB,2BAAwB;AACtB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,cAAa;AAC1B,WAAO;AAAA;AAGT,gBAAa,UAAU,SAAS,SAAU,eAAe,SAAS,KAAK;AACrE,SAAK,SAAS;AACd,SAAK,OAAO;AAEZ,QAAI,CAAC,KAAK,WAAW;AACnB,WAAK,YAAY;AACjB,WAAK,UAAU,SAAU,SAAS,WAAW;AAC3C,YAAI,QAAQ,GAAG,WAAW,KAAK,UAAU,aAAa,KAAK,SAAS;AAAA,SACnE;AAAA;AAGL,mBAAe,MAAM,4BAA4B,cAAc,IAAI,mBAAmB;AAAA;AAGxF,gBAAa,UAAU,UAAU,SAAU,SAAS,KAAK;AACvD,SAAK,KAAK,WAAW,SAAU,SAAS,WAAW;AACjD,UAAI,QAAQ,IAAI,WAAW;AAAA;AAE7B,SAAK,YAAY;AAAA;AAQnB,gBAAa,UAAU,2BAA2B,SAAU,KAAK;AAC/D,SAAK,gBAAgB;AAAA;AAOvB,gBAAa,UAAU,kBAAkB,SAAU,KAAK;AACtD,WAAO,KAAK,KAAK,eAAe,OAAO;AAAA,MACrC,MAAM;AAAA,OACL;AAAA;AAGL,gBAAa,OAAO;AACpB,SAAO;AAAA,EACP;AAEF,IAAI,WAAW;AAAA,EACb,WAAW,SAAU,GAAG;AACtB,QAAI,aAAa,MAAM,UAAU;AAC/B,WAAK,kBAAkB,CAAC,EAAE,SAAS,EAAE;AAAA;AAAA;AAAA,EAGzC,SAAS,SAAU,GAAG;AACpB,QAAI,iBAAiB,KAAK;AAE1B,QAAI,aAAa,MAAM,YAAY,gBAAgB;AACjD,UAAI,QAAQ,CAAC,EAAE,SAAS,EAAE;AAC1B,UAAI,QAAO,KAAK,IAAI,eAAe,KAAK,MAAM,IAAI,KAAK,KAAK,IAAI,eAAe,KAAK,MAAM,IAAI;AAE9F,UAAI,QAAO,iBAAiB;AAC1B;AAAA;AAGF,UAAI,SAAS,KAAK,OAAO,iBAAiB,0BAA0B,CAAC,EAAE,SAAS,EAAE;AAElF,aAAO,aAAa,UAAU,KAAK,gBAAgB;AAAA,QACjD,kBAAkB,OAAO;AAAA;AAAA;AAI7B,SAAK,kBAAkB;AAAA;AAAA,EAEzB,WAAW,SAAU,GAAG;AAEtB,QAAI,KAAK,mBAAmB,CAAC,aAAa,MAAM,cAAc;AAC5D;AAAA;AAGF,QAAI,QAAQ,KAAK;AACjB,QAAI,SAAS,MAAM,iBAAiB,0BAA0B,CAAC,EAAE,SAAS,EAAE;AAC5E,QAAI,WAAW,OAAO;AACtB,iBAAa,UAAU,KAAK,yBAAyB,iBAAiB,MAAM,IAAI;AAEhF,SAAK,yBAAyB,aAAa,SAAS,OAClD;AAAA,MACA,kBAAkB,OAAO;AAAA,MAEzB,WAAW,aAAa,SAAS,OAAO;AAAA,QACtC,UAAU;AAAA;AAAA;AAAA;AAAA;AAOlB,sBAAsB,MAAM,WAAW;AACrC,MAAI,QAAQ,KAAK;AACjB,SAAO,MAAM,IAAI,qBAAqB,MAAM,IAAI,2BAA2B;AAAA;AAG7E,IAAO,wBAAQ;;;AChHf,IAAI,gBAEJ,SAAU,QAAQ;AAChB,YAAU,gBAAe;AAEzB,4BAAyB;AACvB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,eAAc;AAC3B,WAAO;AAAA;AAGT,iBAAc,UAAU,OAAO,WAAY;AACzC,WAAO,UAAU,KAAK,MAAM,MAAM;AAElC,SAAK,YAAY;AAAA;AAGnB,iBAAc,UAAU,cAAc,SAAU,WAAW;AACzD,QAAI,aAAa,KAAK;AACtB,iBAAa,AAAO,MAAM,YAAY,WAAW;AAEjD,SAAK;AAAA;AAOP,iBAAc,UAAU,WAAW,SAAU,OAAO,SAAS;AAC3D,QAAI,gBAAgB,MAAM,IAAI;AAC9B,WAAO,iBAAiB,QAAQ,QAAQ,aAAa,YAAY,mBAAmB;AAAA;AAGtF,iBAAc,UAAU,gBAAgB,SAAU,KAAK;AACrD,IAAO,KAAK,CAAC,kBAAkB,oBAAoB,mBAAmB,mBAAmB,qBAAqB,SAAU,MAAM;AAC5H,UAAI,IAAI,eAAe,OAAO;AAE5B,aAAK,OAAO,QAAQ,IAAI;AAAA;AAAA,OAEzB;AAAA;AAGL,iBAAc,UAAU,kBAAkB,WAAY;AACpD,QAAI,aAAa,KAAK,aAAa;AACnC,QAAI,oBAAoB,KAAK,oBAAoB;AACjD,QAAI,aAAa,AAAO,OAAO,KAAK,QAAQ,gBAAgB;AAAA,MAC1D,UAAU;AAAA,QACR,SAAU,WAAW;AAGvB,aAAQ,WAAU,IAAI,oBAAoB,OAAO,KAAK;AAAA,OACrD;AACH,IAAO,KAAK,YAAY,SAAU,WAAW;AAC3C,iBAAW,KAAK,QAAQ,UAAU,IAAI;AACtC,wBAAkB,KAAK,UAAU;AAAA;AAAA;AAIrC,iBAAc,OAAO;AACrB,iBAAc,eAAe,CAAC;AAC9B,iBAAc,aAAa;AAC3B,iBAAc,gBAAgB;AAAA,IAC5B,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IAGR,QAAQ;AAAA,IAGR,gBAAgB;AAAA,IAChB,kBAAkB;AAAA,IAClB,iBAAiB;AAAA,IACjB,iBAAiB;AAAA,IACjB,gBAAgB;AAAA,IAChB,oBAAoB;AAAA,IAGpB,4BAA4B,CAAC,OAAO,MAAM;AAAA,IAC1C,qBAAqB;AAAA,IACrB,qBAAqB;AAAA;AAEvB,SAAO;AAAA,EACP;AAEF,IAAO,wBAAQ;;;AC1Ff,IAAI,eAEJ,SAAU,QAAQ;AAChB,YAAU,eAAc;AAExB,yBAAsB,KAAK,QAAO,aAAa,UAAU,WAAW;AAClE,QAAI,QAAQ,OAAO,KAAK,MAAM,KAAK,QAAO,gBAAgB;AAE1D,UAAM,OAAO,YAAY;AACzB,UAAM,YAAY;AAClB,WAAO;AAAA;AAGT,gBAAa,UAAU,eAAe,WAAY;AAChD,WAAO,KAAK,iBAAiB,WAAW,IAAI,cAAc;AAAA;AAG5D,SAAO;AAAA,EACP;AAEF,IAAO,uBAAQ;;;ACFA,oBAAoB,OAAO,YAAY,QAAQ,aAAa,SAAS,SAAS;AAC3F,UAAQ,SAAS;AACjB,MAAI,aAAa,OAAO,KAAK,OAAO;AAEpC,MAAI,WAAW,MAAM;AACnB,cAAU,SAAS,SAAS,CAAC,GAAG;AAAA;AAGlC,MAAI,WAAW,MAAM;AACnB,cAAU,KAAK,IAAI,SAAS,WAAW,OAAO,UAAU;AAAA;AAG1D,MAAI,gBAAgB,OAAO;AACzB,QAAI,aAAa,KAAK,IAAI,WAAW,KAAK,WAAW;AACrD,iBAAa,SAAS,YAAY,CAAC,GAAG;AACtC,cAAU,UAAU,SAAS,YAAY,CAAC,SAAS;AACnD,kBAAc;AAAA;AAGhB,aAAW,KAAK,SAAS,WAAW,IAAI;AACxC,aAAW,KAAK,SAAS,WAAW,IAAI;AACxC,MAAI,mBAAmB,YAAY,YAAY;AAC/C,aAAW,gBAAgB;AAE3B,MAAI,gBAAgB,WAAW;AAC/B,MAAI,aAAa,OAAO;AACxB,mBAAiB,OAAO,IAAI,WAAW,MAAM,gBAAgB,WAAW,MAAM;AAC9E,aAAW,eAAe,SAAS,WAAW,cAAc;AAE5D,MAAI;AACJ,iBAAe,YAAY,YAAY;AAEvC,MAAI,WAAW,QAAS,cAAa,SAAS,iBAAiB,QAAQ,aAAa,OAAO,UAAU;AAEnG,eAAW,IAAI,eAAe,WAAW,eAAe,iBAAiB,OAAO;AAAA;AAIlF,iBAAe,YAAY,YAAY;AAEvC,MAAI,WAAW,QAAQ,aAAa,OAAO,SAAS;AAClD,eAAW,IAAI,eAAe,WAAW,eAAe,aAAa,OAAO;AAAA;AAG9E,SAAO;AAAA;AAGT,qBAAqB,YAAY,aAAa;AAC5C,MAAI,QAAO,WAAW,eAAe,WAAW,IAAI;AAGpD,SAAO;AAAA,IACL,MAAM,KAAK,IAAI;AAAA,IACf,MAAM,QAAO,IAAI,KAAK,QAAO,IAAI,IAAI,cAAc,KAAK;AAAA;AAAA;AAI5D,kBAAkB,OAAO,SAAQ;AAC/B,SAAO,KAAK,IAAI,QAAO,MAAM,OAAO,QAAO,KAAK,UAAU,KAAK,IAAI,QAAO,MAAM,OAAO,QAAO,KAAK,WAAW;AAAA;;;AClEhH,IAAI,QAAc;AAClB,IAAI,WAAU,KAAK;AACnB,IAAI,WAAU,KAAK;AACnB,IAAI,YAAY,KAAK;AACrB,IAAI,WAAW,KAAK;AACpB,IAAI,SAAmB;AACvB,IAAI,MAAK,KAAK;AAEd,IAAI,WAEJ,WAAY;AACV,qBAAkB,eAAe,SAAS,KAAK;AAC7C,SAAK,OAAO;AAKZ,SAAK,WAAW,AAAO;AAMvB,SAAK,cAAc;AACnB,SAAK,aAAa,cAAc;AAChC,SAAK,SAAS;AAEd,SAAK,MAAM,eAAe,SAAS;AAAA;AAGrC,YAAS,UAAU,QAAQ,SAAU,eAAe,SAAS,KAAK;AAChE,QAAI,aAAa,cAAc;AAC/B,QAAI,oBAAoB,cAAc;AACtC,UAAK,YAAY,SAAU,KAAK,KAAK;AACnC,UAAI,YAAY,kBAAkB;AAClC,UAAI,YAAY,QAAQ,aAAa,gBAAgB;AAErD,UAAI,OAAO,KAAK,SAAS,IAAI,KAAK,IAAI,qBAAa,KAAK,AAAW,mBAAmB,YAAY,CAAC,GAAG,IAAI,UAAU,IAAI,SAAS;AAEjI,UAAI,aAAa,KAAK,SAAS;AAC/B,WAAK,SAAS,cAAc,UAAU,IAAI;AAC1C,WAAK,UAAU,UAAU,IAAI;AAE7B,gBAAU,OAAO;AACjB,WAAK,QAAQ;AACb,WAAK,mBAAmB,UAAU,mBAAmB;AAAA,OACpD;AAAA;AAOL,YAAS,UAAU,SAAS,SAAU,SAAS,KAAK;AAClD,SAAK,sBAAsB,KAAK,QAAQ;AAAA;AAG1C,YAAS,UAAU,eAAe,SAAU,OAAO;AACjD,QAAI,aAAa,KAAK;AAEtB,QAAI,WAAW,WAAW;AAC1B,QAAI,aAAa,WAAW;AAC5B,QAAI,gBAAgB,WAAW;AAC/B,QAAI,QAAQ,MAAM,IAAI;AACtB,QAAI,UAAU,MAAM;AACpB,WAAO,SAAS,YAAY,SAAS,WAAW,WAAW,cAAc,WAAW,cAAc,WAAW,aAAa,WAAW;AAAA;AAGvI,YAAS,UAAU,WAAW,WAAY;AACxC,WAAO,KAAK;AAAA;AAOd,YAAS,UAAU,wBAAwB,SAAU,eAAe,SAAS;AAC3E,YAAQ,WAAW,SAAU,aAAa;AACxC,UAAI,CAAC,cAAc,SAAS,aAAa,UAAU;AACjD;AAAA;AAGF,UAAI,OAAO,YAAY;AACvB,YAAK,KAAK,YAAY,SAAU,KAAK;AACnC,YAAI,OAAO,KAAK,SAAS,IAAI;AAE7B,aAAK,MAAM,oBAAoB,MAAM,KAAK,aAAa;AACvD,QAAW,gBAAgB,KAAK,OAAO,KAAK;AAAA,SAC3C;AAAA,OACF;AAAA;AAOL,YAAS,UAAU,SAAS,SAAU,eAAe,KAAK;AACxD,SAAK,QAAQ,AAAW,cAAc,cAAc,sBAAsB;AAAA,MACxE,OAAO,IAAI;AAAA,MACX,QAAQ,IAAI;AAAA;AAGd,SAAK;AAAA;AAGP,YAAS,UAAU,UAAU,WAAY;AACvC,WAAO,KAAK;AAAA;AAGd,YAAS,UAAU,kBAAkB,WAAY;AAC/C,QAAI,gBAAgB,KAAK;AACzB,QAAI,OAAO,KAAK;AAChB,QAAI,KAAK,CAAC,KAAK;AACf,QAAI,KAAK,CAAC,SAAS;AACnB,QAAI,WAAS,cAAc,IAAI;AAC/B,QAAI,gBAAgB,aAAW,eAAe,IAAI;AAClD,QAAI,eAAe,KAAK,GAAG;AAC3B,QAAI,eAAe,CAAC,GAAG;AACvB,QAAI,YAAY,KAAK,WAAW;AAChC,QAAI,kBAAkB,UAAS,cAAc,IAAI,oBAAoB;AACrE,QAAI,kBAAkB,UAAS,cAAc,IAAI,sBAAsB,GAAG,CAAC,GAAG;AAC9E,QAAI,iBAAiB,cAAc,IAAI,qBAAqB,YAAY,KAAK,YAAY,mBAAmB,kBAAkB,KAAK,kBAAkB,KAAK,eAAe;AAIzK,QAAI,mBAAmB,cAAc,IAAI;AACzC,QAAI;AAEJ,QAAI,CAAC,kBAAkB;AACrB,gBAAU,UAAS,kBAAmB,mBAAkB,IAAI;AAC5D,UAAI,mBAAmB,cAAc,IAAI,uBAAuB,UAAU,YAAY;AACtF,yBAAmB,CAAC,kBAAkB,mBAAmB,UAAU;AACnE,uBAAiB,KAAK,iBAAiB,KAAK;AAAA,WACvC;AACL,gBAAU,UAAS,iBAAiB,KAAK,iBAAiB,IAAI;AAC9D,uBAAiB,KAAK,iBAAiB,KAAK;AAAA;AAG9C,QAAI,oBAAqB,gBAAe,WAAY,aAAY;AAEhE,wBAAoB,KAAM,qBAAoB;AAE9C,QAAI,kBAAkB,CAAC,UAAU,OAAM,iBAAiB,KAAK,iBAAiB,MAAM,GAAG,SAAS,OAAM,iBAAiB,KAAK,iBAAiB,MAAM;AAEnJ,QAAI,uBAAuB,oBAAoB,kBAAkB,iBAAiB;AAClF,WAAO;AAAA,MACL,QAAQ;AAAA,MACR;AAAA,MACA,YAAY,KAAK,GAAG;AAAA,MACpB;AAAA,MACA,UAAU,KAAK,GAAG,IAAI;AAAA,MACtB,YAAY,KAAK,GAAG,IAAI;AAAA,MACxB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAIJ,YAAS,UAAU,cAAc,WAAY;AAC3C,QAAI,OAAO,KAAK;AAChB,QAAI,OAAO,KAAK;AAChB,QAAI,aAAa,KAAK;AAEtB,QAAI,aAAa,KAAK;AAEtB,QAAI,WAAS,WAAW;AACxB,SAAK,KAAK,SAAU,MAAM;AACxB,UAAI,aAAa,CAAC,GAAG,WAAW;AAChC,UAAI,MAAM,KAAK,UAAU,IAAI;AAC7B,WAAK,UAAU,WAAW,MAAM,WAAW,IAAI;AAAA;AAEjD,UAAK,YAAY,SAAU,KAAK,KAAK;AACnC,UAAI,UAAW,YAAW,iBAAiB,uBAAuB,yBAAyB,KAAK;AAChG,UAAI,gBAAgB;AAAA,QAClB,YAAY;AAAA,UACV,GAAG,QAAQ;AAAA,UACX,GAAG,WAAW;AAAA;AAAA,QAEhB,UAAU;AAAA,UACR,GAAG;AAAA,UACH,GAAG,QAAQ;AAAA;AAAA;AAGf,UAAI,gBAAgB;AAAA,QAClB,YAAY,MAAK;AAAA,QACjB,UAAU;AAAA;AAEZ,UAAI,YAAW,CAAC,cAAc,UAAQ,IAAI,KAAK,GAAG,cAAc,UAAQ,IAAI,KAAK;AACjF,UAAI,WAAW,cAAc;AAC7B,UAAI,aAAY,AAAO;AACvB,MAAO,OAAO,YAAW,YAAW;AACpC,MAAO,UAAU,YAAW,YAAW;AAKvC,WAAK,YAAY,OAAO;AAAA,QACtB,UAAU;AAAA,QACV;AAAA,QACA,WAAW;AAAA,QACX,wBAAwB,QAAQ;AAAA,QAChC,eAAe,QAAQ;AAAA,QACvB,sBAAsB,QAAQ;AAAA,QAC9B,eAAe;AAAA,QACf,gBAAgB;AAAA;AAAA,OAEjB;AAAA;AAOL,YAAS,UAAU,UAAU,SAAU,KAAK;AAC1C,WAAO,KAAK,SAAS,IAAI;AAAA;AAO3B,YAAS,UAAU,cAAc,SAAU,OAAO,KAAK;AACrD,WAAO,KAAK,iBAAiB,KAAK,SAAS,IAAI,KAAK,YAAY,QAAQ;AAAA;AAS1E,YAAS,UAAU,kBAAkB,SAAU,MAAM,UAAU,OAAO,KAAK;AACzE,aAAS,QAAS,SAAQ;AAC1B,WAAO,QAAS,OAAM,KAAK;AAC3B,QAAI,UAAU,KAAK;AACnB,QAAI,aAAa,KAAK;AACtB,QAAI,iBAAiB;AACrB,QAAI,aAAa;AACjB,IAAO,KAAK,YAAY,SAAU,SAAS;AACzC,qBAAe,KAAK,KAAK,aAAa;AACtC,iBAAW,KAAK,QAAQ,IAAI,SAAS;AAAA;AAEvC,QAAI,eAAe,KAAK;AAExB,aAAS,YAAY,OAAO,YAAY,KAAK,aAAa;AACxD,UAAI,cAAc;AAElB,UAAI,CAAC,cAAc;AACjB,sBAAc;AAAA,aACT;AACL,sBAAc;AACd,YAAI,SAAS,KAAK,UAAU,gBAAgB;AAE5C,iBAAS,IAAI,GAAG,OAAO,WAAW,QAAQ,IAAI,MAAM,KAAK;AACvD,cAAI,QAAQ,WAAW,GAAG,eAAe,OAAO;AAEhD,cAAI,UAAU,YAAY;AACxB,0BAAc;AACd;AAAA;AAAA;AAAA;AAKN,eAAS,aAAa;AAAA;AAAA;AAQ1B,YAAS,UAAU,iBAAiB,WAAY;AAC9C,QAAI,aAAa,KAAK;AACtB,QAAI,UAAU,KAAK;AACnB,QAAI,eAAe;AAEnB,aAAS,IAAI,GAAG,OAAO,WAAW,QAAQ,IAAI,MAAM,KAAK;AACvD,UAAI,QAAQ,IAAI,WAAW,IAAI,MAAM,qBAAqB,UAAU;AAClE,uBAAe;AAAA;AAAA;AAInB,WAAO;AAAA;AAQT,YAAS,UAAU,mBAAmB,SAAU,OAAO,KAAK;AAC1D,QAAI,aAAa,KAAK,YAAY;AAClC,WAAO,AAAQ,gBAAe,CAAC,OAAO,IAAI,WAAW;AAAA;AAOvD,YAAS,UAAU,gBAAgB,SAAU,KAAK;AAChD,WAAO,AAAO,MAAM,KAAK,YAAY;AAAA;AAOvC,YAAS,UAAU,4BAA4B,SAAU,OAAO;AAC9D,QAAI,aAAa,KAAK;AAEtB,QAAI,gBAAgB,WAAW;AAC/B,QAAI,mBAAmB,WAAW,iBAAiB;AACnD,QAAI,UAAU,iBAAiB,KAAK,iBAAiB;AACrD,QAAI,SAAS,CAAC,GAAG,WAAW,kBAAmB,YAAW,YAAY;AAEtE,QAAI,CAAC,KAAK,aAAa,QAAQ;AAC7B,aAAO;AAAA,QACL,UAAU;AAAA,QACV;AAAA;AAAA;AAKJ,QAAI,aAAa,MAAM,iBAAiB,WAAW,aAAa,WAAW;AAG3E,QAAI;AACJ,QAAI,WAAW;AACf,QAAI,oBAAoB,WAAW;AAEnC,QAAI,cAAc,KAAK,OAAO,IAAI;AAGlC,QAAI,UAAU,YAAY,MAAM;AAEhC,QAAI,mBAAmB;AACrB,UAAI,WAAW,qBAAqB,aAAa,UAAU,YAAY,IAAI;AACzE,mBAAW;AACX,gBAAQ,aAAa,UAAU,YAAY;AAAA,iBAClC,WAAW,qBAAqB,aAAa,UAAW,KAAI,YAAY,KAAK;AACtF,mBAAW;AACX,gBAAQ,aAAa,UAAW,KAAI,YAAY;AAAA,aAC3C;AACL,QAAC,SAAQ,aAAa,UAAU,YAAY,OAAO,KAAM,SAAQ,aAAa,UAAW,KAAI,YAAY,QAAQ,KAAM,SAAQ;AAAA;AAGjI,eAAS,WAAW,kBAAkB;AACtC,cAAQ,WAAW,OAAO,kBAAkB,QAAQ,SAClD,WAAW;AAAA,WAEV;AACD,UAAI,WAAW,iBAAiB,KAAK,iBAAiB;AACtD,UAAI,MAAM,OAAO,KAAK,aAAa;AACnC,yBAAmB,CAAC,SAAQ,GAAG,MAAM,WAAW;AAChD,uBAAiB,KAAK,SAAQ,OAAO,IAAI,iBAAiB,KAAK;AAC/D,uBAAiB,KAAK,iBAAiB,KAAK;AAAA;AAGhD,WAAO;AAAA,MACL;AAAA,MACA;AAAA;AAAA;AAIJ,SAAO;AAAA;AAGT,mBAAkB,MAAK,QAAQ;AAC7B,SAAO,SAAQ,SAAQ,MAAK,OAAO,KAAK,OAAO;AAAA;AAGjD,iCAAiC,WAAW,YAAY;AACtD,MAAI,OAAO,WAAW,eAAgB,YAAW,YAAY;AAC7D,SAAO;AAAA,IACL,UAAU,OAAO;AAAA,IACjB,wBAAwB;AAAA,IACxB,eAAe;AAAA;AAAA;AAInB,8BAA8B,WAAW,YAAY;AACnD,MAAI,eAAe,WAAW;AAC9B,MAAI,kBAAkB,WAAW;AACjC,MAAI,YAAY,WAAW;AAC3B,MAAI,oBAAoB,WAAW;AACnC,MAAI,kBAAkB,WAAW;AACjC,MAAI;AACJ,MAAI,yBAAyB;AAC7B,MAAI,gBAAgB;AACpB,MAAI;AAEJ,MAAI,YAAY,gBAAgB,IAAI;AAClC,gBAAW,YAAY;AACvB,2BAAuB;AAAA,aACd,aAAa,gBAAgB,IAAI;AAC1C,gBAAW,WAAW,uBAAuB,YAAY,kBAAkB,WAAW,iBAAiB;AACvG,6BAAyB;AACzB,oBAAgB;AAAA,SACX;AACL,gBAAW,eAAgB,aAAY,IAAI,aAAa;AACxD,2BAAuB;AAAA;AAGzB,SAAO;AAAA,IACL,UAAU;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA;AAAA;AAIJ,IAAO,mBAAQ;;;ACraf,gCAAgC,SAAS,KAAK;AAC5C,MAAI,eAAe;AACnB,UAAQ,cAAc,YAAY,SAAU,eAAe,KAAK;AAC9D,QAAI,WAAW,IAAI,iBAAS,eAAe,SAAS;AACpD,aAAS,OAAO,cAAc;AAC9B,aAAS,OAAO,eAAe;AAC/B,kBAAc,mBAAmB;AACjC,aAAS,QAAQ;AACjB,iBAAa,KAAK;AAAA;AAGpB,UAAQ,WAAW,SAAU,aAAa;AACxC,QAAI,YAAY,IAAI,wBAAwB,YAAY;AACtD,UAAI,gBAAgB,YAAY,uBAAuB,YAAY,kBAAkB,OAAO;AAC5F,kBAAY,mBAAmB,cAAc;AAAA;AAAA;AAGjD,SAAO;AAAA;AAGT,IAAI,0BAA0B;AAAA,EAC5B,QAAQ;AAAA;AAEV,IAAO,0BAAQ;;;ACvBf,IAAI,oBAEJ,SAAU,QAAQ;AAChB,YAAU,oBAAmB;AAE7B,gCAA6B;AAC3B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,mBAAkB;AAK/B,UAAM,kBAAkB;AACxB,WAAO;AAAA;AAGT,qBAAkB,UAAU,qBAAqB,WAAY;AAC3D,WAAO,gBAAgB;AAAA,MAAC,CAAC,QAAQ;AAAA,MAAU,CAAC,aAAa;AAAA,MAAgB,CAAC,UAAU;AAAA,MAAgB,CAAC,SAAS;AAAA,MAAU,CAAC,WAAW;AAAA,OAEjI,KAAK,SAAS;AAAA;AAYnB,qBAAkB,UAAU,qBAAqB,SAAU,WAAW;AACpE,QAAI,kBAAkB,KAAK,kBAAkB,AAAO,MAAM;AAE1D,QAAI,iBAAiB;AACnB,eAAS,IAAI,gBAAgB,SAAS,GAAG,KAAK,GAAG,KAAK;AACpD,QAAW,IAAI,gBAAgB;AAAA;AAAA;AAAA;AAUrC,qBAAkB,UAAU,iBAAiB,SAAU,OAAO;AAC5D,QAAI,kBAAkB,KAAK;AAE3B,QAAI,CAAC,gBAAgB,QAAQ;AAC3B,aAAO;AAAA;AAGT,QAAI,SAAS,QAAQ,MAAM,CAAC,QAAQ;AAClC,aAAO;AAAA;AAIT,QAAI,gBAAgB,WAAW,GAAG;AAChC,UAAI,WAAW,gBAAgB;AAE/B,UAAI,SAAS,MAAM,SAAS,SAAS,SAAS,IAAI;AAChD,eAAO;AAAA;AAAA,WAEJ;AACL,eAAS,IAAI,GAAG,OAAM,gBAAgB,QAAQ,IAAI,MAAK,KAAK;AAC1D,YAAI,gBAAgB,GAAG,MAAM,SAAS,SAAS,gBAAgB,GAAG,IAAI;AACpE,iBAAO;AAAA;AAAA;AAAA;AAKb,WAAO;AAAA;AAGT,SAAO;AAAA,EACP;AAEF,AAAO,MAAM,mBAAmB;AAChC,IAAO,oBAAQ;;;ACjFf,IAAI,qBAAqB;AACzB,IAAI,WAAU,KAAK;AACnB,IAAI,WAAU,KAAK;AACnB,IAAI,UAAU,KAAK;AACnB,IAAI,UAAU;AACd,IAAI,qBAAqB;AACzB,IAAI,wBAAwB;AAC5B,IAAI,qBAAqB;AACzB,IAAI,gBAAgB;AAAA,EAClB,GAAG,CAAC,GAAG;AAAA,EACP,GAAG,CAAC,GAAG;AAAA,EACP,GAAG,CAAC,GAAG;AAAA,EACP,GAAG,CAAC,GAAG;AAAA;AAET,IAAI,aAAa;AAAA,EACf,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA;AAEN,IAAI,oBAAoB;AAAA,EACtB,YAAY;AAAA,IACV,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,MAAM;AAAA;AAAA,EAER,eAAe;AAAA,EACf,WAAW;AAAA,EACX,eAAe;AAAA;AAEjB,IAAI,UAAU;AAWd,IAAI,kBAEJ,SAAU,QAAQ;AAChB,YAAU,kBAAiB;AAE3B,4BAAyB,IAAI;AAC3B,QAAI,QAAQ,OAAO,KAAK,SAAS;AAMjC,UAAM,SAAS;AAKf,UAAM,UAAU;AAChB,UAAM,YAAY;AAElB,QAAI,MAAuC;AACzC,aAAO;AAAA;AAGT,UAAM,MAAM;AACZ,UAAM,QAAQ,IAAY;AAC1B,UAAM,OAAO,qBAAqB;AAClC,SAAK,iBAAiB,SAAU,SAAS,WAAW;AAClD,WAAK,UAAU,aAAa,KAAK,SAAS;AAAA,OACzC;AACH,WAAO;AAAA;AAOT,mBAAgB,UAAU,cAAc,SAAU,aAAa;AAC7D,QAAI,MAAuC;AACzC,aAAO,KAAK;AAAA;AAGd,SAAK,cAAc,KAAK;AACxB,gBAAY,aAAa,KAAK,eAAe;AAC7C,WAAO;AAAA;AAGT,mBAAgB,UAAU,iBAAiB,SAAU,aAAa;AAChE,QAAI,KAAK,KAAK;AAEd,QAAI,CAAC,KAAK,kBAAkB;AAC1B,MAAiB,KAAK,IAAI,oBAAoB,KAAK;AAAA;AAGrD,SAAK,KAAK,WAAW,SAAU,SAAS,WAAW;AACjD,SAAG,GAAG,WAAW;AAAA;AAEnB,SAAK,aAAa,YAAY;AAC9B,SAAK,eAAe,MAAM,MAAM,oBAAoB,aAAa;AAAA;AAGnE,mBAAgB,UAAU,kBAAkB,WAAY;AACtD,QAAI,KAAK,KAAK;AACd,IAAiB,QAAQ,IAAI,oBAAoB,KAAK;AACtD,SAAK,KAAK,WAAW,SAAU,SAAS,WAAW;AACjD,SAAG,IAAI,WAAW;AAAA;AAEpB,SAAK,aAAa,KAAK,eAAe;AAAA;AAOxC,mBAAgB,UAAU,YAAY,SAAU,WAAW;AACzD,QAAI,aAAa,UAAU,QAAQ;AACjC,UAAI,WAAW,KAAK,UAAU;AAC9B,WAAK,WAAW,SAAU,YAAW;AACnC,iBAAS,WAAU,WAAW,MAAM;AAAA;AAAA,WAEjC;AACL,WAAK,UAAU;AAAA;AAGjB,WAAO;AAAA;AAGT,mBAAgB,UAAU,QAAQ,SAAU,KAAK;AAC/C,UAAM,OAAO;AAEb,QAAI,MAAuC;AACzC,WAAK,WAAW;AAAA;AAGlB,SAAK,mBAAmB,IAAI;AAC5B,QAAI,YAAY,KAAK;AAErB,SAAK,IAAI,IAAI;AAEb,cAAU,KAAK;AAAA,MACb,GAAG,IAAI,KAAK;AAAA,MACZ,GAAG,IAAI,KAAK;AAAA,MACZ,UAAU,IAAI,YAAY;AAAA,MAC1B,QAAQ,IAAI,UAAU;AAAA,MACtB,QAAQ,IAAI,UAAU;AAAA;AAExB,SAAK,aAAa,UAAU;AAC5B,WAAO;AAAA;AAYT,mBAAgB,UAAU,eAAe,SAAU,iBAAiB;AAClE,QAAI,MAAuC;AACzC,aAAO,KAAK;AAAA;AAGd,sBAAkB,IAAI,iBAAiB,SAAU,aAAa;AAC5D,aAAO,MAAM,MAAM,oBAAoB,aAAa;AAAA;AAEtD,QAAI,cAAc;AAClB,QAAI,YAAY,KAAK;AACrB,QAAI,YAAY,KAAK,UAAU;AAC/B,QAAI,aAAa;AACjB,QAAI,gBAAgB,KAAK;AACzB,QAAI,mBAAW,WAAW,iBAAiB,WAAW,SAAQ,IAAI,aAAa,OAAO,aAAa,OAAO,SAAQ;AAClH,WAAO;AAEP,qBAAgB,aAAa,OAAO;AAClC,aAAQ,aAAY,MAAM,OAAO,YAAY,KAAK,cAAc,SAAS,MAAM,YAAY;AAAA;AAG7F,uBAAmB,OAAO,OAAO;AAC/B,aAAO,QAAO,MAAM,eAAe;AAAA;AAGrC,yBAAqB,UAAU,UAAU;AACvC,UAAI,mBAAmB,gBAAgB;AAGvC,UAAI,YAAY,QAAQ,UAAU,cAAc,eAAe;AAC7D,kBAAU,YAAY,UAAU;AAAA,aAC3B;AACL,YAAI,QAAQ,UAAU,YAAY,YAAY,OAAQ,WAAU,UAAU,gBAAgB,kBAAkB,UAAU,aAAa,YAAY,YAAY,YAAY,YAAY;AACnL,iCAAyB,YAAY;AAAA;AAAA;AAIzC,qBAAgB,UAAU;AACxB,UAAI,UAAU,cAAc,eAAe;AACzC,mBAAW,MAAM,OAAO,UAAU;AAAA;AAAA;AAAA;AAKxC,mBAAgB,UAAU,UAAU,WAAY;AAC9C,QAAI,MAAuC;AACzC,UAAI,CAAC,KAAK,UAAU;AAClB;AAAA;AAAA;AAIJ,SAAK,YAAY;AAEjB,gBAAY;AAEZ,SAAK,IAAI,OAAO,KAAK;AAErB,QAAI,MAAuC;AACzC,WAAK,WAAW;AAAA;AAGlB,WAAO;AAAA;AAGT,mBAAgB,UAAU,UAAU,WAAY;AAC9C,SAAK;AACL,SAAK;AAAA;AAGP,SAAO;AAAA,EACP;AAEF,qBAAqB,YAAY,aAAa;AAC5C,MAAI,QAAQ,eAAe,YAAY,WAAW,YAAY,YAAY;AAC1E,QAAM,gBAAgB;AACtB,UAAQ,OAAO;AACf,aAAW,MAAM,IAAI;AACrB,SAAO;AAAA;AAGT,qBAAqB,YAAY,eAAe;AAC9C,MAAI,gBAAgB,iBAAiB;AAErC,MAAI,cAAc,aAAa;AAC7B,kBAAc,YAAY,YAAY;AACtC,YAAQ,eAAe,cAAc;AAAA;AAGvC,SAAO;AAAA;AAGT,0BAA0B,YAAY,OAAO;AAC3C,MAAI,cAAc,MAAM;AACxB,mBAAiB,OAAO,iBAAiB,YAAY,OAAO,YAAY,OAAO;AAAA;AAGjF,iBAAiB,OAAO,aAAa;AACnC,MAAI,IAAI,YAAY;AACpB,OAAK,QAAS,KAAI;AAClB,QAAM,SAAS,SAAU,IAAI;AAC3B,OAAG,IAAI;AACP,OAAG,KAAK;AAAA;AAAA;AAIZ,kCAAkC,YAAY,OAAO;AACnD,mBAAiB,OAAO,aAAa,YAAY;AACjD,mBAAiB,YAAY;AAAA;AAG/B,0BAA0B,OAAO;AAC/B,SAAO,eAAe,MAAM,cAAc;AAAA;AAI5C,yBAAyB,YAAY,GAAG,kBAAkB;AACxD,MAAI,SAAS,WAAW;AAExB,MAAI,CAAC,QAAQ;AACX,WAAO;AAAA;AAGT,MAAI;AACJ,MAAI,aAAY,WAAW;AAC3B,OAAK,QAAQ,SAAU,IAAI;AACzB,OAAG,iBAAiB,GAAG,kBAAkB,eAAe,SAAQ;AAAA;AAElE,SAAO;AAAA;AAIT,yBAAyB,YAAY,OAAO;AAC1C,MAAI,SAAS,WAAW;AAExB,MAAI,CAAC,QAAQ;AACX,WAAO;AAAA;AAGT,MAAI,UAAU,MAAM,cAAc;AAGlC,SAAO,WAAW,OAAO,OAAO,WAAW;AAAA;AAG7C,qBAAqB,YAAY;AAC/B,MAAI,SAAS,WAAW;AACxB,MAAI,iBAAiB,OAAO;AAC5B,OAAK,QAAQ,SAAU,OAAO;AAC5B,eAAW,MAAM,OAAO;AAAA,KACvB;AACH,SAAO,SAAS;AAChB,SAAO,CAAC,CAAC;AAAA;AAGX,kBAAiB,YAAY,KAAK;AAChC,MAAI,QAAQ,IAAI,WAAW,SAAS,SAAU,OAAO;AACnD,QAAI,cAAc,MAAM;AACxB,QAAI,QAAQ,MAAM,YAAY;AAC9B,WAAO;AAAA,MACL,WAAW,YAAY;AAAA,MACvB,SAAS,YAAY;AAAA,MACrB;AAAA;AAAA;AAGJ,aAAW,QAAQ,SAAS;AAAA,IAC1B;AAAA,IACA,OAAO,CAAC,CAAC,IAAI;AAAA,IACb,eAAe,CAAC,CAAC,IAAI;AAAA;AAAA;AAIzB,yBAAyB,YAAY;AACnC,MAAI,QAAQ,WAAW;AAEvB,MAAI,CAAC,MAAM,QAAQ;AACjB,WAAO;AAAA;AAGT,MAAI,KAAK,MAAM,MAAM,SAAS;AAC9B,MAAI,KAAK,MAAM;AACf,MAAI,KAAK,GAAG,KAAK,GAAG;AACpB,MAAI,KAAK,GAAG,KAAK,GAAG;AACpB,MAAI,QAAO,QAAQ,KAAK,KAAK,KAAK,IAAI;AACtC,SAAO,QAAO;AAAA;AAGhB,sBAAsB,OAAO;AAC3B,MAAI,OAAO,MAAM,SAAS;AAC1B,SAAO,KAAM,QAAO;AACpB,SAAO,CAAC,MAAM,IAAI,MAAM;AAAA;AAK1B,6BAA6B,oBAAoB,YAAY,aAAa,mBAAmB;AAC3F,MAAI,QAAQ,IAAY;AACxB,QAAM,IAAI,IAAY,aAAK;AAAA,IACzB,MAAM;AAAA,IACN,OAAO,UAAU;AAAA,IACjB,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,OAAO,MAAM,WAAW,oBAAoB,YAAY,OAAO,CAAC,KAAK,KAAK,KAAK;AAAA,IAC/E,WAAW,MAAM,UAAS,YAAY;AAAA,MACpC,OAAO;AAAA;AAAA;AAGX,OAAK,mBAAmB,SAAU,cAAc;AAC9C,UAAM,IAAI,IAAY,aAAK;AAAA,MACzB,MAAM,aAAa,KAAK;AAAA,MACxB,OAAO;AAAA,QACL,SAAS;AAAA;AAAA,MAEX,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,OAAO,MAAM,WAAW,oBAAoB,YAAY,OAAO;AAAA,MAC/D,WAAW,MAAM,UAAS,YAAY;AAAA,QACpC,OAAO;AAAA;AAAA;AAAA;AAIb,SAAO;AAAA;AAGT,wBAAwB,YAAY,OAAO,YAAY,aAAa;AAClE,MAAI,YAAY,YAAY,WAAW,aAAa;AACpD,MAAI,aAAa,SAAQ,WAAW;AACpC,MAAI,IAAI,WAAW,GAAG;AACtB,MAAI,IAAI,WAAW,GAAG;AACtB,MAAI,KAAK,IAAI,YAAY;AACzB,MAAI,KAAK,IAAI,YAAY;AACzB,MAAI,KAAK,WAAW,GAAG;AACvB,MAAI,KAAK,WAAW,GAAG;AACvB,MAAI,MAAM,KAAK,aAAa,YAAY;AACxC,MAAI,MAAM,KAAK,aAAa,YAAY;AACxC,MAAI,QAAQ,KAAK;AACjB,MAAI,SAAS,KAAK;AAClB,MAAI,SAAS,QAAQ;AACrB,MAAI,UAAU,SAAS;AACvB,kBAAgB,YAAY,OAAO,QAAQ,GAAG,GAAG,OAAO;AAExD,MAAI,YAAY,eAAe;AAC7B,oBAAgB,YAAY,OAAO,KAAK,IAAI,IAAI,YAAY;AAC5D,oBAAgB,YAAY,OAAO,KAAK,KAAK,IAAI,YAAY;AAC7D,oBAAgB,YAAY,OAAO,KAAK,IAAI,IAAI,QAAQ;AACxD,oBAAgB,YAAY,OAAO,KAAK,IAAI,KAAK,QAAQ;AACzD,oBAAgB,YAAY,OAAO,MAAM,IAAI,IAAI,YAAY;AAC7D,oBAAgB,YAAY,OAAO,MAAM,KAAK,IAAI,YAAY;AAC9D,oBAAgB,YAAY,OAAO,MAAM,IAAI,KAAK,YAAY;AAC9D,oBAAgB,YAAY,OAAO,MAAM,KAAK,KAAK,YAAY;AAAA;AAAA;AAInE,sBAAsB,YAAY,OAAO;AACvC,MAAI,cAAc,MAAM;AACxB,MAAI,gBAAgB,YAAY;AAChC,MAAI,SAAS,MAAM,QAAQ;AAC3B,SAAO,SAAS,UAAU;AAC1B,SAAO,KAAK;AAAA,IACV,QAAQ,CAAC;AAAA,IACT,QAAQ,gBAAgB,SAAS;AAAA;AAEnC,OAAK,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC,KAAK,MAAM,CAAC,KAAK,MAAM,CAAC,KAAK,OAAO,SAAU,cAAc;AACzG,QAAI,KAAK,MAAM,YAAY,aAAa,KAAK;AAC7C,QAAI,YAAY,aAAa,WAAW,IAAI,oBAAoB,YAAY,aAAa,MAAM,oBAAoB,YAAY;AAC/H,UAAM,GAAG,KAAK;AAAA,MACZ,QAAQ,CAAC;AAAA,MACT,WAAW,CAAC;AAAA,MACZ,QAAQ,gBAAgB,WAAW,aAAa,YAAY;AAAA;AAAA;AAAA;AAKlE,yBAAyB,YAAY,OAAO,MAAM,GAAG,GAAG,GAAG,GAAG;AAC5D,MAAI,KAAK,MAAM,YAAY;AAC3B,QAAM,GAAG,SAAS,aAAa,YAAY,YAAY,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI;AAAA;AAGrF,mBAAmB,aAAa;AAC9B,SAAO,SAAS;AAAA,IACd,eAAe;AAAA,KACd,YAAY;AAAA;AAGjB,yBAAyB,GAAG,GAAG,IAAI,IAAI;AACrC,MAAI,MAAM,CAAC,SAAQ,GAAG,KAAK,SAAQ,GAAG;AACtC,MAAI,MAAM,CAAC,SAAQ,GAAG,KAAK,SAAQ,GAAG;AACtC,SAAO;AAAA,IAAC,CAAC,IAAI,IAAI,IAAI;AAAA,IAAK,CAAC,IAAI,IAAI,IAAI;AAAA;AAAA;AAIzC,uBAAsB,YAAY;AAChC,SAAO,AAAQ,aAAa,WAAW;AAAA;AAGzC,6BAA6B,YAAY,cAAc;AACrD,MAAI,OAAM;AAAA,IACR,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA;AAEL,MAAI,aAAa;AAAA,IACf,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,IACL,QAAQ;AAAA;AAEV,MAAI,MAAM,AAAQ,mBAAmB,KAAI,eAAe,cAAa;AACrE,SAAO,WAAW;AAAA;AAGpB,6BAA6B,YAAY,iBAAiB;AACxD,MAAI,YAAY,CAAC,oBAAoB,YAAY,gBAAgB,KAAK,oBAAoB,YAAY,gBAAgB;AACtH,EAAC,WAAU,OAAO,OAAO,UAAU,OAAO,QAAQ,UAAU;AAC5D,SAAO,UAAU,KAAK;AAAA;AAGxB,mBAAmB,oBAAoB,YAAY,OAAO,iBAAiB,IAAI,IAAI;AACjF,MAAI,cAAc,MAAM;AACxB,MAAI,YAAY,mBAAmB,YAAY,YAAY;AAC3D,MAAI,aAAa,aAAa,YAAY,IAAI;AAC9C,OAAK,iBAAiB,SAAU,SAAS;AACvC,QAAI,MAAM,cAAc;AACxB,cAAU,IAAI,IAAI,IAAI,OAAO,WAAW,IAAI;AAAA;AAE9C,cAAY,QAAQ,mBAAmB,cAAc,gBAAgB,UAAU,GAAG,IAAI,UAAU,GAAG,IAAI,UAAU,GAAG,IAAI,UAAU,GAAG;AACrI,2BAAyB,YAAY;AACrC,WAAQ,YAAY;AAAA,IAClB,OAAO;AAAA;AAAA;AAIX,sBAAsB,YAAY,OAAO,IAAI,IAAI;AAC/C,MAAI,QAAQ,MAAM,cAAc;AAChC,MAAI,aAAa,aAAa,YAAY,IAAI;AAC9C,OAAK,OAAO,SAAU,OAAO;AAC3B,UAAM,MAAM,WAAW;AACvB,UAAM,MAAM,WAAW;AAAA;AAEzB,2BAAyB,YAAY;AACrC,WAAQ,YAAY;AAAA,IAClB,OAAO;AAAA;AAAA;AAIX,sBAAsB,YAAY,IAAI,IAAI;AACxC,MAAI,YAAY,WAAW;AAC3B,MAAI,SAAS,UAAU,sBAAsB,IAAI;AACjD,MAAI,YAAY,UAAU,sBAAsB,GAAG;AACnD,SAAO,CAAC,OAAO,KAAK,UAAU,IAAI,OAAO,KAAK,UAAU;AAAA;AAG1D,qBAAqB,YAAY,OAAO,MAAM;AAC5C,MAAI,QAAQ,gBAAgB,YAAY;AACxC,SAAO,SAAS,UAAU,qBAAqB,MAAM,SAAS,MAAM,WAAW,cAAc,MAAM;AAAA;AAGrG,sBAAsB,QAAQ;AAC5B,MAAI,OAAO,SAAQ,OAAO,GAAG,IAAI,OAAO,GAAG;AAC3C,MAAI,OAAO,SAAQ,OAAO,GAAG,IAAI,OAAO,GAAG;AAC3C,MAAI,OAAO,SAAQ,OAAO,GAAG,IAAI,OAAO,GAAG;AAC3C,MAAI,OAAO,SAAQ,OAAO,GAAG,IAAI,OAAO,GAAG;AAC3C,SAAO;AAAA,IACL,GAAG;AAAA,IACH,GAAG;AAAA,IACH,OAAO,OAAO;AAAA,IACd,QAAQ,OAAO;AAAA;AAAA;AAInB,qBAAqB,YAAY,GAAG,kBAAkB;AACpD,MACA,CAAC,WAAW,cAGT,gBAAgB,YAAY,EAAE,SAAS,EAAE,UAAU;AACpD;AAAA;AAGF,MAAI,KAAK,WAAW;AACpB,MAAI,SAAS,WAAW;AACxB,MAAI,YAAY,gBAAgB,YAAY,GAAG;AAE/C,MAAI,CAAC,WAAW,WAAW;AACzB,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,UAAI,cAAc,OAAO,GAAG;AAE5B,UAAI,aAAc,eAAc,sBAAsB,YAAY,YAAY,UAAU,YAAY,eAAe,YAAY,WAAW,QAAQ,OAAO,IAAI,iBAAiB,IAAI,iBAAiB,KAAK;AAEtM;AAAA;AAAA;AAAA;AAKN,eAAa,GAAG,eAAe;AAAA;AAGjC,wBAAwB,GAAG;AACzB,MAAI,OAAO,EAAE;AACb,OAAK,kBAAkB,KAAK;AAAA;AAG9B,0BAA0B,OAAO,GAAG,GAAG;AACrC,SAAO,MAAM,YAAY,QAAQ,QAAQ,GAAG;AAAA;AAG9C,4BAA4B,YAAY,GAAG,kBAAkB,OAAO;AAClE,MAAI,gBAAgB,WAAW;AAC/B,MAAI,QAAQ,WAAW;AACvB,MAAI,kBAAkB,WAAW;AACjC,MAAI;AAEJ,aAAW,OAAO,KAAK,iBAAiB;AAExC,MAAI,gBAAgB,eAAe,eAAe;AAChD,QAAI,SAAS,CAAC,eAAe;AAC3B,sBAAgB,cAAc,YAAY,YAAY;AACtD,UAAI,cAAc,MAAM;AACxB,kBAAY,YAAY,mBAAmB,YAAY,WAAW;AAClE,kBAAY,UAAU,UAAU,qBAAqB,OAAO,MAAM;AAClE,sBAAgB,WAAW,iBAAiB,YAAY,YAAY;AAEpE,iBAAW,QAAQ,KAAK;AAAA;AAG1B,QAAI,eAAe;AACjB,UAAI,gBAAgB,eAAe,mBAAmB,WAAW,YAAY;AAC7E,UAAI,mBAAmB,cAAc;AACrC,uBAAiB,QAAQ,cAAc,iBAAiB,YAAY,YAAY,eAAe,WAAW;AAE1G,UAAI,OAAO;AACT,oBAAY,YAAY;AACxB,sBAAc,aAAa,YAAY;AAAA;AAGzC,uBAAiB,YAAY;AAC7B,oBAAc;AAAA,QACZ;AAAA;AAAA;AAAA,aAGK,SAAS,gBAAgB,cAAc,YAAY,gBAAgB,eAAe;AAM3F,QAAI,gBAAgB,YAAY,GAAG,qBAAqB,YAAY,aAAa;AAC/E,oBAAc;AAAA,QACZ;AAAA,QACA,eAAe;AAAA;AAAA;AAAA;AAKrB,SAAO;AAAA;AAGT,4BAA4B,WAAW,OAAO;AAC5C,MAAI,cAAc,QAAQ;AACxB,QAAI,MAAuC;AACzC,aAAO,SAAS,MAAM,kBAAkB;AAAA;AAG1C,WAAO,MAAM;AAAA;AAGf,SAAO;AAAA;AAGT,IAAI,kBAAkB;AAAA,EACpB,WAAW,SAAU,GAAG;AACtB,QAAI,KAAK,WAAW;AAGlB,oBAAc,MAAM;AAAA,eACX,CAAC,EAAE,UAAU,CAAC,EAAE,OAAO,WAAW;AAC3C,qBAAe;AACf,UAAI,mBAAmB,KAAK,MAAM,sBAAsB,EAAE,SAAS,EAAE;AACrE,WAAK,iBAAiB;AACtB,UAAI,QAAQ,KAAK,iBAAiB,gBAAgB,MAAM,GAAG;AAE3D,UAAI,OAAO;AACT,aAAK,YAAY;AACjB,aAAK,SAAS,CAAC,iBAAiB;AAAA;AAAA;AAAA;AAAA,EAItC,WAAW,SAAU,GAAG;AACtB,QAAI,IAAI,EAAE;AACV,QAAI,IAAI,EAAE;AACV,QAAI,mBAAmB,KAAK,MAAM,sBAAsB,GAAG;AAC3D,gBAAY,MAAM,GAAG;AAErB,QAAI,KAAK,WAAW;AAClB,qBAAe;AACf,UAAI,cAAc,mBAAmB,MAAM,GAAG,kBAAkB;AAChE,qBAAe,SAAQ,MAAM;AAAA;AAAA;AAAA,EAGjC,SAAS,SAAU,GAAG;AACpB,kBAAc,MAAM;AAAA;AAAA;AAIxB,uBAAuB,YAAY,GAAG;AACpC,MAAI,WAAW,WAAW;AACxB,mBAAe;AACf,QAAI,IAAI,EAAE;AACV,QAAI,IAAI,EAAE;AACV,QAAI,mBAAmB,WAAW,MAAM,sBAAsB,GAAG;AACjE,QAAI,cAAc,mBAAmB,YAAY,GAAG,kBAAkB;AACtE,eAAW,YAAY;AACvB,eAAW,SAAS;AACpB,eAAW,iBAAiB;AAE5B,mBAAe,SAAQ,YAAY;AAAA;AAAA;AAIvC,yBAAyB,YAAY,GAAG,GAAG;AACzC,MAAI,KAAK,WAAW;AACpB,SAAO,IAAI,KAAK,IAAI,GAAG,cAAc,IAAI,KAAK,IAAI,GAAG;AAAA;AAOvD,IAAI,iBAAiB;AAAA,EACnB,OAAO,gBAAgB;AAAA,EACvB,OAAO,gBAAgB;AAAA,EACvB,MAAM;AAAA,IACJ,aAAa,SAAU,YAAY,aAAa;AAC9C,2BAAqB,OAAO;AAC1B,eAAO;AAAA;AAGT,aAAO,oBAAoB;AAAA,QACzB,aAAa;AAAA,QACb,eAAe;AAAA,SACd,YAAY,aAAa,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC,KAAK,MAAM,CAAC,KAAK,MAAM,CAAC,KAAK;AAAA;AAAA,IAErG,kBAAkB,SAAU,YAAY;AACtC,UAAI,OAAO,aAAa;AACxB,aAAO,gBAAgB,KAAK,GAAG,IAAI,KAAK,GAAG,IAAI,KAAK,GAAG,IAAI,KAAK,GAAG;AAAA;AAAA,IAErE,kBAAkB,SAAU,YAAY,OAAO,YAAY,aAAa;AACtE,qBAAe,YAAY,OAAO,YAAY;AAAA;AAAA,IAEhD;AAAA,IACA,SAAS;AAAA;AAAA,EAEX,SAAS;AAAA,IACP,aAAa,SAAU,YAAY,aAAa;AAC9C,UAAI,QAAQ,IAAY;AAGxB,YAAM,IAAI,IAAY,iBAAS;AAAA,QAC7B,MAAM;AAAA,QACN,OAAO,UAAU;AAAA,QACjB,QAAQ;AAAA;AAEV,aAAO;AAAA;AAAA,IAET,kBAAkB,SAAU,YAAY;AACtC,aAAO;AAAA;AAAA,IAET,aAAa,SAAU,YAAY,OAAO;AACxC,YAAM,OAAO,MAAM,QAAQ;AAE3B,YAAM,IAAI,IAAY,gBAAQ;AAAA,QAC5B,MAAM;AAAA,QACN,WAAW;AAAA,QACX,OAAO,MAAM,cAAc,YAAY;AAAA,QACvC,WAAW,MAAM,UAAS,YAAY;AAAA,UACpC,OAAO;AAAA;AAAA;AAAA;AAAA,IAIb,kBAAkB,SAAU,YAAY,OAAO,YAAY,aAAa;AACtE,YAAM,QAAQ,GAAG,SAAS;AAAA,QACxB,QAAQ,YAAY,YAAY,OAAO;AAAA;AAAA;AAAA,IAG3C;AAAA,IACA,SAAS;AAAA;AAAA;AAIb,yBAAyB,SAAS;AAChC,SAAO;AAAA,IACL,aAAa,SAAU,YAAY,aAAa;AAC9C,aAAO,oBAAoB;AAAA,QACzB,aAAa,SAAU,OAAO;AAC5B,cAAI,YAAY,CAAC,OAAO,CAAC,GAAG;AAC5B,qBAAW,UAAU;AACrB,iBAAO;AAAA;AAAA,QAET,eAAe,SAAU,WAAW;AAClC,iBAAO,UAAU;AAAA;AAAA,SAElB,YAAY,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO;AAAA;AAAA,IAE/D,kBAAkB,SAAU,YAAY;AACtC,UAAI,OAAO,aAAa;AACxB,UAAI,MAAM,SAAQ,KAAK,GAAG,UAAU,KAAK,GAAG;AAC5C,UAAI,MAAM,SAAQ,KAAK,GAAG,UAAU,KAAK,GAAG;AAC5C,aAAO,CAAC,KAAK;AAAA;AAAA,IAEf,kBAAkB,SAAU,YAAY,OAAO,YAAY,aAAa;AACtE,UAAI;AAEJ,UAAI,QAAQ,gBAAgB,YAAY;AAExC,UAAI,UAAU,sBAAsB,MAAM,2BAA2B;AACnE,sBAAc,MAAM,0BAA0B;AAAA,aACzC;AACL,YAAI,KAAK,WAAW;AACpB,sBAAc,CAAC,GAAG,CAAC,GAAG,YAAY,GAAG,aAAa,IAAI;AAAA;AAGxD,UAAI,YAAY,CAAC,YAAY;AAC7B,iBAAW,UAAU;AACrB,qBAAe,YAAY,OAAO,WAAW;AAAA;AAAA,IAE/C;AAAA,IACA,SAAS;AAAA;AAAA;AAIb,IAAO,0BAAQ;;;AC9xBR,+BAA+B,MAAM;AAC1C,SAAO,cAAc;AACrB,SAAO,SAAU,aAAa;AAC5B,WAAO,AAAY,iBAAiB,aAAa;AAAA;AAAA;AAG9C,oCAAoC,MAAM,kBAAkB;AACjE,SAAO,cAAc;AACrB,SAAO,SAAU,SAAS;AACxB,QAAI,MAAM,oBAAoB,OAAO,mBAAmB;AACxD,QAAI,aAAa,MAAM,KAAK,QAAQ,KAAK;AACzC,QAAI,OAAO,MAAM,KAAK,IAAI,KAAK;AAC/B,WAAO,CAAC,MAAM,OAAQ,eAAc;AAAA;AAAA;AAGjC,kCAAkC,MAAM,KAAK,aAAa;AAC/D,MAAI,eAAe,cAAc;AACjC,SAAO,SAAU,GAAG,kBAAkB;AACpC,WAAO,aAAa,QAAQ,iBAAiB,IAAI,iBAAiB,OAAO,CAAC,oBAAoB,GAAG,KAAK;AAAA;AAAA;AAI1G,uBAAuB,MAAM;AAC3B,SAAO,qBAAa,OAAO;AAAA;;;ACnB7B,IAAI,cAAc,CAAC,YAAY,iBAAiB;AAEhD,IAAI,mBAEJ,SAAU,QAAQ;AAChB,YAAU,mBAAkB;AAE5B,+BAA4B;AAC1B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,kBAAiB;AAC9B,WAAO;AAAA;AAGT,oBAAiB,UAAU,OAAO,SAAU,SAAS,KAAK;AACxD,WAAO,UAAU,KAAK,MAAM,MAAM;AAElC,IAAC,MAAK,mBAAmB,IAAI,wBAAgB,IAAI,UAAU,GAAG,SAAS,AAAO,KAAK,KAAK,UAAU;AAAA;AAGpG,oBAAiB,UAAU,SAAS,SAAU,WAAW,SAAS,KAAK,SAAS;AAC9E,QAAI,mBAAmB,WAAW,SAAS,UAAU;AACnD;AAAA;AAGF,SAAK,YAAY;AACjB,SAAK,MAAM;AACX,SAAK,MAAM;AACX,QAAI,eAAe,KAAK;AACxB,SAAK,aAAa,IAAY;AAC9B,SAAK,MAAM,IAAI,KAAK;AAEpB,QAAI,CAAC,UAAU,IAAI,SAAS;AAC1B;AAAA;AAGF,QAAI,gBAAgB,iBAAiB,WAAW;AAChD,QAAI,WAAW,cAAc;AAC7B,QAAI,kBAAkB,UAAU;AAChC,QAAI,YAAY,gBAAgB;AAChC,QAAI,MAAM,UAAU,KAAK;AACzB,QAAI,aAAa,SAAS,cAAc;AACxC,QAAI,aAAa,AAAO,OAAO;AAAA,MAC7B,wBAAwB;AAAA,OACvB;AACH,QAAI,cAAc,IAAI,oBAAY,WAAW;AAC7C,IAAO,KAAK,aAAa,YAAY,KAAK;AAE1C,SAAK,WAAW,IAAI,YAAY;AAEhC,SAAK,wBAAwB,YAAY,iBAAiB,WAAW,eAAe,WAAW;AAE/F,IAAQ,gBAAgB,cAAc,KAAK,YAAY;AAAA;AAUzD,oBAAiB,UAAU,0BAA0B,SAAU,YAAY,iBAAiB,WAAW,eAAe,WAAW,KAAK;AAEpI,QAAI,SAAS,UAAU,KAAK;AAC5B,QAAI,YAAY,OAAO,KAAK,OAAO;AACnC,QAAI,QAAQ,KAAK,IAAI,IAAI,KAAK,IAAI,aAAa;AAI/C,QAAI,OAAO,AAAQ,qBAAa,OAAO;AAAA,MACrC,GAAG,OAAO;AAAA,MACV,GAAG,CAAC,YAAY;AAAA,MAChB,OAAO;AAAA,MACP,QAAQ;AAAA;AAEV,SAAK,KAAK;AACV,SAAK,SAAS,IAAI;AAElB,SAAK,iBAAiB,MAAM;AAAA,MAC1B,iBAAiB;AAAA,MACjB,UAAU,WAAW;AAAA,MACrB,GAAG,WAAW,SAAS;AAAA,MACvB,GAAG,WAAW,SAAS;AAAA,OACtB,UAAU,CAAC;AAAA,MACZ,SAAS;AAAA,MACT,UAAU,AAAY,sBAAsB;AAAA,MAC5C,kBAAkB,AAAY,yBAAyB,MAAM,KAAK;AAAA,MAClE,2BAA2B,AAAY,2BAA2B,MAAM;AAAA,QACtE,YAAY;AAAA,MACd,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,eAAe;AAAA,OACd,aAAa,iBAAiB;AAAA;AAGnC,oBAAiB,UAAU,WAAW,SAAU,YAAY;AAC1D,QAAI,gBAAgB,WAAW;AAE/B,QAAI,YAAY,KAAK;AACrB,QAAI,OAAO,UAAU;AACrB,QAAI,YAAY,AAAO,IAAI,eAAe,SAAU,WAAW;AAC7D,aAAO,CAAC,KAAK,YAAY,UAAU,MAAM,IAAI,OAAO,KAAK,YAAY,UAAU,MAAM,IAAI;AAAA;AAK3F,QAAI,CAAC,UAAU,OAAO,aAAa,WAAW,SAAS,WAAW,eAAe;AAE/E,WAAK,IAAI,eAAe;AAAA,QACtB,MAAM;AAAA,QACN,gBAAgB,UAAU;AAAA,QAC1B;AAAA;AAAA;AAAA;AAKN,oBAAiB,UAAU,UAAU,WAAY;AAC/C,SAAK,iBAAiB;AAAA;AAGxB,oBAAiB,OAAO;AACxB,SAAO;AAAA,EACP;AAEF,4BAA4B,WAAW,SAAS,SAAS;AACvD,SAAO,WAAW,QAAQ,SAAS,oBAAoB,QAAQ,eAAe;AAAA,IAC5E,UAAU;AAAA,IACV,OAAO;AAAA,KACN,OAAO;AAAA;AAGZ,0BAA0B,WAAW;AACnC,MAAI,OAAO,UAAU;AACrB,SAAO,AAAO,IAAI,UAAU,iBAAiB,SAAU,UAAU;AAC/D,WAAO;AAAA,MACL,WAAW;AAAA,MACX,SAAS;AAAA,MACT,OAAO,CAAC,KAAK,YAAY,SAAS,IAAI,OAAO,KAAK,YAAY,SAAS,IAAI;AAAA;AAAA;AAAA;AAKjF,0BAA0B,WAAW,SAAS;AAC5C,SAAO,QAAQ,aAAa,YAAY,UAAU,IAAI;AAAA;AAGxD,IAAO,2BAAQ;;;AC1Jf,IAAI,cAAa;AAAA,EACf,MAAM;AAAA,EACN,OAAO;AAAA;AAGF,gCAAgC,WAAW;AAChD,YAAU,eAAe,aAAY,SAAU,SAAS,SAAS;AAC/D,YAAQ,cAAc;AAAA,MACpB,UAAU;AAAA,MACV,OAAO;AAAA,OACN,SAAU,mBAAmB;AAC9B,wBAAkB,KAAK,MAAM,mBAAmB,QAAQ;AAAA;AAAA;AAO5D,YAAU,eAAe,sBAAsB,SAAU,SAAS,SAAS;AACzE,YAAQ,cAAc;AAAA,MACpB,UAAU;AAAA,MACV,OAAO;AAAA,OACN,SAAU,eAAe;AAC1B,oBAAc,cAAc;AAAA;AAAA;AAAA;;;ACflC,IAAI,oBAAoB;AAAA,EACtB,MAAM;AAAA,EACN,iBAAiB;AAAA,IACf,OAAO;AAAA,IACP,aAAa;AAAA,IACb,aAAa;AAAA,IACb,OAAO;AAAA,IACP,SAAS;AAAA;AAAA,EAEX,UAAU;AAAA,EACV,GAAG;AAAA;AAEE,mBAAiB,WAAW;AACjC,YAAU,sBAAsB;AAChC,YAAU,uBAAuB;AACjC,YAAU,yBAAyB,YAAY;AAC/C,YAAU,qBAAqB;AAC/B,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAChC,mBAAiB,WAAW,YAAY,mBAAmB;AAC3D,yBAAuB;AAAA;;;ACvBlB,mBAAiB,WAAW;AACjC,MAAI;AACJ,YAAU,kBAAkB;AAC5B,YAAU,oBAAoB;AAC9B,YAAU,eAAe,UAAU,SAAS,OAAO,OAAO;AAAA;;;ACF5D,IAAI,kBAEJ,WAAY;AACV,8BAA2B;AACzB,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,SAAS;AAAA;AAGhB,SAAO;AAAA;AAGT,IAAI,aAEJ,SAAU,QAAQ;AAChB,YAAU,aAAY;AAEtB,uBAAoB,MAAM;AACxB,WAAO,OAAO,KAAK,MAAM,SAAS;AAAA;AAGpC,cAAW,UAAU,kBAAkB,WAAY;AACjD,WAAO,IAAI;AAAA;AAGb,cAAW,UAAU,YAAY,SAAU,KAAK,OAAO;AACrD,QAAI,SAAS,MAAM;AACnB,QAAI,OAAO,MAAM,IAAI,MAAM;AAC3B,QAAI,cAAc,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI,MAAM;AAElF,QAAI,MAAM,WAAW,YAAY;AAC/B,UAAI,OAAO,MAAM,KAAK,QAAQ,MAAM;AACpC,UAAI,cAAc,MAAM,OAAO,QAAQ,MAAM,MAAM,MAAM,OAAO,QAAQ,MAAM,MAAM,MAAM,KAAK,QAAQ,MAAM;AAAA,WACxG;AACL,UAAI,OAAO,MAAM,IAAI,MAAM,KAAK;AAChC,UAAI,cAAc,MAAM,MAAM,MAAM,OAAO,QAAQ,MAAM,MAAM,MAAM,OAAO,QAAQ,MAAM,IAAI,MAAM,KAAK;AAAA;AAG3G,QAAI;AAAA;AAGN,cAAW,UAAU,YAAY,WAAY;AAC3C,kBAAc;AAAA;AAGhB,cAAW,UAAU,WAAW,WAAY;AAC1C,kBAAc;AAAA;AAGhB,SAAO;AAAA,EACC;AAEV,IAAI,aAEJ,SAAU,QAAQ;AAChB,YAAU,aAAY;AAEtB,yBAAsB;AACpB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,YAAW;AACxB,UAAM,0BAA0B;AAChC,WAAO;AAAA;AAGT,cAAW,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK;AACjE,QAAI,aAAa;AACjB,QAAI,QAAQ,YAAY;AACxB,QAAI,QAAQ,KAAK;AACjB,QAAI,aAAa,YAAY;AAE7B,QAAI,QAAQ,WAAW;AAEvB,QAAI,SAAS,WAAW;AACxB,QAAI,WAAW,YAAY;AAC3B,QAAI,WAAW,YAAY,QAAQ;AACnC,QAAI,SAAS,YAAY,IAAI;AAC7B,SAAK,SAAS;AACd,UAAM;AACN,UAAM,IAAI,WAAW;AACrB,UAAM,IAAI,WAAW;AAErB,UAAM,SAAS,SAAU,MAAM;AAC7B,UAAI,QAAQ,IAAI;AAChB,UAAI,SAAS,UAAU;AACvB,aAAO,YAAY,KAAK;AACxB,aAAO,cAAc,YAAY;AACjC,aAAO,WAAW;AAClB,UAAI,YAAY,KAAK;AACrB,UAAI,iBAAiB,UAAU,SAAS;AACxC,UAAI,YAAY,eAAe,IAAI;AACnC,UAAI,WAAW,KAAK,MAAM;AAC1B,UAAI,aAAa,KAAK,MAAM;AAC5B,UAAI,SAAS,WAAW,IAAI;AAC5B,UAAI,SAAS,WAAW,IAAI;AAC5B,UAAI,WAAW,KAAK,MAAM;AAC1B,UAAI,aAAa,KAAK,MAAM;AAC5B,UAAI,SAAS,WAAW,IAAI;AAC5B,UAAI,SAAS,WAAW,IAAI;AAC5B,UAAI,aAAa,KAAK;AACtB,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,YAAM,MAAM,SAAS,KAAK,IAAI,GAAG,WAAW;AAC5C,YAAM,MAAM,SAAS;AAErB,UAAI,WAAW,YAAY;AACzB,aAAM,WAAU,OAAO,SAAS,QAAQ,SAAS,KAAK,WAAW;AACjE,aAAM,WAAU,OAAO,SAAS,SAAS,SAAS,KAAK,SAAS;AAChE,aAAM,WAAU,OAAO,SAAS,QAAQ,SAAS,KAAK,WAAW;AACjE,aAAK,UAAU,OAAO,SAAS,SAAS,SAAS;AACjD,eAAO;AACP,eAAO,KAAM,KAAI,aAAa,KAAK;AACnC,eAAO;AACP,eAAO,KAAK,YAAY,KAAM,KAAI;AAAA,aAC7B;AACL,aAAM,WAAU,OAAO,SAAS,QAAQ,SAAS,KAAK,SAAS;AAC/D,aAAM,WAAU,OAAO,SAAS,SAAS,SAAS,KAAK,WAAW;AAClE,aAAK,UAAU,OAAO,SAAS,QAAQ,SAAS;AAChD,aAAM,WAAU,OAAO,SAAS,SAAS,SAAS,KAAK,WAAW;AAClE,eAAO,KAAM,KAAI,aAAa,KAAK;AACnC,eAAO;AACP,eAAO,KAAK,YAAY,KAAM,KAAI;AAClC,eAAO;AAAA;AAGT,YAAM,SAAS;AAAA,QACb;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAEF,YAAM,SAAS,eAAe;AAE9B,cAAQ,MAAM,MAAM;AAAA,aACb;AACH,gBAAM,MAAM,OAAO,KAAK,MAAM,UAAU;AACxC,gBAAM,MAAM,QAAQ,KAAK,MAAM,UAAU,SAAS;AAClD;AAAA,aAEG;AACH,gBAAM,MAAM,OAAO,KAAK,MAAM,UAAU;AACxC,gBAAM,MAAM,QAAQ,KAAK,MAAM,UAAU,SAAS;AAClD;AAAA,aAEG;AACH,cAAI,cAAc,KAAK,MAAM,UAAU;AACvC,cAAI,cAAc,KAAK,MAAM,UAAU;AAEvC,cAAI,OAAO,gBAAgB,YAAY,OAAO,gBAAgB,UAAU;AACtE,kBAAM,MAAM,OAAO,IAAY,uBAAe,GAAG,GAAG,CAAE,YAAW,eAAe,CAAE,YAAW,aAAa,CAAC;AAAA,cACzG,OAAO;AAAA,cACP,QAAQ;AAAA,eACP;AAAA,cACD,OAAO;AAAA,cACP,QAAQ;AAAA;AAAA;AAAA;AAMhB,UAAI,gBAAgB,UAAU,SAAS;AACvC,+BAAyB,OAAO,WAAW,aAAa,SAAU,OAAO;AACvE,eAAO,MAAM;AAAA;AAEf,YAAM,IAAI;AACV,eAAS,iBAAiB,KAAK,WAAW;AAC1C,UAAI,QAAQ,cAAc,IAAI;AAC9B,0BAAoB,OAAO,UAAU,cAAc,KAAK,2BAA2B,OAAO,cAAc,IAAI;AAC5G,gBAAU,OAAO,WAAW;AAAA;AAG9B,UAAM,SAAS,SAAU,MAAM;AAC7B,UAAI,WAAS,KAAK;AAClB,UAAI,YAAY,KAAK;AACrB,UAAI,QAAQ,UAAU,IAAI;AAC1B,UAAI,QAAQ,UAAU,IAAI;AAC1B,UAAI,gBAAgB,UAAU,SAAS;AACvC,UAAI,OAAO,IAAY,aAAK;AAAA,QAC1B,OAAO;AAAA,UACL,GAAG,SAAS,OAAO,QAAQ,QAAQ,SAAO;AAAA,UAC1C,GAAG,SAAS,OAAO,QAAQ,SAAS,SAAO;AAAA,UAC3C,OAAO,SAAO;AAAA,UACd,QAAQ,SAAO;AAAA;AAAA,QAEjB,OAAO,UAAU,SAAS,aAAa;AAAA,QACvC,IAAI;AAAA;AAEN,oBAAc,MAAM,qBAAqB,YAAY;AAAA,QACnD,cAAc;AAAA,QACd,gBAAgB,KAAK;AAAA,QACrB,aAAa,KAAK;AAAA;AAEpB,WAAK,wBAAwB;AAC7B,WAAK,SAAS,QAAQ,KAAK,UAAU;AACrC,WAAK,SAAS,SAAS,KAAK,UAAU,SAAS;AAC/C,+BAAyB,MAAM;AAC/B,YAAM,IAAI;AACV,eAAS,iBAAiB,KAAK,WAAW;AAC1C,gBAAU,MAAM,WAAW;AAC3B,UAAI,QAAQ,cAAc,IAAI;AAC9B,0BAAoB,MAAM,UAAU,cAAc,KAAK,2BAA2B,OAAO,cAAc,IAAI;AAAA;AAE7G,aAAS,kBAAkB,SAAU,IAAI,WAAW;AAClD,UAAI,YAAY,SAAS,aAAa;AAEtC,UAAI,UAAU,IAAI,cAAc;AAC9B,WAAG,QAAQ,SAAU,IAAI,IAAI;AAC3B,qBAAW,0BAA0B;AACrC,eAAK,MAAM,KAAK;AAChB,eAAK,MAAM,KAAK;AAChB,eAAK;AACL,cAAI,eAAe;AAAA,YACjB,MAAM;AAAA,YACN,UAAU,YAAY;AAAA,YACtB,WAAW,SAAS,YAAY;AAAA,YAChC,QAAQ,KAAK,MAAM,IAAI;AAAA,YACvB,QAAQ,KAAK,MAAM,IAAI;AAAA;AAAA;AAI3B,WAAG,YAAY,WAAY;AACzB,qBAAW,0BAA0B;AAAA;AAGvC,WAAG,YAAY;AACf,WAAG,SAAS;AAAA;AAAA;AAIhB,QAAI,CAAC,KAAK,SAAS,YAAY,sBAAsB;AACnD,YAAM,YAAY,qBAAoB,MAAM,mBAAmB,aAAa,WAAY;AACtF,cAAM;AAAA;AAAA;AAIV,SAAK,QAAQ,YAAY;AAAA;AAG3B,cAAW,UAAU,UAAU,WAAY;AAAA;AAE3C,cAAW,OAAO;AAClB,SAAO;AAAA,EACP;AAGF,8BAA6B,MAAM,aAAa,IAAI;AAClD,MAAI,SAAS,IAAY,aAAK;AAAA,IAC5B,OAAO;AAAA,MACL,GAAG,KAAK,IAAI;AAAA,MACZ,GAAG,KAAK,IAAI;AAAA,MACZ,OAAO;AAAA,MACP,QAAQ,KAAK,SAAS;AAAA;AAAA;AAG1B,EAAQ,UAAU,QAAQ;AAAA,IACxB,OAAO;AAAA,MACL,OAAO,KAAK,QAAQ;AAAA;AAAA,KAErB,aAAa;AAChB,SAAO;AAAA;AAGT,IAAO,qBAAQ;;;ACvRf,IAAI,oBAEJ,SAAU,QAAQ;AAChB,YAAU,oBAAmB;AAE7B,gCAA6B;AAC3B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,mBAAkB;AAC/B,WAAO;AAAA;AAOT,qBAAkB,UAAU,iBAAiB,SAAU,QAAQ,SAAS;AACtE,QAAI,QAAQ,OAAO,SAAS,OAAO;AACnC,QAAI,QAAQ,OAAO,QAAQ,OAAO;AAClC,QAAI,SAAS,OAAO;AACpB,SAAK,cAAc;AACnB,QAAI,cAAc,KAAK;AAEvB,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,UAAI,OAAO,GAAG,SAAS,QAAQ,OAAO,GAAG,SAAS,GAAG;AACnD,oBAAY,OAAO,GAAG,SAAS,IAAI,cAAM,OAAO,IAAI,MAAM;AAAA,aACrD;AACL,YAAI,MAAuC;AACzC,gBAAM,IAAI,MAAM;AAAA;AAAA;AAAA;AAKtB,QAAI,SAAS,OAAO;AAClB,UAAI,QAAQ,wBAAwB,OAAO,OAAO,MAAM,MAAM;AAC9D,aAAO,MAAM;AAAA;AAGf,wBAAoB,UAAU,UAAU;AACtC,eAAS,WAAW,gBAAgB,SAAU,OAAO,KAAK;AACxD,YAAI,cAAc,MAAM;AACxB,YAAI,WAAS,YAAY,UAAU,cAAc;AAEjD,YAAI,UAAQ;AACV,cAAI,YAAY,SAAO;AACvB,cAAI,aAAa,YAAY,YAAY;AAEzC,cAAI,YAAY;AACd,kBAAM,cAAc;AAAA;AAAA;AAIxB,eAAO;AAAA;AAET,eAAS,WAAW,gBAAgB,SAAU,OAAO,KAAK;AACxD,YAAI,cAAc,MAAM;AACxB,YAAI,OAAO,YAAY,WAAW,eAAe;AACjD,YAAI,WAAS,KAAK,MAAM;AAExB,YAAI,UAAQ;AACV,cAAI,QAAQ,SAAO;AACnB,cAAI,aAAa,YAAY,YAAY;AAEzC,cAAI,YAAY;AACd,kBAAM,cAAc;AAAA;AAAA;AAIxB,eAAO;AAAA;AAAA;AAAA;AAKb,qBAAkB,UAAU,kBAAkB,SAAU,WAAW,eAAe;AAChF,QAAI,QAAQ,KAAK,OAAO,QAAQ,KAAK,OAAO;AAC5C,QAAI,WAAW,MAAM;AACrB,aAAS,SAAS,cAAc;AAChC,aAAS,SAAS,cAAc;AAAA;AASlC,qBAAkB,UAAU,WAAW,WAAY;AACjD,WAAO,KAAK,UAAU;AAAA;AASxB,qBAAkB,UAAU,cAAc,WAAY;AACpD,WAAO,KAAK,WAAW;AAAA;AAGzB,qBAAkB,UAAU,gBAAgB,SAAU,WAAW,gBAAgB,UAAU;AACzF,qBAAiB,KAAK;AACpB,aAAO,MAAM,QAAQ,OAAO;AAAA;AAI9B,QAAI,aAAa,QAAQ;AACvB,UAAI,SAAS,KAAK,cAAc,WAAW;AAC3C,UAAI,aAAa,OAAO;AACxB,UAAI,YAAY,OAAO;AACvB,UAAI,WAAW,WAAW,SAAS,SAAS,WAAW;AACvD,aAAO,oBAAoB,aAAa;AAAA,QACtC,MAAM;AAAA,QACN,OAAO;AAAA,QACP,SAAS,QAAQ;AAAA;AAAA,WAGhB;AACD,UAAI,OAAO,KAAK,WAAW,eAAe;AAC1C,UAAI,QAAQ,KAAK,YAAY;AAC7B,UAAI,SAAS,KAAK,cAAc,WAAW,UAAU,KAAK;AAC1D,aAAO,oBAAoB,aAAa;AAAA,QACtC,MAAM,UAAU,OAAO,SAAS,KAAK;AAAA,QACrC;AAAA,QACA,SAAS,QAAQ;AAAA;AAAA;AAAA;AAKzB,qBAAkB,UAAU,gBAAgB,WAAY;AAAA;AAGxD,qBAAkB,UAAU,gBAAgB,SAAU,WAAW,UAAU;AACzE,QAAI,SAAS,OAAO,UAAU,cAAc,KAAK,MAAM,WAAW;AAElE,QAAI,OAAO,SAAS,QAAQ,aAAa,QAAQ;AAC/C,UAAI,OAAO,KAAK,WAAW,eAAe;AAC1C,UAAI,YAAY,KAAK,YAAY;AACjC,aAAO,QAAQ;AAAA;AAGjB,WAAO;AAAA;AAGT,qBAAkB,OAAO;AACzB,qBAAkB,gBAAgB;AAAA,IAChC,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,kBAAkB;AAAA,IAClB,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,SAAS;AAAA,IACT,WAAW;AAAA,IACX,kBAAkB;AAAA,IAClB,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,MACV,UAAU;AAAA;AAAA,IAEZ,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,WAAW;AAAA,MACT,OAAO;AAAA,MACP,SAAS;AAAA,MACT,WAAW;AAAA;AAAA,IAEb,UAAU;AAAA,MACR,OAAO;AAAA,QACL,MAAM;AAAA;AAAA,MAER,WAAW;AAAA,QACT,SAAS;AAAA;AAAA;AAAA,IAGb,QAAQ;AAAA,MACN,WAAW;AAAA,QACT,aAAa;AAAA;AAAA;AAAA,IAGjB,iBAAiB;AAAA,IACjB,mBAAmB;AAAA;AAErB,SAAO;AAAA,EACP;AAEF,IAAO,uBAAQ;;;AChMA,sBAAsB,SAAS,KAAK;AACjD,UAAQ,iBAAiB,UAAU,SAAU,aAAa;AACxD,QAAI,YAAY,YAAY,IAAI;AAChC,QAAI,UAAU,YAAY,IAAI;AAC9B,QAAI,aAAa,aAAY,aAAa;AAC1C,gBAAY,aAAa;AACzB,QAAI,QAAQ,WAAW;AACvB,QAAI,SAAS,WAAW;AACxB,QAAI,QAAQ,YAAY;AACxB,QAAI,QAAQ,MAAM;AAClB,QAAI,QAAQ,MAAM;AAClB,sBAAkB;AAClB,QAAI,gBAAgB,AAAO,OAAO,OAAO,SAAU,MAAM;AACvD,aAAO,KAAK,YAAY,UAAU;AAAA;AAEpC,QAAI,aAAa,cAAc,WAAW,IAAI,IAAI,YAAY,IAAI;AAClE,QAAI,SAAS,YAAY,IAAI;AAC7B,QAAI,YAAY,YAAY,IAAI;AAChC,iBAAa,OAAO,OAAO,WAAW,SAAS,OAAO,QAAQ,YAAY,QAAQ;AAAA;AAAA;AAOtF,sBAAqB,aAAa,KAAK;AACrC,SAAO,AAAO,cAAc,YAAY,sBAAsB;AAAA,IAC5D,OAAO,IAAI;AAAA,IACX,QAAQ,IAAI;AAAA;AAAA;AAIhB,sBAAsB,OAAO,OAAO,WAAW,SAAS,OAAO,QAAQ,YAAY,QAAQ,WAAW;AACpG,sBAAoB,OAAO,OAAO,WAAW,OAAO,QAAQ,QAAQ;AACpE,oBAAkB,OAAO,OAAO,QAAQ,OAAO,SAAS,YAAY;AACpE,oBAAkB,OAAO;AAAA;AAO3B,2BAA2B,OAAO;AAChC,EAAO,KAAK,OAAO,SAAU,MAAM;AACjC,QAAI,SAAS,IAAI,KAAK,UAAU;AAChC,QAAI,SAAS,IAAI,KAAK,SAAS;AAC/B,QAAI,eAAe,KAAK,cAAc;AACtC,QAAI,QAAQ,KAAK,IAAI,QAAQ,QAAQ;AACrC,SAAK,UAAU;AAAA,MACb;AAAA,OACC;AAAA;AAAA;AAWP,6BAA6B,OAAO,OAAO,WAAW,OAAO,QAAQ,QAAQ,WAAW;AAGtF,MAAI,cAAc;AAElB,MAAI,cAAc;AAElB,MAAI,gBAAgB;AACpB,MAAI,iBAAiB;AACrB,MAAI,IAAI;AAER,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,gBAAY,KAAK;AAAA;AAGnB,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,gBAAY,KAAK,MAAM,GAAG,QAAQ;AAElC,QAAI,YAAY,OAAO,GAAG;AACxB,oBAAc,KAAK,MAAM;AAAA;AAAA;AAI7B,MAAI,eAAe;AAInB,SAAO,cAAc,QAAQ;AAC3B,aAAS,MAAM,GAAG,MAAM,cAAc,QAAQ,OAAO;AACnD,UAAI,OAAO,cAAc;AACzB,UAAI,OAAO,KAAK,UAAU,KAAK,eAAe,KAAK;AACnD,UAAI,cAAc,KAAK,SAAS,QAAQ,KAAK,SAAS;AAEtD,UAAI,eAAe,KAAK,QAAQ,cAAc;AAC5C,uBAAe,KAAK;AAAA;AAGtB,WAAK,UAAU;AAAA,QACb,OAAO,cAAc,KAAK,QAAQ;AAAA,SACjC;AACH,iBAAW,aAAa,KAAK,UAAU;AAAA,QACrC,IAAI;AAAA,SACH,QAAQ,KAAK,UAAU;AAAA,QACxB,IAAI;AAAA,SACH;AAEH,eAAS,UAAU,GAAG,UAAU,KAAK,SAAS,QAAQ,WAAW;AAC/D,YAAI,OAAO,KAAK,SAAS;AACzB,YAAI,YAAY,MAAM,QAAQ;AAC9B,oBAAY,aAAa;AACzB,YAAI,aAAa,KAAK;AACtB,YAAI,YAAY,MAAM,QAAQ;AAE9B,YAAI,EAAE,YAAY,eAAe,KAAK,eAAe,QAAQ,cAAc,GAAG;AAC5E,yBAAe,KAAK;AAAA;AAAA;AAAA;AAK1B,MAAE;AACF,oBAAgB;AAChB,qBAAiB;AAAA;AAGnB,WAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,QAAI,YAAY,OAAO,GAAG;AACxB,YAAM,IAAI,MAAM;AAAA;AAAA;AAIpB,MAAI,WAAW,eAAe,IAAI,IAAI,eAAe,IAAI;AAEzD,MAAI,aAAa,cAAc,QAAQ;AACrC,4BAAwB,OAAO,WAAW,QAAQ;AAAA;AAGpD,MAAI,KAAK,WAAW,aAAc,UAAS,aAAa,WAAY,SAAQ,aAAa;AACzF,oBAAkB,OAAO,IAAI;AAAA;AAG/B,qBAAqB,MAAM;AACzB,MAAI,OAAO,KAAK,UAAU,KAAK,eAAe,KAAK;AACnD,SAAO,KAAK,SAAS,QAAQ,KAAK,SAAS;AAAA;AAG7C,iCAAiC,OAAO,WAAW,QAAQ,UAAU;AACnE,MAAI,cAAc,SAAS;AACzB,QAAI,iBAAiB;AACrB,QAAI,cAAc;AAClB,QAAI,aAAa;AAEjB,WAAO,YAAY,QAAQ;AACzB,eAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,YAAI,OAAO,YAAY;AACvB,aAAK,UAAU;AAAA,UACb,cAAc;AAAA,WACb;AAEH,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,QAAQ,KAAK;AAC5C,cAAI,OAAO,KAAK,QAAQ;AAExB,cAAI,eAAe,QAAQ,KAAK,SAAS,GAAG;AAC1C,2BAAe,KAAK,KAAK;AAAA;AAAA;AAAA;AAK/B,oBAAc;AACd,uBAAiB;AACjB,QAAE;AAAA;AAGJ,IAAO,KAAK,OAAO,SAAU,OAAM;AACjC,UAAI,CAAC,YAAY,QAAO;AACtB,cAAK,UAAU;AAAA,UACb,OAAO,KAAK,IAAI,GAAG,WAAW,MAAK,YAAY;AAAA,WAC9C;AAAA;AAAA;AAAA,aAGE,cAAc,WAAW;AAClC,mBAAe,OAAO;AAAA;AAAA;AAY1B,wBAAwB,OAAO,UAAU;AACvC,EAAO,KAAK,OAAO,SAAU,MAAM;AACjC,QAAI,CAAC,YAAY,SAAS,CAAC,KAAK,SAAS,QAAQ;AAC/C,WAAK,UAAU;AAAA,QACb,OAAO;AAAA,SACN;AAAA;AAAA;AAAA;AAYT,2BAA2B,OAAO,IAAI,QAAQ;AAC5C,EAAO,KAAK,OAAO,SAAU,MAAM;AACjC,QAAI,YAAY,KAAK,YAAY,QAAQ;AACzC,eAAW,aAAa,KAAK,UAAU;AAAA,MACrC,GAAG;AAAA,OACF,QAAQ,KAAK,UAAU;AAAA,MACxB,GAAG;AAAA,OACF;AAAA;AAAA;AAeP,2BAA2B,OAAO,OAAO,QAAQ,OAAO,SAAS,YAAY,QAAQ;AACnF,MAAI,iBAAiB,sBAAsB,OAAO;AAClD,sBAAoB,gBAAgB,OAAO,QAAQ,OAAO,SAAS;AACnE,oBAAkB,gBAAgB,SAAS,QAAQ,OAAO;AAE1D,WAAS,QAAQ,GAAG,aAAa,GAAG,cAAc;AAGhD,aAAS;AACT,qBAAiB,gBAAgB,OAAO;AACxC,sBAAkB,gBAAgB,SAAS,QAAQ,OAAO;AAC1D,qBAAiB,gBAAgB,OAAO;AACxC,sBAAkB,gBAAgB,SAAS,QAAQ,OAAO;AAAA;AAAA;AAI9D,+BAA+B,OAAO,QAAQ;AAC5C,MAAI,iBAAiB;AACrB,MAAI,UAAU,WAAW,aAAa,MAAM;AAC5C,MAAI,cAAc,UAAU,OAAO,SAAU,MAAM;AACjD,WAAO,KAAK,YAAY;AAAA;AAE1B,cAAY,KAAK,KAAK,SAAU,GAAG,GAAG;AACpC,WAAO,IAAI;AAAA;AAEb,EAAO,KAAK,YAAY,MAAM,SAAU,KAAK;AAC3C,mBAAe,KAAK,YAAY,QAAQ,IAAI;AAAA;AAE9C,SAAO;AAAA;AAOT,6BAA6B,gBAAgB,OAAO,QAAQ,OAAO,SAAS,QAAQ;AAClF,MAAI,QAAQ;AACZ,EAAO,KAAK,gBAAgB,SAAU,OAAO;AAC3C,QAAI,IAAI,MAAM;AACd,QAAI,OAAM;AACV,IAAO,KAAK,OAAO,SAAU,MAAM;AACjC,cAAO,KAAK,YAAY;AAAA;AAE1B,QAAI,KAAK,WAAW,aAAc,SAAS,KAAI,KAAK,WAAW,OAAO,UAAU,KAAI,KAAK,WAAW;AAEpG,QAAI,KAAK,OAAO;AACd,cAAQ;AAAA;AAAA;AAGZ,EAAO,KAAK,gBAAgB,SAAU,OAAO;AAC3C,IAAO,KAAK,OAAO,SAAU,MAAM,GAAG;AACpC,UAAI,SAAS,KAAK,YAAY,QAAQ;AAEtC,UAAI,WAAW,YAAY;AACzB,aAAK,UAAU;AAAA,UACb,GAAG;AAAA,WACF;AACH,aAAK,UAAU;AAAA,UACb,IAAI;AAAA,WACH;AAAA,aACE;AACL,aAAK,UAAU;AAAA,UACb,GAAG;AAAA,WACF;AACH,aAAK,UAAU;AAAA,UACb,IAAI;AAAA,WACH;AAAA;AAAA;AAAA;AAIT,EAAO,KAAK,OAAO,SAAU,MAAM;AACjC,QAAI,SAAS,CAAC,KAAK,aAAa;AAChC,SAAK,UAAU;AAAA,MACb,IAAI;AAAA,OACH;AAAA;AAAA;AAQP,2BAA2B,gBAAgB,SAAS,QAAQ,OAAO,QAAQ;AACzE,MAAI,UAAU,WAAW,aAAa,MAAM;AAC5C,EAAO,KAAK,gBAAgB,SAAU,OAAO;AAC3C,UAAM,KAAK,SAAU,GAAG,GAAG;AACzB,aAAO,EAAE,YAAY,WAAW,EAAE,YAAY;AAAA;AAEhD,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI,KAAK;AACT,QAAI,IAAI,MAAM;AACd,QAAI,aAAa,WAAW,aAAa,OAAO;AAEhD,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,aAAO,MAAM;AACb,WAAK,KAAK,KAAK,YAAY;AAE3B,UAAI,KAAK,GAAG;AACV,gBAAQ,KAAK,YAAY,WAAW;AACpC,mBAAW,aAAa,KAAK,UAAU;AAAA,UACrC,GAAG;AAAA,WACF,QAAQ,KAAK,UAAU;AAAA,UACxB,GAAG;AAAA,WACF;AAAA;AAGL,WAAK,KAAK,YAAY,WAAW,KAAK,YAAY,cAAc;AAAA;AAGlE,QAAI,YAAY,WAAW,aAAa,QAAQ;AAEhD,SAAK,KAAK,UAAU;AAEpB,QAAI,KAAK,GAAG;AACV,cAAQ,KAAK,YAAY,WAAW;AACpC,iBAAW,aAAa,KAAK,UAAU;AAAA,QACrC,GAAG;AAAA,SACF,QAAQ,KAAK,UAAU;AAAA,QACxB,GAAG;AAAA,SACF;AACH,WAAK;AAEL,eAAS,IAAI,IAAI,GAAG,KAAK,GAAG,EAAE,GAAG;AAC/B,eAAO,MAAM;AACb,aAAK,KAAK,YAAY,WAAW,KAAK,YAAY,cAAc,UAAU;AAE1E,YAAI,KAAK,GAAG;AACV,kBAAQ,KAAK,YAAY,WAAW;AACpC,qBAAW,aAAa,KAAK,UAAU;AAAA,YACrC,GAAG;AAAA,aACF,QAAQ,KAAK,UAAU;AAAA,YACxB,GAAG;AAAA,aACF;AAAA;AAGL,aAAK,KAAK,YAAY;AAAA;AAAA;AAAA;AAAA;AAY9B,0BAA0B,gBAAgB,OAAO,QAAQ;AACvD,EAAO,KAAK,eAAe,QAAQ,WAAW,SAAU,OAAO;AAC7D,IAAO,KAAK,OAAO,SAAU,MAAM;AACjC,UAAI,KAAK,SAAS,QAAQ;AACxB,YAAI,IAAI,IAAI,KAAK,UAAU,gBAAgB,UAAU,IAAI,KAAK,UAAU;AAExE,YAAI,MAAM,IAAI;AACZ,cAAI,OAAM,KAAK,SAAS;AACxB,cAAI,OAAM,IAAI,KAAK,UAAU,cAAc,UAAU,OAAM;AAAA;AAG7D,YAAI,WAAW,YAAY;AACzB,cAAI,QAAQ,KAAK,YAAY,IAAK,KAAI,OAAO,MAAM,WAAW;AAC9D,eAAK,UAAU;AAAA,YACb,GAAG;AAAA,aACF;AAAA,eACE;AACL,cAAI,QAAQ,KAAK,YAAY,IAAK,KAAI,OAAO,MAAM,WAAW;AAC9D,eAAK,UAAU;AAAA,YACb,GAAG;AAAA,aACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAOb,wBAAwB,MAAM,QAAQ;AACpC,SAAO,OAAO,KAAK,OAAO,UAAU,KAAK;AAAA;AAG3C,sBAAsB,MAAM,QAAQ;AAClC,SAAO,OAAO,KAAK,OAAO;AAAA;AAG5B,wBAAwB,MAAM,QAAQ;AACpC,SAAO,OAAO,KAAK,OAAO,UAAU,KAAK;AAAA;AAG3C,sBAAsB,MAAM,QAAQ;AAClC,SAAO,OAAO,KAAK,OAAO;AAAA;AAG5B,gBAAgB,MAAM,QAAQ;AAC5B,SAAO,WAAW,aAAa,KAAK,YAAY,IAAI,KAAK,YAAY,KAAK,IAAI,KAAK,YAAY,IAAI,KAAK,YAAY,KAAK;AAAA;AAG3H,sBAAsB,MAAM;AAC1B,SAAO,KAAK;AAAA;AAGd,aAAa,OAAO,IAAI,QAAQ;AAC9B,MAAI,OAAM;AACV,MAAI,OAAM,MAAM;AAChB,MAAI,IAAI;AAER,SAAO,EAAE,IAAI,MAAK;AAChB,QAAI,QAAQ,CAAC,GAAG,MAAM,IAAI;AAE1B,QAAI,CAAC,MAAM,QAAQ;AACjB,cAAO;AAAA;AAAA;AAIX,SAAO;AAAA;AAOT,0BAA0B,gBAAgB,OAAO,QAAQ;AACvD,EAAO,KAAK,gBAAgB,SAAU,OAAO;AAC3C,IAAO,KAAK,OAAO,SAAU,MAAM;AACjC,UAAI,KAAK,QAAQ,QAAQ;AACvB,YAAI,IAAI,IAAI,KAAK,SAAS,gBAAgB,UAAU,IAAI,KAAK,SAAS;AAEtE,YAAI,MAAM,IAAI;AACZ,cAAI,OAAM,KAAK,QAAQ;AACvB,cAAI,OAAM,IAAI,KAAK,SAAS,cAAc,UAAU,OAAM;AAAA;AAG5D,YAAI,WAAW,YAAY;AACzB,cAAI,QAAQ,KAAK,YAAY,IAAK,KAAI,OAAO,MAAM,WAAW;AAC9D,eAAK,UAAU;AAAA,YACb,GAAG;AAAA,aACF;AAAA,eACE;AACL,cAAI,QAAQ,KAAK,YAAY,IAAK,KAAI,OAAO,MAAM,WAAW;AAC9D,eAAK,UAAU;AAAA,YACb,GAAG;AAAA,aACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAWb,2BAA2B,OAAO,QAAQ;AACxC,MAAI,UAAU,WAAW,aAAa,MAAM;AAC5C,EAAO,KAAK,OAAO,SAAU,MAAM;AACjC,SAAK,SAAS,KAAK,SAAU,GAAG,GAAG;AACjC,aAAO,EAAE,MAAM,YAAY,WAAW,EAAE,MAAM,YAAY;AAAA;AAE5D,SAAK,QAAQ,KAAK,SAAU,GAAG,GAAG;AAChC,aAAO,EAAE,MAAM,YAAY,WAAW,EAAE,MAAM,YAAY;AAAA;AAAA;AAG9D,EAAO,KAAK,OAAO,SAAU,MAAM;AACjC,QAAI,KAAK;AACT,QAAI,KAAK;AACT,IAAO,KAAK,KAAK,UAAU,SAAU,MAAM;AACzC,WAAK,UAAU;AAAA,QACb;AAAA,SACC;AACH,YAAM,KAAK,YAAY;AAAA;AAEzB,IAAO,KAAK,KAAK,SAAS,SAAU,MAAM;AACxC,WAAK,UAAU;AAAA,QACb;AAAA,SACC;AACH,YAAM,KAAK,YAAY;AAAA;AAAA;AAAA;;;AC3fd,sBAAsB,SAAS;AAC5C,UAAQ,iBAAiB,UAAU,SAAU,aAAa;AACxD,QAAI,QAAQ,YAAY;AACxB,QAAI,QAAQ,MAAM;AAElB,QAAI,MAAM,QAAQ;AAChB,UAAI,aAAa;AACjB,UAAI,aAAa;AACjB,MAAO,KAAK,OAAO,SAAU,MAAM;AACjC,YAAI,YAAY,KAAK,YAAY;AAEjC,YAAI,YAAY,YAAY;AAC1B,uBAAa;AAAA;AAGf,YAAI,YAAY,YAAY;AAC1B,uBAAa;AAAA;AAAA;AAGjB,MAAO,KAAK,OAAO,SAAU,MAAM;AACjC,YAAI,UAAU,IAAI,sBAAc;AAAA,UAC9B,MAAM;AAAA,UACN,eAAe;AAAA,UACf,YAAY,CAAC,YAAY;AAAA,UACzB,QAAQ,YAAY,IAAI;AAAA;AAE1B,YAAI,kBAAkB,QAAQ,iBAAiB,KAAK,YAAY;AAChE,YAAI,cAAc,KAAK,WAAW,IAAI,CAAC,aAAa;AAEpD,YAAI,eAAe,MAAM;AACvB,eAAK,UAAU,SAAS;AACxB,eAAK,UAAU,SAAS;AAAA,YACtB,MAAM;AAAA;AAAA,eAEH;AACL,eAAK,UAAU,SAAS;AACxB,eAAK,UAAU,SAAS;AAAA,YACtB,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACnCX,mBAAiB,WAAW;AACjC,YAAU,kBAAkB;AAC5B,YAAU,oBAAoB;AAC9B,YAAU,eAAe;AACzB,YAAU,eAAe;AACzB,YAAU,eAAe;AAAA,IACvB,MAAM;AAAA,IACN,OAAO;AAAA,IAEP,QAAQ;AAAA,KACP,SAAU,SAAS,SAAS;AAC7B,YAAQ,cAAc;AAAA,MACpB,UAAU;AAAA,MACV,SAAS;AAAA,MACT,OAAO;AAAA,OACN,SAAU,aAAa;AACxB,kBAAY,gBAAgB,QAAQ,WAAW,CAAC,QAAQ,QAAQ,QAAQ;AAAA;AAAA;AAAA;;;ACf9E,IAAI,wBAEJ,WAAY;AACV,oCAAiC;AAAA;AAMjC,yBAAsB,UAAU,iBAAiB,SAAU,QAAQ,SAAS;AAI1E,QAAI;AACJ,QAAI,aAAa,QAAQ,aAAa,SAAS,KAAK,IAAI;AACxD,QAAI,aAAa,QAAQ,aAAa,SAAS,KAAK,IAAI;AACxD,QAAI,YAAY,WAAW,IAAI;AAC/B,QAAI,YAAY,WAAW,IAAI;AAC/B,QAAI;AAGJ,QAAI,cAAc,YAAY;AAC5B,aAAO,SAAS;AAChB,oBAAc,WAAW;AACzB,mBAAa;AAAA,eACJ,cAAc,YAAY;AACnC,aAAO,SAAS;AAChB,oBAAc,WAAW;AACzB,mBAAa;AAAA,WACR;AACL,aAAO,SAAS,OAAO,UAAU;AAAA;AAGnC,QAAI,YAAY,CAAC,KAAK;AACtB,QAAI,mBAAmB,OAAO,WAAW,eAAe,IAAI;AAC5D,QAAI,cAAc,KAAK,eAAe,UAAU;AAChD,QAAI,eAAe,UAAU,IAAI;AACjC,QAAI,aAAa,CAAC,YAAY;AAC9B,QAAI,eAAe,WAAW,kBAAkB,IAAI;AACpD,QAAI,gBAAgB,WAAW,IAAI,kBAAkB,IAAI;AACzD,QAAI,OAAO,OAAO;AAGlB,QAAI,QAAQ,YAAY;AACtB,UAAI,kBAAkB;AACtB,MAAO,KAAK,MAAM,SAAU,MAAM,OAAO;AACvC,YAAI;AAEJ,YAAI,AAAO,QAAQ,OAAO;AACxB,oBAAU,KAAK;AAEf,eAAK,QAAQ;AAAA,mBACJ,AAAO,QAAQ,KAAK,QAAQ;AACrC,oBAAU,AAAO,OAAO,IAAI;AAC5B,kBAAQ,QAAQ,QAAQ,MAAM;AAE9B,eAAK,MAAM,QAAQ;AAAA,eACd;AACL,oBAAU;AAAA;AAGZ,wBAAgB,KAAK;AAAA;AAEvB,aAAO,OAAO;AAAA;AAGhB,QAAI,yBAAyB,KAAK;AAClC,QAAI,kBAAkB,CAAC;AAAA,MACrB,MAAM;AAAA,MACN,MAAM,uBAAuB;AAAA,MAC7B;AAAA,MACA,WAAW;AAAA,QACT,SAAS;AAAA,QACT,UAAU;AAAA;AAAA,MAEZ,SAAS,CAAC;AAAA,OACT;AAAA,MACD,MAAM;AAAA,MACN,MAAM,uBAAuB;AAAA,MAC7B,SAAS,uBAAuB;AAAA;AAElC,WAAO,uBAAuB,MAAM;AAAA,MAClC;AAAA,MACA,iBAAiB,uBAAuB,SAAS;AAAA,MACjD,iBAAiB,AAAO,MAAM,iCAAiC,iBAAiB;AAAA;AAAA;AASpF,yBAAsB,UAAU,cAAc,WAAY;AACxD,QAAI,MAAM,KAAK;AACf,WAAO,KAAK,QAAQ,aAAa,MAAM,QAAQ,KAAK,IAAI,MAAM,cAAc;AAAA;AAG9E,SAAO;AAAA;;;AClGT,IAAI,qBAEJ,SAAU,QAAQ;AAChB,YAAU,qBAAoB;AAE9B,iCAA8B;AAC5B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,oBAAmB;AAUhC,UAAM,yBAAyB,CAAC;AAAA,MAC9B,MAAM;AAAA,MACN,gBAAgB;AAAA,OACf;AAAA,MACD,MAAM;AAAA,MACN,gBAAgB;AAAA,OACf;AAAA,MACD,MAAM;AAAA,MACN,gBAAgB;AAAA,OACf;AAAA,MACD,MAAM;AAAA,MACN,gBAAgB;AAAA,OACf;AAAA,MACD,MAAM;AAAA,MACN,gBAAgB;AAAA;AAElB,UAAM,iBAAiB;AACvB,WAAO;AAAA;AAGT,sBAAmB,OAAO;AAC1B,sBAAmB,eAAe,CAAC,SAAS,SAAS;AACrD,sBAAmB,gBAAgB;AAAA,IACjC,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,kBAAkB;AAAA,IAClB,iBAAiB;AAAA,IACjB,QAAQ;AAAA,IACR,UAAU,CAAC,GAAG;AAAA,IACd,WAAW;AAAA,MACT,OAAO;AAAA,MACP,aAAa;AAAA;AAAA,IAEf,UAAU;AAAA,MACR,OAAO;AAAA,MACP,WAAW;AAAA,QACT,aAAa;AAAA,QACb,YAAY;AAAA,QACZ,eAAe;AAAA,QACf,eAAe;AAAA,QACf,aAAa;AAAA;AAAA;AAAA,IAGjB,mBAAmB;AAAA;AAErB,SAAO;AAAA,EACP;AAEF,MAAM,oBAAoB,uBAAuB;AACjD,IAAO,wBAAQ;;;AChEf,IAAI,cAEJ,SAAU,QAAQ;AAChB,YAAU,cAAa;AAEvB,0BAAuB;AACrB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,aAAY;AACzB,WAAO;AAAA;AAGT,eAAY,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK;AAClE,QAAI,OAAO,YAAY;AACvB,QAAI,QAAQ,KAAK;AACjB,QAAI,UAAU,KAAK;AAGnB,QAAI,CAAC,KAAK,OAAO;AACf,YAAM;AAAA;AAGR,QAAI,WAAW,YAAY,IAAI,cAAc,eAAe,IAAI;AAChE,SAAK,KAAK,SAAS,IAAI,SAAU,QAAQ;AACvC,UAAI,KAAK,SAAS,SAAS;AACzB,YAAI,aAAa,KAAK,cAAc;AACpC,YAAI,WAAW,gBAAgB,YAAY,MAAM,QAAQ,UAAU;AACnE,aAAK,iBAAiB,QAAQ;AAC9B,cAAM,IAAI;AAAA;AAAA,OAEX,OAAO,SAAU,QAAQ,QAAQ;AAClC,UAAI,WAAW,QAAQ,iBAAiB;AAExC,UAAI,CAAC,KAAK,SAAS,SAAS;AAC1B,cAAM,OAAO;AACb;AAAA;AAGF,UAAI,aAAa,KAAK,cAAc;AAEpC,UAAI,CAAC,UAAU;AACb,mBAAW,gBAAgB,YAAY,MAAM,QAAQ;AAAA,aAChD;AACL,qBAAa;AACb,4BAAoB,YAAY,UAAU,MAAM;AAAA;AAGlD,YAAM,IAAI;AACV,WAAK,iBAAiB,QAAQ;AAAA,OAC7B,OAAO,SAAU,QAAQ;AAC1B,UAAI,KAAK,QAAQ,iBAAiB;AAClC,YAAM,MAAM,OAAO;AAAA,OAClB;AACH,SAAK,QAAQ;AAAA;AAGf,eAAY,UAAU,SAAS,SAAU,SAAS;AAChD,QAAI,QAAQ,KAAK;AACjB,QAAI,OAAO,KAAK;AAChB,SAAK,QAAQ;AACb,YAAQ,KAAK,kBAAkB,SAAU,IAAI;AAC3C,YAAM,MAAM,OAAO;AAAA;AAAA;AAIvB,eAAY,OAAO;AACnB,SAAO;AAAA,EACP;AAEF,IAAI,eAEJ,WAAY;AACV,2BAAwB;AAAA;AAExB,SAAO;AAAA;AAGT,IAAI,UAEJ,SAAU,QAAQ;AAChB,YAAU,UAAS;AAEnB,oBAAiB,MAAM;AACrB,QAAI,QAAQ,OAAO,KAAK,MAAM,SAAS;AAEvC,UAAM,OAAO;AACb,WAAO;AAAA;AAGT,WAAQ,UAAU,kBAAkB,WAAY;AAC9C,WAAO,IAAI;AAAA;AAGb,WAAQ,UAAU,YAAY,SAAU,KAAK,OAAO;AAClD,QAAI,OAAO,MAAM;AACjB,QAAI,IAAI;AACR,QAAI,OAAO,KAAK,GAAG,IAAI,KAAK,GAAG;AAC/B;AAEA,WAAO,IAAI,GAAG,KAAK;AACjB,UAAI,OAAO,KAAK,GAAG,IAAI,KAAK,GAAG;AAAA;AAGjC,QAAI;AAEJ,WAAO,IAAI,KAAK,QAAQ,KAAK;AAC3B,UAAI,OAAO,KAAK,GAAG,IAAI,KAAK,GAAG;AAC/B;AACA,UAAI,OAAO,KAAK,GAAG,IAAI,KAAK,GAAG;AAAA;AAAA;AAInC,SAAO;AAAA,EACP;AAEF,yBAAyB,YAAY,MAAM,WAAW,UAAU,QAAQ;AACtE,MAAI,OAAO,WAAW;AACtB,MAAI,KAAK,IAAI,QAAQ;AAAA,IACnB,OAAO;AAAA,MACL,QAAQ,SAAS,UAAU,MAAM,UAAU,cAAc;AAAA;AAAA;AAG7D,sBAAoB,YAAY,IAAI,MAAM,WAAW;AACrD,SAAO;AAAA;AAGT,6BAA6B,YAAY,IAAI,MAAM,WAAW,QAAQ;AACpE,MAAI,cAAc,KAAK;AACvB,MAAI,eAAe,gBAAQ,SAAS,cAAc;AAClD,eAAa,IAAI;AAAA,IACf,OAAO;AAAA,MACL,QAAQ,WAAW;AAAA;AAAA,KAEpB,aAAa;AAChB,KAAG,SAAS,KAAK,cAAc,WAAW;AAC1C,KAAG,MAAM,gBAAgB;AACzB,KAAG,KAAK;AACR,MAAI,YAAY,KAAK,aAAa;AAClC,2BAAyB,IAAI;AAC7B,sBAAoB,IAAI,UAAU,IAAI,CAAC,YAAY,WAAW,UAAU,IAAI,CAAC,YAAY;AAAA;AAG3F,mBAAmB,QAAQ,KAAK,YAAY;AAC1C,SAAO,AAAO,IAAI,QAAQ,SAAU,OAAO;AACzC,YAAQ,MAAM;AACd,UAAM,OAAO,WAAW;AACxB,WAAO;AAAA;AAAA;AAIX,IAAO,sBAAQ;;;AC9JA,uBAAuB,SAAS,KAAK;AAAA;;;ACEpD,IAAI,QAAc;AACH,uBAAuB,SAAS;AAC7C,MAAI,cAAc,kBAAkB;AACpC,QAAK,aAAa,SAAU,WAAW;AACrC,QAAI,eAAe,UAAU;AAE7B,QAAI,CAAC,aAAa,QAAQ;AACxB;AAAA;AAGF,kBAAc;AACd,UAAK,cAAc,SAAU,aAAa,KAAK;AAC7C,yBAAmB,aAAa,UAAU,cAAc,MAAM,UAAU,aAAa;AAAA;AAAA;AAAA;AAQ3F,2BAA2B,SAAS;AAClC,MAAI,SAAS;AACb,MAAI,WAAW;AACf,UAAQ,iBAAiB,WAAW,SAAU,aAAa;AACzD,QAAI,WAAW,YAAY;AAC3B,QAAI,MAAM,AAAO,QAAQ,UAAU;AAEnC,QAAI,MAAM,GAAG;AACX,YAAM,SAAS;AACf,eAAS,OAAO;AAChB,aAAO,OAAO;AAAA,QACZ,MAAM;AAAA,QACN,cAAc;AAAA;AAAA;AAIlB,WAAO,KAAK,aAAa,KAAK;AAAA;AAEhC,SAAO;AAAA;AAOT,uBAAuB,WAAW;AAChC,MAAI;AACJ,MAAI,WAAW,UAAU;AACzB,MAAI,eAAe,UAAU;AAC7B,MAAI,cAAc,aAAa;AAC/B,MAAI,eAAe,UAAU,eAAe;AAC5C,MAAI,gBAAgB,UAAU,gBAAgB;AAC9C,MAAI,YAAY;AAChB,MAAI;AAEJ,MAAI,SAAS,SAAS,YAAY;AAChC,gBAAY,SAAS;AAAA,SAChB;AACL,QAAI,iBAAiB;AACrB,UAAK,cAAc,SAAU,aAAa;AACxC,uBAAiB,KAAK,IAAI,gBAAgB,YAAY,UAAU;AAAA;AAElE,aAAS,SAAS,aAAa,KAAK,IAAI,OAAO,KAAK,OAAO,MAAM;AAAA;AAGnE,QAAK,cAAc,SAAU,aAAa;AACxC,QAAI,gBAAgB,YAAY,IAAI;AAEpC,QAAI,CAAC,AAAO,QAAQ,gBAAgB;AAClC,sBAAgB,CAAC,eAAe;AAAA;AAGlC,cAAU,KAAK,CAAC,cAAa,cAAc,IAAI,cAAc,GAAG,cAAa,cAAc,IAAI,cAAc;AAAA;AAE/G,MAAI,iBAAiB,YAAY,MAAM;AACvC,MAAI,SAAS,iBAAiB,cAAc;AAC5C,MAAI,WAAY,kBAAiB,SAAU,eAAc,MAAM;AAC/D,MAAI,OAAO,WAAW,IAAI,iBAAiB;AAC3C,QAAK,cAAc,SAAU,aAAa,KAAK;AAC7C,kBAAc,KAAK;AACnB,YAAQ,SAAS;AACjB,iBAAa,KAAK,KAAK,IAAI,KAAK,IAAI,UAAU,UAAU,KAAK,KAAK,UAAU,KAAK;AAAA;AAAA;AAQrF,4BAA4B,aAAa,QAAQ,UAAU;AACzD,MAAI,WAAW,YAAY;AAC3B,MAAI,OAAO,YAAY;AACvB,MAAI,YAAY,WAAW;AAC3B,MAAI,UAAU,YAAY,IAAI,cAAc,eAAe,IAAI;AAC/D,MAAI,UAAU,IAAI;AAClB,MAAI,YAAY,CAAC,KAAK;AACtB,MAAI,OAAO,KAAK,aAAa,UAAU;AACvC,MAAI,QAAQ,KAAK,iBAAiB,UAAU;AAE5C,MAAI,QAAQ,QAAQ,MAAM,SAAS,GAAG;AACpC;AAAA;AAGF,WAAS,YAAY,GAAG,YAAY,KAAK,SAAS,aAAa;AAC7D,QAAI,aAAa,KAAK,IAAI,MAAM;AAChC,QAAI,SAAS,SAAS,YAAY,MAAM,IAAI;AAC5C,QAAI,OAAO,SAAS,YAAY,MAAM,IAAI;AAC1C,QAAI,OAAO,SAAS,YAAY,MAAM,IAAI;AAC1C,QAAI,OAAO,SAAS,YAAY,MAAM,IAAI;AAC1C,QAAI,OAAO,SAAS,YAAY,MAAM,IAAI;AAC1C,QAAI,OAAO;AACX,eAAW,MAAM,MAAM;AACvB,eAAW,MAAM,MAAM;AACvB,SAAK,KAAK,MAAM,MAAM,MAAM;AAC5B,eAAW,MAAM;AACjB,eAAW,MAAM;AACjB,eAAW,MAAM;AACjB,SAAK,cAAc,WAAW;AAAA,MAC5B,cAAc,OAAO;AAAA,MACrB;AAAA;AAAA;AAIJ,oBAAkB,aAAY,KAAK,YAAW;AAC5C,QAAI,MAAM,KAAK,IAAI,KAAK;AACxB,QAAI,IAAI;AACR,MAAE,WAAW;AACb,MAAE,WAAW;AACb,QAAI;AAEJ,QAAI,MAAM,gBAAe,MAAM,MAAM;AACnC,cAAQ,CAAC,KAAK;AAAA,WACT;AACL,cAAQ,SAAS,YAAY;AAC7B,YAAM,YAAY;AAAA;AAGpB,WAAO;AAAA;AAGT,sBAAoB,OAAM,OAAO,OAAO;AACtC,QAAI,SAAS,MAAM;AACnB,QAAI,SAAS,MAAM;AACnB,WAAO,YAAY;AACnB,WAAO,YAAY;AACnB,YAAQ,MAAK,KAAK,QAAQ,UAAU,MAAK,KAAK,QAAQ;AAAA;AAGxD,sBAAoB,OAAM,WAAW;AACnC,QAAI,OAAO,UAAU;AACrB,QAAI,KAAK,UAAU;AACnB,SAAK,YAAY;AACjB,OAAG,YAAY;AACf,UAAK,KAAK,MAAM;AAAA;AAAA;;;ACvIL,4BAA4B,SAAS,KAAK;AACvD,QAAM,OAAO;AACb,MAAI,UAAU;AACd,MAAI,WAAW;AACf,MAAI,WAAW,IAAI;AACnB,MAAI,aAAa,aAAa,UAAU,aAAa;AAErD,WAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,QAAI,UAAU,IAAI,QAAQ,GAAG;AAC7B,QAAI,KAAK,SAAS,SAAS;AAC3B,QAAI,KAAK,SAAS,SAAS;AAC3B,QAAI,KAAK,SAAS,SAAS;AAC3B,QAAI,MAAM,QAAQ;AAClB,QAAI,MAAM,QAAQ,QAAQ,SAAS;AACnC,QAAI,QAAS,aAAY,OAAO,MAAM,YAAa,MAAK;AACxD,QAAI,MAAM,aAAa,MAAM,KAAK,IAAI,KAAK,KAAK;AAChD,QAAI,OAAO,aAAa,MAAM,KAAK,IAAI,KAAK,KAAK;AACjD,QAAI,oBAAoB,IAAI;AAC5B,QAAI,WAAW,WAAW,qBAAqB,kBAAkB;AAAA,MAC/D,OAAO;AAAA,SACJ,SAAS,qBAAqB,kBAAkB,QAAQ,WAAW,IAAI,MAAM,IAAI;AACtF,YAAQ,KAAK,CAAC,UAAU,KAAK,IAAI,IAAI,IAAI;AAEzC,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,UAAI,WAAW,QAAQ;AAEvB,UAAI,WAAW,OAAO,WAAW,MAAM;AACrC,YAAI,UAAU,CAAC,UAAU;AACzB,iBAAS,KAAK;AAAA;AAAA;AAAA;AAKpB,SAAO;AAAA,IACL;AAAA,IACA;AAAA;AAAA;;;ACpDG,IAAI,mBAAmB;AAAA,EAC5B,MAAM;AAAA,EACN,WAAW,mBAAmB,QAAQ;AACpC,QAAI,WAAW,OAAO;AAEtB,QAAI,SAAS,iBAAiB,0BAA0B;AACtD,UAAI,SAAS;AAEb,UAAI,MAAuC;AACzC,iBAAS,cAAc;AAAA;AAGzB,iBAAW;AAAA;AAGb,QAAI,SAAS,mBAAmB,SAAS,cAAc,OAAO;AAC9D,WAAO,CAAC;AAAA,MACN,YAAY,CAAC,YAAY,OAAO,MAAM,MAAM,MAAM;AAAA,MAClD,MAAM,OAAO;AAAA,OACZ;AAAA,MACD,MAAM,OAAO;AAAA;AAAA;AAAA;;;AClBZ,mBAAiB,WAAW;AACjC,YAAU,oBAAoB;AAC9B,YAAU,kBAAkB;AAC5B,YAAU,eAAe;AACzB,YAAU,eAAe;AACzB,YAAU,kBAAkB;AAAA;;;ACF9B,IAAI,aAAa,CAAC,SAAS;AAE3B,IAAI,kBAEJ,SAAU,QAAQ;AAChB,YAAU,kBAAiB;AAE3B,8BAA2B;AACzB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,iBAAgB;AAC7B,WAAO;AAAA;AAGT,mBAAgB,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK;AAEtE,SAAK,MAAM;AAEX,SAAK,gBAAgB;AAErB,SAAK,eAAe,KAAK,aAAa,eAAe,KAAK,cAAc;AAAA;AAG1E,mBAAgB,UAAU,2BAA2B,SAAU,aAAa,SAAS,KAAK;AACxF,SAAK;AAEL,SAAK,gBAAgB;AAAA;AAGvB,mBAAgB,UAAU,oBAAoB,SAAU,QAAQ,aAAa,SAAS,KAAK;AACzF,SAAK,eAAe,KAAK,wBAAwB,QAAQ,eAAe,KAAK,yBAAyB,QAAQ;AAAA;AAGhH,mBAAgB,UAAU,kBAAkB,SAAU,aAAa;AACjE,QAAI,cAAc,YAAY,gBAAgB;AAE9C,QAAI,KAAK,gBAAgB,QAAQ,gBAAgB,KAAK,cAAc;AAClE,WAAK,eAAe;AAEpB,WAAK;AAAA;AAAA;AAIT,mBAAgB,UAAU,gBAAgB,SAAU,aAAa;AAC/D,QAAI,OAAO,YAAY;AACvB,QAAI,UAAU,KAAK;AACnB,QAAI,QAAQ,KAAK;AACjB,QAAI,cAAc,KAAK,UAAU;AACjC,QAAI,YAAY,YAAY,IAAI,QAAQ;AACxC,QAAI,QAAQ,YAAY;AACxB,QAAI,WAAW,MAAM,WAAW,MAAM;AAGtC,QAAI,CAAC,KAAK,OAAO;AACf,YAAM;AAAA;AAGR,SAAK,KAAK,SAAS,IAAI,SAAU,QAAQ;AACvC,UAAI,KAAK,SAAS,SAAS;AACzB,YAAI,aAAa,KAAK,cAAc;AAEpC,YAAI,aAAa,mBAAmB,UAAU,aAAa;AACzD;AAAA;AAGF,YAAI,KAAK,iBAAgB,YAAY,QAAQ;AAC7C,QAAQ,UAAU,IAAI;AAAA,UACpB,OAAO;AAAA,YACL,QAAQ,WAAW;AAAA;AAAA,WAEpB,aAAa;AAChB,qBAAa,IAAI,MAAM,QAAQ;AAC/B,cAAM,IAAI;AACV,aAAK,iBAAiB,QAAQ;AAAA;AAAA,OAE/B,OAAO,SAAU,QAAQ,QAAQ;AAClC,UAAI,KAAK,QAAQ,iBAAiB;AAElC,UAAI,CAAC,KAAK,SAAS,SAAS;AAC1B,cAAM,OAAO;AACb;AAAA;AAGF,UAAI,aAAa,KAAK,cAAc;AAEpC,UAAI,aAAa,mBAAmB,UAAU,aAAa;AACzD,cAAM,OAAO;AACb;AAAA;AAGF,UAAI,CAAC,IAAI;AACP,aAAK,iBAAgB,YAAY;AAAA,aAC5B;AACL,QAAQ,YAAY,IAAI;AAAA,UACtB,OAAO;AAAA,YACL,QAAQ,WAAW;AAAA;AAAA,WAEpB,aAAa;AAChB,qBAAa;AAAA;AAGf,mBAAa,IAAI,MAAM,QAAQ;AAC/B,YAAM,IAAI;AACV,WAAK,iBAAiB,QAAQ;AAAA,OAC7B,OAAO,SAAU,QAAQ;AAC1B,UAAI,KAAK,QAAQ,iBAAiB;AAClC,YAAM,MAAM,OAAO;AAAA,OAClB;AACH,SAAK,QAAQ;AAAA;AAGf,mBAAgB,UAAU,eAAe,SAAU,aAAa;AAC9D,SAAK;AAEL,iBAAY,aAAa,KAAK;AAC9B,QAAI,WAAW,YAAY,IAAI,QAAQ,QAAQ,eAAe,YAAY,kBAAkB,OAAO,eAAe;AAElH,QAAI,UAAU;AACZ,WAAK,MAAM,YAAY;AAAA,WAClB;AACL,WAAK,MAAM;AAAA;AAAA;AAIf,mBAAgB,UAAU,2BAA2B,SAAU,QAAQ,aAAa;AAClF,QAAI,OAAO,YAAY;AACvB,QAAI,cAAc,KAAK,UAAU;AACjC,QAAI;AAEJ,WAAQ,aAAY,OAAO,WAAW,MAAM;AAC1C,UAAI,aAAa,KAAK,cAAc;AACpC,UAAI,KAAK,iBAAgB,YAAY;AACrC,mBAAa,IAAI,MAAM,WAAW;AAClC,SAAG,cAAc;AACjB,WAAK,MAAM,IAAI;AAAA;AAAA;AAInB,mBAAgB,UAAU,0BAA0B,SAAU,QAAQ,aAAa;AACjF,iBAAY,aAAa,KAAK,OAAO;AAAA;AAGvC,mBAAgB,UAAU,SAAS,SAAU,SAAS;AACpD,SAAK;AAAA;AAGP,mBAAgB,UAAU,SAAS,WAAY;AAC7C,SAAK,MAAM;AACX,SAAK,QAAQ;AAAA;AAGf,mBAAgB,OAAO;AACvB,SAAO;AAAA,EACP;AAEF,IAAI,qBAEJ,WAAY;AACV,iCAA8B;AAAA;AAE9B,SAAO;AAAA;AAGT,IAAI,gBAEJ,SAAU,QAAQ;AAChB,YAAU,gBAAe;AAEzB,0BAAuB,MAAM;AAC3B,QAAI,QAAQ,OAAO,KAAK,MAAM,SAAS;AAEvC,UAAM,OAAO;AACb,WAAO;AAAA;AAGT,iBAAc,UAAU,kBAAkB,WAAY;AACpD,WAAO,IAAI;AAAA;AAGb,iBAAc,UAAU,YAAY,SAAU,KAAK,OAAO;AACxD,QAAI,OAAO,MAAM;AAEjB,QAAI,KAAK,aAAa;AACpB,UAAI,OAAO,KAAK,GAAG,IAAI,KAAK,GAAG;AAC/B,UAAI,OAAO,KAAK,GAAG,IAAI,KAAK,GAAG;AAAA,WAC1B;AACL,UAAI,OAAO,KAAK,GAAG,IAAI,KAAK,GAAG;AAC/B,UAAI,OAAO,KAAK,GAAG,IAAI,KAAK,GAAG;AAC/B,UAAI,OAAO,KAAK,GAAG,IAAI,KAAK,GAAG;AAC/B,UAAI,OAAO,KAAK,GAAG,IAAI,KAAK,GAAG;AAC/B,UAAI;AACJ,UAAI,OAAO,KAAK,GAAG,IAAI,KAAK,GAAG;AAC/B,UAAI,OAAO,KAAK,GAAG,IAAI,KAAK,GAAG;AAC/B,UAAI,OAAO,KAAK,GAAG,IAAI,KAAK,GAAG;AAC/B,UAAI,OAAO,KAAK,GAAG,IAAI,KAAK,GAAG;AAAA;AAAA;AAInC,SAAO;AAAA,EACP;AAEF,0BAAyB,YAAY,WAAW,QAAQ;AACtD,MAAI,OAAO,WAAW;AACtB,SAAO,IAAI,cAAc;AAAA,IACvB,OAAO;AAAA,MACL,QAAQ,SAAS,WAAU,MAAM,cAAc;AAAA;AAAA,IAEjD,IAAI;AAAA;AAAA;AAIR,4BAA4B,UAAU,YAAY;AAChD,MAAI,UAAU;AAEd,WAAS,IAAI,GAAG,IAAI,WAAW,KAAK,QAAQ,KAAK;AAE/C,QAAI,SAAS,QAAQ,WAAW,KAAK,GAAG,IAAI,WAAW,KAAK,GAAG,KAAK;AAClE,gBAAU;AACV;AAAA;AAAA;AAIJ,SAAO;AAAA;AAGT,sBAAsB,IAAI,MAAM,WAAW,aAAa;AACtD,MAAI,YAAY,KAAK,aAAa;AAClC,KAAG,SAAS,KAAK,cAAc,WAAW;AAC1C,KAAG,MAAM,gBAAgB;AACzB,KAAG,cAAc;AACjB,2BAAyB,IAAI;AAAA;AAG/B,oBAAmB,QAAQ,YAAY;AACrC,SAAO,AAAO,IAAI,QAAQ,SAAU,OAAO;AACzC,YAAQ,MAAM;AACd,UAAM,KAAK,WAAW;AACtB,WAAO;AAAA;AAAA;AAIX,IAAI,oBAEJ,WAAY;AACV,gCAA6B;AAAA;AAE7B,SAAO;AAAA;AAGT,IAAI,eAEJ,SAAU,QAAQ;AAChB,YAAU,eAAc;AAExB,yBAAsB,MAAM;AAC1B,QAAI,QAAQ,OAAO,KAAK,MAAM,SAAS;AAEvC,UAAM,OAAO;AACb,WAAO;AAAA;AAGT,gBAAa,UAAU,kBAAkB,WAAY;AACnD,WAAO,IAAI;AAAA;AAGb,gBAAa,UAAU,YAAY,SAAU,KAAK,OAAO;AAGvD,QAAI,SAAS,MAAM;AAEnB,aAAS,IAAI,GAAG,IAAI,OAAO,UAAS;AAClC,UAAI,KAAK,WAAW,OAAO,MAAM;AAC/B,YAAI,IAAI,OAAO;AACf,YAAI,OAAO,GAAG,OAAO;AACrB,YAAI,OAAO,GAAG,OAAO;AAAA,aAChB;AACL,aAAK;AAAA;AAAA;AAAA;AAKX,SAAO;AAAA,EACP;AAEF,sBAAqB,aAAa,OAAO,aAAa;AACpD,MAAI,OAAO,YAAY;AACvB,MAAI,cAAc,KAAK,UAAU;AACjC,MAAI,MAAM,IAAI,aAAa;AAAA,IACzB,OAAO;AAAA,MACL,QAAQ;AAAA;AAAA,IAEV,QAAQ;AAAA;AAEV,QAAM,IAAI;AACV,MAAI,MAAM,IAAI,aAAa;AAAA,IACzB,OAAO;AAAA,MACL,QAAQ;AAAA;AAAA,IAEV,QAAQ;AAAA;AAEV,QAAM,IAAI;AACV,iBAAc,GAAG,KAAK,aAAa;AACnC,iBAAc,IAAI,KAAK,aAAa;AAEpC,MAAI,aAAa;AACf,QAAI,cAAc;AAClB,QAAI,cAAc;AAAA;AAAA;AAItB,wBAAuB,MAAM,IAAI,aAAa,MAAM;AAElD,MAAI,cAAc,YAAY,IAAI,CAAC,aAAa,OAAO,IAAI,gBAAgB,oBAAoB,YAAY,IAAI,CAAC,aAAa,OAAO,IAAI,UAAU;AAGlJ,MAAI,YAAY,YAAY,SAAS,aAAa,aAAa;AAC/D,KAAG,SAAS;AACZ,KAAG,MAAM,OAAO;AAChB,KAAG,MAAM,SAAS;AAAA;AAGpB,IAAO,0BAAQ;;;ACpUf,IAAI,yBAEJ,SAAU,QAAQ;AAChB,YAAU,yBAAwB;AAElC,qCAAkC;AAChC,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,wBAAuB;AACpC,UAAM,yBAAyB,CAAC;AAAA,MAC9B,MAAM;AAAA,MACN,gBAAgB;AAAA,OACf;AAAA,MACD,MAAM;AAAA,MACN,gBAAgB;AAAA,OACf;AAAA,MACD,MAAM;AAAA,MACN,gBAAgB;AAAA,OACf;AAAA,MACD,MAAM;AAAA,MACN,gBAAgB;AAAA;AAElB,WAAO;AAAA;AAQT,0BAAuB,UAAU,eAAe,WAAY;AAC1D,WAAO;AAAA;AAGT,0BAAuB,UAAU,gBAAgB,SAAU,WAAW,MAAM,WAAW;AACrF,QAAI,aAAa,KAAK,cAAc;AACpC,WAAO,cAAc,UAAU,KAAK,WAAW;AAAA;AAGjD,0BAAuB,OAAO;AAC9B,0BAAuB,eAAe,CAAC,SAAS,SAAS;AACzD,0BAAuB,gBAAgB;AAAA,IACrC,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,kBAAkB;AAAA,IAClB,iBAAiB;AAAA,IAGjB,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,WAAW;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,cAAc;AAAA,MAGd,aAAa;AAAA;AAAA,IAEf,UAAU;AAAA,MACR,OAAO;AAAA,MACP,WAAW;AAAA,QACT,aAAa;AAAA;AAAA;AAAA,IAGjB,aAAa;AAAA,IACb,aAAa;AAAA,IACb,UAAU;AAAA,IACV,OAAO;AAAA,IACP,gBAAgB;AAAA,IAChB,aAAa;AAAA,IACb,sBAAsB;AAAA,IACtB,sBAAsB;AAAA,IACtB,iBAAiB;AAAA,IACjB,mBAAmB;AAAA;AAErB,SAAO;AAAA,EACP;AAEF,MAAM,wBAAwB,uBAAuB;AACrD,IAAO,4BAAQ;;;ACpFA,iCAAiC,QAAQ;AACtD,MAAI,CAAC,UAAU,CAAC,AAAO,QAAQ,OAAO,SAAS;AAC7C;AAAA;AAIF,EAAO,KAAK,OAAO,QAAQ,SAAU,YAAY;AAC/C,QAAI,AAAO,SAAS,eAAe,WAAW,SAAS,KAAK;AAC1D,iBAAW,OAAO;AAAA;AAAA;AAAA;;;ACPxB,IAAI,2BAA2B,CAAC,aAAa;AAC7C,IAAI,2BAA2B,CAAC,aAAa;AAC7C,IAAI,qBAAqB,CAAC,aAAa;AACvC,IAAI,qBAAqB,CAAC,aAAa;AACvC,IAAI,oBAAoB;AAAA,EACtB,YAAY;AAAA,EACZ,MAAM;AAAA,EAEN,kBAAkB;AAAA,EAClB,OAAO,SAAU,aAAa,SAAS;AACrC,sBAAkB,MAAM,OAAO;AAC7B,aAAO,MAAM,IAAI,OAAO,IAAI,qBAAqB;AAAA;AAGnD,4BAAwB,MAAM,OAAO;AACnC,aAAO,MAAM,IAAI,OAAO,IAAI,2BAA2B;AAAA;AAIzD,QAAI,QAAQ,iBAAiB,cAAc;AACzC;AAAA;AAGF,QAAI,gBAAgB,YAAY,gBAAgB;AAChD,WAAO,CAAC,iBAAiB;AAAA,MACvB,UAAU,SAAU,QAAQ,MAAM;AAChC,YAAI;AAEJ,eAAQ,aAAY,OAAO,WAAW,MAAM;AAC1C,cAAI,YAAY,KAAK,aAAa;AAClC,cAAI,OAAO,KAAK,cAAc,WAAW;AACzC,cAAI,QAAQ,UAAU;AACtB,gBAAM,OAAO,SAAS,MAAM;AAC5B,gBAAM,SAAS,eAAe,MAAM,cAAc,MAAM;AACxD,cAAI,cAAc,KAAK,uBAAuB,WAAW;AACzD,iBAAO,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAM9B,IAAO,4BAAQ;;;ACrCf,IAAI,WAAW,OAAO,iBAAiB,cAAc,eAAe;AACpE,IAAI,oBAAoB;AAAA,EACtB,YAAY;AAAA,EACZ,MAAM;AAAA,EACN,OAAO,SAAU,aAAa;AAC5B,QAAI,WAAW,YAAY;AAC3B,QAAI,OAAO,YAAY;AACvB,QAAI,cAAc,qBAAqB,aAAa;AACpD,QAAI,UAAU;AACd,QAAI,UAAU;AACd,QAAI,YAAY,CAAC,KAAK;AACtB,QAAI,QAAQ,KAAK,kBAAkB,KAAK,aAAa,UAAU;AAC/D,QAAI,SAAS,IAAI,KAAK,iBAAiB,UAAU,WAAW,KAAK,mBAAmB;AACpF,QAAI,WAAW,OAAO;AACtB,QAAI,YAAY,OAAO;AACvB,QAAI,aAAa,OAAO;AACxB,QAAI,cAAc,OAAO;AACzB,SAAK,UAAU;AAAA,MACb;AAAA,MAEA,aAAa,eAAe;AAAA;AAG9B,QAAI,QAAQ,KAAK,OAAO,SAAS,GAAG;AAClC;AAAA;AAGF,WAAO;AAAA,MACL,UAAU,YAAY,gBAAgB,QAAQ,gBAAgB;AAAA;AAGhE,4BAAwB,QAAQ,OAAM;AACpC,UAAI;AACJ,UAAI,QAAQ,MAAK;AAEjB,aAAQ,aAAY,OAAO,WAAW,MAAM;AAC1C,YAAI,aAAa,MAAM,IAAI,OAAO;AAClC,YAAI,UAAU,MAAM,IAAI,UAAU;AAClC,YAAI,WAAW,MAAM,IAAI,WAAW;AACpC,YAAI,YAAY,MAAM,IAAI,YAAY;AACtC,YAAI,aAAa,MAAM,IAAI,aAAa;AACxC,YAAI,QAAQ,KAAK,IAAI,SAAS;AAC9B,YAAI,SAAS,KAAK,IAAI,SAAS;AAC/B,YAAI,aAAa,SAAS,OAAO;AACjC,YAAI,cAAc,SAAS,QAAQ;AACnC,YAAI,cAAc,SAAS,WAAW;AACtC,YAAI,eAAe,SAAS,YAAY;AACxC,YAAI,OAAO;AACX,mBAAW,MAAM,aAAa;AAC9B,mBAAW,MAAM,YAAY;AAC7B,aAAK,KAAK,sBAAsB,eAAe,sBAAsB,cAAc,sBAAsB,cAAc,sBAAsB;AAC7I,cAAK,cAAc,WAAW;AAAA,UAC5B,MAAM,QAAQ,OAAO,WAAW,SAAS,UAAU;AAAA,UACnD,cAAc,UAAU,WAAW,YAAY,WAAW,WAAW;AAAA,UACrE;AAAA,UACA,WAAW,cAAc,WAAW,YAAY;AAAA;AAAA;AAIpD,wBAAkB,KAAK,aAAY;AACjC,YAAI,IAAI;AACR,UAAE,WAAW;AACb,UAAE,WAAW;AACb,eAAO,MAAM,gBAAe,MAAM,OAAO,CAAC,KAAK,OAAO,SAAS,YAAY;AAAA;AAG7E,0BAAoB,OAAM,OAAO,OAAO;AACtC,YAAI,SAAS,MAAM;AACnB,YAAI,SAAS,MAAM;AACnB,eAAO,WAAW,iBAAiB,OAAO,WAAW,cAAc,GAAG,GAAG;AACzE,eAAO,WAAW,iBAAiB,OAAO,WAAW,cAAc,GAAG,GAAG;AACzE,gBAAQ,MAAK,KAAK,QAAQ,UAAU,MAAK,KAAK,QAAQ;AAAA;AAGxD,6BAAuB,YAAW,aAAY,aAAY;AACxD,YAAI,OAAO,SAAS,YAAW;AAC/B,YAAI,OAAO,SAAS,aAAY;AAChC,aAAK,YAAY,cAAc;AAC/B,aAAK,YAAY,cAAc;AAC/B,eAAO;AAAA,UACL,GAAG,KAAK;AAAA,UACR,GAAG,KAAK;AAAA,UACR,OAAO,UAAU,cAAc,KAAK,KAAK,KAAK;AAAA,UAC9C,QAAQ,UAAU,KAAK,KAAK,KAAK,KAAK;AAAA;AAAA;AAI1C,qCAA+B,OAAO;AACpC,cAAM,WAAW,iBAAiB,MAAM,UAAU;AAClD,eAAO;AAAA;AAAA;AAIX,2BAAuB,QAAQ,OAAM;AAEnC,UAAI,SAAS,IAAI,SAAS,OAAO,QAAQ;AACzC,UAAI,SAAS;AACb,UAAI;AACJ,UAAI,QAAQ;AACZ,UAAI,SAAS;AACb,UAAI;AACJ,UAAI,QAAQ,MAAK;AAEjB,aAAQ,aAAY,OAAO,WAAW,MAAM;AAC1C,YAAI,aAAa,MAAM,IAAI,OAAO;AAClC,YAAI,UAAU,MAAM,IAAI,UAAU;AAClC,YAAI,WAAW,MAAM,IAAI,WAAW;AACpC,YAAI,YAAY,MAAM,IAAI,YAAY;AACtC,YAAI,aAAa,MAAM,IAAI,aAAa;AAExC,YAAI,MAAM,eAAe,MAAM,cAAc,MAAM,aAAa;AAC9D,iBAAO,YAAY;AACnB,oBAAU;AACV;AAAA;AAGF,eAAO,YAAY,QAAQ,OAAO,WAAW,SAAS,UAAU;AAChE,cAAM,WAAW;AACjB,cAAM,WAAW;AACjB,gBAAQ,SAAS,YAAY,OAAO,MAAM;AAC1C,eAAO,YAAY,QAAQ,MAAM,KAAK;AACtC,eAAO,YAAY,QAAQ,MAAM,KAAK;AACtC,cAAM,WAAW;AACjB,gBAAQ,SAAS,YAAY,OAAO,MAAM;AAC1C,eAAO,YAAY,QAAQ,MAAM,KAAK;AAAA;AAGxC,YAAK,UAAU,eAAe;AAAA;AAAA;AAAA;AAKpC,iBAAiB,OAAO,WAAW,SAAS,UAAU,WAAW;AAC/D,MAAI;AAEJ,MAAI,UAAU,UAAU;AACtB,WAAO;AAAA,aACE,UAAU,UAAU;AAC7B,WAAO;AAAA,SACF;AACL,WAAO,YAAY,IACjB,MAAM,IAAI,WAAW,YAAY,MAAM,WAAW,IAAI,KACxD;AAAA;AAGF,SAAO;AAAA;AAGT,8BAA8B,aAAa,MAAM;AAC/C,MAAI,WAAW,YAAY;AAC3B,MAAI;AACJ,MAAI,YAAY,SAAS,SAAS,aAAa,SAAS,iBAAkB,UAAS,SAAS,aAAa,KAAK,IAAI,OAAO,KAAK,OAAO,MAAM,KAAK;AAChJ,MAAI,cAAc,cAAa,UAAU,YAAY,IAAI,gBAAgB,YAAY;AACrF,MAAI,cAAc,cAAa,UAAU,YAAY,IAAI,gBAAgB,IAAI;AAC7E,MAAI,WAAW,YAAY,IAAI;AAC/B,SAAO,YAAY,OAAO,cAAa,UAAU,aAC/C,KAAK,IAAI,KAAK,IAAI,YAAY,GAAG,cAAc;AAAA;AAGnD,IAAO,4BAAQ;;;AChKR,mBAAiB,WAAW;AACjC,YAAU,kBAAkB;AAC5B,YAAU,oBAAoB;AAC9B,YAAU,qBAAqB;AAC/B,YAAU,eAAe;AACzB,YAAU,eAAe;AAAA;;;ACJ3B,0BAA0B,aAAa,WAAW;AAChD,MAAI,QAAQ,UAAU,qBAAqB,UAAU;AACrD,cAAY,UAAU,SAAU,YAAY;AAC1C,eAAW,KAAK;AAAA,MACd,GAAG,UAAU;AAAA,MACb,QAAQ,UAAU;AAAA,MAClB,OAAO;AAAA,QACL,QAAQ,UAAU,cAAc,WAAW,QAAQ;AAAA,QACnD,MAAM,UAAU,cAAc,SAAS,QAAQ;AAAA;AAAA;AAAA;AAAA;AAMvD,IAAI,eAEJ,SAAU,QAAQ;AAChB,YAAU,eAAc;AAExB,yBAAsB,MAAM,KAAK;AAC/B,QAAI,QAAQ,OAAO,KAAK,SAAS;AAEjC,QAAI,SAAS,IAAI,eAAU,MAAM;AACjC,QAAI,cAAc,IAAI;AAEtB,UAAM,IAAI;AAEV,UAAM,IAAI;AAEV,UAAM,WAAW,MAAM;AAEvB,WAAO;AAAA;AAGT,gBAAa,UAAU,sBAAsB,WAAY;AACvD,SAAK,QAAQ,GAAG;AAAA;AAGlB,gBAAa,UAAU,uBAAuB,SAAU,WAAW;AACjE,QAAI,aAAa,UAAU;AAC3B,QAAI,QAAQ,UAAU;AACtB,QAAI,eAAe,UAAU;AAC7B,QAAI,cAAc,KAAK,QAAQ;AAE/B,aAAS,IAAI,GAAG,IAAI,cAAc,KAAK;AAIrC,UAAI,aAAa,aAAa,YAAY,IAAI,IAAI,GAAG,GAAG;AACxD,iBAAW,KAAK;AAAA,QACd,OAAO;AAAA,UACL,eAAe;AAAA;AAAA,QAEjB,IAAI;AAAA,QACJ,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA;AAEV,UAAI,QAAQ,CAAC,IAAI,eAAe,UAAU,SAAS,UAAU;AAC7D,iBAAW,QAAQ,IAAI,MAAM,KAAK,UAAU,QAAQ;AAAA,QAClD,QAAQ,UAAU,cAAc;AAAA,QAChC,QAAQ,UAAU,cAAc;AAAA,SAC/B,MAAM,OAAO;AAChB,iBAAW,aAAa,MAAM,KAAK,UAAU,QAAQ;AAAA,QACnD,SAAS;AAAA,SACR,MAAM,OAAO;AAChB,kBAAY,IAAI;AAAA;AAGlB,qBAAiB,aAAa;AAAA;AAOhC,gBAAa,UAAU,wBAAwB,SAAU,WAAW;AAClE,QAAI,eAAe,KAAK;AACxB,QAAI,cAAc,KAAK,QAAQ;AAE/B,QAAI,kBAAkB,CAAC,cAAc,UAAU,eAAe;AAE9D,aAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,UAAI,WAAW,gBAAgB;AAE/B,UAAI,aAAa,cAAc,UAAU,WAAW;AAClD,aAAK;AACL,aAAK,qBAAqB;AAC1B;AAAA;AAAA;AAIJ,qBAAiB,aAAa;AAAA;AAOhC,gBAAa,UAAU,YAAY,WAAY;AAC7C,kBAAc;AAAA;AAOhB,gBAAa,UAAU,WAAW,WAAY;AAC5C,kBAAc;AAAA;AAGhB,gBAAa,UAAU,gBAAgB,WAAY;AACjD,QAAI,SAAS,KAAK,QAAQ;AAC1B,WAAO,UAAU,OAAO;AAAA;AAO1B,gBAAa,UAAU,aAAa,SAAU,MAAM,KAAK;AACvD,QAAI,QAAQ;AAEZ,QAAI,cAAc,KAAK;AACvB,SAAK,QAAQ,GAAG,WAAW,MAAM;AACjC,QAAI,cAAc,KAAK,QAAQ;AAC/B,QAAI,YAAY,KAAK,aAAa;AAClC,QAAI,aAAa,KAAK,cAAc,KAAK;AACzC,QAAI,aAAa,oBAAoB,KAAK,cAAc,KAAK;AAC7D,QAAI,cAAc,KAAK,cAAc,KAAK;AAC1C,QAAI,QAAQ,eAAe,YAAY;AACvC,gBAAY,SAAS;AACrB,gBAAY,SAAS,SAAU,YAAY;AACzC,iBAAW,SAAS,QAAQ;AAAA;AAE9B,QAAI,eAAe,sBAAsB,KAAK,cAAc,KAAK,iBAAiB;AAElF,QAAI,cAAc;AAChB,kBAAY,IAAI,aAAa;AAC7B,kBAAY,IAAI,aAAa;AAAA;AAG/B,QAAI,eAAe,KAAK,cAAc,KAAK;AAC3C,gBAAY,WAAY,iBAAgB,KAAK,KAAK,KAAK,OAAO;AAC9D,QAAI,YAAY;AAChB,cAAU,eAAe,YAAY,IAAI;AACzC,cAAU,cAAc,UAAU,IAAI,CAAC,gBAAgB;AACvD,cAAU,YAAY,UAAU,IAAI,CAAC,gBAAgB;AACrD,cAAU,SAAS,UAAU,IAAI,CAAC,gBAAgB,aAAa;AAC/D,cAAU,eAAe,MAAM,KAAK;AACpC,cAAU,IAAI,YAAY,WAAW,QAAQ;AAC7C,cAAU,SAAS,YAAY,WAAW,aAAa;AACvD,cAAU,aAAa;AACvB,cAAU,QAAQ;AAClB,cAAU,oBAAoB,UAAU,IAAI,CAAC,gBAAgB;AAC7D,cAAU,eAAe,UAAU,IAAI,CAAC,gBAAgB;AACxD,SAAK,IAAI,aAAa,IAAI,YAAY,IAAI,YAAY,IAAI;AAE1D,QAAI,UAAU,iBAAiB,UAAU;AACvC,WAAK,aAAa,KAAK,sBAAsB,aAAa,KAAK,qBAAqB;AACpF,WAAK,aAAa;AAAA,WACb;AAEL,WAAK,aAAa;AAClB,WAAK;AAEL,WAAK,qBAAqB,SAAU,SAAS;AAC3C,YAAI,YAAY,YAAY;AAC1B,cAAI,UAAU,iBAAiB,UAAU;AACvC,kBAAM,qBAAqB;AAAA;AAAA,mBAEpB,YAAY,UAAU;AAC/B,cAAI,UAAU,iBAAiB,UAAU;AACvC,kBAAM;AAAA;AAAA;AAAA;AAAA;AAMd,SAAK,aAAa;AAClB,wBAAoB;AAAA;AAGtB;AAEA,gBAAa,UAAU,UAAU,SAAU,IAAI;AAC7C,SAAK,IAAI,aAAa,IAAI;AAC1B,UAAM;AAAA;AAGR;AACA,SAAO;AAAA,EACP;AAEF,IAAO,uBAAQ;;;ACjMf,IAAI,oBAEJ,SAAU,QAAQ;AAChB,YAAU,oBAAmB;AAE7B,gCAA6B;AAC3B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,mBAAkB;AAC/B,WAAO;AAAA;AAGT,qBAAkB,UAAU,OAAO,WAAY;AAC7C,SAAK,cAAc,IAAI,mBAAW;AAAA;AAGpC,qBAAkB,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK;AACxE,QAAI,OAAO,YAAY;AACvB,QAAI,mBAAmB,KAAK;AAC5B,qBAAiB,WAAW,MAAM;AAAA,MAChC,WAAW,KAAK,cAAc;AAAA;AAEhC,SAAK,MAAM,IAAI,iBAAiB;AAAA;AAGlC,qBAAkB,UAAU,gBAAgB,SAAU,aAAa;AACjE,QAAI,WAAW,YAAY;AAC3B,QAAI,WAAW,YAAY,SAAS,WAAW,SAAS;AACxD,WAAO,YAAY,IAAI,QAAQ,QAAQ,WAAW;AAAA;AAGpD,qBAAkB,UAAU,kBAAkB,SAAU,aAAa,SAAS,KAAK;AACjF,QAAI,OAAO,YAAY;AACvB,SAAK,MAAM;AACX,QAAI,MAAM,aAAa,IAAI,MAAM,aAAa,SAAS;AAEvD,QAAI,IAAI,UAAU;AAChB,UAAI,SAAS;AAAA,QACX,OAAO;AAAA,QACP,KAAK,KAAK;AAAA,QACV,OAAO,KAAK;AAAA,SACX;AAAA;AAGL,SAAK,YAAY;AAAA;AAGnB,qBAAkB,UAAU,wBAAwB,SAAU,aAAa;AACzE,QAAI,WAAW,YAAY;AAE3B,QAAI,YAAY,SAAS,kBAAkB;AACzC,WAAK,MAAM,YAAY,AAAO,OAAM,SAAS;AAC7C,WAAK,MAAM;AAAA;AAAA;AAIf,qBAAkB,UAAU,SAAS,SAAU,SAAS,KAAK;AAC3D,SAAK,eAAe,KAAK,YAAY,OAAO;AAAA;AAG9C,qBAAkB,OAAO;AACzB,SAAO;AAAA,EACP;AAEF,IAAO,4BAAQ;;;ACnEf,IAAI,2BAEJ,SAAU,QAAQ;AAChB,YAAU,2BAA0B;AAEpC,uCAAoC;AAClC,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,0BAAyB;AACtC,UAAM,kBAAkB;AACxB,WAAO;AAAA;AAGT,4BAAyB,UAAU,iBAAiB,SAAU,QAAQ,SAAS;AAC7E,WAAO,yBAAiB,MAAM,MAAM;AAAA,MAClC,oBAAoB;AAAA;AAAA;AAIxB,4BAAyB,UAAU,gBAAgB,SAAU,WAAW,MAAM,WAAW;AACvF,WAAO,UAAU,MAAM,KAAK,cAAc;AAAA;AAG5C,4BAAyB,OAAO;AAChC,4BAAyB,eAAe,CAAC,QAAQ;AACjD,4BAAyB,gBAAgB;AAAA,IACvC,kBAAkB;AAAA,IAClB,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,iBAAiB;AAAA,IACjB,YAAY;AAAA,IACZ,aAAa;AAAA,IAEb,cAAc;AAAA,IACd,MAAM;AAAA,IAEN,cAAc;AAAA,MACZ,QAAQ;AAAA,MAER,OAAO;AAAA,MAEP,WAAW;AAAA,MAEX,QAAQ;AAAA;AAAA,IAEV,qBAAqB;AAAA,MACnB,aAAa;AAAA;AAAA,IAUf,YAAY;AAAA;AAOd,SAAO;AAAA,EACP;AAEF,IAAO,8BAAQ;;;ACnER,mBAAiB,WAAW;AACjC,YAAU,kBAAkB;AAC5B,YAAU,oBAAoB;AAC9B,YAAU,eAAe,aAAa;AAAA;;;ACMxC,IAAI,aAEJ,SAAU,QAAQ;AAChB,YAAU,aAAY;AAEtB,uBAAoB,UAAU,KAAK,aAAa;AAC9C,QAAI,QAAQ,OAAO,KAAK,SAAS;AAEjC,UAAM,IAAI,MAAM,WAAW,UAAU,KAAK;AAE1C,UAAM,oBAAoB,UAAU;AAEpC,WAAO;AAAA;AAGT,cAAW,UAAU,aAAa,SAAU,UAAU,KAAK,aAAa;AACtE,WAAO,IAAI,cAAK,UAAU,KAAK;AAAA;AAGjC,cAAW,UAAU,sBAAsB,SAAU,UAAU,KAAK;AAClE,QAAI,YAAY,SAAS,aAAa;AACtC,QAAI,cAAc,UAAU,SAAS;AACrC,QAAI,OAAO,YAAY,IAAI;AAC3B,QAAI,aAAa,YAAY,IAAI;AAEjC,QAAI,CAAC,AAAO,QAAQ,OAAO;AACzB,aAAO,CAAC,MAAM;AAAA;AAGhB,QAAI,YAAY,SAAS,cAAc,KAAK;AAC5C,QAAI,QAAQ,YAAY,IAAI,YAAY,aAAa,UAAU;AAC/D,QAAI,SAAS,KAAK,QAAQ;AAE1B,QAAI,KAAK,gBAAgB,YAAY;AAEnC,WAAK,OAAO;AACZ,eAAS,aAAa,YAAY,MAAM,MAAM,GAAG,GAAG;AACpD,aAAO,KAAK;AACZ,aAAO,UAAU;AACjB,WAAK,IAAI;AAAA;AAIX,QAAI,CAAC,QAAQ;AACX;AAAA;AAIF,WAAO,SAAS,eAAe;AAC/B,WAAO,SAAS,YAAY,aAAa,CAAC;AAC1C,WAAO,SAAS,KAAK;AACrB,WAAO,SAAS,KAAK;AACrB,WAAO,SAAS;AAChB,SAAK,cAAc;AACnB,SAAK,eAAe;AAEpB,SAAK,uBAAuB,UAAU,aAAa;AAAA;AAGrD,cAAW,UAAU,yBAAyB,SAAU,UAAU,aAAa,KAAK;AAClF,QAAI,SAAS,KAAK,QAAQ;AAE1B,QAAI,CAAC,QAAQ;AACX;AAAA;AAGF,QAAI,OAAO;AACX,QAAI,SAAS,SAAS,cAAc;AACpC,QAAI,SAAS,YAAY,IAAI,YAAY;AACzC,QAAI,OAAO,YAAY,IAAI;AAC3B,QAAI,gBAAgB,YAAY,IAAI;AACpC,QAAI,YAAY,AAAO,SAAS,YAAY,IAAI,UAAU,SAAU,MAAK;AACvE,aAAO,OAAM,SAAS,UAAU,SAAS;AAAA;AAG3C,WAAO,SAAS;AAEhB,SAAK,uBAAuB,QAAQ;AAEpC,QAAI,gBAAgB,GAAG;AACrB,eAAS,KAAK,eAAe,UAAU,gBAAgB;AAAA;AAGzD,QAAI,WAAW,KAAK,WAAW,SAAS,KAAK,OAAO;AAClD,aAAO;AAEP,UAAI,SAAS,GAAG;AACd,YAAI,WAAW;AAEf,YAAI,OAAO,cAAc,YAAY;AACnC,qBAAW,UAAU;AAAA,eAChB;AACL,qBAAW;AAAA;AAGb,YAAI,OAAO,MAAM,GAAG;AAClB,qBAAW,CAAC,SAAS,OAAO;AAAA;AAG9B,eAAO,MAAM;AACb,YAAI,WAAW,OAAO,QAAQ,IAAI,MAAM,KAAK,QAAQ;AAAA,UACnD,KAAK;AAAA,WACJ,MAAM,UAAU,OAAO,WAAY;AACpC,eAAK,sBAAsB;AAAA;AAG7B,YAAI,CAAC,MAAM;AACT,mBAAS,KAAK,WAAY;AACxB,iBAAK,OAAO;AAAA;AAAA;AAIhB,iBAAS;AAAA;AAAA;AAIb,SAAK,UAAU;AACf,SAAK,QAAQ;AAAA;AAGf,cAAW,UAAU,iBAAiB,SAAU,QAAQ;AAEtD,WAAO,AAAK,KAAK,OAAO,MAAM,OAAO,SAAS,AAAK,KAAK,OAAO,OAAO,OAAO;AAAA;AAG/E,cAAW,UAAU,yBAAyB,SAAU,QAAQ,QAAQ;AACtE,WAAO,OAAO,OAAO;AACrB,WAAO,OAAO,OAAO;AACrB,WAAO,QAAQ,OAAO,MAAM,CAAE,QAAO,GAAG,KAAK,OAAO,GAAG,MAAM,GAAI,QAAO,GAAG,KAAK,OAAO,GAAG,MAAM;AAAA;AAGlG,cAAW,UAAU,aAAa,SAAU,UAAU,KAAK,aAAa;AACtE,SAAK,QAAQ,GAAG,WAAW,UAAU,KAAK;AAE1C,SAAK,oBAAoB,UAAU;AAAA;AAGrC,cAAW,UAAU,wBAAwB,SAAU,QAAQ;AAC7D,QAAI,KAAK,OAAO;AAChB,QAAI,KAAK,OAAO;AAChB,QAAI,MAAM,OAAO;AACjB,QAAI,IAAI,OAAO;AACf,QAAI,MAAM,CAAC,OAAO,GAAG,OAAO;AAC5B,QAAI,UAAU,IAAI;AAClB,QAAI,eAAwB;AAC5B,QAAI,yBAAkC;AACtC,QAAI,KAAK,aAAY,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI;AAC3C,QAAI,KAAK,aAAY,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI;AAE3C,QAAI,KAAK,uBAAsB,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI;AACrD,QAAI,KAAK,uBAAsB,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI;AACrD,WAAO,WAAW,CAAC,KAAK,MAAM,IAAI,MAAM,KAAK,KAAK;AAElD,QAAI,KAAK,gBAAgB,UAAU,KAAK,gBAAgB,UAAU,KAAK,gBAAgB,aAAa;AAClG,UAAI,OAAO,YAAY,UAAa,OAAO,UAAU,OAAO,KAAK;AAC/D,eAAO,SAAS,AAAK,KAAK,SAAS,OAAO;AAE1C,YAAI,MAAM,GAAG;AACX,cAAI,KAAK,QAAQ,KAAM,KAAI,KAAK,QAAQ,MAAM;AAC9C,cAAI,KAAK,QAAQ,KAAM,KAAI,KAAK,QAAQ,MAAM;AAAA;AAAA,iBAEvC,OAAO,YAAY,GAAG;AAE/B,eAAO,SAAS,IAAI,AAAK,KAAK,IAAI;AAAA,aAC7B;AACL,eAAO,SAAS,KAAK,aAAa;AAAA;AAAA;AAItC,WAAO,UAAU,OAAO;AACxB,WAAO,SAAS;AAChB,WAAO,IAAI,IAAI;AACf,WAAO,IAAI,IAAI;AAAA;AAGjB,cAAW,UAAU,eAAe,SAAU,UAAU,KAAK;AAC3D,SAAK,QAAQ,GAAG,aAAa,UAAU;AACvC,QAAI,cAAc,SAAS,aAAa,KAAK,SAAS;AAEtD,SAAK,uBAAuB,UAAU,aAAa;AAAA;AAGrD,SAAO;AAAA,EACC;AAEV,IAAO,qBAAQ;;;ACjMf,IAAI,WAEJ,SAAU,QAAQ;AAChB,YAAU,WAAU;AAEpB,qBAAkB,UAAU,KAAK,aAAa;AAC5C,QAAI,QAAQ,OAAO,KAAK,SAAS;AAEjC,UAAM,gBAAgB,UAAU,KAAK;AAErC,WAAO;AAAA;AAGT,YAAS,UAAU,kBAAkB,SAAU,UAAU,KAAK,aAAa;AAEzE,QAAI,SAAS,SAAS,cAAc;AACpC,QAAI,OAAO,IAAY,iBAAS;AAAA,MAC9B,OAAO;AAAA,QACL;AAAA;AAAA;AAGJ,SAAK,IAAI;AAET,SAAK,iBAAiB,UAAU,KAAK;AAAA;AAGvC;AAEA,YAAS,UAAU,aAAa,SAAU,UAAU,KAAK,aAAa;AACpE,QAAI,cAAc,SAAS;AAC3B,QAAI,OAAO,KAAK,QAAQ;AACxB,QAAI,SAAS;AAAA,MACX,OAAO;AAAA,QACL,QAAQ,SAAS,cAAc;AAAA;AAAA;AAGnC,IAAQ,YAAY,MAAM,QAAQ,aAAa;AAE/C,SAAK,iBAAiB,UAAU,KAAK;AAAA;AAGvC;AAEA,YAAS,UAAU,mBAAmB,SAAU,UAAU,KAAK,aAAa;AAC1E,QAAI,OAAO,KAAK,QAAQ;AACxB,QAAI,YAAY,SAAS,aAAa;AACtC,QAAI,iBAAiB,eAAe,YAAY;AAEhD,QAAI,CAAC,eAAe,SAAS,eAAe;AAC1C,uBAAiB,UAAU,SAAS,CAAC,YAAY,cAAc;AAAA;AAGjE,SAAK,SAAS,SAAS,cAAc,KAAK;AAC1C,SAAK,MAAM,OAAO;AAClB,SAAK,MAAM,gBAAgB;AAC3B,QAAI,oBAAoB,KAAK,YAAY;AACzC,sBAAkB,QAAQ;AAC1B,wBAAoB;AAAA;AAGtB;AAEA,YAAS,UAAU,eAAe,SAAU,UAAU,KAAK;AACzD,QAAI,WAAW,KAAK,QAAQ;AAC5B,aAAS,SAAS,UAAU,SAAS,cAAc;AAAA;AAGrD;AACA,SAAO;AAAA,EACC;AAEV,IAAO,oBAAQ;;;ACtEf,IAAI,iBAEJ,SAAU,QAAQ;AAChB,YAAU,iBAAgB;AAE1B,6BAA0B;AACxB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,aAAa;AACnB,UAAM,oBAAoB;AAC1B,WAAO;AAAA;AAIT,kBAAe,UAAU,aAAa,SAAU,UAAU,KAAK,aAAa;AAC1E,WAAO,IAAI,kBAAS,UAAU,KAAK;AAAA;AAGrC;AAEA,kBAAe,UAAU,yBAAyB,SAAU,QAAQ,QAAQ;AAC1E,SAAK,UAAU;AACf,QAAI,YAAY,CAAC;AACjB,QAAI,OAAM;AAEV,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,UAAI,KAAK,OAAO,IAAI;AACpB,UAAI,KAAK,OAAO;AAChB,cAAO,AAAK,KAAK,IAAI;AACrB,gBAAU,KAAK;AAAA;AAGjB,QAAI,SAAQ,GAAG;AACb,WAAK,UAAU;AACf;AAAA;AAGF,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,gBAAU,MAAM;AAAA;AAGlB,SAAK,WAAW;AAChB,SAAK,UAAU;AAAA;AAGjB;AAEA,kBAAe,UAAU,iBAAiB,WAAY;AACpD,WAAO,KAAK;AAAA;AAGd;AAEA,kBAAe,UAAU,wBAAwB,SAAU,QAAQ;AACjE,QAAI,IAAI,OAAO;AACf,QAAI,SAAS,KAAK;AAClB,QAAI,UAAU,KAAK;AACnB,QAAI,OAAM,OAAO;AAEjB,QAAI,CAAC,SAAS;AAEZ;AAAA;AAGF,QAAI,YAAY,KAAK;AACrB,QAAI;AAEJ,QAAI,IAAI,KAAK,mBAAmB;AAG9B,UAAI,QAAQ,KAAK,IAAI,YAAY,GAAG,OAAM;AAE1C,WAAK,QAAQ,OAAO,SAAS,GAAG,SAAS;AACvC,YAAI,QAAQ,UAAU,GAAG;AACvB;AAAA;AAAA;AAKJ,cAAQ,KAAK,IAAI,OAAO,OAAM;AAAA,WACzB;AACL,WAAK,QAAQ,WAAW,QAAQ,MAAK,SAAS;AAC5C,YAAI,QAAQ,SAAS,GAAG;AACtB;AAAA;AAAA;AAIJ,cAAQ,KAAK,IAAI,QAAQ,GAAG,OAAM;AAAA;AAGpC,QAAI,IAAK,KAAI,QAAQ,UAAW,SAAQ,QAAQ,KAAK,QAAQ;AAC7D,QAAI,KAAK,OAAO;AAChB,QAAI,KAAK,OAAO,QAAQ;AACxB,WAAO,IAAI,GAAG,KAAM,KAAI,KAAK,IAAI,GAAG;AACpC,WAAO,IAAI,GAAG,KAAM,KAAI,KAAK,IAAI,GAAG;AACpC,QAAI,KAAK,GAAG,KAAK,GAAG;AACpB,QAAI,KAAK,GAAG,KAAK,GAAG;AACpB,WAAO,WAAW,CAAC,KAAK,MAAM,IAAI,MAAM,KAAK,KAAK;AAClD,SAAK,aAAa;AAClB,SAAK,oBAAoB;AACzB,WAAO,SAAS;AAAA;AAGlB;AACA,SAAO;AAAA,EACP;AAEF,IAAO,yBAAQ;;;ACxGf,IAAI,sBAEJ,WAAY;AACV,kCAA+B;AAC7B,SAAK,WAAW;AAChB,SAAK,YAAY;AACjB,SAAK,OAAO;AAAA;AAGd,SAAO;AAAA;AAGT,IAAI,iBAEJ,SAAU,QAAQ;AAChB,YAAU,iBAAgB;AAE1B,2BAAwB,MAAM;AAC5B,WAAO,OAAO,KAAK,MAAM,SAAS;AAAA;AAGpC,kBAAe,UAAU,kBAAkB,WAAY;AACrD,WAAO;AAAA,MACL,QAAQ;AAAA,MACR,MAAM;AAAA;AAAA;AAIV,kBAAe,UAAU,kBAAkB,WAAY;AACrD,WAAO,IAAI;AAAA;AAGb,kBAAe,UAAU,YAAY,SAAU,KAAK,OAAO;AACzD,QAAI,OAAO,MAAM;AACjB,QAAI,YAAY,MAAM;AAEtB,QAAI,MAAM,UAAU;AAClB,eAAS,IAAI,GAAG,IAAI,KAAK,UAAS;AAChC,YAAI,SAAQ,KAAK;AAEjB,YAAI,SAAQ,GAAG;AACb,cAAI,OAAO,KAAK,MAAM,KAAK;AAE3B,mBAAS,IAAI,GAAG,IAAI,QAAO,KAAK;AAC9B,gBAAI,OAAO,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,WAI5B;AACL,eAAS,IAAI,GAAG,IAAI,KAAK,UAAS;AAChC,YAAI,KAAK,KAAK;AACd,YAAI,KAAK,KAAK;AACd,YAAI,KAAK,KAAK;AACd,YAAI,KAAK,KAAK;AACd,YAAI,OAAO,IAAI;AAEf,YAAI,YAAY,GAAG;AACjB,cAAI,KAAM,MAAK,MAAM,IAAK,MAAK,MAAM;AACrC,cAAI,KAAM,MAAK,MAAM,IAAK,MAAK,MAAM;AACrC,cAAI,iBAAiB,IAAI,IAAI,IAAI;AAAA,eAC5B;AACL,cAAI,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAMvB,kBAAe,UAAU,gBAAgB,SAAU,GAAG,GAAG;AACvD,QAAI,QAAQ,KAAK;AACjB,QAAI,OAAO,MAAM;AACjB,QAAI,YAAY,MAAM;AACtB,QAAI,YAAY,KAAK,MAAM;AAE3B,QAAI,MAAM,UAAU;AAClB,UAAI,YAAY;AAEhB,eAAS,IAAI,GAAG,IAAI,KAAK,UAAS;AAChC,YAAI,SAAQ,KAAK;AAEjB,YAAI,SAAQ,GAAG;AACb,cAAI,KAAK,KAAK;AACd,cAAI,KAAK,KAAK;AAEd,mBAAS,IAAI,GAAG,IAAI,QAAO,KAAK;AAC9B,gBAAI,KAAK,KAAK;AACd,gBAAI,KAAK,KAAK;AAEd,gBAAI,AAAY,cAAc,IAAI,IAAI,IAAI,IAAI,WAAW,GAAG,IAAI;AAC9D,qBAAO;AAAA;AAAA;AAAA;AAKb;AAAA;AAAA,WAEG;AACL,UAAI,YAAY;AAEhB,eAAS,IAAI,GAAG,IAAI,KAAK,UAAS;AAChC,YAAI,KAAK,KAAK;AACd,YAAI,KAAK,KAAK;AACd,YAAI,KAAK,KAAK;AACd,YAAI,KAAK,KAAK;AAEd,YAAI,YAAY,GAAG;AACjB,cAAI,KAAM,MAAK,MAAM,IAAK,MAAK,MAAM;AACrC,cAAI,KAAM,MAAK,MAAM,IAAK,MAAK,MAAM;AAErC,cAAI,AAAiB,eAAc,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,WAAW,GAAG,IAAI;AAC3E,mBAAO;AAAA;AAAA,eAEJ;AACL,cAAI,AAAY,cAAc,IAAI,IAAI,IAAI,IAAI,WAAW,GAAG,IAAI;AAC9D,mBAAO;AAAA;AAAA;AAIX;AAAA;AAAA;AAIJ,WAAO;AAAA;AAGT,SAAO;AAAA,EACC;AAEV,IAAI,gBAEJ,WAAY;AACV,4BAAyB;AACvB,SAAK,QAAQ,IAAY;AAAA;AAG3B,iBAAc,UAAU,eAAe,WAAY;AACjD,WAAO,CAAC,KAAK;AAAA;AAGf;AAKA,iBAAc,UAAU,aAAa,SAAU,MAAM;AACnD,SAAK,MAAM;AACX,QAAI,SAAS,IAAI,eAAe;AAAA,MAC9B,WAAW;AAAA,MACX,QAAQ;AAAA;AAEV,WAAO,SAAS;AAAA,MACd,MAAM,KAAK,UAAU;AAAA;AAGvB,SAAK,WAAW,QAAQ;AAGxB,SAAK,MAAM,IAAI;AACf,SAAK,eAAe;AAAA;AAGtB;AAKA,iBAAc,UAAU,2BAA2B,SAAU,MAAM;AACjE,SAAK,MAAM;AAEX,SAAK;AAEL,QAAI,KAAK,UAAU,KAAK;AACtB,UAAI,CAAC,KAAK,cAAc;AACtB,aAAK,eAAe,IAAI,+BAAuB;AAAA,UAC7C,QAAQ;AAAA;AAAA;AAIZ,WAAK,MAAM,IAAI,KAAK;AAAA,WACf;AACL,WAAK,eAAe;AAAA;AAAA;AAIxB;AAKA,iBAAc,UAAU,oBAAoB,SAAU,YAAY,MAAM;AACtE,QAAI,SAAS,IAAI;AACjB,WAAO,SAAS;AAAA,MACd,MAAM,KAAK,UAAU;AAAA;AAGvB,SAAK,WAAW,QAAQ,MAAM,CAAC,CAAC,KAAK;AAErC,QAAI,CAAC,KAAK,cAAc;AACtB,aAAO,YAAY;AACnB,aAAO,SAAS;AAChB,aAAO,eAAe,WAAW;AACjC,WAAK,MAAM,IAAI;AAAA,WACV;AACL,WAAK,aAAa,eAAe,QAAQ;AAAA;AAAA;AAI7C;AAKA,iBAAc,UAAU,SAAS,WAAY;AAC3C,SAAK;AAEL,SAAK,eAAe;AACpB,SAAK,MAAM;AAAA;AAGb;AAEA,iBAAc,UAAU,aAAa,SAAU,QAAQ,MAAM,eAAe;AAC1E,QAAI,YAAY,KAAK;AACrB,WAAO,SAAS;AAAA,MACd,UAAU,UAAU,IAAI;AAAA,MACxB,WAAW,UAAU,IAAI,CAAC,aAAa;AAAA;AAEzC,WAAO,SAAS,UAAU,SAAS,aAAa;AAChD,WAAO,MAAM,gBAAgB;AAC7B,QAAI,QAAQ,KAAK,UAAU;AAE3B,QAAI,SAAS,MAAM,QAAQ;AACzB,aAAO,SAAS,UAAU,MAAM;AAAA;AAGlC,WAAO,SAAS,QAAQ;AAExB,QAAI,CAAC,eAAe;AAClB,UAAI,WAAW,UAAU;AAGzB,eAAS,cAAc,UAAU;AACjC,aAAO,GAAG,aAAa,SAAU,GAAG;AAClC,iBAAS,YAAY;AACrB,YAAI,YAAY,OAAO,cAAc,EAAE,SAAS,EAAE;AAElD,YAAI,YAAY,GAAG;AAEjB,mBAAS,YAAY,YAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAMhD;AAEA,iBAAc,UAAU,oBAAoB,WAAY;AACtD,QAAI,cAAc,KAAK;AAEvB,QAAI,aAAa;AACf,kBAAY;AAAA;AAAA;AAIhB;AACA,SAAO;AAAA;AAGT,IAAO,wBAAQ;;;AChRf,IAAI,cAAc;AAAA,EAChB,YAAY;AAAA,EACZ,MAAM;AAAA,EACN,OAAO,SAAU,aAAa;AAC5B,QAAI,WAAW,YAAY;AAC3B,QAAI,aAAa,YAAY,IAAI;AACjC,QAAI,UAAU,YAAY,gBAAgB;AAC1C,WAAO;AAAA,MACL,UAAU,SAAU,QAAQ,UAAU;AACpC,YAAI,aAAa;AAEjB,YAAI,SAAS;AACX,cAAI,SAAS;AACb,cAAI,WAAW,OAAO,MAAM,OAAO;AAEnC,cAAI,YAAY;AACd,gBAAI,mBAAmB;AAEvB,qBAAS,IAAI,OAAO,OAAO,IAAI,OAAO,KAAK,KAAK;AAC9C,kCAAoB,YAAY,mBAAmB;AAAA;AAGrD,qBAAS,IAAI,aAAa,WAAW,mBAAmB;AAAA,iBACnD;AACL,qBAAS,IAAI,aAAa,WAAW;AAAA;AAGvC,cAAI,SAAS;AACb,cAAI,KAAK;AAET,mBAAS,IAAI,OAAO,OAAO,IAAI,OAAO,KAAK,KAAK;AAC9C,gBAAI,OAAM,YAAY,cAAc,GAAG;AAEvC,gBAAI,YAAY;AACd,qBAAO,YAAY;AAAA;AAGrB,qBAAS,IAAI,GAAG,IAAI,MAAK,KAAK;AAC5B,mBAAK,SAAS,YAAY,WAAW,IAAI,OAAO;AAChD,qBAAO,YAAY,GAAG;AACtB,qBAAO,YAAY,GAAG;AAAA;AAAA;AAI1B,mBAAS,UAAU,eAAe;AAAA,eAC7B;AACL,mBAAS,IAAI,OAAO,OAAO,IAAI,OAAO,KAAK,KAAK;AAC9C,gBAAI,YAAY,SAAS,aAAa;AACtC,gBAAI,OAAM,YAAY,cAAc,GAAG;AACvC,gBAAI,MAAM;AAEV,gBAAI,YAAY;AACd,uBAAS,IAAI,GAAG,IAAI,MAAK,KAAK;AAC5B,oBAAI,KAAK,SAAS,YAAY,WAAW;AAAA;AAAA,mBAEtC;AACL,kBAAI,KAAK,SAAS,YAAY,WAAW;AACzC,kBAAI,KAAK,SAAS,YAAY,WAAW;AACzC,kBAAI,YAAY,UAAU,IAAI,CAAC,aAAa;AAE5C,kBAAI,CAAC,WAAW;AACd,oBAAI,KAAK,CAAE,KAAI,GAAG,KAAK,IAAI,GAAG,MAAM,IAAK,KAAI,GAAG,KAAK,IAAI,GAAG,MAAM,WAAY,KAAI,GAAG,KAAK,IAAI,GAAG,MAAM,IAAK,KAAI,GAAG,KAAK,IAAI,GAAG,MAAM;AAAA;AAAA;AAIzI,qBAAS,cAAc,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOtC,IAAO,sBAAQ;;;AChEf,IAAI,YAEJ,SAAU,QAAQ;AAChB,YAAU,YAAW;AAErB,wBAAqB;AACnB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,WAAU;AACvB,WAAO;AAAA;AAGT,aAAU,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK;AAChE,QAAI,OAAO,YAAY;AAEvB,QAAI,WAAW,KAAK,gBAAgB,MAAM;AAE1C,QAAI,SAAS,YAAY,IAAI;AAC7B,QAAI,cAAc,YAAY,IAAI,CAAC,UAAU;AAC7C,QAAI,KAAK,IAAI;AAIb,QAAI,QAAQ,GAAG,QAAQ,cAAc;AAErC,QAAI,CAAC,OAAO;AACV,SAAG,QAAQ,SAAS,QAAQ,MAAM;AAAA;AAIpC,QAAI,KAAK,eAAe,QAAQ,CAAC,OAAO;AACtC,SAAG,YAAY,KAAK,aAAa;AAAA,QAC/B,YAAY;AAAA;AAAA;AAIhB,QAAI,KAAK,YAAY,gBAAgB,aAAa;AAChD,UAAI,MAAuC;AACzC,YAAI,oBAAoB;AACxB,gBAAQ,WAAW,SAAU,kBAAkB;AAC7C,cAAI,qBAAqB,eAAe,iBAAiB,IAAI,cAAc,QAAQ;AACjF,gCAAoB;AAAA;AAAA;AAGxB,6BAAqB,QAAQ,KAAK;AAAA;AAGpC,UAAI,CAAC,OAAO;AACV,WAAG,YAAY,QAAQ;AAAA,UACrB,YAAY;AAAA,UACZ,gBAAgB,KAAK,IAAI,KAAK,IAAI,cAAc,KAAK,KAAK,IAAI;AAAA;AAAA;AAAA;AAKpE,aAAS,WAAW;AACpB,QAAI,WAAW,YAAY,IAAI,QAAQ,SAAS,eAAe,YAAY,kBAAkB,OAAO;AAEpG,QAAI,UAAU;AACZ,WAAK,MAAM,YAAY;AAAA,WAClB;AACL,WAAK,MAAM;AAAA;AAGb,SAAK,cAAc;AACnB,SAAK,YAAY;AAAA;AAGnB,aAAU,UAAU,2BAA2B,SAAU,aAAa,SAAS,KAAK;AAClF,QAAI,OAAO,YAAY;AAEvB,QAAI,WAAW,KAAK,gBAAgB,MAAM;AAE1C,aAAS,yBAAyB;AAElC,SAAK,YAAY;AAEjB,SAAK,YAAY;AAAA;AAGnB,aAAU,UAAU,oBAAoB,SAAU,YAAY,aAAa,SAAS;AAClF,SAAK,UAAU,kBAAkB,YAAY,YAAY;AAEzD,SAAK,YAAY,WAAW,QAAQ,YAAY,UAAU;AAAA;AAG5D,aAAU,UAAU,kBAAkB,SAAU,aAAa,SAAS,KAAK;AACzE,QAAI,OAAO,YAAY;AACvB,QAAI,kBAAkB,YAAY;AAElC,QAAI,CAAC,KAAK,aAAa,gBAAgB,SAAS,gBAAgB,mBAAmB;AAEjF,aAAO;AAAA,QACL,QAAQ;AAAA;AAAA,WAEL;AAGL,UAAI,MAAM,oBAAY,MAAM,aAAa,SAAS;AAElD,UAAI,IAAI,UAAU;AAChB,YAAI,SAAS;AAAA,UACX,OAAO;AAAA,UACP,KAAK,KAAK;AAAA,UACV,OAAO,KAAK;AAAA,WACX;AAAA;AAIL,WAAK,UAAU;AAEf,WAAK,YAAY;AAAA;AAAA;AAIrB,aAAU,UAAU,kBAAkB,SAAU,MAAM,aAAa;AACjE,QAAI,WAAW,KAAK;AAEpB,QAAI,YAAY,KAAK,YAAY;AAEjC,QAAI,aAAa,CAAC,CAAC,YAAY,IAAI;AACnC,QAAI,kBAAkB,YAAY;AAClC,QAAI,cAAc,gBAAgB;AAElC,QAAI,MAAuC;AACzC,UAAI,aAAa,aAAa;AAC5B,gBAAQ,KAAK;AAAA;AAAA;AAIjB,QAAI,CAAC,YAAY,cAAc,KAAK,aAAa,eAAe,KAAK,eAAe,gBAAgB,KAAK,cAAc;AACrH,UAAI,UAAU;AACZ,iBAAS;AAAA;AAGX,iBAAW,KAAK,YAAY,cAAc,IAAI,0BAAkB,IAAI,iBAAS,aAAa,YAAY,yBAAiB,oBAAW,YAAY,qBAAa;AAC3J,WAAK,YAAY;AACjB,WAAK,cAAc;AACnB,WAAK,eAAe;AAAA;AAGtB,SAAK,MAAM,IAAI,SAAS;AACxB,WAAO;AAAA;AAGT,aAAU,UAAU,cAAc,SAAU,aAAa;AACvD,WAAO,CAAC,CAAC,YAAY,IAAI,CAAC,UAAU;AAAA;AAGtC,aAAU,UAAU,cAAc,SAAU,KAAK;AAE/C,QAAI,KAAK,IAAI;AACb,QAAI,QAAQ,GAAG,QAAQ,cAAc;AAErC,QAAI,CAAC,SAAS,KAAK,eAAe,MAAM;AACtC,SAAG,QAAQ,SAAS,KAAK,aAAa,MAAM;AAAA;AAAA;AAIhD,aAAU,UAAU,SAAS,SAAU,SAAS,KAAK;AACnD,SAAK,aAAa,KAAK,UAAU;AACjC,SAAK,YAAY;AAEjB,SAAK,YAAY;AAAA;AAGnB,aAAU,UAAU,UAAU,SAAU,SAAS,KAAK;AACpD,SAAK,OAAO,SAAS;AAAA;AAGvB,aAAU,OAAO;AACjB,SAAO;AAAA,EACP;AAEF,IAAO,oBAAQ;;;ACjLf,IAAI,YAAY,OAAO,gBAAgB,cAAc,QAAQ;AAC7D,IAAI,aAAa,OAAO,iBAAiB,cAAc,QAAQ;AAE/D,mBAAmB,WAAW;AAC5B,MAAI,OAAO,UAAU;AAErB,MAAI,QAAQ,KAAK,MAAM,KAAK,GAAG,MAAM,KAAK,GAAG,GAAG,OAAO;AACrD,QAAI,MAAuC;AACzC,cAAQ,KAAK;AAAA;AAGf,cAAU,OAAO,IAAI,MAAM,SAAU,SAAS;AAC5C,UAAI,SAAS,CAAC,QAAQ,GAAG,OAAO,QAAQ,GAAG;AAC3C,UAAI,SAAS;AAAA,QACX;AAAA;AAGF,UAAI,QAAQ,GAAG,MAAM;AACnB,eAAO,WAAW,QAAQ,GAAG;AAAA;AAG/B,UAAI,QAAQ,GAAG,MAAM;AACnB,eAAO,SAAS,QAAQ,GAAG;AAAA;AAG7B,aAAO,SAAS,CAAC,QAAQ,QAAQ,IAAI,QAAQ;AAAA;AAAA;AAAA;AAKnD,IAAI,mBAEJ,SAAU,QAAQ;AAChB,YAAU,mBAAkB;AAE5B,+BAA4B;AAC1B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,kBAAiB;AAC9B,UAAM,wBAAwB;AAC9B,UAAM,iBAAiB;AACvB,WAAO;AAAA;AAGT,oBAAiB,UAAU,OAAO,SAAU,QAAQ;AAElD,WAAO,OAAO,OAAO,QAAQ;AAE7B,cAAU;AAEV,QAAI,SAAS,KAAK,wBAAwB,OAAO;AAEjD,SAAK,cAAc,OAAO;AAC1B,SAAK,oBAAoB,OAAO;AAEhC,QAAI,OAAO,YAAY;AACrB,aAAO,OAAO,IAAI,aAAa,OAAO;AAAA;AAGxC,WAAO,UAAU,KAAK,MAAM,MAAM;AAAA;AAGpC,oBAAiB,UAAU,cAAc,SAAU,QAAQ;AACzD,cAAU;AAEV,QAAI,OAAO,MAAM;AAEf,UAAI,SAAS,KAAK,wBAAwB,OAAO;AAEjD,WAAK,cAAc,OAAO;AAC1B,WAAK,oBAAoB,OAAO;AAEhC,UAAI,OAAO,YAAY;AACrB,eAAO,OAAO,IAAI,aAAa,OAAO;AAAA;AAAA;AAI1C,WAAO,UAAU,YAAY,MAAM,MAAM;AAAA;AAG3C,oBAAiB,UAAU,aAAa,SAAU,QAAQ;AACxD,QAAI,SAAS,KAAK,wBAAwB,OAAO;AAEjD,QAAI,OAAO,YAAY;AACrB,UAAI,CAAC,KAAK,aAAa;AACrB,aAAK,cAAc,OAAO;AAC1B,aAAK,oBAAoB,OAAO;AAAA,aAC3B;AACL,aAAK,cAAc,YAAY,KAAK,aAAa,OAAO;AACxD,aAAK,oBAAoB,YAAY,KAAK,mBAAmB,OAAO;AAAA;AAGtE,aAAO,OAAO,IAAI,aAAa,OAAO;AAAA;AAGxC,SAAK,aAAa,WAAW,OAAO;AAAA;AAGtC,oBAAiB,UAAU,0BAA0B,SAAU,KAAK;AAClE,QAAI,YAAY,KAAK,UAAU,aAAa;AAC5C,QAAI,SAAS,UAAU,kBAAkB,QAAQ,UAAU,SAAS,UAAU,WAAW;AAEzF,QAAI,MAAuC;AACzC,UAAI,CAAE,mBAAkB,SAAS,OAAO,SAAS,KAAK,OAAO,cAAc,QAAQ;AACjF,cAAM,IAAI,MAAM,oBAAoB,KAAK,UAAU,UAAU;AAAA;AAAA;AAIjE,WAAO;AAAA;AAGT,oBAAiB,UAAU,qBAAqB,SAAU,KAAK;AAC7D,QAAI,KAAK,mBAAmB;AAC1B,aAAO,KAAK,kBAAkB,MAAM,IAAI;AAAA,WACnC;AACL,aAAO,KAAK,wBAAwB,KAAK;AAAA;AAAA;AAI7C,oBAAiB,UAAU,gBAAgB,SAAU,KAAK,KAAK;AAC7D,QAAI,KAAK,mBAAmB;AAC1B,UAAI,SAAS,KAAK,kBAAkB,MAAM;AAC1C,UAAI,OAAM,KAAK,kBAAkB,MAAM,IAAI;AAE3C,eAAS,IAAI,GAAG,IAAI,MAAK,KAAK;AAC5B,YAAI,KAAK,IAAI,MAAM;AACnB,YAAI,GAAG,KAAK,KAAK,YAAY,SAAS,IAAI;AAC1C,YAAI,GAAG,KAAK,KAAK,YAAY,SAAS,IAAI,IAAI;AAAA;AAGhD,aAAO;AAAA,WACF;AACL,UAAI,SAAS,KAAK,wBAAwB;AAE1C,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAI,KAAK,IAAI,MAAM;AACnB,YAAI,GAAG,KAAK,OAAO,GAAG;AACtB,YAAI,GAAG,KAAK,OAAO,GAAG;AAAA;AAGxB,aAAO,OAAO;AAAA;AAAA;AAIlB,oBAAiB,UAAU,0BAA0B,SAAU,MAAM;AACnE,QAAI,cAAc;AAElB,QAAI,KAAK,aAAa;AACpB,oBAAc,KAAK,YAAY;AAAA;AAKjC,QAAI,OAAO,KAAK,OAAO,UAAU;AAC/B,UAAI,OAAM,KAAK;AAEf,UAAI,4BAA4B,IAAI,UAAU;AAC9C,UAAI,gBAAgB,IAAI,WAAW;AACnC,UAAI,eAAe;AACnB,UAAI,eAAe;AACnB,UAAI,YAAY;AAEhB,eAAS,IAAI,GAAG,IAAI,QAAM;AACxB;AACA,YAAI,SAAQ,KAAK;AAEjB,kCAA0B,kBAAkB,eAAe;AAE3D,kCAA0B,kBAAkB;AAE5C,iBAAS,IAAI,GAAG,IAAI,QAAO,KAAK;AAC9B,cAAI,IAAI,KAAK;AACb,cAAI,IAAI,KAAK;AACb,wBAAc,kBAAkB;AAChC,wBAAc,kBAAkB;AAEhC,cAAI,IAAI,MAAK;AACX,gBAAI,MAAuC;AACzC,oBAAM,IAAI,MAAM;AAAA;AAAA;AAAA;AAAA;AAMxB,aAAO;AAAA,QACL,kBAAkB,IAAI,YAAY,0BAA0B,QAAQ,GAAG;AAAA,QACvE,YAAY;AAAA,QACZ,OAAO;AAAA;AAAA;AAIX,WAAO;AAAA,MACL,kBAAkB;AAAA,MAClB,YAAY;AAAA,MACZ,OAAO,KAAK;AAAA;AAAA;AAIhB,oBAAiB,UAAU,iBAAiB,SAAU,QAAQ,SAAS;AACrE,QAAI,MAAuC;AACzC,UAAI,WAAW,yBAAiB,IAAI,OAAO;AAE3C,UAAI,CAAC,UAAU;AACb,cAAM,IAAI,MAAM,8BAA8B,OAAO;AAAA;AAAA;AAIzD,QAAI,WAAW,IAAI,mBAAW,CAAC,UAAU;AACzC,aAAS,gBAAgB;AACzB,aAAS,SAAS,OAAO,MAAM,IAAI,SAAU,UAAU,SAAS,WAAW,UAAU;AAEnF,UAAI,oBAAoB,OAAO;AAC7B,eAAO;AAAA,aACF;AACL,iBAAS,gBAAgB;AACzB,YAAI,QAAQ,SAAS;AAErB,YAAI,SAAS,MAAM;AACjB,iBAAO,iBAAiB,QAAQ,MAAM,YAAY;AAAA;AAAA;AAAA;AAIxD,WAAO;AAAA;AAGT,oBAAiB,UAAU,gBAAgB,SAAU,WAAW,gBAAgB,UAAU;AACxF,QAAI,OAAO,KAAK;AAChB,QAAI,YAAY,KAAK,aAAa;AAClC,QAAI,OAAO,UAAU,IAAI;AAEzB,QAAI,MAAM;AACR,aAAO;AAAA;AAGT,QAAI,WAAW,UAAU,IAAI;AAC7B,QAAI,SAAS,UAAU,IAAI;AAC3B,QAAI,UAAU;AACd,gBAAY,QAAQ,QAAQ,KAAK;AACjC,cAAU,QAAQ,QAAQ,KAAK;AAC/B,WAAO,oBAAoB,aAAa;AAAA,MACtC,MAAM,QAAQ,KAAK;AAAA;AAAA;AAIvB,oBAAiB,UAAU,qBAAqB,WAAY;AAC1D,WAAO,CAAC,CAAC,KAAK,IAAI,CAAC,UAAU;AAAA;AAG/B,oBAAiB,UAAU,iBAAiB,WAAY;AACtD,QAAI,cAAc,KAAK,OAAO;AAE9B,QAAI,eAAe,MAAM;AACvB,aAAO,KAAK,OAAO,QAAQ,MAAM,KAAK,IAAI;AAAA;AAG5C,WAAO;AAAA;AAGT,oBAAiB,UAAU,0BAA0B,WAAY;AAC/D,QAAI,uBAAuB,KAAK,OAAO;AAEvC,QAAI,wBAAwB,MAAM;AAChC,aAAO,KAAK,OAAO,QAAQ,MAAM,KAAK,IAAI;AAAA;AAG5C,WAAO;AAAA;AAGT,oBAAiB,OAAO;AACxB,oBAAiB,eAAe,CAAC,QAAQ,SAAS,OAAO;AACzD,oBAAiB,gBAAgB;AAAA,IAC/B,kBAAkB;AAAA,IAClB,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,iBAAiB;AAAA,IAEjB,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,QAAQ,CAAC,QAAQ;AAAA,IACjB,YAAY,CAAC,IAAI;AAAA,IAEjB,UAAU;AAAA,IACV,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,eAAe;AAAA,MACf,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,MAAM;AAAA,MACN,aAAa;AAAA;AAAA,IAEf,OAAO;AAAA,IAEP,gBAAgB;AAAA,IAChB,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAIZ,WAAW;AAAA,MACT,SAAS;AAAA;AAAA;AAGb,SAAO;AAAA,EACP;AAEF,IAAO,sBAAQ;;;AC7Tf,oBAAmB,GAAG;AACpB,MAAI,CAAE,cAAa,QAAQ;AACzB,QAAI,CAAC,GAAG;AAAA;AAGV,SAAO;AAAA;AAGT,IAAI,cAAc;AAAA,EAChB,YAAY;AAAA,EACZ,OAAO,SAAU,aAAa;AAC5B,QAAI,aAAa,WAAU,YAAY,IAAI;AAC3C,QAAI,aAAa,WAAU,YAAY,IAAI;AAC3C,QAAI,OAAO,YAAY;AACvB,SAAK,UAAU,cAAc,cAAc,WAAW;AACtD,SAAK,UAAU,YAAY,cAAc,WAAW;AACpD,SAAK,UAAU,kBAAkB,cAAc,WAAW;AAC1D,SAAK,UAAU,gBAAgB,cAAc,WAAW;AAExD,sBAAkB,OAAM,KAAK;AAC3B,UAAI,YAAY,MAAK,aAAa;AAClC,UAAI,cAAa,WAAU,UAAU,WAAW,UAAU;AAC1D,UAAI,cAAa,WAAU,UAAU,WAAW,cAAc;AAC9D,kBAAW,MAAM,MAAK,cAAc,KAAK,cAAc,YAAW;AAClE,kBAAW,MAAM,MAAK,cAAc,KAAK,YAAY,YAAW;AAChE,kBAAW,MAAM,MAAK,cAAc,KAAK,kBAAkB,YAAW;AACtE,kBAAW,MAAM,MAAK,cAAc,KAAK,gBAAgB,YAAW;AAAA;AAGtE,WAAO;AAAA,MACL,UAAU,KAAK,gBAAgB,WAAW;AAAA;AAAA;AAAA;AAIhD,IAAO,sBAAQ;;;AC9BR,mBAAiB,WAAW;AACjC,YAAU,kBAAkB;AAC5B,YAAU,oBAAoB;AAC9B,YAAU,eAAe;AACzB,YAAU,eAAe;AAAA;;;ACL3B,IAAI,kBAAkB;AAEtB,IAAI,eAEJ,WAAY;AACV,2BAAwB;AACtB,SAAK,WAAW;AAChB,SAAK,YAAY;AACjB,SAAK,aAAa;AAClB,SAAK,aAAa;AAClB,SAAK,kBAAkB;AAAA,MACrB,SAAS;AAAA,MACT,YAAY;AAAA;AAEd,QAAI,SAAS,AAAO;AACpB,SAAK,SAAS;AAAA;AAUhB,gBAAa,UAAU,SAAS,SAAU,MAAM,OAAO,QAAQ,YAAW,WAAW,WAAW;AAC9F,QAAI,QAAQ,KAAK;AAEjB,QAAI,kBAAkB,KAAK,aAAa,WAAW;AAEnD,QAAI,qBAAqB,KAAK,aAAa,WAAW;AAEtD,QAAI,IAAI,KAAK,YAAY,KAAK;AAC9B,QAAI,SAAS,KAAK;AAClB,QAAI,MAAM,OAAO,WAAW;AAC5B,QAAI,OAAM,KAAK;AACf,WAAO,QAAQ;AACf,WAAO,SAAS;AAEhB,aAAS,IAAI,GAAG,IAAI,MAAK,EAAE,GAAG;AAC5B,UAAI,IAAI,KAAK;AACb,UAAI,IAAI,EAAE;AACV,UAAI,IAAI,EAAE;AACV,UAAI,QAAQ,EAAE;AAEd,UAAI,QAAQ,WAAU;AAEtB,UAAI,cAAc;AAClB,UAAI,UAAU,OAAO,IAAI,GAAG,IAAI;AAAA;AAGlC,QAAI,CAAC,OAAO,SAAS,CAAC,OAAO,QAAQ;AAGnC,aAAO;AAAA;AAIT,QAAI,YAAY,IAAI,aAAa,GAAG,GAAG,OAAO,OAAO,OAAO;AAC5D,QAAI,SAAS,UAAU;AACvB,QAAI,SAAS;AACb,QAAI,WAAW,OAAO;AACtB,QAAI,aAAa,KAAK;AACtB,QAAI,aAAa,KAAK;AACtB,QAAI,cAAc,aAAa;AAE/B,WAAO,SAAS,UAAU;AACxB,UAAI,QAAQ,OAAO,SAAS,KAAK;AACjC,UAAI,iBAAiB,KAAK,MAAM,QAAS,mBAAkB,MAAM;AAEjE,UAAI,QAAQ,GAAG;AACb,YAAI,WAAW,UAAU,SAAS,kBAAkB;AAEpD,gBAAQ,KAAM,SAAQ,QAAQ,cAAc;AAC5C,eAAO,YAAY,SAAS;AAC5B,eAAO,YAAY,SAAS,iBAAiB;AAC7C,eAAO,YAAY,SAAS,iBAAiB;AAC7C,eAAO,YAAY,SAAS,iBAAiB,KAAK,QAAQ;AAAA,aACrD;AACL,kBAAU;AAAA;AAAA;AAId,QAAI,aAAa,WAAW,GAAG;AAC/B,WAAO;AAAA;AAOT,gBAAa,UAAU,YAAY,WAAY;AAC7C,QAAI,cAAc,KAAK,gBAAiB,MAAK,eAAe,AAAO;AAEnE,QAAI,IAAI,KAAK,YAAY,KAAK;AAC9B,QAAI,IAAI,IAAI;AACZ,gBAAY,QAAQ;AACpB,gBAAY,SAAS;AACrB,QAAI,MAAM,YAAY,WAAW;AACjC,QAAI,UAAU,GAAG,GAAG,GAAG;AAIvB,QAAI,gBAAgB;AACpB,QAAI,aAAa,KAAK;AAGtB,QAAI,cAAc;AAElB,QAAI;AACJ,QAAI,IAAI,CAAC,GAAG,GAAG,KAAK,WAAW,GAAG,KAAK,KAAK,GAAG;AAC/C,QAAI;AACJ,QAAI;AACJ,WAAO;AAAA;AAQT,gBAAa,UAAU,eAAe,SAAU,WAAW,OAAO;AAChE,QAAI,iBAAiB,KAAK;AAC1B,QAAI,oBAAoB,eAAe,UAAW,gBAAe,SAAS,IAAI,kBAAkB,MAAM;AACtG,QAAI,QAAQ,CAAC,GAAG,GAAG,GAAG;AACtB,QAAI,MAAM;AAEV,aAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,gBAAU,OAAO,IAAI,KAAK,MAAM;AAChC,wBAAkB,SAAS,MAAM;AACjC,wBAAkB,SAAS,MAAM;AACjC,wBAAkB,SAAS,MAAM;AACjC,wBAAkB,SAAS,MAAM;AAAA;AAGnC,WAAO;AAAA;AAGT,SAAO;AAAA;AAGT,IAAO,uBAAQ;;;ACvIf,+BAA+B,YAAY,WAAW,UAAU;AAC9D,MAAI,WAAW,WAAW,KAAK,WAAW;AAC1C,cAAY,AAAO,IAAI,WAAW,SAAU,OAAO;AACjD,WAAO;AAAA,MACL,UAAU,CAAE,OAAM,SAAS,KAAK,WAAW,MAAM,UAAW,OAAM,SAAS,KAAK,WAAW,MAAM;AAAA;AAAA;AAGrG,MAAI,OAAM,UAAU;AACpB,MAAI,YAAY;AAChB,SAAO,SAAU,KAAK;AACpB,QAAI;AAEJ,SAAK,IAAI,WAAW,IAAI,MAAK,KAAK;AAChC,UAAI,WAAW,UAAU,GAAG;AAE5B,UAAI,SAAS,MAAM,OAAO,OAAO,SAAS,IAAI;AAC5C,oBAAY;AACZ;AAAA;AAAA;AAIJ,QAAI,MAAM,MAAK;AAEb,WAAK,IAAI,YAAY,GAAG,KAAK,GAAG,KAAK;AACnC,YAAI,WAAW,UAAU,GAAG;AAE5B,YAAI,SAAS,MAAM,OAAO,OAAO,SAAS,IAAI;AAC5C,sBAAY;AACZ;AAAA;AAAA;AAAA;AAKN,WAAO,KAAK,KAAK,IAAI,QAAO,SAAS;AAAA;AAAA;AAIzC,gCAAgC,YAAY,OAAO;AACjD,MAAI,WAAW,WAAW,KAAK,WAAW;AAC1C,UAAQ,CAAE,OAAM,KAAK,WAAW,MAAM,UAAW,OAAM,KAAK,WAAW,MAAM;AAC7E,SAAO,SAAU,KAAK;AACpB,WAAO,OAAO,MAAM,MAAM,OAAO,MAAM;AAAA;AAAA;AAI3C,uBAAuB,UAAU;AAC/B,MAAI,aAAa,SAAS;AAE1B,SAAO,WAAW,OAAO,SAAS,WAAW,OAAO;AAAA;AAGtD,IAAI,cAEJ,SAAU,QAAQ;AAChB,YAAU,cAAa;AAEvB,0BAAuB;AACrB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,aAAY;AACzB,WAAO;AAAA;AAGT,eAAY,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK;AAClE,QAAI;AACJ,YAAQ,cAAc,aAAa,SAAU,WAAW;AACtD,gBAAU,iBAAiB,SAAU,cAAc;AACjD,YAAI,iBAAiB,aAAa;AAChC,kCAAwB;AAAA;AAAA;AAAA;AAK9B,QAAI,MAAuC;AACzC,UAAI,CAAC,uBAAuB;AAC1B,cAAM,IAAI,MAAM;AAAA;AAAA;AAIpB,SAAK,MAAM;AACX,SAAK,0BAA0B;AAC/B,QAAI,WAAW,YAAY;AAE3B,QAAI,SAAS,SAAS,iBAAiB,SAAS,SAAS,YAAY;AACnE,WAAK,8BAA8B,aAAa,KAAK,GAAG,YAAY,UAAU;AAAA,eACrE,cAAc,WAAW;AAClC,WAAK,aAAa,UAAU,aAAa,uBAAuB;AAAA;AAAA;AAIpE,eAAY,UAAU,2BAA2B,SAAU,aAAa,SAAS,KAAK;AACpF,SAAK,MAAM;AAAA;AAGb,eAAY,UAAU,oBAAoB,SAAU,QAAQ,aAAa,SAAS,KAAK;AACrF,QAAI,WAAW,YAAY;AAE3B,QAAI,UAAU;AAEZ,UAAI,cAAc,WAAW;AAC3B,aAAK,OAAO,aAAa,SAAS;AAAA,aAC7B;AACL,aAAK,8BAA8B,aAAa,KAAK,OAAO,OAAO,OAAO,KAAK;AAAA;AAAA;AAAA;AAKrF,eAAY,UAAU,gCAAgC,SAAU,aAAa,KAAK,OAAO,KAAK,aAAa;AACzG,QAAI,WAAW,YAAY;AAC3B,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI;AAEJ,QAAI,uBAAuB,UAAU,gBAAgB;AACnD,UAAI,QAAQ,SAAS,QAAQ;AAC7B,UAAI,QAAQ,SAAS,QAAQ;AAE7B,UAAI,MAAuC;AACzC,YAAI,CAAE,OAAM,SAAS,cAAc,MAAM,SAAS,aAAa;AAC7D,gBAAM,IAAI,MAAM;AAAA;AAGlB,YAAI,CAAE,OAAM,UAAU,MAAM,SAAS;AACnC,gBAAM,IAAI,MAAM;AAAA;AAAA;AAIpB,cAAQ,MAAM;AACd,eAAS,MAAM;AACf,oBAAc,MAAM,MAAM;AAC1B,oBAAc,MAAM,MAAM;AAAA;AAG5B,QAAI,QAAQ,KAAK;AACjB,QAAI,OAAO,YAAY;AACvB,QAAI,gBAAgB,YAAY,SAAS,CAAC,YAAY,cAAc;AACpE,QAAI,YAAY,YAAY,SAAS,CAAC,QAAQ,cAAc;AAC5D,QAAI,cAAc,YAAY,SAAS,CAAC,UAAU,cAAc;AAChE,QAAI,oBAAoB,qBAAqB;AAC7C,QAAI,QAAQ,YAAY,IAAI,CAAC,YAAY;AACzC,QAAI,YAAY,YAAY,IAAI,CAAC,YAAY;AAC7C,QAAI,WAAW,uBAAuB,UAAU,iBAAiB,CAAC,KAAK,aAAa,MAAM,KAAK,aAAa,MAAM,KAAK,aAAa,YAAY,CAAC,KAAK,aAAa,SAAS,KAAK,aAAa;AAE9L,aAAS,MAAM,OAAO,MAAM,KAAK,OAAO;AACtC,UAAI,OAAO;AACX,UAAI,QAAQ,KAAK,cAAc,KAAK;AAEpC,UAAI,uBAAuB,UAAU,gBAAgB;AACnD,YAAI,WAAW,KAAK,IAAI,SAAS,IAAI;AACrC,YAAI,WAAW,KAAK,IAAI,SAAS,IAAI;AAErC,YAAI,MAAM,KAAK,IAAI,SAAS,IAAI,SAAS,WAAW,YAAY,MAAM,WAAW,YAAY,MAAM,WAAW,YAAY,MAAM,WAAW,YAAY,IAAI;AACzJ;AAAA;AAGF,YAAI,QAAQ,SAAS,YAAY,CAAC,UAAU;AAC5C,eAAO,IAAY,aAAK;AAAA,UACtB,OAAO;AAAA,YACL,GAAG,KAAK,MAAM,KAAK,MAAM,MAAM,MAAM,QAAQ;AAAA,YAC7C,GAAG,KAAK,MAAM,KAAK,MAAM,MAAM,MAAM,SAAS;AAAA,YAC9C,OAAO,KAAK,KAAK;AAAA,YACjB,QAAQ,KAAK,KAAK;AAAA;AAAA,UAEpB;AAAA;AAAA,aAEG;AAEL,YAAI,MAAM,KAAK,IAAI,SAAS,IAAI,OAAO;AACrC;AAAA;AAGF,eAAO,IAAY,aAAK;AAAA,UACtB,IAAI;AAAA,UACJ,OAAO,SAAS,WAAW,CAAC,KAAK,IAAI,SAAS,IAAI,OAAO;AAAA,UACzD;AAAA;AAAA;AAIJ,UAAI,YAAY,KAAK,aAAa;AAElC,UAAI,KAAK,eAAe;AACtB,YAAI,gBAAgB,UAAU,SAAS;AACvC,wBAAgB,cAAc,SAAS,aAAa;AACpD,oBAAY,UAAU,SAAS,CAAC,QAAQ,cAAc;AACtD,sBAAc,UAAU,SAAS,CAAC,UAAU,cAAc;AAC1D,gBAAQ,cAAc,IAAI;AAC1B,oBAAY,cAAc,IAAI;AAC9B,4BAAoB,qBAAqB;AAAA;AAG3C,UAAI,WAAW,YAAY,YAAY;AACvC,UAAI,cAAc;AAElB,UAAI,YAAY,SAAS,MAAM,MAAM;AACnC,sBAAc,SAAS,KAAK;AAAA;AAG9B,oBAAc,MAAM,mBAAmB;AAAA,QACrC,cAAc;AAAA,QACd,gBAAgB;AAAA,QAChB,gBAAgB,MAAM;AAAA,QACtB;AAAA;AAEF,WAAK,YAAY,YAAY,QAAQ;AACrC,WAAK,YAAY,QAAQ,QAAQ;AACjC,WAAK,YAAY,UAAU,QAAQ;AACnC,0BAAoB,MAAM,OAAO;AACjC,WAAK,cAAc;AAEnB,UAAI,aAAa;AAEf,aAAK,OAAO,SAAS,aAAa;AAAA;AAGpC,YAAM,IAAI;AACV,WAAK,iBAAiB,KAAK;AAAA;AAAA;AAI/B,eAAY,UAAU,eAAe,SAAU,KAAK,aAAa,gBAAgB,KAAK;AACpF,QAAI,iBAAiB,eAAe,cAAc;AAClD,QAAI,oBAAoB,eAAe,cAAc;AAIrD,QAAI,OAAO,YAAY;AACvB,QAAI,UAAU,KAAK,YAAY,KAAK,YAAY,IAAI;AACpD,YAAQ,WAAW,YAAY,IAAI;AACnC,YAAQ,YAAY,YAAY,IAAI;AACpC,YAAQ,aAAa,YAAY,IAAI;AACrC,YAAQ,aAAa,YAAY,IAAI;AACrC,QAAI,OAAO,IAAI,cAAc;AAC7B,QAAI,gBAAgB,IAAI;AACxB,SAAK,eAAe;AAEpB,QAAI,IAAI,KAAK,IAAI,KAAK,GAAG;AACzB,QAAI,IAAI,KAAK,IAAI,KAAK,GAAG;AACzB,QAAI,KAAK,KAAK,IAAI,KAAK,QAAQ,KAAK,GAAG,IAAI;AAC3C,QAAI,KAAK,KAAK,IAAI,KAAK,SAAS,KAAK,GAAG,IAAI;AAC5C,QAAI,QAAQ,KAAK;AACjB,QAAI,SAAS,KAAK;AAClB,QAAI,OAAO,CAAC,KAAK,aAAa,QAAQ,KAAK,aAAa,QAAQ,KAAK,aAAa;AAClF,QAAI,SAAS,KAAK,SAAS,MAAM,SAAU,KAAK,KAAK,OAAO;AAC1D,UAAI,KAAK,IAAI,YAAY,CAAC,KAAK;AAC/B,SAAG,MAAM;AACT,SAAG,MAAM;AACT,SAAG,KAAK;AACR,aAAO;AAAA;AAET,QAAI,aAAa,eAAe;AAChC,QAAI,YAAY,eAAe,SAAS,yBAAyB,uBAAuB,YAAY,eAAe,OAAO,SAAS,sBAAsB,YAAY,eAAe,gBAAgB,eAAe,OAAO;AAC1N,YAAQ,OAAO,QAAQ,OAAO,QAAQ,eAAe,MAAM,iBAAiB;AAAA,MAC1E,SAAS,eAAe,MAAM;AAAA,MAC9B,YAAY,kBAAkB,MAAM;AAAA,OACnC;AACH,QAAI,MAAM,IAAY,cAAM;AAAA,MAC1B,OAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,OAAO,QAAQ;AAAA;AAAA,MAEjB,QAAQ;AAAA;AAEV,SAAK,MAAM,IAAI;AAAA;AAGjB,eAAY,OAAO;AACnB,SAAO;AAAA,EACP;AAEF,IAAO,sBAAQ;;;ACrRf,IAAI,qBAEJ,SAAU,QAAQ;AAChB,YAAU,qBAAoB;AAE9B,iCAA8B;AAC5B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,oBAAmB;AAChC,WAAO;AAAA;AAGT,sBAAmB,UAAU,iBAAiB,SAAU,QAAQ,SAAS;AACvE,WAAO,yBAAiB,MAAM,MAAM;AAAA,MAClC,eAAe;AAAA;AAAA;AAInB,sBAAmB,UAAU,qBAAqB,WAAY;AAC5D,QAAI,kBAAkB,yBAAiB,IAAI,KAAK,IAAI;AAEpD,QAAI,mBAAmB,gBAAgB,YAAY;AACjD,aAAO,gBAAgB,WAAW,OAAO,SAAS,gBAAgB,WAAW,OAAO;AAAA;AAAA;AAIxF,sBAAmB,OAAO;AAC1B,sBAAmB,eAAe,CAAC,QAAQ,OAAO;AAClD,sBAAmB,gBAAgB;AAAA,IACjC,kBAAkB;AAAA,IAClB,QAAQ;AAAA,IACR,GAAG;AAAA,IAKH,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,QAAQ;AAAA,MACN,WAAW;AAAA,QACT,aAAa;AAAA;AAAA;AAAA;AAInB,SAAO;AAAA,EACP;AAEF,IAAO,wBAAQ;;;ACrDR,mBAAiB,WAAW;AACjC,YAAU,kBAAkB;AAC5B,YAAU,oBAAoB;AAAA;;;ACOhC,IAAI,yBAAyB,CAAC,aAAa;AAE3C,IAAI,eAAe,CAAC;AAAA,EAClB,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,OAAO;AAAA,EACP,SAAS,CAAC,QAAQ;AAAA,GACjB;AAAA,EACD,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,OAAO;AAAA,EACP,SAAS,CAAC,OAAO;AAAA;AAEnB,IAAI,mBAAmB,IAAY;AAEnC,IAAI,mBAEJ,SAAU,QAAQ;AAChB,YAAU,mBAAkB;AAE5B,+BAA4B;AAC1B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,kBAAiB;AAC9B,WAAO;AAAA;AAGT,oBAAiB,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK;AACvE,QAAI,QAAQ,KAAK;AACjB,QAAI,OAAO,YAAY;AACvB,QAAI,UAAU,KAAK;AACnB,QAAI,YAAY,YAAY;AAC5B,QAAI,WAAW,UAAU;AACzB,QAAI,eAAe,SAAS;AAC5B,QAAI,eAAe,UAAU,OAAO;AACpC,QAAI,MAAM;AAAA,MACR,QAAQ;AAAA,QACN,OAAO,IAAI;AAAA,QACX,QAAQ,IAAI;AAAA;AAAA,MAEd;AAAA,MACA,UAAU;AAAA,MACV,gBAAgB,CAAC,CAAC,aAAa,GAAG,aAAa,IAAI,aAAa,QAAQ,CAAC,aAAa,GAAG,aAAa,IAAI,aAAa;AAAA,MACvH;AAAA,MACA,UAAU,aAAa,CAAC;AAAA,MACxB,aAAa,aAAa,IAAI,CAAC;AAAA;AAEjC,SAAK,KAAK,SAAS,IAAI,SAAU,WAAW;AAC1C,UAAI,CAAC,KAAK,SAAS,YAAY;AAC7B;AAAA;AAGF,UAAI,YAAY,aAAa,MAAM;AACnC,UAAI,aAAa,cAAc,MAAM,WAAW,WAAW;AAC3D,UAAI,MAAM,UAAU,MAAM,KAAK;AAC/B,WAAK,iBAAiB,WAAW;AACjC,YAAM,IAAI;AACV,oBAAa,KAAK,KAAK;AAAA,OACtB,OAAO,SAAU,UAAU,UAAU;AACtC,UAAI,MAAM,QAAQ,iBAAiB;AAEnC,UAAI,CAAC,KAAK,SAAS,WAAW;AAC5B,cAAM,OAAO;AACb;AAAA;AAGF,UAAI,YAAY,aAAa,MAAM;AACnC,UAAI,aAAa,cAAc,MAAM,UAAU,WAAW;AAC1D,UAAI,oBAAoB,YAAY,MAAM;AAE1C,UAAI,OAAO,sBAAsB,IAAI,qBAAqB;AACxD,cAAM,OAAO;AACb,aAAK,iBAAiB,UAAU;AAChC,cAAM;AAAA;AAGR,UAAI,KAAK;AACP,kBAAU,KAAK,KAAK;AAAA,aACf;AACL,cAAM,UAAU,MAAM,KAAK,YAAY;AAAA;AAGzC,WAAK,iBAAiB,UAAU;AAChC,UAAI,wBAAwB;AAE5B,YAAM,IAAI;AACV,oBAAa,KAAK,KAAK;AAAA,OACtB,OAAO,SAAU,WAAW;AAC7B,UAAI,MAAM,QAAQ,iBAAiB;AACnC,aAAO,UAAU,SAAS,WAAW,IAAI,sBAAsB,gBAAgB;AAAA,OAC9E;AACH,SAAK,QAAQ;AACb,WAAO,KAAK;AAAA;AAGd,oBAAiB,UAAU,SAAS,SAAU,SAAS,KAAK;AAC1D,QAAI,QAAQ,KAAK;AACjB,QAAI,OAAO,KAAK;AAEhB,QAAI,QAAQ,IAAI,cAAc;AAC5B,UAAI,MAAM;AACR,aAAK,kBAAkB,SAAU,KAAK;AACpC,oBAAU,MAAM,UAAU,KAAK,WAAW,SAAS;AAAA;AAAA;AAAA,WAGlD;AACL,YAAM;AAAA;AAAA;AAIV,oBAAiB,OAAO;AACxB,SAAO;AAAA,EACP;AAGF,uBAAuB,MAAM,WAAW,WAAW,KAAK;AACtD,MAAI,WAAS,KAAK,cAAc;AAChC,MAAI,eAAe,UAAU,IAAI;AACjC,MAAI,aAAa,UAAU,IAAI;AAC/B,MAAI,iBAAiB,UAAU,IAAI,qBAAqB;AACxD,MAAI,eAAe,UAAU,IAAI;AACjC,MAAI,WAAY,iBAAgB,KAAK,KAAK,KAAK,OAAO;AACtD,MAAI,oBAAoB,UAAU,IAAI,wBAAwB;AAC9D,MAAI,sBAAqB,UAAU;AACnC,MAAI,aAAa;AAAA,IACf;AAAA,IACA,QAAQ;AAAA,IACR;AAAA,IACA,YAAY,KAAK,cAAc,WAAW,aAAa;AAAA,IACvD,OAAO,KAAK,cAAc,WAAW;AAAA,IACrC;AAAA,IACA;AAAA,IACA,uBAAuB,UAAU,IAAI;AAAA,IACrC;AAAA,IACA;AAAA,IACA,gBAAgB,sBAAqB,YAAY;AAAA,IACjD,YAAY,uBAAsB,UAAU,IAAI,CAAC,YAAY;AAAA,IAC7D,IAAI,UAAU,WAAW,KAAK,SAAS;AAAA;AAEzC,mBAAiB,WAAW,cAAc,UAAQ,KAAK;AACvD,oBAAkB,MAAM,WAAW,UAAQ,cAAc,YAAY,WAAW,gBAAgB,WAAW,QAAQ,mBAAmB,KAAK;AAC3I,mBAAiB,WAAW,WAAW,aAAa,UAAU,KAAK;AACnE,MAAI,aAAa,WAAW;AAC5B,MAAI,eAAe,sBAAsB,UAAU,IAAI,iBAAiB;AACxE,oBAAkB,WAAW,YAAY,UAAQ,cAAc,YAAY,cAAc,gBAAgB,WAAW,gBAAgB,WAAW,gBAAgB,WAAW,iBAAiB,KAAK;AAChM,SAAO;AAAA;AAIT,0BAA0B,WAAW,cAAc,UAAQ,KAAK,kBAAkB;AAChF,MAAI,WAAW,IAAI;AACnB,MAAI,qBAAqB,UAAU,IAAI;AACvC,MAAI,aAAY,IAAI,SAAS,aAAa,IAAI,SAAS;AACvD,MAAI,SAAS,WAAU,cAAc,WAAU,YAAY;AAC3D,MAAI,YAAY,IAAI,CAAE,UAAO,SAAS,OAAO;AAC7C,MAAI;AAEJ,MAAI,AAAO,QAAQ,qBAAqB;AACtC,QAAI,uBAAuB,CAAC,qBAAqB,YAAW,mBAAmB,MAAM,QAAQ,qBAAqB,YAAW,mBAAmB,MAAM;AACtJ,yBAAqB,KAAK,qBAAqB,MAAM,qBAAqB;AAC1E,qBAAiB,qBAAqB;AAAA,aAC7B,sBAAsB,MAAM;AACrC,qBAAiB,qBAAqB,YAAW,sBAAsB;AAAA,aAC9D,cAAc;AACvB,qBAAiB,IAAI,eAAe,SAAS,OAAO,aAAa;AAAA,SAC5D;AACL,qBAAiB,SAAO,SAAS;AAAA;AAGnC,mBAAiB,iBAAiB;AAElC,MAAI,cAAc;AAChB,qBAAiB,kBAAkB,SAAO,SAAS;AAAA;AAGrD,mBAAiB,SAAS,iBAAiB,IAAI,IAAI,iBAAiB,IAAI,KAAK;AAAA;AAG/E,8BAA8B,MAAM,OAAO;AACzC,SAAO,KAAK,cAAc,KAAK,YAAY,KAAK,MAAM,MAAM;AAAA;AAI9D,2BAA2B,MAAM,WAAW,UAAQ,cAAc,YAAY,gBAAgB,QAAQ,mBAAmB,KAAK,kBAAkB;AAC9I,MAAI,WAAW,IAAI;AACnB,MAAI,cAAc,IAAI;AACtB,MAAI,eAAe,KAAK,IAAI,SAAO,YAAY;AAC/C,MAAI,aAAa,KAAK,cAAc,WAAW;AAC/C,MAAI;AAEJ,MAAI,AAAO,QAAQ,aAAa;AAC9B,uBAAmB,WAAW;AAAA,SACzB;AACL,QAAI,cAAc,MAAM;AAEtB,yBAAmB,CAAC,QAAQ;AAAA,WACvB;AACL,yBAAmB,CAAC,YAAY;AAAA;AAAA;AAQpC,mBAAiB,YAAY,SAAS,cAAa,iBAAiB,YAAY,QAAQ;AACxF,mBAAiB,SAAS,SAAS,cAAa,iBAAiB,SAAS,QAAQ,eAAe,eAAe,KAAK,IAAI;AACzH,mBAAiB,aAAa;AAE9B,MAAI,cAAc,iBAAiB,cAAc,CAAC,iBAAiB,KAAK,mBAAmB,iBAAiB,KAAK;AAEjH,cAAY,SAAS,UAAW,KAAI,eAAe,KAAK,KAAK;AAAA;AAG/D,0BAA0B,WAAW,aAAa,UAAU,KAAK,kBAAkB;AAIjF,MAAI,iBAAiB,UAAU,IAAI,2BAA2B;AAE9D,MAAI,gBAAgB;AAClB,qBAAiB,KAAK;AAAA,MACpB,QAAQ,YAAY;AAAA,MACpB,QAAQ,YAAY;AAAA,MACpB;AAAA;AAEF,qBAAiB;AACjB,sBAAkB,iBAAiB;AACnC,sBAAkB,YAAY,IAAI,SAAS;AAAA;AAG7C,mBAAiB,iBAAiB;AAAA;AAGpC,2BAA2B,WAAW,YAAY,UAAQ,cAAc,YAAY,cAAc,gBAAgB,gBAAgB,gBAAgB,iBAAiB,KAAK,kBAAkB;AACxL,MAAI,cAAc,IAAI;AACtB,MAAI,WAAW,IAAI;AACnB,MAAI,SAAS,iBAAiB;AAC9B,MAAI,aAAa,KAAK,IAAI,WAAW,SAAS,SAAS,gBAAgB;AACvE,MAAI,UAAU;AAId,MAAI,cAAc;AAChB,QAAI,oBAAoB,KAAK,IAAI;AACjC,QAAI,eAAe,AAAO,SAAS,UAAU,IAAI,iBAAiB,SAAS;AAC3E,QAAI,YAAY;AAEhB,QAAI,aAAa,YAAY,SAAS,aAAa,SAAS,GAAG;AAC7D,kBAAY;AACZ,qBAAe,aAAa,MAAM,GAAG,aAAa,SAAS;AAAA;AAG7D,QAAI,sBAAsB,cAAa,cAAc,WAAW,SAAS;AACzE,QAAI,iBAAiB,KAAK,IAAI,aAAa,sBAAsB,GAAG;AAGpE,QAAI,SAAS,YAAY,IAAI,sBAAsB;AAGnD,QAAI,kBAAkB,UAAU;AAChC,QAAI,cAAc,kBAAkB,eAAe,WAAY,qBAAoB,UAAU;AAG7F,QAAI,QAAQ,oBAAoB,cAAc;AAC9C,0BAAsB,QAAQ,IAAK,aAAY,cAAc,KAAK,IAAI,cAAc,GAAG;AACvF,qBAAiB,aAAa,sBAAsB;AACpD,aAAS,YAAY,IAAI,sBAAsB;AAE/C,QAAI,CAAC,mBAAmB,iBAAiB,SAAS;AAChD,oBAAc,kBAAkB,WAAY,MAAK,IAAI,mBAAmB,UAAU,kBAAkB;AAAA;AAGtG,cAAU,cAAc,iBAAiB;AACzC,qBAAiB,cAAc;AAC/B,qBAAiB,eAAe;AAAA;AAGlC,MAAI,UAAU,SAAU,WAAU;AAClC,MAAI,eAAe,iBAAiB,eAAe;AACnD,eAAa,YAAY,SAAS,SAAO,YAAY,MAAM;AAC3D,eAAa,SAAS,SAAS,mBAAmB,UAAU,UAAU,mBAAmB,QAAQ,iBAAiB,UAAU,iBAAiB;AAE7I,MAAI,cAAc;AAChB,iBAAa,MAAM,aAAa;AAChC,iBAAa,MAAM,aAAa;AAAA;AAGlC,MAAI,iBAAiB,iBAAiB,iBAAiB;AACvD,iBAAe,YAAY,SAAS,SAAO,YAAY;AACvD,iBAAe,SAAS,SAAS,SAAO,SAAS;AACjD,MAAI,eAAe,iBAAiB,eAAe,AAAO,OAAO,IAAI;AACrE,eAAa,SAAS,MAAM,SAAS,KAAK,IAAI,KAAK,IAAI,SAAO,SAAS,MAAM,KAAK,IAAI,aAAa,SAAS,SAAS;AACrH,eAAa,YAAY,MAAM,SAAO,YAAY;AAClD,MAAI,YAAY,iBAAiB,YAAY;AAE7C,YAAU,YAAY,MAAM,CAAC,SAAO,YAAY;AAChD,YAAU,YAAY,MAAM,IAAI,OAAO,YAAY;AACnD,YAAU,SAAS,MAAM;AACzB,YAAU,SAAS,MAAM,SAAO,SAAS;AAAA;AAG3C,oBAAoB,YAAY;AAC9B,MAAI,oBAAoB,WAAW;AACnC,MAAI,OAAO,aACX,WAAW,YAAY,CAAC,oBAAoB,GAAG,CAAC,oBAAoB,GAAG,mBAAmB;AAC1F,OAAK,KAAK;AAAA,IACR,SAAS;AAAA;AAEX,OAAK,SAAS,WAAW,KAAK,SAAS;AAAA,IACrC,eAAe;AAAA;AAEjB,SAAO;AAAA;AAGT,qCAAqC,KAAK,KAAK,YAAY,UAAU;AACnE,MAAI,SAAS,IAAI;AACjB,MAAI,aAAa,WAAW;AAC5B,MAAI,iBAAiB,WAAW;AAChC,MAAI,eAAe,WAAW;AAC9B,MAAI,WAAW,IAAI;AACnB,MAAI,cAAc,WAAW,eAAe;AAC5C,MAAI,QAAQ;AACZ,MAAI,OAAO,WAAW,IAAI,SAAS,SAAS,iBAAiB,WAAW,eAAe;AACvF,WAAS,KAAK,SAAU,OAAM;AAC5B,UAAK,4BAA4B;AACjC,UAAK,yBAAyB;AAE9B,QAAI,QAAQ,aAAa;AACvB,iBAAW,OAAM,MAAM,WAAW,QAAQ,YAAY;AAAA,WACjD;AACL,iBAAW,OAAM,MAAM;AAAA,QACrB,QAAQ;AAAA,QACR,QAAQ;AAAA,SACP,YAAY,UAAU,WAAY;AACnC,eAAO,OAAO;AAAA;AAAA;AAKlB;AAAA;AAGF,SAAO,QAAQ,aAAa,SAAS;AACnC,QAAI,OAAO,WAAW;AACtB,SAAK,4BAA4B;AACjC,SAAK,yBAAyB;AAC9B,WAAO,IAAI;AACX,QAAI,SAAS,WAAW;AACxB,eAAW,MAAM;AAAA,MACf,GAAG,OAAO;AAAA,MACV,GAAG,OAAO;AAAA,MACV,QAAQ;AAAA,MACR,QAAQ;AAAA,OACP;AAAA,MACD,QAAQ,OAAO;AAAA,MACf,QAAQ,OAAO;AAAA,MACf,UAAU,OAAO;AAAA,OAChB,YAAY;AAAA;AAGjB,sBAAoB,QAAO;AACzB,QAAI,YAAW,aAAa;AAG5B,QAAI,SAAS,WAAW;AACxB,QAAI,IAAI;AAER,QAAI,WAAW,0BAA0B,UAAU,SAAS,IAAI,SAAS,GAAG;AAC1E,UAAI,cAAc,IAAI;AAAA;AAGxB,cAAS,SAAS,SAAS,OAAQ,KAAI,cAAc,IAAI,OAAO,aAAa,SAAS;AACtF,WAAO;AAAA,MACL,GAAG,UAAS;AAAA,MACZ,GAAG,UAAS;AAAA,MACZ,QAAQ,WAAW,YAAY;AAAA,MAC/B,QAAQ,WAAW,YAAY;AAAA,MAC/B,UAAU,WAAW;AAAA;AAAA;AAAA;AAK3B,oCAAoC,KAAK,KAAK,YAAY,UAAU;AAClE,MAAI,SAAS,IAAI;AACjB,MAAI,WAAW,IAAI;AAEnB,MAAI,CAAC,UAAU;AACb,eAAW,IAAI,sBAAsB,WAAW;AAChD,WAAO,IAAI;AACX,eAAW,UAAU;AAAA,MACnB,GAAG,WAAW,aAAa;AAAA,MAC3B,GAAG,WAAW,aAAa;AAAA,MAC3B,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU,WAAW;AAAA,OACpB;AAAA,MACD,QAAQ,WAAW,YAAY;AAAA,MAC/B,QAAQ,WAAW,YAAY;AAAA,OAC9B,YAAY;AAAA,SACV;AACL,eAAW,UAAU,MAAM;AAAA,MACzB,GAAG,WAAW,aAAa;AAAA,MAC3B,GAAG,WAAW,aAAa;AAAA,MAC3B,QAAQ,WAAW,YAAY;AAAA,MAC/B,QAAQ,WAAW,YAAY;AAAA,MAC/B,UAAU,WAAW;AAAA,OACpB,YAAY;AAAA;AAAA;AAKnB,+BAA+B,KAAK,YAAY,UAAU;AACxD,MAAI,YAAY,AAAO,OAAO,IAAI,WAAW;AAC7C,MAAI,UAAU,IAAI;AAElB,MAAI,CAAC,SAAS;AACZ,cAAU,IAAI,qBAAqB,IAAY,aAAK;AAAA,MAClD,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,QACL,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,WAAW;AAAA;AAAA;AAGf,YAAQ,kBAAkB;AAC1B,QAAI,IAAI;AAAA,SACH;AACL,eAAW,SAAS,MAAM;AAAA,MACxB,OAAO;AAAA,OACN,YAAY;AAAA;AAAA;AAInB,4BAA4B,KAAK,KAAK,YAAY,UAAU;AAE1D,MAAI,WAAW,YAAY;AACzB,QAAI,WAAW,IAAI;AACnB,QAAI,YAAY,AAAO,OAAO,IAAI,WAAW;AAC7C,QAAI,WAAW,IAAI;AACnB,QAAI,iBAAiB,WAAW;AAChC,QAAI,YAAY,WAAW;AAE3B,QAAI,UAAU;AACZ,MAAQ,YAAY,UAAU;AAAA,QAC5B,OAAO;AAAA,SACN,gBAAgB;AAAA,WACd;AACL,gBAAU,SAAS,MAAM;AACzB,iBAAW,IAAY,aAAK;AAAA,QAC1B,OAAO;AAAA;AAGT,UAAI,kBAAkB,YAAY;AAElC,UAAI,sBAAsB;AAC1B,UAAI,SAAS;AACb,aAAO,SAAS,MAAM,WAAW,UAAU,SAAS;AACpD,sBAAQ,WAAW,gBAAgB,aAAa,UAAU;AAAA,QACxD,OAAO;AAAA,SACN,gBAAgB;AAAA;AAAA;AAAA;AAKzB,sBAAsB,MAAM,WAAW;AACrC,MAAI,YAAY,KAAK,aAAa;AAClC,YAAU,0BAA0B;AACpC,YAAU,qBAAqB;AAC/B,SAAO;AAAA;AAGT,iCAAiC,MAAM;AAErC,SAAO;AAAA,IACL,OAAO,KAAK;AAAA,IACZ,OAAO,KAAK;AAAA;AAAA;AAIhB,8BAA8B;AAE5B,SAAO,KAAK,YAAY,wBAAwB,CAAC,CAAC,KAAK,WAAW;AAAA;AAGpE,mBAAmB,MAAM,KAAK,YAAY,UAAU;AAElD,MAAI,MAAM,IAAY;AAEtB,MAAI,SAAS,IAAY;AACzB,MAAI,IAAI;AACR,MAAI,oBAAoB;AACxB,SAAO,IAAI,WAAW,eAAe;AACrC,SAAO,IAAI,WAAW,eAAe;AAErC,MAAI,WAAW,cAAc;AAC3B,gCAA4B,KAAK,KAAK;AAAA,SACjC;AACL,+BAA2B,KAAK,KAAK;AAAA;AAGvC,wBAAsB,KAAK,YAAY;AACvC,qBAAmB,KAAK,KAAK,YAAY;AACzC,MAAI,sBAAsB,YAAY,MAAM;AAC5C,MAAI,wBAAwB;AAC5B,SAAO;AAAA;AAGT,mBAAmB,KAAK,KAAK,YAAY;AACvC,MAAI,iBAAiB,WAAW;AAChC,MAAI,YAAY,WAAW;AAC3B,MAAI,SAAS,IAAI;AACjB,EAAQ,YAAY,QAAQ;AAAA,IAC1B,GAAG,WAAW,eAAe;AAAA,IAC7B,GAAG,WAAW,eAAe;AAAA,KAC5B,gBAAgB;AAEnB,MAAI,WAAW,cAAc;AAC3B,gCAA4B,KAAK,KAAK,YAAY;AAAA,SAC7C;AACL,+BAA2B,KAAK,KAAK,YAAY;AAAA;AAGnD,wBAAsB,KAAK,YAAY;AACvC,qBAAmB,KAAK,KAAK,YAAY;AAAA;AAG3C,mBAAmB,MAAM,WAAW,gBAAgB,KAAK;AAEvD,MAAI,YAAY,IAAI;AACpB,eAAa,UAAU;AACvB,MAAI,SAAS;AACb,WAAS,KAAK,SAAU,MAAM;AAC5B,WAAO,KAAK;AAAA;AAEd,MAAI,uBAAuB,OAAO,KAAK,IAAI;AAE3C,MAAI,uBAAwB,kBAAiB;AAC7C,EAAO,KAAK,QAAQ,SAAU,MAAM;AAClC,IAAQ,cAAc,MAAM;AAAA,MAC1B,QAAQ;AAAA,MACR,QAAQ;AAAA,OACP,gBAAgB,WAAW,WAAY;AACxC,UAAI,UAAU,IAAI,OAAO,OAAO;AAAA;AAAA;AAGpC,OAAK,iBAAiB,WAAW;AAAA;AAGnC,qBAAqB,MAAM,YAAY;AACrC,SAAO,CAAC,KAAK,cAAc,WAAW,WAAW,aAAa,QAAQ,CAAC,CAAC,WAAW,cAAc,CAAC,CAAC,WAAW,YAAY,KAAK;AAAA;AAGjI,kBAAkB,KAAK,IAAI,SAAS;AAElC,EAAO,KAAK,IAAI,kBAAkB,YAAY,SAAU,IAAI;AAC1D,WAAO,IAAI,sBAAsB,GAAG,KAAK,SAAS;AAAA;AAAA;AAItD,oBAAoB,IAAI,gBAAgB,gBAAgB,YAAY,UAAU,IAAI;AAChF,oBAAkB,GAAG,KAAK;AAE1B,MAAI,WAAW,cAAc,CAAC,UAAU;AACtC,sBAAkB,GAAG,KAAK;AAAA,SACrB;AACL,sBAAkB,gBAAQ,WAAW,gBAAgB,aAAa,IAAI,gBAAgB,WAAW,gBAAgB,WAAW,WAAW;AAAA;AAAA;AAI3I,uBAAsB,KAAK,KAAK,YAAY;AAC1C,MAAI,YAAY,WAAW;AAC3B,MAAI,YAAY,WAAW;AAG3B,MAAI,gBAAgB,UAAU,SAAS;AACvC,MAAI,gBAAgB,cAAc,SAAS,aAAa;AACxD,MAAI,YAAY,UAAU,SAAS,CAAC,QAAQ,cAAc;AAC1D,MAAI,cAAc,UAAU,SAAS,CAAC,UAAU,cAAc;AAC9D,MAAI,cAAc,UAAU,WAAW;AACvC,MAAI,QAAQ,cAAc,IAAI;AAC9B,MAAI,YAAY,cAAc,IAAI;AAClC,MAAI,aAAa,cAAc,IAAI;AACnC,WAAS,KAAK,SAAU,MAAM;AAC5B,QAAI,gBAAgB,eAAS;AAC3B,UAAI,YAAY,KAAK;AACrB,WAAK,SAAS,AAAO,OAAO;AAAA,QAE1B,OAAO,UAAU;AAAA,QACjB,GAAG,UAAU;AAAA,QACb,GAAG,UAAU;AAAA,QACb,OAAO,UAAU;AAAA,QACjB,QAAQ,UAAU;AAAA,SACjB,WAAW;AAAA,WACT;AACL,WAAK,SAAS,WAAW;AAAA;AAG3B,QAAI,gBAAgB,KAAK,YAAY;AACrC,kBAAc,QAAQ;AAEtB,QAAI,YAAY;AAEd,oBAAc,SAAS,KAAK,SAAS;AACrC,oBAAc,SAAS,KAAK,SAAS;AAAA;AAGvC,SAAK,YAAY,QAAQ,QAAQ;AACjC,SAAK,YAAY,UAAU,QAAQ;AACnC,mBAAgB,MAAK,SAAS;AAC9B,SAAK,KAAK,WAAW;AAAA;AAEvB,MAAI,qBAAqB,IAAI,SAAS,QAAQ,CAAE,YAAW,iBAAiB;AAC5E,MAAI,UAAU,IAAI;AAClB,gBAAc,SAAS,qBAAqB,YAAY;AAAA,IACtD,cAAc,IAAI;AAAA,IAClB,gBAAgB;AAAA,IAChB,aAAa,gBAAgB,IAAI,YAAY,WAAW;AAAA,IACxD,cAAc,WAAW,MAAM;AAAA,IAC/B,gBAAgB,WAAW,MAAM;AAAA,IACjC,wBAAwB;AAAA;AAE1B,sBAAoB,KAAK,OAAO;AAAA;AAGlC,oBAAoB,OAAO;AACzB,MAAI,eAAe,KAAK,MAAM;AAE9B,SAAO,KAAK,IAAI,QAAQ,gBAAgB,OAAO,eAAe,KAAK,KAAK;AAAA;AAG1E,IAAO,2BAAQ;;;AChoBf,IAAI,0BAEJ,SAAU,QAAQ;AAChB,YAAU,0BAAyB;AAEnC,sCAAmC;AACjC,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,yBAAwB;AACrC,UAAM,kBAAkB;AACxB,UAAM,gBAAgB;AACtB,WAAO;AAAA;AAGT,2BAAwB,UAAU,iBAAiB,SAAU,QAAQ;AAEnE,WAAO,QAAQ;AACf,WAAO,OAAO,UAAU,eAAe,MAAM,MAAM;AAAA;AAGrD,2BAAwB,OAAO;AAC/B,2BAAwB,eAAe,CAAC;AACxC,2BAAwB,gBAAgB,qBAAqB,sBAAmB,eAAe;AAAA,IAC7F,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,gBAAgB;AAAA,IAChB,cAAc;AAAA,IACd,cAAc;AAAA,IACd,cAAc;AAAA,IACd,uBAAuB;AAAA,IACvB,YAAY;AAAA,IACZ,oBAAoB;AAAA,IACpB,mBAAmB;AAAA,IACnB,QAAQ;AAAA,IAGR,aAAa;AAAA,IACb,UAAU;AAAA,MAGR,OAAO;AAAA;AAAA,IAET,QAAQ;AAAA,MACN,WAAW;AAAA,QACT,aAAa;AAAA;AAAA;AAAA;AAInB,SAAO;AAAA,EACP;AAEF,IAAO,6BAAQ;;;ACpDR,mBAAiB,WAAW;AACjC,YAAU,kBAAkB;AAC5B,YAAU,oBAAoB;AAC9B,YAAU,eAAe,MAAM,QAAQ;AAAA;;;ACGzC,IAAI,iBAEJ,SAAU,QAAQ;AAChB,YAAU,iBAAgB;AAE1B,6BAA0B;AACxB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,gBAAe;AAC5B,UAAM,UAAU;AAChB,WAAO;AAAA;AAGT,kBAAe,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK;AACrE,QAAI,OAAO,YAAY;AACvB,QAAI,OAAO;AACX,QAAI,QAAQ,KAAK;AACjB,QAAI,eAAe,YAAY;AAC/B,QAAI,aAAa,KAAK,UAAU;AAChC,QAAI,OAAO,WAAW;AACtB,QAAI,cAAc,WAAW;AAC7B,UAAM,IAAI;AACV,UAAM,IAAI,KAAK,IAAI,YAAY;AAE/B,uBAAmB,MAAM;AACvB,aAAO,KAAK;AAAA;AAGd,QAAI,aAAa,IAAI,mBAAW,KAAK,iBAAiB,IAAI,cAAc,WAAW;AACnF,QAAI,kBAAkB;AACtB,eAAW,IAAI,KAAK,UAAS,MAAM,QAAQ,OAAO,KAAK,UAAS,MAAM,WAAW,OAAO,KAAK,UAAS,MAAM,WAAW;AAEvH,sBAAiB,QAAQ,KAAK,QAAQ;AACpC,UAAI,kBAAkB,KAAK;AAE3B,UAAI,WAAW,UAAU;AACvB,cAAM,OAAO,gBAAgB;AAC7B;AAAA;AAGF,UAAI,UAAU;AACd,UAAI,UAAU;AACd,UAAI;AACJ,UAAI,UAAU,aAAa,KAAK;AAChC,UAAI,IAAI;AAER,aAAO,IAAI,QAAQ,QAAQ,KAAK;AAC9B,YAAI,WAAS,KAAK,cAAc,QAAQ;AACxC,YAAI,IAAI,SAAO;AACf,YAAI,KAAK,SAAO;AAChB,YAAI,IAAI,SAAO;AACf,gBAAQ,KAAK,GAAG;AAChB,gBAAQ,KAAK,GAAG,KAAK;AACrB,gBAAQ,KAAK,cAAc,QAAQ,IAAI;AAAA;AAGzC,UAAI;AACJ,UAAI,aAAa,KAAK,cAAc,QAAQ;AAC5C,UAAI,aAAa,YAAY,SAAS;AACtC,UAAI,SAAS,WAAW,IAAI;AAC5B,UAAI,gBAAgB,YAAY,SAAS;AAEzC,UAAI,WAAW,OAAO;AACpB,YAAI,aAAa,gBAAgB,OAAO,IAAY;AACpD,kBAAU,IAAI,UAAU;AAAA,UACtB,OAAO;AAAA,YACL,QAAQ;AAAA,YACR,iBAAiB;AAAA,YACjB,QAAQ;AAAA,YACR,iBAAiB;AAAA,YACjB,kBAAkB;AAAA;AAAA,UAEpB,IAAI;AAAA;AAEN,mBAAW,IAAI;AACf,cAAM,IAAI;AAEV,YAAI,YAAY,sBAAsB;AACpC,kBAAQ,YAAY,qBAAoB,QAAQ,mBAAmB,aAAa,WAAY;AAC1F,oBAAQ;AAAA;AAAA;AAAA,aAGP;AACL,YAAI,aAAa,gBAAgB;AACjC,kBAAU,WAAW,QAAQ;AAC7B,cAAM,IAAI;AACV,wBAAgB,OAAO;AACvB,QAAQ,YAAY,SAAS;AAAA,UAC3B,OAAO;AAAA,YACL,QAAQ;AAAA,YACR,iBAAiB;AAAA;AAAA,WAElB;AACH,qBAAa;AAAA;AAGf,oBAAc,SAAS,qBAAqB,cAAc;AAAA,QACxD,gBAAgB,QAAQ,IAAI;AAAA,QAC5B,aAAa,KAAK,QAAQ,QAAQ,IAAI;AAAA,QACtC,cAAc,MAAM;AAAA,SACnB;AAAA,QACD,QAAQ;AAAA,UACN,eAAe;AAAA;AAAA;AAInB,cAAQ,cAAc;AAAA,QACpB,UAAU;AAAA,QACV,OAAO;AAAA;AAET,UAAI,UAAU,QAAQ;AAEtB,UAAI,SAAS;AACX,gBAAQ,IAAI,WAAW,IAAI;AAC3B,gBAAQ,IAAI,WAAW,KAAK,WAAW,IAAI;AAAA;AAG7C,cAAQ,SAAS;AACjB,WAAK,iBAAiB,KAAK;AAC3B,+BAAyB,SAAS;AAClC,0BAAoB,SAAS,cAAc,IAAI,UAAU,cAAc,IAAI;AAAA;AAG7E,SAAK,gBAAgB;AACrB,SAAK,UAAU;AAAA;AAGjB,kBAAe,OAAO;AACtB,SAAO;AAAA,EACP;AAIF,8BAA6B,MAAM,aAAa,IAAI;AAClD,MAAI,SAAS,IAAY,aAAK;AAAA,IAC5B,OAAO;AAAA,MACL,GAAG,KAAK,IAAI;AAAA,MACZ,GAAG,KAAK,IAAI;AAAA,MACZ,OAAO;AAAA,MACP,QAAQ,KAAK,SAAS;AAAA;AAAA;AAG1B,EAAQ,UAAU,QAAQ;AAAA,IACxB,OAAO;AAAA,MACL,GAAG,KAAK,IAAI;AAAA,MACZ,OAAO,KAAK,QAAQ;AAAA,MACpB,QAAQ,KAAK,SAAS;AAAA;AAAA,KAEvB,aAAa;AAChB,SAAO;AAAA;AAGT,IAAO,yBAAQ;;;ACzJf,IAAI,kBAAkB;AAEtB,IAAI,wBAEJ,SAAU,QAAQ;AAChB,YAAU,wBAAuB;AAEjC,oCAAiC;AAC/B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,uBAAsB;AACnC,WAAO;AAAA;AAOT,yBAAsB,UAAU,OAAO,SAAU,QAAQ;AAEvD,WAAO,UAAU,KAAK,MAAM,MAAM;AAKlC,SAAK,uBAAuB,IAAI,6BAAqB,AAAO,KAAK,KAAK,SAAS,OAAO,AAAO,KAAK,KAAK,YAAY;AAAA;AAUrH,yBAAsB,UAAU,UAAU,SAAU,MAAM;AACxD,QAAI,gBAAgB,KAAK;AASzB,QAAI,gBAAgB;AAEpB,QAAI,cAAc,UAAU,MAAM,SAAU,MAAM;AAChD,UAAI,CAAC,cAAc,eAAe,KAAK,KAAK,KAAK;AAC/C,sBAAc,KAAK,KAAK,MAAM;AAAA;AAGhC,aAAO,KAAK;AAAA;AAEd,QAAI,YAAY;AAChB,gBAAY,QAAQ,KAAK,SAAU,OAAO,KAAK;AAC7C,gBAAU,KAAK;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA;AAAA;AAGd,QAAI,WAAW,UAAU;AAEzB,aAAS,IAAI,GAAG,IAAI,UAAU,EAAE,GAAG;AACjC,UAAI,SAAS,UAAU,GAAG;AAE1B,eAAS,IAAI,GAAG,IAAI,UAAU,GAAG,SAAS,QAAQ,EAAE,GAAG;AACrD,YAAI,YAAY,UAAU,GAAG,SAAS,GAAG,KAAK;AAC9C,sBAAc,aAAa;AAAA;AAG7B,eAAS,aAAa,eAAe;AACnC,YAAI,cAAc,eAAe,cAAc,cAAc,eAAe,GAAG;AAC7E,wBAAc,aAAa;AAC3B,eAAK,iBAAiB,CAAC,WAAW,GAAG;AACrC;AAAA;AAAA;AAAA;AAKN,WAAO;AAAA;AAST,yBAAsB,UAAU,iBAAiB,SAAU,QAAQ,SAAS;AAC1E,QAAI,kBAAkB,KAAK,uBAAuB,cAAc,kBAAkB,OAAO;AACzF,QAAI,WAAW,gBAAgB,IAAI;AAEnC,QAAI,aAAa,AAAO,OAAO,OAAO,MAAM,SAAU,UAAU;AAC9D,aAAO,SAAS,OAAO;AAAA;AAGzB,QAAI,OAAO,KAAK,QAAQ,cAAc;AACtC,QAAI,WAAW;AACf,QAAI,UAAU,KAAK,UAAU,AAAO;AACpC,QAAI,SAAQ;AAEZ,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AACpC,eAAS,KAAK,KAAK,GAAG;AAEtB,UAAI,CAAC,QAAQ,IAAI,KAAK,GAAG,mBAAmB;AAC1C,gBAAQ,IAAI,KAAK,GAAG,kBAAkB;AACtC;AAAA;AAAA;AAIJ,QAAI,aAAa,wBAAwB,MAAM;AAAA,MAC7C,iBAAiB,CAAC;AAAA,MAClB,kBAAkB,CAAC;AAAA,QACjB,MAAM;AAAA,QACN,MAAM,uBAAuB;AAAA,SAC5B;AAAA,QACD,MAAM;AAAA,QACN,MAAM;AAAA,SACL;AAAA,QACD,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAER,cAAc;AAAA,QACZ,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,UAAU;AAAA;AAAA,OAEX;AACH,QAAI,OAAO,IAAI,mBAAW,YAAY;AACtC,SAAK,SAAS;AACd,WAAO;AAAA;AAQT,yBAAsB,UAAU,iBAAiB,WAAY;AAC3D,QAAI,OAAO,KAAK;AAChB,QAAI,WAAW,KAAK;AACpB,QAAI,WAAW;AAEf,aAAS,IAAI,GAAG,IAAI,UAAU,EAAE,GAAG;AACjC,eAAS,KAAK;AAAA;AAGhB,QAAI,UAAU,KAAK,aAAa;AAEhC,QAAI,cAAc,UAAU,UAAU,SAAU,OAAO;AACrD,aAAO,KAAK,IAAI,QAAQ;AAAA;AAE1B,QAAI,cAAc;AAClB,gBAAY,QAAQ,KAAK,SAAU,OAAO,KAAK;AAC7C,YAAM,KAAK,SAAU,QAAQ,QAAQ;AACnC,eAAO,KAAK,IAAI,SAAS,UAAU,KAAK,IAAI,SAAS;AAAA;AAEvD,kBAAY,KAAK;AAAA,QACf,MAAM;AAAA,QACN,SAAS;AAAA;AAAA;AAGb,WAAO;AAAA;AAOT,yBAAsB,UAAU,qBAAqB,SAAU,KAAK,OAAO,UAAU;AACnF,QAAI,CAAC,AAAO,QAAQ,MAAM;AACxB,YAAM,MAAM,CAAC,OAAO;AAAA;AAGtB,QAAI,OAAO,KAAK;AAChB,QAAI,cAAc,KAAK;AACvB,QAAI,UAAU;AACd,QAAI,WAAW,YAAY;AAC3B,QAAI;AAEJ,aAAS,IAAI,GAAG,IAAI,UAAU,EAAE,GAAG;AACjC,UAAI,UAAU,OAAO;AACrB,UAAI,aAAa;AACjB,UAAI,WAAW,YAAY,GAAG,QAAQ;AAEtC,eAAS,IAAI,GAAG,IAAI,UAAU,EAAE,GAAG;AACjC,YAAI,WAAW,KAAK,IAAI,IAAI,IAAI,YAAY,GAAG,QAAQ;AACvD,YAAI,QAAO,KAAK,IAAI,WAAW;AAE/B,YAAI,SAAQ,SAAS;AACnB,yBAAe;AACf,oBAAU;AACV,uBAAa,YAAY,GAAG,QAAQ;AAAA;AAAA;AAIxC,cAAQ,KAAK;AAAA;AAGf,WAAO;AAAA,MACL,aAAa;AAAA,MACb;AAAA;AAAA;AAIJ,yBAAsB,UAAU,gBAAgB,SAAU,WAAW,gBAAgB,UAAU;AAC7F,QAAI,OAAO,KAAK;AAChB,QAAI,OAAO,KAAK,QAAQ;AACxB,QAAI,QAAQ,KAAK,IAAI,KAAK,aAAa,UAAU;AACjD,WAAO,oBAAoB,aAAa;AAAA,MACtC;AAAA,MACA;AAAA;AAAA;AAIJ,yBAAsB,OAAO;AAC7B,yBAAsB,eAAe,CAAC;AACtC,yBAAsB,gBAAgB;AAAA,IACpC,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,SAAS;AAAA,IACT,kBAAkB;AAAA,IAElB,aAAa,CAAC,OAAO;AAAA,IAErB,iBAAiB;AAAA,IACjB,iBAAiB;AAAA,IACjB,OAAO;AAAA,MACL,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MACV,UAAU;AAAA;AAAA,IAEZ,UAAU;AAAA,MACR,OAAO;AAAA,QACL,MAAM;AAAA;AAAA;AAAA;AAIZ,SAAO;AAAA,EACP;AAEF,IAAO,2BAAQ;;;AC1PA,0BAA0B,SAAS,KAAK;AACrD,UAAQ,iBAAiB,cAAc,SAAU,aAAa;AAC5D,QAAI,OAAO,YAAY;AACvB,QAAI,SAAS,YAAY;AACzB,QAAI,aAAa;AAEjB,QAAI,OAAO,OAAO;AAClB,eAAW,OAAO;AAClB,QAAI,cAAc,YAAY,IAAI;AAClC,QAAI,OAAO,OAAO;AAClB,eAAW,cAAc;AAEzB,QAAI,KAAK,WAAW,cAAc;AAChC,kBAAY,KAAK,AAAW,cAAa,YAAY,IAAI,KAAK;AAC9D,kBAAY,KAAK,AAAW,cAAa,YAAY,IAAI,KAAK;AAC9D,UAAI,SAAS,KAAK,SAAS,YAAY,KAAK,YAAY;AACxD,yBAAmB,MAAM,aAAa;AAAA,WACjC;AACL,kBAAY,KAAK,AAAW,cAAa,YAAY,IAAI,KAAK;AAC9D,kBAAY,KAAK,AAAW,cAAa,YAAY,IAAI,KAAK;AAC9D,UAAI,QAAQ,KAAK,QAAQ,YAAY,KAAK,YAAY;AACtD,yBAAmB,MAAM,aAAa;AAAA;AAGxC,SAAK,UAAU,cAAc;AAAA;AAAA;AAWjC,4BAA4B,MAAM,aAAa,QAAQ;AACrD,MAAI,CAAC,KAAK,SAAS;AACjB;AAAA;AAGF,MAAI,WAAW,YAAY;AAE3B,MAAI,cAAc,YAAY;AAE9B,MAAI,UAAU,KAAK,aAAa;AAChC,MAAI,WAAW,KAAK,aAAa;AACjC,MAAI,cAAc,AAAO,IAAI,aAAa,SAAU,aAAa;AAC/D,WAAO,AAAO,IAAI,YAAY,SAAS,SAAU,KAAK;AACpD,UAAI,KAAK,SAAS,YAAY,KAAK,IAAI,SAAS;AAChD,SAAG,KAAK,KAAK,IAAI,UAAU;AAC3B,aAAO;AAAA;AAAA;AAGX,MAAI,OAAO,gBAAgB;AAC3B,MAAI,WAAW,KAAK;AACpB,MAAI,KAAK,SAAS,KAAK;AAEvB,MAAI,IAAI,YAAY;AACpB,MAAI,IAAI,YAAY,GAAG,QAAQ;AAC/B,MAAI;AAEJ,WAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1B,aAAS,SAAS,KAAK;AACvB,SAAK,cAAc,YAAY,GAAG,QAAQ,IAAI;AAAA,MAC5C,YAAY;AAAA,MACZ,GAAG,YAAY,GAAG,GAAG;AAAA,MACrB,IAAI;AAAA,MACJ,GAAG,YAAY,GAAG,GAAG,KAAK;AAAA;AAG5B,aAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1B,gBAAU,YAAY,IAAI,GAAG,GAAG,KAAK;AACrC,WAAK,cAAc,YAAY,GAAG,QAAQ,IAAI;AAAA,QAC5C,YAAY;AAAA,QACZ,GAAG,YAAY,GAAG,GAAG;AAAA,QACrB,IAAI;AAAA,QACJ,GAAG,YAAY,GAAG,GAAG,KAAK;AAAA;AAAA;AAAA;AAAA;AAalC,yBAAyB,MAAM;AAC7B,MAAI,WAAW,KAAK;AACpB,MAAI,WAAW,KAAK,GAAG;AACvB,MAAI,OAAO;AACX,MAAI,KAAK;AACT,MAAI,MAAM;AAEV,WAAS,IAAI,GAAG,IAAI,UAAU,EAAE,GAAG;AACjC,QAAI,OAAO;AAEX,aAAS,IAAI,GAAG,IAAI,UAAU,EAAE,GAAG;AACjC,cAAQ,KAAK,GAAG,GAAG;AAAA;AAGrB,QAAI,OAAO,KAAK;AACd,YAAM;AAAA;AAGR,SAAK,KAAK;AAAA;AAGZ,WAAS,IAAI,GAAG,IAAI,UAAU,EAAE,GAAG;AACjC,OAAG,KAAM,OAAM,KAAK,MAAM;AAAA;AAG5B,QAAM;AAEN,WAAS,IAAI,GAAG,IAAI,UAAU,EAAE,GAAG;AACjC,QAAI,OAAM,KAAK,KAAK,GAAG;AAEvB,QAAI,OAAM,KAAK;AACb,YAAM;AAAA;AAAA;AAIV,SAAO;AAAA,IACL;AAAA,IACA;AAAA;AAAA;;;AC9IG,mBAAiB,WAAW;AACjC,YAAU,kBAAkB;AAC5B,YAAU,oBAAoB;AAC9B,YAAU,eAAe;AACzB,YAAU,kBAAkB,WAAW;AAAA;;;ACmBzC,IAAI,mBAAmB;AACvB,IAAI,iBAAiB;AAKrB,IAAI,gBAEJ,SAAU,QAAQ;AAChB,YAAU,gBAAe;AAEzB,0BAAuB,MAAM,aAAa,SAAS,KAAK;AACtD,QAAI,QAAQ,OAAO,KAAK,SAAS;AAEjC,UAAM,KAAK;AACX,UAAM,aAAa;AAAA,MACjB,QAAQ;AAAA;AAEV,cAAU,OAAO,cAAc,YAAY;AAC3C,QAAI,OAAO,IAAY,aAAK;AAAA,MAC1B,IAAI;AAAA,MACJ,QAAQ,KAAK,WAAW,IAAI,CAAC,SAAS;AAAA;AAGxC,UAAM,eAAe;AAErB,UAAM,WAAW,MAAM,MAAM,aAAa,SAAS;AAEnD,WAAO;AAAA;AAGT,iBAAc,UAAU,aAAa,SAAU,aAAa,MAC5D,aAAa,SAAS,KAAK;AACzB,SAAK,OAAO;AACZ,SAAK,QAAQ;AACb,kBAAc,eAAe,KAAK;AAClC,cAAU,WAAW,KAAK;AAC1B,QAAI,SAAS;AACb,cAAU,QAAQ,YAAY,KAAK;AACnC,QAAI,YAAY,KAAK;AACrB,QAAI,gBAAgB,UAAU,SAAS;AACvC,QAAI,WAAS,KAAK;AAClB,QAAI,cAAc,AAAO,OAAO,IAAI;AACpC,gBAAY,QAAQ;AACpB,QAAI,cAAc,KAAK,UAAU;AACjC,gBAAY,WAAW;AACvB,QAAI,QAAQ,KAAK,UAAU;AAE3B,QAAI,OAAO;AACT,kBAAY,QAAQ,+BAA+B,OAAO;AAAA;AAG5D,QAAI,eAAe,sBAAsB,UAAU,SAAS,cAAc,aAAa;AACvF,IAAO,OAAO,aAAa;AAC3B,IAAO,KAAK,gBAAgB,SAAU,WAAW;AAC/C,UAAI,QAAQ,OAAO,YAAY;AAC/B,UAAI,iBAAiB,UAAU,SAAS,CAAC,WAAW;AACpD,YAAM,QAAQ,eAAe;AAE7B,UAAI,gBAAe,sBAAsB,gBAAgB;AAEzD,UAAI,eAAc;AAChB,cAAM,QAAQ;AAAA;AAAA;AAIlB,QAAI,aAAa;AACf,aAAO,SAAS;AAChB,aAAO,MAAM,IAAI,SAAO;AACxB,MAAQ,YAAY,QAAQ;AAAA,QAC1B,OAAO;AAAA,UACL,GAAG,SAAO;AAAA;AAAA,SAEX,aAAa,KAAK;AAAA,WAChB;AAGL,MAAQ,YAAY,QAAQ;AAAA,QAC1B,OAAO;AAAA,SACN;AACH,mBAAa;AAAA;AAGf,WAAO,SAAS;AAEhB,SAAK,aAAa;AAElB,QAAI,cAAc,UAAU,WAAW;AACvC,mBAAe,OAAO,KAAK,UAAU;AACrC,SAAK,eAAe,eAAe,KAAK;AACxC,SAAK,WAAW,WAAW,KAAK;AAChC,QAAI,QAAQ,cAAc,IAAI;AAC9B,QAAI,iBAAiB,UAAU,aAAa,KAAK,wBAAwB,UAAU,eAAe,KAAK,yBAAyB;AAChI,wBAAoB,MAAM,gBAAgB,cAAc,IAAI;AAAA;AAG9D,iBAAc,UAAU,eAAe,SAAU,aAAa;AAC5D,QAAI,QAAQ;AAEZ,QAAI,YAAY,KAAK,KAAK;AAC1B,QAAI,mBAAmB,UAAU,SAAS;AAC1C,QAAI,WAAS,KAAK,KAAK;AACvB,QAAI,QAAQ,SAAO,WAAW,SAAO;AACrC,QAAI,WAAY,UAAO,aAAa,SAAO,YAAY;AACvD,QAAI,KAAK,KAAK,IAAI;AAClB,QAAI,KAAK,KAAK,IAAI;AAClB,QAAI,SAAS;AACb,QAAI,QAAQ,OAAO;AACnB,QAAI,YAAY,KAAK,KAAK;AAC1B,QAAI,gBAAgB,iBAAiB,IAAI,cAAc,MAAM,KAAK;AAClE,QAAI,gBAAgB,iBAAiB,IAAI,WAAW,CAAE,kBAAiB,QAAQ,KAAK,IAAI,SAAS;AACjG,UAAM,SAAS,CAAC;AAEhB,IAAO,KAAK,gBAAgB,SAAU,WAAW;AAC/C,UAAI,kBAAkB,cAAc,WAAW,UAAU,SAAS,WAAW,UAAU,SAAS,CAAC,WAAW;AAC5G,UAAI,WAAW,cAAc;AAC7B,UAAI,QAAQ,WAAW,QAAQ,MAAM,YAAY;AACjD,UAAI,OAAO,YAAY,kBAAkB,WAAW;AAEpD,UAAI,UAAU;AACZ,eAAO,QAAQ,MAAM,KAAK;AAAA;AAG5B,YAAM,QAAQ,gBAAgB,iBAAiB,IAAI,MAAM,cAAc,UAAU;AAEjF,UAAI,MAAM;AACR,cAAM,MAAM,OAAO;AAAA;AAIrB,UAAI,UAAU,gBAAgB,IAAI;AAElC,UAAI,WAAW,QAAQ,CAAC,UAAU;AAChC,cAAM,SAAS,CAAC;AAAA;AAGlB,UAAI,gBAAgB,aAAa,iBAAiB;AAClD,UAAI,cAAc,WAAW,SAAS,OAAO,OAAO;AACpD,UAAI,aAAa,YAAY,MAAM;AACnC,kBAAY,aAAa;AAAA,QACvB,aAAa,gBAAgB,IAAI,aAAa,YAAY,aAAa;AAAA,QACvE,QAAQ,kBAAkB;AAAA;AAE5B,UAAI;AACJ,UAAI,eAAe,aAAa,iBAAiB,eAAe;AAChE,UAAI,YAAY,aAAa,iBAAiB;AAE9C,UAAI,kBAAkB,WAAW;AAC/B,YAAI,SAAO,IAAI;AACf,oBAAY,WAAW,KAAK,KAAK,IAAI,UAAU;AAAA,aAC1C;AACL,YAAI,CAAC,aAAa,cAAc,UAAU;AACxC,cAAK,UAAO,IAAI,SAAO,MAAM;AAC7B,sBAAY;AAAA,mBACH,cAAc,QAAQ;AAC/B,cAAI,SAAO,KAAK;AAEhB,cAAI,WAAW,KAAK,KAAK,GAAG;AAC1B,wBAAY;AAAA;AAAA,mBAEL,cAAc,SAAS;AAChC,cAAI,SAAO,IAAI;AAEf,cAAI,WAAW,KAAK,KAAK,GAAG;AAC1B,wBAAY;AAAA;AAAA;AAAA;AAKlB,YAAM,MAAM,QAAQ;AACpB,YAAM,MAAM,gBAAgB,aAAa,iBAAiB,oBAAoB;AAC9E,YAAM,IAAI,IAAI,KAAK,SAAO;AAC1B,YAAM,IAAI,IAAI,KAAK,SAAO;AAC1B,UAAI,aAAa,aAAa,iBAAiB;AAC/C,UAAI,UAAS;AAEb,UAAI,eAAe,UAAU;AAC3B,kBAAS,CAAC;AAEV,YAAI,UAAS,CAAC,KAAK,KAAK,GAAG;AACzB,qBAAU,KAAK;AAAA;AAAA,iBAER,eAAe,cAAc;AACtC,kBAAS,KAAK,KAAK,IAAI;AAEvB,YAAI,UAAS,KAAK,KAAK,GAAG;AACxB,qBAAU,KAAK;AAAA,mBACN,UAAS,CAAC,KAAK,KAAK,GAAG;AAChC,qBAAU,KAAK;AAAA;AAAA,iBAER,OAAO,eAAe,UAAU;AACzC,kBAAS,aAAa,KAAK,KAAK;AAAA;AAGlC,YAAM,WAAW;AAAA;AAGnB,0BAAsB,OAAO,MAAM;AACjC,UAAI,YAAY,MAAM,IAAI;AAE1B,UAAI,aAAa,MAAM;AACrB,eAAO,iBAAiB,IAAI;AAAA;AAG9B,aAAO;AAAA;AAGT,UAAM;AAAA;AAGR,SAAO;AAAA,EACC;AAEV,IAAO,wBAAQ;;;AC3NR,IAAI,sBAAsB;AACjC,IAAI,mBAAmB;AACvB,IAAI,qBAAqB;AAClB,+BAA+B,WAAW;AAC/C,YAAU,eAAe;AAAA,IACvB,MAAM;AAAA,IACN,QAAQ;AAAA,KACP,SAAU,SAAS,SAAS;AAC7B,YAAQ,cAAc;AAAA,MACpB,UAAU;AAAA,MACV,SAAS;AAAA,MACT,OAAO;AAAA,OACN;AAEH,8BAA0B,OAAO,OAAO;AACtC,UAAI,aAAa,mBAAmB,SAAS,CAAC,sBAAsB;AAEpE,UAAI,YAAY;AACd,YAAI,iBAAiB,MAAM;AAE3B,YAAI,gBAAgB;AAClB,kBAAQ,YAAY,cAAc,gBAAgB,WAAW,QAAQ,WAAW;AAAA;AAGlF,cAAM,cAAc,WAAW;AAAA;AAAA;AAAA;AAIrC,YAAU,eAAe;AAAA,IACvB,MAAM;AAAA,IACN,QAAQ;AAAA,KACP,SAAU,SAAS,SAAS,KAAK;AAElC,cAAU,OAAO,IAAI;AACrB,YAAQ,cAAc;AAAA,MACpB,UAAU;AAAA,MACV,SAAS;AAAA,MACT,OAAO;AAAA,OACN;AAEH,6BAAyB,OAAO;AAC9B,UAAI,aAAa,mBAAmB,SAAS,CAAC,mBAAmB;AAEjE,UAAI,YAAY;AACd,gBAAQ,YAAY,WAAW,KAAK;AAAA;AAAA;AAIxC,QAAI,MAAuC;AACzC,0BAAoB,aAAa;AAAA;AAInC,QAAI,eAAe,OAAO,SAAS;AAAA,MACjC,MAAM;AAAA;AAAA;AAGV,YAAU,eAAe;AAAA,IACvB,MAAM;AAAA,IACN,QAAQ;AAAA,KACP,SAAU,SAAS,SAAS,KAAK;AAClC,cAAU,OAAO,IAAI;AAErB,QAAI,MAAuC;AACzC,0BAAoB,YAAY;AAAA;AAGlC,QAAI,eAAe,OAAO,SAAS;AAAA,MACjC,MAAM;AAAA;AAAA;AAAA;;;AC/DZ,IAAI,eAEJ,SAAU,QAAQ;AAChB,YAAU,eAAc;AAExB,2BAAwB;AACtB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,cAAa;AAC1B,WAAO;AAAA;AAGT,gBAAa,UAAU,SAAS,SAAU,aAAa,SAAS,KAChE,SAAS;AACP,QAAI,OAAO;AACX,SAAK,cAAc;AACnB,SAAK,MAAM;AACX,SAAK,UAAU;AACf,QAAI,OAAO,YAAY;AACvB,QAAI,cAAc,KAAK,KAAK;AAC5B,QAAI,UAAU,YAAY;AAC1B,QAAI,QAAQ,KAAK;AACjB,QAAI,yBAAyB,YAAY,IAAI;AAC7C,QAAI,cAAc;AAClB,YAAQ,SAAS,SAAU,MAAM;AAC/B,kBAAY,KAAK;AAAA;AAEnB,QAAI,cAAc,KAAK,gBAAgB;AACvC,eAAW,aAAa;AACxB,iBAAa,aAAa;AAE1B,SAAK;AAEL,SAAK,eAAe;AAEpB,wBAAoB,cAAa,cAAa;AAC5C,UAAI,aAAY,WAAW,KAAK,aAAY,WAAW,GAAG;AACxD;AAAA;AAGF,UAAI,mBAAW,cAAa,cAAa,SAAQ,SAAQ,IAAI,aAAa,OAAO,aAAa,OAAO,AAAO,MAAM,aAAa,OAAO;AAEtI,uBAAgB,MAAM;AACpB,eAAO,KAAK;AAAA;AAGd,2BAAqB,QAAQ,QAAQ;AACnC,YAAI,UAAU,UAAU,OAAO,OAAO,aAAY;AAClD,YAAI,UAAU,UAAU,OAAO,OAAO,aAAY;AAClD,qBAAa,SAAS;AAAA;AAAA;AAI1B,0BAAsB,SAAS,SAAS;AACtC,UAAI,CAAC,0BAA0B,WAAW,CAAC,QAAQ,YAAY;AAE7D,kBAAU;AAAA;AAGZ,UAAI,YAAY,eAAe,YAAY,aAAa;AACtD,YAAI,WAAW,QAAQ,OAAO;AAC5B,cAAI,SAAS;AAEX,oBAAQ,MAAM,WAAW,OAAO,SAAS,aAAa,SAAS;AAE/D,iBAAK,iBAAiB,QAAQ,WAAW,QAAQ;AAAA,iBAC5C;AAEL,wBAAW;AAAA;AAAA,mBAEJ,SAAS;AAElB,cAAI,QAAQ,IAAI,sBAAc,SAAS,aAAa,SAAS;AAC7D,gBAAM,IAAI;AAEV,eAAK,iBAAiB,QAAQ,WAAW;AAAA;AAAA;AAAA;AAK/C,yBAAoB,MAAM;AACxB,UAAI,CAAC,MAAM;AACT;AAAA;AAGF,UAAI,KAAK,OAAO;AACd,cAAM,OAAO,KAAK;AAClB,aAAK,QAAQ;AAAA;AAAA;AAIjB,0BAAsB,cAAa,UAAU;AAC3C,UAAI,SAAS,QAAQ,GAAG;AAEtB,YAAI,KAAK,cAAc;AAErB,eAAK,aAAa,WAAW,OAAO,cAAa,aAAa,SAAS;AAAA,eAClE;AAEL,eAAK,eAAe,IAAI,sBAAc,cAAa,aAAa,SAAS;AACzE,gBAAM,IAAI,KAAK;AAAA;AAIjB,iBAAS,MAAM,IAAI;AACnB,aAAK,aAAa,GAAG,SAAS,SAAU,GAAG;AACzC,eAAK,YAAY,SAAS;AAAA;AAAA,iBAEnB,KAAK,cAAc;AAE5B,cAAM,OAAO,KAAK;AAClB,aAAK,eAAe;AAAA;AAAA;AAAA;AAS1B,gBAAa,UAAU,cAAc,WAAY;AAC/C,QAAI,QAAQ;AAEZ,SAAK,MAAM,IAAI;AACf,SAAK,MAAM,GAAG,SAAS,SAAU,GAAG;AAClC,UAAI,cAAc;AAElB,UAAI,WAAW,MAAM,YAAY;AAEjC,eAAS,SAAS,SAAU,MAAM;AAChC,YAAI,CAAC,eAAe,KAAK,SAAS,KAAK,UAAU,EAAE,QAAQ;AACzD,cAAI,YAAY,KAAK,WAAW,IAAI;AAEpC,cAAI,cAAc,cAAc;AAC9B,kBAAM,YAAY;AAAA,qBACT,cAAc,QAAQ;AAC/B,gBAAI,YAAY,KAAK;AACrB,gBAAI,OAAO,UAAU,IAAI;AAEzB,gBAAI,MAAM;AACR,kBAAI,aAAa,UAAU,IAAI,UAAU,SAAS;AAClD,yBAAW,MAAM;AAAA;AAAA;AAIrB,wBAAc;AAAA;AAAA;AAAA;AAAA;AAUtB,gBAAa,UAAU,cAAc,SAAU,MAAM;AACnD,QAAI,SAAS,KAAK,YAAY,eAAe;AAC3C,WAAK,IAAI,eAAe;AAAA,QACtB,MAAM;AAAA,QACN,MAAM,KAAK;AAAA,QACX,UAAU,KAAK,YAAY;AAAA,QAC3B,YAAY;AAAA;AAAA;AAAA;AASlB,gBAAa,UAAU,eAAe,SAAU,OAAO,aAAa;AAClE,QAAI,WAAW,YAAY;AAC3B,QAAI,aAAa,SAAS,cAAc;AAExC,QAAI,YAAY;AACd,UAAI,KAAK,MAAM,KAAK,WAAW;AAC/B,UAAI,KAAK,MAAM,KAAK,WAAW;AAC/B,UAAI,SAAS,KAAK,KAAK,KAAK,KAAK,KAAK;AACtC,aAAO,UAAU,WAAW,KAAK,UAAU,WAAW;AAAA;AAAA;AAI1D,gBAAa,OAAO;AACpB,SAAO;AAAA,EACP;AAEF,IAAO,uBAAQ;;;AC1Lf,IAAI,sBAEJ,SAAU,QAAQ;AAChB,YAAU,sBAAqB;AAE/B,kCAA+B;AAC7B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,qBAAoB;AACjC,UAAM,oBAAoB;AAC1B,WAAO;AAAA;AAGT,uBAAoB,UAAU,iBAAiB,SAAU,QAAQ,SAAS;AAExE,QAAI,OAAO;AAAA,MACT,MAAM,OAAO;AAAA,MACb,UAAU,OAAO;AAAA;AAEnB,uBAAkB;AAClB,QAAI,cAAc,KAAK,eAAe,AAAO,IAAI,OAAO,UAAU,IAAI,SAAU,aAAa;AAC3F,aAAO,IAAI,cAAM,aAAa,MAAM;AAAA,OACnC;AAIH,QAAI,OAAO,aAAK,WAAW,MAAM,MAAM;AAEvC,wBAAoB,UAAU;AAC5B,eAAS,WAAW,gBAAgB,SAAU,OAAO,KAAK;AACxD,YAAI,OAAO,KAAK,mBAAmB;AACnC,YAAI,aAAa,YAAY,KAAK;AAClC,sBAAe,OAAM,cAAc;AACnC,eAAO;AAAA;AAAA;AAIX,WAAO,KAAK;AAAA;AAGd,uBAAoB,UAAU,gBAAgB,WAAY;AACxD,SAAK;AAAA;AAOP,uBAAoB,UAAU,gBAAgB,SAAU,WAAW;AACjE,QAAI,SAAS,OAAO,UAAU,cAAc,MAAM,MAAM;AAExD,QAAI,OAAO,KAAK,UAAU,KAAK,mBAAmB;AAClD,WAAO,eAAe,iBAAiB,MAAM;AAC7C,WAAO;AAAA;AAGT,uBAAoB,UAAU,gBAAgB,SAAU,MAAM;AAC5D,WAAO,KAAK,gBAAgB,KAAK,aAAa,KAAK;AAAA;AAGrD,uBAAoB,UAAU,cAAc,WAAY;AACtD,WAAO,KAAK;AAAA;AAGd,uBAAoB,UAAU,gBAAgB,SAAU,UAAU;AAChE,eAAW,KAAK,YAAY,WAAW,WAAW,KAAK;AACvD,QAAI,OAAO,KAAK,aAAa,KAAK;AAElC,QAAI,CAAC,YAAY,aAAa,QAAQ,CAAC,KAAK,SAAS,WAAW;AAC9D,WAAK,YAAY;AAAA;AAAA;AAIrB,uBAAoB,UAAU,kBAAkB,WAAY;AAC1D,2BAAuB;AAAA;AAGzB,uBAAoB,OAAO;AAC3B,uBAAoB,gBAAgB;AAAA,IAClC,QAAQ;AAAA,IACR,GAAG;AAAA,IAEH,QAAQ,CAAC,OAAO;AAAA,IAChB,QAAQ,CAAC,GAAG;AAAA,IAEZ,WAAW;AAAA,IACX,YAAY;AAAA,IAEZ,UAAU;AAAA,IAEV,kBAAkB;AAAA,IAElB,WAAW;AAAA,IACX,wBAAwB;AAAA,IACxB,OAAO;AAAA,MAEL,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MAGT,OAAO;AAAA,MACP,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ;AAAA;AAAA,IAEV,WAAW;AAAA,MACT,aAAa;AAAA,MACb,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,eAAe;AAAA,MACf,eAAe;AAAA,MACf,SAAS;AAAA;AAAA,IAEX,UAAU;AAAA,MACR,OAAO;AAAA;AAAA,IAET,MAAM;AAAA,MACJ,WAAW;AAAA,QACT,SAAS;AAAA;AAAA,MAEX,OAAO;AAAA,QACL,SAAS;AAAA;AAAA;AAAA,IAIb,eAAe;AAAA,IACf,mBAAmB;AAAA,IACnB,yBAAyB;AAAA,IACzB,MAAM;AAAA,IAaN,MAAM;AAAA;AAER,SAAO;AAAA,EACP;AAEF,4BAA2B,UAAU;AAInC,MAAI,OAAM;AACV,EAAO,KAAK,SAAS,UAAU,SAAU,OAAO;AAC9C,uBAAkB;AAClB,QAAI,aAAa,MAAM;AAEvB,IAAO,QAAQ,eAAgB,cAAa,WAAW;AACvD,YAAO;AAAA;AAET,MAAI,YAAY,SAAS;AAEzB,MAAI,AAAO,QAAQ,YAAY;AAC7B,gBAAY,UAAU;AAAA;AAGxB,MAAI,aAAa,QAAQ,MAAM,YAAY;AACzC,gBAAY;AAAA;AAId,MAAI,YAAY,GAAG;AACjB,gBAAY;AAAA;AAGd,EAAO,QAAQ,SAAS,SAAS,SAAS,MAAM,KAAK,YAAY,SAAS,QAAQ;AAAA;AAGpF,IAAO,yBAAQ;;;ACxLf,IAAI,UAAS,KAAK,KAAK;AACR,wBAAwB,YAAY,SAAS,KAAK;AAC/D,UAAQ,iBAAiB,YAAY,SAAU,aAAa;AAC1D,QAAI,UAAS,YAAY,IAAI;AAC7B,QAAI,SAAS,YAAY,IAAI;AAE7B,QAAI,CAAC,AAAO,QAAQ,SAAS;AAC3B,eAAS,CAAC,GAAG;AAAA;AAGf,QAAI,CAAC,AAAO,QAAQ,UAAS;AAC3B,gBAAS,CAAC,SAAQ;AAAA;AAGpB,QAAI,QAAQ,IAAI;AAChB,QAAI,SAAS,IAAI;AACjB,QAAI,OAAO,KAAK,IAAI,OAAO;AAC3B,QAAI,KAAK,cAAa,QAAO,IAAI;AACjC,QAAI,KAAK,cAAa,QAAO,IAAI;AACjC,QAAI,KAAK,cAAa,OAAO,IAAI,OAAO;AACxC,QAAI,IAAI,cAAa,OAAO,IAAI,OAAO;AACvC,QAAI,aAAa,CAAC,YAAY,IAAI,gBAAgB;AAClD,QAAI,WAAW,YAAY,IAAI,cAAc;AAC7C,QAAI,cAAc,YAAY,UAAU,KAAK;AAC7C,QAAI,WAAW,YAAY;AAC3B,QAAI,YAAY,SAAS;AACzB,QAAI,QAAO,YAAY,IAAI;AAE3B,QAAI,SAAQ,MAAM;AAChB,oBAAa,UAAU;AAAA;AAGzB,QAAI,iBAAiB;AACrB,IAAO,KAAK,SAAS,UAAU,SAAU,OAAO;AAC9C,OAAC,MAAM,MAAM,eAAe;AAAA;AAE9B,QAAI,OAAM,SAAS;AAEnB,QAAI,aAAa,KAAK,KAAM,SAAO,kBAAkB;AACrD,QAAI,mBAAmB,SAAS,QAAQ;AACxC,QAAI,SAAS,SAAS,SAAU,oBAAmB,KAAK;AACxD,QAAI,YAAa,KAAI,MAAO,WAAU;AACtC,QAAI,YAAY,YAAY,IAAI;AAChC,QAAI,mBAAmB,YAAY,IAAI;AAIvC,QAAI,MAAM,YAAY,IAAI;AAM1B,QAAI,cAAa,SAAU,MAAM,aAAY;AAC3C,UAAI,CAAC,MAAM;AACT;AAAA;AAGF,UAAI,WAAW;AAEf,UAAI,SAAS,aAAa;AAExB,YAAI,QAAQ,KAAK;AACjB,YAAI,SAAQ,SAAQ,KAAK,mBAAmB,aAAa,QAAQ;AAEjE,YAAI,SAAQ,UAAU;AACpB,mBAAQ;AAAA;AAMV,mBAAW,cAAa,MAAM;AAC9B,YAAI,QAAQ,KAAK,QAAQ,YAAa,oBAAmB,KAAK;AAC9D,YAAI,UAAS,KAAK,YAAY;AAC9B,YAAI,QAAO,KAAK,YAAa,SAAQ;AACrC,YAAI,aAAa,YAAY,cAAc;AAE3C,YAAI,YAAY;AACd,cAAI,OAAO,WAAW,IAAI,MAAM;AAChC,cAAI,MAAM,WAAW,IAAI,KAAK;AAC9B,cAAI,WAAW,WAAW,IAAI,UAAU;AAExC,cAAI,YAAY,MAAM;AACpB,mBAAO,SAAS;AAChB,kBAAM,SAAS;AAAA;AAGjB,kBAAQ,QAAS,WAAS,cAAa,MAAM,OAAO;AACpD,iBAAO,QAAS,SAAO,cAAa,KAAK,OAAO;AAAA;AAGlD,aAAK,UAAU;AAAA,UACb,OAAO;AAAA,UACP,YAAY;AAAA,UACZ;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,IAAI;AAAA,UACJ,GAAG;AAAA;AAAA;AAKP,UAAI,KAAK,YAAY,KAAK,SAAS,QAAQ;AAEzC,YAAI,iBAAiB;AACrB,QAAO,KAAK,KAAK,UAAU,SAAU,OAAM;AACzC,4BAAkB,YAAW,OAAM,cAAa;AAAA;AAAA;AAIpD,aAAO,WAAW;AAAA;AAIpB,QAAI,kBAAkB;AACpB,UAAI,SAAS;AACb,UAAI,OAAO,KAAK;AAChB,UAAI,QAAQ,KAAK,KAAK;AACtB,kBAAY,UAAU;AAAA,QACpB;AAAA,QACA;AAAA,QACA,UAAU,aAAa;AAAA,QACvB;AAAA,QACA;AAAA,QACA;AAAA,QACA,IAAI;AAAA,QACJ,GAAG;AAAA;AAAA;AAIP,gBAAW,UAAU;AAAA;AAAA;AAOzB,uBAAsB,MAAM,WAAW;AACrC,MAAI,WAAW,KAAK,YAAY;AAChC,OAAK,WAAW,MAAK,UAAU;AAE/B,MAAI,SAAS,QAAQ;AACnB,IAAO,KAAK,KAAK,UAAU,SAAU,OAAO;AAC1C,oBAAa,OAAO;AAAA;AAAA;AAAA;AAa1B,eAAc,UAAU,WAAW;AACjC,MAAI,OAAO,cAAc,YAAY;AACnC,QAAI,cAAc,AAAO,IAAI,UAAU,SAAU,OAAO,KAAK;AAC3D,UAAI,QAAQ,MAAM;AAClB,aAAO;AAAA,QACL,QAAQ;AAAA,UACN,OAAO,MAAM;AAAA,UACb,QAAQ,MAAM;AAAA,UACd,WAAW,MAAM;AAAA,UACjB,UAAU,WAAY;AACpB,mBAAO;AAAA;AAAA;AAAA,QAGX,OAAO;AAAA;AAAA;AAGX,gBAAY,KAAK,SAAU,GAAG,GAAG;AAC/B,aAAO,UAAU,EAAE,QAAQ,EAAE;AAAA;AAE/B,WAAO,AAAO,IAAI,aAAa,SAAU,QAAQ;AAC/C,aAAO,SAAS,OAAO;AAAA;AAAA,SAEpB;AACL,QAAI,UAAU,cAAc;AAC5B,WAAO,SAAS,KAAK,SAAU,GAAG,GAAG;AACnC,UAAI,QAAQ,GAAE,aAAa,EAAE,cAAe,WAAU,IAAI;AAC1D,aAAO,UAAS,IAAK,GAAE,YAAY,EAAE,aAAc,WAAU,KAAK,KAAK;AAAA;AAAA;AAAA;;;AC1L9D,wBAAwB,SAAS;AAC9C,MAAI,eAAe;AAEnB,qBAAmB,MAAM,aAAa,YAAY;AAEhD,QAAI,UAAU;AAEd,WAAO,WAAW,QAAQ,QAAQ,GAAG;AACnC,gBAAU,QAAQ;AAAA;AAGpB,QAAI,QAAQ,YAAY,oBAAoB,QAAQ,QAAQ,QAAQ,YAAY,IAAI;AAEpF,QAAI,KAAK,QAAQ,KAAK,OAAO,UAAU,UAAU;AAE/C,cAAQ,KAAK,OAAQ,MAAK,QAAQ,KAAM,cAAa,KAAK;AAAA;AAG5D,WAAO;AAAA;AAGT,UAAQ,iBAAiB,YAAY,SAAU,aAAa;AAC1D,QAAI,OAAO,YAAY;AACvB,QAAI,OAAO,KAAK;AAChB,SAAK,SAAS,SAAU,MAAM;AAC5B,UAAI,QAAQ,KAAK;AACjB,UAAI,QAAQ,MAAM,SAAS,aAAa;AAExC,UAAI,CAAC,MAAM,MAAM;AACf,cAAM,OAAO,UAAU,MAAM,aAAa,KAAK,KAAK;AAAA;AAGtD,UAAI,cAAc,KAAK,uBAAuB,KAAK,WAAW;AAC9D,aAAO,aAAa;AAAA;AAAA;AAAA;;;AC5BnB,mBAAiB,WAAW;AACjC,YAAU,kBAAkB;AAC5B,YAAU,oBAAoB;AAC9B,YAAU,eAAe,MAAM,gBAAgB;AAC/C,YAAU,kBAAkB,MAAM,YAAY;AAC9C,YAAU,eAAe;AACzB,wBAAsB;AAAA;;;ACTjB,IAAI,kBAAkB;AAAA,EAC3B,GAAG;AAAA,EACH,GAAG;AAAA,EACH,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,SAAS;AAAA,EACT,UAAU;AAAA;AAIL,IAAI,oBAAoB;AAAA,EAC7B,OAAO;AAAA,EACP,aAAa;AAAA;AAER,IAAI,yBAAyB;AAAA,EAClC,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,kBAAkB;AAAA,EAClB,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,OAAO;AAAA,EACP,OAAO;AAAA;AAIF,IAAI,mBAAmB;AAE9B,IAAI,oBAEJ,SAAU,QAAQ;AAChB,YAAU,oBAAmB;AAE7B,gCAA6B;AAC3B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,mBAAkB;AAC/B,WAAO;AAAA;AAGT,qBAAkB,UAAU,gBAAgB,WAAY;AACtD,SAAK,gBAAgB,KAAK,IAAI,UAAU;AACxC,SAAK,WAAW,KAAK,IAAI,KAAK;AAAA;AAGhC,qBAAkB,UAAU,iBAAiB,SAAU,QAAQ,SAAS;AACtE,WAAO,yBAAiB,MAAM;AAAA;AAGhC,qBAAkB,UAAU,gBAAgB,SAAU,WAAW,UAAU,IAAI;AAC7E,QAAI,SAAS,OAAO,UAAU,cAAc,KAAK,MAAM,WAAW;AAElE,UAAO,QAAO,OAAO,iBAAiB,IAAI;AAC1C,WAAO;AAAA;AAGT,qBAAkB,OAAO;AACzB,qBAAkB,eAAe,CAAC,QAAQ,SAAS,OAAO,cAAc;AACxE,qBAAkB,gBAAgB;AAAA,IAChC,kBAAkB;AAAA,IAClB,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,iBAAiB;AAAA,IAIjB,MAAM;AAAA;AASR,SAAO;AAAA,EACP;AAEF,IAAO,uBAAQ;;;AChFf,yBAAyB,UAAU,UAAU;AAE3C,aAAW,YAAY,CAAC,GAAG;AAC3B,SAAO,AAAO,IAAI,CAAC,KAAK,MAAM,SAAU,KAAK,QAAQ;AACnD,QAAI,OAAO,KAAK,QAAQ;AACxB,QAAI,MAAM,SAAS;AACnB,QAAI,WAAW,SAAS,UAAU;AAClC,WAAO,KAAK,SAAS,aAAa,KAAK,iBAAiB,KAAK,IAAI,KAAK,YAAY,MAAM,YAAY,KAAK,YAAY,MAAM;AAAA,KAC1H;AAAA;AAGU,gCAAgC,UAAU;AACvD,MAAI,OAAO,SAAS,OAAO;AAC3B,SAAO;AAAA,IACL,UAAU;AAAA,MAER,MAAM;AAAA,MACN,GAAG,KAAK;AAAA,MACR,GAAG,KAAK;AAAA,MACR,OAAO,KAAK;AAAA,MACZ,QAAQ,KAAK;AAAA;AAAA,IAEf,KAAK;AAAA,MACH,OAAO,SAAU,MAAM;AAErB,eAAO,SAAS,YAAY;AAAA;AAAA,MAE9B,MAAM,AAAO,KAAK,iBAAiB;AAAA;AAAA;AAAA;;;AC3BzC,0BAAyB,UAAU,UAAU;AAC3C,aAAW,YAAY,CAAC,GAAG;AAC3B,SAAO,AAAO,IAAI,CAAC,GAAG,IAAI,SAAU,QAAQ;AAC1C,QAAI,MAAM,SAAS;AACnB,QAAI,WAAW,SAAS,UAAU;AAClC,QAAI,KAAK;AACT,QAAI,KAAK;AACT,OAAG,UAAU,MAAM;AACnB,OAAG,UAAU,MAAM;AACnB,OAAG,IAAI,UAAU,GAAG,IAAI,UAAU,SAAS,IAAI;AAC/C,WAAO,KAAK,IAAI,KAAK,YAAY,IAAI,UAAU,KAAK,YAAY,IAAI;AAAA,KACnE;AAAA;AAGU,0BAA0B,UAAU;AACjD,MAAI,OAAO,SAAS;AACpB,SAAO;AAAA,IACL,UAAU;AAAA,MACR,MAAM;AAAA,MACN,GAAG,KAAK;AAAA,MACR,GAAG,KAAK;AAAA,MACR,OAAO,KAAK;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,MAAM,SAAS;AAAA;AAAA,IAEjB,KAAK;AAAA,MACH,OAAO,SAAU,MAAM;AAIrB,eAAO,SAAS,YAAY;AAAA;AAAA,MAE9B,MAAM,AAAO,KAAK,kBAAiB;AAAA;AAAA;AAAA;;;AChCzC,0BAAyB,UAAU,UAAU;AAE3C,MAAI,OAAO,KAAK;AAChB,MAAI,MAAM,oBAAoB,QAAQ,SAAS,KAAK;AACpD,MAAI,WAAY,qBAAoB,QAAQ,SAAS,KAAK,YAAY;AACtE,SAAO,KAAK,SAAS,aAAa,KAAK,iBAAiB,KAAK,IAAI,KAAK,YAAY,MAAM,YAAY,KAAK,YAAY,MAAM;AAAA;AAG9G,6BAA6B,UAAU;AACpD,MAAI,OAAO,SAAS;AACpB,SAAO;AAAA,IACL,UAAU;AAAA,MACR,MAAM;AAAA,MACN,GAAG,KAAK;AAAA,MACR,GAAG,KAAK;AAAA,MACR,OAAO,KAAK;AAAA,MACZ,QAAQ,KAAK;AAAA;AAAA,IAEf,KAAK;AAAA,MACH,OAAO,SAAU,KAAK;AAEpB,eAAO,SAAS,YAAY;AAAA;AAAA,MAE9B,MAAM,KAAK,kBAAiB;AAAA;AAAA;AAAA;;;ACvBlC,0BAAyB,UAAU,UAAU;AAE3C,aAAW,YAAY,CAAC,GAAG;AAC3B,SAAO,AAAO,IAAI,CAAC,UAAU,UAAU,SAAU,KAAK,QAAQ;AAC5D,QAAI,aAAa,QAAQ,MAAM;AAE/B,QAAI,OAAO,KAAK;AAChB,QAAI,MAAM,SAAS;AACnB,QAAI,WAAW,SAAS,UAAU;AAClC,QAAI,SAAS,KAAK,SAAS,aAAa,KAAK,iBAAiB,KAAK,IAAI,KAAK,YAAY,MAAM,YAAY,KAAK,YAAY,MAAM;AAEjI,QAAI,QAAQ,SAAS;AACnB,eAAS,SAAS,KAAK,KAAK;AAAA;AAG9B,WAAO;AAAA,KACN;AAAA;AAGU,4BAA4B,UAAU;AACnD,MAAI,aAAa,SAAS;AAC1B,MAAI,YAAY,SAAS;AACzB,MAAI,SAAS,WAAW;AACxB,SAAO,KAAK,OAAO,MAAM,OAAO;AAChC,SAAO;AAAA,IACL,UAAU;AAAA,MACR,MAAM;AAAA,MACN,IAAI,SAAS;AAAA,MACb,IAAI,SAAS;AAAA,MACb,GAAG,OAAO;AAAA,MACV,IAAI,OAAO;AAAA;AAAA,IAEb,KAAK;AAAA,MACH,OAAO,SAAU,MAAM;AACrB,YAAI,UAAS,WAAW,aAAa,KAAK;AAC1C,YAAI,QAAQ,UAAU,YAAY,KAAK;AACvC,YAAI,QAAQ,SAAS,aAAa,CAAC,SAAQ;AAC3C,cAAM,KAAK,SAAQ,QAAQ,KAAK,KAAK;AACrC,eAAO;AAAA;AAAA,MAET,MAAM,AAAO,KAAK,kBAAiB;AAAA;AAAA;AAAA;;;AC1C1B,+BAA+B,UAAU;AACtD,MAAI,OAAO,SAAS;AACpB,MAAI,YAAY,SAAS;AACzB,SAAO;AAAA,IACL,UAAU;AAAA,MACR,MAAM;AAAA,MACN,GAAG,KAAK;AAAA,MACR,GAAG,KAAK;AAAA,MACR,OAAO,KAAK;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,WAAW,SAAS;AAAA,MACpB,YAAY,SAAS;AAAA,MACrB,WAAW;AAAA,QACT,OAAO,UAAU;AAAA,QACjB,KAAK,UAAU;AAAA,QACf,OAAO,UAAU;AAAA,QACjB,UAAU,UAAU;AAAA;AAAA;AAAA,IAGxB,KAAK;AAAA,MACH,OAAO,SAAU,MAAM,OAAO;AAC5B,eAAO,SAAS,YAAY,MAAM;AAAA;AAAA;AAAA;AAAA;;;ACpB1C,IAAI,iBAAiB;AAKd,8BAA8B,OAAO,QAAQ,yBAAyB,kBAAkB;AAU7F,SAAO,SAAU,OAAM,UAAU,MAAM,WAAW,SAAS,CAAC,2BAA2B,CAAC,oBAAoB,WAAW,WACnH,YAAW,UAAU,OAAO,OAAO;AAAA;AAUlC,uCAAuC,WAAW,QAAQ,UAAU;AACzE,MAAI,WAAW;AACf,MAAI;AACJ,MAAI;AACJ,MAAI;AAEJ,MAAI,WAAW,QAAQ;AACrB,uBAAmB;AAAA,SACd;AACL,uBAAmB;AACnB,WAAO,UAAU,WAAY,kBAAiB,OAAO,SAAS;AAC9D,WAAO,UAAU,WAAY,kBAAiB,OAAO,SAAS;AAC9D,WAAO,UAAU,eAAgB,kBAAiB,OAAO,SAAS;AAClE,WAAO,UAAU,iBAAkB,kBAAiB,SAAS,SAAS;AACtE,WAAO,UAAU,iBAAkB,kBAAiB,aAAa,SAAS;AAC1E,WAAO,UAAU,eAAgB,kBAAiB,WAAW,SAAS;AACtE,WAAO,UAAU,gBAAiB,kBAAiB,YAAY,SAAS;AACxE,WAAO,UAAU,iBAAkB,kBAAiB,aAAa,SAAS;AAC1E,kBAAc;AAAA,MACZ,MAAM;AAAA,MACN,OAAO;AAAA,MAMP,QAAQ;AAAA;AAEV,iBAAa;AACb,QAAI,YAAY,OAAO,UAAU;AAEjC,QAAI,UAAU;AACZ,iBAAW,WAAW,YAAY,SAAS,eAAe;AAAA,WACrD;AACL,mBAAc,YAAW,WAAW,SAAS;AAAA;AAG/C,WAAO,UAAU,mBAAoB,YAAW,WAAW,SAAS;AACpE,WAAO,UAAU,iBAAkB,YAAW,SAAS,SAAS;AAChE,WAAO,UAAU,mBAAoB,YAAW,WAAW,SAAS;AACpE,WAAO,UAAU,mBAAoB,YAAW,WAAW,SAAS;AAAA;AAGtE,+BAA6B,kBAAkB;AAC/C,OAAK,iBAAiB,MAAM,SAAU,UAAU;AAC9C,iCAA6B,UAAU;AAAA;AAEzC,SAAO;AAAA,IACL;AAAA,IACA;AAAA;AAAA;AAOJ,sCAAsC,KAAK,UAAU;AACnD,MAAI,CAAC,UAAU;AACb;AAAA;AASF,WAAS,OAAO,SAAS,YAAY,SAAS;AAC9C,SAAO,UAAU,sBAAuB,KAAI,YAAY,SAAS;AACjE,SAAO,UAAU,gBAAiB,KAAI,QAAQ,SAAS;AACvD,SAAO,UAAU,wBAAyB,KAAI,gBAAgB,SAAS;AACvE,SAAO,UAAU,qBAAsB,KAAI,aAAa,SAAS;AACjE,SAAO,UAAU,gBAAiB,KAAI,QAAQ,SAAS;AACvD,SAAO,UAAU,iBAAkB,KAAI,SAAS,SAAS;AACzD,SAAO,UAAU,0BAA2B,KAAI,kBAAkB,SAAS;AAC3E,SAAO,UAAU,kBAAmB,KAAI,UAAU,SAAS;AAC3D,SAAO,UAAU,sBAAuB,KAAI,cAAc,SAAS;AACnE,SAAO,UAAU,sBAAuB,KAAI,cAAc,SAAS;AACnE,SAAO,UAAU,uBAAwB,KAAI,eAAe,SAAS;AACrE,SAAO,UAAU,yBAA0B,KAAI,cAAc,SAAS;AACtE,SAAO,UAAU,wBAAyB,KAAI,aAAa,SAAS;AACpE,SAAO,UAAU,2BAA4B,KAAI,gBAAgB,SAAS;AAC1E,SAAO,UAAU,2BAA4B,KAAI,gBAAgB,SAAS;AAAA;AAYrE,0CAA0C,SAAS,OAAO,OAAO;AACtE,MAAI,MAAM;AAEV,MAAI,eAAe,IAAI,gBAAgB,MAAM,YAAY;AACzD,QAAM,UAAU,QAAS,KAAI,aAAa,MAAM;AAChD,QAAM,YAAY,QAAS,KAAI,eAAe,MAAM;AACpD,QAAM,YAAY,QAAS,KAAI,eAAe,MAAM;AACpD,MAAI,WAAW,IAAI,aAAa,QAAQ,aAAa;AACrD,MAAI,WAAW,QAAQ,QAAQ;AAC/B,uBAAqB,KAAK;AAC1B,MAAI,iBAAiB,IAAI,YAAY;AAErC,MAAI,UAAU;AACZ,QAAI,gBAAgB;AAClB,UAAI,WAAW,MAAM,cAAc;AACnC,OAAC,IAAI,cAAc,MAAM,gBAAiB,KAAI,aAAa,MAAM;AACjE,OAAC,IAAI,cAAe,KAAI,aAAa;AACrC,UAAI,mBAAmB,QAAS,KAAI,kBAAkB;AAAA;AAAA,SAEnD;AACL,QAAI,gBAAgB;AAClB,UAAI,WAAW,QAAQ,QAAQ,MAAM,eAAe;AAAA;AAGtD,KAAC,IAAI,cAAc,MAAM,iBAAkB,KAAI,aAAa,MAAM;AAAA;AAGpE,MAAI,OAAO,MAAM;AACjB,MAAI,OAAO,MAAM;AACjB,OAAK,MAAM,MAAM,SAAU,UAAU;AACnC,yBAAqB,UAAU;AAAA;AAEjC,SAAO;AAAA;AAGT,8BAA8B,KAAK,UAAU;AAC3C,MAAI,CAAC,UAAU;AACb;AAAA;AAGF,SAAO,UAAU,WAAY,KAAI,WAAW,SAAS;AACrD,SAAO,UAAU,aAAc,KAAI,aAAa,SAAS;AACzD,SAAO,UAAU,gBAAiB,KAAI,kBAAkB,SAAS;AACjE,SAAO,UAAU,WAAY,KAAI,OAAO,SAAS;AACjD,SAAO,UAAU,gBAAiB,KAAI,YAAY,SAAS;AAC3D,SAAO,UAAU,iBAAkB,KAAI,aAAa,SAAS;AAC7D,SAAO,UAAU,eAAgB,KAAI,WAAW,SAAS;AACzD,SAAO,UAAU,iBAAkB,KAAI,aAAa,SAAS;AAC7D,SAAO,UAAU,YAAa,KAAI,YAAY,SAAS;AACvD,SAAO,UAAU,oBAAqB,KAAI,oBAAoB,SAAS;AACvE,SAAO,UAAU,iBAAkB,KAAI,iBAAiB,SAAS;AACjE,SAAO,UAAU,YAAa,KAAI,YAAY,SAAS;AACvD,SAAO,UAAU,aAAc,KAAI,aAAa,SAAS;AACzD,SAAO,UAAU,sBAAuB,KAAI,sBAAsB,SAAS;AAC3E,SAAO,UAAU,cAAe,KAAI,cAAc,SAAS;AAC3D,SAAO,UAAU,kBAAmB,KAAI,kBAAkB,SAAS;AACnE,SAAO,UAAU,kBAAmB,KAAI,kBAAkB,SAAS;AACnE,SAAO,UAAU,mBAAoB,KAAI,mBAAmB,SAAS;AACrE,SAAO,UAAU,kBAAmB,KAAI,qBAAqB,SAAS;AACtE,SAAO,UAAU,iBAAkB,KAAI,oBAAoB,SAAS;AACpE,SAAO,UAAU,oBAAqB,KAAI,uBAAuB,SAAS;AAC1E,SAAO,UAAU,oBAAqB,KAAI,uBAAuB,SAAS;AAC1E,SAAO,UAAU,sBAAuB,KAAI,kBAAkB,SAAS;AACvE,SAAO,UAAU,qBAAsB,KAAI,iBAAiB,SAAS;AACrE,SAAO,UAAU,wBAAyB,KAAI,oBAAoB,SAAS;AAC3E,SAAO,UAAU,wBAAyB,KAAI,oBAAoB,SAAS;AAAA;AAGtE,wBAAwB,YAAY,iBAAiB;AAC1D,MAAI,MAAuC;AACzC,QAAI,MAAM,aAAa,QAAQ;AAE/B,QAAI,CAAC,eAAe,MAAM;AACxB,cAAQ,KAAK,4BAA6B,aAAa,4BAA6B;AACpF,qBAAe,OAAO;AAAA;AAAA;AAAA;;;AC/L5B,IAAI,yBAAyB;AAAA,EAC3B,UAAU,CAAC,KAAK;AAAA,EAChB,OAAO,CAAC,UAAU;AAAA,EAClB,QAAQ,CAAC,WAAW;AAAA;AAGtB,gCAAgC,UAAU,aAAa,YAAY;AACjE,MAAI,YAAY,SAAS;AACzB,MAAI,SAAS,uBAAuB;AAEpC,MAAI,WAAW;AACb,gBAAY,OAAO,MAAM,UAAU;AACnC,gBAAY,OAAO,MAAM,UAAU;AAAA;AAAA;AAIvC,0BAA0B,UAAU,UAAU,MAAM;AAClD,MAAI,SAAS,SAAS,MAAM;AAC1B,aAAS,QAAQ,SAAS;AAAA;AAAA;AAI9B,0CAA0C,gBAAgB,MAAM,mBAC9D;AACA,MAAI,mBAAmB;AACrB,mBAAe,QAAQ,kBAAkB;AAAA;AAAA;AAKtC,2CAA2C,UAAU,QAAQ,UAAU,gBAAgB,QAAQ;AACpG,MAAI,UAAU,SAAS;AAEvB,MAAI,CAAC,SAAS;AACZ;AAAA;AAGF,MAAI,gBAAgB,OAAO;AAC3B,MAAI;AACJ,MAAI,YAAY,QAAQ;AAExB,MAAI,UAAU,WAAW;AACvB,KAAC,wBAAyB,wBAAuB,eAAe,YAAY;AAC5E,QAAI,gBAAgB,KAAK;AAEzB,aAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AAG7C,UAAI,MAAM,cAAc;AAExB,2BAAqB,OAAO,UAAU;AAAA;AAAA;AAI1C,MAAI,CAAC,UAAU,eAAe;AAC5B,QAAI,QAAQ,YAAY;AACtB,OAAC,wBAAyB,wBAAuB,eAAe,YAAY;AAC5E,UAAI,iBAAiB,iBAAiB,QAAQ;AAE9C,eAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK;AAC9C,YAAI,MAAM,eAAe;AACzB,YAAI,QAAQ,cAAc;AAE1B,YAAI,MAAuC;AACzC,sCAA4B,KAAK,QAAQ,MAAM;AAAA;AAIjD,6BAAqB,OAAO;AAAA;AAAA,eAErB,QAAQ,SAAS,YAAY,aAAa,GAAG;AACtD,OAAC,wBAAyB,wBAAuB,eAAe,YAAY;AAC5E,UAAI,oBAAoB,KAAK;AAE7B,eAAS,IAAI,GAAG,IAAI,kBAAkB,QAAQ,KAAK;AACjD,YAAI,MAAM,kBAAkB;AAC5B,YAAI,QAAQ,cAAc;AAE1B,YAAI,4BAA4B,QAAQ,MAAM,QAAQ;AACpD,+BAAqB,OAAO;AAAA;AAAA;AAAA;AAAA;AAMpC,MAAI,UAAU,QAAQ;AAEtB,MAAI,SAAS;AACX,QAAI,eAAe,8BAA8B;AACjD,QAAI,qBAAqB,aAAa,aAAc,cAAa,YAAY;AAC7E,QAAI,cAAc,KAAK;AAEvB,aAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,UAAI,MAAM,YAAY;AACtB,yBAAmB,OAAO,QAAQ;AAAA;AAAA;AAAA;AAIjC,0CAA0C,UAAU,UAAU,UAAU;AAC7E,MAAI,UAAU,SAAS;AAEvB,MAAI,CAAC,SAAS;AACZ;AAAA;AAGF,MAAI,iBAAiB,SAAS,YAAY;AAC1C,MAAI,aAAa,KAAK;AAEtB,WAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,QAAI,MAAM,WAAW;AAGrB,mBAAe,OAAO,WAAW,QAAQ;AAAA;AAAA;AAItC,wCAAwC,IAAI,UAAU,gBAAgB,QAAQ;AACnF,MAAI,YAAY,SAAS;AAEzB,MAAI,UAAU,WAAW;AACvB,QAAI,gBAAgB,KAAK;AAEzB,aAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AAC7C,UAAI,MAAM,cAAc;AAExB,UAAI,MAAuC;AACzC,gCAAwB,KAAK;AAAA;AAI/B,qBAAe,OAAO,UAAU;AAAA;AAAA;AAIpC,MAAI,CAAC,QAAQ;AACX,QAAI,SAAS,YAAY;AACvB,UAAI,iBAAiB,iBAAiB,SAAS;AAE/C,eAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK;AAC9C,YAAI,MAAM,eAAe;AAEzB,YAAI,QAAQ,WAAW,QAAQ,WAAW,QAAQ,SAAS;AACzD;AAAA;AAGF,YAAI,QAAQ,GAAG;AAEf,YAAI,MAAuC;AACzC,kCAAwB,KAAK;AAC7B,sCAA4B,KAAK,SAAS,MAAM;AAAA;AAIlD,uBAAe,OAAO;AAAA;AAAA,WAGrB;AACD,uCAAiC,gBAAgB,KAAK;AACtD,uCAAiC,gBAAgB,KAAK;AAAA;AAAA;AAI5D,MAAI,UAAU,SAAS;AAEvB,MAAI,SAAS;AACX,QAAI,eAAe,8BAA8B;AACjD,QAAI,cAAc,KAAK;AAEvB,aAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,UAAI,MAAM,YAAY;AAEtB,UAAI,MAAuC;AACzC,gCAAwB,KAAK;AAAA;AAG/B,mBAAa,OAAO,QAAQ;AAAA;AAAA;AAAA;AAI3B,uCAAuC,IAAI,UAAU,UAAU;AACpE,yBAAuB,UAAU,UAAU;AAC3C,yBAAuB,UAAU,UAAU;AAC3C,yBAAuB,UAAU,UAAU;AAC3C,mBAAiB,UAAU,UAAU;AACrC,mBAAiB,UAAU,UAAU;AACrC,mBAAiB,UAAU,UAAU;AACrC,mBAAiB,UAAU,UAAU;AACrC,mBAAiB,UAAU,UAAU;AACrC,mBAAiB,UAAU,UAAU;AACrC,mBAAiB,UAAU,UAAU;AAAA;AAGhC,oCAAoC,QAAQ,UAAU,UAAU,gBAAgB,QAAQ;AAC7F,MAAI,CAAC,UAAU;AACb;AAAA;AAGF,MAAI,cAAc,OAAO;AACzB,MAAI;AACJ,MAAI,YAAY,SAAS;AAEzB,MAAI,UAAU,WAAW;AACvB,QAAI,gBAAgB,KAAK;AACzB,KAAC,uBAAwB,uBAAsB,eAAe,QAAQ;AAEtE,aAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AAC7C,UAAI,MAAM,cAAc;AAExB,0BAAoB,OAAO,UAAU;AAAA;AAAA;AAIzC,MAAI,CAAC,UAAU,aAAa;AAC1B,QAAI,SAAS,YAAY;AACvB,UAAI,iBAAiB,iBAAiB,SAAS;AAC/C,OAAC,uBAAwB,uBAAsB,eAAe,QAAQ;AAEtE,eAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK;AAC9C,YAAI,MAAM,eAAe;AACzB,YAAI,QAAQ,YAAY;AAExB,4BAAoB,OAAO;AAAA;AAAA,eAEpB,OAAO,0BAA0B,QAAQ,SAAS,YAAY,YAAY,GAAG;AACtF,UAAI,iBAAiB,OAAO;AAC5B,UAAI,sBAAsB,iBAAiB,eAAe,QAAQ;AAElE,UAAI,qBAAqB;AACvB,SAAC,uBAAwB,uBAAsB,eAAe,QAAQ;AACtE,YAAI,YAAY,KAAK;AAErB,iBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,cAAI,MAAM,UAAU;AAEpB,cAAI,oBAAoB,MAAM;AAC5B,gBAAI,QAAQ,YAAY;AACxB,gCAAoB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAOrC,MAAI,UAAU,SAAS;AAEvB,MAAI,SAAS;AACX,QAAI,cAAc,KAAK;AACvB,QAAI,eAAe,8BAA8B;AACjD,QAAI,oBAAoB,aAAa,SAAU,cAAa,QAAQ;AAEpE,aAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,UAAI,MAAM,YAAY;AACtB,wBAAkB,OAAO,QAAQ;AAAA;AAAA;AAAA;AAIvC,IAAI;AAEJ,IAAI,MAAuC;AACzC,gCAA8B,SAAU,UAAU,QAAQ,OAAO;AAC/D,QAAI,CAAC,YAAY,SAAS;AACxB,aAAO,UAAU,QAAQ,SAAS,SAAS,WAAW,WAAW;AAAA,WAC5D;AAGL,aAAO,WAAW,OAAO,WAAW,WAAW;AAAA;AAAA;AAAA;AAKrD,qCAAqC,QAAQ,OAAO;AAElD,SAAO,CAAC,YAAY,UAAU,UAAU,QAAQ,SAAS,UAAU,WAAW;AAAA;AAGhF,IAAI;AAEJ,IAAI,MAAuC;AACzC,4BAA0B,SAAU,KAAK,QAAQ;AAC/C,WAAO,OAAO,iBAAiB,MAAM,WAAW,MAAM,8BAA8B,SAAS,cAAmB,KAAK,iBAAiB,KAAK,UAAU;AAAA;AAAA;AAIzJ,uCAAuC,IAAI;AACzC,MAAI,UAAU,iBAAiB;AAC/B,SAAO,QAAQ,gBAAiB,SAAQ,eAAe;AAAA;;;AC5QzD,IAAI,wBAAwB,KAAK,iBAAiB,KAAK;AACvD,IAAI,WAAW;AACf,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,SAAS;AACb,IAAI,SAAS,CAAC,QAAQ,UAAU,MAAM;AACtC,IAAI,kBAAkB;AAAA,EACpB,QAAQ,CAAC;AAAA,EACT,UAAU,CAAC,UAAU;AAAA,EACrB,MAAM,CAAC,MAAM;AAAA,EACb,QAAQ,CAAC,QAAQ;AAAA;AAEnB,IAAI,aAAa;AAAA,EACf,QAAQ,CAAC;AAAA,EACT,UAAU,CAAC,UAAU;AAAA,EACrB,MAAM,CAAC,MAAM;AAAA,EACb,QAAQ,CAAC,QAAQ;AAAA;AAInB,IAAI,oBAAoB;AACxB,IAAI,oBAAoB;AAAA,EACtB,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,MAAM;AAAA,EACN,QAAQ;AAAA;AAcV,IAAI,iBAAiB;AAAA,EACnB,aAAa;AAAA,EACb,KAAK;AAAA,EACL,YAAY;AAAA,EACZ,OAAO;AAAA,EACP,UAAU;AAAA;AAGZ,gBAAgB,IAAI;AAClB,SAAO,cAA0B;AAAA;AAGnC,uBAAuB,IAAI;AACzB,SAAO,cAAc;AAAA;AAGvB,qBAAqB,UAAU,UAAU;AACvC,WAAS,cAAc;AAEvB,MAAI,cAAc,aAAa,cAAc,WAAW;AACtD,aAAS,SAAS,SAAS;AAC3B,aAAS,IAAI,SAAS;AACtB,aAAS,KAAK,SAAS;AACvB,aAAS,SAAS,SAAS;AAC3B,aAAS,YAAY,SAAS;AAC9B,aAAS,SAAS,SAAS;AAE3B,QAAI,OAAO,aAAa,OAAO,WAAW;AACxC,eAAS,SAAS,SAAS;AAAA;AAAA;AAAA;AAKjC,IAAI,kBAEJ,SAAU,QAAQ;AAChB,YAAU,kBAAiB;AAE3B,8BAA2B;AACzB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,iBAAgB;AAC7B,WAAO;AAAA;AAGT,mBAAgB,UAAU,SAAS,SAAU,cAAc,SAAS,KAAK,SAAS;AAChF,QAAI,UAAU,KAAK;AACnB,QAAI,OAAO,aAAa;AACxB,QAAI,QAAQ,KAAK;AACjB,QAAI,aAAa,eAAe,cAAc,MAAM,SAAS;AAE7D,QAAI,CAAC,SAAS;AAGZ,YAAM;AAAA;AAGR,SAAK,KAAK,SAAS,IAAI,SAAU,QAAQ;AACvC,yBAAmB,KAAK,MAAM,QAAQ,WAAW,QAAQ,UAAU,cAAc,OAAO;AAAA,OACvF,OAAO,SAAU,QAAQ;AAC1B,iBAAW,QAAQ,iBAAiB,SAAS,cAAc;AAAA,OAC1D,OAAO,SAAU,QAAQ,QAAQ;AAClC,UAAI,QAAQ,QAAQ,iBAAiB;AACrC,yBAAmB,KAAK,OAAO,QAAQ,WAAW,QAAQ,UAAU,cAAc,OAAO;AAAA,OACxF;AAEH,QAAI,WAAW,aAAa,IAAI,QAAQ,QAAQ,eAAe,aAAa,kBAAkB,OAAO,gBAAgB;AAErH,QAAI,UAAU;AACZ,YAAM,YAAY;AAAA,WACb;AACL,YAAM;AAAA;AAGR,SAAK,QAAQ;AAAA;AAGf,mBAAgB,UAAU,2BAA2B,SAAU,cAAc,SAAS,KAAK;AACzF,SAAK,MAAM;AACX,SAAK,QAAQ;AAAA;AAGf,mBAAgB,UAAU,oBAAoB,SAAU,QAAQ,cAAc,SAAS,KAAK,SAAS;AACnG,QAAI,OAAO,aAAa;AACxB,QAAI,aAAa,eAAe,cAAc,MAAM,SAAS;AAE7D,yCAAqC,KAAI;AACvC,UAAI,CAAC,IAAG,SAAS;AACf,YAAG,cAAc;AACjB,YAAG,YAAY,YAAY,aAAa;AAAA;AAAA;AAI5C,aAAS,MAAM,OAAO,OAAO,MAAM,OAAO,KAAK,OAAO;AACpD,UAAI,KAAK,mBAAmB,MAAM,MAAM,KAAK,WAAW,KAAK,UAAU,cAAc,KAAK,OAAO;AACjG,YAAM,GAAG,SAAS;AAAA;AAAA;AAItB,mBAAgB,UAAU,wBAAwB,SAAU,WAAW,OAAO,UAAU,aAAa;AACnG,QAAI,cAAc,MAAM;AAExB,QAAI,eAAe,QAAQ,SAAS,SAAS,aAAa;AACxD,aAAO;AAAA;AAKT,WAAQ,YAAW,SAAS,gBAAgB,SAAS,WAAW,aAAa,KAAK,OAAO;AACvF,UAAI,SAAS,SAAS,aAAa;AACjC,eAAO;AAAA;AAAA;AAIX,WAAO;AAAA;AAGT,mBAAgB,OAAO;AACvB,SAAO;AAAA,EACP;AAEF,IAAO,qBAAQ;AAEf,kBAAkB,UAAU;AAC1B,MAAI,cAAc,SAAS;AAC3B,MAAI;AAGJ,MAAI,gBAAgB,QAAQ;AAC1B,QAAI,QAAQ,SAAS;AAErB,QAAI,WAAW,MAAM,SAAS,QAAQ,MAAM,UAAU,OAAO;AAAA,MAC3D,GAAG,MAAM,KAAK;AAAA,MACd,GAAG,MAAM,KAAK;AAAA,MACd,OAAO,MAAM;AAAA,MACb,QAAQ,MAAM;AAAA,QACZ;AACJ,QAAI,WAAW,YAAY;AAE3B,SAAK,AAAY,SAAS,UAAU,MAAM,UAAU,MAAM,UAAU;AACpE,qBAAiB,IAAI,iBAAiB;AAAA,aAC7B,gBAAgB,SAAS;AAClC,SAAK,IAAgB,cAAM;AAC3B,qBAAiB,IAAI,kBAAkB,SAAS,MAAM;AAAA,aAC7C,gBAAgB,QAAQ;AACjC,SAAK,IAAgB,aAAK;AAAA,aACjB,gBAAgB,SAAS;AAClC,SAAK,IAAgB;AAAA,aACZ,gBAAgB,gBAAgB;AACzC,UAAM,IAAI,MAAM;AAAA,SACX;AACL,QAAI,MAAM,AAAY,cAAc;AAEpC,QAAI,CAAC,KAAK;AACR,UAAI,SAAS;AAEb,UAAI,MAAuC;AACzC,iBAAS,mBAAmB,cAAc;AAAA;AAG5C,iBAAW;AAAA;AAGb,SAAK,IAAI;AAAA;AAGX,mBAAiB,IAAI,oBAAoB;AACzC,KAAG,OAAO,SAAS;AAInB,KAAG,iBAAiB;AACpB,KAAG,eAAe;AAClB,SAAO;AAAA;AAGT,wBACA,KAAK,IAAI,WAAW,UAAU,gBAAgB,aAAa,QAAQ,eAAe;AAChF,MAAI,WAAW,kBAAkB,eAAe,OAAO;AAEvD,MAAI,UAAU;AAGZ,OAAG,cAAc;AAAA;AAInB,MAAI,WAAW,YAAY,SAAS;AAEpC,MAAI,UAAU;AACZ,QAAI,GAAG,SAAS,QAAQ;AACtB,UAAI,kBAAkB;AAEtB,aAAO,iBAAiB,eAAgB,iBAAgB,OAAO,gBAAgB;AAC/E,aAAO,iBAAiB,iBAAkB,iBAAgB,SAAS,gBAAgB;AAAA;AAGrF,QAAI,eAAe;AACnB,QAAI,WAAW,OAAO,MAAM,SAAS,QAAQ;AAE7C,QAAI,OAAO,UAAU;AACnB,eAAS,QAAQ;AACjB,qBAAe,+BAA+B,UAAU;AAAA;AAI1D,aAAS,iBAAiB;AAAA;AAI5B,MAAI,QAAQ,iBAAiB;AAC7B,QAAM,aAAa,SAAS;AAC5B,MAAI,iBAAiB;AACrB,MAAI,aAAa;AACjB,oCAAkC,SAAS,IAAI,UAAU,gBAAgB;AACzE,mCAAiC,SAAS,UAAU;AACpD,iCAA+B,IAAI,UAAU,gBAAgB;AAC7D,gCAA8B,IAAI,UAAU;AAC5C,oCAAkC,SAAS,IAAI,UAAU,gBAAgB;AACzE,mCAAiC,SAAS,UAAU;AACpD,6BAA2B,IAAI,UAAU,UAAU,gBAAgB;AACnE,aAAW,QAAQ;AACnB,qBAAmB,IAAI;AACvB,uBAAqB,IAAI,WAAW,aAAa,gBAAgB;AACjE,iBAAe,IAAI,UAAU;AAC7B,aAAW,GAAG,UAAU,GAAG;AAAA;AAG7B,wBAAwB,IAAI,UAAU,eAAe;AAEnD,SAAO,UAAU,aAAc,IAAG,SAAS,SAAS;AACpD,SAAO,UAAU,aAAc,IAAG,SAAS,SAAS;AAEpD,MAAI,cAAc,KAAK;AACrB,WAAO,UAAU,gBAAiB,IAAG,YAAY,SAAS;AAAA;AAG5D,MAAI,OAAO,KAAK;AACd,WAAO,UAAU,gBAAiB,IAAG,YAAY,SAAS;AAAA;AAG5D,MAAI,CAAC,eAAe;AAIlB,WAAO,UAAU,WAAY,kBAAiB,IAAI,OAAO,SAAS;AAAA;AAAA;AAItE,4BAA4B,IAC5B,eAAe;AACb,MAAI,gBAAgB,GAAG,UAAU,OAAO;AACxC,MAAI,WAAW,cAAc;AAE7B,MAAI,iBAAiB,UAAU;AAG7B,kBAAc,SAAS;AACvB,QAAI,eAAe,SAAS;AAE5B,QAAI,cAAc;AAChB,oBAAc,MAAM,QAAQ;AAAA;AAiB9B,QAAI,YAAY,cAAc;AAE9B,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,UAAI,WAAW,UAAU;AAEzB,UAAI,SAAS,eAAe,SAAS;AACnC,iBAAS,aAAa,cAAc;AAAA;AAAA;AAAA;AAK1C,MAAI,eAAe;AAEjB,kBAAc,QAAQ;AAEtB,qBAAiB,GAAG,KAAK;AACzB,kBAAc,QAAQ;AAAA;AAAA;AAI1B,8BAA8B,IAAI,WAAW,aAC7C,gBAAgB,QAAQ;AACtB,MAAI,gBAAgB;AAMlB,QAAI,aAAa,iBAAiB,IAAI;AAEtC,QAAI,gBAAgB,aAAa,KAAK,YAAY;AAAA,MAChD;AAAA,MACA;AAAA,SACG;AACL,QAAI,MAAM;AAAA,MACR;AAAA,MACA,QAAQ;AAAA,MACR,QAAQ;AAAA;AAEV,aAAS,AAAY,UAAU,IAAI,gBAAgB,aAAa,OAAO,AAAY,YAAY,IAAI,gBAAgB,aAAa;AAAA;AAAA;AAKpI,IAAI,iBAAiB;AACrB,IAAI,kBAAkB;AAAA,EAEpB,cAAc,SAAU,KAAK,KAAK;AAChC,QAAI,MAAuC;AACzC,aAAO,OAAO,iBAAiB,MAAM,UAAU,wBAAwB;AAAA;AAGzE,mBAAe,GAAG,OAAO;AACzB,WAAO;AAAA;AAAA,EAET,cAAc,SAAU,KAAK;AAC3B,QAAI,MAAuC;AACzC,aAAO,OAAO,iBAAiB,MAAM,UAAU,wBAAwB;AAAA;AAGzE,WAAO,eAAe,GAAG;AAAA;AAAA,EAE3B,UAAU,SAAU,KAAK,KAAK;AAC5B,QAAI,MAAuC;AACzC,wBAAkB;AAAA;AAGpB,QAAI,QAAQ,eAAe,GAAG,SAAU,gBAAe,GAAG,QAAQ;AAClE,UAAM,OAAO;AACb,mBAAe,eAAe;AAC9B,WAAO;AAAA;AAAA,EAET,UAAU,SAAU,KAAK;AACvB,QAAI,MAAuC;AACzC,wBAAkB;AAAA;AAGpB,QAAI,QAAQ,eAAe,GAAG;AAE9B,QAAI,OAAO;AACT,aAAO,MAAM;AAAA;AAAA;AAAA,EAGjB,UAAU,SAAU,KAAK,KAAK;AAC5B,QAAI,MAAuC;AACzC,wBAAkB;AAAA;AAGpB,QAAI,QAAQ,eAAe,GAAG;AAE9B,QAAI,OAAO;AACT,UAAI,MAAuC;AACzC,YAAI,MAAM,MAAM;AACd,eAAK,WAAW,MAAM;AAAA;AAAA;AAI1B,YAAM,OAAO;AACb,qBAAe,eAAe;AAAA;AAGhC,WAAO;AAAA;AAAA,EAET,UAAU,SAAU,KAAK;AACvB,QAAI,MAAuC;AACzC,wBAAkB;AAAA;AAGpB,QAAI,QAAQ,eAAe,GAAG;AAE9B,QAAI,OAAO;AACT,aAAO,MAAM;AAAA;AAAA;AAAA,EAGjB,UAAU,SAAU,KAAK,KAAK;AAC5B,QAAI,MAAuC;AACzC,wBAAkB;AAAA;AAGpB,QAAI,QAAQ,eAAe,GAAG,SAAU,gBAAe,GAAG,QAAQ;AAClE,UAAM,OAAO;AACb,WAAO;AAAA;AAAA,EAET,UAAU,SAAU,KAAK;AACvB,QAAI,MAAuC;AACzC,wBAAkB;AAAA;AAGpB,QAAI,QAAQ,eAAe,GAAG;AAE9B,QAAI,OAAO;AACT,aAAO,MAAM;AAAA;AAAA;AAAA;AAKnB,2BAA2B,KAAK;AAC9B,MAAI,MAAuC;AACzC,QAAI,QAAQ,gBAAgB,QAAQ,eAAe,QAAQ,WAAW;AACpE,YAAM,IAAI,MAAM,sBAAsB,MAAM;AAAA;AAAA;AAAA;AAKlD,sBAAsB;AAMpB,MAAI,QAAQ;AACZ,MAAI,KAAK,MAAM;AAEf,MAAI,CAAC,IAAI;AACP;AAAA;AAKF,MAAI,mBAAmB,iBAAiB,IAAI;AAC5C,MAAI,kBAAkB,MAAM;AAO5B,MAAI,qBAAqB,iBAAiB;AAExC,UAAM,KAAK,MAAM,aAAa;AAC9B;AAAA;AAGF,iBAAe,KAAK;AACpB,iBAAe,eAAe;AAC9B,iBAAe,eAAe;AAE9B,kBAAgB;AAEhB,MAAI,eAAe,gBAAgB,GAAG,YAAY;AAChD,OAAG;AAAA;AAGL,MAAI,eAAe,gBAAgB,GAAG,YAAY;AAChD,OAAG;AAAA;AAAA;AAQP,yBAAyB,OAAO,IAAI,YAAY,UAAU,gBAAgB,QAAQ,eAAe;AAC/F,MAAI,gBAAgB,GAAG,UAAU,OAAO;AACxC,MAAI,WAAW,kBAAkB,eAAe,OAAO;AAEvD,MAAI,eAAe;AAEjB,QAAI,WAAW,cAAc,YAAY;AAEzC,QAAI,aAAa,OAAO;AACtB,UAAI,wBAAwB,cAAc,SAAS;AAEnD,UAAI,uBAAuB;AACzB,8BAAsB,QAAQ;AAAA;AAAA,WAE3B;AAEL,eAAS,QAAQ,YAAY;AAAA;AAO/B,QAAI,UAAU;AACZ,eAAS,aAAa;AAAA;AAGxB,yBAAqB;AAAA;AAAA;AAIzB,kBAAiB,IAAI,UAAU,aAAa;AAE1C,MAAI,GAAG,SAAS;AACd;AAAA;AAGF,MAAI,gBAAgB;AACpB,MAAI,WAAW,YAAY;AAC3B,MAAI,gBAAgB,YAAY;AAEhC,gBAAc,IAAI;AAClB,gBAAc,SAAS;AAEvB,MAAI,QAAQ,SAAS;AACrB,WAAS,QAAS,eAAc,KAAK,SAAS;AAE9C,WAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,wBAAoB,eAAe,UAAU,OAAO;AAAA;AAAA;AAIxD,6BAA6B,eAAe,UAAU,OAAO;AAC3D,MAAI,WAAW,UAAU;AACzB,MAAI,aAAa,WAAW,WAAW,oBAAoB,UAAU;AACrE,MAAI,QAAQ,aAAa,WAAW,KAAK;AACzC,MAAI;AAEJ,MAAI,SAAS,MAAM;AAEjB,eAAW,WAAW,gBAAgB,cAAc,YAAY;AAChE,aAAS,KAAK,SAAS;AAAA;AAAA;AAI3B,wBAAwB,cAAc,MAAM,SAAS,KAAK;AACxD,MAAI,aAAa,aAAa,IAAI;AAClC,MAAI,WAAW,aAAa;AAC5B,MAAI,gBAAgB;AAEpB,MAAI,UAAU;AACZ,QAAI,MAAuC;AACzC,aAAO,YAAY;AACnB,aAAO,SAAS,kBAAkB,eAAe,SAAS,OAAO;AAAA;AAInE,oBAAgB,SAAS,iBAAiB,SAAS,eAAe,YAAY,eAAe,SAAS,MAAM;AAAA;AAG9G,MAAI,UAAU,SAAS;AAAA,IACrB,UAAU,IAAI;AAAA,IACd,WAAW,IAAI;AAAA,IACf,OAAO,IAAI;AAAA,IACX,qBAAqB,IAAI;AAAA,IACzB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,KACC,cAAc,OAAO;AACxB,MAAI,aAAa;AAAA,IAIf,SAAS;AAAA,IACT,UAAU,aAAa;AAAA,IACvB,YAAY,aAAa;AAAA,IACzB,aAAa,aAAa;AAAA,IAC1B,UAAU,cAAc;AAAA,IACxB,kBAAkB,KAAK;AAAA,IACvB,QAAQ,cAAc,aAAa;AAAA;AAMrC,MAAI;AACJ,MAAI;AACJ,MAAI,sBAAsB;AAC1B,MAAI,kBAAkB;AACtB,MAAI,wBAAwB;AAC5B,MAAI,oBAAoB;AAExB,WAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,QAAI,YAAY,OAAO;AACvB,0BAAsB,aAAa,aAAa,SAAS,gBAAgB;AACzE,sBAAkB,aAAa,aAAa,SAAS,WAAW;AAAA;AAGlE,yBAAsB,iBAAiB;AACrC,WAAO,oBAAoB,sBAAsB,iBAAkB,iBAAgB,KAAK,aAAa,oBAAoB,KAAK,aAAa;AAAA;AAG7I,6BAA2B,iBAAiB,OAAO;AACjD,WAAO,CAAC,KAAK,gBAAgB,sBAAsB,SAAS,oBAAoB,sBAAsB,oBAAoB,UAAW,qBAAoB,SAAS,cAAa,iBAAiB,SAAS,gBAAgB,WAAW,cAAa,iBAAiB,SAAS,gBAAgB;AAAA;AAG7R,yBAAuB,iBAAiB,OAAO;AAC7C,WAAO,CAAC,KAAK,gBAAgB,kBAAkB,SAAS,oBAAoB,sBAAsB,gBAAgB,UAAW,iBAAgB,SAAS,cAAa,iBAAiB,SAAS,WAAW,WAAW,cAAa,iBAAiB,SAAS,WAAW;AAAA;AAGvQ,SAAO,SAAU,iBAAiB,SAAS;AACzC,0BAAsB;AACtB,oBAAgB;AAChB,0BAAsB;AACtB,sBAAkB;AAClB,WAAO,cAAc,WAAW,SAAS;AAAA,MACvC;AAAA,MACA,WAAW,KAAK,YAAY;AAAA,MAE5B,YAAY,UAAU,QAAQ,OAAO;AAAA,OACpC,aAAa;AAAA;AAQlB,iBAAe,KAAK,iBAAiB;AACnC,uBAAmB,QAAS,mBAAkB;AAC9C,WAAO,KAAK,WAAW,IAAI,KAAK,kBAAkB,OAAO,IAAI;AAAA;AAS/D,2BAAyB,KAAK,iBAAiB;AAC7C,uBAAmB,QAAS,mBAAkB;AAC9C,UAAM,OAAO;AACb,QAAI,UAAU,KAAK,iBAAiB;AAEpC,QAAI,CAAC,SAAS;AACZ,UAAI,WAAW,KAAK,kBAAkB;AACtC,aAAO,YAAY,IAAI,KAAK,WAAW,IAAI,UAAU,mBAAmB;AAAA;AAG1E,QAAI,MAAM,KAAK,IAAI,QAAQ,MAAM;AACjC,QAAI,cAAc,WAAW,QAAQ;AACrC,WAAO,cAAc,YAAY,WAAW,OAAO;AAAA;AAuBrD,iBAAe,WAAW,iBAAiB;AACzC,QAAI,MAAuC;AACzC,qBAAe,aAAa;AAAA;AAG9B,uBAAmB,QAAS,mBAAkB;AAC9C,QAAI,SAAQ,KAAK,cAAc,iBAAiB;AAChD,QAAI,cAAc,UAAS,OAAM;AACjC,QAAI,UAAU,UAAS,OAAM;AAC7B,QAAI,YAAY,kBAAkB,iBAAiB,QAAQ;AAC3D,mBAAe,QAAS,WAAU,OAAO;AACzC,eAAW,QAAS,WAAU,UAAU;AACxC,QAAI,MAAM;AAAA,MACR,cAAc,SAAS,eAAe,cAAc;AAAA;AAEtD,QAAI,aAAa,cAAc,iBAAiB;AAIhD,QAAI,YAAY,AAAiB,gBAAgB,YAAY,MAAM,KAAK,OAAO;AAC/E,cAAU,OAAO,WAAW,WAAW,UAAU,UAAU,aAAa,kBAAkB,iBAAiB,SAAS,gBAAgB,MAAM,oBAAoB;AAC9J,QAAI,aAAa,AAAiB,iBAAiB,YAAY,KAAK;AACpE,sBAAkB,WAAW;AAC7B,gBAAY,iCAAiC,WAAW,WAAW;AACnE,iBAAa,oBAAoB,WAAW;AAC5C,cAAU,SAAS;AACnB,WAAO;AAAA;AAST,yBAAuB,WAAW,iBAAiB;AACjD,QAAI,MAAuC;AACzC,qBAAe,qBAAqB;AAAA;AAGtC,uBAAmB,QAAS,mBAAkB;AAC9C,QAAI,YAAY,kBAAkB,iBAAiB,UAAU;AAC7D,QAAI,aAAa,cAAc,iBAAiB;AAChD,QAAI,YAAY,AAAiB,gBAAgB,YAAY,MAAM,MAAM,MAAM;AAC/E,cAAU,OAAO,WAAW,WAAW,UAAU,UAAU,aAAa,kBAAkB,iBAAiB,WAAW,aAAa,kBAAkB,iBAAiB,SAAS,gBAAgB,MAAM,oBAAoB;AACzN,QAAI,aAAa,AAAiB,iBAAiB,YAAY,MAAM;AACrE,sBAAkB,WAAW;AAC7B,gBAAY,iCAAiC,WAAW,WAAW;AACnE,iBAAa,oBAAoB,WAAW;AAC5C,cAAU,SAAS;AACnB,WAAO;AAAA;AAGT,+BAA6B,WAAW,OAAO;AAC7C,aAAS,OAAO,OAAO;AACrB,UAAI,OAAO,OAAO,MAAM;AACtB,kBAAU,OAAO,MAAM;AAAA;AAAA;AAAA;AAK7B,6BAA2B,OAAO,WAAW;AAI3C,QAAI,OAAO;AACT,YAAM,YAAa,WAAU,WAAW,MAAM;AAC9C,YAAM,gBAAiB,WAAU,eAAe,MAAM;AAAA;AAAA;AAS1D,kBAAgB,YAAY,iBAAiB;AAC3C,uBAAmB,QAAS,mBAAkB;AAE9C,QAAI,OAAO,mBAAmB,aAAa;AACzC,UAAI,UAAU,KAAK,cAAc,iBAAiB;AAClD,aAAO,UAAU,QAAQ,kBAAkB,eAAe;AAAA;AAK5D,QAAI,OAAO,wBAAwB,aAAa;AAC9C,aAAO,KAAK,cAAc,iBAAiB;AAAA;AAAA;AAS/C,qBAAmB,KAAK;AACtB,QAAI,SAAS,SAAS,eAAe;AACnC,UAAI,WAAW,SAAS;AACxB,aAAO,gBAAgB,SAAS;AAAA,QAC9B,MAAM;AAAA,SACL;AAAA;AAAA;AAQP,kCAAgC;AAC9B,WAAO,QAAQ;AAAA;AAQjB,gBAAc,KAAK;AACjB,WAAO,AAAiB,QAAQ,KAAK;AAAA;AAAA;AAIzC,uBAAuB,MAAM;AAC3B,MAAI,YAAY;AAChB,OAAK,KAAK,YAAY,SAAU,SAAS;AACvC,QAAI,UAAU,KAAK,iBAAiB;AAEpC,QAAI,CAAC,QAAQ,cAAc;AACzB,UAAI,WAAW,QAAQ;AACvB,UAAI,WAAW,UAAU,YAAY,UAAU,aAAa;AAC5D,eAAS,QAAQ,iBAAiB,KAAK,kBAAkB;AAAA;AAAA;AAG7D,SAAO;AAAA;AAGT,4BAA4B,KAAK,UAAU,WAAW,UAAU,aAAa,OAAO,MAAM;AAQxF,MAAI,CAAC,UAAU;AACb,UAAM,OAAO;AACb;AAAA;AAGF,MAAI,KAAK,mBAAmB,KAAK,UAAU,WAAW,UAAU,aAAa,OAAO;AACpF,QAAM,KAAK,iBAAiB,WAAW;AACvC,QAAM,oBAAoB,IAAI,SAAS,OAAO,SAAS;AACvD,SAAO;AAAA;AAGT,4BAA4B,KAAK,UAAU,WAAW,UAAU,aAAa,OAAO,QAAQ;AAC1F,MAAI,MAAuC;AACzC,WAAO,UAAU;AAAA;AAGnB,MAAI,kBAAkB;AACtB,MAAI,QAAQ;AAEZ,MAAI,YAAY,mBAAmB,UAAU,UAAU,cAMrD;AAEA,sBAAkB,QAAQ,MAAM,eAAe;AAC/C,eAAW;AAAA;AAGb,MAAI,SAAS,CAAC;AACd,MAAI,KAAK;AAET,MAAI,CAAC,IAAI;AACP,SAAK,SAAS;AAEd,QAAI,OAAO;AACT,kBAAY,OAAO;AAAA;AAAA,SAEhB;AAIL,OAAG;AAAA;AAIL,MAAI,SAAS,UAAU,OAAO;AAC5B,OAAG,kBAAkB;AAAA,aACZ,GAAG,iBAAiB;AAC7B,OAAG,kBAAkB;AAAA;AAGvB,oBAAkB,OAAO,MAAM,kBAAkB,OAAO,SAAS,kBAAkB,SAAS,MAAM,kBAAkB,SAAS,SAAS,kBAAkB,KAAK,MAAM,kBAAkB,KAAK,SAAS,kBAAkB,OAAO,MAAM,kBAAkB,OAAO,SAAS;AACpQ,oBAAkB,WAAW;AAC7B,6BAA2B,IAAI,WAAW,UAAU,aAAa,QAAQ;AACzE,2BAAyB,IAAI,WAAW,UAAU,aAAa;AAC/D,iBAAe,KAAK,IAAI,WAAW,UAAU,mBAAmB,aAAa,QAAQ;AAErF,WAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,QAAI,YAAY,OAAO;AAEvB,QAAI,cAAc,QAAQ;AACxB,UAAI,gBAAgB,oBAAoB,UAAU;AAClD,UAAI,gBAAgB,2BAA2B,UAAU,eAAe;AACxE,sBAAgB,WAAW,IAAI,eAAe,eAAe,mBAAmB,QAAQ;AAAA;AAAA;AAI5F,WAAQ,IAAI,UAAU;AAEtB,MAAI,SAAS,SAAS,SAAS;AAC7B,kBAAc,KAAK,IAAI,WAAW,UAAU;AAAA;AAG9C,MAAI,mBAAmB,GAAG;AACxB,UAAM,UAAU,IAAI;AAAA,SACf;AACL,UAAM,IAAI;AAAA;AAGZ,SAAO;AAAA;AAIT,4BAA4B,IAAI,UAAU,aAAa;AACrD,MAAI,UAAU,iBAAiB;AAC/B,MAAI,eAAe,SAAS;AAC5B,MAAI,gBAAgB,SAAS;AAC7B,MAAI,gBAAgB,SAAS;AAC7B,SAEE,YAAY,kCACT,gBAAgB,QAAQ,iBAAiB,QAAQ,qBAAqB,iBAAiB,UAAU,eAAe,kBAAkB,YAAY,mBAAmB,QAAQ,kBAAkB,iBAAiB,WAAW,OAAO,eAAe,YAAY,cAAc,UAAU,QAAQ;AAAA;AAShS,kCAAkC,IAAI,WAAW,UAAU,aAAa,QAAQ;AAI9E,MAAI,cAAc,SAAS;AAE3B,MAAI,gBAAgB,OAAO;AACzB,QAAI,MAAM,GAAG,eAAe;AAC1B,SAAG;AAAA;AAAA,aAEI,aAAa;AACtB,QAAI,WAAW,GAAG;AAElB,QAAI,YAAY,mBAAmB,UAAU,aAAa,cAAc;AACtE,iBAAW;AAAA;AAGb,QAAI,CAAC,UAAU;AACb,iBAAW,SAAS;AAEpB,UAAI,MAAuC;AACzC,eAAO,OAAO,WAAW,oEAAoE,SAAS,OAAO;AAAA;AAG/G,SAAG,YAAY;AAAA;AAGjB,mBAAe,MAAM,UAAU,WAAW,aAAa,MAAM,aAAa,QAAQ;AAAA;AAAA;AAKtF,oCAAoC,IAAI,WAAW,UAAU,aAAa,QAAQ,gBAAgB;AAEhG,MAAI,GAAG,SAAS;AACd;AAAA;AAIF,gBAAc,UAAU,MAAM;AAC9B,gBAAc,UAAU,UAAU;AAOlC,MAAI,iBAAiB,eAAe,OAAO;AAC3C,MAAI,mBAAmB,eAAe,SAAS;AAC/C,MAAI,eAAe,eAAe,KAAK;AACvC,MAAI,iBAAiB,eAAe,OAAO;AAE3C,MAAI,kBAAkB,QAAQ,oBAAoB,QAAQ,kBAAkB,QAAQ,gBAAgB,MAAM;AACxG,QAAI,cAAc,GAAG;AAErB,QAAI,mBAAmB,OAAO;AAC5B,qBAAe,GAAG;AAAA,WACb;AACL,uBAAiB,eAAe,OAAO,SAAS,kBAAkB;AAAA,QAChE,MAAM;AAAA;AAGR,UAAI,CAAC,aAAa;AAChB,sBAAc,SAAS;AACvB,WAAG,eAAe;AAAA,aACb;AAGL,oBAAY;AAAA;AAGd,qBAAe,MAAM,aAAa,WAAW,gBAAgB,MAAM,aAAa,QAAQ;AACxF,UAAI,oBAAoB,kBAAkB,eAAe;AAEzD,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,YAAI,YAAY,OAAO;AAEvB,YAAI,cAAc,QAAQ;AACxB,cAAI,qBAAqB,eAAe,WAAW;AACnD,0BAAgB,WAAW,aAAa,oBAAoB,2BAA2B,gBAAgB,oBAAoB,YAAY,MAAM,OAAO;AAAA;AAAA;AAIxJ,0BAAoB,YAAY,UAAU,YAAY;AAAA;AAAA;AAAA;AAK5D,uBAAuB,UAAU,OAAO,gBAAgB;AACtD,MAAI,WAAW,CAAC,QAAQ,WAAW,oBAAoB,UAAU;AACjE,MAAI,WAAW,CAAC,QAAQ,SAAS,QAAQ,2BAA2B,UAAU,UAAU;AACxF,MAAI,SAAS,SAAS;AACtB,MAAI,QAAQ,WAAW,SAAS,aAAa;AAC7C,MAAI,iBAAiB,SAAS;AAC9B,MAAI,WAAW,CAAC,iBAAiB,OAAO,CAAC,QAAQ,iBAAiB,oBAAoB,gBAAgB;AAEtG,MAAI,YAEJ,gBAAe,YAAY,qBAAqB,UAAU,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,YAAY;AACvF,mBAAe,WAAW;AAC1B,QAAI,gBAAgB,8BAA8B,UAAU,QAAQ,CAAC;AAIrE,QAAI,CAAC,SAAS,cAAc,YAAY;AACtC,cAAQ,cAAc;AAAA;AAGxB,QAAI,CAAC,YAAY,cAAc,aAAa;AAC1C,iBAAW,cAAc;AAAA;AAAA;AAI7B,MAAI,CAAC,SAAS,UAAU;AACtB,QAAI,mBAAmB;AAEvB,KAAC,iBAAiB,QAAS,kBAAiB,OAAO;AAEnD,QAAI,MAAuC;AAEzC,aAAO,iBAAiB,SAAS,QAAQ;AAAA;AAAA;AAI7C,MAAI,OAAO,CAAC,QAAQ,eAAe,SAAS,eAAe;AAC3D,OAAK,MAAM;AACX,OAAK,SAAS;AAAA;AAGhB,6BAA6B,UAAU,OAAO;AAC5C,SAAO,CAAC,QAAQ,WAAW,WAAW,SAAS,SAAS;AAAA;AAG1D,oCAAoC,mBAAmB,aAAa,OAAO;AACzE,MAAI,QAAQ,eAAe,YAAY;AAEvC,MAAI,SAAS,QAAQ,UAAU,YAAY,mBAAmB;AAC5D,YAAQ,kBAAkB;AAAA;AAG5B,SAAO;AAAA;AAkBT,uBAAuB,KAAK,IAAI,WAAW,UAAU,aAAa;AAChE,MAAI,cAAc,SAAS;AAC3B,MAAI,SAAS,cAAc,YAAY,SAAS;AAChD,MAAI,iBAAgB,SAAS;AAE7B,MAAI,SAAS,mBAAkB,YAAY,SAAS;AACpD,MAAI,WAAW,mBAAkB;AAEjC,MAAI,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU;AACnC;AAAA;AAGF,MAAI,QAAQ;AACV,sBAAkB;AAAA,MAChB;AAAA,MACA,aAAa,GAAG,cAAc;AAAA,MAC9B,aAAa,eAAe;AAAA,MAC5B;AAAA,MACA;AAAA,MACA,OAAO;AAAA;AAET;AAAA;AAGF,cAAY,GAAG;AAGf,MAAI,QAAQ;AAEZ,SAAO,QAAQ,QAAQ,SAAS;AAC9B,gBAAY,UAAU,mBAAmB,KAAK,GAAG,QAAQ,QAAQ,WAAW,YAAY,QAAQ,aAAa,IAAI;AAAA;AAGnH,WAAS,IAAI,GAAG,eAAe,GAAG,KAAK,OAAO,KAAK;AAIjD,eAAW,GAAG,QAAQ,IAAI,aAAa;AAAA;AAAA;AAI3C,2BAA2B,SAAS;AAClC,MAAI,mBAAW,QAAQ,aAAa,QAAQ,aAAa,QAAQ,QAAQ,SAAS,IAAI,kBAAkB,OAAO,kBAAkB,OAAO,eAAe;AAAA;AAGzJ,gBAAgB,MAAM,KAAK;AACzB,MAAI,OAAO,QAAQ,KAAK;AACxB,SAAO,QAAQ,OAAO,OAAO,oBAAoB;AAAA;AAGnD,0BAA0B,UAAU,UAAU;AAC5C,MAAI,UAAU,KAAK;AACnB,MAAI,cAAc,YAAY,OAAO,QAAQ,YAAY,YAAY;AACrE,MAAI,QAAQ,YAAY,OAAO,QAAQ,YAAY,YAAY;AAC/D,qBAAmB,QAAQ,KAAK,OAAO,QAAQ,WAAW,aAAa,QAAQ,aAAa,QAAQ,OAAO;AAAA;AAG7G,uBAAuB,UAAU;AAC/B,MAAI,UAAU,KAAK;AACnB,MAAI,QAAQ,QAAQ,YAAY;AAChC,aAAW,OAAO,QAAQ,aAAa,QAAQ;AAAA;AAGjD,oBAAoB,IAAI,aAAa,OAAO;AAC1C,MAAI,IAAI;AACN,QAAI,eAAe,iBAAiB,IAAI;AACxC,mBAAe,AAAY,YAAY,IAAI,cAAc,aAAa;AAAA,MACpE,IAAI,WAAY;AACd,cAAM,OAAO;AAAA;AAAA,SAEZ,MAAM,OAAO;AAAA;AAAA;AAQtB,qBAAqB,OAAO;AAE1B,SAAO,SAAU,OAAM,YAAY,MAAM;AAAA;AAG3C,wBAAwB,OAAO;AAC7B,SAAO,SAAU,QAAO,OAAO,eAAe,OAAO,OAAO;AAAA;;;ACjsCvD,mBAAiB,WAAW;AACjC,YAAU,kBAAkB;AAC5B,YAAU,oBAAoB;AAAA;;;ACEhC,IAAI,SAAQ;AACZ,IAAI,SAAe;AACnB,IAAI,QAAc;AAKlB,IAAI,kBAEJ,WAAY;AACV,8BAA2B;AACzB,SAAK,YAAY;AAMjB,SAAK,qBAAqB;AAAA;AAO5B,mBAAgB,UAAU,SAAS,SAAU,WAAW,kBAAkB,KAAK,aAAa;AAC1F,QAAI,QAAQ,iBAAiB,IAAI;AACjC,QAAI,SAAS,iBAAiB,IAAI;AAGlC,SAAK,aAAa;AAClB,SAAK,oBAAoB;AACzB,SAAK,OAAO;AAIZ,QAAI,CAAC,eAAe,KAAK,eAAe,SAAS,KAAK,gBAAgB,QAAQ;AAC5E;AAAA;AAGF,SAAK,aAAa;AAClB,SAAK,cAAc;AACnB,QAAI,QAAQ,KAAK;AACjB,QAAI,SAAS,KAAK;AAElB,QAAI,CAAC,UAAU,WAAW,QAAQ;AAEhC,eAAS,MAAM;AACf,gBAAU,OAAO;AACjB;AAAA;AAGF,aAAS,MAAM;AACf,cAAU,OAAO;AAEjB,QAAI,WAAW;AACf,SAAK,aAAa,UAAU,OAAO,WAAW,kBAAkB;AAEhE,QAAI,aAAa,SAAS;AAE1B,QAAI,eAAe,KAAK,iBAAiB;AACvC,WAAK,MAAM;AAAA;AAGb,SAAK,kBAAkB;AACvB,QAAI,gBAAgB,KAAK,iBAAiB,KAAK,mBAAmB,WAAW;AAE7E,QAAI,CAAC,OAAO;AACV,cAAQ,KAAK,SAAS,IAAY;AAClC,WAAK,gBAAgB,OAAO,UAAU,WAAW;AACjD,WAAK,cAAc,OAAO,UAAU,WAAW;AAC/C,UAAI,QAAQ,IAAI;AAAA,WACX;AACL,UAAI,gBAAgB,AAAO,MAAM,cAAa,kBAAkB;AAChE,WAAK,gBAAgB,OAAO,UAAU;AACtC,WAAK,cAAc,OAAO,UAAU,eAAe;AAAA;AAGrD,yBAAqB,OAAO,kBAAkB;AAE9C,SAAK,cAAc;AAAA;AAOrB,mBAAgB,UAAU,SAAS,SAAU,KAAK;AAChD,SAAK,MAAM;AAAA;AAOb,mBAAgB,UAAU,UAAU,SAAU,KAAK;AACjD,SAAK,MAAM;AAAA;AAOb,mBAAgB,UAAU,qBAAqB,SAAU,WAAW,kBAAkB;AACpF,QAAI,YAAY,iBAAiB,IAAI;AACrC,QAAI,OAAO,UAAU;AACrB,QAAI,iBAAiB,KAAK,SAAS;AACnC,QAAI,UAAU,iBAAiB,IAAI;AAEnC,QAAI,CAAC,WAAW,CAAC,gBAAgB;AAC/B,aAAO;AAAA;AAGT,QAAI,cAAc,UAAU,aAAa,MAAM;AAC7C,UAAI,qBAAqB,KAAK;AAE9B,UAAI,kBAAkB,KAAK,iBAAiB,oBAAoB;AAC9D,eAAO;AAAA;AAMT,UAAI,SAAS;AACX,YAAI,kBAAkB,AAAuB,YAAY,WAAW;AACpE,YAAI,aAAa,KAAK;AAEtB,eAAO,KAAK,IAAI,WAAW,KAAK,WAAW,MAAM,kBAAkB;AAAA;AAGrE,aAAO;AAAA;AAGT,WAAO,cAAc;AAAA;AAQvB,mBAAgB,UAAU,eAAe,SAAU,UAAU,OAAO,WAAW,kBAAkB,KAAK;AAAA;AAOtG,mBAAgB,UAAU,kBAAkB,SAAU,OAAO,UAAU,WAAW,kBAAkB;AAClG,QAAI,gBAAgB,SAAS;AAE7B,QAAI,eAAe;AACjB,UAAI,YAAY,OAAM,OAAO,YAAY,IAAI,gBAAQ,cAAc,MAAM,OAAM,SAAS;AACxF,YAAM,IAAI;AAAA;AAAA;AAQd,mBAAgB,UAAU,gBAAgB,SAAU,OAAO,UAAU,WAAW,kBAAkB;AAChG,QAAI,SAAS,OAAO;AAClB,UAAI,UAAU,OAAM,OAAO,UAAU,IAAY,aAAK,OAAM,SAAS;AACrE,YAAM,IAAI;AACV,0BAAoB,SAAS;AAAA;AAAA;AAQjC,mBAAgB,UAAU,kBAAkB,SAAU,OAAO,UAAU,cAAa;AAClF,QAAI,YAAY,OAAM,OAAO;AAE7B,QAAI,aAAa,SAAS,SAAS;AACjC,gBAAU,SAAS,SAAS,QAAQ;AACpC,mBAAY,WAAW;AAAA,QACrB,OAAO,SAAS,QAAQ;AAAA;AAAA;AAAA;AAS9B,mBAAgB,UAAU,gBAAgB,SAAU,OAAO,UAAU,cAAa,kBAAkB;AAClG,QAAI,UAAU,OAAM,OAAO;AAE3B,QAAI,SAAS;AACX,cAAQ,SAAS,SAAS,MAAM;AAChC,mBAAY,SAAS;AAAA,QAKnB,GAAG,SAAS,MAAM;AAAA,QAClB,GAAG,SAAS,MAAM;AAAA;AAEpB,0BAAoB,SAAS;AAAA;AAAA;AAQjC,mBAAgB,UAAU,gBAAgB,SAAU,OAAO;AACzD,QAAI,KAAK,aAAa,CAAC,KAAK,uBAAuB;AACjD;AAAA;AAGF,QAAI,mBAAmB,KAAK;AAE5B,QAAI,KAAK,KAAK,KAAK;AAEnB,QAAI,SAAS,KAAK;AAClB,QAAI,cAAc,iBAAiB,SAAS;AAC5C,QAAI,SAAS,iBAAiB,IAAI;AAElC,QAAI,CAAC,YAAY,IAAI,WAAW,CAAC,UAAU,WAAW,QAAQ;AAC5D,gBAAU,GAAG,OAAO;AACpB,WAAK,UAAU;AACf;AAAA;AAGF,QAAI;AAEJ,QAAI,CAAC,KAAK,SAAS;AACjB,eAAS;AACT,eAAS,KAAK,UAAU,AAAQ,WAAW,YAAY,IAAI,SAAS;AAAA,QAClE,QAAQ;AAAA,QACR,WAAW;AAAA,QACX,aAAa,SAAU,GAAG;AAExB,UAAU,KAAK,EAAE;AAAA;AAAA,QAEnB,aAAa,MAAK,KAAK,mBAAmB,MAAM,GAAG;AAAA,QACnD,OAAO,MAAK,KAAK,mBAAmB;AAAA,QACpC,WAAW,MAAK,KAAK,kBAAkB;AAAA;AAEzC,SAAG,IAAI;AAAA;AAGT,yBAAqB,QAAQ,kBAAkB;AAE/C,WAAO,SAAS,YAAY,aAAa,MAAM,CAAC,SAAS,eAAe,eAAe,WAAW,eAAe,cAAc,iBAAiB;AAEhJ,QAAI,aAAa,YAAY,IAAI;AAEjC,QAAI,CAAC,AAAO,QAAQ,aAAa;AAC/B,mBAAa,CAAC,YAAY;AAAA;AAG5B,WAAO,SAAS,WAAW,KAAK;AAChC,WAAO,SAAS,WAAW,KAAK;AAChC,IAAa,eAAe,MAAM,0BAA0B,YAAY,IAAI,eAAe,GAAG;AAE9F,SAAK,mBAAmB,OAAO;AAAA;AAGjC,mBAAgB,UAAU,qBAAqB,SAAU,OAAO,QAAQ;AACtE,iBAAY,KAAK,mBAAmB,CAAC,UAAU,KAAK,gBAAgB,KAAK,SAAS,oBAAoB,KAAK,mBAAmB,OAAO,KAAK,YAAY,KAAK;AAAA;AAG7J,mBAAgB,UAAU,oBAAoB,SAAU,IAAI,IAAI;AAC9D,QAAI,SAAS,KAAK;AAElB,QAAI,CAAC,QAAQ;AACX;AAAA;AAGF,SAAK,YAAY;AAEjB,QAAI,QAAQ,KAAK,sBAAsB,oBAAoB,SAAS,CAAC,IAAI,KAAK,KAAK,YAAY,KAAK;AACpG,SAAK,eAAe;AACpB,WAAO;AACP,WAAO,KAAK,oBAAoB;AAChC,WAAM,QAAQ,WAAW;AAEzB,SAAK;AAAA;AAOP,mBAAgB,UAAU,yBAAyB,WAAY;AAC7D,QAAI,SAAS,KAAK;AAElB,QAAI,CAAC,QAAQ;AACX;AAAA;AAGF,QAAI,cAAc,KAAK;AACvB,QAAI,YAAY,KAAK;AAErB,SAAK,KAAK,eAAe;AAAA,MACvB,MAAM;AAAA,MACN,GAAG,YAAY,YAAY;AAAA,MAC3B,GAAG,YAAY,YAAY;AAAA,MAC3B,eAAe,YAAY;AAAA,MAC3B,UAAU,CAAC;AAAA,QACT,SAAS,UAAU,KAAK;AAAA,QACxB,WAAW,UAAU;AAAA;AAAA;AAAA;AAK3B,mBAAgB,UAAU,mBAAmB,WAAY;AACvD,SAAK,YAAY;AACjB,QAAI,SAAS,KAAK;AAElB,QAAI,CAAC,QAAQ;AACX;AAAA;AAGF,QAAI,QAAQ,KAAK,kBAAkB,IAAI;AAKvC,SAAK,mBAAmB;AAIxB,SAAK,KAAK,eAAe;AAAA,MACvB,MAAM;AAAA;AAAA;AAQV,mBAAgB,UAAU,QAAQ,SAAU,KAAK;AAC/C,SAAK,aAAa;AAClB,SAAK,cAAc;AACnB,QAAI,KAAK,IAAI;AACb,QAAI,QAAQ,KAAK;AACjB,QAAI,SAAS,KAAK;AAElB,QAAI,MAAM,OAAO;AACf,WAAK,kBAAkB;AACvB,eAAS,GAAG,OAAO;AACnB,gBAAU,GAAG,OAAO;AACpB,WAAK,SAAS;AACd,WAAK,UAAU;AACf,WAAK,eAAe;AAAA;AAAA;AAQxB,mBAAgB,UAAU,UAAU,WAAY;AAAA;AAGhD,mBAAgB,UAAU,aAAa,SAAU,IAAI,IAAI,WAAW;AAClE,gBAAY,aAAa;AACzB,WAAO;AAAA,MACL,GAAG,GAAG;AAAA,MACN,GAAG,GAAG,IAAI;AAAA,MACV,OAAO,GAAG;AAAA,MACV,QAAQ,GAAG,IAAI;AAAA;AAAA;AAInB,SAAO;AAAA;AAGT,sBAAqB,gBAAgB,eAAe,IAAI,OAAO;AAE7D,MAAI,CAAC,WAAW,OAAM,IAAI,UAAU,QAAQ;AAC1C,WAAM,IAAI,WAAW;AACrB,oBAAgB,AAAQ,YAAY,IAAI,OAAO,kBAAmB,IAAG,iBAAiB,GAAG,KAAK;AAAA;AAAA;AAIlG,oBAAoB,WAAW,UAAU;AACvC,MAAI,AAAO,SAAS,cAAc,AAAO,SAAS,WAAW;AAC3D,QAAI,WAAW;AACf,IAAO,KAAK,UAAU,SAAU,MAAM,KAAK;AACzC,iBAAW,YAAY,WAAW,UAAU,MAAM;AAAA;AAEpD,WAAO,CAAC,CAAC;AAAA,SACJ;AACL,WAAO,cAAc;AAAA;AAAA;AAIzB,6BAA6B,SAAS,kBAAkB;AACtD,UAAQ,iBAAiB,IAAI,CAAC,SAAS,WAAW,SAAS;AAAA;AAG7D,6BAA6B,OAAO;AAClC,SAAO;AAAA,IACL,GAAG,MAAM,KAAK;AAAA,IACd,GAAG,MAAM,KAAK;AAAA,IACd,UAAU,MAAM,YAAY;AAAA;AAAA;AAIhC,8BAA8B,OAAO,kBAAkB,QAAQ;AAC7D,MAAI,IAAI,iBAAiB,IAAI;AAC7B,MAAI,SAAS,iBAAiB,IAAI;AAClC,WAAS,MAAM,SAAS,SAAU,IAAI;AACpC,QAAI,GAAG,SAAS,SAAS;AACvB,WAAK,QAAS,IAAG,IAAI;AACrB,gBAAU,QAAS,IAAG,SAAS;AAC/B,SAAG,SAAS;AAAA;AAAA;AAAA;AAKlB,IAAO,0BAAQ;;;AC/ZR,sBAAsB,kBAAkB;AAC7C,MAAI,kBAAkB,iBAAiB,IAAI;AAC3C,MAAI,aAAa,iBAAiB,SAAS,kBAAkB;AAC7D,MAAI;AAEJ,MAAI,oBAAoB,QAAQ;AAC9B,YAAQ,WAAW;AACnB,UAAM,OAAO;AAAA,aACJ,oBAAoB,UAAU;AACvC,YAAQ,WAAW;AACnB,UAAM,SAAS;AAAA;AAGjB,SAAO;AAAA;AAMF,4BAA4B,UAAU,WAAW,kBAAkB,KAAK,UAAU;AACvF,MAAI,QAAQ,iBAAiB,IAAI;AACjC,MAAI,OAAO,cAAc,OAAO,UAAU,MAAM,UAAU,SAAS,iBAAiB,IAAI,sBAAsB;AAAA,IAC5G,WAAW,iBAAiB,IAAI,CAAC,SAAS;AAAA,IAC1C,WAAW,iBAAiB,IAAI,CAAC,SAAS;AAAA;AAE5C,MAAI,aAAa,iBAAiB,SAAS;AAC3C,MAAI,WAAW,AAAW,mBAAkB,WAAW,IAAI,cAAc;AACzE,MAAI,OAAO,WAAW;AACtB,MAAI,WAAW,AAAY,gBAAgB,MAAM;AACjD,MAAI,YAAW,SAAS;AACxB,MAAI,QAAQ,SAAS,QAAQ,SAAS,KAAK,SAAS;AACpD,MAAI,SAAS,SAAS,SAAS,SAAS,KAAK,SAAS;AAEtD,MAAI,QAAQ,SAAS;AACrB,YAAU,WAAY,WAAS,MAAM;AACrC,YAAU,YAAa,WAAS,MAAM,QAAQ;AAC9C,MAAI,gBAAgB,SAAS;AAC7B,oBAAkB,YAAa,WAAS,MAAM;AAC9C,oBAAkB,YAAa,WAAS,MAAM,SAAS;AAEvD,qBAAmB,WAAU,OAAO,QAAQ;AAC5C,MAAI,UAAU,WAAW,IAAI;AAE7B,MAAI,CAAC,WAAW,YAAY,QAAQ;AAClC,cAAU,UAAU,IAAI,CAAC,YAAY,aAAa;AAAA;AAGpD,WAAS,QAAQ;AAAA,IAEf,GAAG,UAAS;AAAA,IACZ,GAAG,UAAS;AAAA,IACZ,OAAO,gBAAgB,YAAY;AAAA,MACjC;AAAA,MACA;AAAA,MACA,MAAM,WAAW;AAAA,MACjB,SAAS;AAAA,MACT,iBAAiB;AAAA;AAAA,IAGnB,IAAI;AAAA;AAAA;AAIR,4BAA4B,WAAU,OAAO,QAAQ,KAAK;AACxD,MAAI,YAAY,IAAI;AACpB,MAAI,aAAa,IAAI;AACrB,YAAS,KAAK,KAAK,IAAI,UAAS,KAAK,OAAO,aAAa;AACzD,YAAS,KAAK,KAAK,IAAI,UAAS,KAAK,QAAQ,cAAc;AAC3D,YAAS,KAAK,KAAK,IAAI,UAAS,IAAI;AACpC,YAAS,KAAK,KAAK,IAAI,UAAS,IAAI;AAAA;AAG/B,uBAAuB,OAAO,MAAM,SAAS,mBAAmB,KAAK;AAC1E,UAAQ,KAAK,MAAM,MAAM;AACzB,MAAI,OAAO,KAAK,MAAM,SAAS;AAAA,IAC7B;AAAA,KACC;AAAA,IAGD,WAAW,IAAI;AAAA;AAEjB,MAAI,YAAY,IAAI;AAEpB,MAAI,WAAW;AACb,QAAI,WAAW;AAAA,MACb,OAAO,AAAW,gBAAgB,MAAM;AAAA,QACtC;AAAA;AAAA,MAEF,eAAe,KAAK;AAAA,MACpB,WAAW,KAAK;AAAA,MAChB,YAAY;AAAA;AAEd,IAAO,KAAK,mBAAmB,SAAU,SAAS;AAChD,UAAI,SAAS,QAAQ,iBAAiB,QAAQ;AAC9C,UAAI,YAAY,QAAQ;AACxB,UAAI,aAAa,UAAU,OAAO,cAAc;AAChD,oBAAc,SAAS,WAAW,KAAK;AAAA;AAGzC,QAAI,AAAO,SAAS,YAAY;AAC9B,aAAO,UAAU,QAAQ,WAAW;AAAA,eAC3B,AAAO,WAAW,YAAY;AACvC,aAAO,UAAU;AAAA;AAAA;AAIrB,SAAO;AAAA;AAEF,gCAAgC,MAAM,OAAO,YAAY;AAC9D,MAAI,aAAY,AAAO;AACvB,EAAO,OAAO,YAAW,YAAW,WAAW;AAC/C,EAAO,UAAU,YAAW,YAAW,WAAW;AAClD,SAAO,AAAQ,gBAAe,CAAC,KAAK,YAAY,QAAS,YAAW,eAAe,KAAM,YAAW,kBAAkB,KAAM,YAAW,eAAe,KAAK;AAAA;AAEtJ,2CAA2C,OAAO,UAAU,YAAY,WAAW,kBAAkB,KAAK;AAE/G,MAAI,aAAa,oBAAY,gBAAgB,WAAW,UAAU,GAAG,WAAW;AAChF,aAAW,cAAc,iBAAiB,IAAI,CAAC,SAAS;AACxD,qBAAmB,UAAU,WAAW,kBAAkB,KAAK;AAAA,IAC7D,UAAU,uBAAuB,UAAU,MAAM,OAAO;AAAA,IACxD,OAAO,WAAW;AAAA,IAClB,eAAe,WAAW;AAAA;AAAA;AAGvB,uBAAuB,IAAI,IAAI,WAAW;AAC/C,cAAY,aAAa;AACzB,SAAO;AAAA,IACL,IAAI,GAAG;AAAA,IACP,IAAI,GAAG,IAAI;AAAA,IACX,IAAI,GAAG;AAAA,IACP,IAAI,GAAG,IAAI;AAAA;AAAA;AAGR,uBAAuB,IAAI,IAAI,WAAW;AAC/C,cAAY,aAAa;AACzB,SAAO;AAAA,IACL,GAAG,GAAG;AAAA,IACN,GAAG,GAAG,IAAI;AAAA,IACV,OAAO,GAAG;AAAA,IACV,QAAQ,GAAG,IAAI;AAAA;AAAA;AAGZ,yBAAyB,IAAI,IAAI,IAAI,GAAG,YAAY,UAAU;AACnE,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,WAAW;AAAA;AAAA;;;ACzJf,IAAI,uBAEJ,SAAU,QAAQ;AAChB,YAAU,uBAAsB;AAEhC,mCAAgC;AAC9B,WAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAAA;AAO7D,wBAAqB,UAAU,eAAe,SAAU,UAAU,OAAO,WAAW,kBAAkB,KAAK;AACzG,QAAI,OAAO,UAAU;AACrB,QAAI,OAAO,KAAK;AAChB,QAAI,kBAAkB,iBAAiB,IAAI;AAC3C,QAAI,cAAc,aAAa,MAAM,MAAM,aAAa,MAAM;AAC9D,QAAI,aAAa,KAAK,cAAc,KAAK,YAAY,OAAO;AAE5D,QAAI,mBAAmB,oBAAoB,QAAQ;AACjD,UAAI,UAAU,AAAW,aAAa;AACtC,UAAI,gBAAgB,oBAAoB,iBAAiB,MAAM,YAAY;AAC3E,oBAAc,QAAQ;AACtB,eAAS,aAAa,cAAc;AACpC,eAAS,UAAU;AAAA;AAGrB,QAAI,aAAa,AAAoB,QAAO,KAAK,OAAO;AACxD,IAAW,kCACX,OAAO,UAAU,YAAY,WAAW,kBAAkB;AAAA;AAO5D,wBAAqB,UAAU,qBAAqB,SAAU,OAAO,WAAW,kBAAkB;AAChG,QAAI,aAAa,AAAoB,QAAO,UAAU,KAAK,KAAK,OAAO,WAAW;AAAA,MAChF,aAAa;AAAA;AAGf,eAAW,cAAc,iBAAiB,IAAI,CAAC,UAAU;AACzD,QAAI,MAAM,AAAW,uBAAuB,UAAU,MAAM,OAAO;AACnE,WAAO;AAAA,MACL,GAAG,IAAI;AAAA,MACP,GAAG,IAAI;AAAA,MACP,UAAU,WAAW,WAAY,YAAW,iBAAiB,IAAI,KAAK,KAAK;AAAA;AAAA;AAQ/E,wBAAqB,UAAU,wBAAwB,SAAU,YAAW,OAAO,WAAW,kBAAkB;AAC9G,QAAI,OAAO,UAAU;AACrB,QAAI,OAAO,KAAK;AAChB,QAAI,aAAa,KAAK,gBAAgB;AACtC,QAAI,cAAc,aAAa,MAAM,MAAM,aAAa,MAAM;AAC9D,QAAI,WAAW,KAAK,QAAQ,MAAM,IAAI;AACtC,QAAI,eAAe,CAAC,WAAU,GAAG,WAAU;AAC3C,iBAAa,aAAa,MAAM;AAChC,iBAAa,YAAY,KAAK,IAAI,WAAW,IAAI,aAAa;AAC9D,iBAAa,YAAY,KAAK,IAAI,WAAW,IAAI,aAAa;AAC9D,QAAI,mBAAoB,aAAY,KAAK,YAAY,MAAM;AAC3D,QAAI,cAAc,CAAC,kBAAkB;AACrC,gBAAY,YAAY,aAAa;AAErC,QAAI,iBAAiB,CAAC;AAAA,MACpB,eAAe;AAAA,OACd;AAAA,MACD,OAAO;AAAA;AAET,WAAO;AAAA,MACL,GAAG,aAAa;AAAA,MAChB,GAAG,aAAa;AAAA,MAChB,UAAU,WAAU;AAAA,MACpB;AAAA,MACA,eAAe,eAAe;AAAA;AAAA;AAIlC,SAAO;AAAA,EACP;AAEF,sBAAsB,MAAM,MAAM;AAChC,MAAI,MAAM;AACV,MAAI,KAAK,MAAM,eAAe,KAAK;AACnC,SAAO,KAAK,aAAa;AAAA;AAG3B,IAAI,sBAAsB;AAAA,EACxB,MAAM,SAAU,MAAM,YAAY,aAAa;AAC7C,QAAI,cAAc,AAAW,cAAc,CAAC,YAAY,YAAY,KAAK,CAAC,YAAY,YAAY,KAAK,gBAAgB;AACvH,WAAO;AAAA,MACL,MAAM;AAAA,MACN,kBAAkB;AAAA,MAClB,OAAO;AAAA;AAAA;AAAA,EAGX,QAAQ,SAAU,MAAM,YAAY,aAAa;AAC/C,QAAI,YAAY,KAAK,IAAI,GAAG,KAAK;AACjC,QAAI,OAAO,YAAY,KAAK,YAAY;AACxC,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO,AAAW,cAAc,CAAC,aAAa,YAAY,GAAG,YAAY,KAAK,CAAC,WAAW,OAAO,gBAAgB;AAAA;AAAA;AAAA;AAKvH,yBAAyB,MAAM;AAC7B,SAAO,KAAK,QAAQ,MAAM,IAAI;AAAA;AAGhC,IAAO,+BAAQ;;;ACrHf,IAAI,mBAEJ,SAAU,QAAQ;AAChB,YAAU,mBAAkB;AAE5B,+BAA4B;AAC1B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,kBAAiB;AAC9B,WAAO;AAAA;AAGT,oBAAiB,OAAO;AACxB,oBAAiB,gBAAgB;AAAA,IAE/B,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,MAAM;AAAA,IAGN,MAAM;AAAA,IACN,gBAAgB;AAAA,IAChB,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IAGN,WAAW;AAAA,IACX,yBAAyB;AAAA,IACzB,WAAW;AAAA,MACT,OAAO;AAAA,MACP,OAAO;AAAA,MACP,MAAM;AAAA;AAAA,IAER,aAAa;AAAA,MACX,OAAO;AAAA;AAAA,IAET,OAAO;AAAA,MACL,MAAM;AAAA,MACN,WAAW;AAAA,MACX,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,SAAS,CAAC,GAAG,GAAG,GAAG;AAAA,MACnB,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,aAAa;AAAA,MACb,cAAc;AAAA;AAAA,IAEhB,QAAQ;AAAA,MACN,MAAM;AAAA,MAEN,MAAM;AAAA,MACN,MAAM;AAAA,MAEN,QAAQ;AAAA,MAGR,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,eAAe;AAAA,MACf,eAAe;AAAA,MAEf,UAAU;AAAA;AAAA;AAGd,SAAO;AAAA,EACP;AAEF,IAAO,2BAAQ;;;ACvEf,IAAI,SAAQ;AACZ,IAAI,QAAc;AASX,kBAAkB,KAAK,KAAK,SAAS;AAC1C,MAAI,YAAI,MAAM;AACZ;AAAA;AAGF,MAAI,KAAK,IAAI;AACb,SAAM,IAAI,WAAY,QAAM,IAAI,UAAU;AAC1C,sBAAoB,IAAI;AACxB,MAAI,SAAS,OAAM,IAAI,QAAQ,QAAS,QAAM,IAAI,QAAQ,OAAO;AACjE,SAAO,UAAU;AAAA;AAGnB,6BAA6B,IAAI,KAAK;AACpC,MAAI,OAAM,IAAI,aAAa;AACzB;AAAA;AAGF,SAAM,IAAI,cAAc;AACxB,aAAW,SAAS,AAAO,MAAM,SAAS;AAC1C,aAAW,aAAa,AAAO,MAAM,SAAS;AAE9C,aAAW,aAAa;AAExB,sBAAoB,WAAW,IAAI;AACjC,OAAG,GAAG,WAAW,SAAU,GAAG;AAC5B,UAAI,MAAM,mBAAmB;AAC7B,YAAK,OAAM,IAAI,SAAS,SAAU,QAAQ;AACxC,kBAAU,GAAG,QAAQ,GAAG,IAAI;AAAA;AAE9B,6BAAuB,IAAI,UAAU;AAAA;AAAA;AAAA;AAK3C,gCAAgC,UAAU,KAAK;AAC7C,MAAI,UAAU,SAAS,QAAQ;AAC/B,MAAI,UAAU,SAAS,QAAQ;AAC/B,MAAI;AAEJ,MAAI,SAAS;AACX,sBAAkB,SAAS,QAAQ,UAAU;AAAA,aACpC,SAAS;AAClB,sBAAkB,SAAS,QAAQ,UAAU;AAAA;AAG/C,MAAI,iBAAiB;AACnB,oBAAgB,iBAAiB;AACjC,QAAI,eAAe;AAAA;AAAA;AAIvB,iBAAiB,QAAQ,GAAG,iBAAgB;AAC1C,SAAO,QAAQ,SAAS,MAAM;AAAA;AAGhC,iBAAiB,aAAa,QAAQ,GAAG,iBAAgB;AACvD,SAAO,QAAQ,aAAa,GAAG;AAAA;AAGjC,4BAA4B,KAAK;AAC/B,MAAI,WAAW;AAAA,IACb,SAAS;AAAA,IACT,SAAS;AAAA;AAOX,MAAI,kBAAiB,SAAU,SAAS;AACtC,QAAI,cAAc,SAAS,QAAQ;AAEnC,QAAI,aAAa;AACf,kBAAY,KAAK;AAAA,WACZ;AACL,cAAQ,iBAAiB;AACzB,UAAI,eAAe;AAAA;AAAA;AAIvB,SAAO;AAAA,IACL,gBAAgB;AAAA,IAChB;AAAA;AAAA;AAIG,oBAAoB,KAAK,KAAK;AACnC,MAAI,YAAI,MAAM;AACZ;AAAA;AAGF,MAAI,KAAK,IAAI;AACb,MAAI,SAAU,QAAM,IAAI,WAAW,IAAI;AAEvC,MAAI,QAAQ;AACV,WAAM,IAAI,QAAQ,OAAO;AAAA;AAAA;;;ACxG7B,IAAI,kBAEJ,SAAU,QAAQ;AAChB,YAAU,kBAAiB;AAE3B,8BAA2B;AACzB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,iBAAgB;AAC7B,WAAO;AAAA;AAGT,mBAAgB,UAAU,SAAS,SAAU,wBAAwB,SAAS,KAAK;AACjF,QAAI,qBAAqB,QAAQ,aAAa;AAC9C,QAAI,YAAY,uBAAuB,IAAI,gBAAgB,sBAAsB,mBAAmB,IAAI,gBAAgB;AAGxH,IAAe,SAAS,eAAe,KAAK,SAAU,aAAa,GAAG,iBAAgB;AAEpF,UAAI,cAAc,UAAW,iBAAgB,WAAW,UAAU,QAAQ,gBAAgB,IAAI;AAC5F,wBAAe;AAAA,UACb,MAAM;AAAA,UACN;AAAA,UACA,GAAG,KAAK,EAAE;AAAA,UACV,GAAG,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAMlB,mBAAgB,UAAU,SAAS,SAAU,SAAS,KAAK;AACzD,IAAe,WAAW,eAAe;AAAA;AAG3C,mBAAgB,UAAU,UAAU,SAAU,SAAS,KAAK;AAC1D,IAAe,WAAW,eAAe;AAAA;AAG3C,mBAAgB,OAAO;AACvB,SAAO;AAAA,EACP;AAEF,IAAO,0BAAQ;;;ACtCA,6BAA6B,QAAQ,SAAS;AAC3D,MAAI,QAAQ;AACZ,MAAI,cAAc,OAAO;AACzB,MAAI;AAEJ,MAAI,eAAe,QAAQ,CAAE,eAAc,QAAQ,iBAAiB,eAAe;AACjF,WAAO;AAAA,MACL,OAAO;AAAA;AAAA;AAIX,MAAI,OAAO,YAAY;AACvB,MAAI,YAAY,AAAU,eAAe,MAAM;AAE/C,MAAI,aAAa,QAAQ,YAAY,KAAK,AAAO,QAAQ,YAAY;AACnE,WAAO;AAAA,MACL,OAAO;AAAA;AAAA;AAIX,MAAI,KAAK,KAAK,iBAAiB;AAC/B,MAAI,WAAW,YAAY;AAE3B,MAAI,YAAY,oBAAoB;AAClC,YAAQ,YAAY,mBAAmB,cAAc;AAAA,aAC5C,YAAY,SAAS,aAAa;AAC3C,QAAI,OAAO,WAAW;AACpB,UAAI,WAAW,SAAS;AACxB,UAAI,aAAY,SAAS,aAAa;AACtC,UAAI,eAAe,WAAU;AAC7B,UAAI,cAAc,SAAS;AAC3B,UAAI,iBAAiB,iBAAiB,OAAO,iBAAiB,WAAW,IAAI;AAC7E,UAAI,UAAU,KAAK,aAAa;AAChC,UAAI,cAAc;AAClB,kBAAY,kBAAkB,KAAK,IAAI,SAAS;AAChD,kBAAY,IAAI,kBAAkB,KAAK,IAAI,KAAK,mBAAmB,yBAAyB;AAC5F,cAAQ,SAAS,YAAY,gBAAgB;AAAA,WACxC;AACL,cAAQ,SAAS,YAAY,KAAK,UAAU,AAAO,IAAI,SAAS,YAAY,SAAU,KAAK;AACzF,eAAO,KAAK,aAAa;AAAA,UACvB,eAAe;AAAA;AAAA,aAEZ,IAAI;AAEb,QAAI,OAAO,GAAG,kBAAkB;AAChC,SAAK,eAAe,GAAG;AACvB,YAAQ,CAAC,KAAK,IAAI,KAAK,QAAQ,GAAG,KAAK,IAAI,KAAK,SAAS;AAAA;AAG3D,SAAO;AAAA,IACL;AAAA,IACA;AAAA;AAAA;;;ACvDJ,IAAI,SAAQ;AAQG,qBAAqB,SAAS,SAAS,KAAK;AACzD,MAAI,cAAc,QAAQ;AAC1B,MAAI,QAAQ,CAAC,QAAQ,GAAG,QAAQ;AAChC,MAAI,SAAS;AACb,MAAI,kBAAiB,QAAQ,kBAAkB,KAAK,IAAI,gBAAgB;AACxE,MAAI,mBAAmB,QAAQ,aAAa,eAAe;AAG3D,MAAI,CAAC,kBAAkB;AACrB;AAAA;AAGF,MAAI,aAAa,QAAQ;AAGvB,YAAQ,oBAAoB;AAAA,MAC1B,aAAa,OAAO;AAAA,MAGpB,WAAW,OAAO;AAAA,OACjB,SAAS;AAAA;AAGd,MAAI,iBAAiB,aAAa;AAKlC,MAAI,gBAAgB,OAAO;AAC3B,MAAI,WAAW,iBAAiB;AAChC,MAAI,aAAa,gBAAgB,WAAW,aAAa;AACzD,MAAI,gBAAgB;AACpB,MAAI,eAAe;AACnB,MAAI,iBAAiB;AAAA,IACnB,MAAM;AAAA,IACN,KAAK;AAAA;AAEP,MAAI,WAAW;AAAA,IACb,aAAa,MAAM,aAAa;AAAA,IAChC,aAAa,MAAM,aAAa;AAAA;AAGlC,OAAK,iBAAiB,aAAa,SAAU,UAAU,aAAa;AAElE,QAAI,wBAAwB,kBAAkB,SAAS,aAAa;AACpE,SAAK,iBAAiB,iBAAiB,cAAc,SAAU,UAAU,KAAK;AAC5E,UAAI,OAAO,SAAS;AACpB,UAAI,gBAAgB,kBAAkB,eAAe;AAErD,UAAI,CAAC,cAAc,yBAA0B,EAAC,iBAAiB,gBAAgB;AAC7E,YAAI,MAAM,iBAAiB,cAAc;AAEzC,YAAI,OAAO,QAAQ,CAAC,gBAAgB;AAClC,gBAAM,KAAK,YAAY;AAAA;AAGzB,eAAO,QAAQ,cAAc,UAAU,KAAK,UAAU,OAAO;AAAA;AAAA;AAAA;AAKnE,MAAI,eAAe;AACnB,OAAK,UAAU,SAAU,aAAa,QAAQ;AAC5C,QAAI,YAAY,YAAY;AAE5B,QAAI,aAAa,CAAC,aAAa,SAAS;AACtC,WAAK,UAAU,UAAU,SAAU,aAAa,QAAQ;AACtD,YAAI,aAAa,aAAa;AAE9B,YAAI,gBAAgB,eAAe,YAAY;AAC7C,cAAI,MAAM,WAAW;AACrB,oBAAU,UAAW,OAAM,YAAY,KAAK,MAAM,MAAM,UAAU,OAAO,KAAK,gBAAgB,cAAc,gBAAgB;AAC5H,uBAAa,YAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAKxC,OAAK,cAAc,SAAU,KAAK,QAAQ;AACxC,kBAAc,SAAS,SAAS,KAAK,UAAU,MAAM;AAAA;AAEvD,sBAAoB,cAAc,UAAU;AAC5C,0BAAwB,gBAAgB,OAAO,SAAS;AACxD,2BAAyB,UAAU,iBAAgB;AACnD,SAAO;AAAA;AAGT,uBAAuB,UAAU,UAAU,UAAU,QAAQ,cAAc;AACzE,MAAI,OAAO,SAAS;AAEpB,MAAI,KAAK,MAAM,aAAa,CAAC,KAAK,YAAY,WAAW;AACvD;AAAA;AAGF,MAAI,CAAC,SAAS,eAAe;AAC3B,aAAS,YAAY,UAAU;AAC/B;AAAA;AAIF,MAAI,cAAc,sBAAsB,UAAU;AAClD,MAAI,eAAe,YAAY;AAC/B,MAAI,cAAc,YAAY;AAG9B,MAAI,aAAa,MAAM,aAAa,eAAe,MAAM;AACvD,WAAO,cAAc,aAAa;AAAA;AAKpC,MAAI,CAAC,UAAU,SAAS,MAAM;AAC5B,QAAI,KAAK,YAAY,gBAAgB,eAAe,MAAM;AACxD,iBAAW;AAAA;AAAA;AAIf,WAAS,YAAY,UAAU,UAAU;AAGzC,WAAS,YAAY,UAAU,aAAa;AAAA;AAG9C,+BAA+B,OAAO,UAAU;AAC9C,MAAI,OAAO,SAAS;AACpB,MAAI,MAAM,KAAK;AACf,MAAI,cAAc;AAClB,MAAI,eAAe;AACnB,MAAI,UAAU,OAAO;AACrB,MAAI,UAAU;AACd,OAAK,SAAS,cAAc,SAAU,QAAQ,KAAK;AACjD,QAAI,UAAU,OAAO,UAAU,iBAAiB;AAChD,QAAI;AACJ,QAAI;AAEJ,QAAI,OAAO,oBAAoB;AAC7B,UAAI,SAAS,OAAO,mBAAmB,SAAS,OAAO;AACvD,oBAAc,OAAO;AACrB,2BAAqB,OAAO;AAAA,WACvB;AACL,oBAAc,OAAO,UAAU,iBAAiB,QAAQ,IAAI,OAG5D,KAAK,SAAS,aAAa,MAAM;AAEjC,UAAI,CAAC,YAAY,QAAQ;AACvB;AAAA;AAGF,2BAAqB,OAAO,UAAU,IAAI,QAAQ,IAAI,YAAY;AAAA;AAGpE,QAAI,sBAAsB,QAAQ,CAAC,SAAS,qBAAqB;AAC/D;AAAA;AAGF,QAAI,QAAO,QAAQ;AACnB,QAAI,QAAO,KAAK,IAAI;AAEpB,QAAI,SAAQ,SAAS;AACnB,UAAI,QAAO,WAAW,SAAQ,KAAK,UAAU,GAAG;AAC9C,kBAAU;AACV,kBAAU;AACV,sBAAc;AACd,qBAAa,SAAS;AAAA;AAGxB,WAAK,aAAa,SAAU,WAAW;AACrC,qBAAa,KAAK;AAAA,UAChB,aAAa,OAAO;AAAA,UACpB,iBAAiB;AAAA,UACjB,WAAW,OAAO,UAAU,YAAY;AAAA;AAAA;AAAA;AAAA;AAKhD,SAAO;AAAA,IACL;AAAA,IACA;AAAA;AAAA;AAIJ,qBAAqB,cAAc,UAAU,OAAO,cAAc;AAChE,eAAa,SAAS,OAAO;AAAA,IAC3B;AAAA,IACA;AAAA;AAAA;AAIJ,qBAAqB,gBAAgB,UAAU,aAAa,OAAO;AACjE,MAAI,eAAe,YAAY;AAC/B,MAAI,OAAO,SAAS;AACpB,MAAI,YAAY,KAAK;AACrB,MAAI,mBAAmB,SAAS;AAGhC,MAAI,CAAC,SAAS,kBAAkB,CAAC,aAAa,QAAQ;AACpD;AAAA;AAGF,MAAI,gBAAgB,SAAS,SAAS;AACtC,MAAI,cAAc,AAAY,QAAQ;AACtC,MAAI,eAAe,eAAe,IAAI;AAEtC,MAAI,CAAC,cAAc;AACjB,mBAAe,eAAe,IAAI,eAAe;AAAA,MAC/C,YAAY,cAAc;AAAA,MAC1B,eAAe,cAAc;AAAA,MAC7B,cAAc,cAAc;AAAA,MAC5B,kBAAkB,cAAc;AAAA,MAChC,YAAY;AAAA;AAEd,mBAAe,KAAK,KAAK;AAAA;AAG3B,eAAa,WAAW,KAAK;AAAA,IAC3B,SAAS,KAAK;AAAA,IACd,WAAW,UAAU;AAAA,IACrB,UAAU,UAAU;AAAA,IACpB,QAAQ,UAAU;AAAA,IAClB;AAAA,IAKA,eAAe;AAAA,MACb,WAAW,iBAAiB,IAAI,CAAC,SAAS;AAAA,MAC1C,WAAW,iBAAiB,IAAI,CAAC,SAAS;AAAA;AAAA,IAE5C,mBAAmB,aAAa;AAAA;AAAA;AAIpC,6BAA6B,cAAc,UAAU,eAAe;AAClE,MAAI,iBAAiB,cAAc,WAAW;AAE9C,OAAK,UAAU,SAAU,UAAU,KAAK;AACtC,QAAI,SAAS,SAAS,iBAAiB;AACvC,QAAI,UAAU,aAAa;AAE3B,QAAI,SAAS;AACX,OAAC,SAAS,aAAc,QAAO,SAAS;AACxC,aAAO,QAAQ,QAAQ;AAEvB,aAAO,oBAAqB,SAAQ,gBAAgB,IAAI;AAAA,WAGrD;AAGD,OAAC,SAAS,aAAc,QAAO,SAAS;AAAA;AAI5C,WAAO,WAAW,UAAU,eAAe,KAAK;AAAA,MAC9C,SAAS,SAAS,KAAK;AAAA,MACvB,WAAW,SAAS,KAAK,MAAM;AAAA,MAC/B,OAAO,OAAO;AAAA;AAAA;AAAA;AAKpB,iCAAiC,gBAAgB,OAAO,SAAS,iBAAgB;AAE/E,MAAI,aAAa,UAAU,CAAC,eAAe,KAAK,QAAQ;AACtD,oBAAe;AAAA,MACb,MAAM;AAAA;AAER;AAAA;AAOF,MAAI,aAAe,iBAAe,KAAK,GAAG,WAAW,MAAM,IAAI,qBAAqB,IAAI,MAAM;AAC9F,kBAAe;AAAA,IACb,MAAM;AAAA,IACN,eAAe;AAAA,IACf,GAAG,MAAM;AAAA,IACT,GAAG,MAAM;AAAA,IACT,eAAe,QAAQ;AAAA,IACvB,UAAU,QAAQ;AAAA,IAClB,iBAAiB,WAAW;AAAA,IAC5B,WAAW,WAAW;AAAA,IACtB,aAAa,WAAW;AAAA,IACxB,gBAAgB,eAAe;AAAA;AAAA;AAInC,kCAAkC,UAAU,iBAAgB,KAAK;AAI/D,MAAI,KAAK,IAAI;AACb,MAAI,cAAc;AAClB,MAAI,iBAAiB,OAAM,IAAI,gBAAgB;AAC/C,MAAI,gBAAgB,OAAM,IAAI,eAAe;AAG7C,OAAK,UAAU,SAAU,UAAU,KAAK;AACtC,QAAI,SAAS,SAAS,iBAAiB;AACvC,WAAO,WAAW,UAAU,KAAK,OAAO,mBAAmB,SAAU,WAAW;AAC9E,UAAI,OAAM,UAAU,cAAc,QAAQ,UAAU;AACpD,oBAAc,QAAO;AAAA;AAAA;AAIzB,MAAI,cAAc;AAClB,MAAI,aAAa;AACjB,OAAK,gBAAgB,SAAU,WAAW,KAAK;AAC7C,KAAC,cAAc,QAAQ,WAAW,KAAK;AAAA;AAEzC,OAAK,eAAe,SAAU,WAAW,KAAK;AAC5C,KAAC,eAAe,QAAQ,YAAY,KAAK;AAAA;AAE3C,aAAW,UAAU,IAAI,eAAe;AAAA,IACtC,MAAM;AAAA,IACN,eAAe;AAAA,IAEf,SAAS;AAAA,IACT,OAAO;AAAA;AAET,cAAY,UAAU,IAAI,eAAe;AAAA,IACvC,MAAM;AAAA,IACN,eAAe;AAAA,IAEf,SAAS;AAAA,IACT,OAAO;AAAA;AAAA;AAIX,2BAA2B,eAAe,UAAU;AAClD,WAAS,IAAI,GAAG,IAAK,kBAAiB,IAAI,QAAQ,KAAK;AACrD,QAAI,gBAAgB,cAAc;AAElC,QAAI,SAAS,KAAK,QAAQ,cAAc,WAAW,SAAS,KAAK,MAAM,mBAAmB,cAAc,WAAW;AACjH,aAAO;AAAA;AAAA;AAAA;AAKb,yBAAyB,UAAU;AACjC,MAAI,YAAY,SAAS,KAAK;AAC9B,MAAI,OAAO;AACX,MAAI,MAAM,KAAK,UAAU,SAAS,KAAK;AACvC,OAAK,YAAY,KAAK,MAAM,eAAe,UAAU;AACrD,OAAK,WAAW,KAAK,MAAM,cAAc,UAAU;AACnD,OAAK,SAAS,KAAK,MAAM,YAAY,UAAU;AAC/C,SAAO;AAAA;AAGT,sBAAsB,OAAO;AAC3B,SAAO,CAAC,SAAS,MAAM,MAAM,QAAQ,MAAM,MAAM,OAAO,MAAM,MAAM,QAAQ,MAAM,MAAM;AAAA;;;ACrWnF,mBAAiB,WAAW;AAIjC,mBAAS,yBAAyB,wBAAwB;AAC1D,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAChC,YAAU,qBAAqB,SAAU,QAAQ;AAE/C,QAAI,QAAQ;AACV,MAAC,EAAC,OAAO,eAAe,OAAO,YAAY,WAAW,MAAO,QAAO,cAAc;AAClF,UAAI,OAAO,OAAO,YAAY;AAI9B,UAAI,QAAQ,CAAC,QAAQ,OAAO;AAC1B,eAAO,YAAY,OAAO,CAAC;AAAA;AAAA;AAAA;AAMjC,YAAU,kBAAkB,UAAU,SAAS,UAAU,WAAW,SAAU,SAAS,KAAK;AAG1F,YAAQ,aAAa,eAAe,mBAAmB,QAAQ,SAAS;AAAA;AAG1E,YAAU,eAAe;AAAA,IACvB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,KACP;AAAA;;;ACpCE,mBAAiB,WAAW;AACjC,MAAI;AACJ,MAAI;AAAA;;;ACEN,IAAI,mBAEJ,SAAU,QAAQ;AAChB,YAAU,mBAAkB;AAE5B,+BAA4B;AAC1B,WAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAAA;AAO7D,oBAAiB,UAAU,eAAe,SAAU,UAAU,OAAO,WAAW,kBAAkB,KAAK;AACrG,QAAI,OAAO,UAAU;AAErB,QAAI,KAAK,QAAQ,SAAS;AACxB,WAAK,qBAAqB,KAAK,KAAK;AAAA;AAGtC,QAAI,QAAQ,KAAK;AACjB,QAAI,YAAY,MAAM,aAAa;AACnC,QAAI,cAAc,UAAU;AAC5B,QAAI,aAAa,KAAK,YAAY;AAClC,QAAI,kBAAkB,iBAAiB,IAAI;AAE3C,QAAI,mBAAmB,oBAAoB,QAAQ;AACjD,UAAI,UAAU,AAAW,aAAa;AACtC,UAAI,gBAAgB,qBAAoB,iBAAiB,MAAM,OAAO,YAAY;AAClF,oBAAc,QAAQ;AACtB,eAAS,aAAa,cAAc;AACpC,eAAS,UAAU;AAAA;AAGrB,QAAI,cAAc,iBAAiB,IAAI,CAAC,SAAS;AACjD,QAAI,WAAW,iBAAiB,OAAO,WAAW,kBAAkB,OAAO;AAC3E,IAAW,mBAAmB,UAAU,WAAW,kBAAkB,KAAK;AAAA;AAG5E,SAAO;AAAA,EACP;AAIF,0BAA0B,OAAO,WAAW,kBAAkB,OAAO,aAAa;AAChF,MAAI,OAAO,UAAU;AACrB,MAAI,QAAQ,KAAK,YAAY;AAC7B,MAAI,YAAY,MAAM,eAAe,YAAY;AACjD,cAAY,YAAY,MAAM,KAAK;AACnC,MAAI,eAAe,MAAM,gBAAgB;AACzC,MAAI;AACJ,MAAI;AACJ,MAAI;AAEJ,MAAI,KAAK,QAAQ,UAAU;AACzB,QAAI,aAAY,AAAO;AACvB,IAAO,OAAO,YAAW,YAAW;AACpC,IAAO,UAAU,YAAW,YAAW,CAAC,MAAM,IAAI,MAAM;AACxD,gBAAW,AAAQ,gBAAe,CAAC,OAAO,CAAC,cAAc;AACzD,QAAI,gBAAgB,UAAU,SAAS,aAAa,IAAI,aAAa;AAErE,QAAI,eAAc,oBAAY,gBAAgB,WAAW,gBAAgB,KAAK,KAAK,KAAK;AACxF,YAAQ,aAAY;AACpB,oBAAgB,aAAY;AAAA,SACvB;AAEL,QAAI,IAAI,aAAa;AACrB,gBAAW,MAAM,aAAa,CAAC,IAAI,aAAa;AAChD,QAAI,KAAK,MAAM;AACf,QAAI,KAAK,MAAM;AACf,YAAQ,KAAK,IAAI,UAAS,KAAK,MAAM,IAAI,MAAM,WAAW,UAAS,KAAK,KAAK,SAAS;AACtF,oBAAgB,KAAK,IAAI,UAAS,KAAK,MAAM,IAAI,MAAM,WAAW,UAAS,KAAK,KAAK,QAAQ;AAAA;AAG/F,SAAO;AAAA,IACL,UAAU;AAAA,IACV;AAAA,IACA;AAAA;AAAA;AAIJ,IAAI,uBAAsB;AAAA,EACxB,MAAM,SAAU,MAAM,OAAO,YAAY,aAAa;AACpD,WAAO,KAAK,QAAQ,UAAU;AAAA,MAC5B,MAAM;AAAA,MACN,OAAO,AAAW,cAAc,MAAM,aAAa,CAAC,YAAY,IAAI,cAAc,MAAM,aAAa,CAAC,YAAY,IAAI;AAAA,QACpH;AAAA,MACF,MAAM;AAAA,MACN,OAAO;AAAA,QACL,IAAI,MAAM;AAAA,QACV,IAAI,MAAM;AAAA,QACV,GAAG;AAAA;AAAA;AAAA;AAAA,EAIT,QAAQ,SAAU,MAAM,OAAO,YAAY,aAAa;AACtD,QAAI,YAAY,KAAK,IAAI,GAAG,KAAK;AACjC,QAAI,SAAS,KAAK,KAAK;AACvB,WAAO,KAAK,QAAQ,UAAU;AAAA,MAC5B,MAAM;AAAA,MACN,OAAO,AAAW,gBAAgB,MAAM,IAAI,MAAM,IAAI,YAAY,IAAI,YAAY,IACjF,EAAC,aAAa,YAAY,KAAK,QAAS,EAAC,aAAa,YAAY,KAAK;AAAA,QACtE;AAAA,MACF,MAAM;AAAA,MACN,OAAO,AAAW,gBAAgB,MAAM,IAAI,MAAM,IAAI,aAAa,YAAY,GAAG,aAAa,YAAY,GAAG,GAAG,KAAK,KAAK;AAAA;AAAA;AAAA;AAIjI,IAAO,2BAAQ;;;AChHf,IAAI,aAEJ,SAAU,QAAQ;AAChB,YAAU,aAAY;AAEtB,yBAAsB;AACpB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,YAAW;AACxB,WAAO;AAAA;AAGT,cAAW,UAAU,gBAAgB,SAAU,UAAU;AACvD,QAAI;AACJ,QAAI,UAAU,KAAK;AACnB,YAAQ,cAAc,UAAU,SAAU,WAAW;AACnD,UAAI,UAAU,uBAAuB,MAAM;AACzC,yBAAiB;AAAA;AAAA,OAElB;AACH,WAAO;AAAA;AAGT,cAAW,OAAO;AAClB,cAAW,eAAe,CAAC,cAAc;AACzC,cAAW,gBAAgB;AAAA,IACzB,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,QAAQ,CAAC,OAAO;AAAA,IAChB,QAAQ;AAAA;AAEV,SAAO;AAAA,EACP;AAEF,IAAO,qBAAQ;;;AC/Bf,IAAI,iBAEJ,SAAU,QAAQ;AAChB,YAAU,iBAAgB;AAE1B,6BAA0B;AACxB,WAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAAA;AAG7D,kBAAe,UAAU,mBAAmB,WAAY;AACtD,WAAO,KAAK,uBAAuB,SAAS,kBAAkB,OAAO;AAAA;AAGvE,kBAAe,OAAO;AACtB,SAAO;AAAA,EACP;AAEF,AAAO,MAAM,gBAAgB;AAG7B,IAAI,iBAEJ,SAAU,QAAQ;AAChB,YAAU,iBAAgB;AAE1B,6BAA0B;AACxB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,gBAAe;AAC5B,WAAO;AAAA;AAGT,kBAAe,OAAO;AACtB,SAAO;AAAA,EACP;AAIF,IAAI,kBAEJ,SAAU,QAAQ;AAChB,YAAU,kBAAiB;AAE3B,8BAA2B;AACzB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,iBAAgB;AAC7B,WAAO;AAAA;AAGT,mBAAgB,OAAO;AACvB,SAAO;AAAA,EACP;;;ACvDF,IAAI,aAEJ,SAAU,QAAQ;AAChB,YAAU,aAAY;AAEtB,uBAAoB,QAAO,cAAc;AACvC,WAAO,OAAO,KAAK,MAAM,UAAU,QAAO,iBAAiB;AAAA;AAG7D,cAAW,UAAU,cAAc,SAAU,OAAO,OAAO;AACzD,WAAO,KAAK,MAAM,YAAY,OAAO,OAAO,KAAK,QAAQ,WAAW,IAAI;AAAA;AAG1E,SAAO;AAAA,EACP;AAEF,WAAW,UAAU,eAAe,aAAK,UAAU;AACnD,WAAW,UAAU,eAAe,aAAK,UAAU;AACnD,IAAO,qBAAQ;;;ACjBf,IAAI,SAAQ;AAEZ,IAAI,YAEJ,SAAU,QAAQ;AAChB,YAAU,YAAW;AAErB,sBAAmB,QAAO,aAAa;AACrC,WAAO,OAAO,KAAK,MAAM,SAAS,QAAO,eAAe,CAAC,GAAG,SAAS;AAAA;AAGvE,aAAU,UAAU,cAAc,SAAU,OAAO,OAAO;AACxD,WAAO,KAAK,MAAM,YAAY,OAAO,OAAO,KAAK,QAAQ,WAAW,IAAI;AAAA;AAW1E,aAAU,UAAU,4BAA4B,WAAY;AAC1D,QAAI,OAAO;AACX,QAAI,aAAa,KAAK;AACtB,QAAI,eAAe,KAAK;AACxB,QAAI,gBAAgB,aAAa;AAIjC,QAAI,YAAY,aAAa;AAE7B,QAAI,cAAc,KAAK,cAAc,KAAK,GAAG;AAC3C,aAAO;AAAA;AAGT,QAAI,YAAY,cAAc;AAC9B,QAAI,WAAW,KAAK,YAAY,YAAY,KAAK,KAAK,YAAY;AAClE,QAAI,QAAQ,KAAK,IAAI;AAGrB,QAAI,OAAO,AAAY,gBAAgB,aAAa,OAAO,KAAK,YAAY,IAAI,WAAW,WAAW,UAAU;AAChH,QAAI,OAAO,KAAK,IAAI,KAAK,QAAQ;AACjC,QAAI,KAAK,OAAO;AAEhB,UAAM,OAAQ,MAAK;AACnB,QAAI,WAAW,KAAK,IAAI,GAAG,KAAK,MAAM;AACtC,QAAI,QAAQ,OAAM,KAAK;AACvB,QAAI,mBAAmB,MAAM;AAC7B,QAAI,gBAAgB,MAAM;AAI1B,QAAI,oBAAoB,QAAQ,iBAAiB,QAAQ,KAAK,IAAI,mBAAmB,aAAa,KAAK,KAAK,IAAI,gBAAgB,cAAc,KAE3I,mBAAmB,UAAU;AAC9B,iBAAW;AAAA,WAGR;AACD,YAAM,gBAAgB;AACtB,YAAM,mBAAmB;AAAA;AAG7B,WAAO;AAAA;AAGT,SAAO;AAAA,EACP;AAEF,UAAU,UAAU,cAAc,aAAK,UAAU;AACjD,UAAU,UAAU,cAAc,aAAK,UAAU;AACjD,IAAO,oBAAQ;;;AC3ER,IAAI,kBAAkB,CAAC,UAAU;AAExC,IAAI,QAEJ,WAAY;AACV,kBAAe,MAAM;AACnB,SAAK,aAAa;AAClB,SAAK,OAAO;AAKZ,SAAK,KAAK;AAKV,SAAK,KAAK;AACV,SAAK,cAAc,IAAI;AACvB,SAAK,aAAa,IAAI;AACtB,SAAK,qBAAqB;AAC1B,SAAK,OAAO,QAAQ;AACpB,SAAK,YAAY,QAAQ,KAAK,WAAW,QAAQ;AAAA;AAOnD,SAAM,UAAU,eAAe,SAAU,OAAO;AAC9C,QAAI,QAAQ,KAAK,aAAa;AAC9B,WAAO,KAAK,YAAY,QAAQ,MAAM,OAAO,KAAK,WAAW,QAAQ,MAAM;AAAA;AAO7E,SAAM,UAAU,cAAc,SAAU,MAAM;AAC5C,WAAO,KAAK,YAAY,YAAY,KAAK,OAAO,KAAK,WAAW,YAAY,KAAK;AAAA;AAGnF,SAAM,UAAU,UAAU,SAAU,KAAK;AACvC,QAAI,MAAM,MAAM,MAAM;AACtB,WAAO,KAAK;AAAA;AAGd,SAAM,UAAU,UAAU,WAAY;AACpC,WAAO,CAAC,KAAK,aAAa,KAAK;AAAA;AAOjC,SAAM,UAAU,iBAAiB,SAAU,WAAW;AACpD,QAAI,OAAO;AACX,QAAI,YAAY,KAAK;AACrB,QAAI,aAAa,KAAK;AACtB,cAAU,MAAM,SAAS,aAAa,KAAK,KAAK;AAChD,eAAW,MAAM,SAAS,aAAa,KAAK,KAAK;AACjD,WAAO;AAAA;AAGT,SAAM,UAAU,eAAe,WAAY;AACzC,WAAO,KAAK;AAAA;AAGd,SAAM,UAAU,gBAAgB,WAAY;AAC1C,WAAO,KAAK;AAAA;AAGd,SAAM,UAAU,eAAe,SAAU,MAAM;AAC7C,QAAI,YAAY,KAAK;AACrB,WAAO,SAAS,YAAY,KAAK,cAAc;AAAA;AAQjD,SAAM,UAAU,cAAc,WAAY;AACxC,WAAO,KAAK,eAAe,WAAW,MAAM,KAAK,eAAe,QAAQ,MAAM,KAAK;AAAA;AAGrF,SAAM,UAAU,iBAAiB,SAAU,KAAK;AAC9C,QAAI,WAAW,OAAO,QAAQ,QAAQ,SAAS,KAAK,QAAQ,OAAO,KAAK;AACxE,WAAO;AAAA,MACL,UAAU,CAAC;AAAA,MACX,WAAW,CAAC,KAAK,aAAa;AAAA;AAAA;AASlC,SAAM,UAAU,cAAc,SAAU,MAAM,OAAO;AACnD,WAAO,KAAK,aAAa,CAAC,KAAK,YAAY,aAAa,KAAK,IAAI,QAAQ,KAAK,WAAW,YAAY,KAAK,IAAI;AAAA;AAOhH,SAAM,UAAU,cAAc,SAAU,OAAO,OAAO;AACpD,QAAI,QAAQ,KAAK,aAAa;AAC9B,WAAO,CAAC,KAAK,YAAY,aAAa,MAAM,IAAI,QAAQ,KAAK,WAAW,YAAY,MAAM,IAAI;AAAA;AAOhG,SAAM,UAAU,eAAe,SAAU,OAAO;AAC9C,QAAI,KAAK,MAAM,KAAK,KAAK;AACzB,QAAI,KAAK,MAAM,KAAK,KAAK;AACzB,QAAI,YAAY,KAAK;AACrB,QAAI,SAAS,UAAU;AACvB,QAAI,WAAW,KAAK,IAAI,OAAO,IAAI,OAAO;AAC1C,QAAI,WAAW,KAAK,IAAI,OAAO,IAAI,OAAO;AAG1C,cAAU,UAAU,WAAW,WAAW,MAAM,WAAW,WAAW;AACtE,QAAI,SAAS,KAAK,KAAK,KAAK,KAAK,KAAK;AACtC,UAAM;AACN,UAAM;AACN,QAAI,SAAS,KAAK,MAAM,CAAC,IAAI,MAAM,KAAK,KAAK;AAE7C,QAAI,MAAM,SAAS,WAAW,IAAI;AAElC,WAAO,SAAS,YAAY,SAAS,UAAU;AAC7C,gBAAU,MAAM;AAAA;AAGlB,WAAO,CAAC,QAAQ;AAAA;AAOlB,SAAM,UAAU,eAAe,SAAU,OAAO;AAC9C,QAAI,SAAS,MAAM;AACnB,QAAI,SAAS,MAAM,KAAK,MAAM,KAAK;AACnC,QAAI,IAAI,KAAK,IAAI,UAAU,SAAS,KAAK;AAEzC,QAAI,IAAI,CAAC,KAAK,IAAI,UAAU,SAAS,KAAK;AAC1C,WAAO,CAAC,GAAG;AAAA;AAQb,SAAM,UAAU,UAAU,WAAY;AACpC,QAAI,YAAY,KAAK;AACrB,QAAI,aAAa,KAAK;AACtB,QAAI,eAAe,WAAW,YAAY;AAC1C,iBAAa,KAAK,aAAa,MAAM,aAAa;AAClD,QAAI,cAAc,UAAU;AAC5B,QAAI,UAAS,KAAK,KAAK;AACvB,WAAO;AAAA,MACL,IAAI,KAAK;AAAA,MACT,IAAI,KAAK;AAAA,MACT,IAAI,aAAa;AAAA,MACjB,GAAG,aAAa;AAAA,MAChB,YAAY,CAAC,YAAY,KAAK;AAAA,MAC9B,UAAU,CAAC,YAAY,KAAK;AAAA,MAC5B,WAAW,UAAU;AAAA,MACrB,SAAS,SAAU,GAAG,GAAG;AAGvB,YAAI,KAAK,IAAI,KAAK;AAClB,YAAI,KAAK,IAAI,KAAK;AAClB,YAAI,KAAK,KAAK,KAAK,KAAK;AACxB,YAAI,IAAI,KAAK;AACb,YAAI,KAAK,KAAK;AACd,eAAO,MAAM,IAAI,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAKvC,SAAM,UAAU,iBAAiB,SAAU,SAAS,QAAQ,OAAO;AACjE,QAAI,WAAW,aAAY;AAC3B,WAAO,aAAa,OAAO,KAAK,YAAY,SAAS;AAAA;AAGvD,SAAM,UAAU,mBAAmB,SAAU,SAAS,QAAQ,OAAO;AACnE,QAAI,WAAW,aAAY;AAC3B,WAAO,aAAa,OAAO,KAAK,YAAY,SAAS;AAAA;AAGvD,SAAO;AAAA;AAGT,sBAAqB,QAAQ;AAC3B,MAAI,cAAc,OAAO;AACzB,MAAI,aAAa,OAAO;AACxB,SAAO,cAAc,WAAW,oBAAoB,eAAe,YAAY;AAAA;AAGjF,IAAO,gBAAQ;;;ACrMf,qBAAqB,OAAO,YAAY,KAAK;AAC3C,MAAI,UAAS,WAAW,IAAI;AAC5B,MAAI,QAAQ,IAAI;AAChB,MAAI,SAAS,IAAI;AACjB,QAAM,KAAK,cAAa,QAAO,IAAI;AACnC,QAAM,KAAK,cAAa,QAAO,IAAI;AACnC,MAAI,aAAa,MAAM;AACvB,MAAI,OAAO,KAAK,IAAI,OAAO,UAAU;AACrC,MAAI,SAAS,WAAW,IAAI;AAE5B,MAAI,UAAU,MAAM;AAClB,aAAS,CAAC,GAAG;AAAA,aACJ,CAAC,AAAO,QAAQ,SAAS;AAElC,aAAS,CAAC,GAAG;AAAA;AAGf,MAAI,eAAe,CAAC,cAAa,OAAO,IAAI,OAAO,cAAa,OAAO,IAAI;AAC3E,aAAW,UAAU,WAAW,UAAU,aAAa,IAAI,aAAa,MAAM,WAAW,UAAU,aAAa,IAAI,aAAa;AAAA;AAOnI,0BAA0B,SAAS,KAAK;AACtC,MAAI,QAAQ;AACZ,MAAI,YAAY,MAAM;AACtB,MAAI,aAAa,MAAM;AAEvB,YAAU,MAAM,UAAU,UAAU;AACpC,aAAW,MAAM,UAAU,UAAU;AACrC,UAAQ,WAAW,SAAU,aAAa;AACxC,QAAI,YAAY,qBAAqB,OAAO;AAC1C,UAAI,SAAS,YAAY;AACzB,MAAO,KAAK,wBAAwB,QAAQ,WAAW,SAAU,KAAK;AACpE,mBAAW,MAAM,oBAAoB,QAAQ;AAAA;AAE/C,MAAO,KAAK,wBAAwB,QAAQ,UAAU,SAAU,KAAK;AACnE,kBAAU,MAAM,oBAAoB,QAAQ;AAAA;AAAA;AAAA;AAIlD,kBAAgB,UAAU,OAAO,UAAU;AAC3C,kBAAgB,WAAW,OAAO,WAAW;AAE7C,MAAI,UAAU,SAAS,cAAc,CAAC,UAAU,QAAQ;AACtD,QAAI,SAAS,UAAU;AACvB,QAAI,QAAO,MAAM,UAAU,MAAM;AACjC,cAAU,UAAU,OAAO,MAAM,QAAO,OAAO,MAAM;AACrD,cAAU,UAAU,OAAO,IAAI,OAAO;AAAA;AAAA;AAI1C,0BAA0B,WAAW;AACnC,SAAO,UAAU,aAAa;AAAA;AAOhC,iBAAiB,MAAM,WAAW;AAChC,OAAK,OAAO,UAAU,IAAI;AAC1B,OAAK,QAAQ,mBAAmB;AAChC,OAAK,SAAS,UAAU,IAAI,kBAAkB,KAAK,SAAS;AAC5D,OAAK,UAAU,UAAU,IAAI;AAE7B,MAAI,iBAAiB,YAAY;AAC/B,SAAK,UAAU,KAAK,YAAY,UAAU,IAAI;AAC9C,QAAI,aAAa,UAAU,IAAI;AAC/B,SAAK,UAAU,YAAY,aAAc,MAAK,UAAU,OAAO;AAAA;AAIjE,YAAU,OAAO;AACjB,OAAK,QAAQ;AAAA;AAGf,IAAI,eAAe;AAAA,EACjB,YAAY;AAAA,EACZ,QAAQ,SAAU,SAAS,KAAK;AAC9B,QAAI,YAAY;AAChB,YAAQ,cAAc,SAAS,SAAU,YAAY,KAAK;AACxD,UAAI,QAAQ,IAAI,cAAM,MAAM;AAE5B,YAAM,SAAS;AACf,UAAI,aAAa,MAAM;AACvB,UAAI,YAAY,MAAM;AACtB,UAAI,kBAAkB,WAAW,cAAc;AAC/C,UAAI,iBAAiB,WAAW,cAAc;AAC9C,cAAQ,YAAY;AACpB,cAAQ,WAAW;AACnB,kBAAY,OAAO,YAAY;AAC/B,gBAAU,KAAK;AACf,iBAAW,mBAAmB;AAC9B,YAAM,QAAQ;AAAA;AAGhB,YAAQ,WAAW,SAAU,aAAa;AACxC,UAAI,YAAY,IAAI,wBAAwB,SAAS;AACnD,YAAI,aAAa,YAAY,uBAAuB,SAAS,kBAAkB,OAAO;AAEtF,YAAI,MAAuC;AACzC,cAAI,CAAC,YAAY;AACf,kBAAM,IAAI,MAAM,YAAY,AAAO,SAAS,YAAY,IAAI,eAAe,YAAY,IAAI,YAAY,KAAK;AAAA;AAAA;AAIhH,oBAAY,mBAAmB,WAAW;AAAA;AAAA;AAG9C,WAAO;AAAA;AAAA;AAGX,IAAO,uBAAQ;;;ACrHf,IAAI,eAAc,CAAC,YAAY,aAAa,YAAY,aAAa,aAAa,kBAAkB;AAEpG,0BAA0B,OAAO,SAAS,OAAO;AAC/C,UAAQ,KAAK,QAAQ,MAAO,WAAU,QAAQ,QAAQ;AACtD,MAAI,QAAQ,MAAM,aAAa,CAAC,QAAQ,IAAI;AAC5C,MAAI,MAAM,MAAM,aAAa,CAAC,QAAQ,IAAI;AAC1C,SAAO;AAAA,IACL,IAAI,MAAM;AAAA,IACV,IAAI,MAAM;AAAA,IACV,IAAI,IAAI;AAAA,IACR,IAAI,IAAI;AAAA;AAAA;AAIZ,sBAAsB,OAAO;AAC3B,MAAI,aAAa,MAAM;AACvB,SAAO,WAAW,UAAU,IAAI;AAAA;AAIlC,yBAAyB,MAAM;AAC7B,MAAI,YAAY,KAAK;AACrB,MAAI,WAAW,KAAK,KAAK,SAAS;AAElC,MAAI,aAAa,YAAY,KAAK,IAAI,KAAK,IAAI,UAAU,QAAQ,SAAS,SAAS,OAAO,MAAM;AAC9F,SAAK;AAAA;AAAA;AAIT,IAAI,gBAEJ,SAAU,QAAQ;AAChB,YAAU,gBAAe;AAEzB,4BAAyB;AACvB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,eAAc;AAC3B,UAAM,mBAAmB;AACzB,WAAO;AAAA;AAGT,iBAAc,UAAU,SAAS,SAAU,gBAAgB,SAAS;AAClE,SAAK,MAAM;AAEX,QAAI,CAAC,eAAe,IAAI,SAAS;AAC/B;AAAA;AAGF,QAAI,YAAY,eAAe;AAC/B,QAAI,QAAQ,UAAU;AACtB,QAAI,eAAe,MAAM,gBAAgB;AACzC,QAAI,cAAc,UAAU;AAC5B,QAAI,kBAAkB,UAAU;AAChC,QAAI,SAAS,AAAO,IAAI,UAAU,iBAAiB,SAAU,WAAW;AACtE,kBAAY,AAAO,MAAM;AACzB,UAAI,SAAQ,UAAU;AACtB,UAAI,YAAY,OAAM,SAAS,YAAY,OAAM,oBAAoB,UAAU,aAAa,UAAU;AACtG,gBAAU,QAAQ,UAAU,YAAY;AACxC,aAAO;AAAA;AAET,oBAAgB;AAChB,oBAAgB;AAChB,IAAO,KAAK,cAAa,SAAU,MAAM;AACvC,UAAI,eAAe,IAAI,CAAC,MAAM,YAAa,EAAC,UAAU,MAAM,aAAa,SAAS,aAAa;AAC7F,kCAA0B,MAAM,KAAK,OAAO,gBAAgB,OAAO,aAAa,iBAAiB,cAAc;AAAA;AAAA,OAEhH;AAAA;AAGL,iBAAc,OAAO;AACrB,SAAO;AAAA,EACP;AAEF,IAAI,4BAA4B;AAAA,EAC9B,UAAU,SAAU,OAAO,gBAAgB,OAAO,aAAa,iBAAiB,cAAc;AAC5F,QAAI,iBAAiB,eAAe,SAAS,CAAC,YAAY;AAE1D,QAAI,MAAM,aAAa;AACvB,QAAI,OAAO,MAAM,IAAI;AACrB,QAAI;AAEJ,QAAI,aAAa,UAAU,GAAG;AAC5B,cAAQ,IAAY,eAAO;AAAA,QACzB,OAAO;AAAA,UACL,IAAI,MAAM;AAAA,UACV,IAAI,MAAM;AAAA,UACV,GAAG,aAAa;AAAA;AAAA,QAElB,OAAO,eAAe;AAAA,QACtB,IAAI;AAAA,QACJ,QAAQ;AAAA;AAAA,WAEL;AACL,cAAQ,IAAY,aAAK;AAAA,QACvB,OAAO;AAAA,UACL,IAAI,MAAM;AAAA,UACV,IAAI,MAAM;AAAA,UACV,GAAG,aAAa;AAAA,UAChB,IAAI,aAAa;AAAA;AAAA,QAEnB,OAAO,eAAe;AAAA,QACtB,IAAI;AAAA,QACJ,QAAQ;AAAA;AAAA;AAIZ,UAAM,MAAM,OAAO;AACnB,UAAM,IAAI;AAAA;AAAA,EAEZ,UAAU,SAAU,OAAO,gBAAgB,OAAO,aAAa,iBAAiB,cAAc;AAC5F,QAAI,YAAY,eAAe,SAAS;AACxC,QAAI,UAAW,WAAU,IAAI,YAAY,KAAK,KAAK,UAAU,IAAI;AACjE,QAAI,SAAS,aAAa,aAAa;AACvC,QAAI,QAAQ,AAAO,IAAI,aAAa,SAAU,eAAe;AAC3D,aAAO,IAAY,aAAK;AAAA,QACtB,OAAO,iBAAiB,OAAO,CAAC,QAAQ,SAAS,UAAU,cAAc;AAAA;AAAA;AAG7E,UAAM,IAAI,AAAQ,UAAU,OAAO;AAAA,MACjC,OAAO,AAAO,SAAS,UAAU,SAAS,aAAa,gBAAgB;AAAA,QACrE,QAAQ,eAAe,IAAI,CAAC,YAAY,aAAa;AAAA;AAAA;AAAA;AAAA,EAI3D,WAAW,SAAU,OAAO,gBAAgB,OAAO,YAAY,iBAAiB,cAAc;AAC5F,QAAI,CAAC,gBAAgB,QAAQ;AAC3B;AAAA;AAGF,QAAI,YAAY,eAAe,SAAS;AACxC,QAAI,iBAAiB,eAAe,SAAS;AAC7C,QAAI,UAAW,WAAU,IAAI,YAAY,KAAK,KAAK,eAAe,IAAI;AACtE,QAAI,SAAS,aAAa,aAAa;AACvC,QAAI,QAAQ;AAEZ,aAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,eAAS,IAAI,GAAG,IAAI,gBAAgB,GAAG,QAAQ,KAAK;AAClD,cAAM,KAAK,IAAY,aAAK;AAAA,UAC1B,OAAO,iBAAiB,OAAO,CAAC,QAAQ,SAAS,UAAU,gBAAgB,GAAG,GAAG;AAAA;AAAA;AAAA;AAKvF,UAAM,IAAI,AAAQ,UAAU,OAAO;AAAA,MACjC,OAAO,AAAO,SAAS,eAAe,SAAS,aAAa,gBAAgB,AAAO,SAAS,UAAU,gBAAgB;AAAA,QACpH,QAAQ,eAAe,IAAI,CAAC,YAAY,aAAa;AAAA;AAAA;AAAA;AAAA,EAI3D,WAAW,SAAU,OAAO,gBAAgB,OAAO,aAAa,iBAAiB,cAAc,QAAQ;AACrG,QAAI,kBAAkB,eAAe,cAAc;AACnD,QAAI,mBAAmB,eAAe,SAAS;AAC/C,QAAI,cAAc,iBAAiB,IAAI;AACvC,QAAI,eAAe,eAAe,IAAI;AAEtC,IAAO,KAAK,QAAQ,SAAU,WAAW,KAAK;AAC5C,UAAI,aAAa;AACjB,UAAI,YAAY,UAAU;AAC1B,UAAI,IAAI,aAAa,aAAa;AAClC,UAAI,IAAI,MAAM,aAAa,CAAC,IAAI,aAAa,UAAU;AACvD,UAAI,KAAK,MAAM;AACf,UAAI,KAAK,MAAM;AACf,UAAI,iBAAiB,KAAK,IAAI,EAAE,KAAK,MAAM,IAAI,MAAM,WAAW,EAAE,KAAK,KAAK,SAAS;AACrF,UAAI,yBAAyB,KAAK,IAAI,EAAE,KAAK,MAAM,IAAI,MAAM,WAAW,EAAE,KAAK,KAAK,QAAQ;AAE5F,UAAI,mBAAmB,gBAAgB,YAAY;AACjD,YAAI,kBAAkB,gBAAgB;AAEtC,YAAI,AAAO,SAAS,oBAAoB,gBAAgB,WAAW;AACjE,uBAAa,IAAI,cAAM,gBAAgB,WAAW,kBAAkB,iBAAiB;AAAA;AAAA;AAIzF,UAAI,SAAS,IAAY,aAAK;AAAA,QAC5B,QAAQ,oBAAY,cAAc;AAAA,QAClC,OAAO,gBAAgB,YAAY;AAAA,UACjC,GAAG,EAAE;AAAA,UACL,GAAG,EAAE;AAAA,UACL,MAAM,WAAW,kBAAkB,eAAe,IAAI,CAAC,YAAY,aAAa;AAAA,UAChF,MAAM,UAAU;AAAA,UAChB,OAAO;AAAA,UACP,eAAe;AAAA;AAAA;AAGnB,YAAM,IAAI;AAEV,UAAI,cAAc;AAChB,YAAI,YAAY,oBAAY,sBAAsB;AAClD,kBAAU,aAAa;AACvB,kBAAU,QAAQ,UAAU;AAC5B,kBAAU,QAAQ,YAAY;AAAA;AAAA,OAE/B;AAAA;AAAA,EAEL,WAAW,SAAU,OAAO,gBAAgB,OAAO,aAAa,iBAAiB,cAAc;AAC7F,QAAI,iBAAiB,eAAe,SAAS;AAC7C,QAAI,iBAAiB,eAAe,SAAS;AAC7C,QAAI,aAAa,eAAe,IAAI;AACpC,QAAI,YAAY;AAChB,iBAAa,sBAAsB,QAAQ,aAAa,CAAC;AACzD,QAAI,aAAa;AAEjB,aAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,UAAI,aAAa,cAAc,WAAW;AAC1C,iBAAW,cAAc,WAAW,eAAe;AACnD,iBAAW,YAAY,KAAK,IAAY,aAAK;AAAA,QAC3C,OAAO,iBAAiB,OAAO,cAAc,YAAY,GAAG;AAAA;AAAA;AAMhE,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,YAAM,IAAI,AAAQ,UAAU,WAAW,IAAI;AAAA,QACzC,OAAO,AAAO,SAAS;AAAA,UACrB,QAAQ,WAAW,IAAI,WAAW;AAAA,WACjC,eAAe;AAAA,QAClB,QAAQ;AAAA,QACR,GAAG,eAAe,IAAI;AAAA;AAAA;AAAA;AAAA,EAI5B,gBAAgB,SAAU,OAAO,gBAAgB,OAAO,aAAa,iBAAiB,cAAc;AAClG,QAAI,CAAC,gBAAgB,QAAQ;AAC3B;AAAA;AAGF,QAAI,sBAAsB,eAAe,SAAS;AAClD,QAAI,iBAAiB,oBAAoB,SAAS;AAClD,QAAI,QAAQ;AAEZ,aAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,eAAS,IAAI,GAAG,IAAI,gBAAgB,GAAG,QAAQ,KAAK;AAClD,cAAM,KAAK,IAAY,aAAK;AAAA,UAC1B,OAAO,iBAAiB,OAAO,cAAc,gBAAgB,GAAG,GAAG;AAAA;AAAA;AAAA;AAKzE,UAAM,IAAI,AAAQ,UAAU,OAAO;AAAA,MACjC,OAAO,eAAe;AAAA,MACtB,QAAQ;AAAA,MACR,GAAG,eAAe,IAAI;AAAA;AAAA;AAAA,EAG1B,WAAW,SAAU,OAAO,gBAAgB,OAAO,aAAa,iBAAiB,cAAc;AAC7F,QAAI,CAAC,YAAY,QAAQ;AACvB;AAAA;AAGF,QAAI,iBAAiB,eAAe,SAAS;AAC7C,QAAI,iBAAiB,eAAe,SAAS;AAC7C,QAAI,aAAa,eAAe,IAAI;AACpC,QAAI,YAAY;AAChB,iBAAa,sBAAsB,QAAQ,aAAa,CAAC;AACzD,QAAI,aAAa;AACjB,QAAI,UAAS,KAAK,KAAK;AACvB,QAAI,YAAY,CAAC,YAAY,GAAG,QAAQ;AACxC,QAAI,KAAK,KAAK,IAAI,aAAa,IAAI,aAAa;AAChD,QAAI,KAAK,KAAK,IAAI,aAAa,IAAI,aAAa;AAChD,QAAI,YAAY,eAAe,IAAI;AAEnC,aAAS,IAAI,GAAG,OAAM,YAAY,QAAQ,KAAK,MAAK,KAAK;AACvD,UAAI,QAAQ,MAAM,OAAM,YAAY,GAAG,QAAQ,YAAY,GAAG;AAC9D,UAAI,aAAa,cAAc,WAAW;AAC1C,iBAAW,cAAc,WAAW,eAAe;AACnD,iBAAW,YAAY,KAAK,IAAY,eAAO;AAAA,QAC7C,OAAO;AAAA,UACL,IAAI,MAAM;AAAA,UACV,IAAI,MAAM;AAAA,UACV;AAAA,UACA,GAAG;AAAA,UACH,YAAY;AAAA,UACZ,UAAU,CAAC,QAAQ;AAAA,UACnB;AAAA;AAAA,QAEF,QAAQ;AAAA;AAEV,kBAAY,CAAC,QAAQ;AAAA;AAKvB,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,YAAM,IAAI,AAAQ,UAAU,WAAW,IAAI;AAAA,QACzC,OAAO,AAAO,SAAS;AAAA,UACrB,MAAM,WAAW,IAAI,WAAW;AAAA,WAC/B,eAAe;AAAA,QAClB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAKhB,IAAO,wBAAQ;;;ACzSf,IAAI,oBAAmB,CAAC,YAAY,iBAAiB;AACrD,IAAI,oBAAmB,CAAC,aAAa,aAAa;AAElD,IAAI,iBAEJ,SAAU,QAAQ;AAChB,YAAU,iBAAgB;AAE1B,6BAA0B;AACxB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,gBAAe;AAC5B,UAAM,mBAAmB;AACzB,WAAO;AAAA;AAGT,kBAAe,UAAU,SAAS,SAAU,iBAAiB,SAAS;AACpE,SAAK,MAAM;AAEX,QAAI,CAAC,gBAAgB,IAAI,SAAS;AAChC;AAAA;AAGF,QAAI,eAAe,KAAK;AACxB,QAAI,eAAe,KAAK,aAAa,IAAY;AACjD,SAAK,MAAM,IAAI;AACf,QAAI,aAAa,gBAAgB;AACjC,QAAI,QAAQ,WAAW;AACvB,QAAI,YAAY,MAAM;AACtB,QAAI,cAAc,WAAW;AAC7B,QAAI,mBAAmB,WAAW;AAClC,QAAI,YAAY,UAAU,YAAY;AACtC,QAAI,eAAe,WAAW;AAC9B,QAAI,WAAS,WAAW,OAAO,iBAAiB;AAChD,QAAI,cAAc,IAAI,oBAAY,iBAAiB;AACnD,IAAO,KAAK,mBAAkB,YAAY,KAAK;AAC/C,iBAAa,IAAI,YAAY;AAC7B,IAAQ,gBAAgB,cAAc,cAAc;AACpD,IAAO,KAAK,mBAAkB,SAAU,MAAM;AAC5C,UAAI,gBAAgB,IAAI,CAAC,MAAM,YAAY,CAAC,WAAW,MAAM,WAAW;AACtE,6BAAoB,MAAM,KAAK,OAAO,iBAAiB,OAAO,WAAW,cAAc,aAAa;AAAA;AAAA,OAErG;AAAA;AAGL,kBAAe,OAAO;AACtB,SAAO;AAAA,EACP;AAEF,IAAI,uBAAsB;AAAA,EACxB,WAAW,SAAU,OAAO,iBAAiB,OAAO,WAAW,cAAc,aAAa;AACxF,QAAI,iBAAiB,gBAAgB,SAAS;AAC9C,QAAI,iBAAiB,eAAe,SAAS;AAC7C,QAAI,aAAa,eAAe,IAAI;AACpC,QAAI,YAAY;AAChB,iBAAa,sBAAsB,QAAQ,aAAa,CAAC;AACzD,QAAI,aAAa;AAEjB,aAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,UAAI,aAAa,cAAc,WAAW;AAC1C,iBAAW,cAAc,WAAW,eAAe;AACnD,iBAAW,YAAY,KAAK,IAAY,eAAO;AAAA,QAC7C,OAAO;AAAA,UACL,IAAI,MAAM;AAAA,UACV,IAAI,MAAM;AAAA,UACV,GAAG,YAAY,GAAG;AAAA;AAAA;AAAA;AAOxB,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,YAAM,IAAI,AAAQ,UAAU,WAAW,IAAI;AAAA,QACzC,OAAO,AAAO,SAAS;AAAA,UACrB,QAAQ,WAAW,IAAI,WAAW;AAAA,UAClC,MAAM;AAAA,WACL,eAAe;AAAA,QAClB,QAAQ;AAAA;AAAA;AAAA;AAAA,EAId,gBAAgB,SAAU,OAAO,iBAAiB,OAAO,WAAW,cAAc,aAAa,kBAAkB;AAC/G,QAAI,CAAC,iBAAiB,QAAQ;AAC5B;AAAA;AAGF,QAAI,sBAAsB,gBAAgB,SAAS;AACnD,QAAI,iBAAiB,oBAAoB,SAAS;AAClD,QAAI,QAAQ;AAEZ,aAAS,IAAI,GAAG,IAAI,iBAAiB,QAAQ,KAAK;AAChD,eAAS,IAAI,GAAG,IAAI,iBAAiB,GAAG,QAAQ,KAAK;AACnD,cAAM,KAAK,IAAY,eAAO;AAAA,UAC5B,OAAO;AAAA,YACL,IAAI,MAAM;AAAA,YACV,IAAI,MAAM;AAAA,YACV,GAAG,iBAAiB,GAAG,GAAG;AAAA;AAAA;AAAA;AAAA;AAMlC,UAAM,IAAI,AAAQ,UAAU,OAAO;AAAA,MACjC,OAAO,AAAO,SAAS;AAAA,QACrB,MAAM;AAAA,SACL,eAAe;AAAA,MAClB,QAAQ;AAAA;AAAA;AAAA,EAGZ,WAAW,SAAU,OAAO,iBAAiB,OAAO,WAAW,cAAc,aAAa;AACxF,QAAI,CAAC,YAAY,QAAQ;AACvB;AAAA;AAGF,QAAI,iBAAiB,gBAAgB,SAAS;AAC9C,QAAI,iBAAiB,eAAe,SAAS;AAC7C,QAAI,aAAa,eAAe,IAAI;AACpC,QAAI,YAAY;AAChB,iBAAa,sBAAsB,QAAQ,aAAa,CAAC;AACzD,QAAI,aAAa;AACjB,QAAI,aAAa,YAAY,GAAG;AAEhC,aAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,UAAI,aAAa,cAAc,WAAW;AAC1C,iBAAW,cAAc,WAAW,eAAe;AACnD,iBAAW,YAAY,KAAK,IAAY,eAAO;AAAA,QAC7C,OAAO;AAAA,UACL,IAAI,MAAM;AAAA,UACV,IAAI,MAAM;AAAA,UACV,IAAI;AAAA,UACJ,GAAG,YAAY,GAAG;AAAA,UAClB,YAAY;AAAA,UACZ,UAAU,KAAK,KAAK;AAAA;AAAA,QAEtB,QAAQ;AAAA;AAEV,mBAAa,YAAY,GAAG;AAAA;AAK9B,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,YAAM,IAAI,AAAQ,UAAU,WAAW,IAAI;AAAA,QACzC,OAAO,AAAO,SAAS;AAAA,UACrB,MAAM,WAAW,IAAI,WAAW;AAAA,WAC/B,eAAe;AAAA,QAClB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAShB,oBAAoB,OAAO,iBAAiB,WAAW;AACrD,SAAO;AAAA,IACL,UAAU,CAAC,MAAM,IAAI,MAAM;AAAA,IAC3B,UAAU,YAAY,MAAM,KAAK;AAAA,IACjC,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,eAAe;AAAA,IACf,aAAa,gBAAgB,SAAS,aAAa,IAAI;AAAA,IAEvD,IAAI;AAAA;AAAA;AAIR,IAAO,yBAAQ;;;AC1Kf,0BAA0B,aAAa;AACrC,SAAO,YAAY,IAAI,YAAY,gBAAgB,YAAY;AAAA;AAGjE,oBAAoB,OAAO,MAAM;AAC/B,SAAO,KAAK,MAAM,MAAM,MAAM;AAAA;AAGhC,wBAAwB,YAAY,SAAS,KAAK;AAChD,MAAI,kBAAkB;AACtB,MAAI,oBAAoB,aAAa,AAAO,OAAO,QAAQ,gBAAgB,aAAa,SAAU,aAAa;AAC7G,WAAO,CAAC,QAAQ,iBAAiB,gBAAgB,YAAY,oBAAoB,YAAY,iBAAiB,SAAS;AAAA;AAEzH,UAAQ,iBAAiB,YAAY,SAAU,aAAa;AAE1D,QAAI,YAAY,iBAAiB,SAAS,SAAS;AACjD;AAAA;AAGF,QAAI,OAAO,YAAY;AACvB,QAAI,QAAQ,YAAY;AACxB,QAAI,WAAW,MAAM;AACrB,QAAI,UAAU,WAAW,OAAO;AAChC,QAAI,UAAU,iBAAiB;AAC/B,QAAI,mBAAmB,kBAAkB,SAAS;AAClD,QAAI,eAAe,iBAAiB;AACpC,QAAI,cAAc,iBAAiB;AACnC,QAAI,aAAY,MAAM,aAAa;AACnC,QAAI,KAAK,YAAY,iBAAiB;AACtC,QAAI,KAAK,YAAY,iBAAiB;AACtC,QAAI,eAAe,YAAY,IAAI,mBAAmB;AACtD,QAAI,cAAc,YAAY,IAAI,kBAAkB;AACpD,oBAAgB,WAAW,gBAAgB,YAAY;AACvD,QAAI,WAAW,KAAK,aAAa,WAAU;AAC3C,QAAI,UAAU,KAAK,aAAa,SAAS;AACzC,QAAI,UAAU,mBAAmB,MAAM;AAGvC,QAAI,cAAc,SAAS,QAAQ,YAAY,CAAC,YAAY,IAAI,YAAY;AAC5E,QAAI,iBAAiB,WAAU,YAAY;AAE3C,aAAS,MAAM,GAAG,OAAM,KAAK,SAAS,MAAM,MAAK,OAAO;AACtD,UAAI,QAAQ,KAAK,IAAI,UAAU;AAC/B,UAAI,YAAY,KAAK,IAAI,SAAS;AAClC,UAAI,OAAO,SAAS,IAAI,MAAM;AAC9B,UAAI,YAAY;AAIhB,UAAI,SAAS;AACX,YAAI,CAAC,gBAAgB,SAAS,YAAY;AACxC,0BAAgB,SAAS,aAAa;AAAA,YACpC,GAAG;AAAA,YACH,GAAG;AAAA;AAAA;AAMP,oBAAY,gBAAgB,SAAS,WAAW;AAAA;AAGlD,UAAI,KAAK;AACT,UAAI,IAAI;AACR,UAAI,aAAa;AACjB,UAAI,WAAW;AAEf,UAAI,WAAU,QAAQ,UAAU;AAC9B,YAAI,aAAa,WAAU,YAAY,SAAS;AAChD,YAAI,QAAQ,SAAS,YAAY;AAEjC,YAAI,KAAK,IAAI,cAAc,cAAc;AACvC,uBAAc,cAAa,IAAI,KAAK,KAAK;AAAA;AAG3C,aAAK;AACL,YAAI,YAAY;AAChB,qBAAa,QAAQ;AACrB,mBAAW,aAAa;AACxB,mBAAY,iBAAgB,SAAS,WAAW,QAAQ;AAAA,aAErD;AACD,YAAI,YAAY,WAAU,YAAY,OAAO,eAAe;AAC5D,YAAI,SAAS,SAAS,YAAY;AAElC,YAAI,KAAK,IAAI,aAAa,aAAa;AACrC,sBAAa,aAAY,IAAI,KAAK,KAAK;AAAA;AAGzC,aAAK,SAAS;AACd,YAAI,KAAK;AACT,qBAAa;AACb,mBAAW,YAAY;AAWvB,mBAAY,iBAAgB,SAAS,WAAW,QAAQ;AAAA;AAG5D,WAAK,cAAc,KAAK;AAAA,QACtB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAGA,YAAY,CAAC,aAAa,KAAK,KAAK;AAAA,QACpC,UAAU,CAAC,WAAW,KAAK,KAAK;AAAA,QAQhC,WAAW,cAAc;AAAA;AAAA;AAAA;AAAA;AAUjC,sBAAsB,WAAW;AAE/B,MAAI,aAAa;AACjB,EAAO,KAAK,WAAW,SAAU,aAAa,KAAK;AACjD,QAAI,OAAO,YAAY;AACvB,QAAI,QAAQ,YAAY;AACxB,QAAI,WAAW,MAAM;AACrB,QAAI,UAAU,WAAW,OAAO;AAChC,QAAI,aAAa,SAAS;AAC1B,QAAI,YAAY,SAAS,SAAS,aAAa,SAAS,iBAAiB,KAAK,IAAI,WAAW,KAAK,WAAW,MAAM,KAAK;AACxH,QAAI,gBAAgB,WAAW,YAAY;AAAA,MACzC;AAAA,MACA,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,aAAa;AAAA,MACb,KAAK;AAAA,MACL,QAAQ;AAAA;AAEV,QAAI,SAAS,cAAc;AAC3B,eAAW,WAAW;AACtB,QAAI,UAAU,iBAAiB;AAE/B,QAAI,CAAC,OAAO,UAAU;AACpB,oBAAc;AAAA;AAGhB,WAAO,WAAW,OAAO,YAAY;AAAA,MACnC,OAAO;AAAA,MACP,UAAU;AAAA;AAEZ,QAAI,WAAW,cAAa,YAAY,IAAI,aAAa;AACzD,QAAI,cAAc,cAAa,YAAY,IAAI,gBAAgB;AAC/D,QAAI,SAAS,YAAY,IAAI;AAC7B,QAAI,iBAAiB,YAAY,IAAI;AAErC,QAAI,YAAY,CAAC,OAAO,SAAS,OAAO;AACtC,iBAAW,KAAK,IAAI,cAAc,eAAe;AACjD,aAAO,SAAS,QAAQ;AACxB,oBAAc,iBAAiB;AAAA;AAGjC,mBAAgB,QAAO,SAAS,WAAW;AAC3C,cAAU,QAAS,eAAc,MAAM;AACvC,sBAAkB,QAAS,eAAc,cAAc;AAAA;AAEzD,MAAI,SAAS;AACb,EAAO,KAAK,YAAY,SAAU,eAAe,cAAc;AAC7D,WAAO,gBAAgB;AACvB,QAAI,SAAS,cAAc;AAC3B,QAAI,YAAY,cAAc;AAC9B,QAAI,cAAc,cAAa,cAAc,aAAa;AAC1D,QAAI,gBAAgB,cAAa,cAAc,KAAK;AACpD,QAAI,gBAAgB,cAAc;AAClC,QAAI,iBAAiB,cAAc;AACnC,QAAI,YAAa,iBAAgB,eAAgB,kBAAkB,kBAAiB,KAAK;AACzF,gBAAY,KAAK,IAAI,WAAW;AAEhC,IAAO,KAAK,QAAQ,SAAU,QAAQ,OAAO;AAC3C,UAAI,WAAW,OAAO;AAEtB,UAAI,YAAY,WAAW,WAAW;AACpC,mBAAW,KAAK,IAAI,UAAU;AAE9B,YAAI,OAAO,OAAO;AAChB,qBAAW,KAAK,IAAI,UAAU,OAAO;AAAA;AAGvC,yBAAiB;AACjB,eAAO,QAAQ;AACf;AAAA;AAAA;AAIJ,gBAAa,iBAAgB,eAAgB,kBAAkB,kBAAiB,KAAK;AACrF,gBAAY,KAAK,IAAI,WAAW;AAChC,QAAI,WAAW;AACf,QAAI;AACJ,IAAO,KAAK,QAAQ,SAAU,QAAQ,KAAK;AACzC,UAAI,CAAC,OAAO,OAAO;AACjB,eAAO,QAAQ;AAAA;AAGjB,mBAAa;AACb,kBAAY,OAAO,QAAS,KAAI;AAAA;AAGlC,QAAI,YAAY;AACd,kBAAY,WAAW,QAAQ;AAAA;AAGjC,QAAI,SAAS,CAAC,WAAW;AACzB,IAAO,KAAK,QAAQ,SAAU,QAAQ,SAAS;AAC7C,aAAO,cAAc,WAAW,OAAO,cAAc,YAAY;AAAA,QAC/D;AAAA,QACA,OAAO,OAAO;AAAA;AAEhB,gBAAU,OAAO,QAAS,KAAI;AAAA;AAAA;AAGlC,SAAO;AAAA;AAGT,IAAO,mBAAQ;;;AChOf,IAAI,uBAAuB;AAAA,EACzB,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,aAAa;AAAA,EACb,WAAW;AAAA,IACT,QAAQ;AAAA;AAAA;AAGZ,IAAI,wBAAwB;AAAA,EAC1B,aAAa;AAAA;AAGf,IAAI,YAEJ,SAAU,QAAQ;AAChB,YAAU,YAAW;AAErB,wBAAqB;AACnB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,WAAU;AACvB,WAAO;AAAA;AAGT,aAAU,OAAO;AACjB,SAAO;AAAA,EACP;AAEK,mBAAiB,WAAW;AACjC,MAAI;AACJ,mBAAS,yBAAyB,oBAAoB;AACtD,YAAU,yBAAyB,SAAS;AAC5C,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAEhC,mBAAiB,WAAW,SAAS,gBAAgB;AACrD,mBAAiB,WAAW,UAAU,iBAAiB;AACvD,YAAU,sBAAsB;AAChC,YAAU,sBAAsB;AAChC,YAAU,eAAe,MAAM,kBAAgB;AAAA;;;ACpD1C,kBAAgB,WAAW,KAAK;AACrC,QAAM,OAAO;AACb,MAAI,SAAS,UAAU;AACvB,MAAI,OAAO,UAAU;AACrB,MAAI,WAAS;AACb,MAAI,eAAe,KAAK;AACxB,MAAI,SAAS,KAAK;AAClB,MAAI,OAAO,OAAO;AAClB,MAAI,YAAY,CAAC,KAAK,GAAG,KAAK,IAAI,KAAK,OAAO,KAAK,GAAG,KAAK,IAAI,KAAK;AACpE,MAAI,cAAc;AAAA,IAChB,YAAY;AAAA,MACV,KAAK,UAAU;AAAA,MACf,QAAQ,UAAU;AAAA;AAAA,IAEpB,UAAU;AAAA,MACR,MAAM,UAAU;AAAA,MAChB,OAAO,UAAU;AAAA;AAAA;AAGrB,WAAO,WAAW,CAAC,WAAW,aAAa,YAAY,SAAS,gBAAgB,UAAU,IAAI,WAAW,eAAe,YAAY,WAAW,gBAAgB,UAAU;AACzK,MAAI,IAAI;AAAA,IACN,YAAY;AAAA,IACZ,UAAU;AAAA;AAEZ,WAAO,WAAW,KAAK,KAAK,IAAI,EAAE;AAClC,MAAI,eAAe;AAAA,IACjB,KAAK;AAAA,IACL,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,MAAM;AAAA;AAER,WAAO,iBAAiB,SAAO,gBAAgB,SAAO,gBAAgB,aAAa;AAEnF,MAAI,UAAU,IAAI,CAAC,YAAY,YAAY;AACzC,aAAO,gBAAgB,CAAC,SAAO;AAAA;AAGjC,MAAI,AAAO,SAAS,IAAI,aAAa,UAAU,IAAI,CAAC,aAAa,aAAa;AAC5E,aAAO,iBAAiB,CAAC,SAAO;AAAA;AAGlC,MAAI,gBAAgB,IAAI;AACxB,mBAAiB,QAAS,iBAAgB,UAAU,IAAI,CAAC,aAAa;AACtE,WAAO,gBAAgB,iBAAiB,QAAQ,CAAC,gBAAgB;AACjE,WAAO,KAAK;AACZ,SAAO;AAAA;;;ACvCT,IAAI,oBAAmB,CAAC,YAAY,iBAAiB;AACrD,IAAI,oBAAmB,CAAC,aAAa;AAErC,IAAI,iBAEJ,SAAU,QAAQ;AAChB,YAAU,iBAAgB;AAE1B,6BAA0B;AACxB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,gBAAe;AAC5B,UAAM,mBAAmB;AACzB,WAAO;AAAA;AAGT,kBAAe,UAAU,SAAS,SAAU,WAAW,SAAS,KAAK,SAAS;AAC5E,QAAI,QAAQ,KAAK;AACjB,UAAM;AACN,QAAI,eAAe,KAAK;AACxB,SAAK,aAAa,IAAY;AAC9B,QAAI,WAAS,AAAiB,SAAO;AACrC,QAAI,cAAc,IAAI,oBAAY,WAAW;AAC7C,IAAO,KAAK,mBAAkB,YAAY,KAAK;AAC/C,UAAM,IAAI,KAAK;AACf,UAAM,IAAI,YAAY;AACtB,IAAO,KAAK,mBAAkB,SAAU,MAAM;AAC5C,UAAI,UAAU,IAAI,CAAC,MAAM,UAAU;AACjC,6BAAoB,MAAM,MAAM,KAAK,OAAO,KAAK,YAAY;AAAA;AAAA,OAE9D;AACH,IAAQ,gBAAgB,cAAc,KAAK,YAAY;AAEvD,WAAO,UAAU,OAAO,KAAK,MAAM,WAAW,SAAS,KAAK;AAAA;AAG9D,kBAAe,UAAU,SAAS,WAAY;AAC5C,8BAA0B;AAAA;AAG5B,kBAAe,OAAO;AACtB,SAAO;AAAA,EACP;AAEF,IAAI,uBAAsB;AAAA,EACxB,WAAW,SAAU,UAAU,OAAO,WAAW,WAAW;AAC1D,QAAI,OAAO,UAAU;AAErB,QAAI,KAAK,MAAM,WAAW;AACxB;AAAA;AAGF,QAAI,iBAAiB,UAAU,SAAS;AACxC,QAAI,iBAAiB,eAAe,SAAS;AAC7C,QAAI,aAAa,eAAe,IAAI;AACpC,iBAAa,sBAAsB,QAAQ,aAAa,CAAC;AACzD,QAAI,WAAW,UAAU,iBAAiB;AAC1C,QAAI,eAAe,KAAK;AACxB,QAAI,aAAa;AACjB,QAAI,YAAY;AAChB,QAAI,cAAc,KAAK,eAAe;AAAA,MACpC,WAAW;AAAA;AAEb,QAAI,KAAK;AACT,QAAI,KAAK;AAET,aAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,EAAE,GAAG;AAC3C,UAAI,YAAY,KAAK,cAAc,YAAY,GAAG;AAElD,UAAI,cAAc;AAChB,WAAG,KAAK;AACR,WAAG,KAAK,SAAS;AACjB,WAAG,KAAK;AACR,WAAG,KAAK,SAAS,IAAI,SAAS;AAAA,aACzB;AACL,WAAG,KAAK,SAAS;AACjB,WAAG,KAAK;AACR,WAAG,KAAK,SAAS,IAAI,SAAS;AAC9B,WAAG,KAAK;AAAA;AAGV,UAAI,aAAa,cAAc,WAAW;AAC1C,iBAAW,cAAc,WAAW,eAAe;AACnD,iBAAW,YAAY,KAAK,IAAY,aAAK;AAAA,QAC3C,kBAAkB;AAAA,QAClB,OAAO;AAAA,UACL,IAAI,GAAG;AAAA,UACP,IAAI,GAAG;AAAA,UACP,IAAI,GAAG;AAAA,UACP,IAAI,GAAG;AAAA;AAAA,QAET,QAAQ;AAAA;AAAA;AAIZ,QAAI,YAAY,eAAe,aAAa,CAAC;AAE7C,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,EAAE,GAAG;AAC1C,YAAM,IAAI,AAAQ,UAAU,WAAW,IAAI;AAAA,QACzC,OAAO,AAAO,SAAS;AAAA,UACrB,QAAQ,WAAW,IAAI,WAAW;AAAA,WACjC;AAAA,QACH,QAAQ;AAAA;AAAA;AAAA;AAAA,EAId,WAAW,SAAU,UAAU,OAAO,WAAW,WAAW;AAC1D,gCAA4B,UAAU,WAAW,WAAW;AAAA;AAAA;AAGhE,IAAO,yBAAQ;;;AChHf,IAAI,kBAEJ,SAAU,QAAQ;AAChB,YAAU,kBAAiB;AAE3B,8BAA2B;AACzB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,iBAAgB;AAC7B,WAAO;AAAA;AAGT,mBAAgB,UAAU,mBAAmB,WAAY;AACvD,WAAO;AAAA;AAGT,mBAAgB,OAAO;AACvB,mBAAgB,aAAa;AAC7B,mBAAgB,gBAAgB;AAAA,IAC9B,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,UAAU;AAAA,MACR,MAAM;AAAA,MACN,WAAW;AAAA,QACT,OAAO;AAAA,QACP,MAAM;AAAA;AAAA;AAAA,IAMV,SAAS;AAAA,MACP,MAAM;AAAA;AAAA,IAER,UAAU;AAAA,MACR,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,WAAW;AAAA,QACT,OAAO;AAAA;AAAA;AAAA,IAGX,WAAW;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ,WAAW;AAAA,MACT,MAAM;AAAA,MACN,WAAW;AAAA,QACT,MAAM;AAAA,QACN,SAAS;AAAA;AAAA;AAAA;AAIf,SAAO;AAAA,EACP;AAEF,MAAM,iBAAiB,qBAAqB;AAC5C,IAAO,qBAAQ;;;AChEf,IAAI,aAEJ,SAAU,QAAQ;AAChB,YAAU,aAAY;AAEtB,uBAAoB,KAAK,QAAO,aAAa,UAAU,WAAU;AAC/D,QAAI,QAAQ,OAAO,KAAK,MAAM,KAAK,QAAO,gBAAgB;AAE1D,UAAM,OAAO,YAAY;AACzB,UAAM,WAAW,aAAY;AAC7B,WAAO;AAAA;AAOT,cAAW,UAAU,eAAe,WAAY;AAC9C,QAAI,YAAW,KAAK;AACpB,WAAO,cAAa,SAAS,cAAa;AAAA;AAG5C,cAAW,UAAU,cAAc,SAAU,OAAO,OAAO;AACzD,WAAO,KAAK,iBAAiB,YAAY,OAAO;AAAA;AAGlD,SAAO;AAAA,EACP;AAEF,IAAO,qBAAQ;;;ACxBR,IAAI,mBAAmB,CAAC;AAK/B,IAAI,SAEJ,WAAY;AACV,mBAAgB,WAAW,SAAS,KAAK;AACvC,SAAK,OAAO;AACZ,SAAK,YAAY;AAKjB,SAAK,aAAa;AAClB,SAAK,qBAAqB;AAC1B,SAAK,QAAQ;AAEb,SAAK,MAAM,WAAW,SAAS;AAAA;AAOjC,UAAO,UAAU,QAAQ,SAAU,WAAW,SAAS,KAAK;AAC1D,QAAI,MAAM,KAAK;AACf,QAAI,OAAO,IAAI,mBAAW,KAAK,AAAW,mBAAmB,YAAY,CAAC,GAAG,IAAI,UAAU,IAAI,SAAS,UAAU,IAAI;AACtH,QAAI,aAAa,KAAK,SAAS;AAC/B,SAAK,SAAS,cAAc,UAAU,IAAI;AAC1C,SAAK,UAAU,UAAU,IAAI;AAC7B,SAAK,SAAS,UAAU,IAAI;AAC5B,cAAU,OAAO;AACjB,SAAK,QAAQ;AACb,SAAK,mBAAmB;AACxB,SAAK,QAAQ;AAAA;AAOf,UAAO,UAAU,SAAS,SAAU,SAAS,KAAK;AAChD,YAAQ,WAAW,SAAU,aAAa;AACxC,UAAI,YAAY,qBAAqB,MAAM;AACzC,YAAI,SAAS,YAAY;AACzB,aAAK,OAAO,iBAAiB,KAAK,YAAY,SAAU,KAAK;AAC3D,eAAK,MAAM,MAAM,oBAAoB,QAAQ;AAAA,WAC5C;AACH,QAAW,gBAAgB,KAAK,MAAM,OAAO,KAAK,MAAM;AAAA;AAAA,OAEzD;AAAA;AAOL,UAAO,UAAU,SAAS,SAAU,WAAW,KAAK;AAClD,SAAK,QAAQ,cAAc;AAAA,MACzB,MAAM,UAAU,IAAI;AAAA,MACpB,KAAK,UAAU,IAAI;AAAA,MACnB,OAAO,UAAU,IAAI;AAAA,MACrB,QAAQ,UAAU,IAAI;AAAA,MACtB,OAAO,UAAU,IAAI;AAAA,MACrB,QAAQ,UAAU,IAAI;AAAA,OACrB;AAAA,MACD,OAAO,IAAI;AAAA,MACX,QAAQ,IAAI;AAAA;AAGd,SAAK;AAAA;AAGP,UAAO,UAAU,UAAU,WAAY;AACrC,WAAO,KAAK;AAAA;AAGd,UAAO,UAAU,cAAc,WAAY;AACzC,QAAI,OAAO,KAAK;AAChB,QAAI,OAAO,KAAK;AAChB,QAAI,eAAe,KAAK;AACxB,QAAI,SAAS,eAAe,CAAC,GAAG,KAAK,SAAS,CAAC,GAAG,KAAK;AACvD,QAAI,MAAM,KAAK,UAAU,IAAI;AAC7B,SAAK,UAAU,OAAO,MAAM,OAAO,IAAI;AAEvC,SAAK,qBAAqB,MAAM,eAAe,KAAK,IAAI,KAAK;AAAA;AAG/D,UAAO,UAAU,uBAAuB,SAAU,MAAM,WAAW;AACjE,QAAI,aAAa,KAAK;AACtB,QAAI,YAAY,WAAW,KAAK,WAAW;AAC3C,QAAI,eAAe,KAAK;AACxB,SAAK,gBAAgB,eAAe,SAAU,OAAO;AACnD,aAAO,QAAQ;AAAA,QACb,SAAU,OAAO;AACnB,aAAO,YAAY,QAAQ;AAAA;AAE7B,SAAK,eAAe,eAAe,SAAU,OAAO;AAClD,aAAO,QAAQ;AAAA,QACb,SAAU,OAAO;AACnB,aAAO,YAAY,QAAQ;AAAA;AAAA;AAQ/B,UAAO,UAAU,UAAU,WAAY;AACrC,WAAO,KAAK;AAAA;AAOd,UAAO,UAAU,cAAc,WAAY;AACzC,WAAO,KAAK;AAAA;AAGd,UAAO,UAAU,UAAU,WAAY;AACrC,WAAO,CAAC,KAAK;AAAA;AAGf,UAAO,UAAU,iBAAiB,WAAY;AAC5C,WAAO;AAAA,MACL,UAAU,CAAC,KAAK;AAAA,MAEhB,WAAW;AAAA;AAAA;AAQf,UAAO,UAAU,eAAe,SAAU,OAAO;AAC/C,QAAI,OAAO,KAAK;AAChB,QAAI,OAAO,KAAK;AAChB,QAAI,SAAS,KAAK;AAElB,QAAI,WAAW,cAAc;AAC3B,aAAO,KAAK,QAAQ,KAAK,aAAa,MAAM,QAAQ,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,KAAK,IAAI,KAAK;AAAA,WAC/F;AACL,aAAO,KAAK,QAAQ,KAAK,aAAa,MAAM,QAAQ,MAAM,MAAM,KAAK,KAAK,MAAM,MAAM,KAAK,IAAI,KAAK;AAAA;AAAA;AAIxG,UAAO,UAAU,cAAc,SAAU,OAAO;AAC9C,QAAI,OAAO,KAAK;AAChB,WAAO,CAAC,KAAK,YAAY,KAAK,aAAa,MAAM,KAAK,WAAW,eAAe,IAAI;AAAA;AAQtF,UAAO,UAAU,cAAc,SAAU,KAAK;AAC5C,QAAI,OAAO,KAAK;AAChB,QAAI,OAAO,KAAK;AAChB,QAAI,KAAK;AACT,QAAI,MAAM,KAAK,WAAW,eAAe,IAAI;AAE7C,QAAI,eAAe,OAAO;AACxB,YAAM,IAAI;AAAA;AAGZ,OAAG,OAAO,KAAK,cAAc,KAAK,YAAY,CAAC;AAC/C,OAAG,IAAI,OAAO,QAAQ,IAAI,KAAK,IAAI,KAAK,SAAS,IAAI,KAAK,IAAI,KAAK,QAAQ;AAC3E,WAAO;AAAA;AAGT,UAAO,UAAU,iBAAiB,SAAU,SAAS,QAAQ,OAAO;AAClE,QAAI,WAAW,aAAY;AAC3B,WAAO,aAAa,OAAO,KAAK,YAAY,SAAS;AAAA;AAGvD,UAAO,UAAU,mBAAmB,SAAU,SAAS,QAAQ,OAAO;AACpE,QAAI,WAAW,aAAY;AAC3B,WAAO,aAAa,OAAO,KAAK,YAAY,SAAS;AAAA;AAGvD,SAAO;AAAA;AAGT,sBAAqB,QAAQ;AAC3B,MAAI,cAAc,OAAO;AACzB,MAAI,cAAc,OAAO;AACzB,SAAO,eAAe,YAAY,oBAAoB,eAAe,YAAY;AAAA;AAGnF,IAAO,iBAAQ;;;AChMf,iBAAgB,SAAS,KAAK;AAC5B,MAAI,UAAU;AACd,UAAQ,cAAc,cAAc,SAAU,WAAW,KAAK;AAC5D,QAAI,SAAS,IAAI,eAAO,WAAW,SAAS;AAC5C,WAAO,OAAO,YAAY;AAC1B,WAAO,OAAO,WAAW;AACzB,cAAU,mBAAmB;AAC7B,YAAQ,KAAK;AAAA;AAEf,UAAQ,WAAW,SAAU,aAAa;AACxC,QAAI,YAAY,IAAI,wBAAwB,cAAc;AACxD,UAAI,kBAAkB,YAAY,uBAAuB,cAAc,kBAAkB,OAAO;AAChG,kBAAY,mBAAmB,mBAAmB,gBAAgB;AAAA;AAAA;AAGtE,SAAO;AAAA;AAGT,IAAI,gBAAgB;AAAA,EAClB,QAAQ;AAAA,EACR,YAAY;AAAA;AAEd,IAAO,wBAAQ;;;AC5Bf,IAAI,KAAK,CAAC,KAAK;AACf,IAAI,KAAK,CAAC,SAAS;AAEnB,IAAI,oBAEJ,SAAU,QAAQ;AAChB,YAAU,oBAAmB;AAE7B,gCAA6B;AAC3B,WAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAAA;AAO7D,qBAAkB,UAAU,eAAe,SAAU,UAAU,OAAO,WAAW,kBAAkB,KAAK;AACtG,QAAI,OAAO,UAAU;AACrB,QAAI,WAAW,KAAK;AACpB,QAAI,cAAc,gBAAgB,UAAU,IAAI,iBAAiB;AACjE,QAAI,aAAa,SAAS,YAAY,OAAO;AAC7C,QAAI,kBAAkB,iBAAiB,IAAI;AAE3C,QAAI,mBAAmB,oBAAoB,QAAQ;AACjD,UAAI,UAAU,AAAW,aAAa;AACtC,UAAI,gBAAgB,qBAAoB,iBAAiB,MAAM,YAAY;AAC3E,oBAAc,QAAQ;AACtB,eAAS,aAAa,cAAc;AACpC,eAAS,UAAU;AAAA;AAGrB,QAAI,aAAa,AAAiB,SAAO;AACzC,IAAW,kCACX,OAAO,UAAU,YAAY,WAAW,kBAAkB;AAAA;AAO5D,qBAAkB,UAAU,qBAAqB,SAAU,OAAO,WAAW,kBAAkB;AAC7F,QAAI,aAAa,AAAiB,SAAO,WAAW;AAAA,MAClD,aAAa;AAAA;AAGf,eAAW,cAAc,iBAAiB,IAAI,CAAC,UAAU;AACzD,QAAI,YAAW,AAAW,uBAAuB,UAAU,MAAM,OAAO;AACxE,WAAO;AAAA,MACL,GAAG,UAAS;AAAA,MACZ,GAAG,UAAS;AAAA,MACZ,UAAU,WAAW,WAAY,YAAW,iBAAiB,IAAI,KAAK,KAAK;AAAA;AAAA;AAQ/E,qBAAkB,UAAU,wBAAwB,SAAU,YAAW,OAAO,WAAW,kBAAkB;AAC3G,QAAI,OAAO,UAAU;AACrB,QAAI,WAAW,KAAK;AACpB,QAAI,WAAW,iBAAiB;AAChC,QAAI,aAAa,gBAAgB,UAAU;AAC3C,QAAI,eAAe,CAAC,WAAU,GAAG,WAAU;AAC3C,iBAAa,aAAa,MAAM;AAChC,iBAAa,YAAY,KAAK,IAAI,WAAW,IAAI,aAAa;AAC9D,iBAAa,YAAY,KAAK,IAAI,WAAW,IAAI,aAAa;AAC9D,QAAI,cAAc,gBAAgB,UAAU,IAAI;AAChD,QAAI,mBAAoB,aAAY,KAAK,YAAY,MAAM;AAC3D,QAAI,cAAc,CAAC,kBAAkB;AACrC,gBAAY,YAAY,aAAa;AACrC,WAAO;AAAA,MACL,GAAG,aAAa;AAAA,MAChB,GAAG,aAAa;AAAA,MAChB,UAAU,WAAU;AAAA,MACpB;AAAA,MACA,eAAe;AAAA,QACb,eAAe;AAAA;AAAA;AAAA;AAKrB,SAAO;AAAA,EACP;AAEF,IAAI,uBAAsB;AAAA,EACxB,MAAM,SAAU,MAAM,YAAY,aAAa;AAC7C,QAAI,cAAc,AAAW,cAAc,CAAC,YAAY,YAAY,KAAK,CAAC,YAAY,YAAY,KAAK,iBAAiB;AACxH,WAAO;AAAA,MACL,MAAM;AAAA,MACN,kBAAkB;AAAA,MAClB,OAAO;AAAA;AAAA;AAAA,EAGX,QAAQ,SAAU,MAAM,YAAY,aAAa;AAC/C,QAAI,YAAY,KAAK;AACrB,QAAI,OAAO,YAAY,KAAK,YAAY;AACxC,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO,AAAW,cAAc,CAAC,aAAa,YAAY,GAAG,YAAY,KAAK,CAAC,WAAW,OAAO,iBAAiB;AAAA;AAAA;AAAA;AAKxH,0BAA0B,MAAM;AAC9B,SAAO,KAAK,iBAAiB,IAAI;AAAA;AAGnC,yBAAyB,UAAU,UAAU;AAC3C,MAAI,OAAO,SAAS;AACpB,SAAO,CAAC,KAAK,GAAG,YAAY,KAAK,GAAG,aAAa,KAAK,GAAG;AAAA;AAG3D,IAAO,4BAAQ;;;AC1Gf,IAAI,aAEJ,SAAU,QAAQ;AAChB,YAAU,aAAY;AAEtB,yBAAsB;AACpB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,YAAW;AACxB,WAAO;AAAA;AAGT,cAAW,OAAO;AAClB,SAAO;AAAA,EACP;AAEK,mBAAiB,WAAW;AACjC,MAAI;AACJ,mBAAS,yBAAyB,qBAAqB;AACvD,YAAU,sBAAsB;AAEhC,YAAU,sBAAsB;AAChC,YAAU,uBAAuB;AACjC,mBAAiB,WAAW,UAAU,oBAAiB,mBAAgB;AACvE,YAAU,yBAAyB,UAAU;AAAA;;;AC9B/C,IAAI,gBAEJ,SAAU,QAAQ;AAChB,YAAU,gBAAe;AAEzB,4BAAyB;AACvB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,eAAc;AAC3B,WAAO;AAAA;AAOT,iBAAc,UAAU,OAAO,SAAU,QAAQ,aAAa,SAAS;AACrE,QAAI,sBAAsB,gBAAgB;AAE1C,WAAO,UAAU,KAAK,MAAM,MAAM;AAElC,kCAA8B,QAAQ;AAAA;AAOxC,iBAAc,UAAU,cAAc,SAAU,QAAQ;AACtD,WAAO,UAAU,YAAY,MAAM,MAAM;AAEzC,kCAA8B,KAAK,QAAQ;AAAA;AAG7C,iBAAc,UAAU,cAAc,WAAY;AAEhD,WAAO,KAAK,OAAO;AAAA;AAGrB,iBAAc,OAAO;AACrB,iBAAc,gBAAgB;AAAA,IAC5B,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,MAAM;AAAA,IACN,KAAK;AAAA,IACL,UAAU;AAAA,IAEV,QAAQ;AAAA,IAER,WAAW;AAAA,MACT,MAAM;AAAA,MACN,WAAW;AAAA,QACT,OAAO;AAAA,QACP,OAAO;AAAA,QACP,MAAM;AAAA;AAAA;AAAA,IAIV,WAAW;AAAA,MACT,OAAO;AAAA,MACP,aAAa;AAAA,MACb,aAAa;AAAA;AAAA,IAGf,UAAU;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MAEV,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,OAAO;AAAA;AAAA,IAGT,YAAY;AAAA,MACV,MAAM;AAAA,MAEN,UAAU;AAAA,MACV,QAAQ;AAAA,MAER,OAAO;AAAA,MACP,WAAW;AAAA,MACX,OAAO;AAAA;AAAA,IAGT,WAAW;AAAA,MACT,MAAM;AAAA,MAEN,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,UAAU;AAAA;AAAA;AAGd,SAAO;AAAA,EACP;AAEF,uCAAuC,QAAQ,KAAK;AAElD,MAAI,WAAW,OAAO;AACtB,MAAI;AAEJ,MAAI,CAAC,AAAO,QAAQ,WAAW;AAC7B,kBAAc,OAAO,WAAW,CAAC,UAAU;AAAA,SACtC;AACL,kBAAc;AAAA;AAGhB,MAAI,YAAY,WAAW,GAAG;AAC5B,gBAAY,KAAK,YAAY;AAAA;AAG/B,MAAI,aAAa,AAAO,IAAI,CAAC,GAAG,IAAI,SAAU,OAAO;AAInD,QAAI,eAAe,KAAK,QAAQ;AAC9B,kBAAY,SAAS;AAAA;AAGvB,WAAO,YAAY,UAAU,QAAQ,YAAY,WAAW;AAAA;AAE9D,mBAAiB,QAAQ,KAAK;AAAA,IAC5B,MAAM;AAAA,IACN;AAAA;AAAA;AAIJ,IAAO,wBAAQ;;;AC9Hf,IAAI,eAEJ,SAAU,QAAQ;AAChB,YAAU,eAAc;AAExB,2BAAwB;AACtB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,cAAa;AAC1B,WAAO;AAAA;AAGT,gBAAa,UAAU,SAAS,SAAU,eAAe,SAAS,KAAK;AACrE,QAAI,QAAQ,KAAK;AACjB,UAAM;AACN,QAAI,WAAW,cAAc;AAE7B,QAAI,YAAY,SAAS;AACzB,QAAI,SAAS,SAAS;AAEtB,QAAI,cAAc,QAAQ;AAE1B,SAAK,eAAe,eAAe,WAAW;AAG9C,SAAK,aAAa,eAAe,WAAW,QAAQ;AAEpD,SAAK,gBAAgB,eAAe,WAAW,QAAQ;AAEvD,SAAK,iBAAiB,eAAe,aAAa,QAAQ;AAE1D,SAAK,gBAAgB,eAAe,aAAa,WAAW,QAAQ;AAAA;AAItE,gBAAa,UAAU,iBAAiB,SAAU,eAAe,WAAW,OAAO;AACjF,QAAI,WAAW,cAAc;AAC7B,QAAI,qBAAqB,cAAc,SAAS,aAAa;AAC7D,QAAI,KAAK,SAAS;AAClB,QAAI,KAAK,SAAS;AAElB,aAAS,IAAI,UAAU,MAAM,MAAM,KAAK,UAAU,IAAI,MAAM,IAAI,SAAS,YAAY,GAAG,GAAG,MAAM;AAC/F,UAAI,QAAQ,SAAS,WAAW,CAAC,IAAI,OAAO;AAE5C,UAAI,OAAO,IAAY,aAAK;AAAA,QAC1B,OAAO;AAAA,UACL,GAAG,MAAM;AAAA,UACT,GAAG,MAAM;AAAA,UACT,OAAO;AAAA,UACP,QAAQ;AAAA;AAAA,QAEV,QAAQ;AAAA,QACR,OAAO;AAAA;AAET,YAAM,IAAI;AAAA;AAAA;AAKd,gBAAa,UAAU,eAAe,SAAU,eAAe,WAAW,QAAQ,OAAO;AACvF,QAAI,OAAO;AACX,QAAI,WAAW,cAAc;AAC7B,QAAI,iBAAiB,cAAc,SAAS,CAAC,aAAa,cAAc;AACxE,QAAI,OAAO,cAAc,IAAI,CAAC,aAAa;AAC3C,QAAI,YAAY,eAAe;AAC/B,SAAK,YAAY;AACjB,SAAK,YAAY;AACjB,SAAK,mBAAmB;AACxB,SAAK,kBAAkB;AACvB,QAAI,WAAW,UAAU;AAEzB,aAAS,IAAI,GAAG,SAAS,QAAQ,UAAU,IAAI,MAAM,KAAK;AACxD,gBAAU,SAAS;AAEnB,UAAI,MAAM,GAAG;AACX,mBAAW,SAAS,YAAY,UAAU,MAAM,IAAI,MAAM,UAAU,MAAM;AAAA;AAG5E,UAAI,OAAO,SAAS;AACpB,WAAK,SAAS,KAAK,aAAa;AAChC,iBAAW,SAAS,YAAY;AAAA;AAGlC,cAAU,SAAS,YAAY,UAAU,IAAI,MAAM,GAAG;AAEtD,uBAAmB,OAAM;AACvB,WAAK,iBAAiB,KAAK,SAAS,YAAY;AAEhD,WAAK,gBAAgB,KAAK,SAAS,WAAW,CAAC,QAAO,OAAO;AAE7D,UAAI,SAAS,KAAK,wBAAwB,eAAe,OAAM;AAE/D,WAAK,UAAU,KAAK,OAAO;AAE3B,WAAK,UAAU,KAAK,OAAO,OAAO,SAAS;AAE3C,cAAQ,KAAK,eAAe,QAAQ,gBAAgB;AAAA;AAItD,YAAQ,KAAK,eAAe,KAAK,gBAAgB,KAAK,WAAW,WAAW,SAAS,gBAAgB;AAErG,YAAQ,KAAK,eAAe,KAAK,gBAAgB,KAAK,WAAW,WAAW,SAAS,gBAAgB;AAAA;AAIvG,gBAAa,UAAU,kBAAkB,SAAU,QAAQ,WAAW,QAAQ;AAC5E,QAAI,KAAK,CAAC,OAAO,GAAG,SAAS,OAAO,OAAO,SAAS,GAAG;AACvD,QAAI,MAAM,WAAW,eAAe,IAAI;AAExC,OAAG,GAAG,OAAO,GAAG,GAAG,OAAO,YAAY;AACtC,OAAG,GAAG,OAAO,GAAG,GAAG,OAAO,YAAY;AACtC,WAAO;AAAA;AAIT,gBAAa,UAAU,iBAAiB,SAAU,QAAQ,WAAW,OAAO;AAC1E,QAAI,UAAU,IAAY,iBAAS;AAAA,MACjC,IAAI;AAAA,MACJ,OAAO;AAAA,QACL;AAAA;AAAA,MAEF,OAAO;AAAA;AAET,UAAM,IAAI;AAAA;AAIZ,gBAAa,UAAU,0BAA0B,SAAU,eAAe,MAAM,QAAQ;AACtF,QAAI,WAAW,cAAc;AAC7B,QAAI,aAAa,SAAS,YAAY;AACtC,QAAI,SAAS;AAEb,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,UAAI,OAAO,SAAS,YAAY,WAAW,MAAM;AACjD,UAAI,QAAQ,SAAS,WAAW,CAAC,KAAK,OAAO;AAC7C,aAAO,IAAI,KAAK,OAAO,MAAM;AAC7B,aAAO,IAAI,KAAK,MAAM,KAAK,MAAM,WAAW,eAAe,OAAO;AAAA;AAGpE,WAAO;AAAA;AAGT,gBAAa,UAAU,kBAAkB,SAAU,WAAW,QAAQ;AACpE,QAAI,OAAO,cAAc,YAAY,WAAW;AAC9C,aAAO,gBAAgB,WAAW;AAAA;AAGpC,QAAI,OAAO,cAAc,YAAY;AACnC,aAAO,UAAU;AAAA;AAGnB,WAAO,OAAO;AAAA;AAGhB,gBAAa,UAAU,2BAA2B,SAAU,QAAQ,OAAO,QAAQ,WAAU,QAAQ;AACnG,QAAI,IAAI,MAAM;AACd,QAAI,IAAI,MAAM;AACd,QAAI,SAAS,CAAC,UAAU;AAExB,QAAI,cAAa,UAAU;AACzB,WAAK;AACL,eAAS,CAAC,UAAU;AAAA,eACX,cAAa,QAAQ;AAC9B,WAAK;AAAA,eACI,cAAa,SAAS;AAC/B,WAAK;AACL,eAAS,CAAC,UAAU;AAAA,WACf;AAEL,WAAK;AAAA;AAGP,QAAI,UAAS;AAEb,QAAI,cAAa,UAAU,cAAa,SAAS;AAC/C,gBAAS,KAAK,KAAK;AAAA;AAGrB,WAAO;AAAA,MACL,UAAU;AAAA,MACV;AAAA,MACA;AAAA,MACA,OAAO;AAAA,QACL,OAAO,OAAO;AAAA,QACd,eAAe,OAAO;AAAA;AAAA;AAAA;AAM5B,gBAAa,UAAU,kBAAkB,SAAU,eAAe,WAAW,QAAQ,OAAO;AAC1F,QAAI,YAAY,cAAc,SAAS;AAEvC,QAAI,CAAC,UAAU,IAAI,SAAS;AAC1B;AAAA;AAGF,QAAI,SAAS,UAAU,IAAI;AAC3B,QAAI,MAAM,UAAU,IAAI;AAExB,QAAI,CAAC,KAAK;AACR,YAAM,WAAW,eAAe,QAAQ;AAAA;AAG1C,QAAI,SAAS,CAAC,KAAK,UAAU,KAAK,UAAU,SAAS,IAAI,KAAK,UAAU;AACxE,QAAI,KAAM,QAAO,GAAG,KAAK,OAAO,GAAG,MAAM;AACzC,QAAI,KAAM,QAAO,GAAG,KAAK,OAAO,GAAG,MAAM;AACzC,QAAI,MAAM,WAAW,eAAe,IAAI;AACxC,QAAI,YAAY;AAAA,MACd,KAAK,CAAC,IAAI,OAAO,KAAK;AAAA,MACtB,QAAQ,CAAC,IAAI,OAAO,IAAI,KAAK;AAAA,MAC7B,MAAM,CAAC,OAAO,IAAI,KAAK,IAAI;AAAA,MAC3B,OAAO,CAAC,OAAO,KAAK,IAAI;AAAA;AAE1B,QAAI,OAAO,UAAU,MAAM;AAE3B,QAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,MAAM,GAAG;AACzC,aAAO,OAAO,MAAM,UAAU,IAAI;AAAA;AAGpC,QAAI,YAAY,UAAU,IAAI;AAC9B,QAAI,SAAS;AAAA,MACX,OAAO,UAAU,MAAM;AAAA,MACvB,KAAK,UAAU,IAAI;AAAA,MACnB,SAAS;AAAA;AAGX,QAAI,UAAU,KAAK,gBAAgB,WAAW;AAE9C,QAAI,WAAW,IAAY,aAAK;AAAA,MAC9B,IAAI;AAAA,MACJ,OAAO,gBAAgB,WAAW;AAAA,QAChC,MAAM;AAAA;AAAA;AAGV,aAAS,KAAK,KAAK,yBAAyB,UAAU,UAAU,MAAM,QAAQ,KAAK;AACnF,UAAM,IAAI;AAAA;AAGZ,gBAAa,UAAU,4BAA4B,SAAU,OAAO,UAAU,QAAQ,WAAU,QAAQ;AACtG,QAAI,QAAQ;AACZ,QAAI,SAAS;AACb,QAAI,IAAI,MAAM;AACd,QAAI,IAAI,MAAM;AAEd,QAAI,WAAW,cAAc;AAC3B,UAAI,IAAI;AAER,UAAI,UAAU;AACZ,gBAAQ;AAAA;AAGV,UAAI,cAAa,SAAS;AACxB,iBAAS;AAAA;AAAA,WAEN;AACL,UAAI,IAAI;AAER,UAAI,UAAU;AACZ,iBAAS;AAAA;AAGX,UAAI,cAAa,SAAS;AACxB,gBAAQ;AAAA;AAAA;AAIZ,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA,eAAe;AAAA;AAAA;AAKnB,gBAAa,UAAU,mBAAmB,SAAU,eAAe,aAAa,QAAQ,OAAO;AAC7F,QAAI,aAAa,cAAc,SAAS;AAExC,QAAI,CAAC,WAAW,IAAI,SAAS;AAC3B;AAAA;AAGF,QAAI,UAAU,WAAW,IAAI;AAC7B,QAAI,SAAS,WAAW,IAAI;AAC5B,QAAI,MAAM,WAAW,IAAI;AACzB,QAAI,QAAQ,WAAW,IAAI;AAC3B,QAAI,aAAa,CAAC,KAAK,WAAW,KAAK;AAEvC,QAAI,CAAC,WAAW,SAAS,UAAU;AACjC,UAAI,SAAS;AAEX,sBAAc,eAAe,YAAY;AAAA;AAK3C,gBAAU,YAAY,IAAI,CAAC,QAAQ,iBAAiB;AAAA;AAGtD,QAAI,MAAM,QAAQ,UAAU,IAAI;AAChC,QAAI,OAAO,WAAW,eAAe,IAAI;AACzC,aAAS,QAAQ,UAAU,CAAC,SAAS;AACrC,QAAI,WAAW,UAAU;AAEzB,aAAS,IAAI,GAAG,IAAI,WAAW,KAAK,SAAS,GAAG,KAAK;AACnD,UAAI,MAAM,WAAW,KAAK,GAAG;AAC7B,UAAI,WAAW,KAAK,iBAAiB;AAErC,UAAI,UAAU;AACZ,YAAI,iBAAiB,KAAK,gBAAgB;AAC1C,YAAI,QAAS,gBAAe,QAAQ,WAAW,GAAG,IAAI,GAAG,SAAS;AAAA;AAGpE,UAAI,YAAY,WAAW,IAAI;AAC/B,UAAI,SAAS,QAAQ,CAAC,SAAS,IAAI;AACnC,UAAI,SAAS;AAAA,QACX,MAAM,SAAS;AAAA,QACf,IAAK,UAAS,IAAI,IAAI,MAAM;AAAA,QAC5B,IAAI,SAAS;AAAA,QACb,GAAG,CAAC,SAAS;AAAA,QACb,SAAS;AAAA;AAGX,UAAI,UAAU,KAAK,gBAAgB,WAAW;AAE9C,UAAI,YAAY,IAAY,aAAK;AAAA,QAC/B,IAAI;AAAA,QACJ,OAAO,OAAO,gBAAgB,YAAY;AAAA,UACxC,MAAM;AAAA,YACJ,KAAK,0BAA0B,KAAK,UAAU,QAAQ,KAAK;AAAA;AAEjE,YAAM,IAAI;AAAA;AAAA;AAId,gBAAa,UAAU,2BAA2B,SAAU,OAAO,QAAQ,WAAU,QAAQ,UAAU;AACrG,QAAI,QAAQ;AACZ,QAAI,SAAS;AACb,QAAI,IAAI,MAAM;AACd,QAAI,IAAI,MAAM;AACd,QAAI,UAAU,cAAa;AAE3B,QAAI,WAAW,cAAc;AAC3B,UAAI,IAAI,SAAU,WAAU,IAAI,MAAM,SAAS,KAAK;AACpD,cAAQ,UAAU,UAAU;AAAA,WACvB;AACL,UAAI,IAAI,SAAU,WAAU,IAAI,MAAM,SAAS,KAAK;AACpD,eAAS,UAAU,WAAW;AAAA;AAGhC,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA,eAAe;AAAA;AAAA;AAKnB,gBAAa,UAAU,kBAAkB,SAAU,eAAe,aAAa,WAAW,QAAQ,OAAO;AACvG,QAAI,WAAW,cAAc,SAAS;AAEtC,QAAI,CAAC,SAAS,IAAI,SAAS;AACzB;AAAA;AAGF,QAAI,WAAW,cAAc;AAC7B,QAAI,MAAM,SAAS,IAAI;AACvB,QAAI,UAAU,SAAS,IAAI;AAC3B,QAAI,SAAS,SAAS,IAAI;AAC1B,QAAI,iBAAiB,SAAS;AAE9B,QAAI,CAAC,WAAW,SAAS,UAAU;AACjC,UAAI,SAAS;AAEX,sBAAc,eAAe,YAAY;AAAA;AAI3C,UAAI,iBAAiB,YAAY,IAAI,CAAC,QAAQ;AAC9C,gBAAU,kBAAkB,IAAI,YAAY,IAAI,CAAC,QAAQ,mBAAmB,SAAU,KAAK;AACzF,eAAO,IAAI;AAAA;AAAA;AAIf,QAAI,QAAQ,SAAS,YAAY,UAAU,IAAI,MAAM,IAAI,UAAU,OAAO;AAC1E,QAAI,WAAW,CAAC,SAAS,gBAAgB,SAAS;AAClD,aAAS,cAAa,QAAQ,KAAK,IAAI,SAAS,IAAI,SAAS;AAE7D,QAAI,QAAQ,SAAS;AACnB,cAAQ,SAAS,YAAY,UAAU,MAAM,MAAM,CAAE,KAAI,UAAU,QAAQ;AAC3E,eAAS,CAAC;AAAA;AAGZ,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,UAAI,OAAO,SAAS,YAAY,OAAO;AACvC,UAAI,QAAQ,SAAS,WAAW,CAAC,KAAK,OAAO,OAAO;AACpD,UAAI,MAAM;AACV,YAAM,KAAK,IAAK,KAAI,kBAAkB;AACtC,UAAI,WAAW,IAAY,aAAK;AAAA,QAC9B,IAAI;AAAA,QACJ,OAAO,OAAO,gBAAgB,UAAU;AAAA,UACtC,MAAM,QAAQ;AAAA,YACZ,KAAK,yBAAyB,OAAO,QAAQ,KAAK,QAAQ;AAAA;AAEhE,YAAM,IAAI;AAAA;AAAA;AAId,gBAAa,OAAO;AACpB,SAAO;AAAA,EACP;AAEF,IAAO,uBAAQ;;;ACpaf,IAAI,oBAAoB;AAExB,IAAI,WAEJ,WAAY;AACV,qBAAkB,eAAe,SAAS,KAAK;AAC7C,SAAK,OAAO;AACZ,SAAK,aAAa,UAAS;AAE3B,SAAK,oBAAoB,UAAS;AAClC,SAAK,SAAS;AAAA;AAGhB,YAAS,oBAAoB,WAAY;AACvC,WAAO,CAAC;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,OACL;AAAA;AAGL,YAAS,UAAU,eAAe,WAAY;AAC5C,WAAO,KAAK;AAAA;AAGd,YAAS,UAAU,WAAW,WAAY;AACxC,WAAO,KAAK;AAAA;AAGd,YAAS,UAAU,UAAU,WAAY;AACvC,WAAO,KAAK;AAAA;AAGd,YAAS,UAAU,eAAe,WAAY;AAC5C,WAAO,KAAK;AAAA;AAGd,YAAS,UAAU,gBAAgB,WAAY;AAC7C,WAAO,KAAK;AAAA;AAGd,YAAS,UAAU,YAAY,WAAY;AACzC,WAAO,KAAK;AAAA;AAad,YAAS,UAAU,oBAAoB,WAAY;AACjD,WAAO,KAAK;AAAA;AAQd,YAAS,UAAU,cAAc,SAAU,MAAM;AAC/C,WAAO,AAAW,UAAU;AAC5B,QAAI,IAAI,KAAK;AACb,QAAI,IAAI,KAAK,aAAa;AAC1B,QAAI,OAAO,IAAI,KAAK,MAAM,IAAI,KAAK;AACnC,QAAI,IAAI,KAAK;AACb,QAAI,OAAO,IAAI,KAAK,MAAM,IAAI,KAAK;AACnC,QAAI,MAAM,KAAK;AACf,UAAM,KAAK,IAAK,OAAM,IAAI,KAAK,uBAAuB;AACtD,WAAO;AAAA,MACL,GAAG,IAAI;AAAA,MACP,GAAG;AAAA,MACH,GAAG;AAAA,MACH;AAAA,MACA,MAAM,KAAK;AAAA,MACX,cAAc,IAAI,MAAM,OAAO,MAAM;AAAA,MACrC;AAAA;AAAA;AAIJ,YAAS,UAAU,cAAc,SAAU,MAAM,GAAG;AAClD,QAAI,KAAK;AAET,QAAI,MAAM,GAAG;AACX,aAAO,KAAK,YAAY;AAAA;AAG1B,WAAO,IAAI,KAAK,KAAK,YAAY,MAAM;AACvC,SAAK,QAAQ,KAAK,YAAY;AAC9B,WAAO,KAAK,YAAY;AAAA;AAG1B,YAAS,UAAU,SAAS,SAAU,SAAS,KAAK;AAClD,SAAK,kBAAkB,CAAC,KAAK,OAAO,SAAS,YAAY,IAAI;AAC7D,SAAK,UAAU,KAAK,OAAO,IAAI;AAC/B,SAAK,aAAa,KAAK,OAAO,SAAS,aAAa,eAAe,aAAa;AAChF,SAAK,aAAa,KAAK,cAAc,KAAK;AAC1C,QAAI,QAAQ,KAAK,WAAW,SAAS;AACrC,QAAI,UAAU,CAAC,SAAS;AAExB,QAAI,WAAW,KAAK,OAAO,cAAc;AAEzC,QAAI,eAAe,KAAK,OAAO;AAE/B,QAAI,cAAc,KAAK,YAAY,eAAe,CAAC,OAAO,KAAK,CAAC,GAAG;AACnE,IAAO,KAAK,CAAC,GAAG,IAAI,SAAU,KAAK;AACjC,UAAI,kBAAkB,UAAU,MAAM;AACpC,qBAAa,QAAQ,QAAQ,SAAS,OAAO,YAAY;AAAA;AAAA;AAG7D,QAAI,WAAW;AAAA,MACb,OAAO,IAAI;AAAA,MACX,QAAQ,IAAI;AAAA;AAEd,QAAI,eAAe,KAAK,QAAQ,AAAO,cAAc,cAAc;AACnE,IAAO,KAAK,CAAC,GAAG,IAAI,SAAU,KAAK;AACjC,UAAI,CAAC,kBAAkB,UAAU,MAAM;AACrC,iBAAS,OAAO,aAAa,QAAQ,QAAQ,YAAY;AAAA;AAAA;AAI7D,+BAA2B,WAAU,KAAK;AACxC,aAAO,UAAS,QAAQ,QAAQ,UAAS,SAAS;AAAA;AAIpD,SAAK,MAAM,SAAS;AACpB,SAAK,MAAM,SAAS;AAAA;AAStB,YAAS,UAAU,cAAc,SAAU,MAAM,OAAO;AACtD,IAAO,QAAQ,SAAU,QAAO,KAAK;AACrC,aAAS,QAAS,SAAQ;AAC1B,QAAI,UAAU,KAAK,YAAY;AAC/B,QAAI,QAAQ,KAAK;AACjB,QAAI,OAAO,QAAQ;AAEnB,QAAI,SAAS,CAAE,SAAQ,QAAQ,MAAM,MAAM,QAAQ,QAAQ,OAAO,MAAM,IAAI,OAAO,oBAAoB;AACrG,aAAO,CAAC,KAAK;AAAA;AAGf,QAAI,OAAO,QAAQ;AAEnB,QAAI,UAAU,KAAK,cAAc,CAAC,MAAM,MAAM,MAAM,OAAO;AAE3D,QAAI,KAAK,YAAY,YAAY;AAC/B,aAAO,CAAC,KAAK,MAAM,IAAI,OAAO,KAAK,MAAM,KAAK,MAAM,GAAG,KAAK,MAAM,IAAI,UAAU,KAAK,MAAM,KAAK,MAAM;AAAA;AAGxG,WAAO,CAAC,KAAK,MAAM,IAAI,UAAU,KAAK,MAAM,KAAK,MAAM,GAAG,KAAK,MAAM,IAAI,OAAO,KAAK,MAAM,KAAK,MAAM;AAAA;AAOxG,YAAS,UAAU,cAAc,SAAU,OAAO;AAChD,QAAI,OAAO,KAAK,YAAY;AAC5B,WAAO,QAAQ,KAAK;AAAA;AAOtB,YAAS,UAAU,aAAa,SAAU,MAAM,OAAO;AACrD,QAAI,QAAQ,KAAK,YAAY,MAAM;AACnC,WAAO;AAAA,MACL,cAAc;AAAA,QACZ,GAAG,MAAM,KAAM,MAAK,MAAM,KAAK,cAAc;AAAA,QAC7C,GAAG,MAAM,KAAM,MAAK,MAAM,KAAK,cAAc;AAAA,QAC7C,OAAO,KAAK,MAAM,KAAK;AAAA,QACvB,QAAQ,KAAK,MAAM,KAAK;AAAA;AAAA,MAE1B,QAAQ;AAAA,MACR,IAAI,CAAC,MAAM,KAAK,KAAK,MAAM,GAAG,MAAM,KAAK,KAAK,MAAM;AAAA,MACpD,IAAI,CAAC,MAAM,KAAK,KAAK,MAAM,GAAG,MAAM,KAAK,KAAK,MAAM;AAAA,MACpD,IAAI,CAAC,MAAM,KAAK,KAAK,MAAM,GAAG,MAAM,KAAK,KAAK,MAAM;AAAA,MACpD,IAAI,CAAC,MAAM,KAAK,KAAK,MAAM,GAAG,MAAM,KAAK,KAAK,MAAM;AAAA;AAAA;AAWxD,YAAS,UAAU,cAAc,SAAU,OAAO;AAChD,QAAI,OAAO,KAAK,MAAO,OAAM,KAAK,KAAK,MAAM,KAAK,KAAK,OAAO;AAC9D,QAAI,OAAO,KAAK,MAAO,OAAM,KAAK,KAAK,MAAM,KAAK,KAAK,OAAO;AAC9D,QAAI,QAAQ,KAAK,WAAW;AAE5B,QAAI,KAAK,YAAY,YAAY;AAC/B,aAAO,KAAK,sBAAsB,MAAM,OAAO,GAAG;AAAA;AAGpD,WAAO,KAAK,sBAAsB,MAAM,OAAO,GAAG;AAAA;AAGpD,YAAS,UAAU,iBAAiB,SAAU,SAAS,QAAQ,OAAO;AACpE,QAAI,WAAW,aAAY;AAC3B,WAAO,aAAa,OAAO,SAAS,YAAY,SAAS;AAAA;AAG3D,YAAS,UAAU,mBAAmB,SAAU,SAAS,QAAQ,OAAO;AACtE,QAAI,WAAW,aAAY;AAC3B,WAAO,aAAa,OAAO,SAAS,YAAY,SAAS;AAAA;AAG3D,YAAS,UAAU,eAAe,SAAU,OAAO;AACjD,YAAQ,KAAK;AACb,WAAO;AAAA;AAQT,YAAS,UAAU,mBAAmB,WAAY;AAChD,QAAI,QAAQ,KAAK,OAAO,IAAI;AAE5B,QAAI;AAEJ,QAAI,AAAO,QAAQ,UAAU,MAAM,WAAW,GAAG;AAC/C,cAAQ,MAAM;AAAA;AAGhB,QAAI,CAAC,AAAO,QAAQ,QAAQ;AAC1B,UAAI,WAAW,MAAM;AAErB,UAAI,UAAU,KAAK,WAAW;AAC5B,0BAAkB,CAAC,WAAW,UAAU,WAAW;AAAA;AAIrD,UAAI,uBAAuB,KAAK,WAAW;AACzC,YAAI,QAAQ,KAAK,YAAY;AAC7B,YAAI,WAAW,MAAM;AACrB,iBAAS,SAAS,SAAS,aAAa;AACxC,YAAI,MAAM,KAAK,YAAY,UAAU;AACrC,0BAAkB,CAAC,MAAM,cAAc,IAAI;AAAA;AAI7C,UAAI,oCAAoC,KAAK,WAAW;AACtD,0BAAkB,CAAC,UAAU;AAAA;AAAA,WAE1B;AACL,wBAAkB;AAAA;AAGpB,QAAI,CAAC,iBAAiB;AACpB,UAAI,MAAuC;AACzC,QAAO,SAAS;AAAA;AAIlB,aAAO;AAAA;AAGT,QAAI,MAAM,KAAK,cAAc;AAE7B,QAAI,IAAI,MAAM,OAAO,IAAI,IAAI,MAAM;AACjC,sBAAgB;AAAA;AAGlB,WAAO;AAAA;AAYT,YAAS,UAAU,gBAAgB,SAAU,OAAO;AAClD,QAAI,cAAc,CAAC,KAAK,YAAY,MAAM,KAAK,KAAK,YAAY,MAAM;AACtE,QAAI;AAEJ,QAAI,YAAY,GAAG,OAAO,YAAY,GAAG,MAAM;AAC7C,iBAAW;AACX,kBAAY;AAAA;AAGd,QAAI,SAAS,KAAK,MAAM,YAAY,GAAG,OAAO,qBAAqB,KAAK,MAAM,YAAY,GAAG,OAAO,qBAAqB;AAWzH,QAAI,OAAO,IAAI,KAAK,YAAY,GAAG;AACnC,QAAI,eAAe,KAAK;AACxB,QAAI,aAAa,YAAY,GAAG,KAAK;AACrC,SAAK,QAAQ,eAAe,SAAS;AAErC,QAAI,UAAU,KAAK;AAEnB,QAAI,YAAY,YAAY;AAC1B,UAAI,OAAO,KAAK,YAAY,YAAY,GAAG,OAAO,IAAI,IAAI;AAE1D,aAAQ,WAAU,KAAK,eAAe,cAAe,MAAK,YAAY,YAAY,GAAG,QAAQ,OAAO,GAAG;AACrG,kBAAU;AACV,aAAK,QAAQ,UAAU;AAAA;AAAA;AAI3B,QAAI,QAAQ,KAAK,MAAO,UAAS,YAAY,GAAG,MAAM,KAAK;AAC3D,QAAI,UAAU,WAAW,CAAC,QAAQ,IAAI,QAAQ;AAC9C,gBAAY,YAAY;AACxB,WAAO;AAAA,MACL,OAAO,CAAC,YAAY,GAAG,cAAc,YAAY,GAAG;AAAA,MACpD,OAAO,YAAY;AAAA,MACnB,KAAK,YAAY;AAAA,MACjB;AAAA,MACA;AAAA,MAEA;AAAA,MACA,OAAO,YAAY,GAAG;AAAA,MACtB,OAAO,YAAY,GAAG;AAAA;AAAA;AAc1B,YAAS,UAAU,wBAAwB,SAAU,SAAS,KAAK,OAAO;AACxE,QAAI,YAAY,KAAK,cAAc;AAEnC,QAAI,UAAU,UAAU,SAAS,YAAY,KAAK,MAAM,UAAU,SAAS,YAAY,UAAU,SAAS,MAAM,UAAU,OAAO;AAC/H,aAAO;AAAA;AAGT,QAAI,SAAU,WAAU,KAAK,IAAI,UAAU,QAAQ;AACnD,QAAI,OAAO,IAAI,KAAK,UAAU,MAAM;AACpC,SAAK,QAAQ,CAAC,UAAU,MAAM,IAAI;AAClC,WAAO,KAAK,YAAY;AAAA;AAG1B,YAAS,SAAS,SAAU,SAAS,KAAK;AACxC,QAAI,eAAe;AACnB,YAAQ,cAAc,YAAY,SAAU,eAAe;AACzD,UAAI,WAAW,IAAI,UAAS,eAAe,SAAS;AACpD,mBAAa,KAAK;AAClB,oBAAc,mBAAmB;AAAA;AAEnC,YAAQ,WAAW,SAAU,gBAAgB;AAC3C,UAAI,eAAe,IAAI,wBAAwB,YAAY;AAEzD,uBAAe,mBAAmB,aAAa,eAAe,IAAI,oBAAoB;AAAA;AAAA;AAG1F,WAAO;AAAA;AAGT,YAAS,aAAa,CAAC,QAAQ;AAC/B,SAAO;AAAA;AAGT,sBAAqB,QAAQ;AAC3B,MAAI,gBAAgB,OAAO;AAC3B,MAAI,cAAc,OAAO;AACzB,MAAI,WAAW,gBAAgB,cAAc,mBAAmB,cAAc,YAAY,mBAAmB;AAC7G,SAAO;AAAA;AAGT,IAAO,mBAAQ;;;ACzYR,mBAAiB,WAAW;AACjC,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAChC,YAAU,yBAAyB,YAAY;AAAA;;;ACcjD,IAAI,SAAQ,AAAU;AACtB,IAAI,2BAA2B;AAAA,EAE7B,MAAM;AAAA,EACN,cAAc;AAAA,EAEd,OAAmB;AAAA,EACnB,OAAmB;AAAA,EACnB,MAAkB;AAAA;AAKpB,IAAI,eAAe,SAAU,QAAQ;AACnC,MAAI,gBAAgB,OAAO;AAO3B,MAAI,AAAO,QAAQ,gBAAgB;AACjC,QAAI,CAAC,cAAc,MAAM,CAAC,cAAc,GAAG,UAAU;AACnD,aAAO,UAAU,CAAC;AAAA,QAChB,UAAU;AAAA;AAAA,WAEP;AAGL,aAAO,UAAU,CAAC,OAAO,QAAQ;AAAA;AAAA,aAE1B,iBAAiB,CAAC,cAAc,UAAU;AACnD,WAAO,UAAU,CAAC;AAAA,MAChB,UAAU,CAAC;AAAA;AAAA;AAAA;AAOjB,IAAI,wBAEJ,SAAU,QAAQ;AAChB,YAAU,wBAAuB;AAEjC,oCAAiC;AAC/B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,uBAAsB;AACnC,UAAM,eAAe;AACrB,WAAO;AAAA;AAGT,yBAAsB,UAAU,cAAc,SAAU,QAAQ,SAAS;AAEvE,QAAI,WAAW,KAAK,OAAO;AAC3B,SAAK,OAAO,WAAW;AAEvB,WAAO,UAAU,YAAY,KAAK,MAAM,QAAQ;AAEhD,SAAK,OAAO,WAAW;AAAA;AAGzB,yBAAsB,UAAU,gBAAgB,SAAU,WAAW,QAAQ;AAC3E,QAAI,aAAa,KAAK;AACtB,QAAI,UAAW,UAAS,aAAa,WAAW;AAChD,QAAI,YAAY,WAAW,WAAW,SAAS,KAAK,WAAW;AAC/D,QAAI,gBAAgB;AAEpB,SAAK,SAAS,SAAS,eAAe;AAEtC,QAAI,gBAAgB,AAAU,gBAAgB,WAAW,eAAe;AAExE,QAAI,oBAAoB,KAAK,qBAAqB;AAClD,IAAO,KAAK,eAAe,SAAU,YAAY,OAAO;AACtD,UAAI,cAAc,WAAW;AAE7B,UAAI,MAAuC;AACzC,QAAO,OAAO,AAAO,SAAS,gBAAgB,WAAW,UAAU;AAAA;AAGrE,UAAI,CAAC,aAAa;AAChB;AAAA;AAGF,wBAAkB,KAAK;AACvB,8BAAwB,YAAY;AACpC,8BAAwB,WAAW,OAAO;AAC1C,2BAAqB,UAAU,QAAQ;AAAA,OACtC;AAEH,aAAS,IAAI,UAAU,SAAS,GAAG,KAAK,GAAG,KAAK;AAC9C,UAAI,UAAU,MAAM,MAAM;AACxB,kBAAU,OAAO,GAAG;AAAA,aACf;AAGL,eAAO,UAAU,GAAG;AAAA;AAAA;AAAA;AAoB1B,yBAAsB,UAAU,WAAW,SAAU,YAAY,QAAQ,cAAc;AACrF,IAAO,KAAK,YAAY,SAAU,QAAQ;AACxC,UAAI,CAAC,QAAQ;AACX;AAAA;AAGF,UAAI,cAAc;AAChB,eAAO,eAAe;AAAA;AAGxB,aAAO,KAAK;AACZ,UAAI,WAAW,OAAO;AAEtB,UAAI,OAAO,SAAS,WAAW,UAAU;AACvC,aAAK,SAAS,UAAU,QAAQ;AAAA;AAIlC,aAAO,OAAO;AAAA,OACb;AAAA;AAKL,yBAAsB,UAAU,uBAAuB,WAAY;AACjE,QAAI,MAAM,KAAK;AAEf,SAAK,qBAAqB;AAC1B,WAAO;AAAA;AAGT,yBAAsB,OAAO;AAC7B,yBAAsB,gBAAgB;AAAA,IACpC,UAAU;AAAA;AAGZ,SAAO;AAAA,EACP;AAKF,IAAI,uBAEJ,SAAU,QAAQ;AAChB,YAAU,uBAAsB;AAEhC,mCAAgC;AAC9B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,sBAAqB;AAClC,WAAO;AAAA;AAGT,wBAAqB,UAAU,OAAO,WAAY;AAChD,SAAK,SAAS,AAAO;AAAA;AAGvB,wBAAqB,UAAU,SAAS,SAAU,cAAc,SAAS,KAAK;AAU5E,QAAI,iBAAiB,KAAK,mBAAmB;AAC3C,WAAK;AAAA;AAGP,SAAK,oBAAoB;AAEzB,SAAK,gBAAgB;AAErB,SAAK,UAAU,cAAc;AAAA;AAO/B,wBAAqB,UAAU,kBAAkB,SAAU,cAAc;AACvE,QAAI,oBAAoB,aAAa;AAErC,QAAI,CAAC,mBAAmB;AACtB;AAAA;AAGF,QAAI,QAAQ,KAAK;AACjB,QAAI,YAAY,KAAK;AAErB,IAAO,KAAK,mBAAmB,SAAU,UAAU;AACjD,UAAI,KAAK,AAAU,oBAAoB,SAAS,IAAI;AACpD,UAAI,aAAa,MAAM,OAAO,MAAM,IAAI,MAAM;AAC9C,UAAI,WAAW,AAAU,oBAAoB,SAAS,UAAU;AAChE,UAAI,iBAAiB,YAAY,OAAO,MAAM,IAAI,YAAY;AAC9D,UAAI,SAAS,SAAS;AACtB,UAAI,gBAAgB,SAAS;AAE7B,UAAI,WAAW,UAAU,eAAe;AAGtC,YAAI,SAAS,MAAM,SAAS,GAAG,IAAI;AACjC,wBAAc,oBAAoB,cAAc,eAAe,cAAc,gBAAgB,cAAc,QAAQ;AAAA;AAAA;AAIvH,UAAI,oBAAoB,SAAS;AACjC,UAAI,aAAa,SAAS;AAE1B,UAAI,iBAAiB,qBAAqB,eAAe,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,oBAAoB;AACnG,YAAI,gBAAgB,8BAA8B,eAAe,QAAQ;AAEzE,YAAI,CAAC,cAAc,cAAc,YAAY;AAC3C,uBAAa,SAAS,aAAa,cAAc;AAAA;AAGnD,YAAI,CAAC,qBAAqB,cAAc,aAAa;AACnD,8BAAoB,cAAc;AAAA;AAAA;AAKtC,UAAI,kBAAkB,mBAAmB;AAEzC,UAAI,MAAuC;AACzC,sBAAc,AAAO,OAAO,mBAAmB,WAAW,QAAQ;AAAA;AAGpE,UAAI,UAAU,SAAS,WAAW;AAElC,UAAI,YAAY,SAAS;AACvB,qBAAa,WAAW,KAAK,mBAAmB,UAAS,IAAI,gBAAgB,iBAAiB;AAAA,iBACrF,YAAY,WAAW;AAChC,iBAAS,YAAY;AACrB,kBAAS,IAAI,gBAAgB,iBAAiB;AAAA,iBACrC,YAAY,UAAU;AAC/B,iBAAS,YAAY;AAAA;AAGvB,UAAI,KAAK,MAAM,IAAI;AAEnB,UAAI,MAAM,mBAAmB;AAC3B,YAAI,YAAY,SAAS;AACvB,cAAI,sBAAsB,GAAG;AAC7B,gCAAsB,oBAAoB,KAAK,qBAAqB,GAAG,eAAe,IAAgB,aAAK;AAAA,mBAClG,YAAY,WAAW;AAChC,aAAG,eAAe,IAAgB,aAAK;AAAA;AAAA;AAI3C,UAAI,IAAI;AACN,YAAI,UAAU,OAAM;AACpB,gBAAQ,yBAAyB,SAAS;AAC1C,gBAAQ,0BAA0B,SAAS;AAC3C,qBAAa,IAAI,cAAc;AAC/B,QAAY,iBAAiB;AAAA,UAC3B;AAAA,UACA,gBAAgB;AAAA,UAChB,UAAU,GAAG;AAAA,UACb,mBAAmB,SAAS;AAAA;AAAA;AAAA;AAAA;AAUpC,wBAAqB,UAAU,YAAY,SAAU,cAAc,KAAK;AACtE,QAAI,YAAY,aAAa,OAAO;AACpC,QAAI,YAAY,KAAK;AACrB,QAAI,QAAQ,KAAK;AACjB,QAAI,WAAW,IAAI;AACnB,QAAI,YAAY,IAAI;AAEpB,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,UAAI,WAAW,UAAU;AACzB,UAAI,KAAK,AAAU,oBAAoB,SAAS,IAAI;AACpD,UAAI,KAAK,MAAM,OAAO,MAAM,IAAI,MAAM;AAEtC,UAAI,CAAC,MAAM,CAAC,GAAG,SAAS;AACtB;AAAA;AAGF,UAAI,WAAW,GAAG;AAClB,UAAI,eAAe,aAAa;AAEhC,UAAI,UAAU,OAAM;AACpB,UAAI,gBAAgB,OAAM;AAC1B,cAAQ,mBAAmB,cAAa,QAAQ,wBAAwB,eAAe,WAAW,cAAc,qBAAqB;AACrI,cAAQ,oBAAoB,cAAa,QAAQ,yBAAyB,eAAe,YAAY,cAAc,sBAAsB;AAAA;AAI3I,aAAS,IAAI,UAAU,SAAS,GAAG,KAAK,GAAG,KAAK;AAC9C,UAAI,WAAW,UAAU;AACzB,UAAI,KAAK,AAAU,oBAAoB,SAAS,IAAI;AACpD,UAAI,KAAK,MAAM,OAAO,MAAM,IAAI,MAAM;AAEtC,UAAI,CAAC,IAAI;AACP;AAAA;AAGF,UAAI,WAAW,GAAG;AAClB,UAAI,gBAAgB,OAAM;AAC1B,UAAI,gBAAgB,aAAa,YAAY;AAAA,QAC3C,OAAO;AAAA,QACP,QAAQ;AAAA,UACN;AAAA,QACF,OAAO,cAAc;AAAA,QACrB,QAAQ,cAAc;AAAA;AAMxB,MAAW,gBAAgB,IAAI,UAAU,eAAe,MAAM;AAAA,QAC5D,IAAI,SAAS;AAAA,QACb,cAAc,SAAS;AAAA;AAAA;AAAA;AAS7B,wBAAqB,UAAU,SAAS,WAAY;AAClD,QAAI,QAAQ,KAAK;AACjB,UAAM,KAAK,SAAU,IAAI;AACvB,eAAS,IAAI;AAAA;AAEf,SAAK,SAAS,AAAO;AAAA;AAGvB,wBAAqB,UAAU,UAAU,WAAY;AACnD,SAAK;AAAA;AAGP,wBAAqB,OAAO;AAC5B,SAAO;AAAA,EACP;AAEF,mBAAkB,IAAI,gBAAgB,UAAU,OAAO;AACrD,MAAI,cAAc,SAAS;AAE3B,MAAI,MAAuC;AACzC,IAAO,OAAO,aAAa;AAAA;AAG7B,MAAI,MAAM,AAAO,OAAO,0BAA0B,eAEhD,yBAAyB,eAAe,AAAY,cAAc;AAEpE,MAAI,MAAuC;AACzC,IAAO,OAAO,KAAK;AAAA;AAGrB,MAAI,KAAK,IAAI,IAAI;AACjB,iBAAe,IAAI;AACnB,QAAM,IAAI,IAAI;AACd,SAAM,IAAI,gBAAgB;AAAA;AAG5B,kBAAkB,YAAY,OAAO;AACnC,MAAI,gBAAgB,cAAc,WAAW;AAE7C,MAAI,eAAe;AACjB,eAAW,SAAS,WAAW,WAAW,SAAS,SAAU,IAAI;AAC/D,eAAS,IAAI;AAAA;AAEf,UAAM,UAAU,OAAM,YAAY;AAClC,kBAAc,OAAO;AAAA;AAAA;AAKzB,4BAA4B,UAAU;AACpC,aAAW,AAAO,OAAO,IAAI;AAC7B,EAAO,KAAK,CAAC,MAAM,YAAY,WAAW,MAAM,YAAY,eAAe,OAAkB,kBAAkB,SAAU,MAAM;AAC7H,WAAO,SAAS;AAAA;AAElB,SAAO;AAAA;AAGT,kBAAkB,KAAK,OAAO;AAC5B,MAAI;AACJ,EAAO,KAAK,OAAO,SAAU,MAAM;AACjC,QAAI,SAAS,QAAQ,IAAI,UAAU,UAAW,SAAQ;AAAA;AAExD,SAAO;AAAA;AAGT,iCAAiC,YAAY,aAAa;AACxD,MAAI,gBAAgB,WAAW;AAE/B,cAAY,KAAK,WAAW,QAAQ;AACpC,GAAC,YAAY,QAAQ,iBAAkB,aAAY,OAAO,cAAc;AAExE,MAAI,YAAY,YAAY,MAAM;AAChC,QAAI,oBAAoB,YAAY;AAEpC,QAAI,mBAAmB;AACrB,kBAAY,WAAW,kBAAkB;AAAA,eAChC,eAAe;AACxB,kBAAY,WAAW,cAAc;AAAA;AAAA;AAKzC,cAAY,eAAe;AAAA;AAG7B,iCAAiC,WAAW,OAAO,aAAa;AAE9D,MAAI,eAAe,AAAO,OAAO,IAAI;AACrC,MAAI,gBAAgB,UAAU;AAC9B,MAAI,UAAU,YAAY,WAAW;AAErC,MAAI,YAAY,SAAS;AACvB,QAAI,eAAe;AACjB,UAAI,MAAuC;AACzC,YAAI,UAAU,YAAY;AAC1B,QAAO,OAAO,CAAC,WAAW,cAAc,SAAS,SAAS;AAAA;AAK5D,MAAO,MAAM,eAAe,cAAc;AAE1C,MAAW,iBAAiB,eAAe,cAAc;AAAA,QACvD,YAAY;AAAA;AAGd,MAAW,iBAAiB,aAAa;AAAA,WACpC;AACL,gBAAU,SAAS;AAAA;AAAA,aAEZ,YAAY,WAAW;AAChC,cAAU,SAAS;AAAA,aACV,YAAY,UAAU;AAE/B,qBAAkB,WAAU,SAAS;AAAA;AAAA;AAIzC,8BAA8B,WAAW,aAAa;AACpD,MAAI,CAAC,WAAW;AACd;AAAA;AAGF,YAAU,KAAK,YAAY,KAAK;AAAA,IAChC,SAAS,aAAa,CAAC,QAAQ;AAAA,IAC/B,SAAS,aAAa,CAAC,OAAO;AAAA;AAE9B,MAAI,UAAU,SAAS,SAAS;AAC9B,QAAI,mBAAmB;AACvB,QAAI,cAAc;AAClB,qBAAiB,SAAS,QAAS,kBAAiB,QAAQ,YAAY,QAAQ;AAChF,qBAAiB,UAAU,QAAS,kBAAiB,SAAS,YAAY,SAAS;AAAA;AAAA;AAIvF,sBAAsB,IAAI,cAAc,UAAU;AAChD,MAAI,YAAY,UAAU,IAAI;AAE9B,MAAI,CAAC,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC,WAAW;AAC1C,gBAAY,UAAU,IAAI,YAAY;AAAA,MACpC,eAAe;AAAA,MACf,gBAAgB,aAAa;AAAA,MAC7B,MAAM,GAAG;AAAA;AAAA;AAMb,MAAI,WAAW;AACb,cAAU,OAAO,SAAS;AAAA;AAAA;AAIvB,mBAAiB,WAAW;AACjC,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAChC,YAAU,qBAAqB;AAAA;;;AC5gB1B,IAAI,4BAA4B,CAAC,KAAK,KAAK,UAAU,SAAS;AAGrE,IAAI,gBAAgB,CAAC,eAAe,SAAS;AACtC,0BAA0B,aAAa;AAC5C,MAAI,YAAY,YAAY,IAAI;AAChC,SAAO,QAAQ,eAAe,cAAc;AAAA;AAEvC,yBAAyB,SAAS;AACvC,MAAI,MAAuC;AACzC,WAAO;AAAA;AAGT,SAAO,UAAU;AAAA;AAqBZ,+BAA+B,SAAS,SAAS;AAEtD,MAAI,cAAc;AAClB,MAAI,iBAAiB;AAErB,MAAI,mBAAmB;AAEvB,UAAQ,cAAc;AAAA,IACpB,UAAU;AAAA,IACV,OAAO;AAAA,KACN,SAAU,eAAe;AAC1B,QAAI,CAAC,iBAAiB,IAAI,cAAc,MAAM;AAC5C,oBAAc;AAAA;AAAA;AAKlB,MAAI;AAEJ,KAAG;AACD,mBAAe;AACf,YAAQ,cAAc,YAAY;AAAA,WAC3B;AAET,yBAAuB,eAAe;AACpC,QAAI,CAAC,iBAAiB,IAAI,cAAc,QAAQ,SAAS,gBAAgB;AACvE,oBAAc;AACd,qBAAe;AAAA;AAAA;AAInB,yBAAuB,UAAU;AAC/B,qBAAiB,IAAI,SAAS,KAAK;AACnC,mBAAe,KAAK;AACpB,uBAAmB;AAAA;AAGrB,oBAAkB,eAAe;AAC/B,QAAI,SAAS;AACb,kBAAc,eAAe,SAAU,SAAS,WAAW;AACzD,UAAI,aAAa,YAAY,IAAI;AAEjC,UAAI,cAAc,WAAW,YAAY;AACvC,iBAAS;AAAA;AAAA;AAGb,WAAO;AAAA;AAGT,8BAA4B,eAAe;AACzC,kBAAc,eAAe,SAAU,SAAS,WAAW;AACzD,MAAC,aAAY,IAAI,YAAY,YAAY,IAAI,SAAS,KAAK,aAAa;AAAA;AAAA;AAI5E,SAAO;AAAA;AAsBF,uCAAuC,eAAe;AAC3D,MAAI,UAAU,cAAc;AAC5B,MAAI,mBAAmB;AAAA,IACrB,UAAU;AAAA,IACV,SAAS;AAAA;AAEX,gBAAc,eAAe,SAAU,SAAS,WAAW;AACzD,QAAI,YAAY,QAAQ,aAAa,gBAAgB,UAAU;AAE/D,QAAI,CAAC,WAAW;AACd;AAAA;AAGF,QAAI,gBAAgB,UAAU;AAE9B,QAAI,CAAC,eAAe;AAClB;AAAA;AAGF,QAAI,cAAc,cAAc;AAChC,QAAI,eAAe,iBAAiB,QAAQ,IAAI;AAEhD,QAAI,CAAC,cAAc;AACjB,qBAAe;AAAA,QACb,OAAO;AAAA,QACP,YAAY;AAAA;AAEd,uBAAiB,SAAS,KAAK;AAC/B,uBAAiB,QAAQ,IAAI,aAAa;AAAA;AAG5C,iBAAa,WAAW,KAAK;AAAA;AAE/B,SAAO;AAAA;;;AC3IT,IAAI,mBAEJ,WAAY;AACV,+BAA4B;AAC1B,SAAK,YAAY;AACjB,SAAK,WAAW;AAAA;AAGlB,oBAAiB,UAAU,MAAM,SAAU,aAAa;AAEtD,QAAI,CAAC,KAAK,SAAS,cAAc;AAC/B,WAAK,UAAU,KAAK;AACpB,WAAK,SAAS,eAAe;AAAA;AAAA;AAIjC,SAAO;AAAA;AAGT,IAAI,gBAEJ,SAAU,QAAQ;AAChB,YAAU,gBAAe;AAEzB,4BAAyB;AACvB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,eAAc;AAC3B,UAAM,gBAAgB;AACtB,UAAM,YAAY;AAkBlB,UAAM,iBAAiB,CAAC,WAAW;AACnC,WAAO;AAAA;AAGT,iBAAc,UAAU,OAAO,SAAU,QAAQ,aAAa,SAAS;AACrE,QAAI,iBAAiB,kBAAkB;AAuBvC,SAAK,gBAAgB;AACrB,SAAK,qBAAqB,QAAQ;AAElC,SAAK,QAAQ;AAAA;AAGf,iBAAc,UAAU,cAAc,SAAU,WAAW;AACzD,QAAI,iBAAiB,kBAAkB;AAEvC,UAAM,KAAK,QAAQ,WAAW;AAC9B,UAAM,KAAK,eAAe,gBAAgB;AAE1C,SAAK,QAAQ;AAAA;AAGf,iBAAc,UAAU,UAAU,SAAU,gBAAgB;AAC1D,QAAI,aAAa,KAAK;AAItB,SAAK,oBAAoB;AAEzB,SAAK,gBAAgB;AAErB,QAAI,gBAAgB,KAAK;AACzB,SAAK,CAAC,CAAC,SAAS,eAAe,CAAC,OAAO,cAAc,SAAU,OAAO,OAAO;AAI3E,UAAI,KAAK,eAAe,WAAW,SAAS;AAC1C,mBAAW,MAAM,MAAM,cAAc,MAAM,MAAM;AAAA;AAAA,OAGlD;AAEH,SAAK;AAAA;AAGP,iBAAc,UAAU,eAAe,WAAY;AACjD,QAAI,eAAe,KAAK,IAAI,UAAU;AACtC,QAAI,qBAAqB,KAAK,qBAAqB;AAEnD,QAAI,mBAAmB,KAAK,yBAAyB;AAErD,QAAI,kBAAkB;AACpB,WAAK,UAAU,gBAAgB,KAAK;AAAA,WAC/B;AACL,WAAK,UAAU,gBAAgB;AAE/B,WAAK,4BAA4B,oBAAoB,KAAK;AAAA;AAG5D,SAAK,YAAY;AACjB,uBAAmB,KAAK,SAAU,UAAU;AAC1C,UAAI,SAAS,UAAU,QAAQ;AAC7B,aAAK,YAAY;AAAA;AAAA,OAElB;AAAA;AAGL,iBAAc,UAAU,2BAA2B,SAAU,oBAAoB;AAC/E,QAAI,mBAAmB;AACvB,SAAK,2BAA2B,SAAU,SAAS;AACjD,UAAI,WAAW,KAAK,uBAAuB,gBAAgB,UAAU;AAIrE,UAAI,CAAC,SAAS,WAAW;AACvB;AAAA;AAGF,yBAAmB;AACnB,UAAI,WAAW,IAAI;AACnB,WAAK,SAAS,QAAQ,SAAU,WAAW;AACzC,iBAAS,IAAI,UAAU;AAAA;AAEzB,yBAAmB,IAAI,SAAS;AAAA,OAC/B;AACH,WAAO;AAAA;AAGT,iBAAc,UAAU,8BAA8B,SAAU,oBAAoB,QAAQ;AAC1F,QAAI,UAAU,KAAK;AACnB,QAAI,WAAW;AAEf,QAAI,UAAU;AACZ,UAAI,UAAU,WAAW,aAAa,MAAM;AAC5C,UAAI,aAAa,QAAQ,eAAe;AAAA,QACtC,UAAU,UAAU;AAAA;AAEtB,sBAAgB,YAAY;AAAA;AAI9B,QAAI,UAAU;AACZ,UAAI,aAAa,QAAQ,eAAe;AAAA,QACtC,UAAU;AAAA,QACV,QAAQ,SAAU,WAAW;AAC3B,iBAAO,UAAU,IAAI,UAAU,UAAU;AAAA;AAAA;AAG7C,sBAAgB,YAAY;AAAA;AAG9B,6BAAyB,aAAY,UAAS;AAE5C,UAAI,YAAY,YAAW;AAE3B,UAAI,CAAC,WAAW;AACd;AAAA;AAGF,UAAI,WAAW,IAAI;AACnB,eAAS,IAAI,UAAU;AACvB,yBAAmB,IAAI,UAAS;AAChC,iBAAW;AAEX,UAAI,aAAY,OAAO,aAAY,KAAK;AACtC,YAAI,cAAc,UAAU,uBAAuB,QAAQ,kBAAkB,OAAO;AACpF,uBAAe,KAAK,aAAY,SAAU,SAAS;AACjD,cAAI,UAAU,mBAAmB,QAAQ,kBAAkB,gBAAgB,QAAQ,uBAAuB,QAAQ,kBAAkB,OAAO,IAAI;AAC7I,qBAAS,IAAI,QAAQ;AAAA;AAAA;AAAA;AAAA;AAM7B,QAAI,UAAU;AAEZ,WAAK,2BAA2B,SAAU,UAAS;AACjD,YAAI,CAAC,UAAU;AACb;AAAA;AAGF,YAAI,cAAa,QAAQ,eAAe;AAAA,UACtC,UAAU,gBAAgB;AAAA,UAC1B,QAAQ,SAAU,WAAW;AAC3B,mBAAO,UAAU,IAAI,QAAQ,UAAU;AAAA;AAAA;AAI3C,YAAI,YAAW,IAAI;AACjB,cAAI,WAAW,IAAI;AACnB,mBAAS,IAAI,YAAW,GAAG;AAC3B,6BAAmB,IAAI,UAAS;AAChC,qBAAW;AAAA;AAAA,SAEZ;AAAA;AAAA;AAIP,iBAAc,UAAU,8BAA8B,WAAY;AAChE,QAAI;AAEJ,SAAK,eAAe,SAAU,SAAS;AACrC,OAAC,OAAQ,OAAM;AAAA,OACd;AACH,WAAO,QAAQ,MAAM,aAAa;AAAA;AAGpC,iBAAc,UAAU,sBAAsB,SAAU,gBAAgB;AAEtE,QAAI,eAAe,eAAe,aAAa;AAC7C,WAAK,gBAAgB;AAAA;AAGvB,QAAI,KAAK,eAAe;AACtB,UAAI,eAAe,KAAK,QAAQ;AAChC,WAAK,OAAO,WAAW,aAAa,aAAa,aAAa,0BAA0B,IAAI,MAAM;AAAA;AAAA;AAItG,iBAAc,UAAU,kBAAkB,SAAU,gBAAgB;AAClE,QAAI,gBAAgB,KAAK;AACzB,QAAI,oBAAoB,KAAK,IAAI;AACjC,SAAK,CAAC,CAAC,SAAS,eAAe,CAAC,OAAO,cAAc,SAAU,OAAO,OAAO;AAC3E,UAAI,mBAAmB,eAAe,MAAM,OAAO;AACnD,UAAI,iBAAiB,eAAe,MAAM,OAAO;AAEjD,UAAI,oBAAoB,CAAC,gBAAgB;AACvC,sBAAc,SAAS;AAAA,iBACd,CAAC,oBAAoB,gBAAgB;AAC9C,sBAAc,SAAS;AAAA,iBACd,mBAAmB;AAC5B,sBAAc,SAAS,kBAAkB;AAAA,iBAChC,kBAAkB;AAE3B,sBAAc,SAAS;AAAA;AAAA;AAAA;AAM7B,iBAAc,UAAU,WAAW,WAAY;AAC7C,WAAO,KAAK;AAAA;AAGd,iBAAc,UAAU,0BAA0B,WAAY;AAC5D,QAAI;AACJ,SAAK,eAAe,SAAU,SAAS,WAAW;AAChD,UAAI,kBAAkB,MAAM;AAC1B,yBAAiB,KAAK,QAAQ,aAAa,gBAAgB,UAAU;AAAA;AAAA,OAEtE;AACH,WAAO;AAAA;AAOT,iBAAc,UAAU,iBAAiB,SAAU,UAAU,SAAS;AACpE,SAAK,mBAAmB,KAAK,SAAU,UAAU,SAAS;AACxD,WAAK,SAAS,WAAW,SAAU,WAAW;AAC5C,iBAAS,KAAK,SAAS,SAAS;AAAA;AAAA;AAAA;AAStC,iBAAc,UAAU,eAAe,SAAU,SAAS,WAAW;AACnE,QAAI,YAAY,KAAK,aAAa,SAAS;AAE3C,QAAI,WAAW;AACb,aAAO,UAAU;AAAA;AAAA;AAQrB,iBAAc,UAAU,eAAe,SAAU,SAAS,WAAW;AACnE,QAAI,MAAuC;AACzC,aAAO,WAAW,aAAa;AAAA;AAGjC,QAAI,WAAW,KAAK,mBAAmB,IAAI;AAE3C,QAAI,YAAY,SAAS,SAAS,YAAY;AAC5C,aAAO,KAAK,QAAQ,aAAa,gBAAgB,UAAU;AAAA;AAAA;AAQ/D,iBAAc,UAAU,cAAc,SAAU,KAAK;AACnD,QAAI,aAAa,KAAK;AACtB,QAAI,gBAAgB,KAAK;AACzB,SAAK,CAAC,CAAC,SAAS,eAAe,CAAC,OAAO,cAAc,SAAU,OAAO;AAUpE,UAAI,IAAI,MAAM,OAAO,QAAQ,IAAI,MAAM,OAAO,MAAM;AAClD,mBAAW,MAAM,MAAM,cAAc,MAAM,MAAM,IAAI,MAAM;AAC3D,mBAAW,MAAM,MAAM,cAAc,MAAM,MAAM,IAAI,MAAM;AAAA;AAAA,OAE5D;AAEH,SAAK,gBAAgB;AAAA;AAGvB,iBAAc,UAAU,qBAAqB,SAAU,KAAK;AAC1D,QAAI,SAAS,KAAK;AAClB,SAAK,CAAC,SAAS,cAAc,OAAO,aAAa,SAAU,MAAM;AAC/D,aAAO,QAAQ,IAAI;AAAA;AAAA;AAIvB,iBAAc,UAAU,kBAAkB,WAAY;AACpD,QAAI,YAAY,KAAK;AAErB,QAAI,WAAW;AACb,aAAO,UAAU;AAAA;AAAA;AAUrB,iBAAc,UAAU,gBAAgB,SAAU,SAAS,WAAW;AACpE,QAAI,WAAW,QAAQ,aAAa,MAAM;AACxC,UAAI,YAAY,KAAK;AAErB,UAAI,WAAW;AACb,eAAO,UAAU;AAAA;AAAA,WAEd;AACL,aAAO,KAAK,aAAa,SAAS,WAAW;AAAA;AAAA;AASjD,iBAAc,UAAU,8BAA8B,SAAU,WAAW;AACzE,QAAI,WAAW;AACb,aAAO,UAAU;AAAA;AAInB,QAAI;AAEJ,QAAI,cAAc,KAAK,mBAAmB;AAE1C,aAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,UAAI,UAAU,YAAY;AAE1B,UAAI,WAAW,KAAK,mBAAmB,IAAI;AAE3C,eAAS,IAAI,GAAG,IAAI,SAAS,UAAU,QAAQ,KAAK;AAClD,YAAI,QAAQ,KAAK,aAAa,SAAS,SAAS,UAAU;AAE1D,YAAI,MAAM,SAAS,OAAO;AACxB,iBAAO;AAAA;AAGT,YAAI,CAAC,YAAY;AACf,uBAAa;AAAA;AAAA;AAAA;AAQnB,WAAO;AAAA;AAGT,iBAAc,UAAU,mBAAmB,WAAY;AACrD,WAAO,KAAK,eAAe;AAAA;AAG7B,iBAAc,UAAU,YAAY,WAAY;AAC9C,QAAI,MAAuC;AAEzC,aAAO,KAAK;AAAA;AAGd,WAAO,KAAK;AAAA;AAGd,iBAAc,OAAO;AACrB,iBAAc,eAAe,CAAC,SAAS,SAAS,cAAc,aAAa,cAAc,UAAU;AACnG,iBAAc,gBAAgB;AAAA,IAC5B,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,YAAY;AAAA,IACZ,OAAO;AAAA,IACP,KAAK;AAAA;AAEP,SAAO;AAAA,EACP;AAQF,2BAA2B,QAAQ;AACjC,MAAI,MAAM;AACV,OAAK,CAAC,SAAS,OAAO,cAAc,YAAY,aAAa,SAAU,MAAM;AAC3E,WAAO,eAAe,SAAU,KAAI,QAAQ,OAAO;AAAA;AAErD,SAAO;AAAA;AAGT,IAAO,wBAAQ;;;AC9cf,IAAI,sBAEJ,SAAU,QAAQ;AAChB,YAAU,sBAAqB;AAE/B,kCAA+B;AAC7B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,qBAAoB;AACjC,WAAO;AAAA;AAGT,uBAAoB,OAAO;AAC3B,SAAO;AAAA,EACP;AAEF,IAAO,0BAAQ;;;AChBf,IAAI,eAEJ,SAAU,QAAQ;AAChB,YAAU,eAAc;AAExB,2BAAwB;AACtB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,cAAa;AAC1B,WAAO;AAAA;AAGT,gBAAa,UAAU,SAAS,SAAU,eAAe,SAAS,KAAK,SAAS;AAC9E,SAAK,gBAAgB;AACrB,SAAK,UAAU;AACf,SAAK,MAAM;AAAA;AAGb,gBAAa,OAAO;AACpB,SAAO;AAAA,EACP;AAEF,IAAO,uBAAQ;;;ACtBf,IAAI,qBAEJ,SAAU,QAAQ;AAChB,YAAU,qBAAoB;AAE9B,iCAA8B;AAC5B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,oBAAmB;AAChC,WAAO;AAAA;AAGT,sBAAmB,OAAO;AAC1B,SAAO;AAAA,EACP;AAEF,IAAO,yBAAQ;;;ACZf,IAAI,QAAc;AAClB,IAAI,OAAiB;AASrB,IAAI,YAEJ,WAAY;AACV,sBAAmB,SAAS,WAAW,eAAe,SAAS;AAC7D,SAAK,WAAW;AAChB,SAAK,aAAa;AAClB,SAAK,UAAU;AACf,SAAK,iBAAiB;AAAA;AAWxB,aAAU,UAAU,WAAW,SAAU,eAAe;AACtD,WAAO,KAAK,mBAAmB;AAAA;AAOjC,aAAU,UAAU,qBAAqB,WAAY;AACnD,WAAO,KAAK,aAAa;AAAA;AAO3B,aAAU,UAAU,uBAAuB,WAAY;AACrD,WAAO,KAAK,eAAe;AAAA;AAG7B,aAAU,UAAU,wBAAwB,WAAY;AACtD,QAAI,eAAe;AACnB,SAAK,QAAQ,WAAW,SAAU,aAAa;AAC7C,UAAI,iBAAiB,cAAc;AACjC,YAAI,eAAe,gBAAgB,KAAK;AACxC,YAAI,YAAY,YAAY,uBAAuB,cAAc,kBAAkB,OAAO;AAE1F,YAAI,aAAa,KAAK,eAAe,UAAU,gBAAgB;AAC7D,uBAAa,KAAK;AAAA;AAAA;AAAA,OAGrB;AACH,WAAO;AAAA;AAGT,aAAU,UAAU,eAAe,WAAY;AAC7C,WAAO,KAAK,QAAQ,aAAa,KAAK,WAAW,QAAQ,KAAK;AAAA;AAGhE,aAAU,UAAU,gBAAgB,WAAY;AAC9C,WAAO,AAAO,MAAM,KAAK;AAAA;AAO3B,aAAU,UAAU,sBAAsB,SAAU,KAAK;AACvD,QAAI,aAAa,KAAK;AACtB,QAAI,YAAY,KAAK;AACrB,QAAI,SAAQ,UAAU,KAAK;AAE3B,QAAI,gBAAgB,KAAK,eAAe;AAExC,QAAI,gBAAgB,CAAC,GAAG;AACxB,QAAI,gBAAgB;AACpB,QAAI,cAAc;AAClB,QAAI;AACJ,UAAK,CAAC,SAAS,QAAQ,SAAU,MAAM,KAAK;AAC1C,UAAI,eAAe,IAAI;AACvB,UAAI,aAAa,IAAI,OAAO;AAc5B,UAAI,cAAc,SAAS,WAAW;AACpC,wBAAgB,QAAS,gBAAe,cAAc;AAEtD,qBAAa,OAAM,MAAM,AAAW,UAAU,cAAc,eAAe;AAAA,aACtE;AACL,2BAAmB;AACnB,qBAAa,cAAc,OAAO,WAAW,OAAO,OAAM,MAAM;AAIhE,uBAAe,AAAW,UAAU,YAAY,YAAY;AAAA;AAK9D,kBAAY,OAAO;AACnB,oBAAc,OAAO;AAAA;AAEvB,SAAI;AACJ,SAAI;AAMJ,QAAI,QAAQ,KAAK;AACjB,uBAAmB,YAAY,aAAa,eAAe,YAAY,eAAe,SAAS,YAAY,eAAe,aAAa,eAAe,YAAY;AAElK,yBAAqB,YAAY,UAAU,YAAY,UAAU,SAAS;AACxE,UAAI,SAAS,UAAU,SAAS;AAChC,iBAAW,GAAG,YAAY,YAAY,OAAO,MAAM,QAAQ,SAAS,MAAM,QAAQ;AAElF,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,iBAAS,KAAK,AAAW,UAAU,WAAW,IAAI,YAAY,UAAU;AACxE,mBAAY,UAAS,KAAK,OAAM,MAAM,SAAS;AAAA;AAAA;AAInD,WAAO;AAAA,MACL;AAAA,MACA;AAAA;AAAA;AAUJ,aAAU,UAAU,QAAQ,SAAU,eAAe;AACnD,QAAI,kBAAkB,KAAK,gBAAgB;AACzC;AAAA;AAGF,QAAI,eAAe,KAAK;AAExB,SAAK,cAAc,oBAAoB,MAAM,KAAK,UAAU;AAE5D,SAAK;AAEL,QAAI,aAAa,KAAK,oBAAoB,cAAc;AACxD,SAAK,eAAe,WAAW;AAC/B,SAAK,iBAAiB,WAAW;AAEjC,SAAK;AAAA;AAGP,aAAU,UAAU,aAAa,SAAU,eAAe,KAAK;AAC7D,QAAI,kBAAkB,KAAK,gBAAgB;AACzC;AAAA;AAGF,QAAI,UAAU,KAAK;AACnB,QAAI,eAAe,KAAK;AACxB,QAAI,aAAa,cAAc,IAAI;AACnC,QAAI,cAAc,KAAK;AAEvB,QAAI,eAAe,QAAQ;AACzB;AAAA;AAsBF,UAAK,cAAc,SAAU,aAAa;AACxC,UAAI,aAAa,YAAY;AAC7B,UAAI,WAAW,WAAW,iBAAiB;AAE3C,UAAI,CAAC,SAAS,QAAQ;AACpB;AAAA;AAGF,UAAI,eAAe,cAAc;AAC/B,YAAI,UAAU,WAAW;AACzB,YAAI,mBAAmB,AAAO,IAAI,UAAU,SAAU,KAAK;AACzD,iBAAO,WAAW,kBAAkB;AAAA,WACnC;AACH,mBAAW,WAAW,SAAU,WAAW;AACzC,cAAI;AACJ,cAAI;AACJ,cAAI;AAEJ,mBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,gBAAI,QAAQ,QAAQ,IAAI,iBAAiB,IAAI;AAC7C,gBAAI,eAAe,CAAC,MAAM;AAC1B,gBAAI,cAAc,QAAQ,YAAY;AACtC,gBAAI,eAAe,QAAQ,YAAY;AAEvC,gBAAI,gBAAgB,CAAC,eAAe,CAAC,cAAc;AACjD,qBAAO;AAAA;AAGT,4BAAiB,YAAW;AAC5B,2BAAgB,WAAU;AAC1B,4BAAiB,YAAW;AAAA;AAI9B,iBAAO,YAAY,WAAW;AAAA;AAAA,aAE3B;AACL,cAAK,UAAU,SAAU,KAAK;AAC5B,cAAI,eAAe,SAAS;AAC1B,wBAAY,QAAQ,aAAa,WAAW,IAAI,KAAK,SAAU,OAAO;AACpE,qBAAO,CAAC,WAAW,SAAS,MAAM;AAAA;AAAA,iBAE/B;AACL,gBAAI,QAAQ;AACZ,kBAAM,OAAO;AAEb,uBAAW,YAAY;AAAA;AAAA;AAAA;AAK7B,YAAK,UAAU,SAAU,KAAK;AAC5B,mBAAW,qBAAqB,aAAa;AAAA;AAAA;AAIjD,wBAAoB,OAAO;AACzB,aAAO,SAAS,YAAY,MAAM,SAAS,YAAY;AAAA;AAAA;AAI3D,aAAU,UAAU,oBAAoB,WAAY;AAClD,QAAI,aAAa,KAAK,cAAc;AACpC,QAAI,gBAAgB,KAAK;AACzB,QAAI,aAAa,KAAK;AACtB,UAAK,CAAC,OAAO,QAAQ,SAAU,QAAQ;AACrC,UAAI,cAAc,cAAc,IAAI,SAAS;AAC7C,UAAI,YAAY,cAAc,IAAI,SAAS;AAC3C,mBAAa,QAAS,aAAY,KAAK,eAAe,KAAK,MAAM,MAAM;AAEvE,UAAI,aAAa,MAAM;AACrB,sBAAc,AAAW,UAAU,WAAW,KAAK,WAAW,YAAY,CAAC,GAAG,MAAM;AAAA,iBAC3E,eAAe,MAAM;AAC9B,oBAAY,AAAW,UAAU,aAAa,CAAC,GAAG,MAAM,YAAY,QAAQ,WAAW;AAAA;AAGzF,iBAAW,SAAS,UAAU;AAC9B,iBAAW,SAAS,eAAe;AAAA,OAClC;AAAA;AAGL,aAAU,UAAU,gBAAgB,WAAY;AAC9C,QAAI,YAAY,KAAK;AACrB,QAAI,gBAAgB,KAAK;AACzB,QAAI,cAAc,KAAK;AAEvB,QAAI,CAAC,eAAe;AAClB;AAAA;AAIF,QAAI,YAAY,AAAW,kBAAkB,aAAa,CAAC,GAAG;AAC9D,gBAAY,KAAK,IAAI,WAAW;AAKhC,QAAI,gBAAgB,UAAU,KAAK,MAAM;AAEzC,QAAI,cAAc,OAAO,GAAG;AAC1B,oBAAc,oBAAoB,OAAO,CAAC,YAAY,GAAG,QAAQ;AAAA;AAGnE,QAAI,cAAc,OAAO,KAAK;AAC5B,oBAAc,oBAAoB,OAAO,CAAC,YAAY,GAAG,QAAQ;AAAA;AAGnE,kBAAc;AAAA;AAGhB,SAAO;AAAA;AAGT,6BAA6B,WAAW,SAAS,cAAc;AAC7D,MAAI,aAAa,CAAC,UAAU;AAC5B,QAAK,cAAc,SAAU,aAAa;AACxC,4BAAwB,YAAY,YAAY,WAAW;AAAA;AAW7D,MAAI,YAAY,UAAU;AAC1B,MAAI,kBAAkB,yBAAyB,UAAU,KAAK,OAAO,WAAW,YAAY;AAC5F,SAAO,CAAC,gBAAgB,KAAK,gBAAgB;AAAA;AAG/C,IAAO,oBAAQ;;;ACnVf,IAAI,oBAAoB;AAAA,EAItB,iBAAiB,SAAU,SAAS;AAClC,2BAAuB,IAAI;AACzB,cAAQ,cAAc,YAAY,SAAU,eAAe;AACzD,sBAAc,eAAe,SAAU,SAAS,WAAW;AACzD,cAAI,YAAY,QAAQ,aAAa,gBAAgB,UAAU;AAC/D,aAAG,SAAS,WAAW,WAAW;AAAA;AAAA;AAAA;AAOxC,kBAAc,SAAU,SAAS,WAAW,WAAW,eAAe;AAEpE,gBAAU,gBAAgB;AAAA;AAE5B,QAAI,YAAY;AAChB,kBAAc,SAAU,SAAS,WAAW,WAAW,eAAe;AAGpE,UAAI,CAAC,UAAU,eAAe;AAE5B,kBAAU,gBAAgB,IAAI,kBAAU,SAAS,WAAW,eAAe;AAC3E,kBAAU,KAAK,UAAU;AAAA;AAAA;AAG7B,QAAI,iBAAiB;AACrB,SAAK,WAAW,SAAU,WAAW;AACnC,WAAK,UAAU,yBAAyB,SAAU,aAAa;AAC7D,uBAAe,IAAI,YAAY,KAAK;AAAA;AAAA;AAGxC,WAAO;AAAA;AAAA,EAKT,cAAc,SAAU,SAAS,KAAK;AACpC,YAAQ,cAAc,YAAY,SAAU,eAAe;AAIzD,oBAAc,eAAe,SAAU,SAAS,WAAW;AACzD,sBAAc,aAAa,SAAS,WAAW,MAAM;AAAA;AAgBvD,oBAAc,eAAe,SAAU,SAAS,WAAW;AACzD,sBAAc,aAAa,SAAS,WAAW,WAAW,eAAe;AAAA;AAAA;AAG7E,YAAQ,cAAc,YAAY,SAAU,eAAe;AAGzD,UAAI,YAAY,cAAc;AAE9B,UAAI,WAAW;AACb,YAAI,eAAe,UAAU;AAC7B,YAAI,aAAa,UAAU;AAC3B,sBAAc,mBAAmB;AAAA,UAC/B,OAAO,aAAa;AAAA,UACpB,KAAK,aAAa;AAAA,UAClB,YAAY,WAAW;AAAA,UACvB,UAAU,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAM/B,IAAO,4BAAQ;;;ACtFA,+BAA+B,WAAW;AACvD,YAAU,eAAe,YAAY,SAAU,SAAS,SAAS;AAC/D,QAAI,iBAAiB,sBAAsB,SAAS;AACpD,SAAK,gBAAgB,SAAU,eAAe;AAC5C,oBAAc,YAAY;AAAA,QACxB,OAAO,QAAQ;AAAA,QACf,KAAK,QAAQ;AAAA,QACb,YAAY,QAAQ;AAAA,QACpB,UAAU,QAAQ;AAAA;AAAA;AAAA;AAAA;;;ACR1B,IAAI,YAAY;AACD,uBAAuB,WAAW;AAC/C,MAAI,WAAW;AACb;AAAA;AAGF,cAAY;AACZ,YAAU,kBAAkB,UAAU,SAAS,UAAU,QAAQ;AACjE,wBAAsB;AACtB,YAAU,yBAAyB,YAAY,WAAY;AAEzD,WAAO;AAAA;AAAA;;;ACVJ,mBAAiB,WAAW;AACjC,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAChC,gBAAc;AAAA;;;ACxBhB,IAAI,iBAEJ,WAAY;AACV,6BAA0B;AAAA;AAE1B,SAAO;AAAA;AAIT,IAAI,WAAW;AACR,yBAAyB,MAAM,MAAM;AAC1C,WAAS,QAAQ;AAAA;AAEZ,oBAAoB,MAAM;AAC/B,SAAO,SAAS;AAAA;;;ACSlB,IAAI,eAEJ,SAAU,QAAQ;AAChB,YAAU,eAAc;AAExB,2BAAwB;AACtB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,cAAa;AAC1B,WAAO;AAAA;AAGT,gBAAa,UAAU,gBAAgB,WAAY;AACjD,WAAO,UAAU,cAAc,MAAM,MAAM;AAE3C,QAAI,UAAU,KAAK;AACnB,IAAO,KAAK,KAAK,OAAO,SAAS,SAAU,YAAY,aAAa;AAClE,UAAI,UAAU,AAAe,WAAW;AAExC,UAAI,SAAS;AACX,YAAI,QAAQ,kBAAkB;AAC5B,kBAAQ,gBAAgB,QAAQ,iBAAiB;AAAA;AAGnD,QAAO,MAAM,YAAY,QAAQ;AAAA;AAAA;AAAA;AAKvC,gBAAa,OAAO;AACpB,gBAAa,aAAa;AAAA,IACxB,MAAM;AAAA,IACN,YAAY;AAAA;AAEd,gBAAa,gBAAgB;AAAA,IAC3B,MAAM;AAAA,IACN,GAAG;AAAA,IACH,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,KAAK;AAAA,IAGL,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,cAAc;AAAA,IACd,aAAa;AAAA,IACb,SAAS;AAAA,IACT,UAAU;AAAA,IACV,SAAS;AAAA,IACT,WAAW;AAAA,IACX,WAAW;AAAA,MACT,aAAa;AAAA,MACb,OAAO;AAAA;AAAA,IAET,UAAU;AAAA,MACR,WAAW;AAAA,QACT,aAAa;AAAA;AAAA;AAAA,IAKjB,SAAS;AAAA,MACP,MAAM;AAAA,MACN,UAAU;AAAA;AAAA;AAGd,SAAO;AAAA,EACP;AAEF,IAAO,uBAAQ;;;AC/DR,kBAAgB,OAAO,gBAAgB,KAAK;AACjD,MAAI,kBAAkB,eAAe;AACrC,MAAI,UAAU,eAAe,IAAI;AACjC,MAAI,eAAe;AAAA,IACjB,OAAO,IAAI;AAAA,IACX,QAAQ,IAAI;AAAA;AAEd,MAAI,OAAO,cAAc,iBAAiB,cAAc;AACxD,MAAU,eAAe,IAAI,WAAW,OAAO,eAAe,IAAI,YAAY,KAAK,OAAO,KAAK;AAC/F,kBAAgB,OAAO,iBAAiB,cAAc;AAAA;AAEjD,wBAAwB,MAAM,gBAAgB;AACnD,MAAI,UAAU,AAAW,mBAAkB,eAAe,IAAI;AAC9D,MAAI,QAAQ,eAAe,aAAa,CAAC,SAAS;AAClD,QAAM,OAAO,eAAe,IAAI;AAChC,SAAO,IAAY,aAAK;AAAA,IACtB,OAAO;AAAA,MACL,GAAG,KAAK,IAAI,QAAQ;AAAA,MACpB,GAAG,KAAK,IAAI,QAAQ;AAAA,MACpB,OAAO,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AAAA,MACzC,QAAQ,KAAK,SAAS,QAAQ,KAAK,QAAQ;AAAA,MAC3C,GAAG,eAAe,IAAI;AAAA;AAAA,IAExB;AAAA,IACA,QAAQ;AAAA,IACR,IAAI;AAAA;AAMN,SAAO;AAAA;;;AC9BT,IAAI,cAEJ,SAAU,QAAQ;AAChB,YAAU,cAAa;AAEvB,0BAAuB;AACrB,WAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAAA;AAG7D,eAAY,UAAU,SAAS,SAAU,cAAc,SAAS,KAAK,SAAS;AAC5E,QAAI,QAAQ,KAAK;AACjB,UAAM;AAEN,QAAI,CAAC,aAAa,IAAI,SAAS;AAC7B;AAAA;AAGF,QAAI,WAAW,CAAC,aAAa,IAAI;AACjC,QAAI,cAAc,aAAa,IAAI,cAAc;AACjD,QAAI,YAAW,KAAK,aAAc,MAAK,YAAY;AACnD,QAAI,eAAe;AACnB,IAAO,KAAK,aAAa,SAAU,KAAK,MAAM;AAC5C,mBAAa,KAAK;AAAA;AAEpB,QAAI,mBAAW,KAAK,iBAAiB,IAAI,cAAc,IAAI,gBAAgB,OAAO,gBAAgB,OAAO,AAAO,MAAM,gBAAgB,OAAO;AAE7I,SAAK,gBAAgB;AAErB,4BAAwB,UAAU,UAAU;AAC1C,UAAI,cAAc,aAAa;AAC/B,UAAI,UAAU,aAAa;AAC3B,UAAI,aAAa,YAAY;AAC7B,UAAI,eAAe,IAAI,cAAM,YAAY,cAAc,aAAa;AACpE,UAAI;AAEJ,UAAI,WAAW,QAAQ,YAAY,QAAQ,QAAQ,gBAAgB,aAAa;AAC9E,mBAAW,QAAQ,QAAQ;AAAA;AAG7B,UAAI,eAAe,CAAC,SAAS;AAE3B,YAAI,kBAAkB,cAAc;AAClC,oBAAU;AAAA,YACR,SAAS,aAAa,OAAO;AAAA,YAC7B;AAAA;AAAA,eAEG;AACL,cAAI,UAAU,WAAW;AAEzB,cAAI,CAAC,SAAS;AACZ;AAAA;AAGF,oBAAU,IAAI;AAAA;AAGhB,kBAAS,eAAe;AAAA,aACnB;AACL,kBAAU,UAAS;AAEnB,YAAI,CAAC,SAAS;AACZ;AAAA;AAAA;AAIJ,cAAQ,MAAM,OAAO;AACrB,cAAQ,QAAQ;AAChB,cAAQ,UAAU;AAClB,cAAQ,MAAM;AACd,UAAI,mBAAmB,mBAAmB;AAE1C,UAAI,CAAC,eAAe,SAAS;AAC3B,4BAAoB,QAAQ,WAAW,QAAQ,QAAQ,SAAS;AAChE;AAAA;AAGF,UAAI,CAAC,aAAa,IAAI,WAAW,oBAAoB,QAAQ,UAAU;AACrE,4BAAoB,QAAQ,UAAU,QAAQ,OAAO,SAAS;AAC9D;AAAA;AAGF,sBAAgB,cAAc,SAAS;AAEvC,mBAAa,gBAAgB,SAAU,UAAU,QAAQ;AACvD,YAAI,SAAS,KAAK;AAClB,YAAI,YAAY,KAAK;AACrB,eAAO,aAAa,OAAO,cAAc;AACzC,eAAO,WAAW,YAAY;AAE9B,YAAI,UAAU,WAAW;AACvB,UAAC,YAAW,aAAa,gBAAgB,eAAe,UAAU;AAAA;AAAA;AAItE,UAAI,mBAAmB,gBAAgB;AACrC,YAAI,QAAQ,QAAQ;AAClB,kBAAQ,OAAO,cAAc,SAAS,KAAK;AAAA;AAAA;AAAA;AAKjD,6BAAyB,cAAc,SAAS,aAAa;AAC3D,UAAI,iBAAiB,aAAa,SAAS;AAC3C,UAAI,yBAAyB,aAAa,SAAS,CAAC,YAAY;AAYhE,UAAI,QAAQ,mBAAmB,kBAAkB,QAAQ,WAAW,QAAQ,aAAa,aAAa,IAAI;AAC1G,UAAI,SAAS,aAAa,IAAI,YAAY;AAC1C,UAAI;AACJ,UAAI;AAEJ,UAAI,OAAO,UAAU,UAAU;AAC7B,mBAAW;AACX,iBAAS,eAAe;AAAA,aACnB;AACL,mBAAW;AAAA;AAGb,UAAI,OAAO,WAAW,UAAU;AAC9B,oBAAY;AACZ,kBAAU,eAAe;AAAA,aACpB;AACL,oBAAY;AAAA;AAGd,UAAI,YAAY,aAAa,YAAY;AACzC,MAAO,KAAK,UAAU,SAAU,SAAS,UAAU;AACjD,YAAI,OAAO,AAAQ,WAAW,SAAS,IAAI;AAAA,UACzC,GAAG,CAAC,WAAW;AAAA,UACf,GAAG,CAAC,WAAW;AAAA,UACf,OAAO;AAAA,UACP,QAAQ;AAAA;AAGV,aAAK,SAAS,eAAe;AAC7B,YAAI,oBAAoB,KAAK,YAAY;AACzC,0BAAkB,QAAQ,uBAAuB;AAEjD,YAAI,cAAc,IAAI,aAAO;AAAA,UAC3B,OAAO;AAAA,YACL,MAAM,UAAU;AAAA,YAChB,OAAO,uBAAuB,IAAI;AAAA,YAClC,cAAc,uBAAuB,IAAI;AAAA,YACzC,SAAS,uBAAuB,IAAI;AAAA,YACpC,MAAM;AAAA;AAAA,UAER,QAAQ;AAAA;AAEV,aAAK,eAAe;AACpB,QAAQ,iBAAiB;AAAA,UACvB,IAAI;AAAA,UACJ,gBAAgB;AAAA,UAChB,UAAU;AAAA,UACV,sBAAsB;AAAA,YACpB,OAAO,UAAU;AAAA;AAAA;AAIrB,aAAK,UAAU,UAAU;AACzB,aAAK,GAAG,aAAa,WAAY;AAE/B,cAAI,aAAa,uBAAuB;AACxC,cAAI,sBAAsB,aAAa,IAAI,cAAc,aAAa,aAAa,IAAI,YAAY,OAAO,UAAU,SAAS,aAAa,IAAI,aAAa,OAAO,WAAW;AAC7K,sBAAY,SAAS;AAAA,YACnB,MAAM,uBAAuB,IAAI,eAAe,WAAW,QAAQ,WAAW,UAAU;AAAA,YACxF,iBAAiB,uBAAuB,IAAI;AAAA;AAE9C,eAAK,cAAc;AAAA,YACjB,UAAU,uBAAuB,IAAI,mBAAmB;AAAA;AAE1D,sBAAY,SAAS,CAAC,aAAa,IAAI;AAGvC,wBAAc;AAAA,WACb,GAAG,YAAY,WAAY;AAC5B,cAAI,aAAa,IAAI,CAAC,cAAc,eAAe,YAAY;AAC7D,0BAAc;AAAA;AAGhB,sBAAY;AAAA;AAEd,QAAC,cAAa,IAAI,CAAC,cAAc,eAAe,aAAa,gBAAgB,eAAe;AAC5F,cAAM,IAAI;AACV,aAAK,GAAG,SAAS,AAAO,KAAK,QAAQ,SAAS,SAAS,SAAS,KAAK;AACrE,kBAAU,YAAY;AAAA;AAAA;AAI1B,IAAoB,SAAO,OAAO,cAAc;AAGhD,UAAM,IAAI,AAAoB,eAAe,MAAM,mBAAmB;AAEtE,UAAM,UAAU,SAAU,MAAM;AAC9B,UAAI,YAAY,KAAK;AAGrB,UAAI,gBAAgB,KAAK,YAAY;AACrC,UAAI,qBAAqB,cAAc,cAAe,eAAc,aAAa;AACjF,UAAI,cAAc,KAAK;AACvB,UAAI,oBAAoB,eAAe,YAAY,OAAO;AAE1D,UAAI,qBAAqB,CAAC,AAAO,WAAW,sBAAsB,WAAW;AAC3E,YAAI,oBAAoB,kBAAkB,SAAU,mBAAkB,QAAQ;AAC9E,YAAI,OAAO,AAAY,gBAAgB,WAAW,aAAO,SAAS;AAClE,YAAI,UAAU,KAAK,IAAI,MAAM;AAC7B,YAAI,UAAU,KAAK,IAAI,MAAM,IAAI;AACjC,YAAI,eAAe;AAEnB,YAAI,UAAU,KAAK,SAAS,IAAI,aAAa;AAC3C,6BAAmB,WAAW;AAC9B,yBAAe;AAAA;AAGjB,YAAI,YAAY,eAAe,KAAK,KAAK,SAAS,WAAW;AAE7D,YAAI,UAAU,KAAK,QAAQ,IAAI,IAAI,YAAY;AAC7C,6BAAmB,WAAW,CAAC,QAAQ;AACvC,4BAAkB,QAAQ;AAAA,mBACjB,UAAU,KAAK,QAAQ,IAAI,GAAG;AACvC,6BAAmB,WAAW,CAAC,GAAG;AAClC,4BAAkB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAMlC,eAAY,UAAU,aAAa,SAAU,cAAc,SAAS,KAAK,SAAS;AAChF,IAAO,KAAK,KAAK,WAAW,SAAU,SAAS;AAC7C,yBAAmB,kBAAkB,QAAQ,cAAc,QAAQ,WAAW,QAAQ,OAAO,SAAS,KAAK;AAAA;AAAA;AAS/G,eAAY,UAAU,SAAS,SAAU,SAAS,KAAK;AACrD,IAAO,KAAK,KAAK,WAAW,SAAU,SAAS;AAC7C,yBAAmB,kBAAkB,QAAQ,UAAU,QAAQ,OAAO,SAAS;AAAA;AAEjF,SAAK,MAAM;AAAA;AAGb,eAAY,UAAU,UAAU,SAAU,SAAS,KAAK;AACtD,IAAO,KAAK,KAAK,WAAW,SAAU,SAAS;AAC7C,yBAAmB,kBAAkB,QAAQ,WAAW,QAAQ,QAAQ,SAAS;AAAA;AAAA;AAIrF,eAAY,OAAO;AACnB,SAAO;AAAA,EACP;AAEF,2BAA2B,aAAa;AACtC,SAAO,YAAY,QAAQ,UAAU;AAAA;AAGvC,IAAO,sBAAQ;;;AClRf,IAAI,cAEJ,SAAU,QAAQ;AAChB,YAAU,cAAa;AAEvB,0BAAuB;AACrB,WAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAAA;AAG7D,eAAY,UAAU,UAAU,SAAU,SAAS,KAAK;AACtD,QAAI,QAAQ,KAAK;AACjB,QAAI,QAAQ,MAAM,IAAI,WAAW,QAAQ,IAAI,mBAAmB;AAChE,QAAI,QAAQ,IAAI,QAAQ,QAAQ,cAAc;AAC9C,QAAI,OAAO,QAAQ,QAAQ,MAAM,IAAI,QAAQ,SAAS;AACtD,QAAI,MAAM,IAAI,oBAAoB;AAAA,MAChC;AAAA,MACA,iBAAiB,MAAM,IAAI,mBAAmB,SAAS,QAAQ,IAAI,sBAAsB;AAAA,MACzF,0BAA0B,MAAM,IAAI;AAAA,MACpC,mBAAmB,MAAM,IAAI;AAAA,MAC7B,YAAY,MAAM,IAAI;AAAA;AAGxB,QAAI,OAAO,eAAe,cAAe,aAAI,QAAQ,WAAW,CAAC,YAAI,QAAQ,MAAM,CAAC,YAAI,QAAQ,OAAO;AACrG,UAAI,KAAK,SAAS,cAAc;AAChC,SAAG,WAAW,QAAQ,MAAM;AAC5B,SAAG,SAAS;AACZ,SAAG,OAAO;AACV,UAAI,MAAM,IAAI,WAAW,SAAS;AAAA,QAEhC,MAAM,SAAS;AAAA,QACf,SAAS;AAAA,QACT,YAAY;AAAA;AAEd,SAAG,cAAc;AAAA,WAEd;AACD,UAAI,OAAO,UAAU,oBAAoB,OAAO;AAC9C,YAAI,QAAQ,IAAI,MAAM;AAEtB,YAAI,gBAAgB,MAAM,GAAG,QAAQ,YAAY;AACjD,YAAI,OAAO,QACT,mBAAmB,MAAM,MAAM,MAAM;AAKvC,yBAAkB,QAAO,OAAO,KAAK;AACrC,YAAI,WAAW,QAAQ,MAAM;AAE7B,YAAI,OAAO,UAAU,kBAAkB;AACrC,cAAI,IAAI,KAAK;AACb,cAAI,QAAQ,IAAI,WAAW;AAE3B,iBAAO,KAAK;AACV,kBAAM,KAAK,KAAK,WAAW;AAAA;AAG7B,cAAI,OAAO,IAAI,KAAK,CAAC;AACrB,iBAAO,UAAU,iBAAiB,MAAM;AAAA,eACnC;AACL,cAAI,QAAQ,SAAS,cAAc;AACnC,mBAAS,KAAK,YAAY;AAC1B,cAAI,KAAK,MAAM;AACf,cAAI,MAAM,GAAG;AACb,cAAI,KAAK,iBAAiB;AAC1B,cAAI,MAAM;AACV,cAAI;AACJ,aAAG;AACH,cAAI,YAAY,UAAU,MAAM;AAChC,mBAAS,KAAK,YAAY;AAAA;AAAA,aAEvB;AACL,YAAI,OAAO,MAAM,IAAI;AACrB,YAAI,OAAO,uCAAiD,MAAM,sCAAuC,SAAQ,KAAK,MAAM,MAAM;AAClI,YAAI,MAAM,OAAO;AACjB,YAAI,SAAS,MAAM;AACnB,YAAI,SAAS,QAAQ;AAAA;AAAA;AAAA;AAK7B,eAAY,mBAAmB,SAAU,SAAS;AAChD,QAAI,iBAAgB;AAAA,MAClB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO,QAAQ,iBAAiB,IAAI,CAAC,WAAW,eAAe;AAAA,MAC/D,MAAM;AAAA,MAGN,0BAA0B;AAAA,MAC1B,MAAM;AAAA,MACN,mBAAmB,CAAC;AAAA,MAGpB,MAAM,QAAQ,iBAAiB,IAAI,CAAC,WAAW,eAAe;AAAA;AAEhE,WAAO;AAAA;AAGT,SAAO;AAAA,EACP;AAEF,YAAY,UAAU,WAAW,CAAC,YAAI;AACtC,IAAO,sBAAQ;;;ACzGf,IAAI,sBAAsB;AAI1B,IAAI,aAAa,CAAC,CAAC,QAAQ,QAAQ,CAAC;AAEpC,IAAI,YAEJ,SAAU,QAAQ;AAChB,YAAU,YAAW;AAErB,wBAAqB;AACnB,WAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAAA;AAG7D,aAAU,UAAU,WAAW,WAAY;AACzC,QAAI,QAAQ,KAAK;AACjB,QAAI,iBAAiB,MAAM,IAAI;AAC/B,QAAI,QAAQ;AACZ,IAAO,KAAK,MAAM,IAAI,SAAS,SAAU,MAAM;AAC7C,UAAI,eAAe,OAAO;AACxB,cAAM,QAAQ,eAAe;AAAA;AAAA;AAGjC,WAAO;AAAA;AAGT,aAAU,mBAAmB,SAAU,SAAS;AAC9C,QAAI,iBAAgB;AAAA,MAClB,MAAM;AAAA,MACN,MAAM;AAAA,MAEN,MAAM;AAAA,QACJ,MAAM;AAAA,QACN,KAAK;AAAA,QAEL,OAAO;AAAA;AAAA,MAIT,OAAO,QAAQ,iBAAiB,IAAI,CAAC,WAAW,aAAa;AAAA,MAC7D,QAAQ;AAAA,MACR,aAAa;AAAA;AAEf,WAAO;AAAA;AAGT,aAAU,UAAU,UAAU,SAAU,SAAS,KAAK,MAAM;AAC1D,QAAI,QAAQ,KAAK;AACjB,QAAI,cAAc,MAAM,IAAI,CAAC,eAAe;AAE5C,QAAI,CAAC,mBAAmB,OAAO;AAC7B;AAAA;AAGF,QAAI,YAAY;AAAA,MACd,QAAQ;AAAA;AAGV,QAAI,yBAAyB,SAAU,aAAa;AAClD,UAAI,aAAa,YAAY;AAC7B,UAAI,WAAW,YAAY;AAC3B,UAAI,eAAe,mBAAmB,MAAM,YAAY,UAAU,aAAa;AAE/E,UAAI,cAAc;AAEhB,QAAO,SAAS,cAAc,YAAY;AAC1C,kBAAU,OAAO,KAAK;AAAA;AAIxB,UAAI,WAAW,YAAY;AAE3B,UAAI,YAAY,SAAS,SAAS,iBAAkB,UAAS,UAAU,SAAS,QAAQ;AACtF,YAAI,gBAAe,SAAS,eAAe,WAAW;AAEtD,YAAI,eAAc;AAChB,cAAI,UAAU,cAAa;AAC3B,cAAI,WAAW,UAAU;AACzB,cAAI,YAAY,YAAY,uBAAuB,UAAU,kBAAkB,OAAO;AACtF,cAAI,YAAY,UAAU;AAC1B,oBAAU,YAAY,UAAU,aAAa;AAE7C,mBAAS,IAAI,GAAG,KAAK,WAAW,KAAK;AACnC,sBAAU,UAAU,aAAa,UAAU,UAAU,cAAc;AAAA;AAGrE,oBAAU,UAAU,WAAW,cAAc,SAAS;AAAA;AAAA;AAAA;AAK5D,IAAO,KAAK,YAAY,SAAU,OAAO;AACvC,UAAI,AAAO,QAAQ,OAAO,SAAS,GAAG;AACpC,QAAO,KAAK,OAAO,SAAU,MAAM;AACjC,gBAAM,cAAc,MAAM;AAAA;AAAA;AAAA;AAIhC,UAAM,cAAc,MAAM;AAC1B,YAAQ,cAAc;AAAA,MACpB,UAAU;AAAA,MACV,OAAO,eAAe,OAAO,OAAO;AAAA,QAClC;AAAA;AAAA,OAED;AACH,QAAI;AACJ,QAAI,cAAc;AAElB,QAAI,SAAS,SAAS;AAIpB,iBAAW,AAAO,MAAM;AAAA,QACtB,OAAO,MAAM,OAAO,MAAM;AAAA,QAC1B,OAAO,MAAM,OAAO,MAAM;AAAA,SACzB,MAAM,OAAO;AAEhB,UAAI,MAAM,IAAI,CAAC,cAAc,WAAW,YAAY;AAClD,sBAAc;AAAA;AAAA;AAIlB,QAAI,eAAe;AAAA,MACjB,MAAM;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,MACA,aAAa;AAAA;AAAA;AAIjB,SAAO;AAAA,EACP;AAEF,IAAI,qBAAqB;AAAA,EACvB,QAAQ,SAAU,YAAY,UAAU,aAAa,OAAO;AAC1D,QAAI,eAAe,OAAO;AACxB,aAAO,AAAO,MAAM;AAAA,QAClB,IAAI;AAAA,QACJ,MAAM;AAAA,QAEN,MAAM,YAAY,IAAI;AAAA,QACtB,OAAO,YAAY,IAAI;AAAA,QACvB,WAAW,YAAY,IAAI;AAAA,QAC3B,UAAU,YAAY,IAAI;AAAA,SACzB,MAAM,IAAI,CAAC,UAAU,YAAY,IAAI;AAAA;AAAA;AAAA,EAG5C,OAAO,SAAU,YAAY,UAAU,aAAa,OAAO;AACzD,QAAI,eAAe,QAAQ;AACzB,aAAO,AAAO,MAAM;AAAA,QAClB,IAAI;AAAA,QACJ,MAAM;AAAA,QAEN,MAAM,YAAY,IAAI;AAAA,QACtB,OAAO,YAAY,IAAI;AAAA,QACvB,WAAW,YAAY,IAAI;AAAA,QAC3B,UAAU,YAAY,IAAI;AAAA,SACzB,MAAM,IAAI,CAAC,UAAU,WAAW,IAAI;AAAA;AAAA;AAAA,EAG3C,SAAS,SAAU,YAAY,UAAU,aAAa,OAAO;AAC3D,QAAI,UAAU,YAAY,IAAI,aAAa;AAE3C,QAAI,eAAe,UAAU,eAAe,OAAO;AACjD,YAAM,cAAc,SAAS,UAAU,WAAW;AAClD,aAAO,AAAO,MAAM;AAAA,QAClB,IAAI;AAAA,QACJ,OAAO,UAAU,KAAK;AAAA,SACrB,MAAM,IAAI,CAAC,UAAU,aAAa,IAAI;AAAA;AAAA;AAAA;AAK/C,AAAQ,eAAe;AAAA,EACrB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,GACP,SAAU,SAAS,SAAS;AAC7B,UAAQ,YAAY,QAAQ;AAAA;AAE9B,IAAO,oBAAQ;;;AClLf,IAAI,gBAAgB,IAAI,MAAM,IAAI,KAAK;AACvC,IAAI,eAAe;AAOnB,qBAAqB,SAAS;AAC5B,MAAI,4BAA4B;AAChC,MAAI,cAAc;AAClB,MAAI,OAAO;AACX,UAAQ,cAAc,SAAU,aAAa;AAC3C,QAAI,WAAW,YAAY;AAE3B,QAAI,YAAa,UAAS,SAAS,iBAAiB,SAAS,SAAS,UAAU;AAE9E,UAAI,WAAW,SAAS;AAExB,UAAI,SAAS,SAAS,YAAY;AAChC,YAAI,MAAM,SAAS,MAAM,MAAM,SAAS;AAExC,YAAI,CAAC,0BAA0B,MAAM;AACnC,oCAA0B,OAAO;AAAA,YAC/B,cAAc;AAAA,YACd,WAAW,SAAS,aAAa;AAAA,YACjC,QAAQ;AAAA;AAEV,eAAK,KAAK;AAAA,YACR,SAAS,SAAS;AAAA,YAClB,WAAW,SAAS;AAAA;AAAA;AAIxB,kCAA0B,KAAK,OAAO,KAAK;AAAA,aACtC;AACL,oBAAY,KAAK;AAAA;AAAA,WAEd;AACL,kBAAY,KAAK;AAAA;AAAA;AAGrB,SAAO;AAAA,IACL;AAAA,IACA,OAAO;AAAA,IACP;AAAA;AAAA;AASJ,wCAAwC,QAAQ;AAC9C,MAAI,SAAS;AACb,EAAO,KAAK,QAAQ,SAAU,OAAO,KAAK;AACxC,QAAI,gBAAe,MAAM;AACzB,QAAI,aAAY,MAAM;AACtB,QAAI,eAAe,WAAU;AAC7B,QAAI,UAAU,CAAC,KAAK,OAAO,AAAO,IAAI,MAAM,QAAQ,SAAU,QAAQ;AACpE,aAAO,OAAO;AAAA;AAGhB,QAAI,UAAU,CAAC,cAAa,MAAM;AAClC,IAAO,KAAK,MAAM,QAAQ,SAAU,QAAQ;AAC1C,UAAI,UAAU,OAAO;AACrB,cAAQ,KAAK,OAAO,aAAa,SAAS,QAAQ,aAAa,eAAe,SAAU,KAAK;AAC3F,eAAO;AAAA;AAAA;AAIX,QAAI,QAAQ,CAAC,QAAQ,KAAK;AAE1B,aAAS,IAAI,GAAG,IAAI,QAAQ,GAAG,QAAQ,KAAK;AAC1C,UAAI,QAAQ;AAEZ,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,cAAM,KAAK,QAAQ,GAAG;AAAA;AAGxB,YAAM,KAAK,MAAM,KAAK;AAAA;AAGxB,WAAO,KAAK,MAAM,KAAK;AAAA;AAEzB,SAAO,OAAO,KAAK,SAAS,gBAAgB;AAAA;AAO9C,6BAA6B,QAAQ;AACnC,SAAO,AAAO,IAAI,QAAQ,SAAU,SAAQ;AAC1C,QAAI,OAAO,QAAO;AAClB,QAAI,QAAQ,CAAC,QAAO;AACpB,QAAI,OAAO;AACX,SAAK,KAAK,KAAK,YAAY,WAAY;AACrC,UAAI,SAAS,UAAU;AACvB,UAAI,YAAY,UAAU,SAAS;AACnC,UAAI,OAAO,KAAK,QAAQ;AAExB,eAAS,IAAI,GAAG,IAAI,SAAS,GAAG,KAAK;AACnC,aAAK,KAAK,UAAU;AAAA;AAGtB,YAAM,KAAM,QAAO,OAAO,eAAe,MAAM,KAAK,KAAK;AAAA;AAE3D,WAAO,MAAM,KAAK;AAAA,KACjB,KAAK,SAAS,gBAAgB;AAAA;AAGnC,6BAA6B,SAAS;AACpC,MAAI,SAAS,YAAY;AACzB,SAAO;AAAA,IACL,OAAO,AAAO,OAAO,CAAC,+BAA+B,OAAO,4BAA4B,oBAAoB,OAAO,SAAS,SAAU,KAAK;AACzI,aAAO,CAAC,CAAC,IAAI,QAAQ,aAAa;AAAA,OACjC,KAAK,SAAS,gBAAgB;AAAA,IACjC,MAAM,OAAO;AAAA;AAAA;AAIjB,eAAc,KAAK;AACjB,SAAO,IAAI,QAAQ,UAAU,IAAI,QAAQ,UAAU;AAAA;AAOrD,qBAAqB,OAAO;AAE1B,MAAI,YAAY,MAAM,MAAM,GAAG,MAAM,QAAQ;AAE7C,MAAI,UAAU,QAAQ,iBAAiB,GAAG;AACxC,WAAO;AAAA;AAAA;AAIX,IAAI,iBAAiB,IAAI,OAAO,MAAM,eAAe,MAAM;AAM3D,0BAA0B,KAAK;AAC7B,MAAI,WAAW,IAAI,MAAM;AACzB,MAAI,UAAU,MAAK,SAAS,SAAS,MAAM;AAC3C,MAAI,aAAa;AACjB,MAAI,SAAS,AAAO,IAAI,SAAS,SAAU,QAAQ;AACjD,WAAO;AAAA,MACL,MAAM;AAAA,MACN,MAAM;AAAA;AAAA;AAIV,WAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,QAAI,QAAQ,MAAK,SAAS,IAAI,MAAM;AACpC,eAAW,KAAK,MAAM;AAEtB,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,aAAO,MAAO,QAAO,GAAG,KAAK,KAAK,MAAM;AAAA;AAAA;AAI5C,SAAO;AAAA,IACL;AAAA,IACA;AAAA;AAAA;AAIJ,2BAA2B,KAAK;AAC9B,MAAI,QAAQ,IAAI,MAAM;AACtB,MAAI,aAAa,MAAK,MAAM;AAC5B,MAAI,OAAO;AAEX,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AAGrC,QAAI,OAAO,MAAK,MAAM;AAEtB,QAAI,CAAC,MAAM;AACT;AAAA;AAGF,QAAI,QAAQ,KAAK,MAAM;AACvB,QAAI,SAAS;AACb,QAAI,QAAQ;AACZ,QAAI,UAAU;AAEd,QAAI,MAAM,MAAM,KAAK;AAEnB,gBAAU;AACV,eAAS,MAAM;AACf,cAAQ,MAAM,MAAM;AACpB,WAAK,KAAK;AAAA,QACR,MAAM;AAAA,QACN,OAAO;AAAA;AAET,cAAQ,KAAK,GAAG;AAAA,WACX;AACL,cAAQ,KAAK,KAAK;AAAA;AAGpB,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,YAAM,KAAK,CAAC,MAAM;AAAA;AAGpB,QAAI,MAAM,WAAW,GAAG;AACtB,gBAAU,KAAK,GAAG,QAAQ,MAAM,KAAK,KAAK,KAAK,MAAM;AAAA;AAAA;AAIzD,SAAO;AAAA,IACL,MAAM;AAAA,IACN;AAAA;AAAA;AAIJ,uBAAuB,KAAK,eAAe;AACzC,MAAI,SAAS,IAAI,MAAM,IAAI,OAAO,QAAQ,gBAAgB,OAAO;AACjE,MAAI,YAAY;AAAA,IACd,QAAQ;AAAA;AAEV,EAAO,KAAK,QAAQ,SAAU,OAAO,KAAK;AACxC,QAAI,YAAY,QAAQ;AACtB,UAAI,SAAS,iBAAiB;AAC9B,UAAI,YAAY,cAAc;AAC9B,UAAI,UAAU,UAAU,UAAU;AAElC,UAAI,WAAW;AACb,kBAAU,WAAW,UAAU,YAAY;AAC3C,kBAAU,SAAS,UAAU,aAAa;AAAA,UACxC,MAAM,OAAO;AAAA;AAEf,kBAAU,SAAS,UAAU,OAAO,OAAO,OAAO;AAAA;AAAA,WAE/C;AACL,UAAI,SAAS,kBAAkB;AAC/B,gBAAU,OAAO,KAAK;AAAA;AAAA;AAG1B,SAAO;AAAA;AAGT,IAAI,WAEJ,SAAU,QAAQ;AAChB,YAAU,WAAU;AAEpB,uBAAoB;AAClB,WAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAAA;AAG7D,YAAS,UAAU,UAAU,SAAU,SAAS,KAAK;AACnD,QAAI,YAAY,IAAI;AACpB,QAAI,QAAQ,KAAK;AAEjB,QAAI,KAAK,MAAM;AACb,gBAAU,YAAY,KAAK;AAAA;AAG7B,QAAI,OAAO,SAAS,cAAc;AAClC,SAAK,MAAM,UAAU;AACrB,SAAK,MAAM,kBAAkB,MAAM,IAAI,sBAAsB;AAE7D,QAAI,SAAS,SAAS,cAAc;AACpC,QAAI,OAAO,MAAM,IAAI,WAAW;AAChC,WAAO,YAAY,KAAK,MAAM,MAAM,IAAI;AACxC,WAAO,MAAM,UAAU;AACvB,WAAO,MAAM,QAAQ,MAAM,IAAI;AAC/B,QAAI,WAAW,SAAS,cAAc;AACtC,QAAI,WAAW,SAAS,cAAc;AACtC,aAAS,MAAM,UAAU;AACzB,QAAI,kBAAkB,MAAM,IAAI;AAChC,QAAI,kBAAkB,MAAM,IAAI;AAChC,QAAI,SAAS,oBAAoB;AAEjC,QAAI,OAAO,oBAAoB,YAAY;AACzC,UAAI,YAAY,gBAAgB,IAAI;AAEpC,UAAI,OAAO,cAAc,UAAU;AACjC,iBAAS,YAAY;AAAA,iBACZ,AAAO,MAAM,YAAY;AAClC,iBAAS,YAAY;AAAA;AAAA,WAElB;AAEL,eAAS,YAAY;AACrB,eAAS,WAAW,MAAM,IAAI;AAC9B,eAAS,MAAM,UAAU;AACzB,eAAS,MAAM,QAAQ,MAAM,IAAI;AACjC,eAAS,MAAM,cAAc,MAAM,IAAI;AACvC,eAAS,MAAM,kBAAkB,MAAM,IAAI;AAC3C,eAAS,QAAQ,OAAO;AAAA;AAG1B,QAAI,gBAAgB,OAAO;AAC3B,QAAI,kBAAkB,SAAS,cAAc;AAC7C,oBAAgB,MAAM,UAAU;AAChC,QAAI,cAAc;AAClB,QAAI,cAAc,SAAS,cAAc;AACzC,QAAI,gBAAgB,SAAS,cAAc;AAC3C,mBAAe,uBAAuB,MAAM,IAAI;AAChD,mBAAe,YAAY,MAAM,IAAI;AACrC,QAAI,OAAO;AAEX,qBAAiB;AACf,gBAAU,YAAY;AACtB,WAAK,OAAO;AAAA;AAGd,qBAAiB,aAAa,SAAS;AACvC,qBAAiB,eAAe,SAAS,WAAY;AACnD,UAAI,mBAAmB,QAAQ,mBAAmB,QAAQ,mBAAmB,QAAQ,mBAAmB,MAAM;AAC5G,YAAI,MAAuC;AAEzC,kBAAQ,KAAK;AAAA;AAGf;AACA;AAAA;AAGF,UAAI;AAEJ,UAAI;AACF,YAAI,OAAO,oBAAoB,YAAY;AACzC,sBAAY,gBAAgB,UAAU,IAAI;AAAA,eACrC;AACL,sBAAY,cAAc,SAAS,OAAO;AAAA;AAAA,eAErC,GAAP;AACA;AACA,cAAM,IAAI,MAAM,4BAA4B;AAAA;AAG9C,UAAI,WAAW;AACb,YAAI,eAAe;AAAA,UACjB,MAAM;AAAA,UACN;AAAA;AAAA;AAIJ;AAAA;AAEF,gBAAY,YAAY,KAAK;AAC7B,kBAAc,YAAY,KAAK;AAC/B,kBAAc,MAAM,UAAU;AAC9B,gBAAY,MAAM,UAAU;AAC5B,KAAC,MAAM,IAAI,eAAe,gBAAgB,YAAY;AACtD,oBAAgB,YAAY;AAC5B,SAAK,YAAY;AACjB,SAAK,YAAY;AACjB,SAAK,YAAY;AACjB,aAAS,MAAM,SAAS,UAAU,eAAe,KAAK;AACtD,cAAU,YAAY;AACtB,SAAK,OAAO;AAAA;AAGd,YAAS,UAAU,SAAS,SAAU,SAAS,KAAK;AAClD,SAAK,QAAQ,IAAI,SAAS,YAAY,KAAK;AAAA;AAG7C,YAAS,UAAU,UAAU,SAAU,SAAS,KAAK;AACnD,SAAK,OAAO,SAAS;AAAA;AAGvB,YAAS,mBAAmB,SAAU,SAAS;AAC7C,QAAI,iBAAgB;AAAA,MAClB,MAAM;AAAA,MACN,UAAU;AAAA,MACV,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MAEjB,MAAM;AAAA,MACN,OAAO,QAAQ,iBAAiB,IAAI,CAAC,WAAW,YAAY;AAAA,MAC5D,MAAM,QAAQ,iBAAiB,IAAI,CAAC,WAAW,YAAY;AAAA,MAC3D,iBAAiB;AAAA,MACjB,WAAW;AAAA,MACX,eAAe;AAAA,MACf,qBAAqB;AAAA,MACrB,aAAa;AAAA,MACb,iBAAiB;AAAA;AAEnB,WAAO;AAAA;AAGT,SAAO;AAAA,EACP;AAMF,4BAA4B,SAAS,cAAc;AACjD,SAAO,AAAO,IAAI,SAAS,SAAU,QAAQ,KAAK;AAChD,QAAI,WAAW,gBAAgB,aAAa;AAE5C,QAAI,AAAO,SAAS,aAAa,CAAC,AAAO,QAAQ,WAAW;AAC1D,UAAI,iBAAiB,AAAO,SAAS,WAAW,CAAC,AAAO,QAAQ;AAEhE,UAAI,CAAC,gBAAgB;AACnB,iBAAS;AAAA,UACP,OAAO;AAAA;AAAA;AAKX,UAAI,mBAAmB,SAAS,QAAQ,QAAQ,OAAO,QAAQ;AAE/D,eAAS,AAAO,SAAS,QAAQ;AACjC,0BAAoB,OAAO,OAAO;AAClC,aAAO;AAAA,WACF;AACL,aAAO;AAAA;AAAA;AAAA;AAMb,AAAQ,eAAe;AAAA,EACrB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,GACP,SAAU,SAAS,SAAS;AAC7B,MAAI,mBAAmB;AACvB,EAAO,KAAK,QAAQ,UAAU,QAAQ,SAAU,WAAW;AACzD,QAAI,cAAc,QAAQ,gBAAgB,UAAU,MAAM;AAE1D,QAAI,CAAC,aAAa;AAGhB,uBAAiB,KAAK,AAAO,OAAO;AAAA,QAElC,MAAM;AAAA,SACL;AAAA,WACE;AACL,UAAI,eAAe,YAAY,IAAI;AACnC,uBAAiB,KAAK;AAAA,QACpB,MAAM,UAAU;AAAA,QAChB,MAAM,mBAAmB,UAAU,MAAM;AAAA;AAAA;AAAA;AAI/C,UAAQ,YAAY,AAAO,SAAS;AAAA,IAClC,QAAQ;AAAA,KACP,QAAQ;AAAA;AAEb,IAAO,mBAAQ;;;ACzcf,IAAI,QAAc;AAClB,IAAI,SAAQ;AAML,cAAc,SAAS,aAAa;AACzC,MAAI,kBAAkB,kBAAkB;AAGxC,QAAK,aAAa,SAAU,WAAW,YAAY;AACjD,QAAI,IAAI,gBAAgB,SAAS;AAEjC,WAAO,KAAK,GAAG,KAAK;AAClB,UAAI,WAAW,gBAAgB;AAE/B,UAAI,SAAS,aAAa;AACxB;AAAA;AAAA;AAIJ,QAAI,IAAI,GAAG;AAET,UAAI,gBAAgB,QAAQ,gBAAgB;AAAA,QAC1C,UAAU;AAAA,QACV,SAAS;AAAA,QACT,IAAI;AAAA,SACH;AAEH,UAAI,eAAe;AACjB,YAAI,eAAe,cAAc;AACjC,wBAAgB,GAAG,cAAc;AAAA,UAC/B;AAAA,UACA,OAAO,aAAa;AAAA,UACpB,KAAK,aAAa;AAAA;AAAA;AAAA;AAAA;AAK1B,kBAAgB,KAAK;AAAA;AAEhB,aAAa,SAAS;AAC3B,MAAI,kBAAkB,kBAAkB;AACxC,MAAI,OAAO,gBAAgB,gBAAgB,SAAS;AACpD,kBAAgB,SAAS,KAAK,gBAAgB;AAE9C,MAAI,WAAW;AACf,QAAK,MAAM,SAAU,WAAW,YAAY;AAC1C,aAAS,IAAI,gBAAgB,SAAS,GAAG,KAAK,GAAG,KAAK;AACpD,kBAAY,gBAAgB,GAAG;AAE/B,UAAI,WAAW;AACb,iBAAS,cAAc;AACvB;AAAA;AAAA;AAAA;AAIN,SAAO;AAAA;AAEF,gBAAe,SAAS;AAC7B,SAAM,SAAS,YAAY;AAAA;AAEtB,eAAe,SAAS;AAC7B,SAAO,kBAAkB,SAAS;AAAA;AAOpC,2BAA2B,SAAS;AAClC,MAAI,QAAQ,OAAM;AAElB,MAAI,CAAC,MAAM,WAAW;AACpB,UAAM,YAAY,CAAC;AAAA;AAGrB,SAAO,MAAM;AAAA;;;AC3Ef,IAAI,gBAEJ,SAAU,QAAQ;AAChB,YAAU,gBAAe;AAEzB,4BAAyB;AACvB,WAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAAA;AAG7D,iBAAc,UAAU,UAAU,SAAU,SAAS,KAAK;AACxD,IAAQ,OAAM;AACd,QAAI,eAAe;AAAA,MACjB,MAAM;AAAA,MACN,MAAM,KAAK;AAAA;AAAA;AAIf,iBAAc,mBAAmB,SAAU,SAAS;AAClD,QAAI,iBAAgB;AAAA,MAClB,MAAM;AAAA,MAEN,MAAM;AAAA,MACN,OAAO,QAAQ,iBAAiB,IAAI,CAAC,WAAW,WAAW;AAAA;AAE7D,WAAO;AAAA;AAGT,SAAO;AAAA,EACP;AAGF,AAAQ,eAAe;AAAA,EACrB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,GACP,SAAU,SAAS,SAAS;AAC7B,UAAQ,YAAY;AAAA;AAEtB,IAAO,kBAAQ;;;ACrCf,IAAI,4BAA4B,CAAC,QAAQ,SAAS,SAAS,OAAO,SAAS,SAAS,cAAc,aAAa;AAE/G,IAAI,qBAEJ,WAAY;AAMV,+BAA4B,QAAQ,SAAS,KAAK;AAChD,QAAI,QAAQ;AAEZ,SAAK,kBAAkB;AACvB,QAAI,YAAY,aAAY,SAAS;AACrC,SAAK,oBAAoB,SAAU,SAAS,MAAM;AAChD,UAAI,CAAC,OAAO,CAAC,IAAI,WAAW,QAAQ,IAAI,SAAS,SAAS,GAAG;AAC3D,gBAAQ,WAAW,MAAM;AAAA;AAAA;AAAA;AAK/B,sBAAmB,UAAU,kBAAkB,SAAU,OAAO,SAAS;AACvE,SAAK,kBAAkB,OAAO,SAAS,SAAU,MAAM,YAAY,UAAU;AAC3E,MAAC,MAAK,eAAgB,MAAK,cAAc,KAAK,KAAK;AAEnD,UAAI,CAAC,KAAK,YAAY;AACpB,aAAK,aAAa;AAMlB,YAAI,SAAS,aAAa,KAAK,WAAW,GAAG,UAAU;AACvD,aAAK,gBAAgB;AAAA,UACnB,QAAQ,cAAc,KAAK,WAAW,OAAO,QAAQ,KAAK,OAAO,CAAC,GAAG;AAAA,UACrE,UAAU,OAAO;AAAA;AAAA;AAAA;AAIvB,WAAO;AAAA;AAGT,sBAAmB,UAAU,oBAAoB,SAAU,OAAO,SAAS,IAAI;AAC7E,SAAK,OAAO,SAAU,MAAM;AAC1B,UAAI,aAAa,KAAK,eAAe,MAAM;AAE3C,UAAI,cAAc,eAAe,MAAM;AACrC,aAAK,WAAW,YAAY,SAAU,UAAU;AAC9C,cAAI,SAAS,aAAa,KAAK,WAAW,GAAG,UAAU,KAAK,OAAO;AACnE,aAAG,MAAM,OAAO,QAAQ,UAAU;AAAA;AAAA;AAAA,OAGrC;AAAA;AASL,sBAAmB,UAAU,iBAAiB,SAAU,OAAO,SAAS;AACtE,SAAK,OAAO,SAAU,MAAM;AAC1B,UAAI,aAAa,KAAK,eAAe,MAAM;AAE3C,UAAI,MAAuC;AACzC,eAAO,CAAC,cAAc,eAAe,QAAQ,KAAK,YAAY;AAC9D,eAAO,CAAC,cAAc,eAAe,QAAQ,KAAK,OAAO;AAAA;AAG3D,WAAK,QAAQ,KAAK,SAAS;AAE3B,UAAI,cAAc,eAAe,MAAM;AACrC,aAAK,UAAU,WAAW;AAO1B,YAAI,SAAS,aAAa,KAAK,WAAW,GAAG,WAAW,UAAU,KAAK;AACvE,YAAI,cAAc,KAAK;AACvB,aAAK,QAAQ,cAAc,cAAc,KAAK,WAAW,OAAO,QAAQ,YAAY,QAAQ,UAAU,OAAO,UAAU,YAAY,aAAa,OAAO;AAAA;AAAA,OAExJ;AAAA;AAGL,sBAAmB,UAAU,gBAAgB,SAAU,KAAK,qBAAqB;AAC/E,WAAO,IAAI,KAAK,iBAAiB,SAAU,YAAY;AACrD,UAAI,OAAO,WAAW;AACtB,aAAO;AAAA,QACL,SAAS,WAAW;AAAA,QACpB,kBAAkB,sBAAsB,oBAAoB,cAAc;AAAA,QAC1E,UAAU,AAAY,sBAAsB;AAAA,QAC5C,kBAAkB,AAAY,yBAAyB,MAAM,KAAK,WAAW;AAAA,QAC7E,2BAA2B,AAAY,2BAA2B;AAAA;AAAA;AAAA;AAKxE,sBAAmB,UAAU,gBAAgB,SAAU,MAAM,aAAa,SAAS;AAGjF,QAAI,aAAa,KAAK,eAAe,MAAM;AAC3C,WAAO,eAAe,QAAQ,cAAc,QAAQ,WAAW,YAAY,YAAY,qBAAqB;AAAA;AAS9G,sBAAmB,UAAU,iBAAiB,SAAU,MAAM,SAAS;AACrE,QAAI,iBAAiB,KAAK;AAC1B,QAAI,YAAY,aAAY,SAAS;AAErC,aAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK;AAC9C,UAAI,aAAa,eAAe;AAChC,UAAI,cAAc,KAAK;AAEvB,UAAI,aAAa;AACf,YAAI,WAAW,YAAY,aAAa;AACtC,iBAAO;AAAA;AAAA,aAEJ;AACL,iBAAS,IAAI,GAAG,IAAI,mBAAmB,QAAQ,KAAK;AAClD,cAAI,mBAAmB,GAAG,WAAW,aAAa;AAChD,mBAAO;AAAA;AAAA;AAAA;AAAA;AAMf,WAAO;AAAA;AAGT,SAAO;AAAA;AAGT,sBAAsB,QAAQ;AAC5B,SAAO,KAAK,OAAO,MAAM,OAAO;AAChC,SAAO;AAAA;AAGT,sBAAqB,SAAS,QAAQ;AACpC,SAAO,YAAqB,SAAS,QAAQ;AAAA,IAC3C,kBAAkB;AAAA;AAAA;AAItB,IAAI,qBAAqB;AAAA,EACvB,MAAM,SAAU,WAAW,gBAAgB;AACzC,QAAI,cAAc,UAAU;AAC5B,QAAI,cAAc,UAAU;AAC5B,QAAI,aAAa,UAAU;AAE3B,QAAI,eAAe;AACnB,QAAI,WAAW;AACf,QAAI,WAAW;AAEf,QAAI,CAAC,eAAe,CAAC,eAAe,CAAC,YAAY;AAC/C;AAAA;AAGF,SAAK,aAAa,SAAU,WAAW;AACrC,UAAI,YAAY,UAAU,KAAK,KAAK;AACpC,mBAAa,IAAI,UAAU,IAAI;AAC/B,eAAS,UAAU,MAAM;AAAA;AAE3B,SAAK,aAAa,SAAU,WAAW;AACrC,UAAI,YAAY,UAAU,KAAK,KAAK;AACpC,mBAAa,IAAI,UAAU,IAAI;AAC/B,eAAS,UAAU,MAAM;AAAA;AAE3B,SAAK,YAAY,SAAU,WAAW;AACpC,mBAAa,IAAI,UAAU,IAAI;AAC/B,eAAS,UAAU,MAAM;AACzB,eAAS,UAAU,MAAM;AAAA;AAE3B,iBAAa,KAAK,SAAU,WAAW;AACrC,UAAI,OAAO,UAAU;AACrB,UAAI,aAAa;AACjB,WAAK,KAAK,iBAAiB,SAAU,WAAW,OAAO;AACrD,YAAI,QAAQ,aAAa,UAAU,QAAQ,KAAK,UAAU,KAAK,QAAQ,aAAa,UAAU,QAAQ,KAAK,UAAU,GAAG;AACtH,qBAAW,KAAK;AAAA;AAAA;AAGpB,qBAAe,KAAK;AAAA,QAClB,SAAS,WAAW,UAAU;AAAA,QAC9B;AAAA,QACA,eAAe;AAAA,QAEf,UAAU,WAAW;AAAA,QACrB,YAAY;AAAA,QACZ,cAAc,kBAAkB;AAAA,QAChC,eAAe,SAAS,UAAU;AAAA,QAClC,eAAe,SAAS,UAAU;AAAA;AAAA;AAAA;AAAA,EAIxC,KAAK,SAAU,WAAW,gBAAgB;AACxC,SAAK,UAAU,WAAW,SAAU,UAAU;AAC5C,UAAI,WAAW,SAAS;AACxB,qBAAe,KAAK;AAAA,QAClB,SAAS,UAAU,SAAS;AAAA,QAC5B;AAAA,QACA,eAAe;AAAA,QACf;AAAA,QACA,YAAY,CAAC;AAAA,QACb,cAAc,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAKxC,IAAI,qBAAqB;AAAA,EACzB,SAAU,WAAW,YAAY;AAC/B,QAAI,aAAa,UAAU;AAC3B,QAAI,aAAa,UAAU;AAC3B,QAAI,YAAY,UAAU;AAC1B,KAAC,aAAa,cAAe,aAAY,WAAW,KAAK,KAAK;AAC9D,KAAC,aAAa,cAAe,aAAY,WAAW,KAAK,KAAK;AAC9D,WAAO,aAAa,cAAc,WAAW;AAAA;AAAA,EAE/C,SAAU,WAAW,YAAY;AAC/B,QAAI,WAAW,UAAU;AACzB,WAAO,YAAY,aAAa,WAAW;AAAA;AAAA;AAE7C,IAAI,oBAAoB;AAAA,EACtB,MAAM,WAAY;AAEhB,WAAO,KAAK,SAAS,OAAO,UAAU;AAAA;AAAA,EAExC,KAAK,WAAY;AACf,QAAI,WAAW,KAAK;AACpB,QAAI,OAAO,SAAS,kBAAkB;AAEtC,SAAK,eAAe,AAAQ,aAAa;AACzC,WAAO;AAAA;AAAA;AAGX,IAAI,eAAe;AAAA,EACjB,OAAO,MAAM,aAAa;AAAA,EAC1B,OAAO,MAAM,aAAa;AAAA,EAC1B,MAAM,SAAU,IAAI,UAAU,mBAAmB,OAAO;AACtD,QAAI,WAAW,KAAK,SAAS,YAAY,CAAC,kBAAkB,GAAG,IAAI,kBAAkB,GAAG,KAAK,SAAS,SAAS,YAAY,CAAC,kBAAkB,GAAG,IAAI,kBAAkB,GAAG,KAAK;AAC/K,QAAI,WAAW,KAAK,SAAS,YAAY,CAAC,kBAAkB,GAAG,IAAI,kBAAkB,GAAG,KAAK,SAAS,SAAS,YAAY,CAAC,kBAAkB,GAAG,IAAI,kBAAkB,GAAG,KAAK;AAC/K,QAAI,SAAS,CAAC,aAAa,CAAC,SAAS,IAAI,SAAS,MAAM,aAAa,CAAC,SAAS,IAAI,SAAS;AAC5F,WAAO;AAAA,MACL;AAAA,MACA,UAAU;AAAA;AAAA;AAAA,EAGd,SAAS,SAAU,IAAI,UAAU,mBAAmB,OAAO;AACzD,QAAI,WAAW,CAAC,CAAC,UAAU,YAAY,CAAC,UAAU;AAClD,QAAI,SAAS,IAAI,mBAAmB,SAAU,MAAM;AAClD,UAAI,IAAI,KAAK,SAAS,YAAY,MAAM,SAAS,SAAS,YAAY,MAAM;AAC5E,eAAS,GAAG,KAAK,KAAK,IAAI,SAAS,GAAG,IAAI,EAAE;AAC5C,eAAS,GAAG,KAAK,KAAK,IAAI,SAAS,GAAG,IAAI,EAAE;AAC5C,eAAS,GAAG,KAAK,KAAK,IAAI,SAAS,GAAG,IAAI,EAAE;AAC5C,eAAS,GAAG,KAAK,KAAK,IAAI,SAAS,GAAG,IAAI,EAAE;AAC5C,aAAO;AAAA;AAET,WAAO;AAAA,MACL;AAAA,MACA;AAAA;AAAA;AAAA;AAKN,qBAAqB,eAAe,IAAI,UAAU,mBAAmB;AACnE,MAAI,MAAuC;AACzC,WAAO,SAAS,SAAS,eAAe;AAAA;AAG1C,MAAI,OAAO,SAAS,QAAQ,CAAC,KAAK,KAAK;AACvC,MAAI,SAAS,aAAa,IAAI,CAAC,GAAG,IAAI,SAAU,GAAG;AACjD,WAAO,KAAK,KAAK,YAAY,KAAK,aAAa,kBAAkB,KAAK,QAAQ,KAAK,cAAc,KAAK,YAAY,kBAAkB;AAAA;AAEtI,MAAI,WAAW;AACf,WAAS,iBAAiB;AAC1B,WAAS,IAAI,iBAAiB,CAAC,KAAK;AACpC,SAAO;AAAA,IACL;AAAA,IACA;AAAA;AAAA;AAIJ,IAAI,gBAAgB;AAAA,EAClB,OAAO,MAAM,mBAAmB;AAAA,EAChC,OAAO,MAAM,mBAAmB;AAAA,EAChC,MAAM,SAAU,QAAQ,OAAO,QAAQ;AACrC,WAAO,CAAC,CAAC,OAAO,GAAG,KAAK,OAAO,KAAK,MAAM,GAAG,IAAI,OAAO,GAAG,KAAK,OAAO,KAAK,MAAM,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,OAAO,KAAK,MAAM,GAAG,IAAI,OAAO,GAAG,KAAK,OAAO,KAAK,MAAM,GAAG;AAAA;AAAA,EAEzK,SAAS,SAAU,QAAQ,OAAO,QAAQ;AACxC,WAAO,IAAI,QAAQ,SAAU,MAAM,KAAK;AACtC,aAAO,CAAC,KAAK,KAAK,OAAO,KAAK,MAAM,KAAK,IAAI,KAAK,KAAK,OAAO,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAKpF,2BAA2B,eAAe,QAAQ,OAAO,QAAQ;AAC/D,SAAO,CAAC,OAAO,KAAK,OAAO,iBAAiB,MAAM,IAAI,OAAO,KAAK,OAAO,iBAAiB,MAAM;AAAA;AAMlG,mBAAmB,cAAc,gBAAgB;AAC/C,MAAI,WAAW,QAAQ;AACvB,MAAI,aAAa,QAAQ;AACzB,MAAI,SAAS,CAAC,SAAS,KAAK,WAAW,IAAI,SAAS,KAAK,WAAW;AACpE,QAAM,OAAO,OAAQ,QAAO,KAAK;AACjC,QAAM,OAAO,OAAQ,QAAO,KAAK;AACjC,SAAO;AAAA;AAGT,iBAAiB,UAAU;AACzB,SAAO,WAAW,CAAC,SAAS,GAAG,KAAK,SAAS,GAAG,IAAI,SAAS,GAAG,KAAK,SAAS,GAAG,MAAM,CAAC,KAAK;AAAA;AAG/F,IAAO,6BAAQ;;;AC9Tf,IAAI,QAAc;AAClB,IAAI,oBAAoB,wBAAwB;AAGhD,IAAI,kBAEJ,SAAU,QAAQ;AAChB,YAAU,kBAAiB;AAE3B,8BAA2B;AACzB,WAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAAA;AAG7D,mBAAgB,UAAU,SAAS,SAAU,cAAc,SAAS,KAAK,SAAS;AAChF,QAAI,CAAC,KAAK,kBAAkB;AAC1B,WAAK,mBAAmB,IAAI,wBAAgB,IAAI;AAEhD,WAAK,iBAAiB,GAAG,SAAS,AAAO,KAAK,KAAK,UAAU,OAAO;AAAA;AAGtE,wBAAoB,cAAc,SAAS,MAAM,SAAS;AAC1D,wBAAoB,cAAc;AAAA;AAGpC,mBAAgB,UAAU,UAAU,SAAU,SAAS,KAAK,MAAM;AAChE,cAAS,MAAM,KAAK;AAAA;AAGtB,mBAAgB,UAAU,SAAS,SAAU,SAAS,KAAK;AACzD,SAAK,oBAAoB,KAAK,iBAAiB;AAAA;AAGjD,mBAAgB,UAAU,UAAU,SAAU,SAAS,KAAK;AAC1D,SAAK,oBAAoB,KAAK,iBAAiB;AAAA;AAGjD,mBAAgB,UAAU,WAAW,SAAU,YAAY;AACzD,QAAI,QAAQ,WAAW;AAEvB,QAAI,CAAC,WAAW,SAAS,CAAC,MAAM,QAAQ;AACtC;AAAA;AAGF,QAAI,WAAW;AACf,QAAI,UAAU,KAAK;AAEnB,SAAK,iBAAiB,aAAa;AAGnC,QAAI,qBAAqB,IAAI,2BAAmB,eAAe,KAAK,QAAQ,SAAS;AAAA,MACnF,SAAS,CAAC;AAAA;AAEZ,uBAAmB,kBAAkB,OAAO,SAAS,SAAU,MAAM,YAAY,UAAU;AACzF,UAAI,SAAS,SAAS,eAAe;AACnC;AAAA;AAGF,UAAI,YAAY,KAAK;AAErB,UAAI,cAAc,QAAQ;AACxB,iBAAS,KAAK,UAAU,WAAW;AACnC,iBAAS,KAAK,UAAU,WAAW;AAAA,aAC9B;AACL,iBAAS;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,YAAY,UAAU;AAAA;AAAA;AAG5B,IAAQ,KAAK,SAAS;AAEtB,SAAK,oBAAoB;AAEzB,sBAAkB,SAAS,UAAU,QAAQ;AAC3C,UAAI,OAAO,SAAS,QAAQ;AAC5B,UAAI,YAAY,KAAK;AACrB,UAAI,gBAAgB,aAAa,SAAS,WAAW;AAErD,UAAI,aAAa,cAAc,4BAA4B,WAAW;AAEtE,UAAI,WAAW,gBAAgB,QAAQ,WAAW,gBAAgB,MAAM;AACtE,iBAAS,WAAW,GAAG,OAAO,SAAS,KAAK,MAAM,aAAa,GAAG,WAAW,cAAc,WAAW;AAAA;AAGxG,uBAAkB,UAAS,cAAc,MAAM;AAAA,QAC7C,YAAY,cAAc;AAAA,QAC1B,YAAY,OAAO;AAAA,QACnB,UAAU,OAAO;AAAA;AAAA;AAIrB,0BAAsB,SAAS,WAAW,UAAS;AACjD,UAAI;AACJ,eAAQ,cAAc;AAAA,QACpB,UAAU;AAAA,QACV,SAAS;AAAA,SACR,SAAU,SAAS;AACpB,YAAI,OAAM,QAAQ,aAAa,SAAS,UAAU;AAClD,gBAAQ,SAAQ;AAAA;AAElB,aAAO;AAAA;AAAA;AAIX;AAEA,mBAAgB,UAAU,sBAAsB,SAAU,UAAU;AAClE,QAAI,QAAQ;AAEZ,UAAK,UAAU,SAAU,WAAW,YAAY;AAC9C,YAAM,KAAK,AAAO,MAAM;AAAA;AAE1B,UAAM,UAAU,KAAK,IAAI,eAAe;AAAA,MACtC,MAAM;AAAA,MACN,MAAM,KAAK;AAAA,MACX;AAAA;AAAA;AAIJ,mBAAgB,mBAAmB,SAAU,SAAS;AACpD,QAAI,iBAAgB;AAAA,MAClB,MAAM;AAAA,MACN,YAAY;AAAA,MAEZ,MAAM;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA;AAAA,MAGR,OAAO,QAAQ,iBAAiB,IAAI,CAAC,WAAW,YAAY;AAAA,MAC5D,YAAY;AAAA,QACV,aAAa;AAAA,QACb,OAAO;AAAA;AAAA;AAGX,WAAO;AAAA;AAGT,SAAO;AAAA,EACP;AAEF,IAAI,YAAW;AAAA,EACb,MAAM,WAAY;AAChB,QAAI,aAAa,CAAC,KAAK;AACvB,SAAK,IAAI,eAAe;AAAA,MACtB,MAAM;AAAA,MACN,KAAK;AAAA,MACL,sBAAsB;AAAA;AAAA;AAAA,EAG1B,MAAM,WAAY;AAChB,SAAK,oBAAoB,AAAQ,IAAI,KAAK;AAAA;AAAA;AAI9C,wBAAwB,gBAAgB;AACtC,MAAI,UAAU;AAAA,IACZ,YAAY,eAAe,IAAI,cAAc;AAAA,IAC7C,YAAY,eAAe,IAAI,cAAc;AAAA,IAC7C,SAAS,eAAe,IAAI,WAAW;AAAA,IACvC,SAAS,eAAe,IAAI,WAAW;AAAA;AAMzC,MAAI,QAAQ,cAAc,QAAQ,QAAQ,WAAW,MAAM;AACzD,YAAQ,aAAa;AAAA;AAGvB,MAAI,QAAQ,cAAc,QAAQ,QAAQ,WAAW,MAAM;AACzD,YAAQ,aAAa;AAAA;AAGvB,SAAO;AAAA;AAGT,6BAA6B,cAAc,SAAS;AAClD,eAAa,cAAc,QAAQ,AAAQ,MAAM,WAAW,IAAI,aAAa;AAAA;AAG/E,6BAA6B,cAAc,SAAS,MAAM,SAAS,KAAK;AACtE,MAAI,aAAa,KAAK;AAEtB,MAAI,WAAW,QAAQ,SAAS,oBAAoB;AAClD,iBAAa,QAAQ,QAAQ,mBAAmB,QAAQ,uBAAuB;AAAA;AAGjF,OAAK,gBAAgB;AACrB,eAAa,cAAc,QAAQ,aAAa,aAAa;AAC7D,MAAI,qBAAqB,IAAI,2BAAmB,eAAe,eAAe,SAAS;AAAA,IACrF,SAAS,CAAC;AAAA;AAEZ,MAAI,SAAS,mBAAmB,cAAc,KAAK,SAAU,YAAY;AACvE,WAAO,WAAW,iBAAiB,CAAC,WAAW,gBAAgB,UAAU,CAAC,WAAW,iBAAiB,WAAW,gBAAgB,UAAU;AAAA;AAG7I,OAAK,iBAAiB,UAAU,QAAQ,YAAY,cAAc,OAAO,SAAS;AAAA,IAChF,WAAW;AAAA,IACX,YAAY,aAAa,SAAS,cAAc;AAAA,MAC9C;AAAA;AAGN,8BAA8B,YAAY,SAAU,SAAS;AAC3D,MAAI,eAAe,QAAQ,aAAa,WAAW;AACnD,MAAI,sBAAsB,CAAC,WAAW;AAEtC,MAAI,CAAC,gBAAgB,aAAa,IAAI,wBAAwB,MAAM;AAClE;AAAA;AAGF,MAAI,iBAAiB,aAAa,SAAS;AAC3C,MAAI,YAAY;AAChB,MAAI,SAAS,eAAe;AAC5B,MAAI,eAAe,YAAY,SAAS;AACxC,QAAK,aAAa,aAAa,SAAU,WAAW;AAClD,WAAO,qBAAqB,WAAW,SAAS;AAAA;AAElD,QAAK,aAAa,aAAa,SAAU,WAAW;AAClD,WAAO,qBAAqB,WAAW,SAAS;AAAA;AAGlD,gCAA8B,WAAW,cAAc,mBAAmB;AACxE,QAAI,YAAY,UAAU;AAC1B,QAAI,SAAS;AAAA,MACX,MAAM;AAAA,MACN,cAAc;AAAA,MAEd,YAAY,eAAe,IAAI,cAAc,SAAS;AAAA,MAEtD,IAAI,oBAAoB,eAAe;AAAA;AAEzC,WAAO,qBAAqB;AAC5B,cAAU,KAAK;AAAA;AAGjB,SAAO;AAAA;AAET,IAAO,mBAAQ;;;AC7OR,mBAAiB,WAAW;AACjC,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAChC,kBAAgB,eAAe;AAC/B,kBAAgB,aAAa;AAC7B,kBAAgB,YAAY;AAC5B,kBAAgB,YAAY;AAC5B,kBAAgB,WAAW;AAC3B,MAAI;AAAA;;;AChBN,IAAI,eAEJ,SAAU,QAAQ;AAChB,YAAU,eAAc;AAExB,2BAAwB;AACtB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,cAAa;AAC1B,WAAO;AAAA;AAGT,gBAAa,OAAO;AACpB,gBAAa,eAAe,CAAC;AAC7B,gBAAa,gBAAgB;AAAA,IAC3B,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,MAAM;AAAA,IAEN,aAAa;AAAA,IAGb,SAAS;AAAA,IAET,WAAW;AAAA,IACX,mBAAmB;AAAA,IACnB,aAAa;AAAA,IACb,YAAY;AAAA,IAIZ,SAAS;AAAA,IACT,WAAW;AAAA,IACX,WAAW;AAAA,IAEX,oBAAoB;AAAA,IACpB,WAAW;AAAA,IACX,iBAAiB;AAAA,IAEjB,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,eAAe;AAAA,IACf,eAAe;AAAA,IAEf,cAAc;AAAA,IAEd,aAAa;AAAA,IAIb,SAAS;AAAA,IAET,cAAc;AAAA,IAEd,aAAa;AAAA,MAGX,MAAM;AAAA,MAKN,MAAM;AAAA,MACN,WAAW;AAAA,MACX,yBAAyB;AAAA,MACzB,uBAAuB;AAAA,MACvB,YAAY;AAAA,QACV,OAAO;AAAA,QACP,OAAO;AAAA,QACP,MAAM;AAAA,QAEN,WAAW;AAAA;AAAA;AAAA,IAKf,WAAW;AAAA,MACT,OAAO;AAAA,MACP,UAAU;AAAA;AAAA;AAGd,SAAO;AAAA,EACP;AAEF,IAAO,uBAAQ;;;ACnFR,8BAA8B,cAAc;AACjD,MAAI,gBAAgB,aAAa,IAAI;AACrC,SAAO,iBAAiB,OAAO,CAAC,CAAC,gBAC/B,aAAa,IAAI,kBAAkB;AAAA;AAGvC,mBAAmB,YAAY;AAC7B,MAAI,CAAC,YAAI,cAAc;AACrB;AAAA;AAGF,MAAI,QAAQ,SAAS,gBAAgB;AAErC,WAAS,IAAI,GAAG,OAAM,WAAW,QAAQ,IAAI,MAAK,KAAK;AACrD,QAAI,WAAW,MAAM,OAAO;AAC1B,aAAO,WAAW;AAAA;AAAA;AAAA;AAKjB,IAAI,mBAAmB,UAAU,CAAC,aAAa,mBAAmB,cAAc,gBAAgB;AAChG,IAAI,oBAAoB,UAAU,CAAC,oBAAoB,cAAc,eAAe,iBAAiB;AACrG,2BAA2B,aAAa,WAAW;AACxD,MAAI,CAAC,aAAa;AAChB,WAAO;AAAA;AAGT,cAAY,YAAY,WAAW;AACnC,MAAI,MAAM,YAAY,QAAQ;AAC9B,gBAAc,QAAQ,KAAK,YAAY,MAAM,YAAY,MAAM,GAAG,OAAO,MAAM;AAC/E,SAAO,YAAY;AAAA;AAEd,0BAA0B,IAAI,OAAO;AAC1C,MAAI,MAAM,GAAG,gBAAgB,SAAS,eAAe,SAAS,YAAY,iBAAiB;AAC3F,SAAO,MAAM,QAAQ,IAAI,SAAS,MAAM;AAAA;;;AC5B1C,IAAI,wBAAwB,kBAAkB,mBAAmB;AACjE,IAAI,uBAAuB,kBAAkB,kBAAkB;AAE/D,IAAI,WAAW,2FAA4F,aAAI,uBAAuB,2BAA2B;AAEjK,mBAAmB,KAAK;AACtB,QAAM,QAAQ,SAAS,UAAU,QAAQ,UAAU,SAAS,QAAQ,QAAQ,WAAW;AACvF,SAAO;AAAA;AAGT,uBAAuB,cAAc,aAAa,eAAe;AAC/D,MAAI,CAAC,SAAS,kBAAkB,kBAAkB,UAAU;AAC1D,WAAO;AAAA;AAGT,MAAI,kBAAkB,aAAa,IAAI;AACvC,MAAI,cAAc,aAAa,IAAI;AACnC,gBAAc,qBAAqB;AACnC,MAAI,WAAW,UAAU;AACzB,MAAI,YAAY,KAAK,IAAI,KAAK,MAAM,eAAe,KAAK;AACxD,MAAI,gBAAgB;AACpB,MAAI,iBAAiB,uBAAuB;AAC5C,MAAI;AAEJ,MAAI,QAAQ,CAAC,QAAQ,UAAU,YAAY,IAAI;AAC7C,qBAAiB;AACjB,sBAAkB,6BAA8B,aAAY,aAAa,SAAS,OAAO,OAAO;AAAA,SAC3F;AACL,qBAAiB;AACjB,sBAAkB,6BAA8B,aAAY,aAAa,QAAQ,MAAM,MAAM;AAAA;AAG/F,MAAI,eAAe,YAAY,KAAK,KAAK;AACzC,MAAI,UAAU,YAAY;AAC1B,MAAI,YAAY,UAAU,KAAK,IAAI,KAAK,IAAI,iBAAiB,UAAU,KAAK,IAAI,KAAK,IAAI;AACzF,MAAI,cAAc,KAAK,MAAQ,cAAY,KAAK,QAAQ,eAAe,IAAI,KAAK,QAAQ,cAAe,aAAY,WAAW,KAAK,OAAO;AAC1I,mBAAiB,MAAM,WAAW,OAAO,cAAc;AACvD,MAAI,cAAc,cAAc,YAAY,cAAc;AAC1D,MAAI,WAAW,CAAC,6BAA6B,YAAY,eAAe,YAAY,OAAO,gBAAgB,MAAM,iBAAiB,KAAK,mBAAmB,aAAa,kBAAkB,aAAa,sBAAsB,kBAAkB;AAC9O,SAAO,iBAAkB,SAAS,KAAK,MAAM;AAAA;AAG/C,4BAA4B,UAAU,UAAU;AAC9C,MAAI,kBAAkB;AACtB,MAAI,mBAAmB,MAAM,WAAW,IAAI,OAAO;AACnD,MAAI,iBAAiB,YAAY,mBAAmB,gBAAgB;AAEpE,MAAI,CAAC,UAAU;AACb,uBAAmB,MAAM,WAAW,OAAO;AAC3C,sBAAkB,YAAI,qBAAqB,MAAM,uBAAuB,mBAAmB,UAAU,mBAAmB,SAAS;AAAA;AAGnI,SAAO,wBAAwB,MAAM;AAAA;AAGvC,2BAA2B,GAAG,GAAG,UAAU;AAGzC,MAAI,KAAK,EAAE,QAAQ,KAAK;AACxB,MAAI,KAAK,EAAE,QAAQ,KAAK;AAExB,MAAI,CAAC,YAAI,oBAAoB;AAC3B,WAAO,WAAW,SAAS,KAAK,WAAW,KAAK,MAAM,CAAC,CAAC,OAAO,KAAK,CAAC,QAAQ;AAAA;AAI/E,MAAI,OAAO,YAAI;AACf,MAAI,aAAY,cAAe,QAAO,OAAO,MAAM,MAAM,KAAK,MAAM,KAAM,QAAO,OAAO,MAAM;AAC9F,SAAO,WAAW,kBAAkB,uBAAuB,MAAM,aAAY,MAAM,CAAC,CAAC,OAAO,IAAI,CAAC,QAAQ,IAAI,CAAC,kBAAkB;AAAA;AASlI,sBAAsB,gBAAgB;AACpC,MAAI,UAAU;AACd,MAAI,WAAW,eAAe,IAAI;AAClC,MAAI,QAAQ,eAAe;AAC3B,WAAS,QAAQ,KAAK,WAAW;AACjC,UAAQ,KAAK,UAAU,eAAe;AACtC,cACG,QAAQ,KAAK,iBAAiB,KAAK,MAAM,WAAW,IAAI,KAAK;AAChE,MAAI,cAAc,eAAe,IAAI;AACrC,MAAI,aAAa,eAAe,IAAI,qBAAqB;AACzD,MAAI,gBAAgB,eAAe,IAAI,wBAAwB;AAC/D,MAAI,gBAAgB,eAAe,IAAI,wBAAwB;AAC/D,iBAAe,cAAc,QAAQ,KAAK,iBAAiB,gBAAgB,QAAQ,gBAAgB,QAAQ,aAAa,QAAQ;AAChI,OAAK,CAAC,cAAc,UAAU,SAAU,MAAM;AAC5C,QAAI,MAAM,eAAe,IAAI;AAC7B,WAAO,QAAQ,KAAK,UAAU,OAAO,MAAM;AAAA;AAE7C,SAAO,QAAQ,KAAK;AAAA;AAGtB,yBAAyB,cAAc,kBAAkB,UAAU;AACjE,MAAI,UAAU;AACd,MAAI,qBAAqB,aAAa,IAAI;AAC1C,MAAI,kBAAkB,aAAa,IAAI;AACvC,MAAI,aAAa,aAAa,IAAI;AAClC,MAAI,cAAc,aAAa,IAAI;AACnC,MAAI,gBAAgB,aAAa,IAAI;AACrC,MAAI,gBAAgB,aAAa,IAAI;AACrC,MAAI,iBAAiB,aAAa,SAAS;AAC3C,MAAI,UAAU,2BAA2B,cAAc;AACvD,MAAI,YAAY,gBAAgB,QAAQ,gBAAgB,QAAQ,aAAa,QAAQ;AACrF,UAAQ,KAAK,gBAAgB;AAE7B,sBAAoB,sBAAsB,QAAQ,KAAK,mBAAmB,oBAAoB;AAE9F,MAAI,iBAAiB;AACnB,QAAI,YAAI,iBAAiB;AACvB,cAAQ,KAAK,sBAAsB;AAAA,WAC9B;AAEL,cAAQ,KAAK,uBAAuB,MAAM;AAC1C,cAAQ,KAAK;AAAA;AAAA;AAKjB,OAAK,CAAC,SAAS,SAAS,WAAW,SAAU,MAAM;AACjD,QAAI,aAAa,YAAY;AAC7B,QAAI,YAAY,YAAY;AAC5B,QAAI,MAAM,aAAa,IAAI;AAC3B,WAAO,QAAQ,QAAQ,KAAK,aAAa,MAAM,MAAO,UAAS,UAAU,KAAK;AAAA;AAGhF,UAAQ,KAAK,aAAa;AAE1B,MAAI,WAAW,MAAM;AACnB,YAAQ,KAAK,aAAa,mBAAkB,SAAS,KAAK,SAAS;AAAA;AAGrE,SAAO,QAAQ,KAAK,OAAO;AAAA;AAI7B,wBAAwB,KAAK,IAAI,cAAc,KAAK,KAAK;AACvD,MAAI,YAAY,MAAM,GAAG;AAEzB,MAAI,cAAc;AAChB,QAAI,iBAAiB,aAAa,UAAU;AAE5C,QAAI,gBAAgB;AAElB,0BAAoB,KAAK,gBAAgB,SAAS,MAAM,KAAK;AAAA;AAAA,SAE1D;AACL,QAAI,KAAK;AACT,QAAI,KAAK;AAIT,QAAI,qBAAqB,aAAa,UAAU;AAEhD,QAAI,oBAAoB;AACtB,UAAI,MAAM,mBAAmB;AAC7B,UAAI,MAAM,mBAAmB;AAAA;AAAA;AAIjC,MAAI,KAAK,IAAI,KAAK,GAAG;AACrB,MAAI,KAAK,IAAI,KAAK,GAAG;AAAA;AAGvB,IAAI,qBAEJ,WAAY;AACV,+BAA4B,WAAW,KAAK,KAAK;AAC/C,SAAK,QAAQ;AACb,SAAK,cAAc,CAAC,GAAG,GAAG,GAAG;AAC7B,SAAK,aAAa;AAClB,SAAK,aAAa;AAClB,SAAK,YAAY;AAEjB,QAAI,YAAI,KAAK;AACX,aAAO;AAAA;AAGT,QAAI,KAAK,SAAS,cAAc;AAEhC,OAAG,gBAAgB;AACnB,SAAK,KAAK;AACV,QAAI,KAAK,KAAK,MAAM,IAAI;AACxB,QAAI,eAAe,KAAK,gBAAgB,OAAO,IAAI;AACnD,mBAAe,KAAK,aAAa,IAAI,cAAc,IAAI,aAAa,GAAG,IAAI,cAAc;AAEzF,QAAI,cAAc;AAChB,eAAS,KAAK,YAAY;AAAA,WACrB;AACL,gBAAU,YAAY;AAAA;AAGxB,SAAK,aAAa;AAIlB,QAAI,OAAO;AAEX,OAAG,eAAe,WAAY;AAE5B,UAAI,KAAK,YAAY;AACnB,qBAAa,KAAK;AAClB,aAAK,QAAQ;AAAA;AAGf,WAAK,aAAa;AAAA;AAGpB,OAAG,cAAc,SAAU,GAAG;AAC5B,UAAI,KAAK,OAAO;AAEhB,UAAI,CAAC,KAAK,YAAY;AAOpB,YAAI,UAAU,GAAG;AACjB,YAAI,iBAAiB,GAAG,QAAQ;AAChC,uBAAe,gBAAgB,GAAG;AAClC,gBAAQ,SAAS,aAAa;AAAA;AAAA;AAIlC,OAAG,eAAe,WAAY;AAE5B,WAAK,aAAa;AAElB,UAAI,KAAK,YAAY;AACnB,YAAI,KAAK,OAAO;AACd,eAAK,UAAU,KAAK;AAAA;AAAA;AAAA;AAAA;AAU5B,sBAAmB,UAAU,SAAS,SAAU,cAAc;AAG5D,QAAI,YAAY,KAAK;AACrB,QAAI,YAAW,iBAAiB,WAAW;AAC3C,QAAI,WAAW,UAAU;AAEzB,QAAI,SAAS,aAAa,cAAc,cAAa,YAAY;AAC/D,eAAS,WAAW;AAAA;AAItB,QAAI,oBAAoB,aAAa,IAAI;AACzC,yBAAqB,KAAK;AAE1B,SAAK,GAAG,YAAY,aAAa,IAAI,gBAAgB;AAAA;AAKvD,sBAAmB,UAAU,OAAO,SAAU,cAAc,gBAAgB;AAC1E,iBAAa,KAAK;AAClB,iBAAa,KAAK;AAClB,QAAI,KAAK,KAAK;AACd,QAAI,QAAQ,GAAG;AACf,QAAI,aAAa,KAAK;AAEtB,QAAI,CAAC,GAAG,WAAW;AACjB,YAAM,UAAU;AAAA,WACX;AACL,YAAM,UAAU,WAAW,gBAAgB,cAAc,CAAC,KAAK,YAAY,KAAK,aAC9E,kBAAkB,WAAW,IAAI,WAAW,IAAI,QAAS,mBAAkB,qBAAqB,kBAAkB,OAAQ,cAAa,IAAI,mBAAmB,MAK7J,sBAAsB,MAAK,aAAa,SAAS;AAAA;AAGtD,SAAK,QAAQ;AACb,SAAK,aAAa;AAClB,SAAK,YAAY;AAAA;AAGnB,sBAAmB,UAAU,aAAa,SAAU,SAAS,SAAS,cAAc,aAAa,eAAe;AAC9G,QAAI,KAAK,KAAK;AAEd,QAAI,WAAW,MAAM;AACnB,SAAG,YAAY;AACf;AAAA;AAGF,QAAI,QAAQ;AAEZ,QAAI,SAAS,kBAAkB,aAAa,IAAI,eAAe,UAAU,CAAC,qBAAqB,eAAe;AAC5G,cAAQ,cAAc,cAAc,aAAa;AAAA;AAGnD,QAAI,SAAS,UAAU;AACrB,SAAG,YAAY,UAAU;AAAA,eAChB,SAAS;AAElB,SAAG,YAAY;AAEf,UAAI,CAAC,QAAQ,UAAU;AACrB,kBAAU,CAAC;AAAA;AAGb,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,YAAI,MAAM,QAAQ,OAAO,QAAQ,GAAG,eAAe,IAAI;AACrD,aAAG,YAAY,QAAQ;AAAA;AAAA;AAK3B,UAAI,SAAS,GAAG,WAAW,QAAQ;AAGjC,YAAI,UAAU,SAAS,cAAc;AACrC,gBAAQ,YAAY;AACpB,WAAG,YAAY;AAAA;AAAA;AAAA;AAKrB,sBAAmB,UAAU,eAAe,SAAU,WAAW;AAC/D,SAAK,aAAa;AAAA;AAGpB,sBAAmB,UAAU,UAAU,WAAY;AACjD,QAAI,KAAK,KAAK;AACd,WAAO,CAAC,GAAG,aAAa,GAAG;AAAA;AAG7B,sBAAmB,UAAU,SAAS,SAAU,KAAK,KAAK;AACxD,QAAI,aAAa,KAAK;AACtB,mBAAe,YAAY,KAAK,KAAK,KAAK,eAAe,KAAK;AAE9D,QAAI,WAAW,MAAM,QAAQ,WAAW,MAAM,MAAM;AAClD,UAAI,UAAU,KAAK,GAAG;AACtB,UAAI,aAAa,kBAAkB,WAAW,IAAI,WAAW;AAC7D,WAAK,YAAY,SAAU,YAAW;AACpC,gBAAQ,WAAU,MAAM,WAAU;AAAA;AAAA;AAAA;AAUxC,sBAAmB,UAAU,iBAAiB,WAAY;AAExD,QAAI,SAAS,KAAK,YAAY;AAE9B,QAAI,SAAS,KAAK,YAAY;AAC9B,SAAK,OAAO,SAAS,KAAK,IAAI,YAAY,SAAS,KAAK,IAAI;AAAA;AAG9D,sBAAmB,UAAU,OAAO,WAAY;AAC9C,QAAI,QAAQ;AAEZ,QAAI,QAAQ,KAAK,GAAG;AACpB,UAAM,aAAa;AACnB,UAAM,UAAU;AAChB,gBAAI,wBAAyB,OAAM,aAAa;AAChD,SAAK,QAAQ;AACb,SAAK,mBAAmB,WAAW,WAAY;AAC7C,aAAO,MAAM,YAAY;AAAA,OACxB;AAAA;AAGL,sBAAmB,UAAU,YAAY,SAAU,MAAM;AACvD,QAAI,KAAK,SAAS,CAAE,MAAK,cAAc,KAAK,aAAa;AACvD,UAAI,MAAM;AACR,aAAK,aAAa;AAElB,aAAK,QAAQ;AACb,aAAK,eAAe,WAAW,KAAK,KAAK,MAAM,OAAO;AAAA,aACjD;AACL,aAAK;AAAA;AAAA;AAAA;AAKX,sBAAmB,UAAU,SAAS,WAAY;AAChD,WAAO,KAAK;AAAA;AAGd,sBAAmB,UAAU,UAAU,WAAY;AACjD,SAAK,GAAG,WAAW,YAAY,KAAK;AAAA;AAGtC,SAAO;AAAA;AAGT,IAAO,6BAAQ;;;ACvZf,IAAI,qBAEJ,WAAY;AACV,+BAA4B,KAAK;AAC/B,SAAK,QAAQ;AACb,SAAK,cAAc,CAAC,GAAG,GAAG,GAAG;AAC7B,SAAK,aAAa;AAClB,SAAK,MAAM,IAAI;AACf,oBAAe,KAAK,aAAa,KAAK,KAAK,IAAI,aAAa,GAAG,IAAI,cAAc;AAAA;AAOnF,sBAAmB,UAAU,SAAS,SAAU,cAAc;AAC5D,QAAI,oBAAoB,aAAa,IAAI;AACzC,yBAAqB,KAAK;AAAA;AAG5B,sBAAmB,UAAU,OAAO,WAAY;AAC9C,QAAI,KAAK,cAAc;AACrB,mBAAa,KAAK;AAAA;AAGpB,SAAK,GAAG;AACR,SAAK,QAAQ;AAAA;AAOf,sBAAmB,UAAU,aAAa,SAAU,SAAS,oBAAoB,cAAc,aAAa,eAAe;AACzH,QAAI,AAAO,SAAS,UAAU;AAC5B,iBAAW,OAAwC,uEAAuE;AAAA;AAG5H,QAAI,KAAK,IAAI;AACX,WAAK,IAAI,OAAO,KAAK;AAAA;AAGvB,QAAI,iBAAiB,aAAa,SAAS;AAC3C,SAAK,KAAK,IAAI,aAAO;AAAA,MACnB,OAAO;AAAA,QACL,MAAM,mBAAmB;AAAA,QACzB,MAAM;AAAA,QACN,YAAY;AAAA,QACZ,iBAAiB,aAAa,IAAI;AAAA,QAClC,cAAc,aAAa,IAAI;AAAA,QAC/B,aAAa;AAAA,QACb;AAAA,QACA,aAAa,aAAa,IAAI;AAAA,QAC9B,YAAY,aAAa,IAAI;AAAA,QAC7B,eAAe,aAAa,IAAI;AAAA,QAChC,eAAe,aAAa,IAAI;AAAA,QAChC,iBAAiB,eAAe,IAAI;AAAA,QACpC,gBAAgB,eAAe,IAAI,qBAAqB;AAAA,QACxD,mBAAmB,eAAe,IAAI,wBAAwB;AAAA,QAC9D,mBAAmB,eAAe,IAAI,wBAAwB;AAAA,QAC9D,MAAM,aAAa,IAAI,CAAC,aAAa;AAAA,QACrC,SAAS,2BAA2B,cAAc;AAAA,QAClD,eAAe;AAAA,QACf,OAAO;AAAA;AAAA,MAET,GAAG,aAAa,IAAI;AAAA;AAGtB,SAAK,IAAI,IAAI,KAAK;AAElB,QAAI,OAAO;AACX,SAAK,GAAG,GAAG,aAAa,WAAY;AAElC,UAAI,KAAK,YAAY;AACnB,qBAAa,KAAK;AAClB,aAAK,QAAQ;AAAA;AAGf,WAAK,aAAa;AAAA;AAEpB,SAAK,GAAG,GAAG,YAAY,WAAY;AACjC,UAAI,KAAK,YAAY;AACnB,YAAI,KAAK,OAAO;AACd,eAAK,UAAU,KAAK;AAAA;AAAA;AAIxB,WAAK,aAAa;AAAA;AAAA;AAItB,sBAAmB,UAAU,eAAe,SAAU,WAAW;AAC/D,SAAK,aAAa;AAAA;AAGpB,sBAAmB,UAAU,UAAU,WAAY;AACjD,QAAI,KAAK,KAAK;AACd,QAAI,WAAW,KAAK,GAAG;AAGvB,QAAI,kBAAkB,oBAAoB,GAAG;AAC7C,WAAO,CAAC,SAAS,QAAQ,gBAAgB,OAAO,gBAAgB,OAAO,SAAS,SAAS,gBAAgB,MAAM,gBAAgB;AAAA;AAGjI,sBAAmB,UAAU,SAAS,SAAU,GAAG,GAAG;AACpD,QAAI,KAAK,KAAK;AAEd,QAAI,IAAI;AACN,UAAI,aAAa,KAAK;AACtB,sBAAe,YAAY,KAAK,KAAK,GAAG;AACxC,UAAI,WAAW;AACf,UAAI,WAAW;AACf,UAAI,QAAQ,GAAG;AACf,UAAI,cAAc,aAAa,MAAM,eAAe;AACpD,UAAI,kBAAkB,oBAAoB;AAE1C,SAAG,IAAI,IAAI,cAAc,gBAAgB;AACzC,SAAG,IAAI,IAAI,cAAc,gBAAgB;AACzC,SAAG;AAAA;AAAA;AASP,sBAAmB,UAAU,iBAAiB,WAAY;AAExD,QAAI,SAAS,KAAK,YAAY;AAE9B,QAAI,SAAS,KAAK,YAAY;AAC9B,SAAK,OAAO,SAAS,KAAK,IAAI,YAAY,SAAS,KAAK,IAAI;AAAA;AAG9D,sBAAmB,UAAU,OAAO,WAAY;AAC9C,QAAI,KAAK,IAAI;AACX,WAAK,GAAG;AAAA;AAGV,SAAK,QAAQ;AAAA;AAGf,sBAAmB,UAAU,YAAY,SAAU,MAAM;AACvD,QAAI,KAAK,SAAS,CAAE,MAAK,cAAc,KAAK,aAAa;AACvD,UAAI,MAAM;AACR,aAAK,aAAa;AAElB,aAAK,QAAQ;AACb,aAAK,eAAe,WAAW,AAAO,KAAK,KAAK,MAAM,OAAO;AAAA,aACxD;AACL,aAAK;AAAA;AAAA;AAAA;AAKX,sBAAmB,UAAU,SAAS,WAAY;AAChD,WAAO,KAAK;AAAA;AAGd,sBAAmB,UAAU,UAAU,WAAY;AACjD,SAAK,IAAI,OAAO,KAAK;AAAA;AAGvB,SAAO;AAAA;AAGT,sBAAsB,KAAK;AACzB,SAAO,KAAK,IAAI,GAAG;AAAA;AAGrB,6BAA6B,OAAO;AAClC,MAAI,aAAa,aAAa,MAAM,cAAc;AAClD,MAAI,gBAAgB,aAAa,MAAM,iBAAiB;AACxD,MAAI,gBAAgB,aAAa,MAAM,iBAAiB;AACxD,SAAO;AAAA,IACL,MAAM,aAAa,aAAa;AAAA,IAChC,OAAO,aAAa,aAAa;AAAA,IACjC,KAAK,aAAa,aAAa;AAAA,IAC/B,QAAQ,aAAa,aAAa;AAAA;AAAA;AAItC,yBAAwB,KAAK,IAAI,KAAK,KAAK;AACzC,MAAI,KAAK;AACT,MAAI,KAAK;AACT,MAAI,KAAK,IAAI,KAAK,GAAG;AACrB,MAAI,KAAK,IAAI,KAAK,GAAG;AAAA;AAGvB,IAAO,6BAAQ;;;AC1Kf,IAAI,QAAc;AAClB,IAAI,SAAc;AAClB,IAAI,gBAA0B;AAC9B,IAAI,YAAY,IAAY,aAAK;AAAA,EAC/B,OAAO;AAAA,IACL,GAAG;AAAA,IACH,GAAG;AAAA,IACH,OAAO;AAAA,IACP,QAAQ;AAAA;AAAA;AAIZ,IAAI,cAEJ,SAAU,QAAQ;AAChB,YAAU,cAAa;AAEvB,0BAAuB;AACrB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,aAAY;AACzB,WAAO;AAAA;AAGT,eAAY,UAAU,OAAO,SAAU,SAAS,KAAK;AACnD,QAAI,YAAI,MAAM;AACZ;AAAA;AAGF,QAAI,eAAe,QAAQ,aAAa;AACxC,QAAI,aAAa,aAAa,IAAI;AAClC,SAAK,cAAc,qBAAqB;AACxC,SAAK,kBAAkB,KAAK,gBAAgB,aAAa,IAAI,2BAAmB,OAAO,IAAI,2BAAmB,IAAI,UAAU,KAAK;AAAA,MAC/H,cAAc,aAAa,IAAI,gBAAgB;AAAA;AAAA;AAInD,eAAY,UAAU,SAAS,SAAU,cAAc,SAAS,KAAK;AACnE,QAAI,YAAI,MAAM;AACZ;AAAA;AAIF,SAAK,MAAM;AACX,SAAK,gBAAgB;AACrB,SAAK,WAAW;AAChB,SAAK,OAAO;AAMZ,SAAK,qBAAqB,aAAa,IAAI;AAC3C,QAAI,iBAAiB,KAAK;AAC1B,mBAAe,OAAO;AACtB,mBAAe,aAAa,aAAa,IAAI;AAE7C,SAAK;AAEL,SAAK;AAQL,SAAK,kBAAkB,KAAK,gBAAgB,SAAS,SAAS,MAAK,KAAK,mBAAmB,OAAO,MAAM,KAAK;AAAA;AAG/G,eAAY,UAAU,sBAAsB,WAAY;AACtD,QAAI,eAAe,KAAK;AACxB,QAAI,YAAY,aAAa,IAAI;AACjC,IAAe,SAAS,eAAe,KAAK,MAAM,MAAK,SAAU,aAAa,GAAG,iBAAgB;AAE/F,UAAI,cAAc,QAAQ;AACxB,YAAI,UAAU,QAAQ,gBAAgB,GAAG;AACvC,eAAK,SAAS,GAAG;AAAA,mBACR,gBAAgB,SAAS;AAClC,eAAK,MAAM;AAAA;AAAA;AAAA,OAGd;AAAA;AAGL,eAAY,UAAU,YAAY,WAAY;AAC5C,QAAI,eAAe,KAAK;AACxB,QAAI,UAAU,KAAK;AACnB,QAAI,MAAM,KAAK;AAEf,QAAI,KAAK,UAAU,QAAQ,KAAK,UAAU,QAGvC,aAAa,IAAI,iBAAiB,QAAQ;AAC3C,UAAI,SAAS;AACb,mBAAa,KAAK;AAClB,WAAK,wBAAwB,WAAW,WAAY;AAIlD,SAAC,IAAI,gBAAgB,OAAO,gBAAgB,cAAc,SAAS,KAAK;AAAA,UACtE,GAAG,OAAO;AAAA,UACV,GAAG,OAAO;AAAA,UACV,gBAAgB,OAAO;AAAA;AAAA;AAAA;AAAA;AAuB/B,eAAY,UAAU,kBAAkB,SAAU,cAAc,SAAS,KAAK,SAAS;AACrF,QAAI,QAAQ,SAAS,KAAK,OAAO,YAAI,MAAM;AACzC;AAAA;AAGF,QAAI,kBAAiB,oBAAmB,SAAS;AAEjD,SAAK,UAAU;AAEf,QAAI,iBAAiB,QAAQ;AAC7B,QAAI,UAAU,uBAAuB,SAAS,SAAS;AAEvD,QAAI,SAAS;AACX,UAAI,OAAO,QAAQ,GAAG,kBAAkB;AACxC,WAAK,eAAe,QAAQ,GAAG;AAE/B,WAAK,SAAS;AAAA,QACZ,SAAS,KAAK,IAAI,KAAK,QAAQ;AAAA,QAC/B,SAAS,KAAK,IAAI,KAAK,SAAS;AAAA,QAChC,QAAQ,QAAQ;AAAA,QAChB,UAAU,QAAQ;AAAA,QAGlB,iBAAiB;AAAA,SAChB;AAAA,eACM,QAAQ,WAAW,QAAQ,KAAK,QAAQ,QAAQ,KAAK,MAAM;AACpE,UAAI,KAAK;AACT,SAAG,IAAI,QAAQ;AACf,SAAG,IAAI,QAAQ;AACf,SAAG;AACH,gBAAU,IAAI,gBAAgB;AAAA,QAC5B,MAAM;AAAA,QACN,QAAQ,QAAQ;AAAA;AAGlB,WAAK,SAAS;AAAA,QACZ,SAAS,QAAQ;AAAA,QACjB,SAAS,QAAQ;AAAA,QACjB,QAAQ;AAAA,SACP;AAAA,eACM,gBAAgB;AACzB,WAAK,SAAS;AAAA,QACZ,SAAS,QAAQ;AAAA,QACjB,SAAS,QAAQ;AAAA,QACjB,UAAU,QAAQ;AAAA,QAClB;AAAA,QACA,eAAe,QAAQ;AAAA,SACtB;AAAA,eACM,QAAQ,eAAe,MAAM;AACtC,UAAI,KAAK,qBAAqB,cAAc,SAAS,KAAK,UAAU;AAClE;AAAA;AAGF,UAAI,YAAY,oBAAoB,SAAS;AAC7C,UAAI,KAAK,UAAU,MAAM;AACzB,UAAI,KAAK,UAAU,MAAM;AAEzB,UAAI,MAAM,QAAQ,MAAM,MAAM;AAC5B,aAAK,SAAS;AAAA,UACZ,SAAS;AAAA,UACT,SAAS;AAAA,UACT,QAAQ,UAAU;AAAA,UAClB,UAAU,QAAQ;AAAA,UAGlB,iBAAiB;AAAA,WAChB;AAAA;AAAA,eAEI,QAAQ,KAAK,QAAQ,QAAQ,KAAK,MAAM;AAGjD,UAAI,eAAe;AAAA,QACjB,MAAM;AAAA,QACN,GAAG,QAAQ;AAAA,QACX,GAAG,QAAQ;AAAA;AAGb,WAAK,SAAS;AAAA,QACZ,SAAS,QAAQ;AAAA,QACjB,SAAS,QAAQ;AAAA,QACjB,UAAU,QAAQ;AAAA,QAClB,QAAQ,IAAI,QAAQ,UAAU,QAAQ,GAAG,QAAQ,GAAG;AAAA,SACnD;AAAA;AAAA;AAIP,eAAY,UAAU,kBAAkB,SAAU,cAAc,SAAS,KAAK,SAAS;AACrF,QAAI,iBAAiB,KAAK;AAE1B,QAAI,CAAC,KAAK,sBAAsB,KAAK,eAAe;AAClD,qBAAe,UAAU,KAAK,cAAc,IAAI;AAAA;AAGlD,SAAK,SAAS,KAAK,SAAS,KAAK,sBAAsB;AAEvD,QAAI,QAAQ,SAAS,KAAK,KAAK;AAC7B,WAAK,MAAM,oBAAmB,SAAS;AAAA;AAAA;AAO3C,eAAY,UAAU,uBAAuB,SAAU,cAAc,SAAS,KAAK,SAAS;AAC1F,QAAI,cAAc,QAAQ;AAC1B,QAAI,YAAY,QAAQ;AAExB,QAAI,mBAAmB,QAAQ,aAAa,eAAe;AAE3D,QAAI,eAAe,QAAQ,aAAa,QAAQ,oBAAoB,MAAM;AACxE;AAAA;AAGF,QAAI,cAAc,QAAQ,iBAAiB;AAE3C,QAAI,CAAC,aAAa;AAChB;AAAA;AAGF,QAAI,OAAO,YAAY;AACvB,QAAI,uBAAuB,kBAAkB,CAAC,KAAK,aAAa,YAAY,aAAc,aAAY,oBAAoB,IAAI,QAAQ,KAAK;AAE3I,QAAI,qBAAqB,IAAI,eAAe,QAAQ;AAClD;AAAA;AAGF,QAAI,eAAe;AAAA,MACjB,MAAM;AAAA,MACN;AAAA,MACA;AAAA,MACA,UAAU,QAAQ;AAAA;AAEpB,WAAO;AAAA;AAGT,eAAY,UAAU,WAAW,SAAU,GAAG,iBAAgB;AAC5D,QAAI,KAAK,EAAE;AACX,QAAI,eAAe,KAAK;AAExB,QAAI,CAAC,cAAc;AACjB;AAAA;AAIF,SAAK,SAAS,EAAE;AAChB,SAAK,SAAS,EAAE;AAChB,QAAI,iBAAiB,EAAE;AAEvB,QAAI,kBAAkB,eAAe,QAAQ;AAC3C,WAAK,iBAAiB,gBAAgB;AAAA,eAC7B,IAAI;AACb,WAAK,sBAAsB;AAC3B,UAAI;AACJ,UAAI;AACJ,0BAAoB,IAAI,SAAU,QAAQ;AAExC,YAAI,UAAU,QAAQ,aAAa,MAAM;AACvC,+BAAqB;AACrB,iBAAO;AAAA;AAIT,YAAI,UAAU,QAAQ,iBAAiB,MAAM;AAC3C,6BAAmB;AACnB,iBAAO;AAAA;AAAA,SAER;AAEH,UAAI,oBAAoB;AACtB,aAAK,uBAAuB,GAAG,oBAAoB;AAAA,iBAC1C,kBAAkB;AAC3B,aAAK,0BAA0B,GAAG,kBAAkB;AAAA,aAC/C;AACL,aAAK,MAAM;AAAA;AAAA,WAER;AACL,WAAK,sBAAsB;AAE3B,WAAK,MAAM;AAAA;AAAA;AAIf,eAAY,UAAU,cAAc,SAAU,cAAc,IAAI;AAK9D,QAAI,QAAQ,aAAa,IAAI;AAC7B,SAAK,AAAO,KAAK,IAAI;AACrB,iBAAa,KAAK;AAClB,YAAQ,IAAI,KAAK,cAAc,WAAW,IAAI,SAAS;AAAA;AAGzD,eAAY,UAAU,mBAAmB,SAAU,gBAAgB,GAAG;AACpE,QAAI,UAAU,KAAK;AACnB,QAAI,qBAAqB,KAAK;AAC9B,QAAI,QAAQ,CAAC,EAAE,SAAS,EAAE;AAC1B,QAAI,qBAAqB,kBAAkB,CAAC,EAAE,gBAAgB;AAC9D,QAAI,aAAa,KAAK;AACtB,QAAI,eAAe;AACnB,QAAI,gBAAgB,oBAAoB,WAAW;AAAA,MACjD,QAAQ;AAAA,MACR,UAAU;AAAA;AAGZ,QAAI,sBAAsB;AAC1B,QAAI,qBAAqB,IAAI;AAC7B,WAAK,gBAAgB,SAAU,cAAc;AAC3C,aAAK,aAAa,YAAY,SAAU,UAAU;AAChD,YAAI,YAAY,QAAQ,aAAa,SAAS,UAAU,QAAQ,SAAS;AACzE,YAAI,YAAY,SAAS;AAEzB,YAAI,CAAC,aAAa,aAAa,MAAM;AACnC;AAAA;AAGF,YAAI,iBAAiB,AAAsB,cAAc,WAAW,UAAU,MAAM,SAAS,SAAS,mBAAmB,SAAS;AAClI,YAAI,oBAAoB,oBAAoB,WAAW;AAAA,UACrD,QAAQ;AAAA,UACR,UAAU,CAAC,AAAO,KAAK;AAAA,UACvB,YAAY;AAAA,UACZ,QAAQ;AAAA;AAEV,sBAAc,OAAO,KAAK;AAC1B,QAAO,KAAK,SAAS,mBAAmB,SAAU,SAAS;AACzD,cAAI,SAAS,QAAQ,iBAAiB,QAAQ;AAC9C,cAAI,YAAY,QAAQ;AACxB,cAAI,WAAW,OAAO,cAAc;AAEpC,cAAI,SAAS,YAAY,GAAG;AAC1B;AAAA;AAGF,mBAAS,UAAU,SAAS;AAC5B,mBAAS,YAAY,SAAS;AAC9B,mBAAS,WAAW,SAAS;AAC7B,mBAAS,SAAS,SAAS;AAC3B,mBAAS,YAAY,AAAW,gBAAgB,UAAU,MAAM;AAAA,YAC9D,OAAO;AAAA;AAET,mBAAS,iBAAiB;AAG1B,mBAAS,SAAS,mBAAmB,kBAAkB,QAAQ,AAAW,qBAAqB,SAAS,QAAQ;AAChH,cAAI,sBAAsB,6BAA6B,OAAO,cAAc,WAAW,MAAM;AAE7F,cAAI,oBAAoB,gBAAgB;AACtC,8BAAkB,OAAO,KAAK,oBAAoB;AAAA;AAGpD,cAAI,oBAAoB,YAAY;AAClC,gCAAoB,KAAK,oBAAoB;AAAA;AAG/C,uBAAa,KAAK;AAAA;AAAA;AAAA;AAMxB,kBAAc,OAAO;AACrB,wBAAoB;AACpB,QAAI,eAAe,EAAE;AACrB,QAAI,YAAY,mBAAmB,IAAI;AACvC,QAAI,kBAAkB,mBAAmB,eAAe,oBAAoB,YAAY,WAAW,QAAQ,IAAI,WAAW,mBAAmB,IAAI;AACjJ,uBAAmB,oBAAoB,QAAQ;AAC/C,QAAI,aAAa,eAAe,aAAa,SAAS;AACtD,QAAI,gBAAgB,oBAAoB,KAAK;AAE7C,SAAK,YAAY,oBAAoB,WAAY;AAC/C,UAAI,KAAK,+BAA+B,gBAAgB,eAAe;AACrE,aAAK,gBAAgB,oBAAoB,cAAc,MAAM,IAAI,MAAM,IAAI,KAAK,iBAAiB;AAAA,aAC5F;AACL,aAAK,oBAAoB,oBAAoB,eAAe,cAAc,KAAK,WAAW,IAAI,MAAM,IAAI,MAAM,IAAI,cAAc,MAAM;AAAA;AAAA;AAAA;AAO5I,eAAY,UAAU,yBAAyB,SAAU,GAAG,YAAY,iBAAgB;AACtF,QAAI,UAAU,KAAK;AACnB,QAAI,SAAS,UAAU;AAIvB,QAAI,cAAc,OAAO;AACzB,QAAI,cAAc,QAAQ,iBAAiB;AAE3C,QAAI,YAAY,OAAO,aAAa;AACpC,QAAI,YAAY,OAAO;AACvB,QAAI,WAAW,OAAO;AACtB,QAAI,OAAO,UAAU,QAAQ;AAC7B,QAAI,aAAa,KAAK;AACtB,QAAI,kBAAkB,EAAE;AACxB,QAAI,eAAe,kBAAkB,CAAC,KAAK,aAAa,YAAY,WAAW,eAAgB,aAAY,oBAAoB,IAAI,QAAQ,KAAK,eAAe,kBAAkB;AAAA,MAC/K,UAAU;AAAA,QACR;AACJ,QAAI,iBAAiB,aAAa,IAAI;AAEtC,QAAI,kBAAkB,QAAQ,mBAAmB,QAAQ;AACvD;AAAA;AAGF,QAAI,SAAS,UAAU,cAAc,WAAW;AAChD,QAAI,qBAAqB,IAAI;AAG7B,WAAO,SAAS,mBAAmB,kBAAkB,QAAQ,AAAW,qBAAqB,OAAO,QAAQ;AAC5G,QAAI,sBAAsB,6BAA6B,UAAU,cAAc,WAAW,OAAO;AACjG,QAAI,YAAY,aAAa,IAAI;AACjC,QAAI,aAAa,oBAAoB,iBAAiB,mBAAmB,oBAAoB,gBAAgB,oBAAoB,YAAY,WAAW,QAAQ,IAAI,WAAW,aAAa,IAAI,gBAAgB,oBAAoB;AACpO,QAAI,cAAc,UAAU,UAAU,OAAO,MAAM;AAEnD,SAAK,YAAY,cAAc,WAAY;AACzC,WAAK,oBAAoB,cAAc,YAAY,QAAQ,aAAa,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ;AAAA;AAKtH,oBAAe;AAAA,MACb,MAAM;AAAA,MACN,iBAAiB;AAAA,MACjB,WAAW,KAAK,YAAY;AAAA,MAC5B;AAAA,MACA,MAAM,KAAK;AAAA;AAAA;AAIf,eAAY,UAAU,4BAA4B,SAAU,GAAG,IAAI,iBAAgB;AACjF,QAAI,SAAS,UAAU;AACvB,QAAI,gBAAgB,OAAO;AAC3B,QAAI,aAAa,cAAc,UAAU;AAEzC,QAAI,AAAO,SAAS,aAAa;AAC/B,UAAI,UAAU;AACd,mBAAa;AAAA,QACX;AAAA,QAEA,WAAW;AAAA;AAAA;AAIf,QAAI,sBAAsB,CAAC;AAE3B,QAAI,OAAO,KAAK,SAAS,aAAa,OAAO,mBAAmB,OAAO;AAEvE,QAAI,MAAM;AACR,0BAAoB,KAAK;AAAA;AAM3B,wBAAoB,KAAK;AAAA,MACvB,WAAW,WAAW;AAAA;AAExB,QAAI,kBAAkB,EAAE;AACxB,QAAI,kBAAkB,kBAAkB,qBAAqB,KAAK,eAAe,kBAAkB;AAAA,MACjG,UAAU;AAAA,QACR;AACJ,QAAI,cAAc,gBAAgB,IAAI;AACtC,QAAI,cAAc,KAAK,WAAW;AAElC,QAAI,qBAAqB,IAAI;AAI7B,SAAK,YAAY,iBAAiB,WAAY;AAG5C,UAAI,kBAAkB,AAAO,MAAM,gBAAgB,IAAI,sBAAsB;AAE7E,WAAK,oBAAoB,iBAAiB,aAAa,iBAAiB,aAAa,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,IAAI;AAAA;AAI7H,oBAAe;AAAA,MACb,MAAM;AAAA,MACN,MAAM,KAAK;AAAA;AAAA;AAIf,eAAY,UAAU,sBAAsB,SAE5C,cAAc,aAAa,QAAQ,aAAa,GAAG,GAAG,cAAc,IAAI,oBAAoB;AAE1F,SAAK,UAAU;AAEf,QAAI,CAAC,aAAa,IAAI,kBAAkB,CAAC,aAAa,IAAI,SAAS;AACjE;AAAA;AAGF,QAAI,iBAAiB,KAAK;AAC1B,QAAI,YAAY,aAAa,IAAI;AACjC,mBAAe,gBAAgB,aAAa,IAAI;AAChD,QAAI,OAAO;AAEX,QAAI,YAAY,KAAK,iBAAiB,CAAC,GAAG,IAAI,QAAQ,aAAa,IAAI,YAAY,aAAa,IAAI;AAEpG,QAAI,iBAAiB,UAAU;AAE/B,QAAI,WAAW;AACb,UAAI,AAAO,SAAS,YAAY;AAC9B,YAAI,SAAS,aAAa,QAAQ,IAAI;AACtC,YAAI,UAAU,AAAO,QAAQ,UAAU,OAAO,KAAK;AACnD,YAAI,aAAa,WAAW,QAAQ,YAAY,QAAQ,SAAS,QAAQ,WAAW;AACpF,eAAO;AAEP,YAAI,YAAY;AACd,iBAAO,OAAW,QAAQ,WAAW,MAAM;AAAA;AAG7C,eAAO,AAAW,UAAU,MAAM,QAAQ;AAAA,iBACjC,AAAO,WAAW,YAAY;AACvC,YAAI,WAAW,MAAK,SAAU,UAAU,OAAM;AAC5C,cAAI,aAAa,KAAK,SAAS;AAC7B,2BAAe,WAAW,OAAM,oBAAoB,cAAc,gBAAgB;AAElF,iBAAK,gBAAgB,cAAc,cAAc,GAAG,GAAG,gBAAgB,QAAQ;AAAA;AAAA,WAEhF;AACH,aAAK,UAAU;AACf,eAAO,UAAU,QAAQ,aAAa;AAAA,aACjC;AACL,eAAO;AAAA;AAAA;AAIX,mBAAe,WAAW,MAAM,oBAAoB,cAAc,gBAAgB;AAClF,mBAAe,KAAK,cAAc;AAElC,SAAK,gBAAgB,cAAc,cAAc,GAAG,GAAG,gBAAgB,QAAQ;AAAA;AAGjF,eAAY,UAAU,mBAAmB,SAAU,OAAO,mBAAmB,UAAS,aAAa;AACjG,QAAI,aAAY,UAAU,AAAO,QAAQ,oBAAoB;AAC3D,aAAO;AAAA,QACL,OAAO,eAAgB,MAAK,gBAAgB,SAAS,SAAS;AAAA;AAAA;AAIlE,QAAI,CAAC,AAAO,QAAQ,oBAAoB;AACtC,aAAO;AAAA,QACL,OAAO,eAAe,kBAAkB,SAAS,kBAAkB;AAAA;AAAA;AAAA;AAKzE,eAAY,UAAU,oBAAoB,SAAU,cAAc,cAAc,GAChF,GACA,SAAS,QAAQ,IAAI;AACnB,QAAI,YAAY,KAAK,KAAK;AAE1B,QAAI,aAAa,KAAK,KAAK;AAE3B,mBAAe,gBAAgB,aAAa,IAAI;AAChD,QAAI,cAAc,QAAQ;AAC1B,QAAI,QAAQ,aAAa,IAAI;AAC7B,QAAI,SAAS,aAAa,IAAI;AAC9B,QAAI,OAAO,MAAM,GAAG,kBAAkB;AACtC,UAAM,KAAK,eAAe,GAAG;AAE7B,QAAI,AAAO,WAAW,eAAe;AAEnC,qBAAe,aAAa,CAAC,GAAG,IAAI,QAAQ,QAAQ,IAAI,MAAM;AAAA,QAC5D,UAAU,CAAC,WAAW;AAAA,QACtB,aAAa,YAAY;AAAA;AAAA;AAI7B,QAAI,AAAO,QAAQ,eAAe;AAChC,UAAI,cAAa,aAAa,IAAI;AAClC,UAAI,cAAa,aAAa,IAAI;AAAA,eACzB,AAAO,SAAS,eAAe;AACxC,UAAI,oBAAoB;AACxB,wBAAkB,QAAQ,YAAY;AACtC,wBAAkB,SAAS,YAAY;AACvC,UAAI,aAAa,AAAW,cAAc,mBAAmB;AAAA,QAC3D,OAAO;AAAA,QACP,QAAQ;AAAA;AAEV,UAAI,WAAW;AACf,UAAI,WAAW;AACf,cAAQ;AAGR,eAAS;AAAA,eAEF,AAAO,SAAS,iBAAiB,IAAI;AAC1C,UAAI,MAAM,oBAAoB,cAAc,MAAM,aAAa,aAAa,IAAI;AAChF,UAAI,IAAI;AACR,UAAI,IAAI;AAAA,WACH;AACL,UAAI,MAAM,qBAAqB,GAAG,GAAG,SAAS,WAAW,YAAY,QAAQ,OAAO,IAAI,SAAS,OAAO;AACxG,UAAI,IAAI;AACR,UAAI,IAAI;AAAA;AAGZ,aAAU,MAAK,cAAc,SAAS,YAAY,KAAK,IAAI,UAAU,UAAU,YAAY,KAAK;AAChG,cAAW,MAAK,cAAc,UAAU,YAAY,KAAK,IAAI,WAAW,WAAW,YAAY,KAAK;AAEpG,QAAI,qBAAqB,eAAe;AACtC,UAAI,MAAM,uBAAuB,GAAG,GAAG,SAAS,WAAW;AAC3D,UAAI,IAAI;AACR,UAAI,IAAI;AAAA;AAGV,YAAQ,OAAO,GAAG;AAAA;AAKpB,eAAY,UAAU,iCAAiC,SAAU,gBAAgB,cAAc;AAC7F,QAAI,eAAe,KAAK;AACxB,QAAI,mBAAmB,KAAK;AAC5B,QAAI,oBAAoB,CAAC,CAAC,gBAAgB,aAAa,WAAW,eAAe;AACjF,yBAAqB,OAAK,cAAc,SAAU,kBAAkB,eAAe;AACjF,UAAI,iBAAiB,iBAAiB,cAAc;AACpD,UAAI,mBAAmB,eAAe,kBAAkB;AACxD,UAAI,iBAAiB,iBAAiB,cAAc;AACpD,0BAAoB,qBAAqB,eAAe,WAAW,eAAe;AAClF,2BAAqB,OAAK,gBAAgB,SAAU,UAAU,WAAW;AACvE,YAAI,WAAW,eAAe,cAAc;AAC5C,YAAI,cAAc,SAAS,qBAAqB;AAChD,YAAI,aAAa,SAAS,qBAAqB;AAC/C,4BAAoB,qBAAqB,SAAS,UAAU,SAAS,SAAS,SAAS,aAAa,SAAS,YAAY,SAAS,WAAW,SAAS,UAAU,YAAY,WAAW,WAAW;AAClM,6BAAqB,OAAK,aAAa,SAAU,aAAa,GAAG;AAC/D,cAAI,aAAa,WAAW;AAC5B,8BAAoB,qBAAqB,YAAY,gBAAgB,WAAW,eAAe,YAAY,cAAc,WAAW;AAAA;AAGtI,4BAAoB,AAAO,KAAK,SAAS,mBAAmB,SAAU,SAAS;AAC7E,cAAI,YAAY,QAAQ;AACxB,cAAI,WAAW,aAAa;AAC5B,cAAI,eAAe,iBAAiB;AAEpC,cAAI,YAAY,gBAAgB,aAAa,SAAS,SAAS,MAAM;AACnE,gCAAoB;AAAA;AAAA;AAAA;AAAA;AAK5B,SAAK,sBAAsB;AAC3B,SAAK,gBAAgB;AACrB,WAAO,CAAC,CAAC;AAAA;AAGX,eAAY,UAAU,QAAQ,SAAU,iBAAgB;AAKtD,SAAK,sBAAsB;AAC3B,oBAAe;AAAA,MACb,MAAM;AAAA,MACN,MAAM,KAAK;AAAA;AAAA;AAIf,eAAY,UAAU,UAAU,SAAU,SAAS,KAAK;AACtD,QAAI,YAAI,MAAM;AACZ;AAAA;AAGF,SAAK,gBAAgB;AAErB,IAAe,WAAW,eAAe;AAAA;AAG3C,eAAY,OAAO;AACnB,SAAO;AAAA,EACP;AAMF,2BAA2B,cAAc,oBAAoB,sBAAsB;AAEjF,MAAI,UAAU,mBAAmB;AACjC,MAAI;AAEJ,MAAI,sBAAsB;AACxB,kBAAc,IAAI,cAAM,sBAAsB,SAAS;AACvD,kBAAc,IAAI,cAAM,mBAAmB,QAAQ,aAAa;AAAA,SAC3D;AACL,kBAAc;AAAA;AAGhB,WAAS,IAAI,aAAa,SAAS,GAAG,KAAK,GAAG,KAAK;AACjD,QAAI,aAAa,aAAa;AAE9B,QAAI,YAAY;AACd,UAAI,sBAAsB,eAAO;AAC/B,qBAAa,WAAW,IAAI,WAAW;AAAA;AAQzC,UAAI,AAAO,SAAS,aAAa;AAC/B,qBAAa;AAAA,UACX,WAAW;AAAA;AAAA;AAIf,UAAI,YAAY;AACd,sBAAc,IAAI,cAAM,YAAY,aAAa;AAAA;AAAA;AAAA;AAKvD,SAAO;AAAA;AAGT,6BAA4B,SAAS,KAAK;AACxC,SAAO,QAAQ,kBAAkB,AAAO,KAAK,IAAI,gBAAgB;AAAA;AAGnE,8BAA8B,GAAG,GAAG,SAAS,WAAW,YAAY,MAAM,MAAM;AAC9E,MAAI,OAAO,QAAQ;AACnB,MAAI,QAAQ,KAAK;AACjB,MAAI,SAAS,KAAK;AAElB,MAAI,QAAQ,MAAM;AAKhB,QAAI,IAAI,QAAQ,OAAO,IAAI,WAAW;AACpC,WAAK,QAAQ;AAAA,WACR;AACL,WAAK;AAAA;AAAA;AAIT,MAAI,QAAQ,MAAM;AAChB,QAAI,IAAI,SAAS,OAAO,YAAY;AAClC,WAAK,SAAS;AAAA,WACT;AACL,WAAK;AAAA;AAAA;AAIT,SAAO,CAAC,GAAG;AAAA;AAGb,gCAAgC,GAAG,GAAG,SAAS,WAAW,YAAY;AACpE,MAAI,OAAO,QAAQ;AACnB,MAAI,QAAQ,KAAK;AACjB,MAAI,SAAS,KAAK;AAClB,MAAI,KAAK,IAAI,IAAI,OAAO,aAAa;AACrC,MAAI,KAAK,IAAI,IAAI,QAAQ,cAAc;AACvC,MAAI,KAAK,IAAI,GAAG;AAChB,MAAI,KAAK,IAAI,GAAG;AAChB,SAAO,CAAC,GAAG;AAAA;AAGb,6BAA6B,WAAU,MAAM,aAAa,aAAa;AACrE,MAAI,WAAW,YAAY;AAC3B,MAAI,YAAY,YAAY;AAC5B,MAAI,SAAS,KAAK,KAAK,KAAK,QAAQ,eAAe;AACnD,MAAI,IAAI;AACR,MAAI,IAAI;AACR,MAAI,YAAY,KAAK;AACrB,MAAI,aAAa,KAAK;AAEtB,UAAQ;AAAA,SACD;AACH,UAAI,KAAK,IAAI,YAAY,IAAI,WAAW;AACxC,UAAI,KAAK,IAAI,aAAa,IAAI,YAAY;AAC1C;AAAA,SAEG;AACH,UAAI,KAAK,IAAI,YAAY,IAAI,WAAW;AACxC,UAAI,KAAK,IAAI,YAAY;AACzB;AAAA,SAEG;AACH,UAAI,KAAK,IAAI,YAAY,IAAI,WAAW;AACxC,UAAI,KAAK,IAAI,aAAa;AAC1B;AAAA,SAEG;AACH,UAAI,KAAK,IAAI,WAAW;AACxB,UAAI,KAAK,IAAI,aAAa,IAAI,YAAY;AAC1C;AAAA,SAEG;AACH,UAAI,KAAK,IAAI,YAAY;AACzB,UAAI,KAAK,IAAI,aAAa,IAAI,YAAY;AAAA;AAG9C,SAAO,CAAC,GAAG;AAAA;AAGb,uBAAuB,OAAO;AAC5B,SAAO,UAAU,YAAY,UAAU;AAAA;AAezC,gCAAgC,SAAS,SAAS,KAAK;AACrD,MAAI,iBAAiB,eAAe,SAAS;AAC7C,MAAI,oBAAoB,eAAe,OAAO;AAE9C,MAAI,CAAC,qBAAqB,sBAAsB,UAAU;AACxD;AAAA;AAGF,MAAI,cAAc,yBAAyB,SAAS,mBAAmB,eAAe,IAAI,oBAAoB;AAAA,IAC5G,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,YAAY;AAAA;AAEd,MAAI,QAAQ,YAAY,OAAO;AAE/B,MAAI,CAAC,OAAO;AACV;AAAA;AAGF,MAAI,OAAO,IAAI,wBAAwB;AACvC,MAAI;AACJ,OAAK,MAAM,SAAS,SAAU,OAAO;AACnC,QAAI,gBAAgB,UAAU,OAAO;AAErC,QAAI,iBAAiB,cAAc,SAAS,QAAQ,MAAM;AACxD,WAAK;AACL,aAAO;AAAA;AAAA;AAIX,MAAI,IAAI;AACN,WAAO;AAAA,MACL;AAAA,MACA,gBAAgB,MAAM;AAAA,MACtB;AAAA;AAAA;AAAA;AAKN,IAAO,sBAAQ;;;ACr4BR,mBAAiB,WAAW;AACjC,MAAI;AACJ,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAUhC,YAAU,eAAe;AAAA,IACvB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,KAEV,WAAY;AAAA;AACZ,YAAU,eAAe;AAAA,IACvB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,KAEV,WAAY;AAAA;AAAA;;;AC1Bd,IAAI,uBAAuB,CAAC,QAAQ,WAAW,QAAQ;AACxC,2BAA2B,QAAQ,OAAO;AACvD,MAAI,kBAAkB,iBAAiB,SAAS,OAAO,QAAQ;AAE/D,MAAI,CAAC,gBAAgB,QAAQ;AAC3B;AAAA;AAGF,MAAI,8BAA8B;AAClC,EAAO,KAAK,iBAAiB,SAAU,UAAU;AAC/C,QAAI,MAAM,SAAS,eAAe,aAAa,SAAS,UAAU;AAElE,QAAI,eAAe,OAAO;AACxB,oCAA8B,4BAA4B,OAAO;AAAA;AAAA;AAGrE,MAAI,UAAU,UAAU,OAAO;AAE/B,MAAI,AAAO,QAAQ,UAAU;AAC3B,cAAU,QAAQ;AAAA;AAGpB,MAAI,CAAC,SAAS;AACZ,cAAU;AAAA,MACR,SAAS;AAAA;AAEX,WAAO,UAAU,CAAC;AAAA;AAGpB,MAAI,iBAAiB,QAAQ,WAAY,SAAQ,UAAU;AAC3D,MAAI,eAAe,eAAe,SAAU,gBAAe,QAAQ;AACnE,MAAI,aAAa,aAAa,QAAS,cAAa,OAAO;AAC3D,aAAW,KAAK,MAAM,YAAY;AAClC,kBAAgB;AAEhB,MAAI,SAAS,CAAC,WAAW,QAAQ;AAC/B,eAAW,KAAK,MAAM,YAAY;AAAA;AAAA;AAItC,yBAAyB,KAAK;AAC5B,MAAI,OAAM;AACV,EAAO,KAAK,KAAK,SAAU,KAAK;AAC9B,SAAI,OAAO;AAAA;AAEb,MAAI,SAAS;AACb,EAAO,KAAK,MAAK,SAAU,MAAM,KAAK;AACpC,QAAI,KAAK;AAAA;AAAA;;;AC1Cb,IAAI,SAAc;AAElB,iBAAiB,KAAK;AACpB,MAAI,KAAK;AACP,aAAS,UAAU,KAAK;AACtB,UAAI,IAAI,eAAe,SAAS;AAC9B,eAAO;AAAA;AAAA;AAAA;AAAA;AAMR,8BAA8B,QAAQ,WAAW,wBAAwB;AAC9E,MAAI,iBAAiB;AACrB,SAAK,WAAW,SAAU,OAAO;AAC/B,QAAI,WAAW,eAAe,SAAS;AACvC,WAAK,OAAO,QAAQ,SAAU,YAAY,YAAY;AACpD,UAAI,CAAC,sBAAc,YAAY,aAAa;AAC1C;AAAA;AAGF,UAAI,gBAAgB;AAAA,QAClB,MAAM;AAAA,QACN,QAAQ;AAAA;AAEV,gCAA0B,uBAAuB,eAAe;AAChE,eAAS,cAAc,IAAI,sBAAc;AAGzC,UAAI,eAAe,WAAW;AAC5B,wBAAgB,AAAO,MAAM;AAC7B,sBAAc,OAAO;AACrB,iBAAS,SAAS,oBAAoB,IAAI,sBAAc;AAAA;AAAA;AAAA;AAI9D,SAAO;AAEP,4BAA0B;AACxB,QAAI,UAAU,WAAY;AAAA;AAI1B,YAAQ,UAAU,WAAW,QAAQ;AACrC,QAAI,MAAM,IAAI;AACd,WAAO;AAAA;AAAA;AAGJ,6BAA6B,YAAY,WAAW,OAAM;AAK/D,MAAI;AACJ,EAAO,KAAK,OAAM,SAAU,KAAK;AAC/B,QAAI,UAAU,eAAe,QAAQ,QAAQ,UAAU,OAAO;AAC5D,aAAM;AAAA;AAAA;AAGV,UAAO,AAAO,KAAK,OAAM,SAAU,KAAK;AACtC,QAAI,UAAU,eAAe,QAAQ,QAAQ,UAAU,OAAO;AAC5D,iBAAW,OAAO,AAAO,MAAM,UAAU;AAAA,WACpC;AACL,aAAO,WAAW;AAAA;AAAA;AAAA;AAcjB,qBAAqB,WAAW,gBAAgB,MAAM,eAAe,OAAO,WAAW;AAC5F,MAAI,iBAAiB;AACrB,EAAO,KAAK,WAAW,SAAU,OAAO;AACtC,QAAI,cAAc,sBAAc,mBAAmB,eAAe;AAClE,mBAAe,SAAS;AAAA;AAE1B,MAAI;AAEJ,qBAAmB,KAAK;AACtB,WAAO,sBAAsB,MAAM,WAAW;AAAA;AAGhD,qBAAmB,KAAK,OAAO;AAC7B,0BAAsB,MAAM,WAAW,KAAK;AAAA;AAG9C,MAAI,aAAa,MAAM;AACrB,SAAK,KAAK;AAAA,SACL;AACL,SAAK,KAAK,CAAC,YAAY;AAAA;AAGzB,oBAAkB,cAAc,OAAO;AACrC,gBAAY,aAAa,OAAO,eAC9B;AACF,QAAI,cAAc,KAAK,eAAe;AAGtC,QAAI,eAAe,YAAY,cAAc,OAAO;AAClD;AAAA;AAGF,QAAI,aAAa,cAAc,KAAK,OAAO;AAC3C,QAAI,WAAW,eAAe;AAC9B,QAAI,cAAc,eAAe;AAEjC,aAAS,IAAI,GAAG,OAAM,YAAY,QAAQ,IAAI,MAAK,KAAK;AACtD,UAAI,OAAO,YAAY;AACvB,eAAS,SAAS,SAAS,MAAM,YAAY,cAAc,WAAW;AAAA;AAAA;AAAA;AAYrE,gCAAgC,WAAW,gBAAgB,eAAe,KAAK;AACpF,MAAI,iBAAiB;AACrB,EAAO,KAAK,WAAW,SAAU,OAAO;AACtC,QAAI,cAAc,sBAAc,mBAAmB,eAAe;AAClE,mBAAe,SAAS;AAAA;AAE1B,SAAO;AAAA,IACL,UAAU,kBAAkB,QAAQ,MAAM;AACxC,UAAI;AAEJ,UAAI,OAAO,MAAM;AACf,mBAAW,KAAK,kBAAkB;AAAA;AAGpC,yBAAmB,KAAK;AACtB,eAAO,sBAAsB,MAAM,WAAW;AAAA;AAGhD,yBAAmB,KAAK,QAAO;AAC7B,8BAAsB,MAAM,WAAW,KAAK;AAAA;AAG9C,UAAI;AACJ,UAAI,QAAQ,KAAK;AAEjB,aAAQ,aAAY,OAAO,WAAW,MAAM;AAC1C,YAAI,cAAc,KAAK,eAAe;AAGtC,YAAI,eAAe,YAAY,cAAc,OAAO;AAClD;AAAA;AAGF,YAAI,QAAQ,OAAO,OAAO,MAAM,IAAI,UAAU,aAAa;AAC3D,YAAI,aAAa,cAAc;AAC/B,YAAI,WAAW,eAAe;AAC9B,YAAI,cAAc,eAAe;AAEjC,iBAAS,IAAI,GAAG,OAAM,YAAY,QAAQ,IAAI,MAAK,KAAK;AACtD,cAAI,OAAO,YAAY;AACvB,mBAAS,SAAS,SAAS,MAAM,YAAY,OAAO,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;;;AC3KlE,0CAA0C,MAAM;AACrD,MAAI,YAAY,KAAK;AAErB,MAAI,YAAY;AAAA,IACd,OAAO,SAAU,YAAY;AAC3B,aAAO,SAAS,WAAW,MAAM,YAAY,WAAW;AAAA;AAAA,IAE1D,MAAM,SAAU,YAAY;AAC1B,aAAO,SAAS,WAAW,KAAK,YAAY,WAAW;AAAA;AAAA;AAG3D,SAAO;AAAA;AAET,IAAI,WAAW;AAAA,EACb,OAAO,iBAAiB;AAAA,EACxB,OAAO,iBAAiB;AAAA,EACxB,MAAM;AAAA,IACJ,OAAO,SAAU,YAAY,WAAW,MAAM;AAC5C,aAAO,cAAc,KAAK,aAAa,QAAQ,WAAW,IAAI,WAAW;AAAA;AAAA,IAE3E,MAAM,SAAU,YAAY,WAAW,MAAM;AAC3C,aAAO,cAAc,KAAK,aAAa,UAAU;AAAA;AAAA;AAAA,EAGrD,SAAS;AAAA,IACP,OAAO,SAAU,YAAY,WAAW,MAAM;AAC5C,aAAO,cAAc,KAAK,aAAa,QAAQ,WAAW,IAAI,WAAW,OAAO,AAAe,QAAQ,KAAK,OAAO,WAAW,IAAI,WAAW;AAAA;AAAA,IAE/I,MAAM,SAAU,YAAY,WAAW,MAAM;AAC3C,UAAI,SAAS,KAAK;AAElB,UAAI,CAAC,cAAc,OAAO,UAAU,GAAG;AACrC,eAAO;AAAA;AAGT,UAAI,IAAI,WAAW;AACnB,UAAI,IAAI,WAAW;AACnB,UAAI,QAAQ,WAAW;AACvB,UAAI,SAAS,WAAW;AACxB,UAAI,IAAI,OAAO;AAEf,UAAI,AAAe,QAAQ,QAAQ,GAAG,MAAM,AAAe,QAAQ,QAAQ,IAAI,OAAO,MAAM,AAAe,QAAQ,QAAQ,GAAG,IAAI,WAAW,AAAe,QAAQ,QAAQ,IAAI,OAAO,IAAI,WAAW,qBAAa,OAAO,YAAY,QAAQ,EAAE,IAAI,EAAE,OAAO,qBAAqB,GAAG,GAAG,IAAI,OAAO,GAAG,WAAW,qBAAqB,GAAG,GAAG,GAAG,IAAI,QAAQ,WAAW,qBAAqB,IAAI,OAAO,GAAG,IAAI,OAAO,IAAI,QAAQ,WAAW,qBAAqB,GAAG,IAAI,QAAQ,IAAI,OAAO,IAAI,QAAQ,SAAS;AAC7e,eAAO;AAAA;AAAA;AAAA;AAAA;AAMf,0BAA0B,SAAS;AACjC,MAAI,KAAK,CAAC,KAAK;AACf,MAAI,KAAK,CAAC,SAAS;AACnB,SAAO;AAAA,IACL,OAAO,SAAU,YAAY,WAAW,MAAM;AAC5C,UAAI,YAAY;AACd,YAAI,QAAQ,KAAK;AACjB,YAAI,IAAI,WAAW;AACnB,eAAO,YAAY,GAAG;AAAA;AAAA;AAAA,IAG1B,MAAM,SAAU,YAAY,WAAW,MAAM;AAC3C,UAAI,YAAY;AACd,YAAI,QAAQ,KAAK;AACjB,YAAI,cAAc,CAAC,WAAW,GAAG,WAAW,WAAW,GAAG,YAAY,WAAW,GAAG;AACpF,oBAAY,KAAK,YAAY,MAAM,YAAY;AAC/C,eAAO,YAAY,YAAY,IAAI,UAAU,YAAY,YAAY,IAAI,UAAU,YAAY,MAAM,IAAI,gBAAgB,YAAY,MAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAMvJ,qBAAqB,GAAG,OAAO;AAC7B,SAAO,MAAM,MAAM,KAAK,KAAK,MAAM;AAAA;;;ACpErC,IAAI,aAAa,CAAC,WAAW;AAC7B,IAAI,kBAAkB;AACtB,IAAI,gBAAgB;AAEb,sBAAsB,SAAS;AACpC,UAAQ,cAAc;AAAA,IACpB,UAAU;AAAA,KACT,SAAU,YAAY;AACvB,QAAI,qBAAqB,WAAW,qBAAqB,IAAI,2BAAmB,WAAW,QAAQ;AACnG,uBAAmB,eAAe,WAAW,OAAO;AAAA;AAAA;AAOzC,qBAAqB,SAAS,KAAK,SAAS;AACzD,MAAI,gBAAgB;AACpB,MAAI;AACJ,MAAI;AACJ,UAAQ,cAAc;AAAA,IACpB,UAAU;AAAA,KACT,SAAU,YAAY;AACvB,eAAW,QAAQ,SAAS,sBAAsB,WAAW,eAAe,QAAQ,QAAQ,UAAU,QAAQ,cAAc;AAAA,MAC1H,WAAW;AAAA;AAAA;AAGf,eAAa;AACb,UAAQ,cAAc;AAAA,IACpB,UAAU;AAAA,KACT,SAAU,YAAY,YAAY;AACnC,QAAI,oBAAoB;AAAA,MACtB,SAAS,WAAW;AAAA,MACpB;AAAA,MACA,WAAW,WAAW;AAAA,MACtB,OAAO,AAAO,MAAM,WAAW;AAAA,MAC/B,UAAU;AAAA;AAIZ,kBAAc,KAAK;AACnB,QAAI,cAAc,WAAW;AAC7B,QAAI,YAAY,YAAY;AAC5B,QAAI,kBAAkB;AACtB,QAAI,2BAA2B;AAC/B,QAAI,oBAAoB;AACxB,QAAI,iBAAiB;AAErB,QAAI,CAAC,YAAY;AAEf,qBAAe,YAAY;AAC3B,sBAAgB,YAAY;AAAA;AAI9B,QAAI,QAAQ,AAAO,IAAI,WAAW,OAAO,SAAU,MAAM;AACvD,UAAI,UAAU,qBAAqB,KAAK;AACxC,UAAI,iBAAiB,AAAO,SAAS;AAAA,QACnC,cAAc,UAAU,QAAQ,QAAQ;AAAA,SACvC;AACH,qBAAe,YAAY,iCAAiC;AAC5D,aAAO;AAAA;AAET,QAAI,iBAAiB,AAAe,qBAAqB,WAAW,QAAQ,YAAY,SAAU,eAAe;AAC/G,oBAAc,gBAAgB;AAAA;AAEhC,IAAO,QAAQ,cAAc,AAAO,KAAK,WAAW,SAAU,aAAa;AACzE,sBAAgB,eAAe;AAAA;AAGjC,wBAAoB,aAAa;AAC/B,aAAO,cAAc,SAAS,CAAC,CAAC,gBAAgB;AAAA;AAKlD,qBAAiB,eAAe;AAC9B,aAAO,CAAC,CAAC,cAAc;AAAA;AAiBzB,YAAQ,WAAW,SAAU,aAAa,aAAa;AACrD,UAAI,gBAAgB,kBAAkB,eAAe;AACrD,kBAAY,YAAY,aAAa,cAAc,aAAa,eAAe,YAAY,aAAa,aAAa;AAAA;AAGvH,2BAAuB,aAAa,aAAa;AAC/C,UAAI,WAAW,YAAY;AAC3B,uBAAiB,kBAAkB,SAAS;AAC5C,iBAAW,gBAAgB,SAAS,gBAAgB,YAAY,WAAW,SAAU,aAAa,WAAW;AAC3G,wBAAgB,YAAa,0BAAyB,aAAa;AAAA;AAAA;AAIvE,yBAAqB,aAAa,aAAa,eAAe;AAC5D,UAAI,CAAC,YAAY,iBAAiB,sBAAsB,YAAY,cAAc;AAChF;AAAA;AAGF,MAAO,KAAK,OAAO,SAAU,MAAM;AACjC,YAAI,WAAW,mBAAmB,cAAc,MAAM,aAAa,UAAU;AAC3E,wBAAc,KAAK;AAAA;AAGrB,yBAAiB,kBAAkB,QAAQ;AAAA;AAG7C,UAAI,WAAW,gBAAgB,QAAQ,gBAAgB;AACrD,YAAI,SAAS,YAAY;AACzB,eAAO,KAAK,SAAU,WAAW;AAC/B,cAAI,aAAa,aAAa,eAAe,QAAQ,YAAY;AAC/D,qCAAyB,aAAa;AAAA;AAAA;AAAA;AAAA;AAO9C,YAAQ,WAAW,SAAU,aAAa,aAAa;AACrD,UAAI,sBAAsB;AAAA,QACxB,UAAU,YAAY;AAAA,QACtB;AAAA,QACA,YAAY,YAAY;AAAA,QACxB,WAAW;AAAA;AAIb,wBAAkB,SAAS,KAAK;AAChC,UAAI,gBAAgB,kBAAkB;AACtC,UAAI,OAAO,YAAY;AACvB,UAAI,gBAAgB,WAAW,eAAe,SAAU,WAAW;AACjE,eAAO,yBAAyB,aAAc,qBAAoB,UAAU,KAAK,KAAK,YAAY,aAAa,aAAa;AAAA,UAC1H,SAAU,WAAW;AACvB,eAAO,aAAa,aAAa,eAAe,MAAM,aAAc,qBAAoB,UAAU,KAAK,KAAK,YAAY,aAAa,aAAa;AAAA;AAGpJ,MAAC,YAAW,eAAe,iBAAiB,QAAQ,mBAAmB,AAAe,YAAY,YAAY,gBAAgB,MAAM;AAAA;AAAA;AAGxI,iBAAe,KAAK,cAAc,eAAe,eAAe;AAAA;AAIlE,wBAAwB,KAAK,cAAc,eAAe,eAAe,SAAS;AAShF,MAAI,CAAC,SAAS;AACZ;AAAA;AAGF,MAAI,KAAK,IAAI;AAEb,MAAI,GAAG,gBAAgB;AACrB;AAAA;AAGF,MAAI,CAAC,GAAG,kBAAkB;AACxB,OAAG,mBAAmB;AAAA;AAGxB,MAAI,KAAK,AAAa,eAAe,IAAI,iBAAiB,eAAe;AACzE,KAAG,KAAK;AAAA;AAGV,oBAAoB,KAAK,eAAe;AACtC,MAAI,CAAC,IAAI,cAAc;AACrB,QAAI,KAAK,IAAI;AACb,OAAG,iBAAiB;AACpB,QAAI,eAAe;AAAA,MACjB,MAAM;AAAA,MACN,OAAO;AAAA;AAET,OAAG,iBAAiB;AAAA;AAAA;AAIxB,sBAAsB,aAAa,eAAe,MAAM,WAAW;AACjE,WAAS,IAAI,GAAG,OAAM,cAAc,QAAQ,IAAI,MAAK,KAAK;AACxD,QAAI,OAAO,cAAc;AAEzB,QAAI,YAAY,cAAc,WAAW,MAAM,KAAK,WAAW,OAAO;AACpE,aAAO;AAAA;AAAA;AAAA;AAKb,+BAA+B,YAAY,aAAa;AACtD,MAAI,gBAAgB,WAAW,OAAO;AACtC,SAAO,iBAAiB,QAAQ,kBAAkB,SAAU,CAAO,QAAQ,iBAAiB,AAAO,QAAQ,eAAe,eAAe,IAAI,gBAAgB;AAAA;AAG/J,IAAI,uBAAuB;AAAA,EACzB,MAAM,SAAU,MAAM;AACpB,WAAO,0BAA0B,KAAK;AAAA;AAAA,EAExC,SAAS,SAAU,MAAM;AACvB,QAAI;AACJ,QAAI,QAAQ,KAAK;AAEjB,aAAS,IAAI,GAAG,OAAM,MAAM,QAAQ,IAAI,MAAK,KAAK;AAChD,eAAS,UAAU,CAAC,CAAC,UAAU,YAAY,CAAC,UAAU;AACtD,UAAI,KAAK,MAAM;AACf,SAAG,KAAK,OAAO,GAAG,MAAO,QAAO,GAAG,KAAK,GAAG;AAC3C,SAAG,KAAK,OAAO,GAAG,MAAO,QAAO,GAAG,KAAK,GAAG;AAC3C,SAAG,KAAK,OAAO,GAAG,MAAO,QAAO,GAAG,KAAK,GAAG;AAC3C,SAAG,KAAK,OAAO,GAAG,MAAO,QAAO,GAAG,KAAK,GAAG;AAAA;AAG7C,WAAO,UAAU,0BAA0B;AAAA;AAAA;AAI/C,mCAAmC,QAAQ;AACzC,SAAO,IAAI,qBAAa,OAAO,GAAG,IAAI,OAAO,GAAG,IAAI,OAAO,GAAG,KAAK,OAAO,GAAG,IAAI,OAAO,GAAG,KAAK,OAAO,GAAG;AAAA;;;ACxO5G,IAAI,YAEJ,SAAU,QAAQ;AAChB,YAAU,YAAW;AAErB,wBAAqB;AACnB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,WAAU;AACvB,WAAO;AAAA;AAGT,aAAU,UAAU,OAAO,SAAU,SAAS,KAAK;AACjD,SAAK,UAAU;AACf,SAAK,MAAM;AACX,SAAK;AACL,IAAC,MAAK,mBAAmB,IAAI,wBAAgB,IAAI,UAAU,GAAG,SAAS,AAAO,KAAK,KAAK,UAAU,OAAO;AAAA;AAG3G,aAAU,UAAU,SAAS,SAAU,YAAY,SAAS,KAAK,SAAS;AACxE,SAAK,QAAQ;AAEb,SAAK,kBAAkB,YAAY,SAAS,KAAK;AAAA;AAGnD,aAAU,UAAU,kBAAkB,SAAU,YAAY,SAAS,KAAK,SAAS;AAIjF,iBAAa;AAEb,SAAK,kBAAkB,YAAY,SAAS,KAAK;AAAA;AAGnD,aAAU,UAAU,eAAe,SAAU,YAAY,SAAS,KAAK,SAAS;AAC9E,SAAK,gBAAgB,YAAY,SAAS,KAAK;AAAA;AAGjD,aAAU,UAAU,aAAa,SAAU,YAAY,SAAS,KAAK,SAAS;AAC5E,SAAK,kBAAkB,YAAY,SAAS,KAAK;AAAA;AAGnD,aAAU,UAAU,oBAAoB,SAAU,YAAY,SAAS,KAAK,SAAS;AAEnF,IAAC,EAAC,WAAW,QAAQ,UAAU,WAAW,OAAO,KAAK,iBAAiB,UAAU,WAAW,mBAAmB,cAAc,MAAM,YAAY,WAAW,aAAa,aAAa,WAAW,MAAM;AAAA;AAKvM,aAAU,UAAU,UAAU,WAAY;AACxC,SAAK,iBAAiB;AAAA;AAGxB,aAAU,UAAU,WAAW,SAAU,YAAY;AACnD,QAAI,UAAU,KAAK,MAAM;AACzB,QAAI,QAAQ,KAAK,MAAM,mBAAmB,gBAAgB,WAAW,OAAO,KAAK;AAKjF,IAAC,EAAC,WAAW,SAAS,WAAW,kBAAkB,KAAK,IAAI,eAAe;AAAA,MACzE,MAAM;AAAA,MACN,SAAS;AAAA,MACT,OAAO,AAAO,MAAM;AAAA,MACpB,OAAO;AAAA;AAET,eAAW,SAAS,KAAK,IAAI,eAAe;AAAA,MAC1C,MAAM;AAAA,MACN,SAAS;AAAA,MACT,OAAO,AAAO,MAAM;AAAA,MACpB,OAAO;AAAA;AAAA;AAIX,aAAU,OAAO;AACjB,SAAO;AAAA,EACP;AAEF,IAAO,oBAAQ;;;AC/Ef,IAAI,6BAA6B;AAEjC,IAAI,aAEJ,SAAU,QAAQ;AAChB,YAAU,aAAY;AAEtB,yBAAsB;AACpB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,YAAW;AAKxB,UAAM,QAAQ;AAMd,UAAM,cAAc;AACpB,WAAO;AAAA;AAGT,cAAW,UAAU,gBAAgB,SAAU,WAAW,QAAQ;AAChE,QAAI,aAAa,KAAK;AACtB,KAAC,UAAU,AAAe,oBAAoB,YAAY,WAAW,CAAC,WAAW;AACjF,QAAI,UAAU,WAAW,UAAU,WAAW,WAAW;AAEzD,eAAW,aAAa,WAAW,cAAc;AAAA,MAC/C,OAAO;AAAA;AAGT,QAAI,CAAC,QAAQ,eAAe,UAAU;AAGpC,cAAQ,QAAQ;AAAA;AAAA;AAQpB,cAAW,UAAU,WAAW,SAAU,OAAO;AAC/C,QAAI,MAAuC;AACzC,MAAO,OAAO,AAAO,QAAQ;AAC7B,MAAO,KAAK,OAAO,SAAU,MAAM;AACjC,QAAO,OAAO,KAAK,WAAW;AAAA;AAAA;AAOlC,QAAI,CAAC,OAAO;AACV;AAAA;AAGF,SAAK,QAAQ,AAAO,IAAI,OAAO,SAAU,MAAM;AAC7C,aAAO,oBAAoB,KAAK,QAAQ;AAAA,OACvC;AAAA;AAOL,cAAW,UAAU,iBAAiB,SAAU,aAAa;AAC3D,SAAK,cAAc,oBAAoB,KAAK,QAAQ;AACpD,SAAK,YAAY,KAAK,YAAY;AAAA;AAGpC,cAAW,OAAO;AAClB,cAAW,eAAe,CAAC,OAAO,QAAQ,SAAS,SAAS,YAAY;AACxE,cAAW,gBAAgB;AAAA,IACzB,aAAa;AAAA,IACb,WAAW;AAAA,IACX,WAAW;AAAA,IACX,eAAe;AAAA,IACf,YAAY;AAAA,MACV,aAAa;AAAA,MACb,OAAO;AAAA,MACP,aAAa;AAAA;AAAA,IAEf,cAAc;AAAA,IACd,eAAe;AAAA,IACf,eAAe;AAAA,IACf,GAAG;AAAA;AAEL,SAAO;AAAA,EACP;AAEF,6BAA6B,QAAQ,aAAa;AAChD,SAAO,AAAO,MAAM;AAAA,IAClB,WAAW,OAAO;AAAA,IAClB,WAAW,OAAO;AAAA,IAClB,eAAe,OAAO;AAAA,IACtB,YAAY,IAAI,cAAM,OAAO,YAAY;AAAA,IACzC,eAAe,OAAO;AAAA,IACtB,GAAG,OAAO;AAAA,KACT,aAAa;AAAA;AAGlB,IAAO,qBAAQ;;;AC3Gf,IAAI,aAAa,CAAC,QAAQ,WAAW,SAAS,SAAS,QAAQ;AAE/D,IAAI,eAEJ,SAAU,QAAQ;AAChB,YAAU,eAAc;AAExB,2BAAwB;AACtB,WAAO,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAAA;AAG7D,gBAAa,UAAU,SAAS,SAAU,cAAc,SAAS,KAAK;AACpE,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,YAAQ,cAAc;AAAA,MACpB,UAAU;AAAA,OACT,SAAU,YAAY;AACvB,kBAAY,WAAW;AACvB,kBAAY,WAAW,YAAY,aAAa;AAChD,kBAAY,aAAa,CAAC,CAAC,WAAW,MAAM;AAAA;AAE9C,SAAK,aAAa;AAClB,SAAK,aAAa;AAClB,IAAO,KAAK,aAAa,IAAI,QAAQ,OAAO,SAAU,MAAM;AAC1D,mBAAa,cAAc,MAAO,UAAS,SAAS,cAAc,aAAa,SAAS,UAAU,YAAY,SAAS,aAAa,aAAa;AAAA;AAAA;AAIrJ,gBAAa,UAAU,aAAa,SAAU,cAAc,SAAS,KAAK;AACxE,SAAK,OAAO,cAAc,SAAS;AAAA;AAGrC,gBAAa,UAAU,WAAW,WAAY;AAC5C,QAAI,QAAQ,KAAK;AACjB,QAAI,iBAAiB,MAAM,IAAI,QAAQ;AACvC,QAAI,QAAQ;AACZ,IAAO,KAAK,MAAM,IAAI,QAAQ,OAAO,SAAU,MAAM;AACnD,UAAI,eAAe,OAAO;AACxB,cAAM,QAAQ,eAAe;AAAA;AAAA;AAGjC,WAAO;AAAA;AAGT;AAEA,gBAAa,UAAU,UAAU,SAAU,SAAS,KAAK,MAAM;AAC7D,QAAI,YAAY,KAAK;AACrB,QAAI,YAAY,KAAK;AAErB,QAAI,SAAS,SAAS;AAEpB,UAAI,eAAe;AAAA,QACjB,MAAM;AAAA,QACN,WAAW;AAAA;AAEb,UAAI,eAAe;AAAA,QACjB,MAAM;AAAA,QACN,SAAS;AAAA,QAET,OAAO;AAAA;AAAA,WAEJ;AACL,UAAI,eAAe;AAAA,QACjB,MAAM;AAAA,QACN,KAAK;AAAA,QACL,aAAa;AAAA,UACX,WAAW,SAAS,SAAS,YAAY,cAAc,OAAO,QAAQ;AAAA,UACtE,WAAW,SAAS,SAAS,cAAc,aAAa,WAAW,aAAa;AAAA;AAAA;AAAA;AAAA;AAMxF;AAEA,gBAAa,mBAAmB,SAAU,SAAS;AACjD,QAAI,iBAAgB;AAAA,MAClB,MAAM;AAAA,MACN,MAAM,WAAW;AAAA,MACjB,MAAM;AAAA,QAEJ,MAAM;AAAA,QACN,SAAS;AAAA,QACT,OAAO;AAAA,QACP,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,MAMT,OAAO,QAAQ,iBAAiB,IAAI,CAAC,WAAW,SAAS;AAAA;AAE3D,WAAO;AAAA;AAGT,SAAO;AAAA,EACP;AAEF,IAAO,gBAAQ;;;AClGR,mBAAiB,WAAW;AACjC,YAAU,sBAAsB;AAChC,YAAU,uBAAuB;AACjC,YAAU,qBAAqB;AAC/B,YAAU,eAAe,UAAU,SAAS,OAAO,OAAO;AAC1D,YAAU,eAAe;AAAA,IACvB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,KACP,SAAU,SAAS,SAAS;AAC7B,YAAQ,cAAc;AAAA,MACpB,UAAU;AAAA,MACV,OAAO;AAAA,OACN,SAAU,YAAY;AACvB,iBAAW,SAAS,QAAQ;AAAA;AAAA;AAyBhC,YAAU,eAAe;AAAA,IACvB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,KACP,WAAY;AAAA;AACf,YAAU,eAAe;AAAA,IACvB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,KACP,WAAY;AAAA;AACf,kBAAgB,SAAS;AAAA;;;AC9C3B,IAAI,aAEJ,SAAU,QAAQ;AAChB,YAAU,aAAY;AAEtB,yBAAsB;AACpB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,YAAW;AACxB,UAAM,aAAa;AAAA,MACjB,MAAM;AAAA,MACN,YAAY;AAAA;AAEd,WAAO;AAAA;AAGT,cAAW,OAAO;AAClB,cAAW,gBAAgB;AAAA,IACzB,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,WAAW;AAAA,IACX,MAAM;AAAA,IACN,KAAK;AAAA,IACL,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,aAAa;AAAA,IACb,SAAS;AAAA,IACT,SAAS;AAAA,IACT,WAAW;AAAA,MACT,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,OAAO;AAAA;AAAA,IAET,cAAc;AAAA,MACZ,UAAU;AAAA,MACV,OAAO;AAAA;AAAA;AAGX,SAAO;AAAA,EACP;AAGF,IAAI,YAEJ,SAAU,QAAQ;AAChB,YAAU,YAAW;AAErB,wBAAqB;AACnB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,WAAU;AACvB,WAAO;AAAA;AAGT,aAAU,UAAU,SAAS,SAAU,YAAY,SAAS,KAAK;AAC/D,SAAK,MAAM;AAEX,QAAI,CAAC,WAAW,IAAI,SAAS;AAC3B;AAAA;AAGF,QAAI,QAAQ,KAAK;AACjB,QAAI,iBAAiB,WAAW,SAAS;AACzC,QAAI,oBAAoB,WAAW,SAAS;AAC5C,QAAI,YAAY,WAAW,IAAI;AAC/B,QAAI,oBAAoB,AAAO,UAAU,WAAW,IAAI,iBAAiB,WAAW,IAAI;AACxF,QAAI,SAAS,IAAY,aAAK;AAAA,MAC5B,OAAO,gBAAgB,gBAAgB;AAAA,QACrC,MAAM,WAAW,IAAI;AAAA,QACrB,MAAM,eAAe;AAAA,SACpB;AAAA,QACD,YAAY;AAAA;AAAA,MAEd,IAAI;AAAA;AAEN,QAAI,WAAW,OAAO;AACtB,QAAI,UAAU,WAAW,IAAI;AAC7B,QAAI,YAAY,IAAY,aAAK;AAAA,MAC/B,OAAO,gBAAgB,mBAAmB;AAAA,QACxC,MAAM;AAAA,QACN,MAAM,kBAAkB;AAAA,QACxB,GAAG,SAAS,SAAS,WAAW,IAAI;AAAA,QACpC,eAAe;AAAA,SACd;AAAA,QACD,YAAY;AAAA;AAAA,MAEd,IAAI;AAAA;AAEN,QAAI,OAAO,WAAW,IAAI;AAC1B,QAAI,UAAU,WAAW,IAAI;AAC7B,QAAI,eAAe,WAAW,IAAI,gBAAgB;AAClD,WAAO,SAAS,CAAC,QAAQ,CAAC;AAC1B,cAAU,SAAS,CAAC,WAAW,CAAC;AAEhC,QAAI,MAAM;AACR,aAAO,GAAG,SAAS,WAAY;AAC7B,mBAAW,MAAM,MAAM,WAAW,IAAI;AAAA;AAAA;AAI1C,QAAI,SAAS;AACX,gBAAU,GAAG,SAAS,WAAY;AAChC,mBAAW,SAAS,MAAM,WAAW,IAAI;AAAA;AAAA;AAI7C,cAAU,QAAQ,YAAY,UAAU,WAAW,YAAY,eAAe;AAAA,MAC5E,eAAe;AAAA,MACf,gBAAgB,WAAW;AAAA,QACzB;AACJ,UAAM,IAAI;AACV,eAAW,MAAM,IAAI;AAErB,QAAI,YAAY,MAAM;AACtB,QAAI,eAAe,WAAW;AAC9B,iBAAa,QAAQ,UAAU;AAC/B,iBAAa,SAAS,UAAU;AAChC,QAAI,aAAa,cAAc,cAAc;AAAA,MAC3C,OAAO,IAAI;AAAA,MACX,QAAQ,IAAI;AAAA,OACX,WAAW,IAAI;AAElB,QAAI,CAAC,WAAW;AAEd,kBAAY,WAAW,IAAI,WAAW,WAAW,IAAI;AAErD,UAAI,cAAc,UAAU;AAC1B,oBAAY;AAAA;AAId,UAAI,cAAc,SAAS;AACzB,mBAAW,KAAK,WAAW;AAAA,iBAClB,cAAc,UAAU;AACjC,mBAAW,KAAK,WAAW,QAAQ;AAAA;AAAA;AAIvC,QAAI,CAAC,mBAAmB;AACtB,0BAAoB,WAAW,IAAI,UAAU,WAAW,IAAI;AAE5D,UAAI,sBAAsB,UAAU;AAClC,4BAAoB;AAAA;AAGtB,UAAI,sBAAsB,UAAU;AAClC,mBAAW,KAAK,WAAW;AAAA,iBAClB,sBAAsB,UAAU;AACzC,mBAAW,KAAK,WAAW,SAAS;AAAA;AAGtC,0BAAoB,qBAAqB;AAAA;AAG3C,UAAM,IAAI,WAAW;AACrB,UAAM,IAAI,WAAW;AACrB,UAAM;AACN,QAAI,aAAa;AAAA,MACf,OAAO;AAAA,MACP,eAAe;AAAA;AAEjB,WAAO,SAAS;AAChB,cAAU,SAAS;AAGnB,gBAAY,MAAM;AAClB,QAAI,UAAU,WAAW;AACzB,QAAI,QAAQ,WAAW,aAAa,CAAC,SAAS;AAC9C,UAAM,OAAO,WAAW,IAAI;AAC5B,QAAI,OAAO,IAAY,aAAK;AAAA,MAC1B,OAAO;AAAA,QACL,GAAG,UAAU,IAAI,QAAQ;AAAA,QACzB,GAAG,UAAU,IAAI,QAAQ;AAAA,QACzB,OAAO,UAAU,QAAQ,QAAQ,KAAK,QAAQ;AAAA,QAC9C,QAAQ,UAAU,SAAS,QAAQ,KAAK,QAAQ;AAAA,QAChD,GAAG,WAAW,IAAI;AAAA;AAAA,MAEpB;AAAA,MACA,kBAAkB;AAAA,MAClB,QAAQ;AAAA;AAEV,UAAM,IAAI;AAAA;AAGZ,aAAU,OAAO;AACjB,SAAO;AAAA,EACP;AAEK,mBAAiB,WAAW;AACjC,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAAA;;;ACtMlC,IAAI,gBAEJ,SAAU,QAAQ;AAChB,YAAU,gBAAe;AAEzB,4BAAyB;AACvB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,eAAc;AAC3B,UAAM,aAAa;AACnB,WAAO;AAAA;AAOT,iBAAc,UAAU,OAAO,SAAU,QAAQ,aAAa,SAAS;AACrE,SAAK,qBAAqB,QAAQ;AAElC,SAAK;AAAA;AAOP,iBAAc,UAAU,cAAc,SAAU,QAAQ;AACtD,WAAO,UAAU,YAAY,MAAM,MAAM;AAEzC,SAAK;AAAA;AAGP,iBAAc,UAAU,kBAAkB,SAAU,cAAc;AAChE,QAAI,gBAAgB,MAAM;AACxB,qBAAe,KAAK,OAAO;AAAA;AAG7B,QAAI,SAAQ,KAAK,MAAM;AAEvB,QAAI,KAAK,OAAO,MAAM;AACpB,qBAAgB,gBAAe,SAAQ,UAAS;AAAA,WAC3C;AACL,sBAAgB,UAAU,gBAAe,SAAQ;AACjD,qBAAe,KAAM,gBAAe;AAAA;AAGtC,SAAK,OAAO,eAAe;AAAA;AAO7B,iBAAc,UAAU,kBAAkB,WAAY;AACpD,WAAO,KAAK,OAAO;AAAA;AAOrB,iBAAc,UAAU,aAAa,WAAY;AAC/C,WAAO,KAAK,qBAAqB,KAAK,MAAM,UAAU;AAAA;AAOxD,iBAAc,UAAU,eAAe,SAAU,OAAO;AACtD,SAAK,OAAO,WAAW,CAAC,CAAC;AAAA;AAO3B,iBAAc,UAAU,eAAe,WAAY;AACjD,WAAO,CAAC,CAAC,KAAK,OAAO;AAAA;AAOvB,iBAAc,UAAU,YAAY,WAAY;AAC9C,QAAI,aAAa,KAAK;AACtB,QAAI,UAAU,WAAW,QAAQ;AACjC,QAAI,WAAW,WAAW;AAC1B,QAAI,QAAQ,KAAK,SAAS;AAC1B,QAAI;AAEJ,QAAI,aAAa,YAAY;AAC3B,yBAAmB;AACnB,WAAK,SAAS,SAAU,MAAM,OAAO;AACnC,YAAI,QAAQ,oBAAoB,iBAAiB,OAAO;AACxD,YAAI;AAEJ,YAAI,SAAS,OAAO;AAClB,oBAAU,MAAM;AAChB,kBAAQ,QAAQ;AAAA,eACX;AACL,oBAAU;AAAA;AAGZ,yBAAiB,KAAK;AACtB,cAAM,KAAK;AAAA;AAAA,WAER;AACL,yBAAmB;AAAA;AAGrB,QAAI,UAAU;AAAA,MACZ,UAAU;AAAA,MACV,MAAM;AAAA,MACN,OAAO;AAAA,MACP,aAAa;AACf,QAAI,OAAO,KAAK,QAAQ,IAAI,mBAAW,CAAC;AAAA,MACtC,MAAM;AAAA,MACN,MAAM;AAAA,QACJ;AACJ,SAAK,SAAS,kBAAkB;AAAA;AAGlC,iBAAc,UAAU,UAAU,WAAY;AAC5C,WAAO,KAAK;AAAA;AAQd,iBAAc,UAAU,gBAAgB,WAAY;AAClD,QAAI,KAAK,IAAI,gBAAgB,YAAY;AACvC,aAAO,KAAK,OAAO;AAAA;AAAA;AAIvB,iBAAc,OAAO;AAKrB,iBAAc,gBAAgB;AAAA,IAC5B,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,MAAM;AAAA,IACN,UAAU;AAAA,IACV,UAAU;AAAA,IACV,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,iBAAiB;AAAA,IACjB,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,cAAc;AAAA,IACd,cAAc;AAAA,IACd,WAAW;AAAA,IACX,OAAO;AAAA,MACL,OAAO;AAAA;AAAA,IAET,MAAM;AAAA;AAER,SAAO;AAAA,EACP;AAEF,IAAO,wBAAQ;;;AC7Kf,IAAI,sBAEJ,SAAU,QAAQ;AAChB,YAAU,sBAAqB;AAE/B,kCAA+B;AAC7B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,qBAAoB;AACjC,WAAO;AAAA;AAGT,uBAAoB,OAAO;AAK3B,uBAAoB,gBAAgB,qBAAqB,sBAAc,eAAe;AAAA,IACpF,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,aAAa;AAAA,IACb,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,SAAS;AAAA,MACP,SAAS;AAAA;AAAA,IAGX,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,WAAW;AAAA,MACT,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA;AAAA,IAET,OAAO;AAAA,MACL,UAAU;AAAA,MAIV,MAAM;AAAA,MACN,UAAU;AAAA,MACV,QAAQ;AAAA,MAGR,OAAO;AAAA;AAAA,IAET,WAAW;AAAA,MACT,OAAO;AAAA,MACP,aAAa;AAAA;AAAA,IAEf,iBAAiB;AAAA,MACf,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,eAAe;AAAA,MACf,eAAe;AAAA,MACf,aAAa;AAAA,MAEb,WAAW;AAAA,MACX,mBAAmB;AAAA,MACnB,iBAAiB;AAAA;AAAA,IAEnB,cAAc;AAAA,MACZ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,UAAU;AAAA,MACV,SAAS;AAAA,MACT,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MAEV,UAAU;AAAA,MAEV,UAAU;AAAA,MACV,aAAa;AAAA,MACb,aAAa;AAAA,MACb,OAAO;AAAA,MACP,aAAa;AAAA,MACb,aAAa;AAAA;AAAA,IAEf,UAAU;AAAA,MACR,OAAO;AAAA,QACL,MAAM;AAAA,QAEN,OAAO;AAAA;AAAA,MAET,WAAW;AAAA,QACT,OAAO;AAAA;AAAA,MAET,cAAc;AAAA,QACZ,OAAO;AAAA,QACP,aAAa;AAAA,QACb,aAAa;AAAA;AAAA;AAAA,IAGjB,UAAU;AAAA,MACR,WAAW;AAAA,QACT,OAAO;AAAA;AAAA,MAET,WAAW;AAAA,QACT,OAAO;AAAA;AAAA,MAET,OAAO;AAAA,QACL,OAAO;AAAA;AAAA;AAAA,IAGX,MAAM;AAAA;AAER,SAAO;AAAA,EACP;AAEF,MAAM,qBAAqB,gBAAgB;AAC3C,IAAO,8BAAQ;;;ACxHf,IAAI,eAEJ,SAAU,QAAQ;AAChB,YAAU,eAAc;AAExB,2BAAwB;AACtB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,cAAa;AAC1B,WAAO;AAAA;AAGT,gBAAa,OAAO;AACpB,SAAO;AAAA,EACP;AAEF,IAAO,uBAAQ;;;ACbf,IAAI,eAEJ,SAAU,QAAQ;AAChB,YAAU,eAAc;AAExB,yBAAsB,KAAK,QAAO,aAAa,UAAU;AACvD,QAAI,QAAQ,OAAO,KAAK,MAAM,KAAK,QAAO,gBAAgB;AAE1D,UAAM,OAAO,YAAY;AACzB,WAAO;AAAA;AAOT,gBAAa,UAAU,gBAAgB,WAAY;AAEjD,WAAO,KAAK,MAAM,SAAS;AAAA;AAO7B,gBAAa,UAAU,eAAe,WAAY;AAChD,WAAO,KAAK,MAAM,IAAI,cAAc;AAAA;AAGtC,SAAO;AAAA,EACP;AAEF,IAAO,uBAAQ;;;ACnBf,IAAI,MAAK,KAAK;AACd,IAAI,sBAAsB;AAE1B,IAAI,qBAEJ,SAAU,QAAQ;AAChB,YAAU,qBAAoB;AAE9B,iCAA8B;AAC5B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,oBAAmB;AAChC,WAAO;AAAA;AAGT,sBAAmB,UAAU,OAAO,SAAU,SAAS,KAAK;AAC1D,SAAK,MAAM;AAAA;AAOb,sBAAmB,UAAU,SAAS,SAAU,eAAe,SAAS,KAAK;AAC3E,SAAK,QAAQ;AACb,SAAK,MAAM;AACX,SAAK,UAAU;AACf,SAAK,MAAM;AAEX,QAAI,cAAc,IAAI,QAAQ,OAAO;AACnC,UAAI,eAAe,KAAK,QAAQ,eAAe;AAE/C,UAAI,cAAc,KAAK,aAAa;AAEpC,UAAI,aAAa,KAAK,aAAa;AAEnC,UAAI,SAAS,KAAK,QAAQ,KAAK,YAAY,cAAc;AAEzD,oBAAc,gBAAgB,SAAU,WAAW;AACjD,YAAI,OAAO,OAAO,MAAM,SAAS;AAAA,UAC/B,OAAO;AAAA;AAET,eAAO,oBAAoB,aAAa;AAAA,UACtC,QAAQ;AAAA,UACR,OAAO;AAAA;AAAA;AAIX,WAAK,CAAC,YAAY,YAAY,WAAW,mBAAmB,SAAU,MAAM;AAC1E,aAAK,YAAY,MAAM,cAAc,aAAa,QAAQ;AAAA,SACzD;AAEH,WAAK,iBAAiB,cAAc,YAAY,QAAQ;AAExD,WAAK,UAAU,cAAc;AAAA;AAG/B,SAAK;AAEL,SAAK;AAAA;AAOP,sBAAmB,UAAU,SAAS,WAAY;AAChD,SAAK;AAEL,SAAK,MAAM;AAAA;AAOb,sBAAmB,UAAU,UAAU,WAAY;AACjD,SAAK;AAAA;AAGP,sBAAmB,UAAU,UAAU,SAAU,eAAe,KAAK;AACnE,QAAI,cAAc,cAAc,IAAI,CAAC,SAAS;AAC9C,QAAI,SAAS,cAAc,IAAI;AAC/B,QAAI,WAAW,aAAY,eAAe;AAC1C,QAAI;AAEJ,QAAI,eAAe,QAAQ,gBAAgB,QAAQ;AACjD,uBAAiB,WAAW,eAAe,SAAS,IAAI,SAAS,SAAS,IAAI,IAAI,cAAc,IAAI,MAAM,MAAM,SAAS,IAAI,SAAS,QAAQ,IAAI,IAAI,aAAa,IAAI,MAAM;AAAA,eACpK,SAAS,cAAc;AAChC,uBAAiB;AAAA,QACf,YAAY;AAAA,UACV,KAAK;AAAA,UACL,QAAQ;AAAA;AAAA,QAEV,UAAU;AAAA,UACR,MAAM;AAAA,UACN,OAAO;AAAA;AAAA,QAET,QAAQ;AAAA,WACL;AAEL,uBAAiB;AAAA;AAGnB,QAAI,gBAAgB;AAAA,MAClB,YAAY;AAAA,MACZ,UAAU,kBAAkB,KAAK,mBAAmB,MAAM,SAAS;AAAA;AAErE,QAAI,mBAAmB;AAAA,MACrB,YAAY,kBAAkB,KAAK,mBAAmB,MAAM,QAAQ;AAAA,MACpE,UAAU;AAAA;AAEZ,QAAI,cAAc;AAAA,MAChB,YAAY;AAAA,MACZ,UAAU,MAAK;AAAA;AAGjB,QAAI,aAAa,WAAW,aAAa,SAAS,SAAS,SAAS;AACpE,QAAI,eAAe,cAAc,SAAS;AAC1C,QAAI,cAAc,aAAa,IAAI,QAAQ;AAC3C,QAAI,cAAc,cAAc,aAAa,IAAI,cAAc;AAC/D,QAAI,aAAa,cAAc,aAAa,IAAI,aAAa;AAC7D,QAAI,cAAc,cAAc;AAEhC,QAAI,gBAAgB,cAAc,IAAI,CAAC,SAAS,cAAc;AAC9D,oBAAgB,gBAAgB,MAAK;AAErC,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,QAAI,kBAAkB,aAAa,IAAI,YAAY;AACnD,QAAI,cAAc,eAAe,aAAa,IAAI,eAAe;AACjE,QAAI,cAAc,eAAe,aAAa,IAAI,eAAe;AACjE,QAAI,cAAc,eAAe,aAAa,IAAI,eAAe;AACjE,QAAI,QAAQ;AACZ,QAAI,SAAS;AAEb,QAAI,oBAAoB,UAAU,oBAAoB,UAAU;AAC9D,qBAAgB,gBAAe,CAAC,GAAG,IAAI,SAAS;AAChD,qBAAgB,mBAAkB,CAAC,OAAO,IAAI,SAAS;AACvD,qBAAgB,mBAAkB,CAAC,SAAS,aAAa,IAAI,UAAU;AAAA,WAClE;AAEL,qBAAgB,gBAAe,CAAC,SAAS,aAAa,IAAI,UAAU;AACpE,qBAAgB,mBAAkB,CAAC,GAAG,IAAI,SAAS;AACnD,qBAAgB,mBAAkB,CAAC,SAAS,aAAa,IAAI,UAAU;AAAA;AAGzE,QAAI,aAAa,CAAC,OAAO;AAEzB,QAAI,cAAc,IAAI,YAAY;AAChC,iBAAW;AAAA;AAGb,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA,UAAU,YAAY;AAAA,MACtB;AAAA,MACA,aAAa;AAAA,MACb,YAAY,cAAc,IAAI,CAAC,SAAS,aAAa,cAAc;AAAA,MACnE,eAAe,cAAc,IAAI,CAAC,SAAS,qBAAqB,cAAc,IAAI,CAAC,SAAS,gBAAgB,iBAAiB;AAAA,MAE7H;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAIJ,sBAAmB,UAAU,YAAY,SAAU,YAAY,eAAe;AAM5E,QAAI,YAAY,KAAK;AACrB,QAAI,aAAa,KAAK;AACtB,QAAI,WAAW,WAAW;AAE1B,QAAI,WAAW,WAAW,YAAY;AAEpC,UAAI,IAAI,AAAO;AACf,UAAI,gBAAgB,SAAS;AAC7B,UAAI,gBAAgB,SAAS,IAAI,SAAS;AAC1C,MAAO,UAAU,GAAG,GAAG,CAAC,CAAC,eAAe,CAAC;AACzC,MAAO,OAAO,GAAG,GAAG,CAAC,MAAK;AAC1B,MAAO,UAAU,GAAG,GAAG,CAAC,eAAe;AACvC,iBAAW,SAAS;AACpB,eAAS,eAAe;AAAA;AAG1B,QAAI,YAAY,SAAS;AACzB,QAAI,YAAY,SAAS,UAAU;AACnC,QAAI,aAAa,SAAS,WAAW;AACrC,QAAI,eAAe,CAAC,UAAU,GAAG,UAAU;AAC3C,QAAI,iBAAiB,CAAC,WAAW,GAAG,WAAW;AAC/C,mBAAe,KAAK,aAAa,KAAK,UAAU,GAAG;AACnD,QAAI,cAAc,WAAW;AAE7B,QAAI,eAAe,QAAQ,SAAS,cAAc;AAEhD,UAAI,eAAe,gBAAgB,MAAM,IAAI;AAC7C,cAAQ,cAAc,WAAW,WAAW,GAAG;AAC/C,cAAQ,gBAAgB,YAAY,WAAW,GAAG,IAAI;AAAA,WACjD;AACL,UAAI,eAAe,eAAe,IAAI,IAAI;AAC1C,cAAQ,cAAc,WAAW,WAAW,GAAG;AAC/C,qBAAe,KAAK,aAAa,KAAK;AAAA;AAGxC,cAAU,YAAY;AACtB,eAAW,YAAY;AACvB,cAAU,WAAW,WAAW,WAAW,WAAW;AACtD,cAAU;AACV,cAAU;AAEV,uBAAmB,aAAa;AAC9B,kBAAY,UAAU,UAAU,GAAG,KAAK,YAAY;AACpD,kBAAY,UAAU,UAAU,GAAG,KAAK,YAAY;AAAA;AAGtD,sBAAkB,MAAM;AAEtB,aAAO,CAAC,CAAC,KAAK,GAAG,KAAK,IAAI,KAAK,QAAQ,CAAC,KAAK,GAAG,KAAK,IAAI,KAAK;AAAA;AAGhE,qBAAiB,SAAS,MAAM,IAAI,QAAQ,UAAU;AACpD,cAAQ,WAAW,GAAG,QAAQ,YAAY,KAAK,QAAQ;AAAA;AAAA;AAI3D,sBAAmB,UAAU,cAAc,SAAU,YAAY,eAAe;AAC9E,QAAI,OAAO,cAAc;AACzB,QAAI,WAAW,cAAc,IAAI;AACjC,QAAI,SAAQ,oBAAmB,eAAe;AAE9C,WAAM,WAAW,WAAY;AAC3B,aAAO,KAAK,SAAS,CAAC,UAAU,SAAU,OAAO;AAC/C,eAAO;AAAA,UACL;AAAA;AAAA;AAAA;AAKN,QAAI,aAAa,KAAK,cAAc;AACpC,WAAM,UAAU,WAAW,IAAI,WAAW;AAC1C,WAAM;AACN,QAAI,OAAO,IAAI,qBAAa,SAAS,QAAO,WAAW,YAAY;AACnE,SAAK,QAAQ;AACb,WAAO;AAAA;AAGT,sBAAmB,UAAU,eAAe,SAAU,KAAK;AACzD,QAAI,WAAW,KAAK,OAAO,IAAY;AACvC,SAAK,MAAM,IAAI;AACf,WAAO;AAAA;AAGT,sBAAmB,UAAU,kBAAkB,SAAU,YAAY,OAAO,MAAM,eAAe;AAC/F,QAAI,aAAa,KAAK;AAEtB,QAAI,CAAC,cAAc,IAAI,CAAC,aAAa,UAAU;AAC7C;AAAA;AAGF,QAAI,OAAO,IAAY,aAAK;AAAA,MAC1B,OAAO;AAAA,QACL,IAAI,WAAW;AAAA,QACf,IAAI;AAAA,QACJ,IAAI,WAAW;AAAA,QACf,IAAI;AAAA;AAAA,MAEN,OAAO,OAAO;AAAA,QACZ,SAAS;AAAA,SACR,cAAc,SAAS,aAAa;AAAA,MACvC,QAAQ;AAAA,MACR,IAAI;AAAA;AAEN,UAAM,IAAI;AACV,QAAI,eAAe,KAAK,gBAAgB,IAAY,aAAK;AAAA,MACvD,OAAO;AAAA,QACL,IAAI,WAAW;AAAA,QACf,IAAI,KAAK,kBAAkB,KAAK,gBAAgB,IAAI,WAAW;AAAA,QAC/D,IAAI;AAAA,QACJ,IAAI;AAAA;AAAA,MAEN,OAAO,SAAS;AAAA,QACd,SAAS;AAAA,QACT,WAAW,KAAK,MAAM;AAAA,SACrB,cAAc,SAAS,CAAC,YAAY,cAAc;AAAA,MACrD,QAAQ;AAAA,MACR,IAAI;AAAA;AAEN,UAAM,IAAI;AAAA;AAGZ,sBAAmB,UAAU,kBAAkB,SAAU,YAAY,OAAO,MAAM,eAAe;AAC/F,QAAI,QAAQ;AAEZ,QAAI,OAAO,cAAc;AAEzB,QAAI,QAAQ,KAAK,MAAM;AACvB,SAAK,eAAe;AAEpB,SAAK,OAAO,SAAU,MAAM;AAC1B,UAAI,YAAY,KAAK,YAAY,KAAK;AACtC,UAAI,YAAY,KAAK,aAAa,KAAK;AACvC,UAAI,iBAAiB,UAAU,SAAS;AACxC,UAAI,kBAAkB,UAAU,SAAS,CAAC,YAAY;AACtD,UAAI,qBAAqB,UAAU,SAAS,CAAC,YAAY;AACzD,UAAI,YAAY;AAAA,QACd,GAAG;AAAA,QACH,GAAG;AAAA,QACH,SAAS,KAAK,MAAM,iBAAiB,OAAO,KAAK;AAAA;AAEnD,UAAI,KAAK,WAAW,WAAW,gBAAgB,OAAO;AACtD,SAAG,YAAY,YAAY,QAAQ,gBAAgB;AACnD,SAAG,YAAY,YAAY,QAAQ,mBAAmB;AACtD,0BAAoB;AACpB,UAAI,SAAS,UAAU;AAEvB,UAAI,UAAU,IAAI,YAAY;AAC5B,eAAO,YAAY,KAAK;AACxB,eAAO,YAAY;AAAA,aACd;AACL,eAAO,YAAY,OAAO,YAAY;AAAA;AAGxC,YAAM,aAAa,KAAK;AAAA;AAAA;AAI5B,sBAAmB,UAAU,mBAAmB,SAAU,YAAY,OAAO,MAAM,eAAe;AAChG,QAAI,QAAQ;AAEZ,QAAI,aAAa,KAAK;AAEtB,QAAI,CAAC,WAAW,IAAI,SAAS;AAC3B;AAAA;AAGF,QAAI,OAAO,cAAc;AACzB,QAAI,SAAS,KAAK;AAClB,SAAK,cAAc;AACnB,SAAK,QAAQ,SAAU,WAAW;AAEhC,UAAI,YAAY,UAAU;AAC1B,UAAI,YAAY,KAAK,aAAa;AAClC,UAAI,mBAAmB,UAAU,SAAS;AAC1C,UAAI,kBAAkB,UAAU,SAAS,CAAC,YAAY;AACtD,UAAI,qBAAqB,UAAU,SAAS,CAAC,YAAY;AACzD,UAAI,YAAY,KAAK,YAAY,UAAU;AAC3C,UAAI,SAAS,IAAY,aAAK;AAAA,QAC5B,GAAG;AAAA,QACH,GAAG;AAAA,QACH,UAAU,WAAW,gBAAgB,WAAW;AAAA,QAChD,SAAS,KAAK,MAAM,iBAAiB,OAAO;AAAA,QAC5C,QAAQ;AAAA,QACR,OAAO,gBAAgB,kBAAkB;AAAA,UACvC,MAAM,UAAU;AAAA,UAChB,OAAO,WAAW;AAAA,UAClB,eAAe,WAAW;AAAA;AAAA;AAG9B,aAAO,YAAY,YAAY,QAAQ,gBAAgB;AACvD,aAAO,YAAY,YAAY,QAAQ,gBAAgB;AACvD,YAAM,IAAI;AACV,0BAAoB;AACpB,0BAAoB,QAAQ,YAAY;AAExC,YAAM,YAAY,KAAK;AAAA;AAAA;AAI3B,sBAAmB,UAAU,iBAAiB,SAAU,YAAY,OAAO,MAAM,eAAe;AAC9F,QAAI,cAAc,WAAW;AAC7B,QAAI,WAAW,WAAW;AAC1B,QAAI,YAAY,cAAc,SAAS,gBAAgB;AACvD,QAAI,aAAa,cAAc,SAAS,CAAC,YAAY,iBAAiB;AACtE,QAAI,YAAY,cAAc;AAC9B,QAAI,UAAU,cAAc,IAAI,WAAW;AAC3C,YAAQ,WAAW,iBAAiB,QAAQ,KAAK,KAAK,iBAAiB,MAAM,UAAU,MAAM;AAC7F,YAAQ,WAAW,iBAAiB,QAAQ,KAAK,KAAK,iBAAiB,MAAM,UAAU,MAAM;AAC7F,YAAQ,WAAW,cAAc,YAAY,SAAS,QAAQ,KAAK,KAAK,kBAAkB,MAAM,CAAC,YAAY;AAE7G,qBAAiB,WAAU,UAAU,SAAS,YAAY;AACxD,UAAI,CAAC,WAAU;AACb;AAAA;AAGF,UAAI,WAAW,aAAa,UAAU,cAAc,IAAI,CAAC,gBAAgB,WAAW,aAAa,cAAc;AAC/G,UAAI,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,UAAU;AACxC,UAAI,MAAM,gBAAgB,eAAe,WAAW,QAAQ,MAAM;AAAA,QAChE,GAAG,UAAS;AAAA,QACZ,GAAG,UAAS;AAAA,QACZ,SAAS,cAAc;AAAA,QACvB,SAAS;AAAA,QACT,UAAU,aAAa,CAAC,WAAW;AAAA,QACnC,WAAW;AAAA,QACX,OAAO;AAAA,QACP;AAAA;AAEF,UAAI,YAAY,YAAY,QAAQ;AACpC,YAAM,IAAI;AACV,0BAAoB;AAAA;AAAA;AAIxB,sBAAmB,UAAU,wBAAwB,SAAU,YAAY,OAAO,MAAM,eAAe;AACrG,QAAI,OAAO,cAAc;AACzB,QAAI,eAAe,cAAc;AACjC,QAAI,eAAe,KAAK,aAAa,cAAc,SAAS;AAC5D,QAAI,KAAK;AACT,QAAI,WAAW;AAAA,MACb,UAAU,SAAU,SAAS;AAC3B,gBAAQ,YAAY;AACpB,gBAAQ,QAAQ,KAAK,GAAG,oBAAoB;AAC5C,gBAAQ,YAAY,KAAK,GAAG,uBAAuB;AACnD,sBAAc,SAAS,GAAG,eAAe,cAAc,MAAM,eAAe;AAAA;AAAA,MAE9E,UAAU,SAAU,SAAS;AAC3B,sBAAc,SAAS,GAAG,eAAe,cAAc,MAAM;AAAA;AAAA;AAIjE,SAAK,kBAAkB,WAAW,cAAc,cAAc,KAAK,YAAY,IAAI,KAAK,iBAAiB;AAAA;AAG3G,sBAAmB,UAAU,mBAAmB,SAAU,WAAW;AACnE,SAAK;AAEL,SAAK,IAAI,eAAe;AAAA,MACtB,MAAM;AAAA,MACN,WAAW;AAAA,MACX,MAAM,KAAK;AAAA;AAAA;AAIf,sBAAmB,UAAU,qBAAqB,SAAU,IAAI,IAAI,GAAG;AACrE,SAAK;AAEL,SAAK,uBAAuB,CAAC,EAAE,SAAS,EAAE;AAAA;AAG5C,sBAAmB,UAAU,wBAAwB,SAAU,GAAG;AAChE,SAAK,uBAAuB,CAAC,EAAE,SAAS,EAAE,UAAU;AAAA;AAGtD,sBAAmB,UAAU,yBAAyB,SAAU,UAAU,UAAS;AACjF,QAAI,UAAU,KAAK,aAAa,UAAU;AAE1C,QAAI,OAAO,KAAK;AAChB,QAAI,aAAa,AAAW,IAAI,KAAK,YAAY;AACjD,cAAU,WAAW,MAAO,WAAU,WAAW;AACjD,cAAU,WAAW,MAAO,WAAU,WAAW;AACjD,SAAK,gBAAgB,IAAI;AAEzB,SAAK,gBAAgB;AAErB,SAAK,cAAc,MAAM,KAAK;AAE9B,SAAK,cAAc;AAEnB,QAAI,kBAAkB,KAAK,iBAAiB;AAE5C,QAAI,gBAAgB,KAAK;AAEzB,QAAI,YAAW,oBAAoB,cAAc,qBAAqB,cAAc,IAAI,aAAa;AACnG,WAAK,gBAAgB;AAAA;AAAA;AAIzB,sBAAmB,UAAU,cAAc,WAAY;AACrD,QAAI,QAAQ;AAEZ,SAAK;AAEL,QAAI,KAAK,MAAM,gBAAgB;AAC7B,WAAK,SAAS,WAAW,WAAY;AAEnC,YAAI,gBAAgB,MAAM;AAE1B,cAAM,gBAAgB,cAAc,oBAAqB,eAAc,IAAI,UAAU,QAAQ,KAAK;AAAA,SACjG,KAAK,MAAM,IAAI;AAAA;AAAA;AAItB,sBAAmB,UAAU,eAAe,SAAU,QAAQ;AAC5D,QAAI,QAAQ,KAAK,WAAW;AAE5B,WAAO,AAAQ,gBAAe,QAAQ,OAAO;AAAA;AAG/C,sBAAmB,UAAU,mBAAmB,SAAU,WAAW;AACnE,QAAI,OAAO,KAAK,MAAM;AACtB,QAAI,QAAO;AACX,QAAI;AACJ,QAAI,OAAO,KAAK;AAChB,SAAK,KAAK,CAAC,UAAU,SAAU,OAAO,WAAW;AAC/C,UAAI,QAAQ,KAAK,YAAY;AAC7B,UAAI,IAAI,KAAK,IAAI,QAAQ;AAEzB,UAAI,IAAI,OAAM;AACZ,gBAAO;AACP,0BAAkB;AAAA;AAAA;AAGtB,WAAO;AAAA;AAGT,sBAAmB,UAAU,cAAc,WAAY;AACrD,QAAI,KAAK,QAAQ;AACf,mBAAa,KAAK;AAClB,WAAK,SAAS;AAAA;AAAA;AAIlB,sBAAmB,UAAU,kBAAkB,SAAU,WAAW;AAClE,QAAI,eAAe,KAAK,MAAM;AAE9B,QAAI,cAAc,KAAK;AACrB,kBAAY,eAAe;AAAA,eAClB,cAAc,KAAK;AAC5B,kBAAY,eAAe;AAAA;AAG7B,SAAK,IAAI,eAAe;AAAA,MACtB,MAAM;AAAA,MACN,cAAc;AAAA,MACd,MAAM,KAAK;AAAA;AAAA;AAIf,sBAAmB,UAAU,qBAAqB,WAAY;AAC5D,QAAI,eAAe,KAAK,MAAM;AAC9B,QAAI,cAAc,KAAK;AACvB,QAAI,aAAa,KAAK;AAEtB,QAAI,aAAa;AACf,eAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,uBAAe,YAAY,MAAM,YAAY,GAAG,YAAY,YAAY,IAAI;AAAA;AAAA;AAIhF,QAAI,YAAY;AACd,eAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,sBAAc,WAAW,MAAM,WAAW,GAAG,YAAY,YAAY,oBAAoB,WAAW,IAAI,aAAa;AAAA;AAAA;AAAA;AAK3H,sBAAmB,OAAO;AAC1B,SAAO;AAAA,EACP;AAEF,6BAA4B,OAAO,UAAU;AAC3C,aAAW,YAAY,MAAM,IAAI;AAEjC,MAAI,UAAU;AACZ,YAAQ;AAAA,WAED;AACH,eAAO,IAAI,gBAAa;AAAA,UACtB,aAAa,MAAM;AAAA,UACnB,QAAQ,CAAC,UAAU;AAAA;AAAA,WAGlB;AACH,eAAO,IAAI,aAAU;AAAA,UACnB,QAAQ,MAAM,QAAQ;AAAA,UACtB,QAAQ,MAAM,QAAQ,IAAI;AAAA;AAAA;AAK5B,eAAO,IAAI;AAAA;AAAA;AAAA;AAKnB,sBAAqB,OAAO,KAAK;AAC/B,SAAO,AAAO,cAAc,MAAM,sBAAsB;AAAA,IACtD,OAAO,IAAI;AAAA,IACX,QAAQ,IAAI;AAAA,KACX,MAAM,IAAI;AAAA;AAGf,yBAAyB,eAAe,SAAS,MAAM,MAAM;AAC3D,MAAI,QAAQ,KAAK;AACjB,MAAI,OAAO,AAAQ,WAAW,cAAc,IAAI,CAAC,gBAAgB,WAAW,QAAQ,IAAI,IAAI,qBAAa,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK;AAEzI,MAAI,OAAO;AACT,SAAK,SAAS;AAAA;AAGhB,SAAO;AAAA;AAQT,oBAAoB,WAAW,gBAAgB,OAAO,KAAK,QAAQ,UAAU;AAC3E,MAAI,QAAQ,eAAe,IAAI;AAE/B,MAAI,CAAC,QAAQ;AACX,QAAI,aAAa,UAAU,IAAI;AAC/B,aAAS,aAAa,YAAY,IAAI,IAAI,GAAG,GAAG;AAChD,WAAO,SAAS,iBAAiB;AACjC,UAAM,IAAI;AACV,gBAAY,SAAS,SAAS;AAAA,SACzB;AACL,WAAO,SAAS;AAChB,UAAM,IAAI;AAEV,gBAAY,SAAS,SAAS;AAAA;AAIhC,MAAI,YAAY,eAAe,aAAa,CAAC;AAC7C,SAAO,SAAS;AAEhB,QAAM,MAAM;AAAA,IACV,WAAW;AAAA,IACX,IAAI;AAAA,KACH,KAAK;AACR,MAAI,aAAa,oBAAoB,UAAU,IAAI;AACnD,MAAI,SAAS,WAAW,KAAK;AAC7B,MAAI,SAAS,WAAW,KAAK;AAC7B,MAAI,eAAe,sBAAsB,UAAU,IAAI,iBAAiB;AAExE,MAAI,cAAc;AAChB,QAAI,IAAK,KAAI,KAAK,KAAK,aAAa;AACpC,QAAI,IAAK,KAAI,KAAK,KAAK,aAAa;AAAA;AAGtC,MAAI,eAAe,UAAU,IAAI;AACjC,MAAI,WAAY,iBAAgB,KAAK,KAAK,KAAK,OAAO;AACtD,SAAO,KAAK;AAOZ,SAAO;AACP,SAAO;AAAA;AAGT,uBAAuB,SAAS,cAAc,WAAW,MAAM,eAAe,aAAa;AACzF,MAAI,QAAQ,UAAU;AACpB;AAAA;AAGF,MAAI,eAAe,cAAc,SAAS;AAC1C,MAAI,UAAU,KAAK,YAAY,cAAc,UAAU,IAAI,SAAS;AAEpE,MAAI,eAAe,CAAC,aAAa,IAAI,aAAa,OAAO;AACvD,YAAQ,KAAK;AAAA,MACX,GAAG;AAAA,MACH,GAAG;AAAA;AAEL,oBAAgB,aAAa,KAAK;AAAA,MAChC,OAAO;AAAA,QACL,IAAI;AAAA;AAAA;AAAA,SAGH;AACL,QAAI,eAAe;AAAA,MACjB,UAAU,aAAa,IAAI,qBAAqB;AAAA,MAChD,QAAQ,aAAa,IAAI,mBAAmB;AAAA;AAE9C,YAAQ,cAAc,MAAM;AAC5B,YAAQ,UAAU;AAAA,MAChB,GAAG;AAAA,MACH,GAAG;AAAA,OACF;AACH,oBAAgB,aAAa,UAAU;AAAA,MACrC,OAAO;AAAA,QACL,IAAI;AAAA;AAAA,OAEL;AAAA;AAAA;AAIP,IAAO,6BAAQ;;;ACpsBR,+BAA+B,WAAW;AAC/C,YAAU,eAAe;AAAA,IACvB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,KACP,SAAU,SAAS,SAAS,KAAK;AAClC,QAAI,gBAAgB,QAAQ,aAAa;AAEzC,QAAI,iBAAiB,QAAQ,gBAAgB,MAAM;AACjD,oBAAc,gBAAgB,QAAQ;AAEtC,UAAI,CAAC,cAAc,IAAI,QAAQ,SAAS,cAAc,gBAAgB,cAAc,gBAAgB;AAClG,sBAAc,aAAa;AAE3B,YAAI,eAAe;AAAA,UACjB,MAAM;AAAA,UACN,WAAW;AAAA,UACX,MAAM,QAAQ;AAAA;AAAA;AAAA;AAMpB,YAAQ,YAAY,YAAY;AAAA,MAC9B,cAAc,cAAc,IAAI,gBAAgB;AAAA;AAElD,WAAO,SAAS;AAAA,MACd,cAAc,cAAc,OAAO;AAAA,OAClC;AAAA;AAEL,YAAU,eAAe;AAAA,IACvB,MAAM;AAAA,IACN,OAAO;AAAA,IACP,QAAQ;AAAA,KACP,SAAU,SAAS,SAAS;AAC7B,QAAI,gBAAgB,QAAQ,aAAa;AAEzC,QAAI,iBAAiB,QAAQ,aAAa,MAAM;AAC9C,oBAAc,aAAa,QAAQ;AAAA;AAAA;AAAA;;;ACrC1B,8BAA8B,QAAQ;AACnD,MAAI,cAAc,UAAU,OAAO;AAEnC,MAAI,CAAC,AAAO,QAAQ,cAAc;AAChC,kBAAc,cAAc,CAAC,eAAe;AAAA;AAG9C,EAAO,KAAK,aAAa,SAAU,KAAK;AACtC,QAAI,CAAC,KAAK;AACR;AAAA;AAGF,kBAAc;AAAA;AAAA;AAIlB,uBAAuB,KAAK;AAC1B,MAAI,OAAO,IAAI;AACf,MAAI,WAAW;AAAA,IACb,UAAU;AAAA,IACV,QAAQ;AAAA;AAGV,MAAI,SAAS,OAAO;AAClB,QAAI,WAAW,SAAS;AACxB,WAAO,IAAI;AAAA;AAGb,eAAa;AAEb,MAAI,IAAI,KAAK,oBAAoB;AAC/B,QAAI,eAAe,IAAI,gBAAiB,KAAI,eAAe;AAE3D,QAAI,CAAC,IAAI,cAAc,aAAa;AAClC,mBAAa,WAAW,IAAI;AAAA;AAG9B,QAAI,aAAa,aAAa,UAAU,CAAC,IAAI,cAAc,SAAS;AAClE,mBAAa,OAAO;AACpB,aAAO,aAAa;AAAA;AAGtB,WAAO,IAAI;AAAA;AAGb,EAAO,KAAK,IAAI,QAAQ,IAAI,SAAU,UAAU;AAC9C,QAAI,AAAO,SAAS,aAAa,CAAC,AAAO,QAAQ,WAAW;AAC1D,UAAI,CAAC,IAAI,UAAU,YAAY,IAAI,UAAU,SAAS;AAEpD,iBAAS,QAAQ,SAAS;AAAA;AAG5B,mBAAa;AAAA;AAAA;AAAA;AAKnB,sBAAsB,KAAK;AACzB,MAAI,YAAY,IAAI,aAAc,KAAI,YAAY;AAClD,MAAI,oBAAoB,UAAU,YAAa,WAAU,WAAW;AAEpE,MAAI,QAAQ,IAAI,SAAS,IAAI,SAAS;AACtC,MAAI,cAAc,MAAM,UAAW,OAAM,SAAS;AAClD,MAAI,mBAAmB;AAAA,IACrB,QAAQ;AAAA,IACR,UAAU;AAAA;AAEZ,EAAO,KAAK,OAAO,SAAU,OAAO,MAAM;AACxC,QAAI,CAAC,iBAAiB,SAAS,CAAC,IAAI,aAAa,OAAO;AACtD,kBAAY,QAAQ;AAAA;AAAA;AAIxB,MAAI,kBAAkB,SAAS,CAAC,IAAI,OAAO,aAAa;AACtD,UAAM,WAAW,kBAAkB;AACnC,WAAO,kBAAkB;AAAA;AAAA;AAI7B,aAAa,KAAK,OAAM;AACtB,SAAO,IAAI,eAAe;AAAA;;;AChGrB,mBAAiB,WAAW;AACjC,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAChC,YAAU,yBAAyB,YAAY,WAAY;AAEzD,WAAO;AAAA;AAET,wBAAsB;AACtB,YAAU,qBAAqB;AAAA;;;ACOlB,6BAA6B,YAAY,YAAY;AAClE,MAAI,CAAC,YAAY;AACf,WAAO;AAAA;AAGT,MAAI,eAAe,QAAQ,cAAc,aAAa,CAAC;AAEvD,WAAS,MAAM,GAAG,MAAM,aAAa,QAAQ,OAAO;AAClD,QAAI,aAAa,QAAQ,aAAa,KAAK,aAAa;AACtD,aAAO;AAAA;AAAA;AAIX,SAAO;AAAA;;;ACNT,mBAAmB,KAAK;AACtB,kBAAgB,KAAK,SAAS,CAAC;AAAA;AAIjC,IAAI,UAAQ;AAEZ,IAAI,cAEJ,SAAU,QAAQ;AAChB,YAAU,cAAa;AAEvB,0BAAuB;AACrB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,aAAY;AAKzB,UAAM,gBAAgB;AACtB,WAAO;AAAA;AAOT,eAAY,UAAU,OAAO,SAAU,QAAQ,aAAa,SAAS;AACnE,QAAI,MAAuC;AACzC,UAAI,KAAK,SAAS,UAAU;AAC1B,cAAM,IAAI,MAAM;AAAA;AAAA;AAIpB,SAAK,qBAAqB,QAAQ;AAElC,SAAK,aAAa,QAAQ,SAAS,OAAO;AAAA;AAG5C,eAAY,UAAU,qBAAqB,WAAY;AACrD,QAAI,YAAI,MAAM;AACZ,aAAO;AAAA;AAGT,QAAI,aAAa,KAAK;AACtB,WAAO,KAAK,WAAW,gBAAgB,cAAc,WAAW;AAAA;AAOlE,eAAY,UAAU,cAAc,SAAU,QAAQ,SAAS;AAC7D,SAAK,aAAa,QAAQ,SAAS,OAAO;AAAA;AAG5C,eAAY,UAAU,eAAe,SAAU,QAAQ,SAAS,eAAe,QAAQ;AACrF,QAAI,gBAAgB,KAAK;AAEzB,QAAI,CAAC,eAAe;AAClB,cAAQ,WAAW,SAAU,aAAa;AAExC,YAAI,YAAY,YAAY,IAAI,KAAK,UAAU;AAC/C,YAAI,cAAc,QAAM,aAAa;AAErC,YAAI,CAAC,aAAa,CAAC,UAAU,MAAM;AACjC,kBAAM,aAAa,iBAAiB;AACpC;AAAA;AAGF,YAAI,CAAC,aAAa;AAChB,cAAI,QAAQ;AAEV,sBAAU;AAAA;AAGZ,UAAO,KAAK,UAAU,MAAM,SAAU,MAAM;AAE1C,gBAAI,gBAAgB,OAAO;AACzB,wBAAU,KAAK;AACf,wBAAU,KAAK;AAAA,mBACV;AACL,wBAAU;AAAA;AAAA;AAGd,wBAAc,KAAK,4BAA4B,WAAW,MAAM;AAIhE,UAAO,OAAO,aAAa;AAAA,YACzB,UAAU,KAAK;AAAA,YAEf,aAAa,YAAY;AAAA,YACzB,MAAM,YAAY;AAAA,YAClB,eAAe;AAAA;AAEjB,sBAAY,eAAe;AAAA,eACtB;AACL,sBAAY,aAAa,WAAW,SAAS;AAAA;AAG/C,gBAAM,aAAa,iBAAiB;AAAA,SACnC;AAAA;AAAA;AAIP,eAAY,UAAU,gBAAgB,SAAU,WAAW,gBAAgB,UAAU;AACnF,QAAI,OAAO,KAAK;AAChB,QAAI,QAAQ,KAAK,YAAY;AAC7B,QAAI,WAAW,KAAK,QAAQ;AAC5B,WAAO,oBAAoB,WAAW;AAAA,MACpC,QAAQ,KAAK;AAAA,MACb,QAAQ,CAAC,oBAAoB,aAAa;AAAA,QACxC,MAAM;AAAA,QACN;AAAA,QACA,QAAQ,CAAC;AAAA,QACT,SAAS,SAAS;AAAA;AAAA;AAAA;AAKxB,eAAY,UAAU,UAAU,WAAY;AAC1C,WAAO,KAAK;AAAA;AAGd,eAAY,UAAU,UAAU,SAAU,MAAM;AAC9C,SAAK,QAAQ;AAAA;AAGf,eAAY,2BAA2B,SAAU,aACjD,eAAe;AACb,WAAO,QAAM,aAAa;AAAA;AAG5B,eAAY,OAAO;AACnB,eAAY,eAAe,CAAC,UAAU,QAAQ,SAAS;AACvD,SAAO;AAAA,EACP;AAEF,AAAO,MAAM,aAAa,gBAAgB;AAC1C,IAAO,sBAAQ;;;AClJf,IAAI,iBAEJ,SAAU,QAAQ;AAChB,YAAU,iBAAgB;AAE1B,6BAA0B;AACxB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,gBAAe;AAC5B,WAAO;AAAA;AAGT,kBAAe,UAAU,8BAA8B,SAAU,WAAW,mBAAmB,SAAS;AACtG,WAAO,IAAI,gBAAe,WAAW,mBAAmB;AAAA;AAG1D,kBAAe,OAAO;AACtB,kBAAe,gBAAgB;AAAA,IAC7B,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,QAAQ;AAAA,IACR,YAAY;AAAA,IAGZ,SAAS;AAAA,MACP,SAAS;AAAA;AAAA,IAEX,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ,WAAW;AAAA,MACT,aAAa;AAAA;AAAA,IAEf,UAAU;AAAA,MACR,OAAO;AAAA,QACL,MAAM;AAAA;AAAA;AAAA;AAIZ,SAAO;AAAA,EACP;AAEF,IAAO,yBAAQ;;;ACzCf,iBAAiB,MAAM;AACrB,SAAO,CAAE,OAAM,WAAW,KAAK,OAAO,MAAM,WAAW,KAAK;AAAA;AAG9D,kBAAkB,MAAM;AACtB,SAAO,CAAC,MAAM,WAAW,KAAK,OAAO,CAAC,MAAM,WAAW,KAAK;AAAA;AAG9D,wCAAwC,YAAY,MAAM,cAAc,eAAe,iBAAiB,kBAAkB;AACxH,MAAI,WAAW;AACf,MAAI,UAAU,mBAAmB,MAAM;AAGvC,MAAI,cAAc,UAAU,KAAK,mBAAmB,0BAA0B;AAC9E,MAAI,QAAQ,aAAa,MAAM,aAAa;AAC5C,MAAI,YAAY,KAAK,iBAAiB,aAAa,OAAO;AAC1D,WAAS,mBAAmB,KAAK,IAAI,cAAc;AACnD,WAAS,oBAAoB,KAAK,IAAI,aAAa;AACnD,MAAI,gBAAgB,KAAK,IAAI,eAAe;AAE5C,MAAI,YAAY,AAAW,aAAa,KAAK,IAAI,eAAe;AAChE,cAAY,KAAK,IAAI,WAAW;AAEhC,MAAI,aAAa,GAAG;AAClB,aAAS,oBAAoB,CAAC,SAAS,kBAAkB,QAAQ;AAAA;AAGnE,SAAO,CAAC,UAAU;AAAA;AAIpB,IAAI,uBAAuB;AAAA,EACzB,KAAK,MAAM,gCAAgC;AAAA,EAC3C,KAAK,MAAM,gCAAgC;AAAA,EAC3C,SAAS,MAAM,gCAAgC;AAAA,EAC/C,QAAQ,MAAM,gCAAgC;AAAA;AAQzC,uBAAuB,aAAa,MAAM;AAC/C,MAAI,OAAO,YAAY;AACvB,MAAI,WAAW,YAAY;AAK3B,MAAI,QAAQ,CAAC,SAAS,SAAS,CAAC,QAAQ,KAAK,UAAU,UAAU;AAC/D,QAAI,OAAO,SAAS;AACpB,QAAI,WAAW,aAAY,MAAM,MAAM,UAAU;AAGjD,WAAO,MAAM;AAEb,QAAI,KAAK,QAAQ,qBAAqB,KAAK,SAAS,SAAS,YAAY,SAAS,WAAW;AAC3F,UAAI,kBAAkB,QAAQ,MAAM,SAAS,SAAS;AACtD,UAAI,mBAAmB,QAAQ,MAAM,SAAS,UAAU;AACxD,UAAI,YAAY,qBAAqB,KAAK,MAAM,MAAM,SAAS,aAAa,SAAS,cAAc,iBAAiB;AACpH,WAAK,QAAQ,UAAU;AAGvB,WAAK,QAAQ,UAAU;AAAA,WAClB;AAEL,UAAI,QAAQ,CAAC,KAAK,SAAS,OAAO,KAAK,QAAQ,KAAK,YAAY,KAAK,SAAS,OAAO,KAAK,QAAQ,KAAK;AAEvG,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,YAAI,qBAAqB,MAAM,KAAK;AAClC,gBAAM,KAAK,aAAa,MAAM,KAAK,aAAa,KAAK,KAAK,MAAM;AAAA;AAAA;AAIpE,WAAK,QAAQ;AAAA;AAAA;AAIjB,SAAO;AAAA;AAEF,sBAAqB,MAAM,MAAM,UAAU,aAAa;AAC7D,MAAI,MAAM;AAEV,MAAI,KAAK,cAAc,QAAQ,KAAK,YAAY,MAAM;AACpD,QAAI,eAAe,KAAK,cAAc,OAAO,KAAK,aAAa,KAAK,cAAc,KAAK;AACvF,QAAI,YAAY,SAAS,QAAQ,kBAAkB,aAAa,IAAI;AACpE,QAAI,WAAW,SAAS,aAAa,IAAI;AACzC,QAAI,cAAc,KAAK,aAAa,IAAI,SAAS;AAAA,SAC5C;AACL,QAAI,WAAW,YAAY;AAC3B,QAAI,YAAY,SAAS,aAAa,IAAI;AAC1C,QAAI,cAAc,KAAK,aAAa,IAAI,SAAS;AACjD,QAAI,eAAe,KAAK,aAAa,IAAI,UAAU;AAAA;AAGrD,SAAO;AAAA;AAGT,2BAA2B,aAAa,SAAS;AAC/C,MAAI,UAAU,YAAY,UAAU,iBAAiB;AACrD,SAAO,WAAW,QAAQ;AAAA;AAQrB,qBACP,UAAU,MAAM;AAEd,SAAO,YAAY,SAAS,eAAe,KAAK,SAAS,CAAC,QAAQ,QAAQ,SAAS,YAAY,KAAK,SAAS;AAAA;AAExG,oCAAoC,YAAY,MAAM;AAC3D,SAAO,aAAa,SAAU,MAAM,SAAS,WAAW,UAAU;AAChE,QAAI,SAAS,WAAW,IACtB,KAAK,SAAS,KAAK,MAAM,YAAY,KAAK;AAC5C,WAAO,eAAe,QAAQ,KAAK;AAAA,MACjC,SAAU,MAAM,SAAS,WAAW,UAAU;AAChD,WAAO,eAAe,KAAK,OAAO,KAAK;AAAA;AAAA;AAGpC,sBAAsB,MAAM,cAAc,MAAM;AACrD,MAAI,SAAS,WAAW;AACtB,QAAI,QAAQ;AACZ,QAAI,UAAU;AACd,SAAK,KAAK,cAAc,SAAU,KAAK,KAAK;AAC1C,UAAI,CAAC,MAAM,MAAM;AACf,iBAAS;AACT;AAAA;AAAA;AAGJ,WAAO,QAAQ;AAAA,aACN,SAAS,UAAU;AAC5B,WAAO,KAAK,UAAU;AAAA,SACjB;AAEL,WAAO,KAAK,cAAc,cAAc,SAAS,QAAQ,IAAI;AAAA;AAAA;;;ACzIjE,IAAI,UAAQ;AAEZ,IAAI,aAEJ,SAAU,QAAQ;AAChB,YAAU,aAAY;AAEtB,yBAAsB;AACpB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,YAAW;AACxB,WAAO;AAAA;AAGT,cAAW,UAAU,OAAO,WAAY;AACtC,SAAK,iBAAiB;AAAA;AAGxB,cAAW,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK;AACjE,QAAI,QAAQ;AAEZ,QAAI,iBAAiB,KAAK;AAC1B,mBAAe,KAAK,SAAU,MAAM;AAClC,cAAM,MAAM,OAAO;AAAA;AAErB,YAAQ,WAAW,SAAU,aAAa;AACxC,UAAI,eAAc,oBAAY,yBAAyB,aAAa,MAAM;AAC1E,sBAAe,MAAM,aAAa,aAAa,cAAa,SAAS;AAAA;AAEvE,mBAAe,KAAK,SAAU,MAAM;AAClC,OAAC,QAAM,MAAM,QAAQ,MAAM,MAAM,OAAO,KAAK;AAAA;AAAA;AAIjD,cAAW,UAAU,WAAW,SAAU,WAAW;AACnD,YAAM,WAAW,OAAO;AAAA;AAG1B,cAAW,UAAU,aAAa,SAAU,iBAAiB;AAC3D,QAAI,QAAQ;AAEZ,SAAK,iBAAiB,SAAU,aAAa;AAC3C,UAAI,cAAc,oBAAY,yBAAyB,aAAa,MAAM;AAE1E,UAAI,aAAa;AACf,YAAI,OAAO,YAAY;AACvB,aAAK,kBAAkB,SAAU,IAAI;AACnC,cAAI,IAAI;AACN,sBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAOpB,cAAW,OAAO;AAClB,SAAO;AAAA,EACP;AAEF,IAAO,qBAAQ;;;ACtDf,4BAA4B,QAAQ,aAAa,KAAK;AACpD,MAAI,WAAW,YAAY;AAC3B,SAAO,KAAK,SAAU,KAAK;AACzB,QAAI,YAAY,OAAO,aAAa;AACpC,QAAI;AACJ,QAAI,MAAM,AAAW,cAAa,UAAU,IAAI,MAAM,IAAI;AAC1D,QAAI,MAAM,AAAW,cAAa,UAAU,IAAI,MAAM,IAAI;AAE1D,QAAI,CAAC,MAAM,QAAQ,CAAC,MAAM,MAAM;AAC9B,cAAQ,CAAC,KAAK;AAAA,eAEP,YAAY,mBAAmB;AAEpC,cAAQ,YAAY,kBAAkB,OAAO,UAAU,OAAO,YAAY;AAAA,eACjE,UAAU;AACnB,UAAI,IAAI,OAAO,IAAI,SAAS,WAAW,IAAI;AAC3C,UAAI,IAAI,OAAO,IAAI,SAAS,WAAW,IAAI;AAC3C,cAAQ,SAAS,YAAY,CAAC,GAAG;AAAA;AAIrC,QAAI,CAAC,MAAM,MAAM;AACf,YAAM,KAAK;AAAA;AAGb,QAAI,CAAC,MAAM,MAAM;AACf,YAAM,KAAK;AAAA;AAGb,WAAO,cAAc,KAAK;AAAA;AAAA;AAI9B,IAAI,gBAEJ,SAAU,QAAQ;AAChB,YAAU,gBAAe;AAEzB,4BAAyB;AACvB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,eAAc;AAC3B,WAAO;AAAA;AAGT,iBAAc,UAAU,kBAAkB,SAAU,gBAAgB,SAAS,KAAK;AAChF,YAAQ,WAAW,SAAU,aAAa;AACxC,UAAI,UAAU,oBAAY,yBAAyB,aAAa;AAEhE,UAAI,SAAS;AACX,2BAAmB,QAAQ,WAAW,aAAa;AACnD,aAAK,eAAe,IAAI,YAAY,IAAI;AAAA;AAAA,OAEzC;AAAA;AAGL,iBAAc,UAAU,eAAe,SAAU,aAAa,SAAS,SAAS,KAAK;AACnF,QAAI,WAAW,YAAY;AAC3B,QAAI,WAAW,YAAY;AAC3B,QAAI,aAAa,YAAY;AAC7B,QAAI,gBAAgB,KAAK;AACzB,QAAI,aAAa,cAAc,IAAI,aAAa,cAAc,IAAI,UAAU,IAAI;AAChF,QAAI,SAAS,WAAW,UAAU,aAAa;AAE/C,YAAQ,QAAQ;AAChB,uBAAmB,QAAQ,WAAW,aAAa;AACnD,WAAO,KAAK,SAAU,KAAK;AACzB,UAAI,YAAY,OAAO,aAAa;AACpC,UAAI,SAAS,UAAU,WAAW;AAClC,UAAI,aAAa,UAAU,WAAW;AACtC,UAAI,eAAe,UAAU,WAAW;AACxC,UAAI,eAAe,UAAU,WAAW;AACxC,UAAI,mBAAmB,UAAU,WAAW;AAE5C,UAAI,WAAW,WAAW,WAAW,eAAe,WAAW,iBAAiB,WAAW,eAAe;AACxG,YAAI,SAAS,QAAQ,YAAY;AACjC,YAAI,aAAa,QAAQ,cAAc;AAEvC,YAAI,WAAW,SAAS;AACtB,mBAAS,OAAO,QAAQ;AAAA;AAG1B,YAAI,WAAW,aAAa;AAE1B,uBAAa,WAAW,QAAQ;AAAA;AAGlC,YAAI,WAAW,eAAe;AAC5B,yBAAe,aAAa,QAAQ;AAAA;AAGtC,YAAI,WAAW,eAAe;AAC5B,yBAAe,aAAa,QAAQ;AAAA;AAAA;AAIxC,UAAI,QAAQ,UAAU,SAAS,aAAa;AAC5C,UAAI,QAAQ,kBAAkB,YAAY;AAE1C,UAAI,CAAC,MAAM,MAAM;AACf,cAAM,OAAO;AAAA;AAGf,aAAO,cAAc,KAAK;AAAA,QACxB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA;AAAA;AAIJ,eAAW,WAAW;AACtB,SAAK,MAAM,IAAI,WAAW;AAG1B,WAAO,kBAAkB,SAAU,IAAI;AACrC,SAAG,SAAS,SAAU,OAAO;AAC3B,kBAAU,OAAO,YAAY;AAAA;AAAA;AAGjC,SAAK,SAAS;AACd,eAAW,MAAM,SAAS,QAAQ,IAAI,aAAa,YAAY,IAAI;AAAA;AAGrE,iBAAc,OAAO;AACrB,SAAO;AAAA,EACP;AAEF,oBAAoB,UAAU,aAAa,SAAS;AAClD,MAAI;AAEJ,MAAI,UAAU;AACZ,qBAAiB,IAAI,YAAY,SAAS,YAAY,SAAU,UAAU;AACxE,UAAI,OAAO,YAAY,UAAU,iBAAiB,YAAY,UAAU,aAAa,cAAc;AAEnG,aAAO,OAAO,OAAO,IAAI,OAAO;AAAA,QAC9B,MAAM;AAAA,QAEN,aAAa;AAAA;AAAA;AAAA,SAGZ;AACL,qBAAiB,CAAC;AAAA,MAChB,MAAM;AAAA,MACN,MAAM;AAAA;AAAA;AAIV,MAAI,SAAS,IAAI,mBAAW,gBAAgB;AAC5C,MAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,MAAmB,eAAe;AAEzE,MAAI,UAAU;AACZ,cAAU,OAAO,SAAS,MAAmB,aAAY;AAAA;AAG3D,MAAI,iBAAiB,AAAa,2BAA2B,CAAC,CAAC,UAAU;AACzE,SAAO,SAAS,SAAS,MAAM;AAC/B,SAAO;AAAA;AAGT,IAAO,wBAAQ;;;AC5LR,mBAAiB,WAAW;AACjC,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAChC,YAAU,qBAAqB,SAAU,KAAK;AAC5C,QAAI,oBAAoB,IAAI,QAAQ,cAAc;AAEhD,UAAI,YAAY,IAAI,aAAa;AAAA;AAAA;AAAA;;;ACYvC,IAAI,gBAEJ,SAAU,QAAQ;AAChB,YAAU,gBAAe;AAEzB,4BAAyB;AACvB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,eAAc;AAC3B,WAAO;AAAA;AAGT,iBAAc,UAAU,8BAA8B,SAAU,WAAW,mBAAmB,SAAS;AACrG,WAAO,IAAI,eAAc,WAAW,mBAAmB;AAAA;AAGzD,iBAAc,OAAO;AACrB,iBAAc,gBAAgB;AAAA,IAC5B,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,QAAQ,CAAC,UAAU;AAAA,IACnB,YAAY,CAAC,GAAG;AAAA,IAEhB,cAAc;AAAA,IACd,WAAW;AAAA,IACX,SAAS;AAAA,MACP,SAAS;AAAA;AAAA,IAEX,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,MACV,UAAU;AAAA;AAAA,IAEZ,WAAW;AAAA,MACT,MAAM;AAAA;AAAA,IAER,UAAU;AAAA,MACR,OAAO;AAAA,QACL,MAAM;AAAA;AAAA,MAER,WAAW;AAAA,QACT,OAAO;AAAA;AAAA;AAAA,IAGX,iBAAiB;AAAA;AAEnB,SAAO;AAAA,EACP;AAEF,IAAO,wBAAQ;;;ACvCf,IAAI,UAAQ;AAEZ,IAAI,oBAAoB,SAAU,aAAa,UAAU,SAAS,MAAM;AACtE,MAAI,OAAO,YAAY;AACvB,MAAI;AAEJ,MAAI,CAAC,QAAQ,OAAO;AAElB,QAAI,SAAS,KAAK;AAElB,QAAI,WAAW,SAAS,WAAW,SAAS,WAAW,aAAa,WAAW,YAI5E,KAAK,SAAS,QAAQ,KAAK,SAAS,MAAM;AAC3C,UAAI,aAAY;AAChB,UAAI,QAAQ;AAEZ,UAAI,KAAK,SAAS,QAAQ,KAAK,SAAS,MAAM;AAC5C,qBAAY,SAAS,QAAQ,KAAK,SAAS,OAAO,MAAM;AACxD,gBAAQ,SAAS,KAAK,OAAO,KAAK;AAAA,aAC7B;AACL,YAAI,WAAW,AAAa,aAAY,MAAM,MAAM,UAAU;AAC9D,qBAAY,SAAS;AACrB,YAAI,eAAe,oBAAoB,MAAM,SAAS;AACtD,gBAAQ,AAAa,aAAa,MAAM,cAAc;AAAA;AAGxD,UAAI,aAAa,WAAU,QAAQ,MAAM,IAAI;AAC7C,UAAI,YAAY,IAAI;AAEpB,UAAI,SAAS,MAAM;AACnB,UAAI,OAAO;AAAA,QACT,OAAO;AAAA;AAET,aAAO,OAAO;AACd,aAAO,QAAQ;AACf,aAAO,MAAM,aAAa;AAC1B,WAAK,MAAM,aAAa;AACxB,UAAI,YAAY,QAAQ,IAAI;AAE5B,UAAI,aAAa,KAAK,OAAO,UAAU,UAAU;AAC/C,gBAAQ,CAAC,MAAM,QAAQ,KAAK,IAAI,WAAW;AAAA;AAG7C,aAAO,MAAM,cAAc,KAAK,MAAM,cAAc;AACpD,kBAAY,CAAC,QAAQ,MAAM;AAAA,QACzB,MAAM;AAAA,QACN,YAAY,KAAK;AAAA,QAEjB;AAAA;AAAA,WAEG;AAEL,UAAI,MAAuC;AACzC,iBAAS;AAAA;AAGX,kBAAY;AAAA;AAAA,SAET;AACL,gBAAY;AAAA;AAGd,MAAI,iBAAiB,CAAC,AAAa,cAAc,aAAa,UAAU,KAAK,AAAa,cAAc,aAAa,UAAU,KAAK,OAAO,IAAI,UAAU;AAEzJ,iBAAe,GAAG,OAAO,eAAe,GAAG,QAAQ;AAEnD,QAAM,eAAe,IAAI,eAAe;AACxC,QAAM,eAAe,IAAI,eAAe;AACxC,SAAO;AAAA;AAGT,qBAAqB,KAAK;AACxB,SAAO,CAAC,MAAM,QAAQ,CAAC,SAAS;AAAA;AAIlC,8BAA8B,UAAU,WAAW,SAAS,UAAU;AACpE,MAAI,gBAAgB,IAAI;AACxB,MAAI,UAAU,SAAS,WAAW;AAClC,SAAO,YAAY,UAAU,mBAAmB,YAAY,QAAQ,mBAAmB,UAAU,cAAc,QAAQ,aAAa,SAAS,QAAQ,SAAS,YAAY,UAAU;AAAA;AAGtL,wBAAwB,UAAU,MAAM;AACtC,MAAI,SAAS,SAAS,eAAe;AACnC,QAAI,YAAY,KAAK,GAAG;AACxB,QAAI,UAAU,KAAK,GAAG;AAOtB,QAAI,aAAa,WAAY,sBAAqB,GAAG,WAAW,SAAS,aAAa,qBAAqB,GAAG,WAAW,SAAS,YAAY;AAC5I,aAAO;AAAA;AAAA;AAIX,SAAO,AAAa,YAAW,UAAU,KAAK,OAAO,AAAa,YAAW,UAAU,KAAK;AAAA;AAG9F,qCAAqC,MAAM,KAAK,QAAQ,aAAa,KAAK;AACxE,MAAI,WAAW,YAAY;AAC3B,MAAI,YAAY,KAAK,aAAa;AAClC,MAAI;AACJ,MAAI,MAAM,AAAW,cAAa,UAAU,IAAI,MAAM,IAAI;AAC1D,MAAI,MAAM,AAAW,cAAa,UAAU,IAAI,MAAM,IAAI;AAE1D,MAAI,CAAC,MAAM,QAAQ,CAAC,MAAM,MAAM;AAC9B,YAAQ,CAAC,KAAK;AAAA,SACT;AAEL,QAAI,YAAY,mBAAmB;AAEjC,cAAQ,YAAY,kBAAkB,KAAK,UAAU,KAAK,YAAY;AAAA,WACjE;AACL,UAAI,OAAO,SAAS;AACpB,UAAI,IAAI,KAAK,IAAI,KAAK,IAAI;AAC1B,UAAI,IAAI,KAAK,IAAI,KAAK,IAAI;AAC1B,cAAQ,SAAS,YAAY,CAAC,GAAG;AAAA;AAYnC,QAAI,uBAAuB,UAAU,gBAAgB;AAEnD,UAAI,QAAQ,SAAS,QAAQ;AAC7B,UAAI,QAAQ,SAAS,QAAQ;AAC7B,UAAI,OAAO,SAAS;AAEpB,UAAI,YAAY,KAAK,IAAI,KAAK,IAAI,OAAO;AACvC,cAAM,KAAK,MAAM,cAAc,MAAM,YAAY,SAAS,IAAI;AAAA,iBACrD,YAAY,KAAK,IAAI,KAAK,IAAI,OAAO;AAC9C,cAAM,KAAK,MAAM,cAAc,MAAM,YAAY,SAAS,IAAI;AAAA;AAAA;AAKlE,QAAI,CAAC,MAAM,MAAM;AACf,YAAM,KAAK;AAAA;AAGb,QAAI,CAAC,MAAM,MAAM;AACf,YAAM,KAAK;AAAA;AAAA;AAIf,OAAK,cAAc,KAAK;AAAA;AAG1B,IAAI,eAEJ,SAAU,QAAQ;AAChB,YAAU,eAAc;AAExB,2BAAwB;AACtB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,cAAa;AAC1B,WAAO;AAAA;AAGT,gBAAa,UAAU,kBAAkB,SAAU,eAAe,SAAS,KAAK;AAC9E,YAAQ,WAAW,SAAU,aAAa;AACxC,UAAI,UAAU,oBAAY,yBAAyB,aAAa;AAEhE,UAAI,SAAS;AACX,YAAI,WAAW,QAAQ;AACvB,YAAI,aAAa,QAAM,SAAS;AAChC,YAAI,WAAW,QAAM,SAAS;AAE9B,mBAAW,KAAK,SAAU,KAAK;AAC7B,sCAA4B,YAAY,KAAK,MAAM,aAAa;AAChE,sCAA4B,UAAU,KAAK,OAAO,aAAa;AAAA;AAGjE,iBAAS,KAAK,SAAU,KAAK;AAC3B,mBAAS,cAAc,KAAK,CAAC,WAAW,cAAc,MAAM,SAAS,cAAc;AAAA;AAErF,aAAK,eAAe,IAAI,YAAY,IAAI;AAAA;AAAA,OAEzC;AAAA;AAGL,gBAAa,UAAU,eAAe,SAAU,aAAa,SAAS,SAAS,KAAK;AAClF,QAAI,WAAW,YAAY;AAC3B,QAAI,WAAW,YAAY;AAC3B,QAAI,aAAa,YAAY;AAC7B,QAAI,cAAc,KAAK;AACvB,QAAI,WAAW,YAAY,IAAI,aAAa,YAAY,IAAI,UAAU,IAAI;AAC1E,SAAK,MAAM,IAAI,SAAS;AACxB,QAAI,SAAS,WAAW,UAAU,aAAa;AAC/C,QAAI,WAAW,OAAO;AACtB,QAAI,SAAS,OAAO;AACpB,QAAI,WAAW,OAAO;AACtB,YAAM,SAAS,OAAO;AACtB,YAAM,SAAS,KAAK;AAEpB,YAAQ,QAAQ;AAKhB,QAAI,aAAa,QAAQ,IAAI;AAC7B,QAAI,aAAa,QAAQ,IAAI;AAC7B,QAAI,eAAe,QAAQ,IAAI;AAC/B,QAAI,eAAe,QAAQ,IAAI;AAE/B,QAAI,CAAC,QAAQ,aAAa;AACxB,mBAAa,CAAC,YAAY;AAAA;AAG5B,QAAI,CAAC,QAAQ,aAAa;AACxB,mBAAa,CAAC,YAAY;AAAA;AAG5B,QAAI,CAAC,QAAQ,eAAe;AAC1B,qBAAe,CAAC,cAAc;AAAA;AAGhC,QAAI,CAAC,QAAQ,eAAe;AAC1B,qBAAe,CAAC,cAAc;AAAA;AAIhC,WAAO,KAAK,KAAK,SAAU,KAAK;AAC9B,gCAA0B,UAAU,KAAK;AACzC,gCAA0B,QAAQ,KAAK;AAAA;AAGzC,aAAS,KAAK,SAAU,KAAK;AAC3B,UAAI,YAAY,SAAS,aAAa,KAAK,SAAS,aAAa;AAIjE,eAAS,cAAc,KAAK,CAAC,SAAS,cAAc,MAAM,OAAO,cAAc;AAE/E,UAAI,UAAU,UAAU,MAAM;AAC5B,kBAAU,SAAS,SAAS,cAAc,KAAK,SAAS;AAAA;AAG1D,eAAS,cAAc,KAAK;AAAA,QAC1B,sBAAsB,SAAS,cAAc,KAAK;AAAA,QAClD,kBAAkB,SAAS,cAAc,KAAK;AAAA,QAC9C,kBAAkB,SAAS,cAAc,KAAK;AAAA,QAC9C,gBAAgB,SAAS,cAAc,KAAK;AAAA,QAC5C,YAAY,SAAS,cAAc,KAAK;AAAA,QACxC,oBAAoB,OAAO,cAAc,KAAK;AAAA,QAC9C,gBAAgB,OAAO,cAAc,KAAK;AAAA,QAC1C,gBAAgB,OAAO,cAAc,KAAK;AAAA,QAC1C,cAAc,OAAO,cAAc,KAAK;AAAA,QACxC,UAAU,OAAO,cAAc,KAAK;AAAA,QACpC,OAAO;AAAA;AAAA;AAGX,aAAS,WAAW;AAGpB,WAAO,KAAK,kBAAkB,SAAU,IAAI,KAAK;AAC/C,SAAG,SAAS,SAAU,OAAO;AAC3B,kBAAU,OAAO,YAAY;AAAA;AAAA;AAIjC,uCAAmC,MAAM,KAAK,QAAQ;AACpD,UAAI,YAAY,KAAK,aAAa;AAClC,kCAA4B,MAAM,KAAK,QAAQ,aAAa;AAC5D,UAAI,QAAQ,UAAU,SAAS,aAAa;AAE5C,UAAI,MAAM,QAAQ,MAAM;AACtB,cAAM,OAAO,kBAAkB,YAAY;AAAA;AAG7C,WAAK,cAAc,KAAK;AAAA,QACtB,kBAAkB,UAAU,IAAI;AAAA,QAEhC,cAAc,UAAU,UAAU,IAAI,gBAAgB,OAAO,aAAa,SAAS,IAAI;AAAA,QACvF,cAAc,UAAU,UAAU,IAAI,gBAAgB,OAAO,aAAa,SAAS,IAAI;AAAA,QAEvF,YAAY,UAAU,UAAU,IAAI,eAAe,WAAW,SAAS,IAAI;AAAA,QAC3E,QAAQ,UAAU,UAAU,IAAI,UAAU,OAAO,WAAW,SAAS,IAAI;AAAA,QACzE;AAAA;AAAA;AAIJ,SAAK,SAAS;AACd,aAAS,MAAM,SAAS,QAAQ,IAAI,aAAa,YAAY,IAAI;AAAA;AAGnE,gBAAa,OAAO;AACpB,SAAO;AAAA,EACP;AAEF,oBAAoB,UAAU,aAAa,SAAS;AAClD,MAAI;AAEJ,MAAI,UAAU;AACZ,qBAAiB,IAAI,YAAY,SAAS,YAAY,SAAU,UAAU;AACxE,UAAI,OAAO,YAAY,UAAU,iBAAiB,YAAY,UAAU,aAAa,cAAc;AAEnG,aAAO,OAAO,OAAO,IAAI,OAAO;AAAA,QAC9B,MAAM;AAAA,QAEN,aAAa;AAAA;AAAA;AAAA,SAGZ;AACL,qBAAiB,CAAC;AAAA,MAChB,MAAM;AAAA,MACN,MAAM;AAAA;AAAA;AAIV,MAAI,WAAW,IAAI,mBAAW,gBAAgB;AAC9C,MAAI,SAAS,IAAI,mBAAW,gBAAgB;AAE5C,MAAI,WAAW,IAAI,mBAAW,IAAI;AAClC,MAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,MAAM,mBAAmB,aAAa,UAAU;AAEvF,MAAI,UAAU;AACZ,cAAU,OAAO,SAAS,MAAM,gBAAgB;AAAA;AAGlD,MAAI,iBAAiB,AAAa,2BAA2B,CAAC,CAAC,UAAU;AACzE,WAAS,SAAS,IAAI,SAAS,SAAU,MAAM;AAC7C,WAAO,KAAK;AAAA,MACV,MAAM;AACV,SAAO,SAAS,IAAI,SAAS,SAAU,MAAM;AAC3C,WAAO,KAAK;AAAA,MACV,MAAM;AACV,WAAS,SAAS,IAAI,SAAS,SAAU,MAAM;AAC7C,WAAO,KAAK;AAAA;AAEd,WAAS,gBAAgB;AACzB,SAAO;AAAA,IACL,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,MAAM;AAAA;AAAA;AAIV,IAAO,uBAAQ;;;ACzXR,mBAAiB,WAAW;AACjC,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAChC,YAAU,qBAAqB,SAAU,KAAK;AAC5C,QAAI,oBAAoB,IAAI,QAAQ,aAAa;AAE/C,UAAI,WAAW,IAAI,YAAY;AAAA;AAAA;AAAA;;;ACYrC,IAAI,gBAEJ,SAAU,QAAQ;AAChB,YAAU,gBAAe;AAEzB,4BAAyB;AACvB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,eAAc;AAC3B,WAAO;AAAA;AAGT,iBAAc,UAAU,8BAA8B,SAAU,WAAW,mBAAmB,SAAS;AACrG,WAAO,IAAI,eAAc,WAAW,mBAAmB;AAAA;AAGzD,iBAAc,OAAO;AACrB,iBAAc,gBAAgB;AAAA,IAC5B,QAAQ;AAAA,IAER,GAAG;AAAA,IACH,SAAS;AAAA,MACP,SAAS;AAAA;AAAA,IAGX,WAAW;AAAA,IACX,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ,WAAW;AAAA,MAIT,aAAa;AAAA;AAAA,IAEf,UAAU;AAAA,MACR,OAAO;AAAA,QACL,MAAM;AAAA,QACN,UAAU;AAAA;AAAA;AAAA;AAIhB,SAAO;AAAA,EACP;AAEF,IAAO,wBAAQ;;;AChCf,IAAI,UAAQ;AAEZ,IAAI,oBAAoB,SAAU,aAAa,UAAU,SAAS,MAAM;AACtE,MAAI,KAAK,AAAa,cAAc,aAAa,KAAK;AACtD,MAAI,KAAK,AAAa,cAAc,aAAa,KAAK;AAEtD,MAAI,UAAU,GAAG;AACjB,MAAI,UAAU,GAAG;AACjB,UAAQ,KAAK,SAAS,QAAQ,IAAI;AAClC,UAAQ,KAAK,SAAS,QAAQ,IAAI;AAClC,UAAQ,KAAK,SAAS,QAAQ,IAAI;AAClC,UAAQ,KAAK,SAAS,QAAQ,IAAI;AAElC,MAAI,SAAS,SAAS,CAAC,IAAI,IAAI;AAC/B,SAAO,QAAQ,CAAC,GAAG,OAAO,GAAG;AAC7B,SAAO,KAAK,GAAG;AACf,SAAO,KAAK,GAAG;AACf,SAAO,KAAK,GAAG;AACf,SAAO,KAAK,GAAG;AACf,SAAO;AAAA;AAGT,sBAAqB,KAAK;AACxB,SAAO,CAAC,MAAM,QAAQ,CAAC,SAAS;AAAA;AAIlC,8BAA8B,UAAU,WAAW,SAAS,UAAU;AACpE,MAAI,gBAAgB,IAAI;AACxB,SAAO,aAAY,UAAU,mBAAmB,aAAY,QAAQ;AAAA;AAGtE,wBAAwB,UAAU,MAAM;AACtC,MAAI,YAAY,KAAK,MAAM;AAC3B,MAAI,UAAU,KAAK,MAAM;AAEzB,MAAI,uBAAuB,UAAU,gBAAgB;AAOnD,QAAI,aAAa,WAAY,sBAAqB,GAAG,WAAW,SAAS,aAAa,qBAAqB,GAAG,WAAW,SAAS,YAAY;AAC5I,aAAO;AAAA;AAAA;AAIX,SAAO,AAAa,YAAW,UAAU;AAAA,IACvC,OAAO;AAAA,IACP,GAAG,KAAK;AAAA,IACR,GAAG,KAAK;AAAA,QACJ,AAAa,YAAW,UAAU;AAAA,IACtC,OAAO;AAAA,IACP,GAAG,KAAK;AAAA,IACR,GAAG,KAAK;AAAA;AAAA;AAKZ,iCAAiC,MAAM,KAAK,MAAM,aAAa,KAAK;AAClE,MAAI,WAAW,YAAY;AAC3B,MAAI,YAAY,KAAK,aAAa;AAClC,MAAI;AACJ,MAAI,MAAM,AAAW,cAAa,UAAU,IAAI,KAAK,KAAK,IAAI;AAC9D,MAAI,MAAM,AAAW,cAAa,UAAU,IAAI,KAAK,KAAK,IAAI;AAE9D,MAAI,CAAC,MAAM,QAAQ,CAAC,MAAM,MAAM;AAC9B,YAAQ,CAAC,KAAK;AAAA,SACT;AAEL,QAAI,YAAY,mBAAmB;AAEjC,cAAQ,YAAY,kBAAkB,KAAK,UAAU,MAAM;AAAA,WACtD;AACL,UAAI,IAAI,KAAK,IAAI,KAAK,IAAI;AAC1B,UAAI,IAAI,KAAK,IAAI,KAAK,IAAI;AAC1B,UAAI,KAAK,CAAC,GAAG;AACb,eAAS,aAAa,SAAS,UAAU,IAAI;AAC7C,cAAQ,SAAS,YAAY,IAAI;AAAA;AAGnC,QAAI,uBAAuB,UAAU,gBAAgB;AAEnD,UAAI,QAAQ,SAAS,QAAQ;AAC7B,UAAI,QAAQ,SAAS,QAAQ;AAC7B,UAAI,IAAI,KAAK,IAAI,KAAK,IAAI;AAC1B,UAAI,IAAI,KAAK,IAAI,KAAK,IAAI;AAE1B,UAAI,aAAY,IAAI;AAClB,cAAM,KAAK,MAAM,cAAc,MAAM,YAAY,KAAK,OAAO,OAAO,IAAI;AAAA,iBAC/D,aAAY,IAAI;AACzB,cAAM,KAAK,MAAM,cAAc,MAAM,YAAY,KAAK,OAAO,OAAO,IAAI;AAAA;AAAA;AAK5E,QAAI,CAAC,MAAM,MAAM;AACf,YAAM,KAAK;AAAA;AAGb,QAAI,CAAC,MAAM,MAAM;AACf,YAAM,KAAK;AAAA;AAAA;AAIf,SAAO;AAAA;AAGT,IAAI,kBAAkB,CAAC,CAAC,MAAM,OAAO,CAAC,MAAM,OAAO,CAAC,MAAM,OAAO,CAAC,MAAM;AAExE,IAAI,eAEJ,SAAU,QAAQ;AAChB,YAAU,eAAc;AAExB,2BAAwB;AACtB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,cAAa;AAC1B,WAAO;AAAA;AAGT,gBAAa,UAAU,kBAAkB,SAAU,eAAe,SAAS,KAAK;AAC9E,YAAQ,WAAW,SAAU,aAAa;AACxC,UAAI,UAAU,oBAAY,yBAAyB,aAAa;AAEhE,UAAI,SAAS;AACX,YAAI,aAAa,QAAQ;AACzB,mBAAW,KAAK,SAAU,KAAK;AAC7B,cAAI,SAAS,IAAI,iBAAiB,SAAU,KAAK;AAC/C,mBAAO,wBAAwB,YAAY,KAAK,KAAK,aAAa;AAAA;AAGpE,qBAAW,cAAc,KAAK;AAC9B,cAAI,KAAK,WAAW,iBAAiB;AACrC,aAAG,SAAS,UAAU;AAAA;AAAA;AAAA,OAGzB;AAAA;AAGL,gBAAa,UAAU,eAAe,SAAU,aAAa,SAAS,SAAS,KAAK;AAClF,QAAI,WAAW,YAAY;AAC3B,QAAI,WAAW,YAAY;AAC3B,QAAI,aAAa,YAAY;AAC7B,QAAI,eAAe,KAAK;AACxB,QAAI,eAAe,aAAa,IAAI,aAAa,aAAa,IAAI,UAAU;AAAA,MAC1E,OAAO,IAAY;AAAA;AAErB,SAAK,MAAM,IAAI,aAAa;AAC5B,SAAK,SAAS;AACd,QAAI,WAAW,YAAW,UAAU,aAAa;AAEjD,YAAQ,QAAQ;AAEhB,aAAS,KAAK,SAAU,KAAK;AAE3B,UAAI,SAAS,IAAI,iBAAiB,SAAU,KAAK;AAC/C,eAAO,wBAAwB,UAAU,KAAK,KAAK,aAAa;AAAA;AAElE,UAAI,aAAa,SAAS,QAAQ,KAAK;AACvC,UAAI,aAAa,SAAS,QAAQ,KAAK;AACvC,UAAI,cAAc,WAAW;AAC7B,UAAI,cAAc,WAAW;AAC7B,UAAI,eAAe,CAAC,WAAW,MAAM,SAAS,IAAI,MAAM,OAAO,WAAW,MAAM,SAAS,IAAI,MAAM;AACnG,UAAI,eAAe,CAAC,WAAW,MAAM,SAAS,IAAI,MAAM,OAAO,WAAW,MAAM,SAAS,IAAI,MAAM;AACnG,MAAW,IAAI;AACf,MAAW,IAAI;AACf,UAAI,aAAa,CAAE,aAAY,KAAK,aAAa,MAAM,YAAY,KAAK,aAAa,MAAM,YAAY,KAAK,aAAa,MAAM,YAAY,KAAK,aAAa;AAG7J,UAAI,aAAa,CAAC;AAClB,eAAS,cAAc,KAAK;AAAA,QAC1B;AAAA,QACA;AAAA;AAEF,UAAI,QAAQ,SAAS,aAAa,KAAK,SAAS,aAAa;AAC7D,UAAI,QAAQ,kBAAkB,YAAY;AAE1C,UAAI,CAAC,MAAM,MAAM;AACf,cAAM,OAAO;AAEb,YAAI,OAAO,MAAM,SAAS,UAAU;AAClC,gBAAM,OAAO,AAAU,YAAY,MAAM,MAAM;AAAA;AAAA;AAInD,UAAI,CAAC,MAAM,QAAQ;AACjB,cAAM,SAAS;AAAA;AAIjB,eAAS,cAAc,KAAK,SAAS;AAAA;AAEvC,aAAS,KAAK,QAAM,cAAc,MAAM,IAAI,SAAU,KAAK;AACzD,UAAI,WAAS,SAAS,cAAc;AAEpC,UAAI,CAAC,SAAO,YAAY;AACtB,YAAI,UAAU,IAAY,gBAAQ;AAAA,UAChC,OAAO;AAAA,YACL,QAAQ,SAAO;AAAA;AAAA;AAGnB,iBAAS,iBAAiB,KAAK;AAC/B,qBAAa,MAAM,IAAI;AAAA;AAAA,OAExB,OAAO,SAAU,QAAQ,QAAQ;AAClC,UAAI,UAAU,QAAM,cAAc,KAAK,iBAAiB;AACxD,UAAI,WAAS,SAAS,cAAc;AAEpC,UAAI,CAAC,SAAO,YAAY;AACtB,YAAI,SAAS;AACX,UAAQ,YAAY,SAAS;AAAA,YAC3B,OAAO;AAAA,cACL,QAAQ,SAAO;AAAA;AAAA,aAEhB,SAAS;AAAA,eACP;AACL,oBAAU,IAAY,gBAAQ;AAAA,YAC5B,OAAO;AAAA,cACL,QAAQ,SAAO;AAAA;AAAA;AAAA;AAKrB,iBAAS,iBAAiB,QAAQ;AAClC,qBAAa,MAAM,IAAI;AAAA,iBACd,SAAS;AAClB,qBAAa,MAAM,OAAO;AAAA;AAAA,OAE3B,OAAO,SAAU,KAAK;AACvB,UAAI,UAAU,QAAM,cAAc,KAAK,iBAAiB;AACxD,mBAAa,MAAM,OAAO;AAAA,OACzB;AACH,aAAS,kBAAkB,SAAU,SAAS,KAAK;AACjD,UAAI,YAAY,SAAS,aAAa;AACtC,UAAI,QAAQ,SAAS,cAAc,KAAK;AACxC,cAAQ,SAAS,SAAS,cAAc,KAAK;AAC7C,oBAAc,SAAS,qBAAqB,YAAY;AAAA,QACtD,cAAc;AAAA,QACd,gBAAgB;AAAA,QAChB,aAAa,SAAS,QAAQ,QAAQ;AAAA,QACtC,cAAc,OAAO,MAAM,SAAS,WAAW,AAAU,YAAY,MAAM,MAAM,KAAK;AAAA;AAExF,+BAAyB,SAAS;AAClC,0BAAoB;AACpB,gBAAU,SAAS,YAAY;AAAA;AAEjC,YAAM,cAAc,OAAO;AAC3B,iBAAa,MAAM,SAAS,QAAQ,IAAI,aAAa,YAAY,IAAI;AAAA;AAGvE,gBAAa,OAAO;AACpB,SAAO;AAAA,EACP;AAEF,qBAAoB,UAAU,aAAa,SAAS;AAClD,MAAI;AACJ,MAAI;AACJ,MAAI,OAAO,CAAC,MAAM,MAAM,MAAM;AAE9B,MAAI,UAAU;AACZ,QAAI,mBAAmB,IAAI,YAAY,SAAS,YAAY,SAAU,UAAU;AAC9E,UAAI,OAAO,YAAY;AACvB,UAAI,OAAO,KAAK,iBAAiB,KAAK,aAAa,cAAc;AAEjE,aAAO,OAAO,OAAO,IAAI,OAAO;AAAA,QAC9B,MAAM;AAAA,QAEN,aAAa;AAAA;AAAA;AAGjB,eAAW,IAAI,MAAM,SAAU,KAAK,KAAK;AACvC,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM,iBAAiB,MAAM,GAAG;AAAA;AAAA;AAGpC,eAAW,IAAI,mBAAW,UAAU;AAAA,SAC/B;AACL,eAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM;AAAA;AAER,eAAW,IAAI,mBAAW,UAAU;AAAA;AAGtC,MAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,MAAM,mBAAmB,aAAa,UAAU;AAEvF,MAAI,UAAU;AACZ,cAAU,OAAO,SAAS,MAAM,gBAAgB;AAAA;AAGlD,MAAI,iBAAiB,WAAW,SAAU,MAAM,SAAS,WAAW,UAAU;AAE5E,QAAI,SAAS,KAAK,MAAM,KAAK,MAAM,WAAW,IAAI,WAAW;AAC7D,WAAO,eAAe,QAAQ,SAAS;AAAA,MACrC,SAAU,MAAM,SAAS,WAAW,UAAU;AAChD,WAAO,eAAe,KAAK,OAAO,SAAS;AAAA;AAE7C,WAAS,SAAS,SAAS,MAAM;AACjC,WAAS,gBAAgB;AACzB,SAAO;AAAA;AAGT,IAAO,uBAAQ;;;AChUR,mBAAiB,WAAW;AACjC,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAChC,YAAU,qBAAqB,SAAU,KAAK;AAC5C,QAAI,oBAAoB,IAAI,QAAQ,aAAa;AAE/C,UAAI,WAAW,IAAI,YAAY;AAAA;AAAA;AAAA;;;ACHrC,IAAI,4BAA4B,SAAU,SAAS,MAAM;AACvD,MAAI,SAAS,OAAO;AAClB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO,QAAQ,iBAAiB,IAAI,CAAC,UAAU,YAAY;AAAA;AAAA,aAEpD,SAAS,WAAW;AAC7B,WAAO;AAAA,MACL,MAAM;AAAA,MACN,OAAO,QAAQ,iBAAiB,IAAI,CAAC,UAAU,YAAY;AAAA;AAAA;AAAA;AAKjE,IAAI,cAEJ,SAAU,QAAQ;AAChB,YAAU,cAAa;AAEvB,0BAAuB;AACrB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,aAAY;AACzB,UAAM,aAAa;AAAA,MACjB,MAAM;AAAA,MAQN,YAAY;AAAA;AAEd,WAAO;AAAA;AAGT,eAAY,UAAU,OAAO,SAAU,QAAQ,aAAa,SAAS;AACnE,SAAK,qBAAqB,QAAQ;AAClC,WAAO,WAAW,OAAO,YAAY;AAErC,SAAK,gBAAgB;AAAA;AAGvB,eAAY,UAAU,cAAc,SAAU,QAAQ,SAAS;AAC7D,WAAO,UAAU,YAAY,KAAK,MAAM,QAAQ;AAEhD,SAAK,gBAAgB;AAAA;AAGvB,eAAY,UAAU,kBAAkB,SAAU,QAAQ;AACxD,QAAI,YAAW,OAAO;AACtB,QAAI,UAAU,KAAK;AAEnB,QAAI,cAAa,MAAM;AACrB,kBAAW,OAAO,WAAW,CAAC,OAAO;AAAA;AAGvC,QAAI,AAAO,QAAQ,YAAW;AAC5B,MAAO,KAAK,WAAU,SAAU,MAAM,OAAO;AAC3C,QAAO,SAAS,SAAU,QAAO;AAAA,UAC/B,MAAM;AAAA;AAER,kBAAS,SAAS,AAAO,MAAM,MAAM,0BAA0B,SAAS,KAAK;AAAA;AAAA;AAAA;AAKnF,eAAY,UAAU,gBAAgB,WAAY;AAChD,SAAK,YAAY,KAAK;AAEtB,QAAI,aAAa,KAAK;AAEtB,QAAI,WAAW,MAAM,KAAK,IAAI,oBAAoB,UAAU;AAC1D,UAAI,cAAc;AAElB,eAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,YAAI,SAAS,WAAW,GAAG,IAAI;AAE/B,YAAI,KAAK,WAAW,SAAS;AAE3B,eAAK,OAAO;AACZ,wBAAc;AACd;AAAA;AAAA;AAKJ,OAAC,eAAe,KAAK,OAAO,WAAW,GAAG,IAAI;AAAA;AAAA;AAIlD,eAAY,UAAU,cAAc,SAAU,SAAS;AACrD,QAAI,gBAAgB;AACpB,QAAI,iBAAiB;AACrB,YAAQ,cAAc,SAAU,aAAa;AAC3C,UAAI,aAAa,YAAY;AAC7B,qBAAe,KAAK;AACpB,UAAI;AAEJ,UAAI,YAAY,sBAAsB;AACpC,YAAI,WAAW,YAAY;AAC3B,YAAI,QAAQ,SAAS;AAErB,YAAI,CAAC,QAAQ,iBAAiB,cAAc;AAC1C,2BAAiB,eAAe,OAAO;AAAA;AAGzC,YAAI,MAAM,QAAQ;AAChB,0BAAgB,cAAc,OAAO;AAAA,eAChC;AACL,wBAAc;AAAA;AAAA,aAEX;AACL,sBAAc;AAAA;AAGhB,UAAI,eAAe,gBAAgB,cAAc;AAC/C,sBAAc,KAAK,YAAY;AAAA;AAAA;AAQnC,SAAK,kBAAkB;AAGvB,QAAI,UAAU,KAAK,IAAI,WAAW;AAClC,QAAI,aAAa,AAAO,IAAI,SAAS,SAAU,UAAU;AAEvD,UAAI,OAAO,aAAa,YAAY,OAAO,aAAa,UAAU;AAChE,mBAAW;AAAA,UACT,MAAM;AAAA;AAAA;AAIV,aAAO,IAAI,cAAM,UAAU,MAAM,KAAK;AAAA,OACrC;AAMH,SAAK,QAAQ;AAAA;AAGf,eAAY,UAAU,UAAU,WAAY;AAC1C,WAAO,KAAK;AAAA;AAGd,eAAY,UAAU,SAAS,SAAU,MAAM;AAC7C,QAAI,WAAW,KAAK,OAAO;AAC3B,QAAI,eAAe,KAAK,IAAI;AAE5B,QAAI,iBAAiB,UAAU;AAC7B,UAAI,OAAO,KAAK;AAChB,MAAO,KAAK,MAAM,SAAU,UAAU;AACpC,iBAAS,SAAS,IAAI,WAAW;AAAA;AAAA;AAIrC,aAAS,QAAQ;AAAA;AAGnB,eAAY,UAAU,WAAW,SAAU,MAAM;AAC/C,QAAI,KAAK,IAAI,oBAAoB,UAAU;AACzC,WAAK,OAAO,SAAS,QAAQ;AAAA;AAAA;AAIjC,eAAY,UAAU,iBAAiB,SAAU,MAAM;AACrD,QAAI,WAAW,KAAK,OAAO;AAE3B,QAAI,CAAC,SAAS,eAAe,OAAO;AAClC,eAAS,QAAQ;AAAA;AAGnB,SAAK,SAAS,QAAQ,aAAa,UAAU;AAAA;AAG/C,eAAY,UAAU,YAAY,WAAY;AAC5C,QAAI,OAAO,KAAK;AAChB,QAAI,WAAW,KAAK,OAAO;AAC3B,IAAO,KAAK,MAAM,SAAU,UAAU;AACpC,eAAS,SAAS,IAAI,QAAQ,SAAS;AAAA;AAAA;AAI3C,eAAY,UAAU,gBAAgB,WAAY;AAChD,QAAI,OAAO,KAAK;AAChB,QAAI,WAAW,KAAK,OAAO;AAC3B,IAAO,KAAK,MAAM,SAAU,UAAU;AACpC,UAAI,OAAO,SAAS,IAAI,QAAQ;AAEhC,UAAI,CAAC,SAAS,eAAe,OAAO;AAClC,iBAAS,QAAQ;AAAA;AAGnB,eAAS,QAAQ,CAAC,SAAS;AAAA;AAAA;AAI/B,eAAY,UAAU,aAAa,SAAU,MAAM;AACjD,QAAI,WAAW,KAAK,OAAO;AAC3B,WAAO,CAAE,UAAS,eAAe,SAAS,CAAC,SAAS,UAAU,AAAO,QAAQ,KAAK,iBAAiB,SAAS;AAAA;AAG9G,eAAY,UAAU,YAAY,WAAY;AAC5C,WAAO,KAAK,IAAI,cAAc,aAAa;AAAA,MACzC,OAAO;AAAA,MACP,MAAM;AAAA,QACJ;AAAA,MACF,OAAO;AAAA,MACP,MAAM;AAAA;AAAA;AAIV,eAAY,OAAO;AACnB,eAAY,eAAe,CAAC;AAC5B,eAAY,gBAAgB;AAAA,IAC1B,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,MAAM;AAAA,IAEN,KAAK;AAAA,IAEL,OAAO;AAAA,IACP,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,cAAc;AAAA,IACd,aAAa;AAAA,IACb,SAAS;AAAA,IACT,SAAS;AAAA,IACT,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,eAAe;AAAA,IACf,qBAAqB;AAAA,IACrB,qBAAqB;AAAA,IACrB,WAAW;AAAA,MACT,OAAO;AAAA,MACP,SAAS;AAAA,MACT,aAAa;AAAA,MACb,aAAa;AAAA,MACb,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,kBAAkB;AAAA,MAClB,kBAAkB;AAAA;AAAA,IAEpB,WAAW;AAAA,MACT,OAAO;AAAA,MACP,OAAO;AAAA,MACP,eAAe;AAAA,MACf,eAAe;AAAA,MACf,SAAS;AAAA,MACT,MAAM;AAAA,MACN,KAAK;AAAA,MACL,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,YAAY;AAAA;AAAA,IAEd,WAAW;AAAA,MACT,OAAO;AAAA;AAAA,IAET,cAAc;AAAA,IACd,UAAU;AAAA,IACV,eAAe;AAAA,MACb,MAAM;AAAA,MACN,cAAc;AAAA,MACd,SAAS,CAAC,GAAG,GAAG,GAAG;AAAA,MACnB,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,aAAa;AAAA,MACb,aAAa;AAAA;AAAA,IAEf,UAAU;AAAA,MACR,eAAe;AAAA,QACb,MAAM;AAAA,QACN,OAAO;AAAA,QACP,iBAAiB;AAAA;AAAA;AAAA,IAGrB,kBAAkB;AAAA,IAClB,iBAAiB;AAAA,IACjB,mBAAmB;AAAA,IACnB,SAAS;AAAA,MACP,MAAM;AAAA;AAAA;AAGV,SAAO;AAAA,EACP;AAEF,IAAO,sBAAQ;;;ACtSf,IAAI,SAAe;AACnB,IAAI,SAAc;AAClB,IAAI,SAAgB;AAEpB,IAAI,aAEJ,SAAU,QAAQ;AAChB,YAAU,aAAY;AAEtB,yBAAsB;AACpB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,YAAW;AACxB,UAAM,kBAAkB;AACxB,WAAO;AAAA;AAGT,cAAW,UAAU,OAAO,WAAY;AACtC,SAAK,MAAM,IAAI,KAAK,gBAAgB,IAAI;AACxC,SAAK,MAAM,IAAI,KAAK,iBAAiB,IAAI;AACzC,SAAK,iBAAiB;AAAA;AAOxB,cAAW,UAAU,kBAAkB,WAAY;AACjD,WAAO,KAAK;AAAA;AAOd,cAAW,UAAU,mBAAmB,WAAY;AAClD,WAAO,KAAK;AAAA;AAOd,cAAW,UAAU,SAAS,SAAU,aAAa,SAAS,KAAK;AACjE,QAAI,gBAAgB,KAAK;AACzB,SAAK,iBAAiB;AACtB,SAAK;AAEL,QAAI,CAAC,YAAY,IAAI,QAAQ,OAAO;AAClC;AAAA;AAGF,QAAI,YAAY,YAAY,IAAI;AAChC,QAAI,SAAS,YAAY,IAAI;AAE7B,QAAI,CAAC,aAAa,cAAc,QAAQ;AACtC,kBAAY,YAAY,IAAI,YAAY,WAAW,WAAW,aAAa,UAAU;AAAA;AAIvF,QAAI,YAAW,YAAY,IAAI,YAAY;AAC3C,QAAI,mBAAmB,YAAY,IAAI,oBAAoB;AAE3D,QAAI,aAAa,EAAC,oBAAoB,qBAAqB,SAAS;AAClE,yBAAmB,WAAW,eAAe,QAAQ;AAAA;AAGvD,SAAK,YAAY,WAAW,aAAa,SAAS,KAAK,WAAU,QAAQ;AAEzE,QAAI,eAAe,YAAY;AAC/B,QAAI,eAAe;AAAA,MACjB,OAAO,IAAI;AAAA,MACX,QAAQ,IAAI;AAAA;AAEd,QAAI,UAAU,YAAY,IAAI;AAC9B,QAAI,UAAU,AAAW,cAAc,cAAc,cAAc;AACnE,QAAI,WAAW,KAAK,YAAY,aAAa,WAAW,SAAS,eAAe,WAAU;AAE1F,QAAI,aAAa,AAAW,cAAc,AAAO,SAAS;AAAA,MACxD,OAAO,SAAS;AAAA,MAChB,QAAQ,SAAS;AAAA,OAChB,eAAe,cAAc;AAChC,SAAK,MAAM,IAAI,WAAW,IAAI,SAAS;AACvC,SAAK,MAAM,IAAI,WAAW,IAAI,SAAS;AACvC,SAAK,MAAM;AAEX,SAAK,MAAM,IAAI,KAAK,gBAAgB,eAAe,UAAU;AAAA;AAG/D,cAAW,UAAU,aAAa,WAAY;AAC5C,SAAK,kBAAkB;AACvB,SAAK,iBAAiB,KAAK,MAAM,OAAO,KAAK;AAC7C,SAAK,mBAAmB;AAAA;AAG1B,cAAW,UAAU,cAAc,SAAU,WAAW,aAAa,SAAS,KAAK,WAAU,QAAQ,kBAAkB;AACrH,QAAI,eAAe,KAAK;AACxB,QAAI,iBAAiB,AAAO;AAC5B,QAAI,aAAa,YAAY,IAAI;AACjC,QAAI,kBAAkB;AACtB,YAAQ,cAAc,SAAU,aAAa;AAC3C,OAAC,YAAY,IAAI,sBAAsB,gBAAgB,KAAK,YAAY;AAAA;AAE1E,WAAK,YAAY,WAAW,SAAU,iBAAiB,WAAW;AAChE,UAAI,OAAO,gBAAgB,IAAI;AAE/B,UAAI,CAAC,KAAK,mBAAoB,UAAS,MAAM,SAAS,OAAO;AAC3D,YAAI,IAAI,IAAI;AAEZ,UAAE,UAAU;AACZ,qBAAa,IAAI;AACjB;AAAA;AAIF,UAAI,cAAc,QAAQ,gBAAgB,MAAM;AAEhD,UAAI,eAAe,IAAI,OAAO;AAE5B;AAAA;AAIF,UAAI,aAAa;AACf,YAAI,OAAO,YAAY;AACvB,YAAI,kBAAkB,KAAK,UAAU,sBAAsB;AAC3D,YAAI,aAAa,KAAK,UAAU;AAMhC,YAAI,QAAQ,KAAK,UAAU;AAE3B,YAAI,YAAY,KAAK,YAAY,aAAa,MAAM,WAAW,iBAAiB,aAAa,WAAW,iBAAiB,OAAO,YAAY;AAE5I,kBAAU,GAAG,SAAS,OAAM,sBAAsB,MAAM,MAAM,KAAK,kBAAkB,GAAG,aAAa,OAAM,yBAAyB,YAAY,MAAM,MAAM,KAAK,kBAAkB,GAAG,YAAY,OAAM,wBAAwB,YAAY,MAAM,MAAM,KAAK;AAC7P,uBAAe,IAAI,MAAM;AAAA,aACpB;AAEL,gBAAQ,cAAc,SAAU,cAAa;AAE3C,cAAI,eAAe,IAAI,OAAO;AAC5B;AAAA;AAGF,cAAI,aAAY,sBAAsB;AACpC,gBAAI,WAAW,aAAY;AAE3B,gBAAI,CAAC,SAAS,YAAY,OAAO;AAC/B;AAAA;AAGF,gBAAI,MAAM,SAAS,YAAY;AAC/B,gBAAI,SAAQ,SAAS,cAAc,KAAK;AACxC,gBAAI,cAAa,SAAS,cAAc,KAAK;AAC7C,gBAAI,WAAW,MAAM,OAAM;AAG3B,gBAAI,YAAY,SAAS,OAAO,GAAG;AACjC,uBAAS,KAAK;AAEd,qBAAM,OAAO,UAAU,UAAU;AAAA;AAGnC,gBAAI,aAAY,KAAK,YAAY,cAAa,MAAM,WAAW,iBAAiB,aAAa,WAAW,IAAI,QAAO,aAAY;AAG/H,uBAAU,GAAG,SAAS,OAAM,sBAAsB,MAAM,MAAM,KAAK,kBAElE,GAAG,aAAa,OAAM,yBAAyB,MAAM,MAAM,KAAK,kBAAkB,GAAG,YAAY,OAAM,wBAAwB,MAAM,MAAM,KAAK;AACjJ,2BAAe,IAAI,MAAM;AAAA;AAAA,WAE1B;AAAA;AAGL,UAAI,MAAuC;AACzC,YAAI,CAAC,eAAe,IAAI,OAAO;AAC7B,kBAAQ,KAAK,OAAO;AAAA;AAAA;AAAA,OAGvB;AAEH,QAAI,WAAU;AACZ,WAAK,gBAAgB,WAAU,aAAa,KAAK,QAAQ;AAAA;AAAA;AAI7D,cAAW,UAAU,kBAAkB,SAAU,WAAU,aAAa,KAAK,QAAQ,kBAAkB;AACrG,QAAI,gBAAgB,KAAK;AACzB,WAAK,WAAU,8BAA8B,cAAc;AACzD,UAAI,OAAO,aAAa;AACxB,UAAI,YAAY,IAAY,aAAK;AAAA,QAC/B,OAAO;AAAA,UACL,GAAG;AAAA,UACH,GAAG;AAAA,UACH,OAAO;AAAA,UACP,eAAe;AAAA;AAAA,QAEjB,SAAS,WAAY;AACnB,cAAI,eAAe;AAAA,YACjB,MAAM,SAAS,QAAQ,oBAAoB;AAAA;AAAA;AAAA;AAIjD,oBAAc,IAAI;AAClB,UAAI,aAAa,YAAY,SAAS;AACtC,UAAI,qBAAqB,YAAY,SAAS,CAAC,YAAY;AAC3D,oBAAc,WAAW;AAAA,QACvB,QAAQ;AAAA,QACR,UAAU;AAAA,SACT;AAAA,QACD,aAAa,aAAa;AAAA;AAE5B,0BAAoB;AAAA;AAAA;AAIxB,cAAW,UAAU,cAAc,SAAU,aAAa,MAAM,WAAW,iBAAiB,aAAa,WAAW,iBAAiB,iBAAiB,YAAY,YAAY;AAC5K,QAAI,WAAW,YAAY;AAC3B,QAAI,YAAY,YAAY,IAAI;AAChC,QAAI,aAAa,YAAY,IAAI;AACjC,QAAI,aAAa,YAAY,WAAW;AACxC,QAAI,aAAa,gBAAgB,IAAI;AACrC,QAAI,mBAAmB,gBAAgB,IAAI;AAC3C,QAAI,iBAAiB,gBAAgB,IAAI;AACzC,iBAAa,kBAAkB,cAAc;AAC7C,QAAI,QAAQ,eAAe,YAAY,iBAAiB,iBAAiB,iBAAiB,UAAU;AACpG,QAAI,YAAY,IAAI;AACpB,QAAI,iBAAiB,gBAAgB,SAAS;AAE9C,QAAI,OAAO,YAAY,kBAAkB,cAAe,EAAC,kBAAkB,mBAAmB,YAAY;AAExG,gBAAU,IAAI,YAAY,cAAc;AAAA,QACtC;AAAA,QACA;AAAA,QACA,MAAM;AAAA,QACN;AAAA,QACA,WAAW,MAAM;AAAA,QACjB,WAAW,MAAM;AAAA,QACjB;AAAA;AAAA,WAEG;AAEL,UAAI,UAAS,mBAAmB,aAAa,YAAY,UAAU,UAAU,YAAY,eAAe,YAAY,YAAY,UAAU,UAAU,kBAAkB,aAAa;AAEnL,gBAAU,IAAI,qBAAqB;AAAA,QACjC;AAAA,QACA;AAAA,QACA,MAAM;AAAA,QACN,YAAY;AAAA,QACZ,WAAW,MAAM;AAAA,QACjB,WAAW,MAAM;AAAA,QACjB;AAAA;AAAA;AAIJ,QAAI,QAAQ,cAAc,SAAS,YAAY,IAAI;AACnD,QAAI,YAAY;AAChB,QAAI,YAAY,YAAY,IAAI;AAChC,QAAI,UAAU;AAEd,QAAI,OAAO,cAAc,YAAY,WAAW;AAC9C,gBAAU,UAAU,QAAQ,UAAU,QAAQ,OAAO,OAAO;AAAA,eACnD,OAAO,cAAc,YAAY;AAC1C,gBAAU,UAAU;AAAA;AAGtB,QAAI,gBAAgB,gBAAgB,IAAI;AACxC,cAAU,IAAI,IAAY,aAAK;AAAA,MAC7B,OAAO,gBAAgB,gBAAgB;AAAA,QACrC,MAAM;AAAA,QACN,GAAG;AAAA,QACH,GAAG,aAAa;AAAA,QAChB,MAAM,aAAa,eAAe,iBAAiB;AAAA,QACnD,OAAO;AAAA,QACP,eAAe;AAAA;AAAA;AAInB,QAAI,UAAU,IAAY,aAAK;AAAA,MAC7B,OAAO,UAAU;AAAA,MACjB,WAAW;AAAA;AAEb,QAAI,eAAe,gBAAgB,SAAS;AAE5C,QAAI,aAAa,IAAI,SAAS;AAC5B,MAAQ,iBAAiB;AAAA,QACvB,IAAI;AAAA,QACJ,gBAAgB;AAAA,QAChB,UAAU;AAAA,QACV,mBAAmB,aAAa;AAAA;AAAA;AAIpC,cAAU,IAAI;AACd,cAAU,UAAU,SAAU,OAAO;AACnC,YAAM,SAAS;AAAA;AAEjB,YAAQ,SAAS,CAAC;AAClB,SAAK,kBAAkB,IAAI;AAC3B,wBAAoB;AAEpB,cAAU,oBAAoB;AAC9B,WAAO;AAAA;AAGT,cAAW,UAAU,cAAc,SAAU,aAAa,WAAW,SAAS,eAAe,WAAU,kBAAkB;AACvH,QAAI,eAAe,KAAK;AACxB,QAAI,gBAAgB,KAAK;AAEzB,IAAW,IAAI,YAAY,IAAI,WAAW,cAAc,YAAY,IAAI,YAAY,QAAQ,OAAO,QAAQ;AAC3G,QAAI,cAAc,aAAa;AAC/B,QAAI,aAAa,CAAC,CAAC,YAAY,GAAG,CAAC,YAAY;AAC/C,kBAAc;AACd,iBAAa;AAEb,QAAI,WAAU;AAEZ,MAAW,IACX,cAAc,eAAe,YAAY,IAAI,mBAAmB;AAChE,UAAI,eAAe,cAAc;AACjC,UAAI,cAAc,CAAC,CAAC,aAAa,GAAG,CAAC,aAAa;AAClD,UAAI,oBAAoB,YAAY,IAAI,qBAAqB;AAC7D,UAAI,YAAY,YAAY,YAAY;AACxC,UAAI,KAAK,cAAc,IAAI,UAAU;AACrC,UAAI,KAAK,cAAc,IAAI,WAAW;AACtC,UAAI,KAAK,cAAc,IAAI,MAAM;AAEjC,UAAI,qBAAqB,OAAO;AAC9B,oBAAY,cAAc,YAAY,MAAM;AAAA,aACvC;AACL,mBAAW,cAAc,aAAa,MAAM;AAAA;AAI9C,kBAAY,IAAI,cAAc,YAAY,MAAM,IAAI,aAAa,MAAM;AACvE,oBAAc,IAAI,YAAY;AAC9B,oBAAc,IAAI,YAAY;AAC9B,mBAAa,IAAI,WAAW;AAC5B,mBAAa,IAAI,WAAW;AAC5B,UAAI,WAAW;AAAA,QACb,GAAG;AAAA,QACH,GAAG;AAAA;AAEL,eAAS,MAAM,YAAY,MAAM,oBAAoB,aAAa;AAClE,eAAS,MAAM,KAAK,IAAI,YAAY,KAAK,aAAa;AACtD,eAAS,MAAM,KAAK,IAAI,GAAG,aAAa,MAAM,YAAY,IAAI;AAC9D,aAAO;AAAA,WACF;AACL,mBAAa,IAAI,WAAW;AAC5B,mBAAa,IAAI,WAAW;AAC5B,aAAO,KAAK,MAAM;AAAA;AAAA;AAQtB,cAAW,UAAU,SAAS,WAAY;AACxC,SAAK,kBAAkB;AACvB,SAAK,iBAAiB;AAAA;AAGxB,cAAW,OAAO;AAClB,SAAO;AAAA,EACP;AAEF,wBAAwB,UAAU,aAAa,iBAAiB,iBAAiB,UAAU,YAAY;AAKrG,6BAA2B,OAAO,aAAa;AAE7C,QAAI,MAAM,cAAc,QAAQ;AAC9B,YAAM,YAAY,YAAY,YAAY,IAAI,IAAI;AAAA;AAGpD,WAAK,OAAO,SAAU,SAAS,UAAU;AACvC,YAAM,cAAc,aAAc,OAAM,YAAY,YAAY;AAAA;AAAA;AAKpE,MAAI,kBAAkB,YAAY,SAAS;AAC3C,MAAI,YAAY,gBAAgB;AAChC,MAAI,gBAAgB,SAAS,YAAY,SAAS,OAAO,IAAI,SAAS;AACtE,YAAU,QAAQ,gBAAgB;AAElC,MAAI,UAAU,SAAS,WAAW;AAKhC,cAAU,OAAO,gBAAgB;AAAA;AAGnC,MAAI,UAAU,WAAW,WAAW;AAKlC,cAAU,SAAS,gBAAgB;AAAA;AAGrC,MAAI,UAAU,YAAY,WAAW;AAInC,cAAU,UAAW,cAAa,SAAS,kBAAkB,iBAAiB;AAAA;AAGhF,oBAAkB,WAAW;AAE7B,MAAI,kBAAkB,YAAY,SAAS;AAC3C,MAAI,YAAY,gBAAgB;AAChC,oBAAkB,WAAW;AAE7B,YAAU,SAAS,UAAW,WAAU,OAAO,gBAAgB;AAC/D,YAAU,WAAW,UAAW,WAAU,SAAS,gBAAgB;AACnE,YAAU,WAAW,UAAW,WAAU,SAAS,gBAAgB;AAEnE,MAAI,CAAC,YAAY;AACf,QAAI,cAAc,YAAY,IAAI;AAOlC,QAAI,kBAAkB,UAAU;AAChC,cAAU,YAAY,gBAAgB,SAAS,gBAAgB,YAAY,KAAK,kBAAkB,IAAI,IAAI,UAAU;AACpH,cAAU,OAAO,YAAY,IAAI;AACjC,cAAU,SAAS,YAAY,IAAI;AACnC,cAAU,SAAS,gBAAgB,IAAI;AACvC,cAAU,YAAY,gBAAgB,IAAI;AAAA;AAG5C,SAAO;AAAA,IACL;AAAA,IACA;AAAA;AAAA;AAIJ,8BAA8B,KAAK;AACjC,MAAI,YAAY,IAAI,QAAQ;AAC5B,MAAI,OAAO,aAAa,WAAW,GAAG,GAAG,IAAI,WAAW,IAAI,YAAY,IAAI,UAAU,MAAM,IAAI;AAChG,OAAK,SAAS,IAAI;AAClB,OAAK,WAAY,KAAI,cAAc,KAAK,KAAK,KAAK;AAClD,OAAK,UAAU,CAAC,IAAI,YAAY,GAAG,IAAI,aAAa;AAEpD,MAAI,UAAU,QAAQ,WAAW,IAAI;AACnC,SAAK,MAAM,SAAS,KAAK,MAAM;AAC/B,SAAK,MAAM,OAAO;AAClB,SAAK,MAAM,YAAY;AAAA;AAGzB,SAAO;AAAA;AAGT,8BAA8B,YAAY,UAAU,KAAK,iBAAiB;AAExE,yBAAuB,YAAY,UAAU,KAAK;AAClD,MAAI,eAAe;AAAA,IACjB,MAAM;AAAA,IACN,MAAM,cAAc,OAAO,aAAa;AAAA;AAI1C,0BAAwB,YAAY,UAAU,KAAK;AAAA;AAGrD,yBAAyB,KAAK;AAC5B,MAAI,OAAO,IAAI,QAAQ,QAAQ;AAC/B,MAAI;AACJ,MAAI,IAAI;AACR,MAAI,OAAM,KAAK;AAEf,SAAO,IAAI,QAAO,CAAE,iBAAgB,KAAK,GAAG,OAAO,WAAW;AAC5D;AAAA;AAGF,SAAO,iBAAiB,cAAc;AAAA;AAGxC,iCAAiC,YAAY,UAAU,KAAK,iBAAiB;AAE3E,MAAI,CAAC,gBAAgB,MAAM;AACzB,QAAI,eAAe;AAAA,MACjB,MAAM;AAAA,MACN;AAAA,MACA,MAAM;AAAA,MACN;AAAA;AAAA;AAAA;AAKN,gCAAgC,YAAY,UAAU,KAAK,iBAAiB;AAE1E,MAAI,CAAC,gBAAgB,MAAM;AACzB,QAAI,eAAe;AAAA,MACjB,MAAM;AAAA,MACN;AAAA,MACA,MAAM;AAAA,MACN;AAAA;AAAA;AAAA;AAKN,IAAO,qBAAQ;;;ACzgBA,sBAAsB,SAAS;AAC5C,MAAI,eAAe,QAAQ,eAAe;AAAA,IACxC,UAAU;AAAA;AAGZ,MAAI,gBAAgB,aAAa,QAAQ;AACvC,YAAQ,aAAa,SAAU,QAAQ;AAGrC,eAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,YAAI,CAAC,aAAa,GAAG,WAAW,OAAO,OAAO;AAC5C,iBAAO;AAAA;AAAA;AAIX,aAAO;AAAA;AAAA;AAAA;;;ACZb,mCAAmC,YAAY,SAAS,SAAS;AAC/D,MAAI,cAAc;AAClB,MAAI,iBAAiB,eAAe;AACpC,MAAI;AAEJ,UAAQ,cAAc,UAAU,SAAU,aAAa;AACrD,QAAI,kBAAkB,cAAc,MAAM;AAKxC,kBAAY,aAAa,WAAW,YAAY,QAAQ;AAAA,eAC/C,eAAe,eAAe,eAAe,iBAAiB;AACvE,kBAAY;AAAA,WACP;AACL,kBAAY,YAAY,QAAQ;AAChC,mBAAa,YAAY,WAAW,QAAQ;AAAA;AAG9C,QAAI,aAAa,YAAY;AAC7B,SAAK,YAAY,SAAU,OAAO;AAChC,UAAI,OAAO,MAAM,IAAI;AAErB,UAAI,SAAS,QAAQ,SAAS,IAAI;AAChC;AAAA;AAGF,UAAI,iBAAiB,YAAY,WAAW;AAE5C,UAAI,YAAY,eAAe,OAAO;AAEpC,oBAAY,QAAQ,YAAY,SAAS;AAAA,aACpC;AACL,oBAAY,QAAQ;AAAA;AAAA;AAAA;AAK1B,SAAO,eAAe,eAAe,eAAe,kBAAkB;AAAA,IACpE,UAAU;AAAA,MACR;AAAA,IACF,MAAM,QAAQ;AAAA,IACd,UAAU;AAAA;AAAA;AAIP,6BAA6B,WAAW;AAQ7C,YAAU,eAAe,sBAAsB,uBAAuB,MAAM,2BAA2B;AACvG,YAAU,eAAe,mBAAmB,mBAAmB,MAAM,2BAA2B;AAChG,YAAU,eAAe,uBAAuB,uBAAuB,MAAM,2BAA2B;AAQxG,YAAU,eAAe,gBAAgB,kBAAkB,MAAM,2BAA2B;AAQ5F,YAAU,eAAe,kBAAkB,oBAAoB,MAAM,2BAA2B;AAAA;;;ACvE3F,mBAAiB,WAAW;AACjC,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAChC,YAAU,kBAAkB,UAAU,SAAS,UAAU,eAAe;AACxE,YAAU,yBAAyB,UAAU,WAAY;AACvD,WAAO;AAAA;AAET,sBAAoB;AAAA;;;ACNtB,IAAI,wBAEJ,SAAU,QAAQ;AAChB,YAAU,wBAAuB;AAEjC,oCAAiC;AAC/B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,uBAAsB;AACnC,WAAO;AAAA;AAOT,yBAAsB,UAAU,qBAAqB,SAAU,iBAAiB;AAC9E,SAAK,OAAO,kBAAkB;AAAA;AAGhC,yBAAsB,UAAU,OAAO,SAAU,QAAQ,aAAa,SAAS;AAC7E,QAAI,sBAAsB,gBAAgB;AAE1C,WAAO,UAAU,KAAK,KAAK,MAAM,QAAQ,aAAa;AAEtD,mCAA8B,MAAM,QAAQ;AAAA;AAO9C,yBAAsB,UAAU,cAAc,SAAU,QAAQ,SAAS;AACvE,WAAO,UAAU,YAAY,KAAK,MAAM,QAAQ;AAEhD,mCAA8B,MAAM,KAAK,QAAQ;AAAA;AAGnD,yBAAsB,OAAO;AAC7B,yBAAsB,gBAAgB,qBAAqB,oBAAY,eAAe;AAAA,IACpF,iBAAiB;AAAA,IACjB,mBAAmB;AAAA,IACnB,eAAe;AAAA,IACf,oBAAoB;AAAA,IACpB,eAAe;AAAA,IACf,WAAW;AAAA,MACT,YAAY,CAAC,sBAAsB;AAAA,MACnC,UAAU,CAAC,qBAAqB;AAAA;AAAA,IAElC,eAAe;AAAA,IACf,uBAAuB;AAAA,IACvB,cAAc;AAAA,IACd,eAAe;AAAA,MACb,OAAO;AAAA;AAAA,IAET,yBAAyB;AAAA;AAE3B,SAAO;AAAA,EACP;AAIF,wCAAuC,aAAa,QAAQ,KAAK;AAC/D,MAAI,SAAS,YAAY;AACzB,MAAI,aAAa,CAAC,GAAG;AACrB,aAAW,OAAO,SAAS;AAC3B,mBAAiB,QAAQ,KAAK;AAAA,IAC5B,MAAM;AAAA,IACN,YAAY,CAAC,CAAC;AAAA;AAAA;AAIlB,IAAO,gCAAQ;;;ACpEf,IAAI,SAAgB;AACpB,IAAI,MAAK,CAAC,SAAS;AACnB,IAAI,MAAK,CAAC,KAAK;AAEf,IAAI,uBAEJ,SAAU,QAAQ;AAChB,YAAU,uBAAsB;AAEhC,mCAAgC;AAC9B,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,sBAAqB;AAClC,UAAM,kBAAkB;AACxB,UAAM,gBAAgB;AACtB,WAAO;AAAA;AAGT,wBAAqB,UAAU,OAAO,WAAY;AAChD,WAAO,UAAU,KAAK,KAAK;AAE3B,SAAK,MAAM,IAAI,KAAK,kBAAkB,IAAI;AAE1C,SAAK,gBAAgB,IAAI,KAAK;AAE9B,SAAK,MAAM,IAAI,KAAK,mBAAmB,IAAI;AAAA;AAO7C,wBAAqB,UAAU,aAAa,WAAY;AACtD,WAAO,UAAU,WAAW,KAAK;AAEjC,SAAK,iBAAiB;AAEtB,SAAK,gBAAgB;AAErB,SAAK,gBAAgB,aAAa;AAAA;AAOpC,wBAAqB,UAAU,cAAc,SAAU,WAAW,aAAa,SAAS,KAAK,WAAU,QAAQ,kBAAkB;AAC/H,QAAI,OAAO;AAEX,WAAO,UAAU,YAAY,KAAK,MAAM,WAAW,aAAa,SAAS,KAAK,WAAU,QAAQ;AAEhG,QAAI,kBAAkB,KAAK;AAG3B,QAAI,eAAe,YAAY,IAAI,gBAAgB;AACnD,QAAI,kBAAkB,AAAO,QAAQ,gBAAgB,eAAe,CAAC,cAAc;AACnF,qBAAiB,YAAY;AAC7B,QAAI,qBAAqB,YAAY,SAAS;AAC9C,oBAAgB,IAAI,IAAY,aAAK;AAAA,MACnC,MAAM;AAAA,MACN,OAAO;AAAA,QAEL,MAAM;AAAA,QACN,MAAM,mBAAmB;AAAA,QACzB,MAAM,mBAAmB;AAAA,QACzB,eAAe;AAAA,QACf,OAAO;AAAA;AAAA,MAET,QAAQ;AAAA;AAEV,qBAAiB,YAAY;AAE7B,8BAA0B,MAAM,SAAS;AACvC,UAAI,oBAAoB,OAAO;AAC/B,UAAI,OAAO,AAAQ,WAAW,YAAY,IAAI,aAAa,MAAM,YAAY,YAAY,MAAM,UAAU;AAAA,QAGvG,SAAS,AAAO,KAAK,KAAK,SAAS,MAAM,mBAAmB,aAAa;AAAA,SACxE;AAAA,QACD,GAAG,CAAC,gBAAgB,KAAK;AAAA,QACzB,GAAG,CAAC,gBAAgB,KAAK;AAAA,QACzB,OAAO,gBAAgB;AAAA,QACvB,QAAQ,gBAAgB;AAAA;AAE1B,WAAK,OAAO;AACZ,sBAAgB,IAAI;AAAA;AAAA;AAQxB,wBAAqB,UAAU,cAAc,SAAU,aAAa,WAAW,SAAS,eAAe,WAAU,kBAAkB;AACjI,QAAI,gBAAgB,KAAK;AACzB,QAAI,YAAY,YAAY,YAAY;AACxC,QAAI,KAAK,IAAG;AACZ,QAAI,KAAK,IAAG;AACZ,QAAI,KAAK,IAAG,IAAI;AAChB,QAAI,KAAK,IAAG,IAAI;AAChB,iBAAY,AAAW,IACvB,cAAc,eAAe,YAAY,IAAI,mBAAmB;AAChE,QAAI,oBAAoB,YAAY,IAAI,qBAAqB;AAC7D,QAAI,eAAe,cAAc;AACjC,QAAI,cAAc,CAAC,CAAC,aAAa,GAAG,CAAC,aAAa;AAClD,QAAI,iBAAiB,AAAO,MAAM;AAClC,iBAAa,gBAAe,MAAM,QAAQ,MAAM,aAAa,MAAM;AAEnE,QAAI,WAAW,KAAK,4BAA4B,aAAa,eAAe,gBAAgB,WAAW,IAAI,IAAI,IAAI;AAEnH,QAAI,WAAU;AACZ,UAAI,qBAAqB,OAAO;AAC9B,oBAAY,cAAc,SAAS,MAAM;AAAA,aACpC;AACL,YAAI,SAAS,aAAa,MAAM;AAChC,oBAAY,cAAc;AAC1B,iBAAS,OAAO;AAAA;AAGlB,eAAS,OAAO,aAAa,MAAM;AACnC,kBAAY,IAAI,cAAc,SAAS,MAAM,SAAS,MAAM,IAAI,aAAa,MAAM;AACnF,eAAS,MAAM,KAAK,IAAI,SAAS,KAAK,aAAa;AACnD,eAAS,MAAM,KAAK,IAAI,SAAS,KAAK,aAAa,MAAM,YAAY,IAAI;AACzE,oBAAc,IAAI,YAAY;AAC9B,oBAAc,IAAI,YAAY;AAC9B,oBAAc;AAAA;AAGhB,WAAO;AAAA;AAGT,wBAAqB,UAAU,8BAA8B,SAAU,aAAa,eAAe,SAAS,WAAW,IAAI,IAAI,IAAI,IAAI;AACrI,QAAI,eAAe,KAAK;AACxB,QAAI,iBAAiB,KAAK;AAC1B,QAAI,kBAAkB,KAAK;AAE3B,IAAW,IAAI,YAAY,IAAI,WAAW,cAAc,YAAY,IAAI,YAAY,CAAC,YAAY,OAAO,QAAQ,OAAO,YAAY,OAAO,QAAQ;AAClJ,IAAW,IACX,cAAc,iBAAiB,YAAY,IAAI,qBAAqB;AACpE,QAAI,cAAc,aAAa;AAC/B,QAAI,iBAAiB,gBAAgB;AACrC,QAAI,iBAAiB,KAAK,kBAAkB,YAAY,MAAM,QAAQ;AAEtE,QAAI,aAAa,CAAC,CAAC,YAAY,GAAG,CAAC,YAAY;AAI/C,QAAI,CAAC,eAAe;AAClB,iBAAW,aAAa,aAAa;AAAA;AAIvC,QAAI,eAAe,CAAC,GAAG;AACvB,QAAI,gBAAgB,CAAC,CAAC,eAAe,GAAG,CAAC,eAAe;AACxD,QAAI,gBAAgB,AAAO,UAAU,YAAY,IAAI,iBAAiB,OAAO,YAAY,IAAI,WAAW;AAExG,QAAI,gBAAgB;AAClB,UAAI,qBAAqB,YAAY,IAAI,sBAAsB;AAE/D,UAAI,uBAAuB,OAAO;AAChC,sBAAc,cAAc,QAAQ,MAAM,eAAe;AAAA,aAEtD;AACD,qBAAa,cAAc,eAAe,MAAM;AAAA;AAAA;AAKtD,kBAAc,IAAI,cAAc,YAAY,MAAM,IAAI,eAAe,MAAM;AAC3E,iBAAa,YAAY;AACzB,mBAAe,YAAY;AAC3B,oBAAgB,YAAY;AAI5B,QAAI,WAAW;AAAA,MACb,GAAG;AAAA,MACH,GAAG;AAAA;AAGL,aAAS,MAAM,iBAAiB,QAAQ,MAAM,YAAY;AAC1D,aAAS,MAAM,KAAK,IAAI,YAAY,KAAK,eAAe;AAExD,aAAS,MAAM,KAAK,IAAI,GAAG,eAAe,MAAM,cAAc,IAAI;AAClE,mBAAe,aAAa,QAAQ;AAEpC,QAAI,gBAAgB;AAClB,UAAI,YAAY;AAAA,QACd,GAAG;AAAA,QACH,GAAG;AAAA;AAEL,gBAAU,MAAM,KAAK,IAAI,QAAQ,MAAM,eAAe,MAAM,eAAe;AAC3E,gBAAU,MAAM,SAAS;AACzB,qBAAe,YAAY,IAAY,aAAK;AAAA,QAC1C,OAAO;AAAA;AAIT,qBAAe,aAAa,UAAU;AAAA,WACjC;AAEL,sBAAgB,UAAU,SAAU,OAAO;AACzC,cAAM,KAAK;AAAA,UACT,WAAW;AAAA,UACX,QAAQ;AAAA;AAAA;AAAA;AAMd,QAAI,WAAW,KAAK,aAAa;AAEjC,aAAS,aAAa,QAAQ,AAAQ,YAAY,cAAc;AAAA,MAC9D,GAAG,SAAS,gBAAgB;AAAA,MAC5B,GAAG,SAAS,gBAAgB;AAAA,OAG9B,iBAAiB,cAAc;AAE/B,SAAK,oBAAoB,aAAa;AAEtC,WAAO;AAAA;AAGT,wBAAqB,UAAU,UAAU,SAAU,IAAI,aAAa,KAAK;AACvE,QAAI,kBAAkB,KAAK,aAAa,aAAa;AAErD,uBAAmB,QAAQ,IAAI,eAAe;AAAA,MAC5C,MAAM;AAAA,MACN;AAAA,MACA,UAAU,YAAY;AAAA;AAAA;AAI1B,wBAAqB,UAAU,sBAAsB,SAAU,aAAa,UAAU;AACpF,QAAI,kBAAkB,KAAK;AAC3B,IAAO,KAAK,CAAC,YAAY,aAAa,SAAU,MAAM;AACpD,UAAI,MAAM,OAAO;AACjB,UAAI,UAAU,SAAS,QAAQ;AAC/B,UAAI,OAAO,gBAAgB,YAAY;AAEvC,UAAI,MAAM;AACR,aAAK,SAAS,QAAQ,UAAU,YAAY,IAAI,iBAAiB,QAAQ,YAAY,IAAI,yBAAyB;AAClH,aAAK,SAAS,UAAU,YAAY;AAAA;AAAA;AAGxC,QAAI,WAAW,gBAAgB,YAAY;AAC3C,QAAI,gBAAgB,YAAY,IAAI;AACpC,QAAI,YAAY,SAAS;AACzB,QAAI,UAAU,aAAa,OAAO,YAAY,IAAI;AAClD,QAAI,QAAQ,SAAS;AACrB,gBAAY,iBAAiB,SAAS,SAAS,QAAQ,AAAO,SAAS,iBAAiB,cAAc,QAAQ,aAAa,WAAW,OAAO,KAAK,UAAU,IAAI,QAAQ,WAAW,SAAS,OAAO,KAAK,QAAQ,MAAM,cAAc;AAAA,MAClO;AAAA,MACA;AAAA;AAAA;AAaJ,wBAAqB,UAAU,eAAe,SAAU,aAAa;AACnE,QAAI,kBAAkB,YAAY,IAAI,mBAAmB;AACzD,QAAI,eAAe,KAAK;AACxB,QAAI,oBAAoB,KAAK,gBAAgB;AAC7C,QAAI,YAAY,YAAY,YAAY;AACxC,QAAI,KAAK,IAAG;AACZ,QAAI,KAAK,IAAG;AAEZ,QAAI,kBAAkB,KAAK,qBAAqB;AAEhD,QAAI,WAAW,aAAa;AAC5B,QAAI,aAAa,SAAS;AAC1B,QAAI,YAAY,SAAS;AACzB,QAAI,SAAS,CAAC,YAAY,IAAI;AAC9B,QAAI,SAAS;AAAA,MACX,iBAAiB,CAAC,aAAa,GAAG,aAAa;AAAA,MAC/C,WAAW;AAAA,MACX,WAAW,SAAS;AAAA,MACpB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA;AAGrB,QAAI,CAAC,YAAY;AACf,aAAO;AAAA;AAGT,QAAI,iBAAiB,YAAY;AACjC,WAAO,gBAAgB,aAAa,CAAC,eAAe;AAYpD,aAAS,IAAI,kBAAkB,GAAG,mBAAmB,gBAAgB,iBAAiB,gBAAgB,eAAe,MAAM,KAAK,WAAW,EAAE,GAAG;AAC9I,qBAAe,YAAY,SAAS;AAEpC,UACA,CAAC,gBAAgB,eAAe,IAAI,iBAAiB,IAAI,qBAEzD,gBAAgB,CAAC,UAAU,cAAc,iBAAiB,IAAI;AAC5D,YAAI,eAAe,IAAI,iBAAiB,GAAG;AACzC,6BAAmB;AAAA,eACd;AAEL,6BAAmB;AAAA;AAGrB,YAAI,kBAAkB;AACpB,cAAI,OAAO,qBAAqB,MAAM;AACpC,mBAAO,oBAAoB,iBAAiB;AAAA;AAG9C,YAAE,OAAO;AAAA;AAAA;AAIb,uBAAiB;AAAA;AAGnB,aAAS,IAAI,kBAAkB,GAAG,mBAAmB,gBAAgB,iBAAiB,gBAAgB,eAAe,MAAM,KAAK,IAAI,EAAE,GAAG;AACvI,qBAAe,YAAY,SAAS;AAEpC,UAEC,EAAC,gBAAgB,CAAC,UAAU,gBAAgB,aAAa,OAC1D,iBAAiB,IAAI,eAAe,GAAG;AACrC,yBAAiB;AAEjB,YAAI,OAAO,qBAAqB,MAAM;AACpC,iBAAO,oBAAoB,iBAAiB;AAAA;AAG9C,UAAE,OAAO;AACT,UAAE,OAAO;AAAA;AAGX,yBAAmB;AAAA;AAGrB,WAAO;AAEP,yBAAqB,IAAI;AACvB,UAAI,IAAI;AACN,YAAI,WAAW,GAAG;AAClB,YAAI,QAAQ,SAAS,MAAM,GAAG;AAC9B,eAAO;AAAA,UACL,GAAG;AAAA,UACH,GAAG,QAAQ,SAAS;AAAA,UACpB,GAAG,GAAG;AAAA;AAAA;AAAA;AAKZ,uBAAmB,UAAU,UAAU;AACrC,aAAO,SAAS,KAAK,YAAY,SAAS,KAAK,WAAW;AAAA;AAAA;AAI9D,wBAAqB,UAAU,uBAAuB,SAAU,iBAAiB;AAC/E,QAAI,CAAC,KAAK,iBAAiB;AACzB,aAAO;AAAA;AAGT,QAAI;AACJ,QAAI,eAAe,KAAK;AACxB,QAAI;AACJ,iBAAa,UAAU,SAAU,OAAO,KAAK;AAC3C,UAAI,gBAAgB,MAAM;AAM1B,UAAI,gBAAgB,QAAQ,iBAAiB,MAAM;AACjD,uBAAe;AAAA;AAGjB,UAAI,kBAAkB,iBAAiB;AACrC,gBAAQ;AAAA;AAAA;AAGZ,WAAO,SAAS,OAAO,QAAQ;AAAA;AAGjC,wBAAqB,OAAO;AAC5B,SAAO;AAAA,EACP;AAEF,IAAO,+BAAQ;;;ACzZA,uCAAuC,WAAW;AAO/D,YAAU,eAAe,gBAAgB,gBAAgB,SAAU,SAAS,SAAS;AACnF,QAAI,kBAAkB,QAAQ;AAC9B,uBAAmB,QAAQ,QAAQ,cAAc;AAAA,MAC/C,UAAU;AAAA,MACV,SAAS;AAAA,MACT,OAAO;AAAA,OACN,SAAU,aAAa;AACxB,kBAAY,mBAAmB;AAAA;AAAA;AAAA;;;ACT9B,mBAAiB,WAAW;AACjC,MAAI;AACJ,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAChC,gCAA8B;AAAA;;;ACNzB,mBAAiB,WAAW;AACjC,MAAI;AACJ,MAAI;AAAA;;;ACDN,IAAI,kBAEJ,SAAU,QAAQ;AAChB,YAAU,kBAAiB;AAE3B,8BAA2B;AACzB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,iBAAgB;AAC7B,WAAO;AAAA;AAGT,mBAAgB,OAAO;AACvB,mBAAgB,gBAAgB,qBAAqB,sBAAc,eAAe;AAAA,IAChF,UAAU;AAAA,IACV,UAAU;AAAA,IACV,kBAAkB;AAAA,IAClB,iBAAiB;AAAA,IACjB,kBAAkB;AAAA,IAClB,yBAAyB;AAAA;AAE3B,SAAO;AAAA,EACP;AAEF,IAAO,0BAAQ;;;AClBf,IAAI,UAAQ;AACL,qCAAqC,KAAK,eAAe,UAAU;AACxE,UAAM,KAAK,kBAAkB,KAAK,SAAU,gBAAgB;AAC1D,QAAI,SAAS,eAAe,gBAAgB,IAAI,cAAc;AAE9D,QAAI,QAAQ;AACV,aAAO,WAAW;AAAA;AAAA;AAAA;AAIjB,uCAAuC,KAAK,eAAe;AAChE,MAAI,oBAAoB,QAAM,KAAK;AACnC,MAAI,iBAAiB,kBAAkB;AAEvC,WAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK;AAC9C,QAAI,cAAc,eAAe;AACjC,QAAI,iBAAiB,kBAAkB,IAAI;AAC3C,QAAI,kBAAkB,eAAe;AAErC,QAAI,iBAAiB;AACnB,UAAI,QAAQ,cAAc;AAC1B,UAAI,SAAS,gBAAgB,IAAI;AAEjC,UAAI,QAAQ;AACV,wBAAgB,UAAU;AAE1B,YAAI,CAAC,gBAAgB,OAAO,QAAQ;AAClC,gCAAsB,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAOnD,+BAA+B,mBAAmB,gBAAgB;AAChE,MAAI,gBAAgB;AAClB,sBAAkB,UAAU,eAAe,MAAM;AACjD,QAAI,aAAa,eAAe;AAChC,kBAAc,WAAW;AAAA;AAAA;AAI7B,8BAA8B,KAAK,eAAe;AAEhD,MAAI,iBAAiB;AAAA,IACnB,OAAO;AAAA,IACP,eAAe,MAAM,eAAe;AAAA,IACpC,gBAAgB,MAAM,iBAAgB;AAAA,IACtC,iBAAiB;AAAA,IACjB,YAAY;AAAA;AAId,MAAI,aAAa,eAAe,aAAa,IAAI,uBAAe,IAAI;AACpE,OAAK,CAAC,OAAO,QAAQ,eAAe,SAAU,WAAW;AACvD,eAAW,GAAG,WAAW,SAAU,OAAO;AACxC,UAAI,QAAQ;AACZ,qBAAe,gBAAgB,KAAK,SAAU,QAAQ;AAGpD,YAAI,CAAC,MAAM,oBAAoB,OAAO,MAAM,SAAS;AACnD;AAAA;AAGF,YAAI,SAAU,QAAO,YAAY,IAAI;AACrC,YAAI,QAAQ,UAAU,OAAO,OAAO,qBAAqB,eAAe,MAAM,UAAU,eAAe,YAAY;AACnH,SAAC,OAAO,MAAM,IAAI,YAAY,SAAS,SAAS,MAAM,KAAK;AAAA,UACzD,YAAY,OAAO,MAAM;AAAA,UACzB,OAAO,MAAM;AAAA,UACb,KAAK,MAAM;AAAA;AAAA;AAGf,YAAM,UAAU,eAAe,eAAe;AAAA;AAAA;AAGlD,SAAO;AAAA;AAOT,yBAAwB,KAAK,OAAO;AAClC,MAAI,eAAe;AAAA,IACjB,MAAM;AAAA,IACN,WAAW;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA;AAAA,IAEZ;AAAA;AAAA;AAIJ,uBAAuB,eAAe,GAAG,GAAG,GAAG;AAC7C,SAAO,cAAc,iBAAiB,aAAa,CAAC,GAAG;AAAA;AAOzD,+BAA+B,iBAAiB;AAC9C,MAAI;AAGJ,MAAI,SAAS;AACb,MAAI,eAAe;AAAA,IACjB,aAAa;AAAA,IACb,aAAa;AAAA,IACb,cAAc;AAAA,IACd,kBAAkB;AAAA;AAEpB,MAAI,0BAA0B;AAC9B,kBAAgB,KAAK,SAAU,cAAc;AAC3C,QAAI,gBAAgB,aAAa;AACjC,QAAI,UAAU,cAAc,IAAI,YAAY,QAAQ,QAAQ,cAAc,IAAI,YAAY,QAAQ,SAAS;AAE3G,QAAI,aAAa,SAAS,WAAW,aAAa,SAAS,cAAc;AACvE,oBAAc;AAAA;AAKhB,8BAA0B,2BAA2B,cAAc,IAAI,2BAA2B;AAAA;AAEpG,SAAO;AAAA,IACL;AAAA,IACA,KAAK;AAAA,MAIH,kBAAkB;AAAA,MAClB,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,MAClB,yBAAyB,CAAC,CAAC;AAAA;AAAA;AAAA;AAK1B,sCAAsC,WAAW;AACtD,YAAU,kBAAkB,UAAU,SAAS,UAAU,QAAQ,SAAU,SAAS,KAAK;AACvF,QAAI,WAAW,QAAM;AACrB,QAAI,oBAAoB,SAAS,qBAAsB,UAAS,oBAAoB;AACpF,sBAAkB,KAAK,SAAU,gBAAgB;AAG/C,qBAAe,kBAAkB;AAAA;AAEnC,YAAQ,cAAc;AAAA,MACpB,UAAU;AAAA,MACV,SAAS;AAAA,OACR,SAAU,eAAe;AAC1B,UAAI,sBAAsB,8BAA8B;AACxD,WAAK,oBAAoB,UAAU,SAAU,gBAAgB;AAC3D,YAAI,cAAc,eAAe,MAAM;AACvC,YAAI,iBAAiB,kBAAkB,IAAI,gBAAgB,kBAAkB,IAAI,aAAa,qBAAqB,KAAK,eAAe;AACvI,YAAI,kBAAkB,eAAe,mBAAoB,gBAAe,kBAAkB;AAE1F,wBAAgB,IAAI,cAAc,KAAK;AAAA,UACrC,qBAAqB;AAAA,UACrB,OAAO;AAAA,UACP,UAAU;AAAA;AAAA;AAAA;AAMhB,sBAAkB,KAAK,SAAU,gBAAgB;AAC/C,UAAI,aAAa,eAAe;AAChC,UAAI;AACJ,UAAI,kBAAkB,eAAe;AAErC,UAAI,iBAAiB;AACnB,YAAI,aAAa,gBAAgB,OAAO;AAExC,YAAI,cAAc,MAAM;AACtB,wBAAc,gBAAgB,IAAI;AAAA;AAAA;AAItC,UAAI,CAAC,aAAa;AAChB,8BAAsB,mBAAmB;AACzC;AAAA;AAGF,UAAI,mBAAmB,sBAAsB;AAC7C,iBAAW,OAAO,iBAAiB,aAAa,iBAAiB;AACjE,iBAAW,kBAAkB,eAAe;AAC5C,MAAa,eAAe,gBAAgB,kBAAkB,YAAY,MAAM,IAAI,YAAY,OAAO;AAAA;AAAA;AAAA;;;AChM7G,IAAI,iBAEJ,SAAU,QAAQ;AAChB,YAAU,iBAAgB;AAE1B,6BAA0B;AACxB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO;AACb,WAAO;AAAA;AAGT,kBAAe,UAAU,SAAS,SAAU,eAAe,SAAS,KAAK;AACvE,WAAO,UAAU,OAAO,MAAM,MAAM;AAEpC,QAAI,cAAc,YAAY;AAC5B,WAAK;AAEL;AAAA;AAMF,SAAK,QAAQ,cAAc;AAE3B,IAAM,4BAA4B,KAAK,eAAe;AAAA,MACpD,KAAK,KAAK,iBAAiB,KAAK;AAAA,MAChC,MAAM,KAAK,iBAAiB,MAAM;AAAA,MAClC,YAAY,KAAK,iBAAiB,YAAY;AAAA;AAAA;AAIlD,kBAAe,UAAU,UAAU,WAAY;AAC7C,SAAK;AAEL,WAAO,UAAU,QAAQ,MAAM,MAAM;AAAA;AAGvC,kBAAe,UAAU,SAAS,WAAY;AAC5C,IAAM,8BAA8B,KAAK,KAAK,KAAK;AACnD,SAAK,QAAQ;AAAA;AAGf,kBAAe,OAAO;AACtB,SAAO;AAAA,EACP;AAEF,IAAI,mBAAmB;AAAA,EACrB,MAAM,SAAU,cAAc,kBAAkB,YAAY,GAAG;AAC7D,QAAI,YAAY,KAAK;AACrB,QAAI,QAAQ,UAAU;AAEtB,QAAI,YAAY,aAAa,WAAW;AAExC,QAAI,CAAC,WAAW;AACd;AAAA;AAGF,QAAI,gBAAgB,iBAAiB,kBAAkB,MAAM,CAAC,EAAE,SAAS,EAAE,UAAU,WAAW,YAAY;AAC5G,QAAI,eAAgB,eAAc,SAAS,IAAI,cAAc,aAAa,cAAc,cAAc,cAAc,QAAQ,cAAc,QAAQ,cAAc,cAAc,cAAc,cAAe,OAAM,KAAK,MAAM,MAAM,MAAM;AACxO,QAAI,SAAQ,KAAK,IAAI,IAAI,EAAE,OAAO;AAClC,UAAM,KAAM,OAAM,KAAK,gBAAgB,SAAQ;AAC/C,UAAM,KAAM,OAAM,KAAK,gBAAgB,SAAQ;AAE/C,QAAI,aAAa,KAAK,cAAc,8BAA8B;AAClE,eAAW,GAAG,OAAO,CAAC,GAAG,MAAM,GAAG,WAAW,SAAS,WAAW;AACjE,SAAK,QAAQ;AAEb,QAAI,UAAU,OAAO,MAAM,MAAM,UAAU,OAAO,MAAM,IAAI;AAC1D,aAAO;AAAA;AAAA;AAAA,EAGX,KAAK,UAAU,SAAU,OAAO,WAAW,cAAc,kBAAkB,YAAY,GAAG;AACxF,QAAI,gBAAgB,iBAAiB,kBAAkB,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,EAAE,MAAM,EAAE,OAAO,WAAW,YAAY;AAClH,WAAO,cAAc,SAAU,OAAM,KAAK,MAAM,MAAM,cAAc,QAAQ,cAAc;AAAA;AAAA,EAE5F,YAAY,UAAU,SAAU,OAAO,WAAW,cAAc,kBAAkB,YAAY,GAAG;AAC/F,QAAI,gBAAgB,iBAAiB,kBAAkB,CAAC,GAAG,IAAI,CAAC,EAAE,aAAa,EAAE,cAAc,WAAW,YAAY;AACtH,WAAO,cAAc,SAAU,OAAM,KAAK,MAAM,MAAM,EAAE;AAAA;AAAA;AAI5D,mBAAmB,iBAAiB;AAClC,SAAO,SAAU,cAAc,kBAAkB,YAAY,GAAG;AAC9D,QAAI,YAAY,KAAK;AACrB,QAAI,QAAQ,UAAU;AAEtB,QAAI,YAAY,aAAa,WAAW;AAExC,QAAI,CAAC,WAAW;AACd;AAAA;AAGF,QAAI,eAAe,gBAAgB,OAAO,WAAW,cAAc,kBAAkB,YAAY;AACjG,eAAW,cAAc,OAAO,CAAC,GAAG,MAAM;AAC1C,SAAK,QAAQ;AAEb,QAAI,UAAU,OAAO,MAAM,MAAM,UAAU,OAAO,MAAM,IAAI;AAC1D,aAAO;AAAA;AAAA;AAAA;AAKb,IAAI,mBAAmB;AAAA,EACrB,MAAM,SAAU,UAAU,UAAU,WAAW,YAAY,cAAc;AACvE,QAAI,OAAO,UAAU;AACrB,QAAI,MAAM;AACV,QAAI,OAAO,aAAa,MAAM,iBAAiB;AAC/C,eAAW,YAAY,CAAC,GAAG;AAE3B,QAAI,KAAK,QAAQ,KAAK;AACpB,UAAI,QAAQ,SAAS,KAAK,SAAS;AACnC,UAAI,cAAc,KAAK;AACvB,UAAI,aAAa,KAAK;AACtB,UAAI,SAAS,KAAK,UAAU,IAAI;AAAA,WAC3B;AAEL,UAAI,QAAQ,SAAS,KAAK,SAAS;AACnC,UAAI,cAAc,KAAK;AACvB,UAAI,aAAa,KAAK;AACtB,UAAI,SAAS,KAAK,UAAU,KAAK;AAAA;AAGnC,WAAO;AAAA;AAAA,EAET,OAAO,SAAU,UAAU,UAAU,WAAW,YAAY,cAAc;AACxE,QAAI,OAAO,UAAU;AACrB,QAAI,MAAM;AACV,QAAI,QAAQ,aAAa,MAAM;AAC/B,QAAI,eAAe,MAAM,gBAAgB;AACzC,QAAI,cAAc,MAAM,eAAe;AACvC,eAAW,WAAW,MAAM,aAAa,YAAY,CAAC,GAAG;AACzD,eAAW,MAAM,aAAa;AAE9B,QAAI,UAAU,aAAa,cAAc;AACvC,UAAI,QAAQ,SAAS,KAAK,SAAS;AAGnC,UAAI,cAAc,aAAa,KAAK,aAAa;AACjD,UAAI,aAAa,aAAa;AAC9B,UAAI,SAAS,KAAK,UAAU,IAAI;AAAA,WAC3B;AAEL,UAAI,QAAQ,SAAS,KAAK,SAAS;AAGnC,UAAI,cAAc,YAAY,KAAK,YAAY;AAC/C,UAAI,aAAa,YAAY;AAC7B,UAAI,SAAS,KAAK,UAAU,KAAK;AAAA;AAGnC,WAAO;AAAA;AAAA,EAET,YAAY,SAAU,UAAU,UAAU,WAAW,YAAY,cAAc;AAC7E,QAAI,OAAO,UAAU;AACrB,QAAI,OAAO,aAAa,MAAM,iBAAiB;AAC/C,QAAI,MAAM;AACV,eAAW,YAAY,CAAC,GAAG;AAE3B,QAAI,KAAK,WAAW,cAAc;AAChC,UAAI,QAAQ,SAAS,KAAK,SAAS;AACnC,UAAI,cAAc,KAAK;AACvB,UAAI,aAAa,KAAK;AACtB,UAAI,SAAS,KAAK,UAAU,IAAI;AAAA,WAC3B;AAEL,UAAI,QAAQ,SAAS,KAAK,SAAS;AACnC,UAAI,cAAc,KAAK;AACvB,UAAI,aAAa,KAAK;AACtB,UAAI,SAAS,KAAK,UAAU,KAAK;AAAA;AAGnC,WAAO;AAAA;AAAA;AAGX,IAAO,yBAAQ;;;AClLR,mBAAiB,WAAW;AACjC,gBAAc;AACd,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAChC,+BAA6B;AAAA;;;ACJ/B,IAAI,kBAEJ,SAAU,QAAQ;AAChB,YAAU,kBAAiB;AAE3B,8BAA2B;AACzB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,iBAAgB;AAC7B,WAAO;AAAA;AAGT,mBAAgB,OAAO;AACvB,mBAAgB,aAAa;AAC7B,mBAAgB,gBAAgB,qBAAqB,sBAAc,eAAe;AAAA,IAChF,MAAM;AAAA,IAEN,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,cAAc;AAAA,IACd,iBAAiB;AAAA,IAEjB,gBAAgB;AAAA,MACd,WAAW;AAAA,QACT,OAAO;AAAA,QACP,OAAO;AAAA;AAAA,MAET,WAAW;AAAA,QACT,OAAO;AAAA,QACP,SAAS;AAAA;AAAA;AAAA,IAGb,wBAAwB;AAAA,MACtB,WAAW;AAAA,QACT,OAAO;AAAA,QACP,OAAO;AAAA;AAAA,MAET,WAAW;AAAA,QACT,OAAO;AAAA,QACP,SAAS;AAAA;AAAA;AAAA,IAIb,aAAa;AAAA,IACb,YAAY;AAAA,IAEZ,YAAY;AAAA,IACZ,aAAa;AAAA,MACX,OAAO;AAAA,MACP,aAAa;AAAA;AAAA,IAEf,gBAAgB;AAAA,IAChB,gBAAgB;AAAA,IAChB,iBAAiB;AAAA,MACf,OAAO;AAAA,MACP,SAAS;AAAA;AAAA,IAEX,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,MACT,OAAO;AAAA;AAAA,IAET,aAAa;AAAA,IACb,YAAY;AAAA,MACV,OAAO;AAAA;AAAA,IAET,UAAU;AAAA,MACR,aAAa;AAAA,QACX,aAAa;AAAA;AAAA,MAEf,iBAAiB;AAAA,QACf,OAAO;AAAA;AAAA;AAAA;AAIb,SAAO;AAAA,EACP;AAEF,IAAO,0BAAQ;;;AC3Ef,IAAI,QAAe;AAEnB,IAAI,4BAA4B;AAChC,IAAI,6BAA6B;AACjC,IAAI,sBAAsB;AAC1B,IAAI,2BAA2B;AAC/B,IAAI,aAAa;AACjB,IAAI,WAAW;AACf,IAAI,YAAY;AAChB,IAAI,+BAA+B,CAAC,QAAQ,OAAO,eAAe;AAClE,IAAI,4BAA4B;AAAA,EAC9B,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,OAAO;AAAA;AAGT,IAAI,iBAEJ,SAAU,QAAQ;AAChB,YAAU,iBAAgB;AAE1B,6BAA0B;AACxB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,gBAAe;AAC5B,UAAM,gBAAgB;AACtB,WAAO;AAAA;AAGT,kBAAe,UAAU,OAAO,SAAU,SAAS,KAAK;AACtD,SAAK,MAAM;AAEX,SAAK,WAAW,KAAK,KAAK,UAAU;AACpC,SAAK,cAAc,KAAK,KAAK,aAAa;AAAA;AAG5C,kBAAe,UAAU,SAAS,SAAU,eAAe,SAAS,KAAK,SAAS;AAChF,WAAO,UAAU,OAAO,MAAM,MAAM;AAEpC,IAAS,eAAe,MAAM,uBAAuB,cAAc,IAAI,aAAa;AACpF,SAAK,UAAU,cAAc;AAE7B,QAAI,cAAc,IAAI,YAAY,OAAO;AACvC,WAAK,MAAM;AACX;AAAA;AAGF,QAAI,cAAc,YAAY;AAC5B,WAAK;AAEL,WAAK,MAAM;AACX;AAAA;AAMF,QAAI,CAAC,WAAW,QAAQ,SAAS,cAAc,QAAQ,SAAS,KAAK,KAAK;AACxE,WAAK;AAAA;AAGP,SAAK;AAAA;AAGP,kBAAe,UAAU,UAAU,WAAY;AAC7C,SAAK;AAEL,WAAO,UAAU,QAAQ,MAAM,MAAM;AAAA;AAGvC,kBAAe,UAAU,SAAS,WAAY;AAC5C,IAAS,MAAM,MAAM;AACrB,QAAI,KAAK,KAAK,IAAI;AAClB,OAAG,IAAI,aAAa,KAAK;AACzB,OAAG,IAAI,WAAW,KAAK;AAAA;AAGzB,kBAAe,UAAU,aAAa,WAAY;AAChD,QAAI,YAAY,KAAK;AACrB,cAAU;AACV,SAAK,YAAY;AACjB,SAAK,cAAc,YAAY;AAE/B,SAAK;AAEL,SAAK;AAEL,QAAI,WAAW,KAAK,cAAc,cAAc,IAAY;AAE5D,SAAK;AAEL,SAAK;AAEL,SAAK;AAEL,cAAU,IAAI;AAEd,SAAK;AAAA;AAGP,kBAAe,UAAU,iBAAiB,WAAY;AACpD,QAAI,gBAAgB,KAAK;AACzB,QAAI,MAAM,KAAK;AACf,QAAI,iBAAiB,cAAc,IAAI;AACvC,QAAI,iBAAiB,iBAAiB,2BAA2B;AAGjE,QAAI,YAAY,KAAK;AAErB,QAAI,SAAS;AAAA,MACX,OAAO,IAAI;AAAA,MACX,QAAQ,IAAI;AAAA;AAGd,QAAI,eAAe,KAAK,YAAY,aAAa;AAAA,MAG/C,OAAO,OAAO,QAAQ,UAAU,IAAI,UAAU;AAAA,MAC9C,KAAK,OAAO,SAAS,sBAAsB,4BAA4B;AAAA,MACvE,OAAO,UAAU;AAAA,MACjB,QAAQ;AAAA,QACN;AAAA,MACF,OAAO;AAAA,MACP,KAAK,UAAU;AAAA,MACf,OAAO;AAAA,MACP,QAAQ,UAAU;AAAA;AAIpB,QAAI,eAAe,AAAO,gBAAgB,cAAc;AAExD,SAAK,CAAC,SAAS,OAAO,SAAS,WAAW,SAAU,MAAM;AACxD,UAAI,aAAa,UAAU,MAAM;AAC/B,qBAAa,QAAQ,aAAa;AAAA;AAAA;AAGtC,QAAI,aAAa,AAAO,cAAc,cAAc;AACpD,SAAK,YAAY;AAAA,MACf,GAAG,WAAW;AAAA,MACd,GAAG,WAAW;AAAA;AAEhB,SAAK,QAAQ,CAAC,WAAW,OAAO,WAAW;AAC3C,SAAK,YAAY,YAAY,KAAK,MAAM;AAAA;AAG1C,kBAAe,UAAU,iBAAiB,WAAY;AACpD,QAAI,YAAY,KAAK;AACrB,QAAI,WAAW,KAAK;AACpB,QAAI,SAAS,KAAK;AAElB,QAAI,kBAAkB,KAAK,cAAc;AACzC,QAAI,UAAU,mBAAmB,gBAAgB,IAAI;AACrD,QAAI,cAAc,KAAK,cAAc;AACrC,QAAI,mBAAoB,MAAK,mBAAmB,IAAI;AAEpD,gBAAY,KAAK,WAAW,cAAc,CAAC,UAAU;AAAA,MACnD,QAAQ,mBAAmB,IAAI;AAAA,MAC/B,QAAQ;AAAA,QACN,WAAW,cAAc,UAAU;AAAA,MACrC,QAAQ,mBAAmB,IAAI;AAAA,MAC/B,QAAQ;AAAA,QACN,WAAW,YAAY,CAAC,UAAU;AAAA,MACpC,QAAQ,mBAAmB,KAAK;AAAA,MAChC,QAAQ;AAAA,MACR,UAAU,KAAK,KAAK;AAAA,QAEpB;AAAA,MACA,QAAQ,mBAAmB,KAAK;AAAA,MAChC,QAAQ;AAAA,MACR,UAAU,KAAK,KAAK;AAAA;AAGtB,QAAI,OAAO,UAAU,gBAAgB,CAAC;AACtC,cAAU,IAAI,SAAS,IAAI,KAAK;AAChC,cAAU,IAAI,SAAS,IAAI,KAAK;AAChC,cAAU;AAAA;AAGZ,kBAAe,UAAU,iBAAiB,WAAY;AACpD,WAAO,CAAC,GAAG,KAAK,MAAM;AAAA;AAGxB,kBAAe,UAAU,oBAAoB,WAAY;AACvD,QAAI,gBAAgB,KAAK;AACzB,QAAI,OAAO,KAAK;AAChB,QAAI,WAAW,KAAK,cAAc;AAClC,QAAI,cAAc,cAAc,IAAI;AACpC,aAAS,IAAI,IAAI,MAAK;AAAA,MACpB,QAAQ;AAAA,MACR,OAAO;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,QACH,OAAO,KAAK;AAAA,QACZ,QAAQ,KAAK;AAAA;AAAA,MAEf,OAAO;AAAA,QACL,MAAM,cAAc,IAAI;AAAA;AAAA,MAE1B,IAAI;AAAA;AAGN,QAAI,aAAa,IAAI,MAAK;AAAA,MACxB,OAAO;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,QACH,OAAO,KAAK;AAAA,QACZ,QAAQ,KAAK;AAAA;AAAA,MAEf,OAAO;AAAA,QACL,MAAM;AAAA;AAAA,MAER,IAAI;AAAA,MACJ,SAAS,KAAK,KAAK,eAAe;AAAA;AAEpC,QAAI,KAAK,KAAK,IAAI;AAElB,QAAI,aAAa;AACf,iBAAW,GAAG,aAAa,KAAK,eAAe;AAC/C,iBAAW,SAAS;AACpB,SAAG,GAAG,aAAa,KAAK;AACxB,SAAG,GAAG,WAAW,KAAK;AAAA,WACjB;AACL,SAAG,IAAI,aAAa,KAAK;AACzB,SAAG,IAAI,WAAW,KAAK;AAAA;AAGzB,aAAS,IAAI;AAAA;AAGf,kBAAe,UAAU,oBAAoB,WAAY;AACvD,QAAI,OAAO,KAAK,kBAAkB,KAAK;AAEvC,SAAK,cAAc,iBAAiB;AAEpC,QAAI,CAAC,MAAM;AACT;AAAA;AAGF,QAAI,OAAO,KAAK;AAChB,QAAI,cAAc,KAAK;AACvB,QAAI,OAAO,YAAY;AACvB,QAAI,WAAW,YAAY,eAAe,YAAY,iBACpD,KAAK;AAEP,QAAI,YAAY,MAAM;AACpB;AAAA;AAGF,QAAI,kBAAkB,KAAK,cAAc;AAEzC,QAAI,cAAe,iBAAgB,KAAK,gBAAgB,MAAM;AAC9D,sBAAkB,CAAC,gBAAgB,KAAK,aAAa,gBAAgB,KAAK;AAC1E,QAAI,oBAAoB,CAAC,GAAG,KAAK;AACjC,QAAI,mBAAmB,CAAC,GAAG,KAAK;AAChC,QAAI,aAAa,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG;AACpC,QAAI,aAAa;AACjB,QAAI,OAAO,iBAAiB,KAAM,MAAK,UAAU;AACjD,QAAI,YAAY;AAEhB,QAAI,SAAS,KAAK,MAAM,KAAK,UAAU,KAAK;AAC5C,QAAI;AACJ,SAAK,KAAK,CAAC,WAAW,SAAU,OAAO,OAAO;AAC5C,UAAI,SAAS,KAAK,QAAQ,QAAQ;AAChC,qBAAa;AACb;AAAA;AAOF,UAAI,UAAU,SAAS,QAAQ,MAAM,UAAU,UAAU;AAEzD,UAAI,aAAa,UAAU,IAAI,UAAU,OAAO,iBAAiB,mBAAmB;AAEpF,UAAI,WAAW,CAAC,eAAe,OAAO;AACpC,mBAAW,KAAK,CAAC,WAAW,WAAW,SAAS,GAAG,IAAI;AACvD,mBAAW,KAAK,CAAC,WAAW,WAAW,SAAS,GAAG,IAAI;AAAA,iBAC9C,CAAC,WAAW,aAAa;AAClC,mBAAW,KAAK,CAAC,WAAW;AAC5B,mBAAW,KAAK,CAAC,WAAW;AAAA;AAG9B,iBAAW,KAAK,CAAC,WAAW;AAC5B,iBAAW,KAAK,CAAC,WAAW;AAC5B,mBAAa;AACb,oBAAc;AAAA;AAEhB,QAAI,gBAAgB,KAAK;AAEzB,mCAA+B,gBAAgB;AAC7C,UAAI,QAAQ,cAAc,SAAS,iBAAiB,2BAA2B;AAC/E,UAAI,SAAQ,IAAY;AACxB,UAAI,UAAU,IAAY,gBAAQ;AAAA,QAChC,OAAO;AAAA,UACL,QAAQ;AAAA;AAAA,QAEV,wBAAwB;AAAA,QACxB,OAAO,MAAM,SAAS,aAAa;AAAA,QACnC,QAAQ;AAAA,QACR,IAAI;AAAA;AAEN,UAAI,WAAW,IAAY,iBAAS;AAAA,QAClC,OAAO;AAAA,UACL,QAAQ;AAAA;AAAA,QAEV,wBAAwB;AAAA,QACxB,OAAO,MAAM,SAAS,aAAa;AAAA,QACnC,QAAQ;AAAA,QACR,IAAI;AAAA;AAEN,aAAM,IAAI;AACV,aAAM,IAAI;AACV,aAAO;AAAA;AAIT,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,UAAI,QAAQ,sBAAsB,MAAM;AAExC,WAAK,cAAc,YAAY,IAAI;AAEnC,WAAK,cAAc,eAAe,KAAK;AAAA;AAAA;AAI3C,kBAAe,UAAU,yBAAyB,WAAY;AAC5D,QAAI,gBAAgB,KAAK;AACzB,QAAI,iBAAiB,cAAc,IAAI;AAEvC,QAAI,mBAAmB,OAAO;AAC5B;AAAA;AAIF,QAAI;AACJ,QAAI,UAAU,KAAK;AACnB,kBAAc,eAAe,SAAU,SAAS,WAAW;AACzD,UAAI,eAAe,cAAc,aAAa,SAAS,WAAW;AAClE,WAAK,cAAc,SAAU,aAAa;AACxC,YAAI,QAAQ;AACV;AAAA;AAGF,YAAI,mBAAmB,QAAQ,QAAQ,8BAA8B,YAAY,IAAI,WAAW,GAAG;AACjG;AAAA;AAGF,YAAI,WAAW,QAAQ,aAAa,gBAAgB,UAAU,WAAW;AACzE,YAAI,WAAW,YAAY;AAC3B,YAAI;AACJ,YAAI,WAAW,YAAY;AAE3B,YAAI,YAAY,QAAQ,SAAS,cAAc;AAC7C,6BAAmB,SAAS,aAAa,UAAU;AAAA;AAGrD,mBAAW,YAAY,UAAU,aAAa;AAC9C,iBAAS;AAAA,UACP;AAAA,UACA,QAAQ;AAAA,UACR,SAAS;AAAA,UACT;AAAA,UACA;AAAA;AAAA,SAED;AAAA,OACF;AACH,WAAO;AAAA;AAGT,kBAAe,UAAU,gBAAgB,WAAY;AACnD,QAAI,YAAY,KAAK;AACrB,QAAI,eAAe,KAAK;AACxB,QAAI,UAAU,aAAa,UAAU,CAAC,MAAM;AAC5C,QAAI,eAAe,aAAa,eAAe,CAAC,MAAM;AACtD,QAAI,cAAc,KAAK,cAAc;AACrC,QAAI,OAAO,KAAK;AAChB,QAAI,gBAAgB,KAAK;AACzB,QAAI,MAAM,KAAK;AACf,QAAI,eAAe,cAAc,IAAI,mBAAmB;AACxD,QAAI,cAAc,cAAc,IAAI;AACpC,QAAI,SAAS,aAAa,SAAS,IAAI,MAAK;AAAA,MAC1C,QAAQ;AAAA,MACR,OAAO;AAAA,QACL,MAAM,cAAc,IAAI;AAAA;AAAA,MAE1B,YAAY;AAAA,QACV,UAAU;AAAA;AAAA;AAGd,gBAAY,IAAI;AAEhB,gBAAY,IAAI,IAAI,MAAK;AAAA,MACvB,QAAQ;AAAA,MACR,kBAAkB;AAAA,MAClB,OAAO;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,QACH,OAAO,KAAK;AAAA,QACZ,QAAQ,KAAK;AAAA,QACb,GAAG;AAAA;AAAA,MAEL,OAAO;AAAA,QACL,QAAQ,cAAc,IAAI,0BACvB,cAAc,IAAI;AAAA,QACrB,WAAW;AAAA,QACX,MAAM;AAAA;AAAA;AAIV,SAAK,CAAC,GAAG,IAAI,SAAU,aAAa;AAClC,UAAI,UAAU,cAAc,IAAI;AAEhC,UAAI,CAAC,mBAAmB,YAAY,QAAQ,QAAQ,aAAa,KAAK,QAAQ,QAAQ,cAAc,GAAG;AAErG,kBAAU,YAAY;AAEtB,YAAI,MAAuC;AACzC,uBAAa;AAAA;AAAA;AAIjB,UAAI,OAAO,aAAa,SAAS,IAAI,GAAG,GAAG,GAAG,MAAM;AACpD,WAAK,KAAK;AAAA,QACR,QAAQ,UAAU,KAAK;AAAA,QACvB,WAAW;AAAA,QACX,OAAO,KAAK,KAAK,aAAa,MAAM;AAAA,QACpC,WAAW,KAAK,KAAK,YAAY;AAAA,QACjC,aAAa,KAAK,KAAK,eAAe,MAAM;AAAA,QAC5C,YAAY,KAAK,KAAK,eAAe,MAAM;AAAA,QAC3C,IAAI;AAAA;AAEN,UAAI,QAAQ,KAAK;AACjB,UAAI,aAAa,cAAc,IAAI;AACnC,WAAK,gBAAgB,cAAa,YAAY,KAAK,MAAM;AACzD,WAAK,eAAe,MAAM,QAAQ,MAAM,SAAS,KAAK;AACtD,WAAK,SAAS,cAAc,SAAS,eAAe;AACpD,WAAK,MAAM,gBAAgB;AAC3B,WAAK,YAAY;AACjB,WAAK,YAAY,YAAY,QAAQ,cAAc,SAAS,CAAC,YAAY,gBAAgB;AACzF,0BAAoB;AACpB,UAAI,cAAc,cAAc,IAAI;AAGpC,UAAI,eAAe,MAAM;AACvB,aAAK,MAAM,OAAO;AAAA;AAGpB,kBAAY,IAAI,QAAQ,eAAe;AACvC,UAAI,iBAAiB,cAAc,SAAS;AAC5C,gBAAU,IAAI,aAAa,eAAe,IAAY,aAAK;AAAA,QACzD,QAAQ;AAAA,QACR,WAAW;AAAA,QACX,OAAO,gBAAgB,gBAAgB;AAAA,UACrC,GAAG;AAAA,UACH,GAAG;AAAA,UACH,MAAM;AAAA,UACN,eAAe;AAAA,UACf,OAAO;AAAA,UACP,MAAM,eAAe;AAAA,UACrB,MAAM,eAAe;AAAA;AAAA,QAEvB,IAAI;AAAA;AAAA,OAEL;AAEH,QAAI,iBAAiB;AAErB,QAAI,aAAa;AACf,UAAI,mBAAmB,cAAa,cAAc,IAAI,mBAAmB,KAAK;AAC9E,UAAI,eAAe,aAAa,aAAa,IAAY,aAAK;AAAA,QAC5D,OAAO,cAAc,SAAS,mBAAmB;AAAA,QACjD,QAAQ;AAAA,QACR,OAAO;AAAA,UACL,GAAG,CAAC,GAAG,GAAG,GAAG;AAAA,UACb,GAAG,KAAK,KAAK;AAAA,UACb,QAAQ;AAAA;AAAA;AAGZ,UAAI,WAAW,mBAAmB;AAClC,UAAI,iBAAiB,aAAa,iBAAiB,aAAa,cAAc,IAAI,mBAAmB,CAAC,WAAW,GAAG,CAAC,WAAW,GAAG,UAAU,UAAU,QAAQ;AAC/J,qBAAe,SAAS;AACxB,qBAAe,IAAI,KAAK,KAAK,mBAAmB,IAAI;AACpD,mBAAa,YAAY,YAAY,QAAQ,cAAc,SAAS,CAAC,YAAY,oBAAoB;AACrG,UAAI,qBAAqB,KAAK,IAAI,KAAK,KAAK,GAAG,KAAK,IAAI,kBAAkB;AAC1E,uBAAiB,aAAa,WAAW,IAAY,aAAK;AAAA,QACxD,WAAW;AAAA,QACX,OAAO;AAAA,UACL,GAAG,KAAK,KAAK;AAAA,UACb,QAAQ,mBAAmB;AAAA;AAAA;AAG/B,qBAAe,GAAG,aAAa,WAAY;AACzC,YAAI,cAAc;AAAA,SACjB,GAAG,YAAY,WAAY;AAC5B,YAAI,cAAc;AAAA;AAEpB,kBAAY,IAAI;AAChB,kBAAY,IAAI;AAChB,kBAAY,IAAI;AAAA;AAGlB,mBAAe,KAAK;AAAA,MAClB,WAAW;AAAA,MACX,QAAQ,UAAU,KAAK;AAAA,MACvB,OAAO,KAAK,KAAK,aAAa,MAAM;AAAA,MACpC,aAAa,KAAK,KAAK,eAAe,MAAM;AAAA,MAC5C,WAAW,KAAK,KAAK,YAAY;AAAA,MACjC,aAAa,KAAK,KAAK,eAAe,MAAM;AAAA,MAC5C,YAAY,KAAK,KAAK,eAAe,MAAM;AAAA;AAAA;AAI/C,kBAAe,UAAU,iBAAiB,WAAY;AACpD,QAAI,QAAQ,KAAK,SAAS,KAAK,cAAc;AAE7C,QAAI,aAAa,KAAK;AAEtB,SAAK,cAAc,CAAC,UAAU,MAAM,IAAI,CAAC,GAAG,MAAM,YAAY,OAAO,UAAU,MAAM,IAAI,CAAC,GAAG,MAAM,YAAY;AAAA;AAGjH,kBAAe,UAAU,kBAAkB,SAAU,aAAa,OAAO;AACvE,QAAI,gBAAgB,KAAK;AACzB,QAAI,aAAa,KAAK;AAEtB,QAAI,aAAa,KAAK;AAEtB,QAAI,aAAa,cAAc,8BAA8B;AAC7D,QAAI,gBAAgB,CAAC,GAAG;AACxB,eAAW,OAAO,YAAY,YAAY,cAAc,IAAI,cAAc,QAAQ,aAAa,WAAW,WAAW,OAAO,UAAU,WAAW,SAAS,eAAe,YAAY,QAAQ,MAAM,WAAW,WAAW,OAAO,UAAU,WAAW,SAAS,eAAe,YAAY,QAAQ;AACjS,QAAI,YAAY,KAAK;AACrB,QAAI,QAAQ,KAAK,SAAS,IAAI,CAAC,UAAU,WAAW,IAAI,YAAY,eAAe,OAAO,UAAU,WAAW,IAAI,YAAY,eAAe;AAC9I,WAAO,CAAC,aAAa,UAAU,OAAO,MAAM,MAAM,UAAU,OAAO,MAAM;AAAA;AAG3E,kBAAe,UAAU,cAAc,SAAU,aAAa;AAC5D,QAAI,cAAc,KAAK;AACvB,QAAI,aAAa,KAAK;AACtB,QAAI,iBAAiB,IAAI,WAAW;AACpC,QAAI,OAAO,KAAK;AAChB,SAAK,CAAC,GAAG,IAAI,SAAU,aAAa;AAElC,UAAI,SAAS,YAAY,QAAQ;AACjC,UAAI,eAAe,KAAK;AACxB,aAAO,KAAK;AAAA,QACV,QAAQ,eAAe;AAAA,QACvB,QAAQ,eAAe;AAAA,QAGvB,GAAG,WAAW,eAAgB,eAAc,KAAK;AAAA,QACjD,GAAG,KAAK,KAAK,IAAI,eAAe;AAAA;AAAA,OAEjC;AAEH,gBAAY,OAAO,SAAS;AAAA,MAC1B,GAAG,eAAe;AAAA,MAClB,GAAG;AAAA,MACH,OAAO,eAAe,KAAK,eAAe;AAAA,MAC1C,QAAQ,KAAK;AAAA;AAEf,QAAI,aAAa;AAAA,MACf,GAAG,eAAe;AAAA,MAClB,OAAO,eAAe,KAAK,eAAe;AAAA;AAG5C,QAAI,YAAY,YAAY;AAC1B,kBAAY,WAAW,SAAS;AAChC,kBAAY,SAAS,SAAS;AAE9B,kBAAY,SAAS;AACrB,kBAAY,kBAAkB,YAAY,eAAe,KAAK,KAAK,WAAW,IAAI,WAAW,QAAQ;AAAA;AAIvG,QAAI,iBAAiB,YAAY;AACjC,QAAI,eAAe,CAAC,GAAG,eAAe,IAAI,eAAe,IAAI,KAAK;AAElE,aAAS,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAK;AAC9C,UAAI,WAAW,eAAe;AAC9B,UAAI,WAAW,SAAS;AAExB,UAAI,CAAC,UAAU;AACb,mBAAW,IAAY;AACvB,iBAAS,YAAY;AAAA;AAGvB,eAAS,SAAS;AAAA,QAChB,GAAG,aAAa;AAAA,QAChB,GAAG;AAAA,QACH,OAAO,aAAa,IAAI,KAAK,aAAa;AAAA,QAC1C,QAAQ,KAAK;AAAA;AAAA;AAIjB,SAAK,gBAAgB;AAAA;AAGvB,kBAAe,UAAU,kBAAkB,SAAU,aAAa;AAChE,QAAI,gBAAgB,KAAK;AACzB,QAAI,cAAc,KAAK;AACvB,QAAI,eAAe,YAAY;AAC/B,QAAI,SAAS,KAAK;AAClB,QAAI,aAAa,CAAC,IAAI;AAGtB,QAAI,cAAc,IAAI,eAAe;AACnC,UAAI,YAAY,cAAc;AAE9B,UAAI,WAAW;AACb,YAAI,OAAO,UAAU,eAAe;AACpC,YAAI,QAAQ,KAAK;AACjB,YAAI,eAAe,cACjB,UAAU,oBAAoB;AAAA,UAC9B,OAAO,MAAM;AAAA,UACb,KAAK,MAAM;AAAA,WACV,cAAc,UAAU;AAC3B,qBAAa,CAAC,KAAK,aAAa,aAAa,IAAI,OAAO,KAAK,aAAa,aAAa,IAAI;AAAA;AAAA;AAI/F,QAAI,oBAAoB,IAAI,KAAK,YAAY;AAC7C,aAAS,KAAK,MAAM;AACpB,aAAS,KAAK,MAAM;AAEpB,sBAAkB,aAAa;AAI7B,UAAI,eAAe,AAAQ,aAAa,YAAY,QAAQ,aAAa,QAAQ,KAAK;AACtF,UAAI,YAAY,AAAQ,mBAAmB,gBAAgB,IAAI,UAAU,QAAQ;AACjF,UAAI,SAAS,KAAK,eAAe,IAAI;AACrC,UAAI,YAAY,AAAQ,gBAAe,CAAC,kBAAkB,eAAgB,iBAAgB,IAAI,CAAC,SAAS,SAAS,KAAK,MAAM,KAAK,IAAI;AACrI,mBAAa,aAAa,SAAS;AAAA,QACjC,GAAG,UAAU;AAAA,QACb,GAAG,UAAU;AAAA,QACb,eAAe,WAAW,aAAa,WAAW;AAAA,QAClD,OAAO,WAAW,aAAa,YAAY;AAAA,QAC3C,MAAM,WAAW;AAAA;AAAA;AAAA;AAKvB,kBAAe,UAAU,eAAe,SAAU,OAAO,MAAM;AAC7D,QAAI,gBAAgB,KAAK;AACzB,QAAI,iBAAiB,cAAc,IAAI;AACvC,QAAI,iBAAiB,cAAc,IAAI;AAEvC,QAAI,kBAAkB,QAAQ,mBAAmB,QAAQ;AACvD,uBAAiB,KAAK;AAAA;AAGxB,QAAI,WAAW,SAAS,QAAQ,MAAM,SAAS,KAC7C,KAAK,SAAS,cAAc,KAAK,SAAS,SAAS,KAAK,MAAM,SAAS;AAAA,MACvE,OAAO,KAAK,MAAM;AAAA,SAElB,MAAM,QAAQ,KAAK,IAAI,gBAAgB;AACzC,WAAO,WAAW,kBAAkB,eAAe,OAAO,YAAY,SAAS,kBAAkB,eAAe,QAAQ,WAAW,YAAY;AAAA;AAOjJ,kBAAe,UAAU,gBAAgB,SAAU,YAAY;AAE7D,iBAAa,KAAK,aAAa;AAC/B,QAAI,eAAe,KAAK;AACxB,QAAI,eAAe,aAAa;AAChC,iBAAa,GAAG,KAAK,aAAa,CAAC;AACnC,iBAAa,GAAG,KAAK,aAAa,CAAC;AAEnC,iBAAa,cAAc,KAAK,IAAI,aAAa,kBAAkB,iBAAiB,aAAa,YAAY;AAAA;AAG/G,kBAAe,UAAU,cAAc,SAAU,aAAa,IAAI,IAAI,OAAO;AAC3E,SAAK,YAAY;AAEjB,IAAU,KAAK,MAAM;AAErB,QAAI,eAAe,KAAK,cAAc,YAAY;AAElD,QAAI,SAAS,AAAQ,gBAAe,CAAC,IAAI,KAAK,cAAc;AAE5D,QAAI,UAAU,KAAK,gBAAgB,aAAa,OAAO;AAEvD,QAAI,WAAW,KAAK,cAAc,IAAI;AAEtC,SAAK,YAAY,CAAC;AAIlB,eAAW,YAAY,KAAK,oBAAoB;AAAA;AAGlD,kBAAe,UAAU,aAAa,WAAY;AAChD,SAAK,YAAY;AAEjB,SAAK,cAAc;AAInB,QAAI,WAAW,KAAK,cAAc,IAAI;AACtC,KAAC,YAAY,KAAK,oBAAoB;AAAA;AAGxC,kBAAe,UAAU,gBAAgB,SAAU,GAAG;AACpD,QAAI,OAAO,KAAK;AAEhB,QAAI,aAAa,KAAK,cAAc,YAAY,sBAAsB,EAAE,SAAS,EAAE;AAEnF,QAAI,WAAW,KAAK,KAAK,WAAW,KAAK,KAAK,MAAM,WAAW,KAAK,KAAK,WAAW,KAAK,KAAK,IAAI;AAChG;AAAA;AAGF,QAAI,aAAa,KAAK;AACtB,QAAI,UAAU,YAAW,KAAK,WAAW,MAAM;AAE/C,QAAI,UAAU,KAAK,gBAAgB,OAAO,WAAW,KAAK;AAE1D,SAAK;AAEL,eAAW,KAAK,oBAAoB;AAAA;AAGtC,kBAAe,UAAU,gBAAgB,SAAU,GAAG;AACpD,QAAI,IAAI,EAAE;AACV,QAAI,IAAI,EAAE;AACV,SAAK,cAAc,IAAY,cAAM,GAAG;AACxC,SAAK,YAAY;AACjB,SAAK,kBAAkB,CAAC,IAAI;AAAA;AAG9B,kBAAe,UAAU,cAAc,SAAU,GAAG;AAClD,QAAI,CAAC,KAAK,WAAW;AACnB;AAAA;AAGF,QAAI,YAAY,KAAK,cAAc;AACnC,SAAK,YAAY;AAEjB,QAAI,CAAC,WAAW;AACd;AAAA;AAGF,cAAU,KAAK,UAAU;AACzB,QAAI,aAAa,UAAU;AAC3B,QAAI,eAAe,CAAC,IAAI;AAExB,QAAI,eAAe,KAAK,kBAAkB,OAAO,KAAK,IAAI,WAAW,SAAS,GAAG;AAE/E;AAAA;AAGF,QAAI,aAAa,KAAK;AAEtB,QAAI,gBAAgB,CAAC,GAAG;AACxB,SAAK,SAAS,IAAI,CAAC,UAAU,WAAW,GAAG,YAAY,eAAe,OAAO,UAAU,WAAW,IAAI,WAAW,OAAO,YAAY,eAAe;AACnJ,SAAK,cAAc,CAAC,WAAW,GAAG,WAAW,IAAI,WAAW;AAE5D,SAAK;AAEL,SAAK,oBAAoB;AAAA;AAG3B,kBAAe,UAAU,WAAW,SAAU,GAAG;AAC/C,QAAI,KAAK,WAAW;AAElB,MAAU,KAAK,EAAE;AAEjB,WAAK,iBAAiB,EAAE,SAAS,EAAE;AAAA;AAAA;AAIvC,kBAAe,UAAU,mBAAmB,SAAU,QAAQ,QAAQ;AACpE,QAAI,eAAe,KAAK;AACxB,QAAI,gBAAgB,KAAK;AACzB,QAAI,YAAY,aAAa;AAE7B,QAAI,CAAC,WAAW;AACd,kBAAY,aAAa,YAAY,IAAI,MAAK;AAAA,QAC5C,QAAQ;AAAA,QACR,OAAO,cAAc,SAAS,cAAc;AAAA;AAE9C,mBAAa,YAAY,IAAI;AAAA;AAG/B,cAAU,KAAK,UAAU;AACzB,QAAI,aAAa,KAAK;AACtB,QAAI,cAAc,KAAK,cAAc;AACrC,QAAI,WAAW,YAAY,sBAAsB,QAAQ;AACzD,QAAI,aAAa,YAAY,sBAAsB,WAAW,GAAG,WAAW;AAC5E,QAAI,OAAO,KAAK;AAChB,aAAS,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,SAAS,KAAK;AACvD,cAAU,SAAS;AAAA,MACjB,GAAG,WAAW;AAAA,MACd,GAAG;AAAA,MACH,OAAO,SAAS,KAAK,WAAW;AAAA,MAChC,QAAQ,KAAK;AAAA;AAAA;AAQjB,kBAAe,UAAU,sBAAsB,SAAU,UAAU;AACjE,QAAI,QAAQ,KAAK;AACjB,SAAK,IAAI,eAAe;AAAA,MACtB,MAAM;AAAA,MACN,MAAM,KAAK;AAAA,MACX,YAAY,KAAK,cAAc;AAAA,MAC/B,WAAW,WAAW,4BAA4B;AAAA,MAClD,OAAO,MAAM;AAAA,MACb,KAAK,MAAM;AAAA;AAAA;AAIf,kBAAe,UAAU,iBAAiB,WAAY;AAEpD,QAAI;AACJ,QAAI,mBAAmB,8BAA8B,KAAK,eAAe;AAEzE,QAAI,CAAC,QAAQ,iBAAiB,QAAQ;AACpC,UAAI,WAAW,iBAAiB,GAAG,MAAM;AACzC,aAAO,SAAS,WAAW,SAAS;AAAA;AAGtC,QAAI,CAAC,MAAM;AACT,UAAI,QAAQ,KAAK,IAAI;AACrB,UAAI,SAAS,KAAK,IAAI;AACtB,aAAO;AAAA,QACL,GAAG,QAAQ;AAAA,QACX,GAAG,SAAS;AAAA,QACZ,OAAO,QAAQ;AAAA,QACf,QAAQ,SAAS;AAAA;AAAA;AAIrB,WAAO;AAAA;AAGT,kBAAe,OAAO;AACtB,SAAO;AAAA,EACP;AAEF,qBAAqB,SAAS;AAG5B,MAAI,OAAM;AAAA,IACR,GAAG;AAAA,IACH,GAAG;AAAA,IACH,QAAQ;AAAA,IACR,OAAO;AAAA;AAET,SAAO,KAAI;AAAA;AAGb,mBAAmB,QAAQ;AACzB,SAAO,WAAW,aAAa,cAAc;AAAA;AAG/C,IAAO,yBAAQ;;;ACx2BR,mBAAiB,WAAW;AACjC,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAChC,gBAAc;AAAA;;;ACHT,mBAAiB,WAAW;AACjC,MAAI;AACJ,MAAI;AAAA;;;ACAN,IAAI,gBAAgB;AAAA,EAIlB,KAAK,SAAU,YAAY,KAAK,YAAY;AAC1C,QAAI,QAAQ,AAAO,MAAO,gBAAc,eAAe,IAAI;AAC3D,WAAO,aAAa,AAAO,QAAQ,SAAS,MAAM,MAAM,SAAS,KAAK,QAAQ;AAAA;AAAA;AAGlF,IAAI,iBAAgB;AAAA,EAClB,OAAO;AAAA,IACL,QAAQ,CAAC,WAAW;AAAA,IACpB,UAAU,CAAC;AAAA;AAAA,EAEb,UAAU;AAAA,IACR,QAAQ,CAAC,GAAG;AAAA,IACZ,UAAU,CAAC,GAAG;AAAA;AAAA,EAEhB,iBAAiB;AAAA,IACf,QAAQ,CAAC,KAAK;AAAA,IACd,UAAU,CAAC,GAAG;AAAA;AAAA,EAEhB,gBAAgB;AAAA,IACd,QAAQ,CAAC,KAAK;AAAA,IACd,UAAU,CAAC,GAAG;AAAA;AAAA,EAEhB,YAAY;AAAA,IACV,QAAQ,CAAC,KAAK;AAAA,IACd,UAAU,CAAC,GAAG;AAAA;AAAA,EAEhB,SAAS;AAAA,IACP,QAAQ,CAAC,KAAK;AAAA,IACd,UAAU,CAAC,GAAG;AAAA;AAAA,EAEhB,QAAQ;AAAA,IACN,QAAQ,CAAC,UAAU,aAAa;AAAA,IAChC,UAAU,CAAC;AAAA;AAAA,EAEb,YAAY;AAAA,IACV,QAAQ,CAAC,IAAI;AAAA,IACb,UAAU,CAAC,GAAG;AAAA;AAAA;AAGlB,IAAO,wBAAQ;;;ACvCf,IAAI,aAAY,sBAAc;AAC9B,IAAI,aAAa,sBAAc;AAC/B,IAAI,WAAiB;AACrB,IAAI,SAAc;AAClB,IAAI,OAAiB;AACrB,IAAI,aAAuB;AAE3B,IAAI,iBAEJ,SAAU,QAAQ;AAChB,YAAU,iBAAgB;AAE1B,6BAA0B;AACxB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,gBAAe;AAC5B,UAAM,YAAY,CAAC,WAAW;AAC9B,UAAM,uBAAuB,CAAC,WAAW,cAAc,UAAU,cAAc;AAC/E,UAAM,aAAa;AAAA,MACjB,MAAM;AAAA,MACN,YAAY;AAAA;AAMd,UAAM,YAAY,CAAC,WAAW;AAC9B,UAAM,gBAAgB;AACtB,UAAM,oBAAoB;AAC1B,WAAO;AAAA;AAGT,kBAAe,UAAU,OAAO,SAAU,QAAQ,aAAa,SAAS;AACtE,SAAK,qBAAqB,QAAQ;AAAA;AAOpC,kBAAe,UAAU,gBAAgB,SAAU,WAAW,QAAQ;AACpE,QAAI,aAAa,KAAK;AAItB,QAAI,CAAC,YAAI,iBAAiB;AACxB,iBAAW,WAAW;AAAA;AAGxB,KAAC,UAAU,AAAe,oBAAoB,YAAY,WAAW,KAAK;AAC1E,SAAK,iBAAiB,KAAK,SAAS;AACpC,SAAK;AACL,SAAK;AAAA;AAOP,kBAAe,UAAU,cAAc,SAAU,wBAAwB;AACvE,QAAI,YAAY,KAAK;AACrB,6BAAyB,AAAO,KAAK,wBAAwB;AAC7D,SAAK,oBAAoB,AAAe,qBAAqB,KAAK,OAAO,YAAY,WAAW;AAChG,SAAK,gBAAgB,AAAe,qBAAqB,KAAK,OAAO,QAAQ,WAAW;AAAA;AAO1F,kBAAe,UAAU,gBAAgB,WAAY;AACnD,WAAO;AAAA;AAQT,kBAAe,UAAU,yBAAyB,WAAY;AAC5D,QAAI,oBAAoB,KAAK,OAAO;AACpC,QAAI,gBAAgB;AAEpB,QAAI,qBAAqB,QAAQ,sBAAsB,OAAO;AAC5D,WAAK,QAAQ,WAAW,SAAU,aAAa,OAAO;AACpD,sBAAc,KAAK;AAAA;AAAA,WAEhB;AACL,sBAAgB,AAAU,iBAAiB;AAAA;AAG7C,WAAO;AAAA;AAOT,kBAAe,UAAU,mBAAmB,SAAU,UAAU,SAAS;AACvE,IAAO,KAAK,KAAK,0BAA0B,SAAU,aAAa;AAChE,UAAI,cAAc,KAAK,QAAQ,iBAAiB;AAEhD,UAAI,aAAa;AACf,iBAAS,KAAK,SAAS;AAAA;AAAA,OAExB;AAAA;AAOL,kBAAe,UAAU,iBAAiB,SAAU,aAAa;AAC/D,QAAI,KAAK;AACT,SAAK,iBAAiB,SAAU,OAAO;AACrC,gBAAU,eAAgB,MAAK;AAAA;AAEjC,WAAO;AAAA;AAiBT,kBAAe,UAAU,kBAAkB,SAAU,OAAO,YAAY,aAAa;AACnF,QAAI,SAAS,KAAK;AAClB,QAAI,YAAY,OAAO;AACvB,QAAI,YAAY,KAAK;AACrB,QAAI,YAAY,OAAO;AACvB,QAAI;AACJ,kBAAc,eAAe,CAAC,KAAK;AAEnC,QAAI,AAAO,QAAQ,QAAQ;AACzB,cAAQ,MAAM;AACd,iBAAW;AAAA;AAGb,QAAI,YAAY,aAAa,QAC3B,WAAW,CAAC,QAAQ,MAAM,KAAK,QAAQ,MAAM,OAAO,QAAQ;AAE9D,QAAI,AAAO,SAAS,YAAY;AAC9B,aAAO,UAAU,QAAQ,WAAW,WAAW,UAAU,KAAK,WAAW,QAAQ,YAAY,WAAW,UAAU,KAAK;AAAA,eAC9G,AAAO,WAAW,YAAY;AACvC,aAAO,WAAW,UAAU,MAAM,IAAI,MAAM,MAAM,UAAU;AAAA;AAG9D,QAAI,UAAU;AACZ,UAAI,MAAM,OAAO,UAAU,IAAI;AAC7B,eAAO,YAAY,KAAK,MAAM,UAAU;AAAA,iBAC/B,MAAM,OAAO,UAAU,IAAI;AACpC,eAAO,YAAY,KAAK,MAAM,UAAU;AAAA,aACnC;AACL,eAAO,UAAU,KAAK,QAAQ,UAAU;AAAA;AAAA,WAErC;AAEL,aAAO;AAAA;AAGT,qBAAiB,KAAK;AACpB,aAAO,QAAQ,UAAU,KAAK,QAAQ,QAAQ,UAAU,KAAK,QAAS,EAAC,KAAK,QAAQ,KAAK,IAAI,WAAW;AAAA;AAAA;AAQ5G,kBAAe,UAAU,cAAc,WAAY;AACjD,QAAI,aAAa,KAAK;AAItB,QAAI,SAAS,KAAI,CAAC,WAAW,KAAK,WAAW;AAC7C,SAAK,cAAc;AAAA;AAwBrB,kBAAe,UAAU,wBAAwB,SAAU,MAAM;AAC/D,QAAI,SAAS,KAAK,OAAO;AAEzB,QAAI,UAAU,MAAM;AAClB,aAAO,KAAK,kBAAkB;AAAA;AAGhC,QAAI,WAAW,KAAK;AAEpB,aAAS,IAAI,SAAS,SAAS,GAAG,KAAK,GAAG,KAAK;AAC7C,UAAI,UAAU,SAAS;AACvB,UAAI,UAAU,KAAK,iBAAiB;AAEpC,UAAI,CAAC,QAAQ,oBAAoB;AAC/B,eAAO,QAAQ;AAAA;AAAA;AAAA;AAKrB,kBAAe,UAAU,YAAY,WAAY;AAC/C,WAAO,KAAK,YAAY;AAAA;AAG1B,kBAAe,UAAU,uBAAuB,WAAY;AAC1D,QAAI,UAAU,KAAK;AACnB,QAAI,aAAa,KAAK;AACtB,QAAI,OAAO;AAAA,MACT,SAAS,WAAW;AAAA,MACpB,YAAY,WAAW;AAAA;AAEzB,QAAI,SAAS,WAAW,UAAW,YAAW,SAAS;AACvD,QAAI,aAAa,WAAW,cAAe,YAAW,aAAa;AACnE,IAAO,MAAM,QAAQ;AAErB,IAAO,MAAM,YAAY;AAEzB,QAAI,aAAa,KAAK;AACtB,mBAAe,KAAK,MAAM;AAC1B,mBAAe,KAAK,MAAM;AAC1B,qBAAiB,KAAK,MAAM,QAAQ,WAAW;AAE/C,uBAAmB,KAAK,MAAM;AAE9B,4BAAwB,OAAM;AAK5B,UAAI,SAAQ,WAAW,UAEpB,CAAC,MAAK,SAAS;AAChB,cAAK,UAAU;AAAA,UACb,OAAO,WAAW,MAAM,QAAQ;AAAA;AAAA;AAUpC,YAAK,UAAU,MAAK,WAAW;AAAA,QAC7B,OAAO,QAAQ,IAAI;AAAA;AAAA;AAIvB,8BAA0B,OAAM,YAAY,aAAa;AACvD,UAAI,WAAW,MAAK;AACpB,UAAI,YAAY,MAAK;AAErB,UAAI,YAAY,CAAC,WAAW;AAC1B,oBAAY,MAAK,eAAe;AAChC,eAAK,UAAU,SAAU,YAAY,YAAY;AAC/C,cAAI,CAAC,sBAAc,YAAY,aAAa;AAC1C;AAAA;AAGF,cAAI,OAAO,sBAAc,IAAI,YAAY,YAAY;AAErD,cAAI,QAAQ,MAAM;AAChB,sBAAU,cAAc;AAIxB,gBAAI,eAAe,WAAW,CAAC,UAAU,eAAe,cAAc,CAAC,UAAU,eAAe,eAAe;AAC7G,wBAAU,UAAU,CAAC,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAOlC,gCAA4B,aAAY;AACtC,UAAI,eAAgB,aAAW,WAAW,IAAI,UAAW,aAAW,cAAc,IAAI;AACtF,UAAI,mBAAoB,aAAW,WAAW,IAAI,cAAe,aAAW,cAAc,IAAI;AAC9F,UAAI,gBAAgB,KAAK,IAAI;AAC7B,UAAI,aAAa,KAAK;AACtB,UAAI,gBAAgB,cAAc;AAClC,aAAK,KAAK,WAAW,SAAU,OAAO;AACpC,YAAI,WAAW,KAAK;AACpB,YAAI,UAAU,YAAW;AAGzB,YAAI,CAAC,SAAS;AACZ,oBAAU,YAAW,SAAS;AAAA,YAC5B,OAAO,aAAa,gBAAgB,CAAC;AAAA;AAAA;AAKzC,YAAI,QAAQ,UAAU,MAAM;AAC1B,kBAAQ,SAAS,gBAAgB,AAAO,MAAM,iBAAkB,cAAa,gBAAgB,CAAC;AAAA;AAGhG,YAAI,QAAQ,cAAc,MAAM;AAC9B,kBAAQ,aAAa,oBAAoB,AAAO,MAAM,qBAAsB,cAAa,SAAS,KAAK,CAAC,SAAS,IAAI,SAAS;AAAA;AAIhI,gBAAQ,SAAS,WAAU,QAAQ,QAAQ,SAAU,QAAQ;AAC3D,iBAAO,WAAW,SAAS,gBAAgB;AAAA;AAG7C,YAAI,aAAa,QAAQ;AAEzB,YAAI,cAAc,MAAM;AACtB,cAAI,QAAQ;AAEZ,qBAAW,YAAY,SAAU,OAAO;AACtC,oBAAQ,SAAU,SAAQ;AAAA;AAE5B,kBAAQ,aAAa,WAAU,YAAY,SAAU,OAAO;AAC1D,mBAAO,WAAU,OAAO,CAAC,GAAG,QAAQ,CAAC,GAAG,SAAS,KAAK;AAAA;AAAA;AAAA,SAGzD;AAAA;AAAA;AAIP,kBAAe,UAAU,gBAAgB,WAAY;AACnD,SAAK,WAAW,CAAC,WAAW,KAAK,IAAI,eAAe,WAAW,KAAK,IAAI;AAAA;AAG1E,kBAAe,UAAU,aAAa,WAAY;AAChD,WAAO,CAAC,CAAC,KAAK,OAAO;AAAA;AAQvB,kBAAe,UAAU,cAAc,SAAU,UAAU;AAAA;AAE3D,kBAAe,UAAU,cAAc,WAAY;AACjD,WAAO;AAAA;AAQT,kBAAe,UAAU,gBAAgB,SAAU,OAAO;AACxD,WAAO;AAAA;AAmBT,kBAAe,UAAU,gBAAgB,SAAU,iBAAgB;AACjE,WAAO;AAAA;AAGT,kBAAe,OAAO;AACtB,kBAAe,eAAe,CAAC;AAC/B,kBAAe,gBAAgB;AAAA,IAC7B,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,GAAG;AAAA,IACH,aAAa;AAAA,IACb,KAAK;AAAA,IACL,KAAK;AAAA,IACL,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,IACL,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,cAAc;AAAA,IACd,eAAe;AAAA,IACf,aAAa;AAAA,IACb,SAAS;AAAA,IAET,SAAS;AAAA,IACT,WAAW;AAAA,IACX,WAAW;AAAA,MACT,OAAO;AAAA;AAAA;AAIX,SAAO;AAAA,EACP;AAEF,IAAO,yBAAQ;;;ACjbf,IAAI,oBAAoB,CAAC,IAAI;AAE7B,IAAI,kBAEJ,SAAU,QAAQ;AAChB,YAAU,kBAAiB;AAE3B,8BAA2B;AACzB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,iBAAgB;AAC7B,WAAO;AAAA;AAOT,mBAAgB,UAAU,gBAAgB,SAAU,WAAW,QAAQ;AACrE,WAAO,UAAU,cAAc,MAAM,MAAM;AAE3C,SAAK;AACL,SAAK,YAAY,SAAU,eAAe;AACxC,oBAAc,gBAAgB;AAC9B,oBAAc,aAAa,KAAK;AAAA;AAGlC,SAAK;AAAA;AAQP,mBAAgB,UAAU,gBAAgB,WAAY;AACpD,WAAO,UAAU,cAAc,MAAM,MAAM;AAE3C,QAAI,WAAW,KAAK;AACpB,IAAC,UAAS,MAAM,QAAQ,MAAM,SAAS,QAAS,UAAS,KAAK,kBAAkB;AAChF,IAAC,UAAS,MAAM,QAAQ,MAAM,SAAS,QAAS,UAAS,KAAK,kBAAkB;AAAA;AAOlF,mBAAgB,UAAU,cAAc,WAAY;AAClD,QAAI,aAAa,KAAK;AACtB,QAAI,QAAQ,KAAK,OAAO;AAExB,QAAI,CAAC,SAAS,MAAM,MAAM;AAGxB,iBAAW,OAAO;AAClB,WAAK,OAAO,QAAQ;AAAA,eACX,AAAO,QAAQ,QAAQ;AAChC,UAAI,MAAM,KAAK,MAAM,IAAI;AACvB,cAAM;AAAA;AAGR,YAAM,KAAK,KAAK,IAAI,MAAM,IAAI,WAAW;AACzC,YAAM,KAAK,KAAK,IAAI,MAAM,IAAI,WAAW;AAAA;AAAA;AAS7C,mBAAgB,UAAU,uBAAuB,WAAY;AAC3D,WAAO,UAAU,qBAAqB,MAAM,MAAM;AAElD,IAAO,KAAK,KAAK,WAAW,SAAU,OAAO;AAC3C,UAAI,aAAa,KAAK,OAAO,WAAW,OAAO;AAE/C,UAAI,cAAc,WAAW,OAAO,WAAW,IAAI;AACjD,mBAAW,KAAK,WAAW,KAAK;AAAA;AAAA,OAEjC;AAAA;AAOL,mBAAgB,UAAU,cAAc,SAAU,UAAU;AAC1D,SAAK,OAAO,QAAQ,SAAS;AAE7B,SAAK;AAAA;AAOP,mBAAgB,UAAU,cAAc,WAAY;AAClD,QAAI,aAAa,KAAK;AACtB,QAAI,eAAe,AAAW,IAAK,MAAK,IAAI,YAAY,IAAI;AAE5D,iBAAa,KAAK,WAAW,MAAO,cAAa,KAAK,WAAW;AACjE,iBAAa,KAAK,WAAW,MAAO,cAAa,KAAK,WAAW;AACjE,iBAAa,KAAK,WAAW,MAAO,cAAa,KAAK,WAAW;AACjE,iBAAa,KAAK,WAAW,MAAO,cAAa,KAAK,WAAW;AACjE,WAAO;AAAA;AAOT,mBAAgB,UAAU,gBAAgB,SAAU,OAAO;AACzD,QAAI,QAAQ,KAAK,OAAO;AACxB,QAAI,aAAa,KAAK;AAGtB,WAAQ,OAAM,MAAM,WAAW,MAAM,MAAM,MAAM,UAAW,OAAM,MAAM,WAAW,MAAM,SAAS,MAAM,MAAM,YAAY;AAAA;AAG5H,mBAAgB,UAAU,wBAAwB,SAAU,OAAO;AACjE,QAAI,SAAS;AACb,SAAK,iBAAiB,SAAU,aAAa;AAC3C,UAAI,cAAc;AAClB,UAAI,OAAO,YAAY;AACvB,WAAK,KAAK,KAAK,sBAAsB,OAAO,SAAU,OAAO,WAAW;AACtE,cAAM,MAAM,SAAS,SAAS,MAAM,MAAM,YAAY,KAAK;AAAA,SAC1D;AACH,aAAO,KAAK;AAAA,QACV,UAAU,YAAY;AAAA,QACtB,WAAW;AAAA;AAAA,OAEZ;AACH,WAAO;AAAA;AAOT,mBAAgB,UAAU,gBAAgB,SAAU,iBAAgB;AAClE,QAAI,QAAQ,mBAAmB,MAAM,cAAc,KAAK;AACxD,QAAI,QAAQ,mBAAmB,MAAM,WAAW,KAAK,OAAO,MAAM;AAClE,QAAI,QAAQ;AAEZ,qBAAiB,OAAO,YAAY;AAClC,YAAM,KAAK;AAAA,QACT;AAAA,QACA,OAAO,gBAAe,OAAO;AAAA;AAAA;AAKjC,QAAI,OAAO;AACX,QAAI,OAAO;AACX,QAAI,OAAO,MAAM;AACjB,QAAI,OAAO,MAAM;AAEjB,WAAO,OAAO,QAAS,EAAC,MAAM,UAAU,MAAM,SAAS,MAAM,KAAK,QAAQ;AAExE,UAAI,MAAM,QAAQ,MAAM,OAAO;AAC7B,gBAAQ,MAAM,OAAO;AAAA;AAAA;AAIzB,aAAS,QAAQ,GAAG,OAAO,MAAM,QAAQ,QAAQ,GAAG;AAGlD,eAAS,MAAM,UAAU,QAAQ,MAAM,OAAO;AAC9C,cAAQ,MAAM,OAAO;AAAA;AAGvB,aAAS,QAAQ,GAAG,OAAO,MAAM,QAAQ;AACvC,UAAI,CAAC,MAAM,UAAU,MAAM,MAAM,SAAS,KAAK,MAAM,OAAO;AAE1D,YAAI,OAAO;AACT,gBAAM,UAAU,QAAQ,MAAM,MAAM,SAAS,GAAG,OAAO;AACvD,kBAAQ;AAAA;AAGV,gBAAQ,MAAM,OAAO;AAAA;AAAA;AAIzB,QAAI,WAAW,MAAM;AACrB,WAAO;AAAA,MACL;AAAA,MACA,aAAa,CAAC,WAAW,MAAM,GAAG,QAAQ,eAAe,WAAW,MAAM,WAAW,GAAG,QAAQ;AAAA;AAAA;AAIpG,mBAAgB,OAAO;AACvB,mBAAgB,gBAAgB,qBAAqB,uBAAe,eAAe;AAAA,IACjF,OAAO;AAAA,IACP,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,aAAa;AAAA,MACX,aAAa;AAAA,MACb,aAAa;AAAA;AAAA,IAEf,eAAe;AAAA,IACf,eAAe;AAAA,IACf,gBAAgB;AAAA,MACd,aAAa;AAAA,MACb,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,eAAe;AAAA,MACf,eAAe;AAAA,MACf,aAAa;AAAA;AAAA;AAWjB,SAAO;AAAA,EACP;AAEF,4BAA4B,gBAAgB,YAAY,YAAY;AAClE,MAAI,WAAW,OAAO,WAAW,IAAI;AACnC,WAAO,WAAW;AAAA;AAOpB,MAAI,SAAQ;AACZ,MAAI,OAAQ,YAAW,KAAK,WAAW,MAAM;AAC7C,MAAI,QAAQ,WAAW;AACvB,MAAI,aAAa;AAEjB,WAAS,IAAI,GAAG,KAAK,UAAS,QAAQ,WAAW,IAAI,KAAK;AACxD,eAAW,KAAK;AAChB,aAAS;AAAA;AAGX,aAAW,KAAK,WAAW;AAC3B,SAAO;AAAA;AAGT,IAAO,0BAAQ;;;ACtPf,IAAI,gBAEJ,SAAU,QAAQ;AAChB,YAAU,gBAAe;AAEzB,4BAAyB;AACvB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,eAAc;AAC3B,UAAM,qBAAqB;AAAA,MACzB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,KAAK;AAAA,MACL,QAAQ;AAAA;AAEV,WAAO;AAAA;AAGT,iBAAc,UAAU,OAAO,SAAU,SAAS,KAAK;AACrD,SAAK,UAAU;AACf,SAAK,MAAM;AAAA;AAOb,iBAAc,UAAU,SAAS,SAAU,gBAAgB,SAAS,KAAK,SACvE;AACA,SAAK,iBAAiB;AAEtB,QAAI,eAAe,IAAI,YAAY,OAAO;AACxC,WAAK,MAAM;AACX;AAAA;AAGF,SAAK,SAAS,gBAAgB,SAAS,KAAK;AAAA;AAO9C,iBAAc,UAAU,mBAAmB,SAAU,OAAO;AAC1D,QAAI,iBAAiB,KAAK;AAC1B,QAAI,UAAU,AAAW,mBAAkB,eAAe,IAAI,cAAc;AAC5E,QAAI,OAAO,MAAM;AACjB,UAAM,IAAI,IAAI,aAAK;AAAA,MACjB,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,OAAO;AAAA,QACL,GAAG,KAAK,IAAI,QAAQ;AAAA,QACpB,GAAG,KAAK,IAAI,QAAQ;AAAA,QACpB,OAAO,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AAAA,QACzC,QAAQ,KAAK,SAAS,QAAQ,KAAK,QAAQ;AAAA;AAAA,MAE7C,OAAO;AAAA,QACL,MAAM,eAAe,IAAI;AAAA,QACzB,QAAQ,eAAe,IAAI;AAAA,QAC3B,WAAW,eAAe,IAAI;AAAA;AAAA;AAAA;AAepC,iBAAc,UAAU,sBAAsB,SAAU,aAAa,eAAe,MAAM;AACxF,WAAO,QAAQ;AACf,QAAI,aAAa,KAAK;AACtB,QAAI,iBAAiB,KAAK;AAC1B,QAAI,YAAY;AAEhB,QAAI,kBAAkB,SAAS;AAC7B,UAAI,eAAe,eAAe,IAAI;AACtC,gBAAU,QAAQ;AAAA;AAGpB,oBAAgB,KAAK;AACnB,aAAO,UAAU;AAAA;AAGnB,oBAAgB,KAAK,OAAO;AAC1B,gBAAU,OAAO;AAAA;AAGnB,QAAI,WAAW,eAAe,kBAAkB,cAAc,eAAe,cAAc;AAC3F,QAAI,cAAc,sBAAc,mBAAmB;AACnD,IAAO,KAAK,aAAa,SAAU,MAAM;AACvC,UAAI,gBAAgB,SAAS;AAE7B,UAAI,KAAK,yBAAyB,SAAS,WAAW;AACpD,eAAO;AACP,wBAAgB,SAAS;AAAA;AAG3B,UAAI,sBAAc,UAAU,MAAM,gBAAgB;AAChD,yBAAiB,cAAc,YAAY,aAAa,QAAQ;AAAA;AAAA;AAGpE,WAAO,UAAU;AAAA;AAGnB,iBAAc,UAAU,gBAAgB,SAAU,OAAO;AACvD,QAAI,QAAQ,KAAK;AACjB,QAAI,MAAM,KAAK;AACf,IAAO,gBAAgB,OAAO,MAAM,sBAAsB;AAAA,MACxD,OAAO,IAAI;AAAA,MACX,QAAQ,IAAI;AAAA;AAAA;AAIhB,iBAAc,UAAU,WAAW,SAAU,gBAAgB,SAAS,KAAK,SAAS;AAAA;AAEpF,iBAAc,OAAO;AACrB,SAAO;AAAA,EACP;AAEF,IAAO,wBAAQ;;;ACnIf,IAAI,YAAY,CAAC,CAAC,QAAQ,SAAS,UAAU,CAAC,OAAO,UAAU;AAQxD,sBAAsB,gBAAgB,KAAK,UAAU;AAC1D,MAAI,cAAc,eAAe;AACjC,MAAI,YAAY,YAAY;AAE5B,MAAI,aAAa,QAAQ,cAAc,QAAQ;AAC7C,WAAO;AAAA;AAIT,MAAI,SAAS;AAAA,IACX,OAAO,IAAI;AAAA,IACX,QAAQ,IAAI;AAAA;AAEd,MAAI,YAAY,YAAY,WAAW,eAAe,IAAI;AAC1D,MAAI,QAAQ,UAAU;AACtB,MAAI,YAAY,CAAC,GAAG,MAAM;AAC1B,MAAI,cAAc;AAElB,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,gBAAY,UAAU,IAAI,WAAW,MAAM,UAAU;AACrD,gBAAY,MAAM,MAAM,MAAM,IAAI,SAAS,KAAK,YAAY,MAAM;AAAA;AAGpE,MAAI,SAAS,CAAC,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,UAAU,IAAI;AACrD,MAAI,OAAO,cAAc,aAAa,QAAQ,YAAY;AAC1D,SAAO,MAAO,MAAK,OAAO,OAAO,OAAO,KAAK,KAAK,OAAO,MAAM,KAAK,OAAO,MAAM,MAAM,OAAO,OAAO,MAAM,MAAM,IAAI;AAAA;AAQhH,2BAA2B,OAAO,gBAAgB;AACvD,EAAO,KAAK,SAAS,IAAI,SAAU,WAAW;AAC5C,QAAI,UAAU,aAAa,MAAM;AAC/B,gBAAU,kBAAkB,UAAU;AACtC,gBAAU,YAAY;AAAA;AAGxB,cAAU,eAAe,cAAe,kBAAiB,eAAe,iBAAiB;AAAA;AAE3F,SAAO;AAAA;;;ACrCT,IAAI,aAAuB;AAC3B,IAAI,SAAc;AAClB,IAAI,WAAU,KAAK;AACnB,IAAI,WAAU,KAAK;AAEnB,IAAI,kBAAkB;AACtB,IAAI,iBAAiB;AAQrB,IAAI,iBAEJ,SAAU,QAAQ;AAChB,YAAU,iBAAgB;AAE1B,6BAA0B;AACxB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,gBAAe;AAC5B,UAAM,UAAU;AAChB,UAAM,gBAAgB;AACtB,UAAM,cAAc;AACpB,UAAM,wBAAwB;AAC9B,WAAO;AAAA;AAGT,kBAAe,UAAU,WAAW,SAAU,gBAAgB,SAAS,KAAK,SAAS;AACnF,SAAK,OAAO;AAEZ,QAAI,CAAC,WAAW,QAAQ,SAAS,qBAAqB,QAAQ,SAAS,KAAK,KAAK;AAC/E,WAAK;AAAA;AAAA;AAIT,kBAAe,UAAU,aAAa,WAAY;AAChD,SAAK,MAAM;AACX,QAAI,iBAAiB,KAAK;AAC1B,QAAI,YAAY,KAAK;AACrB,SAAK,UAAU,eAAe,IAAI;AAClC,SAAK,aAAa,eAAe,IAAI;AAErC,SAAK;AAEL,SAAK,WAAW;AAEhB,QAAI,gBAAgB,eAAe,IAAI;AAEvC,SAAK,gBAAgB,WAAW,eAAe;AAE/C,SAAK,gBAAgB,WAAW,eAAe;AAG/C,SAAK,YAAY;AAIjB,SAAK,iBAAiB;AAEtB,SAAK;AAEL,SAAK;AAEL,SAAK;AAEL,SAAK,cAAc;AAAA;AAGrB,kBAAe,UAAU,kBAAkB,SAAU,OAAO,eAAe,WAAW;AACpF,QAAI,CAAC,eAAe;AAClB;AAAA;AAIF,QAAI,OAAO,cAAc,IAAI;AAC7B,WAAO,QAAQ,OAAO,OAAO,KAAK;AAClC,QAAI,iBAAiB,KAAK;AAC1B,QAAI,UAAU,eAAe,IAAI;AACjC,QAAI,WAAW,eAAe;AAC9B,QAAI,WAAW,KAAK,QAAQ;AAE5B,QAAI,YAAW,KAAK,gBAAgB,CAAC,SAAS,KAAK,GAAG,cAAc,IAAI,CAAC,UAAU,SAAS,KAAK,UAAU;AAE3G,QAAI,QAAQ,KAAK,gBAAgB,cAAc,IAAI,WAAW,OAAO;AAErE,QAAI,SAAS,KAAK;AAClB,QAAI,iBAAiB,KAAK,eAAe;AACzC,SAAK,MAAM,IAAI,IAAY,aAAK;AAAA,MAC9B,OAAO;AAAA,QACL,GAAG,UAAS;AAAA,QACZ,GAAG,UAAS;AAAA,QACZ,eAAe,WAAW,eAAe,WAAW;AAAA,QACpD,OAAO,WAAW,eAAe,QAAQ;AAAA,QACzC;AAAA,QACA,MAAM,eAAe;AAAA,QACrB,MAAM,eAAe;AAAA;AAAA;AAAA;AAK3B,kBAAe,UAAU,aAAa,SAAU,aAAa;AAC3D,QAAI,iBAAiB,KAAK;AAC1B,QAAI,SAAS,KAAK;AAClB,QAAI,WAAW,eAAe;AAC9B,QAAI,SAAS,KAAK;AAClB,QAAI,YAAY,KAAK;AACrB,QAAI,YAAY,AAAO,aAAa,gBAAgB,KAAK,KAAK;AAE9D,QAAI,YAAY,OAAO,YAAY,KAAK,gBAAgB;AAExD,QAAI,mBAAmB,IAAY;AACnC,cAAU,IAAI;AAEd,qBAAiB,IAAI,OAAO,aAAa;AACzC,qBAAiB,IAAI,OAAO,UAAU,cAAc,MAAM,YAAY,WAAU,KAAK,WAAW,MAAM,AAAO,KAAK,KAAK,aAAa,MAAM,OAAO,QAAQ,AAAO,KAAK,KAAK,aAAa,MAAM,OAAO;AAEpM,qBAAiB,YAAY,IAAY,aAAK;AAAA,MAC5C,OAAO;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,QACH,OAAO,SAAS;AAAA,QAChB,QAAQ,SAAS;AAAA,QACjB,GAAG;AAAA;AAAA;AAGP,QAAI,WAAW,eAAe,eAAe,YAAY;AACzD,QAAI,WAAW,SAAQ,SAAS,OAAO,SAAS;AAEhD,QAAI,WAAW;AACb,aAAO,eAAe;AACtB,aAAO,eAAe;AACtB,aAAO,oBAAoB;AAE3B,WAAK,cAAc,gBAAgB,WAAW,GAAG,UAAU,UAAU;AAErE,WAAK,cAAc,gBAAgB,WAAW,GAAG,UAAU,UAAU;AAAA;AAGvE,SAAK,iBAAiB,gBAAgB,WAAW,UAAU,UAAU;AAErE,gBAAY,IAAI;AAAA;AAGlB,kBAAe,UAAU,gBAAgB,SAAU,gBAAgB,WAAW,aAAa,UAAU,UAAU,QAAQ;AACrH,QAAI,UAAU,AAAO,KAAK,KAAK,aAAa,MAAM,aAAa;AAC/D,QAAI,YAAY,AAAO,KAAK,KAAK,aAAa,MAAM,aAAa;AACjE,QAAI,aAAa,aAAa,eAAe,IAAI,eAAe,SAAS;AACzE,QAAI,cAAc,aAAa,eAAe,IAAI,eAAe,CAAC,aAAa,GAAG,CAAC,aAAa,GAAG,YAAY,YAAY,MAAM;AACjI,QAAI,SAAS,WAAU,KAAK;AAC5B,gBAAY,KAAK;AAAA,MACf;AAAA,MACA,WAAW;AAAA,MACX,OAAO;AAAA,MACP,WAAW;AAAA,MACX,aAAa,SAAU,GAAG;AACxB,QAAU,KAAK,EAAE;AAAA;AAAA;AAGrB,gBAAY,IAAI,SAAS,KAAK;AAC9B,gBAAY,SAAS,eAAe,SAAS,eAAe;AAC5D,gBAAY,SAAS;AAAA,MACnB,eAAe;AAAA,MACf,aAAa;AAAA;AAEf,gBAAY,MAAM,aAAa;AAC/B,gBAAY,YAAY,YAAY,QAAQ,eAAe,SAAS,CAAC,YAAY,gBAAgB;AACjG,4BAAwB,aAAa;AACrC,cAAU,IAAI;AAKd,QAAI,iBAAiB,KAAK,eAAe;AACzC,QAAI,cAAc,IAAY,aAAK;AAAA,MACjC;AAAA,MACA,WAAW;AAAA,MACX,OAAO;AAAA,MACP,aAAa,SAAU,GAAG;AAExB,QAAU,KAAK,EAAE;AAAA;AAAA,MAEnB,WAAW;AAAA,MACX,OAAO;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,QACH,MAAM;AAAA,QACN,MAAM,eAAe;AAAA,QACrB,MAAM,eAAe;AAAA;AAAA;AAGzB,gBAAY,YAAY,QAAQ,QAAQ;AAAA,MACtC,SAAS;AAAA;AAEX,gBAAY,kBAAkB;AAAA,MAC5B,UAAU;AAAA;AAEZ,SAAK,MAAM,IAAI;AACf,QAAI,mBAAmB,CAAC,YAAY;AACpC,QAAI,SAAS,KAAK;AAClB,WAAO,aAAa,eAAe;AACnC,WAAO,kBAAkB,eAAe;AACxC,WAAO,aAAa,eAAe;AAAA;AAGrC,kBAAe,UAAU,mBAAmB,SAAU,gBAAgB,WAAW,UAAU,UAAU,QAAQ;AAC3G,QAAI,SAAQ,aAAa,eAAe,IAAI,kBAAkB,SAAS;AACvE,QAAI,YAAY,aAAa,eAAe,IAAI,kBAAkB,CAAC,SAAQ,GAAG,CAAC,SAAQ,GAAG,QAAO,QAAO,MAAM;AAC9G,cAAU,KAAK;AAAA,MACb,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,GAAG,SAAS,KAAK;AAAA;AAEnB,QAAI,iBAAiB,eAAe,SAAS,kBAAkB;AAE/D,QAAI,qBAAqB,eAAS;AAChC,UAAI,YAAY,UAAU;AAC1B,gBAAU,SAAS,AAAO,OAAO;AAAA,QAE/B,OAAO,UAAU;AAAA,QACjB,GAAG,UAAU;AAAA,QACb,GAAG,UAAU;AAAA,QACb,OAAO,UAAU;AAAA,QACjB,QAAQ,UAAU;AAAA,SACjB;AAAA,WACE;AACL,gBAAU,SAAS;AAAA;AAGrB,cAAU,IAAI;AACd,QAAI,iBAAiB,KAAK,eAAe;AACzC,QAAI,iBAAiB,IAAY,aAAK;AAAA,MACpC,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,OAAO;AAAA,QACL,GAAG;AAAA,QACH,GAAG;AAAA,QACH,MAAM;AAAA,QACN,MAAM,eAAe;AAAA,QACrB,MAAM,eAAe;AAAA;AAAA;AAGzB,SAAK,MAAM,IAAI;AACf,QAAI,sBAAsB,CAAE,YAAW,eAAe,WAAW,IAAI,kBAAkB,SAAS,KAAK,GAAG;AACxG,QAAI,SAAS,KAAK;AAClB,WAAO,YAAY;AACnB,WAAO,iBAAiB;AACxB,WAAO,sBAAsB;AAC7B,SAAK,sBAAsB;AAAA;AAG7B,kBAAe,UAAU,cAAc,SAAU,aAAa,OAC9D,IAAI,IAAI;AACN,QAAI,CAAC,KAAK,YAAY;AACpB;AAAA;AAGF,SAAK,YAAY,CAAC;AAElB,QAAI,CAAC,OAAO;AAEV,UAAI,SAAS,KAAK,gBAAgB,CAAC,IAAI,KAAK,KAAK,QAAQ,WAAW;AAEpE,WAAK,gBAAgB,aAAa,OAAO;AAEzC,WAAK;AAIL,WAAK;AAAA;AAIP,QAAI,UAAU,CAAC,KAAK,eAAe,IAAI,aAAa;AAElD,WAAK,IAAI,eAAe;AAAA,QACtB,MAAM;AAAA,QACN,MAAM,KAAK;AAAA,QACX,aAAa,KAAK,eAAe;AAAA,QACjC,UAAU,KAAK,cAAc;AAAA;AAAA;AAIjC,QAAI,OAAO;AACT,OAAC,KAAK,aAAa,KAAK;AAAA,eACf,qBAAqB,KAAK,iBAAiB;AACpD,WAAK,qBAAqB,KAAK,YAAY,cAAc;AAAA;AAAA;AAI7D,kBAAe,UAAU,iBAAiB,WAAY;AACpD,QAAI,iBAAiB,KAAK;AAC1B,QAAI,eAAe,KAAK,gBAAgB,eAAe;AACvD,QAAI,aAAa,eAAe;AAChC,QAAI,aAAa,CAAC,GAAG,eAAe,SAAS;AAC7C,SAAK,cAAc,CAAC,WAAU,aAAa,IAAI,YAAY,YAAY,OAAO,WAAU,aAAa,IAAI,YAAY,YAAY;AAAA;AAUnI,kBAAe,UAAU,kBAAkB,SAAU,aAAa,OAAO;AACvE,YAAQ,SAAS;AACjB,QAAI,iBAAiB,KAAK;AAC1B,QAAI,aAAa,KAAK;AACtB,QAAI,aAAa,CAAC,GAAG,eAAe,SAAS;AAC7C,eAAW,OAAO,YAAY,YAAY,aAC1C;AACA,QAAI,aAAa,eAAe;AAEhC,SAAK,gBAAgB,CAAC,WAAU,WAAW,IAAI,YAAY,YAAY,OAAO,WAAU,WAAW,IAAI,YAAY,YAAY;AAAA;AAGjI,kBAAe,UAAU,cAAc,SAAU,WAAW;AAC1D,QAAI,iBAAiB,KAAK;AAC1B,QAAI,aAAa,eAAe;AAChC,QAAI,SAAS,KAAK;AAClB,QAAI,uBAAuB,CAAC,GAAG,eAAe,SAAS;AACvD,QAAI,oBAAoB,YAAY,uBAAuB,KAAK;AAEhE,QAAI,gBAAgB,KAAK,iBAAiB,KAAK,eAAe,YAAY,mBAAmB;AAE7F,QAAI,mBAAmB,KAAK,iBAAiB,YAAY,YAAY,sBAAsB;AAE3F,WAAO,QAAQ,SAAS;AAAA,MACtB,MAAM,cAAc;AAAA,OAEnB,SAAS,UAAU,cAAc;AACpC,WAAO,WAAW,SAAS;AAAA,MACzB,MAAM,iBAAiB;AAAA,OAEtB,SAAS,UAAU,iBAAiB;AAEvC,SAAK,cAAc,mBAAmB;AAAA;AAGxC,kBAAe,UAAU,mBAAmB,SAAU,cAAc,YAAY,YAAY,YAAY;AACtG,QAAI,OAAO;AAAA,MACT;AAAA,MACA,uBAAuB;AAAA;AAGzB,QAAI,aAAa,KAAK,mBAAmB,cAAc;AAEvD,QAAI,cAAc,CAAC,KAAK,oBAAoB,aAAa,IAAI,cAAc,OAAO,KAAK,oBAAoB,aAAa,IAAI,cAAc;AAE1I,QAAI,YAAY,KAAK,iBAAiB,YAAY;AAElD,WAAO;AAAA,MACL,UAAU,IAAI,uBAAe,GAAG,GAAG,GAAG,GAAG;AAAA,MACzC;AAAA,MACA,cAAc,CAAC,WAAW,GAAG,OAAO,WAAW,WAAW,SAAS,GAAG;AAAA;AAAA;AAI1E,kBAAe,UAAU,qBAAqB,SAAU,cAAc,MAAM;AAI1E,QAAI,eAAe;AAEnB,QAAI,aAAa;AACjB,QAAI,OAAQ,cAAa,KAAK,aAAa,MAAM;AACjD,eAAW,KAAK;AAAA,MACd,OAAO,KAAK,oBAAoB,aAAa,IAAI,SAAS;AAAA,MAC1D,QAAQ;AAAA;AAGV,aAAS,IAAI,GAAG,IAAI,cAAc,KAAK;AACrC,UAAI,YAAY,aAAa,KAAK,OAAO;AAEzC,UAAI,YAAY,aAAa,IAAI;AAC/B;AAAA;AAGF,iBAAW,KAAK;AAAA,QACd,OAAO,KAAK,oBAAoB,WAAW,SAAS;AAAA,QACpD,QAAQ,IAAI;AAAA;AAAA;AAIhB,eAAW,KAAK;AAAA,MACd,OAAO,KAAK,oBAAoB,aAAa,IAAI,SAAS;AAAA,MAC1D,QAAQ;AAAA;AAEV,WAAO;AAAA;AAGT,kBAAe,UAAU,mBAAmB,SAAU,YAAY,aAAa;AAC7E,QAAI,WAAW,KAAK,eAAe;AACnC,WAAO,CAAC,CAAC,SAAS,KAAK,YAAY,IAAI,WAAW,KAAK,CAAC,SAAS,IAAI,WAAW,KAAK,CAAC,SAAS,IAAI,WAAW,KAAK,CAAC,SAAS,KAAK,YAAY,IAAI,WAAW;AAAA;AAG/J,kBAAe,UAAU,kBAAkB,SAAU,WAAW;AAC9D,QAAI,SAAS,KAAK;AAClB,QAAI,UAAU,KAAK,eAAe,IAAI;AACtC,WAAO,IAAY,cAAM,WAAW,gBAAgB,CAAC,UAAU;AAAA,MAC7D,QAAQ,cAAc,WAAW,IAAI;AAAA,MACrC,UAAU,KAAK,KAAK;AAAA,QAClB,WAAW,gBAAgB,UAAU;AAAA,MACvC,QAAQ,cAAc,WAAW,KAAK;AAAA,MACtC,UAAU,CAAC,KAAK,KAAK;AAAA,QACnB,WAAW,cAAc,CAAC,UAAU;AAAA,MACtC,QAAQ,cAAc,SAAS,IAAI;AAAA,MACnC,QAAQ;AAAA,QACN;AAAA,MACF,QAAQ,cAAc,SAAS,IAAI;AAAA;AAAA;AAIvC,kBAAe,UAAU,gBAAgB,SAAU,YAAY,eAAe;AAC5E,QAAI,CAAC,KAAK,YAAY;AACpB;AAAA;AAGF,QAAI,SAAS,KAAK;AAClB,QAAI,iBAAiB,KAAK;AAC1B,QAAI,eAAe,OAAO;AAC1B,QAAI,eAAe,OAAO;AAC1B,QAAI,WAAW,eAAe;AAC9B,QAAI,aAAa,eAAe;AAChC,WAAK,CAAC,GAAG,IAAI,SAAU,aAAa;AAClC,UAAI,cAAc,aAAa;AAC/B,kBAAY,SAAS,QAAQ,cAAc,aAAa;AACxD,kBAAY,IAAI,WAAW;AAC3B,UAAI,MAAM,WAAU,WAAW,cAAc,CAAC,GAAG,SAAS,KAAK,YAAY;AAC3E,UAAI,aAAa,KAAK,oBAAoB,KAAK;AAC/C,kBAAY,SAAS,YAAY,SAAS,aAAa,SAAS;AAChE,kBAAY,IAAI,SAAS,KAAK,aAAa;AAE3C,UAAI,YAAY,AAAQ,gBAAe,OAAO,kBAAkB,cAAc,AAAQ,aAAa,aAAa,KAAK;AACrH,mBAAa,aAAa,SAAS;AAAA,QACjC,GAAG,UAAU;AAAA,QACb,GAAG,UAAU;AAAA,QACb,MAAM,eAAe,gBAAgB,KAAK,cAAc;AAAA,QACxD,eAAe;AAAA,QACf,OAAO,KAAK,YAAY,aAAa,KAAK,gBAAgB,QAAQ,OAAO,aAAa;AAAA;AAAA,OAEvF;AAAA;AAGL,kBAAe,UAAU,iBAAiB,SAAU,aAAa,WAAW,aAAa,mBAAmB;AAC1G,QAAI,iBAAiB,KAAK;AAC1B,QAAI,aAAa,eAAe;AAChC,QAAI,WAAW,eAAe;AAC9B,QAAI,aAAa,CAAC,GAAG,SAAS;AAC9B,QAAI,SAAS,KAAK;AAClB,QAAI,YAAY,OAAO;AAEvB,QAAI,CAAC,WAAW;AACd;AAAA;AAGF,cAAU,KAAK,aAAa;AAC5B,QAAI,OAAO;AAAA,MACT,uBAAuB;AAAA;AAEzB,QAAI,QAAQ,KAAK,oBAAoB,aAAa,SAAS;AAC3D,QAAI,aAAa,KAAK,oBAAoB,aAAa;AACvD,QAAI,IAAI,WAAU,aAAa,YAAY,YAAY;AACvD,QAAI,IAAI,SAAS,KAAK,aAAa;AACnC,QAAI,kBAAkB;AAAA,MACpB,GAAG,UAAU;AAAA,MACb,GAAG,UAAU;AAAA;AAGf,cAAU,IAAI;AACd,cAAU,IAAI;AACd,QAAI,YAAY,AAAQ,gBAAe,OAAO,qBAAqB,AAAQ,aAAa,WAAW,KAAK;AACxG,QAAI,iBAAiB,OAAO;AAC5B,mBAAe,KAAK,aAAa;AAEjC,QAAI,QAAQ,KAAK,gBAAgB,QAAQ,OAAO;AAEhD,QAAI,SAAS,KAAK;AAClB,QAAI,eAAe,WAAW;AAC9B,mBAAe,SAAS;AAAA,MACtB,MAAO,eAAc,cAAc,MAAM,eAAe,gBAAgB;AAAA,MACxE,eAAe,eAAe,QAAQ;AAAA,MACtC,OAAO,eAAe,WAAW;AAAA;AAEnC,QAAI,oBAAoB;AAAA,MACtB;AAAA,MACA;AAAA,MACA,OAAO;AAAA,QACL,MAAM;AAAA;AAAA;AAGV,QAAI,gBAAgB;AAAA,MAClB,OAAO;AAAA,QACL,GAAG,UAAU;AAAA,QACb,GAAG,UAAU;AAAA;AAAA;AAIjB,QAAI,eAAe,QAAQ,wBAAwB,CAAC,KAAK,qBAAqB;AAC5E,UAAI,eAAe;AAAA,QACjB,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,UAAU;AAAA;AAEZ,gBAAU,IAAI,gBAAgB;AAC9B,gBAAU,IAAI,gBAAgB;AAC9B,gBAAU,UAAU,mBAAmB;AACvC,qBAAe,UAAU,eAAe;AAAA,WACnC;AACL,gBAAU,KAAK;AACf,qBAAe,KAAK;AAAA;AAGtB,SAAK,sBAAsB;AAC3B,QAAI,eAAe,KAAK,QAAQ;AAEhC,QAAI,cAAc;AAChB,eAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAG5C,aAAK,KAAK,UAAU,aAAa;AAAA;AAAA;AAAA;AAKvC,kBAAe,UAAU,2BAA2B,WAAY;AAC9D,QAAI,OAAO;AAEX,SAAK,QAAQ,UAAU,GAAG,aAAa,SAAU,GAAG;AAClD,WAAK,YAAY;AAEjB,UAAI,CAAC,KAAK,WAAW;AACnB,YAAI,WAAW,KAAK,eAAe;AAEnC,YAAI,MAAM,KAAK,gBAAgB,CAAC,EAAE,SAAS,EAAE,UAAU,KAAK,QAAQ,WAAW,MAAM;AAIrF,YAAI,KAAK,SAAQ,SAAQ,GAAG,IAAI,KAAK,SAAS;AAE9C,aAAK,qBAAqB,IAAI,IAAI,KAAK,IAAI,MAAM,IAAI,MAAM,SAAS;AAAA;AAAA,OAErE,GAAG,YAAY,WAAY;AAG5B,WAAK,YAAY;AACjB,OAAC,KAAK,aAAa,KAAK;AAAA;AAAA;AAI5B,kBAAe,UAAU,6BAA6B,WAAY;AAChE,QAAI,KAAK,KAAK,IAAI;AAElB,QAAI,KAAK,eAAe,OAAO,WAAW;AACxC,SAAG,GAAG,aAAa,KAAK,+BAA+B;AACvD,SAAG,GAAG,YAAY,KAAK,gBAAgB;AAAA,WAClC;AACL,WAAK;AAAA;AAAA;AAIT,kBAAe,UAAU,uBAAuB,SAAU,WAAW,YAAY;AAC/E,QAAI,iBAAiB,KAAK;AAC1B,QAAI,WAAW,eAAe;AAE9B,QAAI,CAAC,eAAe,OAAO,WAAW;AACpC;AAAA;AAGF,QAAI,aAAa,CAAC,GAAG,SAAS;AAC9B,QAAI,aAAa,eAAe;AAEhC,gBAAY,SAAQ,SAAQ,WAAW,IAAI,YAAY,WAAW;AAClE,QAAI,oBAAoB,qBAAqB,gBAAgB,YAAY;AACzE,QAAI,aAAa,CAAC,YAAY,mBAAmB,YAAY;AAC7D,QAAI,cAAc,WAAU,WAAW,YAAY,YAAY;AAC/D,QAAI,aAAa,CAAC,WAAU,WAAW,IAAI,YAAY,YAAY,OAAO,WAAU,WAAW,IAAI,YAAY,YAAY;AAG3H,eAAW,KAAK,WAAW,MAAO,YAAW,KAAK;AAClD,eAAW,KAAK,WAAW,MAAO,YAAW,KAAK;AAGlD,QAAI,YAAY;AACd,UAAI,WAAW,OAAO,WAAW;AAC/B,aAAK,eAAe,aAAa,WAAW,IAAI,MAAM;AAAA,iBAC7C,WAAW,OAAO,UAAU;AACrC,aAAK,eAAe,aAAa,WAAW,IAAI,MAAM;AAAA,aACjD;AACL,aAAK,eAAe,aAAa,aAAa,WAAM;AAAA;AAAA;AAUxD,QAAI,WAAW,KAAK;AACpB,QAAI,WAAW;AAEf,QAAI,cAAc,qBAAqB,iBAAiB;AACtD,iBAAW,KAAK,wBAAwB,eAAe,sBAAsB;AAAA;AAG/E,QAAI,gBAAgB,AAAU,gBAAgB,UAAU;AAExD,SAAK,kBAAkB,YAAY,AAAO,kBAAkB,cAAc,IAAI;AAE9E,SAAK,kBAAkB,aAAa,AAAO,kBAAkB,cAAc,IAAI;AAAA;AAGjF,kBAAe,UAAU,gCAAgC,SAAU,GAAG;AACpE,QAAI,KAAK,EAAE;AACX,QAAI,iBAAiB,KAAK;AAE1B,QAAI,CAAC,MAAM,UAAU,IAAI,aAAa,MAAM;AAC1C;AAAA;AAGF,QAAI,SAAS,UAAU;AACvB,QAAI,YAAY,KAAK,QAAQ,iBAAiB,OAAO;AAErD,QAAI,CAAC,eAAe,eAAe,YAAY;AAC7C;AAAA;AAGF,QAAI,OAAO,UAAU,QAAQ,OAAO;AACpC,QAAI,QAAQ,KAAK,WAAW,IAAI,eAAe,sBAAsB,OAAO,OAAO;AAEnF,QAAI,CAAC,MAAM,QAAQ;AACjB,WAAK,eAAe,OAAO;AAAA;AAAA;AAI/B,kBAAe,UAAU,iBAAiB,WAAY;AACpD,QAAI,SAAS,KAAK;AAClB,WAAO,aAAa,OAAO,UAAU,KAAK,aAAa;AACvD,WAAO,kBAAkB,OAAO,eAAe,KAAK,aAAa;AACjE,QAAI,eAAe,KAAK,QAAQ;AAEhC,QAAI,cAAc;AAChB,eAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAG5C,aAAK,KAAK,UAAU,aAAa;AAAA;AAAA;AAAA;AAKvC,kBAAe,UAAU,0BAA0B,WAAY;AAC7D,SAAK;AAEL,QAAI,UAAU,KAAK;AAEnB,SAAK,kBAAkB,YAAY,AAAO,kBAAkB,SAAS,KAAK;AAE1E,YAAQ,SAAS;AAAA;AAGnB,kBAAe,UAAU,4BAA4B,WAAY;AAC/D,SAAK;AAEL,QAAI,KAAK,KAAK,IAAI;AAClB,OAAG,IAAI,aAAa,KAAK;AACzB,OAAG,IAAI,YAAY,KAAK;AAAA;AAG1B,kBAAe,UAAU,kBAAkB,SAAU,QAAQ,SAAS,SAAS,QAAQ;AACrF,QAAI,aAAY,AAAQ,aAAa,SAAS,SAAS,OAAO,KAAK;AACnE,WAAO,AAAO,QAAQ,UAAU,AAAQ,gBAAe,QAAQ,YAAW,WAAW,AAAQ,mBAAmB,QAAQ,YAAW;AAAA;AAIrI,kBAAe,UAAU,oBAAoB,SAAU,MAAM,OAAO;AAClE,aAAS,MAAM,UAAU,KAAK,IAAI,eAAe;AAAA,MAC/C;AAAA,MACA;AAAA;AAAA;AAQJ,kBAAe,UAAU,UAAU,WAAY;AAC7C,SAAK;AAEL,SAAK;AAAA;AAOP,kBAAe,UAAU,SAAS,WAAY;AAC5C,SAAK;AAEL,SAAK;AAAA;AAGP,kBAAe,OAAO;AACtB,SAAO;AAAA,EACP;AAEF,uBAAuB,QAAQ,QAAQ,SAAS,WAAW;AACzD,SAAO,IAAY,gBAAQ;AAAA,IACzB,OAAO;AAAA,MACL;AAAA;AAAA,IAEF,WAAW,CAAC,CAAC;AAAA,IACb;AAAA,IACA,OAAO;AAAA,IACP,aAAa,SAAU,GAAG;AAExB,MAAU,KAAK,EAAE;AAAA;AAAA,IAEnB,WAAW;AAAA;AAAA;AAIf,8BAA8B,gBAAgB,YAAY,YAAY;AACpE,MAAI,oBAAoB,kBAAkB;AAC1C,MAAI,oBAAoB,eAAe,IAAI;AAE3C,MAAI,mBAAmB;AACrB,wBAAoB,WAAU,mBAAmB,YAAY,YAAY,QAAQ;AAAA;AAGnF,SAAO;AAAA;AAGT,8BAA8B,gBAAgB;AAC5C,MAAI,oBAAoB,eAAe,IAAI;AAC3C,SAAO,CAAC,CAAE,sBAAqB,OAAO,eAAe,IAAI,cAAc;AAAA;AAGzE,oBAAmB,QAAQ;AACzB,SAAO,WAAW,aAAa,cAAc;AAAA;AAG/C,IAAO,yBAAQ;;;ACzvBR,IAAI,sBAAsB;AAAA,EAC/B,MAAM;AAAA,EACN,OAAO;AAAA,EAEP,QAAQ;AAAA;AAEH,IAAI,wBAAwB,SAAU,SAAS,SAAS;AAC7D,UAAQ,cAAc;AAAA,IACpB,UAAU;AAAA,IACV,OAAO;AAAA,KACN,SAAU,OAAO;AAClB,UAAM,YAAY,QAAQ;AAAA;AAAA;;;ACPvB,IAAI,4BAA4B;AAAA,EAAC;AAAA,IACtC,mBAAmB;AAAA,IACnB,OAAO,SAAU,aAAa,SAAS;AACrC,UAAI,eAAe;AACnB,cAAQ,cAAc,aAAa,SAAU,gBAAgB;AAC3D,YAAI,kBAAkB,YAAY;AAElC,YAAI,CAAC,eAAe,eAAe,gBAAgB,mBAAmB,gBAAgB,OAAO;AAC3F;AAAA;AAGF,qBAAa,KAAK,AAAe,uBAAuB,eAAe,WAAW,eAAe,eAAe,AAAO,KAAK,eAAe,eAAe,iBAAiB,eAAe,sBAAsB,YAAY;AAAA;AAE9N,aAAO;AAAA;AAAA;AAAA,EAGX;AAAA,IACE,mBAAmB;AAAA,IACnB,OAAO,SAAU,aAAa,SAAS;AACrC,UAAI,OAAO,YAAY;AACvB,UAAI,iBAAiB;AACrB,cAAQ,cAAc,aAAa,SAAU,gBAAgB;AAC3D,YAAI,eAAe,eAAe,cAAc;AAC9C,cAAI,aAAa,eAAe,cAAc,AAAO,KAAK,gBAAgB,MAAM,aAAa,oBAAoB;AAAA,YAC/G,OAAO;AAAA,YACP,aAAa;AAAA;AAEf,cAAI,SAAS,eAAe,sBAAsB;AAElD,cAAI,UAAU,GAAG;AAEf,uBAAW,YAAY;AACvB,2BAAe,KAAK;AAAA;AAAA;AAAA;AAK1B,kBAAY,UAAU,UAAU,cAAc;AAAA;AAAA;AAAA;AAMlD,wBAAwB,aAAa,gBAAgB,OAAO,YAAY;AACtE,MAAI,WAAW,eAAe,cAAc;AAC5C,MAAI,cAAc,sBAAc,mBAAmB;AACnD,MAAI,eAAe;AAAA,IACjB,OAAO,kBAAkB,YAAY,WAAW;AAAA;AAIlD,WAAS,IAAI,GAAG,OAAM,YAAY,QAAQ,IAAI,MAAK,KAAK;AACtD,QAAI,OAAO,YAAY;AACvB,QAAI,UAAU,SAAS,SAAS,YAAY,sBAAsB;AAClE,eAAW,QAAQ,YAAY,OAAO,WAAW;AAAA;AAGnD,SAAO,aAAa;AAEpB,qBAAmB,KAAK;AACtB,WAAO,aAAa;AAAA;AAGtB,qBAAmB,KAAK,QAAO;AAC7B,iBAAa,OAAO;AAAA;AAAA;;;AClExB,IAAI,SAAc;AACH,+BAA+B,QAAQ;AACpD,MAAI,YAAY,UAAU,OAAO;AAEjC,MAAI,CAAC,AAAO,QAAQ,YAAY;AAC9B,gBAAY,YAAY,CAAC,aAAa;AAAA;AAGxC,SAAK,WAAW,SAAU,KAAK;AAC7B,QAAI,CAAC,KAAK;AACR;AAAA;AAIF,QAAI,KAAI,KAAK,gBAAgB,CAAC,KAAI,KAAK,WAAW;AAChD,UAAI,SAAS,IAAI;AACjB,aAAO,IAAI;AAAA;AAGb,QAAI,SAAS,IAAI;AAEjB,QAAI,UAAU,AAAO,QAAQ,SAAS;AACpC,aAAK,QAAQ,SAAU,OAAO;AAC5B,YAAI,AAAO,SAAS,QAAQ;AAC1B,cAAI,KAAI,OAAO,YAAY,CAAC,KAAI,OAAO,QAAQ;AAC7C,kBAAM,MAAM,MAAM;AAAA;AAGpB,cAAI,KAAI,OAAO,UAAU,CAAC,KAAI,OAAO,QAAQ;AAC3C,kBAAM,MAAM,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ9B,cAAa,KAAK,MAAM;AACtB,SAAO,OAAO,IAAI,kBAAkB,IAAI,eAAe;AAAA;;;ACpCzD,IAAI,aAAY;AACD,wBAAuB,WAAW;AAC/C,MAAI,YAAW;AACb;AAAA;AAGF,eAAY;AACZ,YAAU,yBAAyB,aAAa,SAAU,QAAQ;AAEhE,WAAO,CAAC,OAAO,cAAe,EAAE,QAAO,SAAS,OAAO,OAAO,SAAS,IAAI,OAAO,cAAc,MAAM,OAAO,cAAc,eAAe;AAAA;AAE5I,YAAU,eAAe,qBAAqB;AAC9C,OAAK,2BAA2B,SAAU,SAAS;AACjD,cAAU,eAAe,UAAU,SAAS,OAAO,WAAW;AAAA;AAEhE,YAAU,qBAAqB;AAAA;;;AChB1B,mBAAiB,WAAW;AACjC,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAChC,iBAAc;AAAA;;;ACEhB,IAAI,iBAEJ,SAAU,QAAQ;AAChB,YAAU,iBAAgB;AAE1B,6BAA0B;AACxB,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,gBAAe;AAM5B,UAAM,aAAa;AACnB,WAAO;AAAA;AAGT,kBAAe,UAAU,gBAAgB,SAAU,WAAW,QAAQ;AACpE,WAAO,UAAU,cAAc,MAAM,MAAM;AAE3C,SAAK;AAEL,QAAI,OAAO,KAAK,QAAQ,KAAK;AAE7B,SAAK,aAAa;AAElB,iBAAa,KAAK,OAAO,KAAK,MAAM,KAAK;AAEzC,SAAK,eAAe,WAAW;AAE/B,QAAI,aAAa,KAAK,OAAO;AAC7B,SAAK,YAAY,SAAU,eAAe,OAAO;AAC/C,UAAI,SAAS,cAAc;AACzB,sBAAc,gBAAgB;AAC9B,sBAAc,aAAa,AAAO,MAAM;AAAA,aACnC;AACL,sBAAc,aAAa,KAAK;AAChC,sBAAc,gBAAgB;AAC9B,sBAAc,YAAY,AAAO,IAAI,KAAK,YAAY,SAAU,OAAO;AACrE,kBAAQ,AAAO,MAAM;AAErB,cAAI,UAAU,WAAW;AAGvB,kBAAM,SAAS;AAAA;AAGjB,iBAAO;AAAA;AAAA;AAAA;AAAA;AAWf,kBAAe,UAAU,uBAAuB,WAAY;AAQ1D,QAAI,SAAS,KAAK;AAClB,QAAI,sBAAsB;AAC1B,QAAI,cAAc,sBAAc;AAChC,QAAI,aAAa,KAAK;AACtB,IAAO,KAAK,OAAO,QAAQ,SAAU,OAAO;AAC1C,MAAO,KAAK,aAAa,SAAU,YAAY;AAC7C,YAAI,MAAM,eAAe,aAAa;AACpC,8BAAoB,cAAc;AAAA;AAAA;AAAA;AAIxC,IAAO,KAAK,qBAAqB,SAAU,GAAG,YAAY;AACxD,UAAI,SAAS;AACb,MAAO,KAAK,KAAK,WAAW,SAAU,OAAO;AAC3C,iBAAS,UAAU,KAAI,QAAQ,OAAO,eAAe,KAAI,OAAO,QAAQ,OAAO;AAAA,SAC9E;AACH,OAAC,UAAU,AAAO,KAAK,KAAK,WAAW,SAAU,OAAO;AACtD,QAAC,QAAO,UAAW,QAAO,SAAS,KAAK,cAAc,sBAAc,IAAI,YAAY,UAAU,YAAY,WAAW,YAAY;AAAA;AAAA,OAElI;AAEH,kBAAa,KAAK,OAAO,YAAY;AACnC,aAAO,OAAO,IAAI,UAAU,IAAI,OAAO,eAAe;AAAA;AAGxD,WAAO,UAAU,qBAAqB,MAAM,MAAM;AAAA;AAGpD,kBAAe,UAAU,iBAAiB,SAAU,WAAW,QAAQ;AACrE,QAAI,aAAa,KAAK;AACtB,QAAI,YAAY,KAAK;AAErB,QAAI,WAAY,UAAS,aAAa,WAAW,YAAY;AAC7D,eAAW,WAAW;AAEtB,IAAO,KAAK,WAAW,SAAU,OAAO,OAAO;AAC7C,UAAI,MAAM,KAAK,kBAAkB;AAEjC,UAAI,CAAC,SAAS,eAAe,MAAM;AACjC,iBAAS,OAAO;AAAA;AAAA,OAEjB;AAEH,QAAI,WAAW,iBAAiB,UAAU;AAExC,UAAI,WAAW;AACf,MAAO,KAAK,WAAW,SAAU,OAAO,OAAO;AAC7C,YAAI,MAAM,KAAK,kBAAkB;AAEjC,YAAI,SAAS,MAAM;AACjB,qBAAW,SAAS,OAAO,QAAQ,WAAW;AAAA;AAAA,SAE/C;AAAA;AAAA;AASP,kBAAe,UAAU,gBAAgB,WAAY;AACnD,WAAO,KAAK,IAAI;AAAA;AAOlB,kBAAe,UAAU,oBAAoB,SAAU,OAAO;AAC5D,WAAO,KAAK,UAAU,eAAe,MAAM,QAAQ,KAAK,MAAM,QAAQ;AAAA;AAOxE,kBAAe,UAAU,eAAe,WAAY;AAClD,WAAO,KAAK;AAAA;AAOd,kBAAe,UAAU,iBAAiB,WAAY;AACpD,QAAI,SAAS,KAAK;AAClB,WAAO,OAAO,UAAU,OAAO,OAAO,SAAS,IAAI,WAAW,KAAK,OAAO,aAAa,eAAe;AAAA;AAOxG,kBAAe,UAAU,cAAc,SAAU,UAAU;AACzD,SAAK,OAAO,WAAW,AAAO,MAAM;AAAA;AAOtC,kBAAe,UAAU,gBAAgB,SAAU,OAAO;AACxD,QAAI,QAAQ,sBAAc,eAAe,OAAO,KAAK;AACrD,WAAO,SAAS,OAAO,KAAK,OAAO,SAAS,KAAK,kBAAkB,KAAK,WAAW,WAAW,YAAY,eAAe;AAAA;AAQ3H,kBAAe,UAAU,wBAAwB,SAAU,YAAY;AACrE,QAAI,SAAS;AACb,QAAI,YAAY,KAAK;AACrB,SAAK,iBAAiB,SAAU,aAAa;AAC3C,UAAI,cAAc;AAClB,UAAI,OAAO,YAAY;AACvB,WAAK,KAAK,KAAK,sBAAsB,OAAO,SAAU,OAAO,WAAW;AAEtE,YAAI,OAAO,sBAAc,eAAe,OAAO;AAC/C,iBAAS,cAAc,YAAY,KAAK;AAAA,SACvC;AACH,aAAO,KAAK;AAAA,QACV,UAAU,YAAY;AAAA,QACtB,WAAW;AAAA;AAAA,OAEZ;AACH,WAAO;AAAA;AAST,kBAAe,UAAU,oBAAoB,SAAU,OAAO;AAC5D,QAAI;AAEJ,QAAI,KAAK,cAAc;AACrB,uBAAiB,MAAM;AAAA,WAClB;AACL,UAAI,MAAM,SAAS,MAAM;AACvB,yBAAiB,MAAM;AAAA,aAClB;AACL,YAAI,gBAAgB,MAAM,YAAY;AACtC,yBAAiB,cAAc,OAAO,aAAa,cAAc,OAAO,WAAW,IAAK,eAAc,KAAK,cAAc,MAAM;AAAA;AAAA;AAInI,WAAO;AAAA;AAGT,kBAAe,UAAU,gBAAgB,SAAU,iBAAgB;AAEjE,QAAI,KAAK,cAAc;AACrB;AAAA;AAGF,QAAI,QAAQ;AACZ,QAAI,cAAc,CAAC,IAAI;AACvB,QAAI,iBAAiB;AAErB,qBAAiB,UAAU,YAAY;AACrC,UAAI,iBAAiB,eAAe,kBAAkB;AAAA,QACpD;AAAA;AAGF,UAAI,CAAC,YAAY;AACf,qBAAa,eAAe,cAAc;AAAA;AAG5C,UAAI,QAAQ,gBAAe,gBAAgB;AAE3C,UAAI,SAAS,OAAO,WAAW;AAC7B,oBAAY,KAAK;AAAA,iBACR,SAAS,OAAO,UAAU;AACnC,oBAAY,KAAK;AAAA,aACZ;AACL,cAAM,KAAK;AAAA,UACT,OAAO,SAAS;AAAA,UAChB;AAAA,WACC;AAAA,UACD,OAAO,SAAS;AAAA,UAChB;AAAA;AAAA;AAAA;AAMN,QAAI,YAAY,KAAK,WAAW;AAEhC,QAAI,CAAC,UAAU,QAAQ;AACrB,gBAAU,KAAK;AAAA,QACb,UAAU,CAAC,WAAW;AAAA;AAAA,WAEnB;AACL,UAAI,OAAO,UAAU,GAAG,SAAS;AACjC,eAAS,aAAa,UAAU,QAAQ;AAAA,QACtC,UAAU,CAAC,WAAW;AAAA;AAExB,aAAO,UAAU,UAAU,SAAS,GAAG,SAAS;AAChD,eAAS,YAAY,UAAU,KAAK;AAAA,QAClC,UAAU,CAAC,MAAM;AAAA;AAAA;AAIrB,QAAI,OAAO;AACX,IAAO,KAAK,WAAW,SAAU,OAAO;AACtC,UAAI,WAAW,MAAM;AAErB,UAAI,UAAU;AAEZ,iBAAS,KAAK,QAAQ,QAAQ,CAAC,MAAM,SAAS,KAAK;AACnD,gBAAQ,SAAS;AACjB,eAAO,SAAS;AAAA;AAAA,OAEjB;AACH,WAAO;AAAA,MACL;AAAA,MACA;AAAA;AAAA;AAIJ,kBAAe,OAAO;AACtB,kBAAe,gBAAgB,qBAAqB,uBAAe,eAAe;AAAA,IAChF,UAAU;AAAA,IACV,SAAS;AAAA,IACT,SAAS;AAAA,IACT,OAAO;AAAA,IACP,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,cAAc;AAAA,IACd,SAAS;AAAA,IACT,WAAW;AAAA;AAGb,SAAO;AAAA,EACP;AASF,IAAI,eAAe;AAAA,EACjB,aAAa,SAAU,cAAc;AACnC,QAAI,aAAa,KAAK;AACtB,QAAI,YAAY,KAAK,IAAI,WAAW,WAAW;AAC/C,QAAI,aAAa,KAAK;AACtB,QAAI,cAAc,WAAW;AAC7B,kBAAc,KAAK,IAAI,SAAS,aAAa,KAAK;AAClD,eAAW,cAAc;AACzB,QAAI,YAAa,YAAW,KAAK,WAAW,MAAM;AAElD,WAAO,CAAC,UAAU,QAAQ,eAAe,aAAa,YAAY,GAAG;AACnE;AAAA;AAGF,eAAW,YAAY;AACvB,gBAAY,CAAC,UAAU,QAAQ;AAE/B,QAAI,WAAW,SAAS;AACtB,mBAAa,KAAK;AAAA,QAChB,UAAU,CAAC,WAAW,WAAW;AAAA,QACjC,OAAO,CAAC,GAAG;AAAA;AAAA;AAIf,aAAS,QAAQ,GAAG,OAAO,WAAW,IAAI,QAAQ,aAAa,QAAQ,WAAW,SAAS;AACzF,UAAI,MAAM,UAAU,cAAc,IAAI,WAAW,KAAK,OAAO;AAC7D,mBAAa,KAAK;AAAA,QAChB,UAAU,CAAC,MAAM;AAAA,QACjB,OAAO,CAAC,GAAG;AAAA;AAAA;AAIf,QAAI,WAAW,SAAS;AACtB,mBAAa,KAAK;AAAA,QAChB,UAAU,CAAC,WAAW,IAAI;AAAA,QAC1B,OAAO,CAAC,GAAG;AAAA;AAAA;AAIf,oBAAgB;AAChB,IAAO,KAAK,cAAc,SAAU,OAAO,QAAO;AAChD,YAAM,QAAQ;AACd,YAAM,OAAO,KAAK,gBAAgB,MAAM;AAAA,OACvC;AAAA;AAAA,EAEL,YAAY,SAAU,cAAc;AAClC,QAAI,aAAa,KAAK;AACtB,IAAO,KAAK,WAAW,YAAY,SAAU,MAAM;AAGjD,mBAAa,KAAK;AAAA,QAChB,MAAM,KAAK,gBAAgB,MAAM;AAAA,QACjC,OAAO;AAAA;AAAA,OAER;AAEH,qBAAiB,YAAY;AAAA;AAAA,EAE/B,QAAQ,SAAU,cAAc;AAC9B,QAAI,aAAa,KAAK;AACtB,IAAO,KAAK,WAAW,QAAQ,SAAU,eAAe,OAAO;AAC7D,UAAI,CAAC,AAAO,SAAS,gBAAgB;AACnC,wBAAgB;AAAA,UACd,OAAO;AAAA;AAAA;AAIX,UAAI,OAAO;AAAA,QACT,MAAM;AAAA,QACN;AAAA;AAGF,UAAI,cAAc,SAAS,MAAM;AAC/B,aAAK,OAAO,cAAc;AAAA;AAG5B,UAAI,cAAc,eAAe,UAAU;AACzC,YAAI,QAAQ,KAAK,QAAQ,cAAc;AACvC,aAAK,WAAW,CAAC,OAAO;AACxB,aAAK,QAAQ,CAAC,GAAG;AAAA,aACZ;AAGL,YAAI,WAAW,KAAK,WAAW;AAC/B,YAAI,UAAU,KAAK,QAAQ,CAAC,GAAG;AAC/B,YAAI,YAAY,CAAC,GAAG,GAAG;AACvB,YAAI,eAAe,CAAC,WAAW;AAC/B,YAAI,YAAY;AAEhB,iBAAS,KAAK,GAAG,KAAK,GAAG,MAAM;AAC7B,cAAI,QAAQ,CAAC,CAAC,OAAO,MAAM,QAAQ,CAAC,OAAO,MAAM,QAAQ;AAEzD,mBAAS,IAAI,GAAG,IAAI,KAAK,SAAS,OAAO,MAAM,KAAK;AAClD,qBAAS,MAAM,cAAc,MAAM;AACnC,oBAAQ,MAAM,UAAU;AACxB,sBAAU,MAAM,MAAM;AAAA;AAGxB,mBAAS,OAAO,QAAS,UAAS,MAAM,aAAa;AAAA;AAGvD,kBAAU,MAAM,SAAS,OAAO,YAAa,SAAQ,KAAK;AAC1D,kBAAU,MAAM,SAAS,OAAO,aAAc,SAAQ,KAAK;AAE3D,YAAI,MAAuC;AACzC,cAAI,SAAS,KAAK,SAAS,IAAI;AAC7B,oBAAQ,KAAK,WAAW,QAAQ,iBAAiB,WAAW;AAAA;AAAA;AAIhE,YAAI,SAAS,OAAO,SAAS,MAAM,QAAQ,MAAM,QAAQ,IAAI;AAG3D,eAAK,QAAQ,SAAS;AAAA;AAAA;AAI1B,WAAK,SAAS,sBAAc,gBAAgB;AAC5C,mBAAa,KAAK;AAAA,OACjB;AAEH,qBAAiB,YAAY;AAE7B,oBAAgB;AAChB,IAAO,KAAK,cAAc,SAAU,OAAO;AACzC,UAAI,QAAQ,MAAM;AAClB,UAAI,cAAc,CAAC,CAAC,KAAK,UAAK,MAAM,KAAK,CAAC,KAAK,UAAK,MAAM;AAC1D,YAAM,OAAO,MAAM,QAAQ,KAAK,gBAAgB,MAAM,SAAS,OAAO,MAAM,QAAQ,MAAM,UAAU,OAAO;AAAA,OAC1G;AAAA;AAAA;AAIP,0BAA0B,YAAY,WAAW;AAC/C,MAAI,UAAU,WAAW;AAEzB,MAAI,WAAW,WAAW,aAAa,CAAC,UAAU,SAAS;AACzD,cAAU;AAAA;AAAA;AAId,IAAO,yBAAQ;;;AC3cf,IAAI,yBAEJ,SAAU,QAAQ;AAChB,YAAU,yBAAwB;AAElC,qCAAkC;AAChC,QAAI,QAAQ,WAAW,QAAQ,OAAO,MAAM,MAAM,cAAc;AAEhE,UAAM,OAAO,wBAAuB;AACpC,WAAO;AAAA;AAGT,0BAAuB,UAAU,WAAW,WAAY;AACtD,QAAI,YAAY,KAAK;AACrB,cAAU;AACV,QAAI,iBAAiB,KAAK;AAC1B,QAAI,UAAU,eAAe,IAAI;AACjC,QAAI,iBAAiB,eAAe;AACpC,QAAI,WAAW,eAAe;AAC9B,QAAI,WAAW,eAAe;AAE9B,QAAI,YAAY,KAAK;AAErB,QAAI,WAAW,eAAe;AAE9B,QAAI,WAAW,KAAK;AAEpB,QAAI,WAAW,SAAS;AACxB,QAAI,YAAY,AAAO,SAAS,eAAe,IAAI,aAAa,OAAO,CAAC;AACxE,gBAAY,KAAK,gBAAgB,WAAW,SAAS,IAAI,UAAU,WAAW;AAC9E,IAAO,KAAK,SAAS,eAAe,SAAU,MAAM;AAClD,UAAI,QAAQ,KAAK;AACjB,UAAI,YAAY,IAAY;AAC5B,gBAAU,UAAU,AAAO,KAAK,KAAK,cAAc,MAAM;AAEzD,WAAK,iBAAiB,WAAW,KAAK;AAGtC,UAAI,iBAAiB,eAAe,kBAAkB;AAEtD,WAAK,kBAAkB,WAAW,gBAAgB,CAAC,GAAG,GAAG,SAAS,IAAI,SAAS;AAE/E,UAAI,WAAW;AACb,YAAI,cAAc,KAAK,eAAe,cAAc;AACpD,kBAAU,IAAI,IAAY,aAAK;AAAA,UAC7B,OAAO;AAAA,YACL,GAAG,cAAc,UAAU,CAAC,UAAU,SAAS,KAAK;AAAA,YACpD,GAAG,SAAS,KAAK;AAAA,YACjB,MAAM,MAAM;AAAA,YACZ,eAAe;AAAA,YACf,OAAO;AAAA,YACP,MAAM;AAAA,YACN,MAAM;AAAA,YACN,SAAS,gBAAgB,eAAe,MAAM;AAAA;AAAA;AAAA;AAKpD,gBAAU,IAAI;AAAA,OACb;AACH,gBAAY,KAAK,gBAAgB,WAAW,SAAS,IAAI,UAAU,WAAW;AAC9E,IAAO,IAAI,eAAe,IAAI,WAAW,WAAW,eAAe,IAAI;AACvE,SAAK,iBAAiB;AACtB,SAAK,cAAc;AAAA;AAGrB,0BAAuB,UAAU,mBAAmB,SAAU,WAAW,YAAY;AACnF,QAAI,QAAQ;AAEZ,cAAU,GAAG,aAAa,WAAY;AACpC,aAAO,YAAY;AAAA,OAClB,GAAG,YAAY,WAAY;AAC5B,aAAO,YAAY;AAAA;AAGrB,QAAI,cAAc,SAAU,QAAQ;AAClC,UAAI,iBAAiB,MAAM;AAE3B,qBAAe,OAAO,aAAa,MAAM,IAAI,eAAe;AAAA,QAC1D,MAAM;AAAA,QACN,OAAO,AAAO,kBAAkB,eAAe,sBAAsB,aAAa;AAAA;AAAA;AAAA;AAKxF,0BAAuB,UAAU,gBAAgB,WAAY;AAC3D,QAAI,iBAAiB,KAAK;AAC1B,QAAI,cAAc,eAAe;AAEjC,QAAI,YAAY,WAAW,YAAY;AACrC,aAAO,AAAO,aAAa,gBAAgB,KAAK,KAAK,eAAe;AAAA,WAC/D;AAEL,UAAI,QAAQ,YAAY;AAExB,UAAI,CAAC,SAAS,UAAU,QAAQ;AAC9B,gBAAQ;AAAA;AAGV,aAAO;AAAA;AAAA;AAIX,0BAAuB,UAAU,kBAAkB,SAAU,OAAO,MAAM,UAAU,WAAW,WAAW;AACxG,QAAI,CAAC,MAAM;AACT;AAAA;AAGF,QAAI,YAAY,IAAY;AAC5B,QAAI,iBAAiB,KAAK,eAAe;AACzC,cAAU,IAAI,IAAY,aAAK;AAAA,MAC7B,OAAO;AAAA,QACL,GAAG,YAAY,cAAc,UAAU,SAAS,KAAK,IAAI,SAAS,KAAK;AAAA,QACvE,GAAG,SAAS,KAAK;AAAA,QACjB,eAAe;AAAA,QACf,OAAO,YAAY,YAAY;AAAA,QAC/B;AAAA,QACA,MAAM,eAAe;AAAA,QACrB,MAAM,eAAe;AAAA;AAAA;AAGzB,UAAM,IAAI;AAAA;AAQZ,0BAAuB,UAAU,eAAe,WAAY;AAC1D,QAAI,iBAAiB,KAAK;AAC1B,QAAI,gBAAgB,AAAO,IAAI,eAAe,gBAAgB,SAAU,OAAO,OAAO;AACpF,aAAO;AAAA,QACL;AAAA,QACA,uBAAuB;AAAA;AAAA;AAG3B,QAAI,WAAW,eAAe,IAAI;AAElC,QAAI,SAAS,eAAe,IAAI;AAChC,QAAI,UAAU,eAAe,IAAI;AAEjC,QAAI,WAAW,eAAe,UAAU,CAAC,SAAS;AAChD,oBAAc;AAAA,eAEP,UAAU;AACf,iBAAW,SAAS,QAAQ;AAAA;AAGhC,WAAO;AAAA,MACL;AAAA,MACA;AAAA;AAAA;AAIJ,0BAAuB,UAAU,oBAAoB,SAAU,OAAO,gBAAgB,YAAY;AAChG,UAAM,IAAI,aACV,KAAK,oBAAoB,gBAAgB,WAAW,WAAW,IAAI,WAAW,IAAI,WAAW,IAAI,WAAW,IAC5G,KAAK,oBAAoB,gBAAgB;AAAA;AAG3C,0BAAuB,UAAU,eAAe,SAAU,OAAO;AAC/D,QAAI,iBAAiB,KAAK;AAC1B,QAAI,SAAS,eAAe;AAC5B,QAAI,WAAW,AAAO,MAAM,OAAO;AACnC,QAAI,SAAS,eAAe,kBAAkB;AAE9C,QAAI,OAAO,iBAAiB,UAAU;AACpC,eAAS,UAAU;AACnB,MAAO,KAAK,UAAU,SAAU,GAAG,KAAK;AACtC,iBAAS,OAAO,QAAQ;AAAA;AAAA,WAErB;AACL,eAAS,UAAU,CAAC,SAAS;AAAA;AAG/B,SAAK,IAAI,eAAe;AAAA,MACtB,MAAM;AAAA,MACN,MAAM,KAAK;AAAA,MACX,aAAa,KAAK,eAAe;AAAA,MACjC;AAAA;AAAA;AAIJ,0BAAuB,OAAO;AAC9B,SAAO;AAAA,EACP;AAEF,IAAO,wBAAQ;;;ACjMR,mBAAiB,WAAW;AACjC,YAAU,uBAAuB;AACjC,YAAU,sBAAsB;AAChC,iBAAc;AAAA;;;ACHT,mBAAiB,WAAW;AACjC,MAAI;AACJ,MAAI;AAAA;;;ACFN,IAAI,iBAAiB;AAAA,EACnB,OAAO;AAAA,IACL,SAAS;AAAA;AAAA,EAEX,OAAO;AAAA,IACL,MAAM;AAAA;AAAA;AAGV,IAAI,UAAQ;AACZ,IAAI,oBAAoB;AACT,oBAAoB,SAAS,KAAK;AAC/C,MAAI,YAAY,QAAQ,SAAS;AAEjC,MAAI,CAAC,UAAU,IAAI,YAAY;AAC7B;AAAA;AAGF,MAAI,iBAAgB,AAAO,MAAM;AACjC,EAAO,MAAM,eAAc,OAAO,QAAQ,iBAAiB,IAAI,SAAS;AACxE,EAAO,MAAM,UAAU,QAAQ,gBAAe;AAC9C;AACA;AAEA,sBAAoB;AAClB,QAAI,aAAa,UAAU,SAAS;AACpC,QAAI,WAAW,WAAW,IAAI;AAE9B,QAAI,UAAU;AAGZ,UAAI,4BAA4B,AAAO;AACvC,cAAQ,WAAW,SAAU,aAAa;AACxC,YAAI,YAAY,mBAAmB;AACjC;AAAA;AAGF,YAAI,aAAa,0BAA0B,IAAI,YAAY;AAE3D,YAAI,CAAC,YAAY;AACf,uBAAa;AACb,oCAA0B,IAAI,YAAY,MAAM;AAAA;AAGlD,gBAAM,aAAa,QAAQ;AAAA;AAE7B,cAAQ,cAAc,SAAU,aAAa;AAC3C,YAAI,QAAQ,iBAAiB,cAAc;AACzC;AAAA;AAGF,YAAI,OAAO,YAAY,oBAAoB,YAAY;AAErD,sBAAY;AACZ;AAAA;AAGF,YAAI,OAAO,YAAY;AAEvB,YAAI,CAAC,YAAY,mBAAmB;AAClC,cAAI,YAAY,YAAY;AAC5B,cAAI,WAAW;AACf,cAAI,eAAe,QAAM,aAAa;AACtC,eAAK,KAAK,SAAU,KAAK;AACvB,gBAAI,SAAS,KAAK,YAAY;AAC9B,qBAAS,UAAU;AAAA;AAErB,cAAI,cAAc,UAAU;AAC5B,oBAAU,KAAK,SAAU,QAAQ;AAC/B,gBAAI,MAAM,SAAS;AACnB,gBAAI,OAAO,UAAU,QAAQ,WAAW,SAAS;AACjD,gBAAI,gBAAe,oBAAoB,YAAY,SAAS,MAAM,cAAc;AAChF,gBAAI,kBAAiB,KAAK,cAAc,KAAK;AAC7C,iBAAK,cAAc,KAAK,SAAS,WAAW,iBAAgB;AAAA;AAAA,eAEzD;AACL,cAAI,eAAe,oBAAoB,YAAY,SAAS,YAAY,MAAM,mBAAmB,QAAQ;AACzG,cAAI,iBAAiB,KAAK,UAAU;AACpC,eAAK,UAAU,SAAS,WAAW,gBAAgB;AAAA;AAGrD,4BAAoB,iBAAgB,eAAc;AAGhD,cAAI,cAAc,kBAAiB,AAAO,OAAO,AAAO,OAAO,IAAI,gBAAe,mBAAkB;AACpG,sBAAY,QAAQ;AACpB,iBAAO;AAAA;AAAA;AAAA;AAAA;AAMf,sBAAoB;AAClB,QAAI,cAAc,QAAQ,iBAAiB,IAAI;AAC/C,QAAI,aAAa,UAAU,SAAS;AACpC,eAAW,SAAS,AAAO,SAAS,WAAW,QAAQ;AAEvD,QAAI,CAAC,WAAW,IAAI,YAAY;AAC9B;AAAA;AAGF,QAAI,MAAM,IAAI,QAAQ;AAEtB,QAAI,WAAW,IAAI,gBAAgB;AACjC,UAAI,aAAa,cAAc,WAAW,IAAI;AAC9C;AAAA;AAGF,QAAI,YAAY,QAAQ;AACxB,QAAI,aAAa,WAAW,IAAI,CAAC,QAAQ,gBAAgB;AACzD,QAAI,eAAe,WAAW,IAAI,CAAC,UAAU,gBAAgB;AAC7D,QAAI,mBAAmB,KAAK,IAAI,WAAW;AAC3C,QAAI;AAEJ,QAAI,YAAY,GAAG;AAEjB;AAAA,WACK;AACL,UAAI,QAAQ;AAEZ,UAAI,OAAO;AACT,YAAI,YAAY,WAAW,IAAI,CAAC,WAAW;AAC3C,oBAAY,QAAQ,WAAW;AAAA,UAC7B;AAAA;AAAA,aAEG;AACL,oBAAY,WAAW,IAAI,CAAC,WAAW;AAAA;AAGzC,UAAI,iBAAiB;AACrB,UAAI,SAAS,YAAY,IAAI,WAAW,IAAI,CAAC,UAAU,YAAY,aAAa,WAAW,IAAI,CAAC,UAAU,UAAU;AACpH,mBAAa,QAAQ,QAAQ;AAAA,QAC3B,aAAa;AAAA;AAEf,cAAQ,WAAW,SAAU,aAAa,KAAK;AAC7C,YAAI,MAAM,kBAAkB;AAC1B,cAAI,cAAc;AAClB,cAAI,aAAa,YAAY,IAAI;AACjC,cAAI,WAAW,aAAa,aAAa;AACzC,wBAAc,YAAY,IAAI,WAAW,IAAI,CAAC,UAAU,YAAY,aAAa,WAAW,IAAI,CAAC,UAAU,UAAU;AACrH,wBAAc,QAAQ,aAAa;AAAA,YACjC,UAAU,YAAY;AAAA,YACtB,YAAY,YAAY,IAAI;AAAA,YAC5B,YAAY,kBAAkB,YAAY;AAAA;AAE5C,cAAI,OAAO,YAAY;AAEvB,cAAI,KAAK,UAAU,YAAY;AAE7B,gBAAI,eAAe,WAAW,IAAI,CAAC,QAAQ;AAC3C,2BAAe,QAAQ,cAAc;AAAA,cACnC,YAAY;AAAA;AAAA,iBAET;AACL,2BAAe,WAAW,IAAI,CAAC,QAAQ;AAAA;AAGzC,cAAI,oBAAoB,WAAW,IAAI,CAAC,QAAQ,aAAa;AAC7D,cAAI,iBAAiB,WAAW,IAAI,CAAC,QAAQ,aAAa;AAC1D,cAAI,aAAa;AAEjB,mBAAS,IAAI,GAAG,IAAI,KAAK,SAAS,KAAK;AACrC,gBAAI,IAAI,YAAY;AAClB,kBAAI,SAAS,KAAK,QAAQ;AAC1B,kBAAI,QAAQ,KAAK,UAAU;AAC3B,kBAAI,YAAY,WAAW,IAAI,CAAC,QAAQ,SAAS,aAAa;AAC9D,yBAAW,KAAK,QAAQ,WAAW;AAAA,gBACjC,MAAM;AAAA,gBACN,OAAO,MAAM,KAAK;AAAA;AAAA;AAAA;AAKxB,yBAAe,WAAW,KAAK,qBAAqB;AACpD,yBAAe,KAAK;AAAA;AAAA;AAGxB,UAAI,iBAAiB,WAAW,SAAS,CAAC,UAAU,YAAY;AAChE,UAAI,kBAAkB,eAAe,IAAI;AACzC,UAAI,eAAe,eAAe,IAAI;AACtC,mBAAa,eAAe,KAAK,mBAAmB;AACpD,UAAI,aAAa,cAAc;AAAA;AAAA;AAInC,mBAAiB,KAAK,WAAW;AAC/B,QAAI,OAAO,QAAQ,UAAU;AAC3B,aAAO;AAAA;AAGT,QAAI,SAAS;AACb,IAAO,KAAK,WAAW,SAAU,OAAO,KAAK;AAC3C,eAAS,OAAO,QAAQ,IAAI,OAAO,YAAY,MAAM,WAAW,MAAM;AAAA;AAExE,WAAO;AAAA;AAGT,sBAAoB;AAClB,QAAI,QAAQ,QAAQ,IAAI;AAExB,QAAI,SAAS,MAAM,QAAQ;AACzB,cAAQ,MAAM;AAAA;AAGhB,WAAO,SAAS,MAAM;AAAA;AAGxB,6BAA2B,MAAM;AAC/B,WAAO,QAAQ,iBAAiB,IAAI,CAAC,UAAU,cAAc,SAAS;AAAA;AAAA;;;ACjN3D,0BAA0B,QAAQ;AAC/C,MAAI,CAAC,UAAU,CAAC,OAAO,MAAM;AAC3B;AAAA;AAGF,MAAI,OAAO,OAAO;AAElB,MAAI,KAAK,QAAQ,MAAM;AACrB,SAAK,UAAU,KAAK;AAAA;AAGtB,OAAK,QAAQ,KAAK,SAAS;AAE3B,EAAO,KAAK,CAAC,eAAe,WAAW,UAAU,SAAS,SAAU,MAAM;AACxE,QAAI,KAAK,SAAS,MAAM;AACtB,WAAK,MAAM,QAAQ,KAAK;AAAA;AAAA;AAAA;;;ACdvB,mBAAiB,WAAW;AACjC,YAAU,qBAAqB;AAC/B,YAAU,eAAe,UAAU,SAAS,OAAO,MAAM;AAAA;;;ACA3D,IAAI,qCAAqC;AAAA,EACvC,OAAO;AAAA,EAEP,KAAK;AAAA,EACL,MAAM;AAAA,EACN,KAAK;AAAA,EACL,MAAM;AAAA,EACN,KAAK;AAAA,EACL,MAAM;AAAA,EACN,MAAM;AAAA;AAYR,IAAI,kBAEJ,WAAY;AACV,4BAAyB,MAAM;AAE7B,QAAI,YAAY,KAAK,WAAW,SAAS,QAAQ,IAAI,OAAO,QAAQ,SAAS,QAAQ,OAAO;AAE5F,QAAI,aAAa,MAAM;AACrB,UAAI,SAAS;AAEb,UAAI,MAAuC;AACzC,iBAAS,cAAc,kBAAkB,MAAM;AAAA;AAGjD,iBAAW;AAAA;AAAA;AAIf,mBAAgB,UAAU,WAAW,SAAU,MAAM;AACnD,QAAI,OAAO,OAAO;AAClB,WAAO,SAAS,WAAW,KAAK,SAAS,KAAK,QAAQ,SAAS,WAAW,KAAK,SAAS,KAAK,OAAO,MAAM;AAAA;AAG5G,SAAO;AAAA;AAGT,IAAI,yBAEJ,WAAY;AACV,qCAAkC;AAAA;AAElC,0BAAuB,UAAU,WAAW,WAAY;AACtD,WAAO,KAAK;AAAA;AAGd,SAAO;AAAA;AAGT,IAAI,uBAEJ,WAAY;AACV,mCAAgC;AAAA;AAEhC,wBAAqB,UAAU,WAAW,WAAY;AACpD,QAAI,WAAW,KAAK;AAEpB,aAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,UAAI,CAAC,SAAS,GAAG,YAAY;AAC3B,eAAO;AAAA;AAAA;AAIX,WAAO;AAAA;AAGT,SAAO;AAAA;AAGT,IAAI,sBAEJ,WAAY;AACV,kCAA+B;AAAA;AAE/B,uBAAoB,UAAU,WAAW,WAAY;AACnD,QAAI,WAAW,KAAK;AAEpB,aAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,UAAI,SAAS,GAAG,YAAY;AAC1B,eAAO;AAAA;AAAA;AAIX,WAAO;AAAA;AAGT,SAAO;AAAA;AAGT,IAAI,uBAEJ,WAAY;AACV,mCAAgC;AAAA;AAEhC,wBAAqB,UAAU,WAAW,WAAY;AACpD,WAAO,CAAC,KAAK,MAAM;AAAA;AAGrB,SAAO;AAAA;AAGT,IAAI,8BAEJ,WAAY;AACV,0CAAuC;AAAA;AAEvC,+BAA4B,UAAU,WAAW,WAAY;AAC3D,QAAI,YAAY,CAAC,CAAC,KAAK;AAEvB,QAAI,WAAW,KAAK;AACpB,QAAI,YAAY,SAAS,KAAK;AAC9B,QAAI,eAAe,YAAY,KAAK,YAAY,aAAa;AAE7D,aAAS,IAAI,GAAG,IAAI,KAAK,YAAY,QAAQ,KAAK;AAChD,UAAI,CAAC,KAAK,YAAY,GAAG,SAAS,YAAY,eAAe,YAAY;AACvE,eAAO;AAAA;AAAA;AAIX,WAAO;AAAA;AAGT,SAAO;AAAA;AAGT,qBAAqB,YAAY,SAAS;AACxC,MAAI,eAAe,QAAQ,eAAe,OAAO;AAC/C,QAAI,OAAO,IAAI;AACf,SAAK,QAAQ;AACb,WAAO;AAAA;AAGT,MAAI,SAAS;AAEb,MAAI,CAAC,iBAAiB,aAAa;AACjC,QAAI,MAAuC;AACzC,eAAS,cAAc,sDAAsD;AAAA;AAG/E,eAAW;AAAA;AAGb,MAAI,WAAW,KAAK;AAClB,WAAO,iBAAiB,OAAO,YAAY;AAAA,aAClC,WAAW,IAAI;AACxB,WAAO,iBAAiB,MAAM,YAAY;AAAA,aACjC,WAAW,KAAK;AACzB,WAAO,eAAe,YAAY;AAAA;AAGpC,SAAO,sBAAsB,YAAY;AAAA;AAG3C,0BAA0B,IAAI,YAAY,SAAS;AACjD,MAAI,eAAe,WAAW;AAC9B,MAAI,SAAS;AAEb,MAAI,MAAuC;AACzC,aAAS,cAAc,0CAA0C,KAAK,yCAAyC,sBAAsB;AAAA;AAGvI,MAAI,CAAC,QAAQ,eAAe;AAC1B,eAAW;AAAA;AAGb,MAAI,CAAC,aAAa,QAAQ;AACxB,eAAW;AAAA;AAGb,MAAI,OAAO,OAAO,QAAQ,IAAI,yBAAyB,IAAI;AAC3D,OAAK,WAAW,IAAI,cAAc,SAAU,WAAW;AACrD,WAAO,YAAY,WAAW;AAAA;AAGhC,MAAI,CAAC,KAAK,SAAS,QAAQ;AACzB,eAAW;AAAA;AAGb,SAAO;AAAA;AAGT,wBAAwB,YAAY,SAAS;AAC3C,MAAI,YAAY,WAAW;AAC3B,MAAI,SAAS;AAEb,MAAI,MAAuC;AACzC,aAAS,cAAc,6CAA6C,sBAAsB;AAAA;AAG5F,MAAI,CAAC,iBAAiB,YAAY;AAChC,eAAW;AAAA;AAGb,MAAI,OAAO,IAAI;AACf,OAAK,QAAQ,YAAY,WAAW;AAEpC,MAAI,CAAC,KAAK,OAAO;AACf,eAAW;AAAA;AAGb,SAAO;AAAA;AAGT,+BAA+B,YAAY,SAAS;AAClD,MAAI,SAAS;AACb,MAAI,mBAAmB,QAAQ,gBAAgB;AAC/C,MAAI,cAAc;AAClB,MAAI,WAAW,KAAK;AACpB,MAAI,aAAa,WAAW;AAC5B,MAAI,cAAc,aAAa,kBAAkB,cAAc;AAE/D,WAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,QAAI,SAAS,SAAS;AAEtB,QAAI,WAAW,YAAY,QAAQ,mBAAmB,IAAI,SAAS;AACjE;AAAA;AAGF,QAAI,KAAK,OAAO,oCAAoC,UAAU,mCAAmC,UAAU;AAC3G,QAAI,eAAe,WAAW;AAC9B,QAAI,kBAAkB,cAAc,YAAY,gBAAgB;AAChE,QAAI,YAAY,uBAAuB,IAAI,oBAAoB,OAAO,SAAS,IAAI,gBAAgB;AAEnG,QAAI,CAAC,WAAW;AACd,UAAI,MAAuC;AACzC,iBAAS,cAAc,oCAAoC,SAAS,mBAAmB;AAAA;AAGzF,iBAAW;AAAA;AAGb,gBAAY,KAAK;AAAA;AAGnB,MAAI,CAAC,YAAY,QAAQ;AACvB,QAAI,MAAuC;AACzC,eAAS,cAAc,yDAAyD,sBAAsB;AAAA;AAIxG,eAAW;AAAA;AAGb,MAAI,OAAO,IAAI;AACf,OAAK,mBAAmB;AACxB,OAAK,cAAc;AACnB,OAAK,WAAW,QAAQ;AACxB,OAAK,cAAc;AACnB,SAAO;AAAA;AAGT,0BAA0B,KAAK;AAC7B,SAAO,SAAS,QAAQ,CAAC,YAAY;AAAA;AAGvC,IAAI,8BAEJ,WAAY;AACV,wCAAqC,YAAY,SAAS;AACxD,SAAK,QAAQ,YAAY,YAAY;AAAA;AAGvC,+BAA4B,UAAU,WAAW,WAAY;AAC3D,WAAO,KAAK,MAAM;AAAA;AAGpB,SAAO;AAAA;AAIF,oCAAoC,YAAY,SAAS;AAC9D,SAAO,IAAI,4BAA4B,YAAY;AAAA;;;AC1R9C,IAAI,kBAAkB;AAAA,EAC3B,MAAM;AAAA,EAEN,WAAW,SAAU,QAAQ;AAK3B,QAAI,WAAW,OAAO;AACtB,QAAI;AACJ,QAAI,YAAY,2BAA2B,OAAO,QAAQ;AAAA,MACxD,oBAAoB,cAAc;AAAA,QAChC,WAAW;AAAA;AAAA,MAEb,iBAAiB,SAAU,YAAY;AACrC,YAAI,SAAS;AACb,YAAI,WAAW,WAAW;AAE1B,YAAI,CAAC,OAAO,YAAY,cAAc;AACpC,cAAI,MAAuC;AACzC,qBAAS,cAAc,2DAA2D,sBAAsB;AAAA;AAG1G,qBAAW;AAAA;AAGb,YAAI,UAAU,SAAS,iBAAiB;AAExC,YAAI,CAAC,SAAS;AACZ,cAAI,MAAuC;AACzC,qBAAS,cAAc,sCAAsC,WAAW,OAAO,yBAAyB,SAAS,yBAAyB,OAAO,sBAAsB,YAAY;AAAA;AAGrL,qBAAW;AAAA;AAGb,eAAO;AAAA,UACL,QAAQ,QAAQ;AAAA;AAAA;AAAA,MAGpB,UAAU,SAAU,OAAO;AACzB,eAAO,SAAS,sBAAsB,SAAS,MAAM;AAAA;AAAA;AAGzD,QAAI,aAAa;AAEjB,aAAS,IAAI,GAAG,OAAM,SAAS,SAAS,IAAI,MAAK,KAAK;AACpD,gBAAU,SAAS,eAAe;AAElC,UAAI,UAAU,YAAY;AACxB,mBAAW,KAAK;AAAA;AAAA;AAIpB,WAAO;AAAA,MACL,MAAM;AAAA;AAAA;AAAA;;;ACrDZ,IAAI,YAAY;AAEhB,IAAI,MAAuC;AACzC,cAAY,CAAC,yBAAyB,sCAAsC,gFAAgF,KAAK;AAAA;AAG5J,IAAI,gBAAgB;AAAA,EACzB,MAAM;AAAA,EACN,WAAW,SAAU,QAAQ;AAC3B,QAAI,WAAW,OAAO;AACtB,QAAI,SAAS,OAAO;AACpB,QAAI,SAAS;AAKb,QAAI,gBAAgB,iBAAiB;AAErC,QAAI,CAAC,cAAc,QAAQ;AACzB,UAAI,MAAuC;AACzC,iBAAS;AAAA;AAGX,iBAAW;AAAA;AAGb,QAAI,eAAe;AACnB,SAAK,eAAe,SAAU,WAAW;AACvC,UAAI,WAAW,UAAU;AACzB,UAAI,QAAQ,UAAU;AACtB,UAAI,aAAa,UAAU;AAC3B,UAAI,eAAe,UAAU;AAE7B,UAAI,YAAY,MAAM;AACpB,YAAI,MAAuC;AACzC,mBAAS,0DAA0D;AAAA;AAGrE,mBAAW;AAAA;AAGb,UAAI,UAAU,SAAS,UAAU,QAAQ;AACvC,YAAI,MAAuC;AACzC,mBAAS,sDAAsD;AAAA;AAGjE,mBAAW;AAAA;AAGb,UAAI,gBAAgB,iBAAiB,SAAS,iBAAiB,OAAO;AACpE,YAAI,WAAW;AAEf,YAAI,MAAuC;AACzC,qBAAW,sDAAsD,eAAe;AAAA;AAGlF,mBAAW;AAAA;AAGb,UAAI,UAAU,SAAS,UAAU,QAAQ;AACvC,YAAI,WAAW;AAEf,YAAI,MAAuC;AACzC,qBAAW,gDAAgD,QAAQ;AAAA;AAGrE,mBAAW;AAAA;AAGb,UAAI,UAAU,SAAS,iBAAiB;AAExC,UAAI,CAAC,SAAS;AACZ,YAAI,MAAuC;AACzC,mBAAS,cAAc,sCAAsC,WAAW,OAAO,yBAAyB,SAAS,yBAAyB,OAAO,mBAAmB,WAAW;AAAA;AAGjL,mBAAW;AAAA;AAGb,UAAI,SAAS,aAAa,kBAAkB,cAAc;AAE1D,UAAI,cAAc,CAAC,QAAQ;AACzB,YAAI,MAAuC;AACzC,mBAAS,cAAc,yBAAyB,aAAa,OAAO,mBAAmB,WAAW;AAAA;AAGpG,mBAAW;AAAA;AAGb,mBAAa,KAAK;AAAA,QAChB,QAAQ,QAAQ;AAAA,QAChB;AAAA,QACA,YAAY,IAAI,oBAAoB,OAAO;AAAA;AAAA;AAI/C,QAAI,eAAe,SAAS;AAE5B,QAAI,iBAAiB,4BAA4B,iBAAiB,2BAA2B;AAC3F,UAAI,MAAuC;AACzC,iBAAS,mBAAmB,eAAe;AAAA;AAG7C,iBAAW;AAAA;AAIb,QAAI,aAAa;AAEjB,aAAS,IAAI,GAAG,OAAM,SAAS,SAAS,IAAI,MAAK,KAAK;AACpD,iBAAW,KAAK,SAAS,eAAe;AAAA;AAG1C,eAAW,KAAK,SAAU,OAAO,OAAO;AACtC,eAAS,KAAI,GAAG,KAAI,aAAa,QAAQ,MAAK;AAC5C,YAAI,WAAW,aAAa;AAC5B,YAAI,OAAO,SAAS,sBAAsB,OAAO,SAAS;AAC1D,YAAI,OAAO,SAAS,sBAAsB,OAAO,SAAS;AAE1D,YAAI,SAAS,QAAQ;AACnB,iBAAO,SAAS,OAAO;AACvB,iBAAO,SAAS,OAAO;AAAA;AAGzB,YAAI,SAAS,SAAS,WAAW,SAAS,MAAM;AAEhD,YAAI,WAAW,GAAG;AAChB,iBAAO;AAAA;AAAA;AAIX,aAAO;AAAA;AAET,WAAO;AAAA,MACL,MAAM;AAAA;AAAA;AAAA;;;ACzIL,mBAAiB,WAAW;AACjC,YAAU,kBAAkB;AAC5B,YAAU,kBAAkB;AAAA;;;AC7C9B,IAAI,MAAM,kBAAU;AACpB,qBAAqB,GAAG,GAAG;AACvB,SAAO,KAAK,IAAI,IAAI,KAAK;AAAA;AAEtB,4BAA4B,MAAM;AACrC,MAAI,OAAO,KAAK;AAChB,MAAI,OAAM,KAAK;AACf,MAAI,oBAAoB;AACxB,MAAI;AACJ,MAAI,KAAK;AACT,MAAI,KAAK;AACT,MAAI,KAAK;AACT,MAAI,KAAK;AACT,4BAA0B,GAAG,GAAG;AAC5B,QAAI,kBAAkB,eAAe,SAAS,GAAG;AAC7C,wBAAkB,KAAK;AAAA;AAE3B,qBAAiB,CAAC,GAAG;AAAA;AAEzB,mBAAiB,KAAI,KAAI,KAAI,KAAI;AAC7B,QAAI,CAAE,aAAY,KAAI,QAAO,YAAY,KAAI,OAAM;AAC/C,qBAAe,KAAK,KAAI,KAAI,KAAI,KAAI,KAAI;AAAA;AAAA;AAGhD,kBAAgB,aAAY,WAAU,KAAI,KAAI,KAAI,KAAI;AAClD,QAAI,QAAQ,KAAK,IAAI,YAAW;AAChC,QAAI,OAAM,KAAK,IAAI,QAAQ,KAAK,IAAI;AACpC,QAAI,MAAM,YAAW,cAAa,KAAK;AACvC,QAAI,KAAK,KAAK,IAAI;AAClB,QAAI,KAAK,KAAK,IAAI;AAClB,QAAI,KAAK,KAAK,IAAI;AAClB,QAAI,KAAK,KAAK,IAAI;AAClB,QAAI,MAAK,KAAK,MAAK;AACnB,QAAI,MAAK,KAAK,MAAK;AACnB,QAAI,KAAK,KAAK,MAAK;AACnB,QAAI,KAAK,KAAK,MAAK;AACnB,QAAI,KAAK,MAAK,OAAM;AACpB,QAAI,KAAK,MAAK,OAAM;AACpB,mBAAe,KAAK,MAAK,KAAK,IAAI,MAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI;AAAA;AAEpF,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,WAAS,IAAI,GAAG,IAAI,QAAM;AACtB,QAAI,MAAM,KAAK;AACf,QAAI,UAAU,MAAM;AACpB,QAAI,SAAS;AACT,WAAK,KAAK;AACV,WAAK,KAAK,IAAI;AACd,WAAK;AACL,WAAK;AACL,UAAI,QAAQ,IAAI,KAAK,QAAQ,IAAI,KAAK,QAAQ,IAAI,GAAG;AACjD,yBAAiB,CAAC,IAAI;AAAA;AAAA;AAG9B,YAAQ;AAAA,WACC,IAAI;AACL,aAAK,KAAK,KAAK;AACf,aAAK,KAAK,KAAK;AACf,yBAAiB,IAAI;AACrB;AAAA,WACC,IAAI;AACL,aAAK,KAAK;AACV,aAAK,KAAK;AACV,gBAAQ,IAAI,IAAI,IAAI;AACpB,aAAK;AACL,aAAK;AACL;AAAA,WACC,IAAI;AACL,uBAAe,KAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,KAAK,MAAM,KAAK,KAAK;AAC1F;AAAA,WACC,IAAI;AACL,aAAK,KAAK;AACV,aAAK,KAAK;AACV,aAAK,KAAK;AACV,aAAK,KAAK;AACV,uBAAe,KAAK,KAAK,IAAI,IAAK,MAAK,KAAK,KAAK,IAAI,IAAK,MAAK,KAAK,KAAK,IAAI,IAAK,MAAK,KAAK,KAAK,IAAI,IAAK,MAAK,KAAK,IAAI;AACxH,aAAK;AACL,aAAK;AACL;AAAA,WACC,IAAI;AACL,YAAI,KAAK,KAAK;AACd,YAAI,KAAK,KAAK;AACd,YAAI,KAAK,KAAK;AACd,YAAI,KAAK,KAAK;AACd,YAAI,aAAa,KAAK;AACtB,YAAI,WAAW,KAAK,OAAO;AAC3B,aAAK;AACL,YAAI,gBAAgB,CAAC,KAAK;AAC1B,aAAK,KAAK,IAAI,cAAc,KAAK;AACjC,aAAK,KAAK,IAAI,cAAc,KAAK;AACjC,YAAI,SAAS;AACT,eAAK;AACL,eAAK;AACL,2BAAiB,IAAI;AAAA,eAEpB;AACD,kBAAQ,IAAI,IAAI,IAAI;AAAA;AAExB,aAAK,KAAK,IAAI,YAAY,KAAK;AAC/B,aAAK,KAAK,IAAI,YAAY,KAAK;AAC/B,YAAI,OAAQ,iBAAgB,KAAK,KAAK,KAAK,KAAK;AAChD,iBAAS,QAAQ,YAAY,gBAAgB,QAAQ,WAAW,QAAQ,UAAU,SAAS,MAAM;AAC7F,cAAI,YAAY,gBAAgB,KAAK,IAAI,QAAQ,MAAM,YACjD,KAAK,IAAI,QAAQ,MAAM;AAC7B,iBAAO,OAAO,WAAW,IAAI,IAAI,IAAI;AAAA;AAEzC;AAAA,WACC,IAAI;AACL,aAAK,KAAK,KAAK;AACf,aAAK,KAAK,KAAK;AACf,aAAK,KAAK,KAAK;AACf,aAAK,KAAK,KAAK;AACf,yBAAiB,IAAI;AACrB,gBAAQ,IAAI,IAAI,IAAI;AACpB,gBAAQ,IAAI,IAAI,IAAI;AACpB,gBAAQ,IAAI,IAAI,IAAI;AACpB,gBAAQ,IAAI,IAAI,IAAI;AACpB;AAAA,WACC,IAAI;AACL,0BAAkB,QAAQ,IAAI,IAAI,IAAI;AACtC,aAAK;AACL,aAAK;AACL;AAAA;AAAA;AAGZ,MAAI,kBAAkB,eAAe,SAAS,GAAG;AAC7C,sBAAkB,KAAK;AAAA;AAE3B,SAAO;AAAA;AAEX,wBAAwB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,QAAO;AAChE,MAAI,YAAY,IAAI,OAAO,YAAY,IAAI,OAAO,YAAY,IAAI,OAAO,YAAY,IAAI,KAAK;AAC1F,QAAI,KAAK,IAAI;AACb;AAAA;AAEJ,MAAI,iBAAiB,IAAI;AACzB,MAAI,qBAAqB,iBAAiB;AAC1C,MAAI,KAAK,KAAK;AACd,MAAI,KAAK,KAAK;AACd,MAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK;AACjC,QAAM;AACN,QAAM;AACN,MAAI,MAAM,KAAK;AACf,MAAI,MAAM,KAAK;AACf,MAAI,MAAM,KAAK;AACf,MAAI,MAAM,KAAK;AACf,MAAI,YAAY,MAAM,MAAM,MAAM;AAClC,MAAI,YAAY,MAAM,MAAM,MAAM;AAClC,MAAI,YAAY,sBAAsB,YAAY,oBAAoB;AAClE,QAAI,KAAK,IAAI;AACb;AAAA;AAEJ,MAAI,WAAW,KAAK,MAAM,KAAK;AAC/B,MAAI,WAAW,CAAC,KAAK,MAAM,KAAK;AAChC,MAAI,QAAQ,YAAY,WAAW;AACnC,MAAI,QAAQ,YAAY,WAAW;AACnC,MAAI,QAAQ,sBAAsB,YAAY,KACvC,QAAQ,sBAAsB,YAAY,GAAG;AAChD,QAAI,KAAK,IAAI;AACb;AAAA;AAEJ,MAAI,UAAU;AACd,MAAI,UAAU;AACd,iBAAe,IAAI,IAAI,IAAI,IAAI,KAAK;AACpC,iBAAe,IAAI,IAAI,IAAI,IAAI,KAAK;AACpC,iBAAe,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,KAAK;AACpH,iBAAe,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,KAAK;AAAA;AAEjH,wBAAwB,MAAM,QAAO;AACxC,MAAI,oBAAoB,mBAAmB;AAC3C,MAAI,WAAW;AACf,WAAQ,UAAS;AACjB,WAAS,IAAI,GAAG,IAAI,kBAAkB,QAAQ,KAAK;AAC/C,QAAI,UAAU,kBAAkB;AAChC,QAAI,UAAU;AACd,QAAI,KAAK,QAAQ;AACjB,QAAI,KAAK,QAAQ;AACjB,YAAQ,KAAK,IAAI;AACjB,aAAS,IAAI,GAAG,IAAI,QAAQ,UAAS;AACjC,UAAI,KAAK,QAAQ;AACjB,UAAI,KAAK,QAAQ;AACjB,UAAI,KAAK,QAAQ;AACjB,UAAI,KAAK,QAAQ;AACjB,UAAI,KAAK,QAAQ;AACjB,UAAI,KAAK,QAAQ;AACjB,qBAAe,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,SAAS;AACxD,WAAK;AACL,WAAK;AAAA;AAET,aAAS,KAAK;AAAA;AAElB,SAAO;AAAA;;;AC1LX,0BAA0B,SAAS,QAAQ,QAAO;AAC9C,MAAI,UAAU,QAAQ;AACtB,MAAI,aAAa,QAAQ,IAAI;AAC7B,MAAI,QAAQ,KAAK,IAAI,UAAU;AAC/B,MAAI,WAAW,KAAK,KAAK,KAAK,KAAK,QAAQ;AAC3C,MAAI,cAAc,KAAK,MAAM,SAAQ;AACrC,MAAI,gBAAgB,GAAG;AACnB,kBAAc;AACd,eAAW;AAAA;AAEf,MAAI,QAAQ;AACZ,WAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AAC/B,UAAM,KAAK;AAAA;AAEf,MAAI,eAAe,WAAW;AAC9B,MAAI,WAAW,SAAQ;AACvB,MAAI,WAAW,GAAG;AACd,aAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AAC/B,YAAM,IAAI,aAAa;AAAA;AAAA;AAG/B,SAAO;AAAA;AAEX,sBAAsB,aAAa,QAAO,WAAW;AACjD,MAAI,KAAK,YAAY;AACrB,MAAI,IAAI,YAAY;AACpB,MAAI,aAAa,YAAY;AAC7B,MAAI,WAAW,YAAY;AAC3B,MAAI,QAAQ,KAAK,IAAI,WAAW;AAChC,MAAI,SAAS,QAAQ;AACrB,MAAI,SAAS,IAAI;AACjB,MAAI,aAAa,SAAS,KAAK,IAAI;AACnC,MAAI,QAAQ,iBAAiB,CAAC,QAAQ,SAAS,aAAa,IAAI,GAAG;AACnE,MAAI,UAAW,cAAa,QAAQ,UAAU,MAAM;AACpD,WAAS,MAAM,GAAG,MAAM,MAAM,QAAQ,OAAO;AACzC,QAAI,aAAc,cAAa,SAAS,SAAS,MAAM;AACvD,aAAS,SAAS,GAAG,SAAS,MAAM,MAAM,UAAU;AAChD,UAAI,WAAW;AACf,UAAI,YAAY;AACZ,iBAAS,aAAa,aAAa,UAAU;AAC7C,iBAAS,WAAW,aAAa,UAAW,OAAM;AAClD,iBAAS,KAAK,KAAK,aAAa;AAChC,iBAAS,IAAI,KAAK,aAAc,UAAS;AAAA,aAExC;AACD,iBAAS,aAAa,aAAa,aAAa;AAChD,iBAAS,WAAW,aAAa,aAAc,UAAS;AACxD,iBAAS,KAAK,KAAK,UAAU;AAC7B,iBAAS,IAAI,KAAK,UAAW,OAAM;AAAA;AAEvC,eAAS,YAAY,YAAY;AACjC,eAAS,KAAK,YAAY;AAC1B,eAAS,KAAK,YAAY;AAC1B,gBAAU,KAAK;AAAA;AAAA;AAAA;AAI3B,oBAAoB,WAAW,QAAO,WAAW;AAC7C,MAAI,QAAQ,UAAU;AACtB,MAAI,SAAS,UAAU;AACvB,MAAI,kBAAkB,QAAQ;AAC9B,MAAI,QAAQ,iBAAiB,CAAC,OAAO,SAAS,kBAAkB,IAAI,GAAG;AACvE,MAAI,aAAa,kBAAkB,UAAU;AAC7C,MAAI,gBAAgB,kBAAkB,WAAW;AACjD,MAAI,SAAS,kBAAkB,MAAM;AACrC,MAAI,YAAY,kBAAkB,MAAM;AACxC,MAAI,UAAU,UAAU,cAAc,MAAM;AAC5C,WAAS,MAAM,GAAG,MAAM,MAAM,QAAQ,OAAO;AACzC,QAAI,aAAa,UAAU,iBAAiB,MAAM;AAClD,aAAS,SAAS,GAAG,SAAS,MAAM,MAAM,UAAU;AAChD,UAAI,WAAW;AACf,eAAS,UAAU,MAAM;AACzB,eAAS,aAAa,SAAS;AAC/B,eAAS,cAAc;AACvB,eAAS,iBAAiB;AAC1B,eAAS,KAAK,UAAU;AACxB,eAAS,KAAK,UAAU;AACxB,gBAAU,KAAK;AAAA;AAAA;AAAA;AAI3B,wBAAwB,IAAI,IAAI,IAAI,IAAI;AACpC,SAAO,KAAK,KAAK,KAAK;AAAA;AAE1B,2BAA2B,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAC/D,MAAI,KAAK,MAAM;AACf,MAAI,KAAK,MAAM;AACf,MAAI,KAAK,MAAM;AACf,MAAI,KAAK,MAAM;AACf,MAAI,iBAAiB,eAAe,IAAI,IAAI,IAAI;AAChD,MAAI,KAAK,IAAI,kBAAkB,MAAM;AACjC,WAAO;AAAA;AAEX,MAAI,QAAQ,MAAM;AAClB,MAAI,QAAQ,MAAM;AAClB,MAAI,IAAI,eAAe,OAAO,OAAO,IAAI,MAAM;AAC/C,MAAI,IAAI,KAAK,IAAI,GAAG;AAChB,WAAO;AAAA;AAEX,SAAO,IAAI,cAAM,IAAI,KAAK,KAAK,IAAI,KAAK;AAAA;AAE5C,sBAAsB,IAAI,OAAO,OAAO;AACpC,MAAI,MAAM,IAAI;AACd,gBAAM,IAAI,KAAK,OAAO;AACtB,MAAI;AACJ,MAAI,OAAO,IAAI;AACf,gBAAM,IAAI,MAAM,IAAI;AACpB,MAAI,OAAM,KAAK,IAAI;AACnB,SAAO;AAAA;AAEX,mBAAmB,MAAM,IAAI;AACzB,MAAI,OAAO,KAAK,KAAK,SAAS;AAC9B,MAAI,QAAQ,KAAK,OAAO,GAAG,MAAM,KAAK,OAAO,GAAG,IAAI;AAChD;AAAA;AAEJ,OAAK,KAAK;AAAA;AAEd,4BAA4B,QAAQ,OAAO,OAAO;AAC9C,MAAI,OAAM,OAAO;AACjB,MAAI,gBAAgB;AACpB,WAAS,IAAI,GAAG,IAAI,MAAK,KAAK;AAC1B,QAAI,KAAK,OAAO;AAChB,QAAI,KAAK,OAAQ,KAAI,KAAK;AAC1B,QAAI,iBAAiB,kBAAkB,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM;AACpG,QAAI,gBAAgB;AAChB,oBAAc,KAAK;AAAA,QACf,QAAQ,aAAa,gBAAgB,OAAO;AAAA,QAC5C,IAAI;AAAA,QACJ,KAAK;AAAA;AAAA;AAAA;AAIjB,MAAI,cAAc,SAAS,GAAG;AAC1B,WAAO,CAAC,EAAE,UAAkB,EAAE;AAAA;AAElC,gBAAc,KAAK,SAAU,GAAG,GAAG;AAC/B,WAAO,EAAE,SAAS,EAAE;AAAA;AAExB,MAAI,WAAW,cAAc;AAC7B,MAAI,WAAW,cAAc,cAAc,SAAS;AACpD,MAAI,SAAS,MAAM,SAAS,KAAK;AAC7B,QAAI,MAAM;AACV,eAAW;AACX,eAAW;AAAA;AAEf,MAAI,cAAc,CAAC,SAAS,GAAG,GAAG,SAAS,GAAG;AAC9C,MAAI,cAAc,CAAC,SAAS,GAAG,GAAG,SAAS,GAAG;AAC9C,MAAI,WAAW,CAAC;AAChB,MAAI,WAAW,CAAC;AAChB,WAAS,IAAI,SAAS,MAAM,GAAG,KAAK,SAAS,KAAK,KAAK;AACnD,cAAU,UAAU,OAAO,GAAG;AAAA;AAElC,YAAU,UAAU;AACpB,YAAU,UAAU;AACpB,WAAS,IAAI,SAAS,MAAM,GAAG,KAAK,SAAS,MAAM,MAAK,KAAK;AACzD,cAAU,UAAU,OAAO,IAAI,MAAK;AAAA;AAExC,YAAU,UAAU;AACpB,YAAU,UAAU;AACpB,SAAO,CAAC;AAAA,IACA,QAAQ;AAAA,KACT;AAAA,IACC,QAAQ;AAAA;AAAA;AAGpB,6BAA6B,cAAc;AACvC,MAAI,SAAS,aAAa;AAC1B,MAAI,MAAM;AACV,MAAI,MAAM;AACV,aAAW,QAAQ,KAAK;AACxB,MAAI,eAAe,IAAI,qBAAa,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI;AAClF,MAAI,QAAQ,aAAa;AACzB,MAAI,SAAS,aAAa;AAC1B,MAAI,IAAI,aAAa;AACrB,MAAI,IAAI,aAAa;AACrB,MAAI,MAAM,IAAI;AACd,MAAI,MAAM,IAAI;AACd,MAAI,QAAQ,QAAQ;AAChB,QAAI,IAAI,IAAI,IAAI,IAAI,QAAQ;AAC5B,QAAI,IAAI;AACR,QAAI,IAAI,IAAI;AAAA,SAEX;AACD,QAAI,IAAI,IAAI,IAAI,IAAI,SAAS;AAC7B,QAAI,IAAI;AACR,QAAI,IAAI,IAAI;AAAA;AAEhB,SAAO,mBAAmB,QAAQ,KAAK;AAAA;AAE3C,+BAA+B,SAAS,OAAO,QAAO,KAAK;AACvD,MAAI,WAAU,GAAG;AACb,QAAI,KAAK;AAAA,SAER;AACD,QAAI,MAAM,KAAK,MAAM,SAAQ;AAC7B,QAAI,OAAM,QAAQ;AAClB,0BAAsB,SAAS,KAAI,IAAI,KAAK;AAC5C,0BAAsB,SAAS,KAAI,IAAI,SAAQ,KAAK;AAAA;AAExD,SAAO;AAAA;AAEJ,gBAAe,MAAM,QAAO;AAC/B,MAAI,QAAQ;AACZ,WAAS,IAAI,GAAG,IAAI,QAAO,KAAK;AAC5B,UAAM,KAAK,UAAU;AAAA;AAEzB,SAAO;AAAA;AAEX,uBAAuB,QAAQ,QAAQ;AACnC,SAAO,SAAS,OAAO;AACvB,SAAO,IAAI,OAAO;AAClB,SAAO,KAAK,OAAO;AACnB,SAAO,SAAS,OAAO;AAAA;AAE3B,wBAAwB,QAAQ;AAC5B,MAAI,MAAM;AACV,WAAS,IAAI,GAAG,IAAI,OAAO,UAAS;AAChC,QAAI,KAAK,CAAC,OAAO,MAAM,OAAO;AAAA;AAElC,SAAO;AAAA;AAEJ,eAAe,MAAM,QAAO;AAC/B,MAAI,YAAY;AAChB,MAAI,QAAQ,KAAK;AACjB,MAAI;AACJ,UAAQ,KAAK;AAAA,SACJ;AACD,iBAAW,OAAO,QAAO;AACzB,qBAAe;AACf;AAAA,SACC;AACD,mBAAa,OAAO,QAAO;AAC3B,qBAAe;AACf;AAAA,SACC;AACD,mBAAa;AAAA,QACT,IAAI;AAAA,QAAG,GAAG,MAAM;AAAA,QAAG,YAAY;AAAA,QAAG,UAAU,KAAK,KAAK;AAAA,QACtD,IAAI,MAAM;AAAA,QAAI,IAAI,MAAM;AAAA,SACzB,QAAO;AACV,qBAAe;AACf;AAAA;AAEA,UAAI,IAAI,KAAK;AACb,UAAI,SAAQ,IAAI,KAAK,KAAK,KAAK,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO;AAC5F,UAAI,WAAW,IAAI,eAAe,KAAK,uBAAuB,SAAQ,SAAU,MAAM;AAAE,eAAO,eAAe;AAAA;AAC9G,UAAI,eAAe,SAAS;AAC5B,UAAI,iBAAiB,GAAG;AACpB,8BAAsB,qBAAqB;AAAA,UACvC,QAAQ,SAAS;AAAA,WAClB,QAAO;AAAA,iBAEL,iBAAiB,QAAO;AAC7B,iBAAS,IAAI,GAAG,IAAI,cAAc,KAAK;AACnC,oBAAU,KAAK;AAAA,YACX,QAAQ,SAAS;AAAA;AAAA;AAAA,aAIxB;AACD,YAAI,cAAc;AAClB,YAAI,QAAQ,IAAI,UAAU,SAAU,MAAM;AACtC,cAAI,MAAM;AACV,cAAI,MAAM;AACV,qBAAW,MAAM,KAAK;AACtB,cAAI,OAAQ,KAAI,KAAK,IAAI,MAAO,KAAI,KAAK,IAAI;AAC7C,yBAAe;AACf,iBAAO,EAAE,MAAY;AAAA;AAEzB,cAAM,KAAK,SAAU,GAAG,GAAG;AAAE,iBAAO,EAAE,OAAO,EAAE;AAAA;AAC/C,YAAI,OAAO;AACX,iBAAS,IAAI,GAAG,IAAI,cAAc,KAAK;AACnC,cAAI,OAAO,MAAM;AACjB,cAAI,QAAQ,GAAG;AACX;AAAA;AAEJ,cAAI,YAAY,MAAM,eAAe,IAC/B,OACA,KAAK,KAAK,KAAK,OAAO,cAAc;AAC1C,cAAI,YAAY,GAAG;AACf;AAAA;AAEJ,gCAAsB,qBAAqB;AAAA,YACvC,QAAQ,KAAK;AAAA,aACd,WAAW;AACd,kBAAQ;AAAA;AAEZ;AAAA;AAEJ,qBAAe;AACf;AAAA;AAER,MAAI,CAAC,cAAc;AACf,WAAO,OAAM,MAAM;AAAA;AAEvB,MAAI,MAAM;AACV,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACvC,QAAI,UAAU,IAAI;AAClB,YAAQ,SAAS,UAAU;AAC3B,kBAAc,MAAM;AACpB,QAAI,KAAK;AAAA;AAEb,SAAO;AAAA;;;AC9SX,sBAAsB,UAAU,UAAU;AACtC,MAAI,OAAO,SAAS;AACpB,MAAI,OAAO,SAAS;AACpB,MAAI,SAAS,MAAM;AACf,WAAO,CAAC,UAAU;AAAA;AAEtB,MAAI,UAAU;AACd,MAAI,UAAU;AACd,MAAI,cAAc,OAAO,OAAO,WAAW;AAC3C,MAAI,aAAa,KAAK,IAAI,MAAM;AAChC,MAAI,QAAO,KAAK,IAAI,OAAO,QAAQ;AACnC,MAAI,qBAAsB,cAAa,KAAK;AAC5C,MAAI,uBAAuB,KAAK,KAAK,QAAO,sBAAsB;AAClE,MAAI,aAAa,CAAC,YAAY,IAAI,YAAY;AAC9C,MAAI,WAAW;AACf,WAAS,IAAI,GAAG,IAAI,cAAa;AAC7B,QAAI,KAAK,YAAY,IAAI;AACzB,QAAI,KAAK,YAAY,IAAI;AACzB,QAAI,KAAK,YAAY;AACrB,QAAI,KAAK,YAAY;AACrB,QAAI,KAAK,YAAY;AACrB,QAAI,KAAK,YAAY;AACrB,QAAI,KAAK,YAAY;AACrB,QAAI,KAAK,YAAY;AACrB,QAAI,YAAY,GAAG;AACf,iBAAW,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI;AACpC;AAAA;AAEJ,QAAI,oBAAoB,KAAK,IAAI,UAAU,uBAAuB,KAAK;AACvE,aAAS,IAAI,GAAG,KAAK,mBAAmB,KAAK;AACzC,UAAI,IAAI,IAAI;AACZ,qBAAe,IAAI,IAAI,IAAI,IAAI,GAAG;AAClC,qBAAe,IAAI,IAAI,IAAI,IAAI,GAAG;AAClC,WAAK,QAAQ;AACb,WAAK,QAAQ;AACb,iBAAW,KAAK,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,IAAI;AACpE,WAAK,QAAQ;AACb,WAAK,QAAQ;AACb,WAAK,QAAQ;AACb,WAAK,QAAQ;AAAA;AAEjB,gBAAY,oBAAoB;AAAA;AAEpC,SAAO,gBAAgB,WAAW,CAAC,YAAY,YAAY,CAAC,UAAU;AAAA;AAE1E,uBAAuB,oBAAoB,cAAc;AACrD,MAAI,OAAM,mBAAmB;AAC7B,MAAI,QAAQ,mBAAmB,OAAM;AACrC,MAAI,QAAQ,mBAAmB,OAAM;AACrC,MAAI,aAAa;AACjB,WAAS,IAAI,GAAG,IAAI,aAAa,UAAS;AACtC,eAAW,OAAO;AAClB,eAAW,OAAO;AAAA;AAEtB,SAAO;AAAA;AAEJ,2BAA2B,QAAQ,QAAQ;AAC9C,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,YAAY;AAChB,MAAI,YAAY;AAChB,WAAS,IAAI,GAAG,IAAI,KAAK,IAAI,OAAO,QAAQ,OAAO,SAAS,KAAK;AAC7D,QAAI,WAAW,OAAO;AACtB,QAAI,WAAW,OAAO;AACtB,QAAI,cAAc;AAClB,QAAI,cAAc;AAClB,QAAI,CAAC,UAAU;AACX,oBAAc,cAAc,gBAAgB,UAAU;AACtD,oBAAc;AAAA,eAET,CAAC,UAAU;AAChB,oBAAc,cAAc,gBAAgB,UAAU;AACtD,oBAAc;AAAA,WAEb;AACD,WAAK,aAAa,UAAU,WAAW,cAAc,GAAG,IAAI,cAAc,GAAG;AAC7E,qBAAe;AACf,qBAAe;AAAA;AAEnB,cAAU,KAAK;AACf,cAAU,KAAK;AAAA;AAEnB,SAAO,CAAC,WAAW;AAAA;AAEhB,kBAAkB,OAAO;AAC5B,MAAI,aAAa;AACjB,MAAI,KAAK;AACT,MAAI,KAAK;AACT,MAAI,OAAM,MAAM;AAChB,WAAS,IAAI,GAAG,IAAI,OAAM,GAAG,IAAI,MAAK,IAAI,GAAG,KAAK,GAAG;AACjD,QAAI,KAAK,MAAM;AACf,QAAI,KAAK,MAAM,IAAI;AACnB,QAAI,KAAK,MAAM;AACf,QAAI,KAAK,MAAM,IAAI;AACnB,QAAI,IAAI,KAAK,KAAK,KAAK;AACvB,kBAAc;AACd,UAAO,MAAK,MAAM;AAClB,UAAO,MAAK,MAAM;AAAA;AAEtB,MAAI,eAAe,GAAG;AAClB,WAAO,CAAC,MAAM,MAAM,GAAG,MAAM,MAAM;AAAA;AAEvC,SAAO,CAAC,KAAK,aAAa,GAAG,KAAK,aAAa,GAAG;AAAA;AAEtD,4BAA4B,gBAAgB,cAAc,QAAQ,MAAM;AACpE,MAAI,cAAe,gBAAe,SAAS,KAAK;AAChD,MAAI,YAAY;AAChB,MAAI,aAAa;AACjB,MAAI,OAAM,eAAe;AACzB,MAAI,QAAO,OAAM;AACjB,WAAS,SAAS,GAAG,SAAS,aAAa,UAAU;AACjD,QAAI,eAAe,SAAS;AAC5B,QAAI,QAAQ;AACZ,aAAS,IAAI,GAAG,IAAI,MAAK,KAAK,GAAG;AAC7B,UAAI,MAAM,MAAM,IAAI,eAAiB,gBAAe,IAAI,KAAK,QAAO;AACpE,UAAI,KAAK,eAAe,OAAO,OAAO;AACtC,UAAI,KAAK,eAAe,MAAM,KAAK,OAAO;AAC1C,UAAI,KAAK,aAAa,KAAK,KAAK;AAChC,UAAI,KAAK,aAAa,IAAI,KAAK,KAAK;AACpC,UAAI,KAAK,KAAK;AACd,UAAI,KAAK,KAAK;AACd,eAAS,KAAK,KAAK,KAAK;AAAA;AAE5B,QAAI,QAAQ,WAAW;AACnB,kBAAY;AACZ,mBAAa;AAAA;AAAA;AAGrB,SAAO;AAAA;AAEX,iBAAiB,OAAO;AACpB,MAAI,SAAS;AACb,MAAI,OAAM,MAAM;AAChB,WAAS,IAAI,GAAG,IAAI,MAAK,KAAK,GAAG;AAC7B,WAAO,KAAK,MAAM,OAAM,IAAI;AAC5B,WAAO,IAAI,KAAK,MAAM,OAAM,IAAI;AAAA;AAEpC,SAAO;AAAA;AAEX,kCAAkC,SAAS,OAAO,sBAAsB,kBAAkB;AACtF,MAAI,SAAS;AACb,MAAI;AACJ,WAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,QAAI,oBAAoB,QAAQ;AAChC,QAAI,kBAAkB,MAAM;AAC5B,QAAI,SAAS,SAAS;AACtB,QAAI,OAAO,SAAS;AACpB,QAAI,oBAAoB,MAAM;AAC1B,yBAAmB,OAAO,KAAK,MAAM,KAAK,KAAK;AAAA;AAEnD,QAAI,uBAAuB;AAC3B,QAAI,qBAAqB;AACzB,QAAI,YAAY;AAChB,QAAI,YAAY;AAChB,QAAI,SAAS;AACb,QAAI,OAAM,kBAAkB;AAC5B,QAAI,kBAAkB;AAClB,0BAAoB,QAAQ;AAAA;AAEhC,QAAI,SAAS,mBAAmB,mBAAmB,iBAAiB,QAAQ,QAAQ;AACpF,QAAI,QAAO,OAAM;AACjB,aAAS,IAAI,GAAG,IAAI,OAAM,KAAK,GAAG;AAC9B,UAAI,MAAO,UAAS,KAAK,QAAO;AAChC,2BAAqB,IAAI,KAAK,kBAAkB,OAAO,OAAO;AAC9D,2BAAqB,IAAI,KAAK,kBAAkB,MAAM,KAAK,OAAO;AAAA;AAEtE,yBAAqB,KAAK,kBAAkB,UAAU,OAAO;AAC7D,yBAAqB,KAAK,kBAAkB,SAAS,KAAK,OAAO;AACjE,QAAI,uBAAuB,GAAG;AAC1B,UAAI,OAAO,mBAAmB;AAC9B,eAAS,QAAQ,CAAC,mBAAmB,GAAG,SAAS,mBAAmB,GAAG,SAAS,MAAM;AAClF,YAAI,KAAK,KAAK,IAAI;AAClB,YAAI,KAAK,KAAK,IAAI;AAClB,YAAI,QAAQ;AACZ,iBAAS,IAAI,GAAG,IAAI,kBAAkB,QAAQ,KAAK,GAAG;AAClD,cAAI,KAAK,qBAAqB;AAC9B,cAAI,KAAK,qBAAqB,IAAI;AAClC,cAAI,KAAK,gBAAgB,KAAK,KAAK;AACnC,cAAI,KAAK,gBAAgB,IAAI,KAAK,KAAK;AACvC,cAAI,QAAQ,KAAK,KAAK,KAAK;AAC3B,cAAI,QAAQ,KAAK,KAAK,KAAK;AAC3B,iBAAO,KAAK;AACZ,iBAAO,IAAI,KAAK;AAChB,cAAI,KAAK,QAAQ;AACjB,cAAI,KAAK,QAAQ;AACjB,mBAAS,KAAK,KAAK,KAAK;AAAA;AAE5B,YAAI,QAAQ,WAAW;AACnB,sBAAY;AACZ,sBAAY;AACZ,mBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,+BAAmB,KAAK,OAAO;AAAA;AAAA;AAAA;AAAA,WAK1C;AACD,eAAS,MAAM,GAAG,MAAM,MAAK,OAAO,GAAG;AACnC,2BAAmB,OAAO,gBAAgB,OAAO,KAAK;AACtD,2BAAmB,MAAM,KAAK,gBAAgB,MAAM,KAAK,KAAK;AAAA;AAAA;AAGtE,WAAO,KAAK;AAAA,MACR,MAAM;AAAA,MACN,IAAI;AAAA,MACJ;AAAA,MACA;AAAA,MACA,UAAU,CAAC;AAAA;AAAA;AAGnB,SAAO;AAAA;AAEJ,2BAA2B,MAAM;AACpC,SAAO,KAAK;AAAA;AAKhB,IAAI,sBAAsB;AAC1B,6BAA6B,KAAK,YAAY,WAAW;AACrD,MAAI,kBAAkB,sBAAsB;AAC5C,MAAI,iBAAiB,IAAI,oBAAoB,IAAI;AACjD,MAAI,CAAC,IAAI,kBAAkB;AACvB,QAAI,mBAAmB,IAAI;AAAA;AAE/B,MAAI,UAAU,UAAU;AACxB,MAAI,QAAQ,UAAU;AACtB,MAAI,SAAS,UAAU;AACvB,MAAI,cAAc,WAAY;AAC1B,QAAI,OAAO;AACX,QAAI;AACJ,cAAU,OAAO,MAAM,MAAM;AAC7B,QAAI,SAAS;AACT,YAAM,QAAQ,MAAM,MAAM;AAAA,WAEzB;AACD,YAAM,eAAe,MAAM,MAAM;AAAA;AAErC,aAAS,MAAM,MAAM,MAAM;AAC3B,WAAO;AAAA;AAAA;AAGf,uBAAuB,KAAK,YAAY;AACpC,MAAI,kBAAkB,sBAAsB;AAC5C,MAAI,IAAI,kBAAkB;AACtB,QAAI,cAAc,IAAI;AACtB,QAAI,mBAAmB;AAAA;AAAA;AAG/B,iCAAiC,cAAc,IAAI;AAC/C,WAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC1C,QAAI,aAAa,aAAa;AAC9B,aAAS,IAAI,GAAG,IAAI,WAAW,UAAS;AACpC,UAAI,IAAI,WAAW;AACnB,UAAI,IAAI,WAAW,IAAI;AACvB,iBAAW,OAAO,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG;AAC7C,iBAAW,OAAO,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG;AAAA;AAAA;AAAA;AAIzD,0BAA0B,UAAU,QAAQ;AACxC,MAAI,gBAAgB,SAAS;AAC7B,MAAI,cAAc,OAAO;AACzB,MAAI,KAAK,kBAAkB,mBAAmB,gBAAgB,mBAAmB,eAAe,mBAAmB,GAAG,IAAI,iBAAiB,GAAG;AAC9I,MAAI,oBAAoB,SAAS;AACjC,MAAI,kBAAkB,OAAO;AAC7B,qCAAmC;AAC/B,SAAK,YAAY;AAAA;AAErB,uBAAqB,wBAAwB,kBAAkB;AAC/D,qBAAmB,wBAAwB,gBAAgB;AAC3D,sBAAoB,QAAQ,mBAAmB,EAAE,SAAS;AAC1D,SAAO,YAAY;AACnB,MAAI,eAAe,yBAAyB,kBAAkB,gBAAgB,IAAI,KAAK;AACvF,MAAI,SAAS;AACb,sBAAoB,QAAQ,aAAa,EAAE,SAAS,SAAU,MAAM;AAC5D,QAAI,IAAI,OAAO;AACf,QAAI,OAAO,IAAI;AACf,QAAI,QAAQ;AACZ,aAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC1C,UAAI,OAAO,aAAa;AACxB,UAAI,OAAO,KAAK;AAChB,UAAI,KAAK,KAAK;AACd,UAAI,QAAQ,KAAK,WAAW;AAC5B,UAAI,SAAS,KAAK;AAClB,UAAI,OAAO,KAAK;AAChB,UAAI,KAAK,KAAK,IAAI;AAClB,UAAI,KAAK,KAAK,IAAI;AAClB,WAAK,OAAO,QAAQ,MAAM;AAC1B,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK,GAAG;AACrC,YAAI,OAAO,KAAK;AAChB,YAAI,OAAO,KAAK,IAAI;AACpB,YAAI,KAAK,GAAG;AACZ,YAAI,KAAK,GAAG,IAAI;AAChB,YAAI,IAAI,OAAO,OAAO,KAAK;AAC3B,YAAI,IAAI,OAAO,OAAO,KAAK;AAC3B,eAAO,KAAM,IAAI,KAAK,IAAI,KAAM,MAAM;AACtC,eAAO,IAAI,KAAM,IAAI,KAAK,IAAI,KAAM,MAAM;AAAA;AAE9C,UAAI,KAAK,OAAO;AAChB,UAAI,KAAK,OAAO;AAChB,WAAK,OAAO,IAAI;AAChB,eAAS,IAAI,GAAG,IAAI,KAAK,UAAS;AAC9B,YAAI,KAAK,OAAO;AAChB,YAAI,KAAK,OAAO;AAChB,YAAI,KAAK,OAAO;AAChB,YAAI,KAAK,OAAO;AAChB,YAAI,KAAK,OAAO;AAChB,YAAI,KAAK,OAAO;AAChB,YAAI,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,IAAI;AAClD,eAAK,OAAO,IAAI;AAAA,eAEf;AACD,eAAK,cAAc,IAAI,IAAI,IAAI,IAAI,IAAI;AAAA;AAE3C,aAAK;AACL,aAAK;AAAA;AAAA;AAAA;AAAA;AAKlB,mBAAmB,UAAU,QAAQ,eAAe;AACvD,MAAI,CAAC,YAAY,CAAC,QAAQ;AACtB,WAAO;AAAA;AAEX,MAAI,UAAU,cAAc;AAC5B,MAAI,YAAY,cAAc;AAC9B,mBAAiB,UAAU;AAC3B,SAAO,WAAW;AAClB,2BAAyB;AACrB,kBAAc,QAAQ;AACtB,kBAAc,QAAQ;AACtB,WAAO,WAAW;AAClB,WAAO;AACP,WAAO;AAAA;AAEX,SAAO,UAAU;AAAA,IACb,UAAU;AAAA,KACX,SAAS;AAAA,IACR,QAAQ,SAAU,GAAG;AACjB,aAAO;AACP,mBAAa,UAAU;AAAA;AAAA,IAE3B,MAAM,WAAY;AACd;AACA,iBAAW;AAAA;AAAA,KAEhB;AACH,SAAO;AAAA;AAEX,iBAAiB,GAAG,GAAG,MAAM,MAAM,MAAM,MAAM;AAC3C,MAAI,OAAO;AACX,MAAK,SAAS,OAAQ,IAAI,KAAK,MAAM,QAAS,KAAI,QAAS,QAAO;AAClE,MAAK,SAAS,OAAQ,IAAI,KAAK,MAAM,QAAS,KAAI,QAAS,QAAO;AAClE,MAAI,IAAI;AACR,MAAI;AACJ,WAAS,IAAK,MAAK,QAAQ,GAAG,IAAI,GAAG,KAAK,GAAG;AACzC,QAAI,KAAK;AACT,QAAI,KAAK;AACT,QAAK,KAAI,KAAK,GAAG;AACb,WAAK;AAAA;AAET,QAAK,KAAI,KAAK,GAAG;AACb,WAAK;AAAA;AAET,SAAK,IAAI,IAAM,KAAI,KAAM;AACzB,QAAI,OAAO,GAAG;AACV,UAAI,OAAO,GAAG;AACV,YAAI,IAAI,IAAI;AACZ,YAAI,IAAI,IAAI;AAAA;AAEhB,YAAM;AACN,UAAI;AACJ,UAAI;AAAA;AAAA;AAGZ,SAAO;AAAA;AAEX,mBAAmB,UAAU;AACzB,MAAI,OAAO;AACX,MAAI,OAAO;AACX,MAAI,OAAO;AACX,MAAI,OAAO;AACX,MAAI,MAAM,IAAI,UAAU,SAAU,MAAM;AACpC,QAAI,OAAO,KAAK;AAChB,QAAI,IAAI,KAAK;AACb,QAAI,IAAI,KAAK,IAAI,KAAK,QAAQ,IAAK,KAAI,EAAE,KAAK;AAC9C,QAAI,IAAI,KAAK,IAAI,KAAK,SAAS,IAAK,KAAI,EAAE,KAAK;AAC/C,WAAO,KAAK,IAAI,GAAG;AACnB,WAAO,KAAK,IAAI,GAAG;AACnB,WAAO,KAAK,IAAI,GAAG;AACnB,WAAO,KAAK,IAAI,GAAG;AACnB,WAAO,CAAC,GAAG;AAAA;AAEf,MAAI,QAAQ,IAAI,KAAK,SAAU,IAAI,KAAK;AACpC,WAAO;AAAA,MACH;AAAA,MACA,GAAG,QAAQ,GAAG,IAAI,GAAG,IAAI,MAAM,MAAM,MAAM;AAAA,MAC3C,MAAM,SAAS;AAAA;AAAA;AAGvB,SAAO,MAAM,KAAK,SAAU,GAAG,GAAG;AAAE,WAAO,EAAE,IAAI,EAAE;AAAA,KAAM,IAAI,SAAU,MAAM;AAAE,WAAO,KAAK;AAAA;AAAA;AAG/F,2BAA2B,OAAO;AAC9B,SAAO,MAAM,MAAM,MAAM,MAAM;AAAA;AAEnC,6BAA6B;AACzB,SAAO;AAAA,IACH,iBAAiB;AAAA,IACjB,eAAe;AAAA,IACf,OAAO;AAAA;AAAA;AAGR,sBAAsB,UAAU,QAAQ,eAAe;AAC1D,MAAI,eAAe;AACnB,uBAAqB,WAAU;AAC3B,aAAS,KAAI,GAAG,KAAI,UAAS,QAAQ,MAAK;AACtC,UAAI,QAAO,UAAS;AACpB,UAAI,kBAAkB,QAAO;AACzB,oBAAY,MAAK;AAAA,iBAEZ,iBAAgB,cAAM;AAC3B,qBAAa,KAAK;AAAA;AAAA;AAAA;AAI9B,cAAY;AACZ,MAAI,gBAAgB,aAAa;AACjC,MAAI,CAAC,eAAe;AAChB,WAAO;AAAA;AAEX,MAAI,aAAa,cAAc,cAAc;AAC7C,MAAI,gBAAgB,WAAW;AAAA,IAC3B,MAAM;AAAA,IAAQ,OAAO;AAAA;AAEzB,MAAI,cAAc,WAAW,eAAe;AACxC,YAAQ,MAAM;AACd,WAAO;AAAA;AAEX,iBAAe,UAAU;AACzB,kBAAgB,UAAU;AAC1B,MAAI,UAAU,cAAc;AAC5B,MAAI,YAAY,cAAc;AAC9B,MAAI,kBAAkB,cAAc;AACpC,MAAI,oBAAoB,IAAI;AAC5B,WAAS,IAAI,GAAG,IAAI,eAAe,KAAK;AACpC,QAAI,OAAO,aAAa;AACxB,QAAI,KAAK,cAAc;AACvB,OAAG,SAAS;AACZ,OAAG,cAAc;AACjB,QAAI,CAAC,iBAAiB;AAClB,uBAAiB,MAAM;AAAA;AAAA;AAG/B,SAAO,sBAAsB;AAC7B,SAAO,cAAc,WAAY;AAC7B,WAAO;AAAA;AAEX,gCAA8B,IAAI;AAC9B,aAAS,KAAI,GAAG,KAAI,cAAc,QAAQ,MAAK;AAC3C,oBAAc,IAAG,YAAY;AAAA;AAAA;AAGrC,sBAAoB,QAAQ,eAAe;AAAA,IACvC,OAAO,SAAU,IAAI;AACjB,2BAAqB;AAAA;AAAA;AAG7B,sBAAoB,QAAQ,oBAAoB;AAAA,IAC5C,OAAO,SAAU,IAAI;AACjB,eAAS,KAAI,GAAG,KAAI,cAAc,QAAQ,MAAK;AAC3C,sBAAc,IAAG,iBAAiB;AAAA;AAAA;AAAA;AAI9C,2BAAyB;AACrB,WAAO,sBAAsB;AAC7B,WAAO,WAAW;AAClB,WAAO,cAAc;AACrB,kBAAc,QAAQ;AACtB,kBAAc,QAAQ;AAAA;AAE1B,MAAI,QAAQ,cAAc;AAC1B,MAAI,iBAAiB;AACjB,QAAI,cAAc;AAClB,QAAI,WAAW,WAAY;AACvB;AACA,UAAI,gBAAgB,GAAG;AACnB;AACA,mBAAW;AAAA;AAAA;AAGnB,aAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC5B,UAAI,yBAAyB,kBAAkB,SAAS;AAAA,QACpD,OAAQ,eAAc,SAAS,KAAK,gBAAgB,GAAG,OAAO,aAAa,IAAI,cAAc;AAAA,QAC7F,MAAM;AAAA,SACP,iBAAiB;AACpB,gBAAU,aAAa,IAAI,cAAc,IAAI;AAAA;AAAA,SAGhD;AACD,WAAO,WAAW;AAClB,WAAO,UAAU;AAAA,MACb,UAAU;AAAA,OACX,SAAS;AAAA,MACR,QAAQ,SAAU,GAAG;AACjB,iBAAS,KAAI,GAAG,KAAI,OAAO,MAAK;AAC5B,cAAI,QAAQ,cAAc;AAC1B,gBAAM,WAAW,OAAO;AACxB,gBAAM;AAAA;AAEV,qBAAa,UAAU;AAAA;AAAA,MAE3B,MAAM,WAAY;AACd;AACA,iBAAS,KAAI,GAAG,KAAI,SAAS,QAAQ,MAAK;AACtC,wBAAc,SAAS,KAAI;AAAA;AAE/B,mBAAW;AAAA;AAAA,OAEhB;AAAA;AAEP,MAAI,OAAO,MAAM;AACb,yBAAqB,OAAO;AAAA;AAEhC,SAAO;AAAA,IACH,iBAAiB;AAAA,IACjB,eAAe;AAAA,IACf,OAAO;AAAA;AAAA;AAGR,uBAAuB,UAAU,YAAY,eAAe;AAC/D,MAAI,QAAQ,WAAW;AACvB,MAAI,eAAe;AACnB,MAAI,aAAa,cAAc,cAAc;AAC7C,uBAAqB,UAAU;AAC3B,aAAS,KAAI,GAAG,KAAI,SAAS,QAAQ,MAAK;AACtC,UAAI,OAAO,SAAS;AACpB,UAAI,kBAAkB,OAAO;AACzB,oBAAY,KAAK;AAAA,iBAEZ,gBAAgB,cAAM;AAC3B,qBAAa,KAAK;AAAA;AAAA;AAAA;AAI9B,MAAI,kBAAkB,WAAW;AAC7B,gBAAY,SAAS;AACrB,QAAI,UAAU,aAAa;AAC3B,QAAI,UAAU,OAAO;AACjB,UAAI,IAAI;AACR,eAAS,IAAI,SAAS,IAAI,OAAO,KAAK;AAClC,qBAAa,KAAK,UAAU,aAAa,MAAM;AAAA;AAAA;AAGvD,iBAAa,SAAS;AAAA,SAErB;AACD,mBAAe,WAAW,EAAE,MAAM,UAAU,OAAO;AACnD,QAAI,oBAAoB,SAAS;AACjC,aAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC1C,mBAAa,GAAG,kBAAkB;AAAA;AAEtC,QAAI,aAAa,WAAW,OAAO;AAC/B,cAAQ,MAAM;AACd,aAAO;AAAA;AAAA;AAGf,iBAAe,UAAU;AACzB,eAAa,UAAU;AACvB,MAAI,kBAAkB,cAAc;AACpC,WAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC5B,QAAI,yBAAyB,kBAAkB,SAAS;AAAA,MACpD,OAAQ,eAAc,SAAS,KAAK,gBAAgB,GAAG,OAAO,aAAa,IAAI,WAAW;AAAA,OAC3F,iBAAiB;AACpB,cAAU,aAAa,IAAI,WAAW,IAAI;AAAA;AAE9C,SAAO;AAAA,IACH,iBAAiB;AAAA,IACjB,eAAe;AAAA,IACf,OAAO,WAAW;AAAA;AAAA;;;AC7hB1B,oBAAoB,UAAU;AAC5B,SAAO,QAAQ,SAAS;AAAA;AAG1B,6BAA6B,KAAK,MAAM;AACtC,MAAI,UAAU;AACd,MAAI,aAAa,IAAI;AAErB,WAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AACnC,YAAQ,KAAK;AAAA,MACX,KAAK,IAAI;AAAA,MACT,MAAM;AAAA;AAAA;AAIV,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,QAAI,OAAM,KAAK,GAAG;AAClB,QAAI,IAAI;AAER,SAAK,IAAI,GAAG,IAAI,MAAK,KAAK;AACxB,cAAQ,IAAI,YAAY,KAAK,KAAK,KAAK,GAAG;AAAA;AAAA;AAI9C,MAAI,MAAM;AAEV,WAAS,IAAI,aAAa,GAAG,KAAK,GAAG,KAAK;AACxC,QAAI,CAAC,QAAQ,GAAG,KAAK,QAAQ;AAC3B,UAAI,WAAW,QAAQ,KAAK;AAE5B,UAAI,SAAS,UAAU,GAAG;AAGxB,YAAI,KAAK;AACP,gBAAM;AAAA,eACD;AACL,iBAAO;AAAA;AAAA;AAIX,UAAI,OAAM,SAAS;AACnB,UAAI,MAAM,KAAK,KAAK,OAAM;AAC1B,cAAQ,GAAG,OAAO,SAAS,MAAM,KAAK;AACtC,cAAQ,KAAK,OAAO,SAAS,MAAM,GAAG;AACtC;AAAA;AAAA;AAIJ,SAAO;AAAA;AAGT,IAAI,eAAe;AAAA,EACjB,OAAO,SAAU,QAAQ;AACvB,QAAI,MAAM;AAEV,QAAI,gBAAgB,IAAI,KAAK,IAAI,IAAI,OAAO,KAAK,MAAM,SAAS,IAAI,OAAO;AAE3E,aAAS,IAAI,GAAG,IAAI,OAAO,OAAO,KAAK;AACrC,UAAI,SAAS,UAAU,OAAO;AAC9B,aAAO,SAAS,WAAW;AAC3B,UAAI,KAAK;AAAA;AAGX,WAAO;AAAA;AAAA,EAGT,OAAO;AAAA;AAEF,6BAA6B,MAAM,IAAI,aAAa,aAAa,WAAW,mBAAmB;AACpG,MAAI,CAAC,KAAK,UAAU,CAAC,GAAG,QAAQ;AAC9B;AAAA;AAGF,MAAI,qBAAqB,mBAAmB,UAAU,aAAa;AAEnE,MAAI,CAAE,uBAAsB,mBAAmB,WAAW,IAAI;AAC5D;AAAA;AAGF,MAAI,iBAAiB,YAAY,SAAS,uBAAuB,IAAI;AACrE,MAAI,eAAe,OAAO,OAAO;AAAA,IAG/B,YAAY;AAAA,KACX;AACH,MAAI;AACJ,MAAI;AAEJ,MAAI,WAAW,OAAO;AAEpB,WAAO;AACP,UAAM;AAAA;AAGR,MAAI,WAAW,KAAK;AAElB,WAAO;AACP,UAAM;AAAA;AAGR,yBAAuB,OAAO,aAAY,eAAc,eAAc,cAAc;AAClF,QAAI,YAAY,MAAM;AACtB,QAAI,WAAW,MAAM;AAErB,QAAI,UAAU,WAAW,KAAK,CAAC,cAAc;AAE3C,UAAI,YAAY,cAAa,UAAU,KAAK;AAC5C,UAAI,UAAU,cAAa,WAAW,UAAU;AAEhD,UAAI,kBAAkB,YAAY;AAEhC,sBAAc;AAAA,UACZ,MAAM,CAAC;AAAA,UACP,KAAK;AAAA,WACJ,MAAM,eAAc,eAAc;AAAA,aAChC;AACL,YAAI,yBAAyB,iBAAiB,SAAS;AAAA,UACrD,OAAO,eAAe,eAAc;AAAA,WACnC,gBAAgB;AACnB,kBAAU,WAAW,SAAS;AAC9B,0BAAkB,WAAW,SAAS,WAAW,SAAS;AAAA;AAAA,WAEvD;AACL,UAAI,uBAAuB,SAAS;AAAA,QAClC,YAAY,aAAa;AAAA,QACzB,iBAAiB,kBAAkB,SAAU,KAAK,QAAO,UAAU,QAAQ;AACzE,iBAAO,eAAe,MAAM,eAAc;AAAA;AAAA,SAE3C;AAEH,UAAI,KAAK,cAAa,aAAa,WAAW,UAAU,wBAAwB,cAAc,UAAU,WAAW,uBAC/G,kBAAkB,GAAG,iBACrB,gBAAgB,GAAG;AAEvB,UAAI,SAAQ,gBAAgB;AAE5B,eAAS,IAAI,GAAG,IAAI,QAAO,KAAK;AAC9B,YAAI,yBAAyB,iBAAiB,SAAS;AAAA,UACrD,OAAO,eAAe,GAAG;AAAA,WACxB,gBAAgB;AACnB,0BAAkB,gBAAgB,IAAI,cAAc,IAAI,cAAa,UAAU,KAAK,MAAM,KAAK,cAAa,MAAM,MAAM,UAAU,IAAI;AAAA;AAAA;AAAA;AAK5I,MAAI,aAAa,OAAO,SAAS,OAC/B,KAAK,SAAS,GAAG;AACnB,MAAI,eAAe,OAAO,oBAAoB,KAAK,QAAQ,oBAAoB,aAAa,KAAK,MAAM,CAAC,aAAa,OAAO;AAC5H,MAAI,eAAe;AAEnB,WAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,oBAAgB,aAAa,GAAG,KAAK;AAAA;AAGvC,MAAI,eAAe;AAEnB,WAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,kBAAc,aAAa,IAAI,YAAY,cAAc;AACzD,oBAAgB,aAAa,GAAG,KAAK;AAAA;AAAA;AAGlC,qBAAqB,UAAU;AACpC,MAAI,CAAC,UAAU;AACb,WAAO;AAAA;AAGT,MAAI,QAAQ,WAAW;AACrB,QAAI,aAAa;AAEjB,aAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,iBAAW,KAAK,YAAY,SAAS;AAAA;AAGvC,WAAO;AAAA;AAGT,MAAI,WAAW;AACf,WAAS,SAAS,SAAU,IAAI;AAC9B,QAAI,cAAc,gBAAQ,CAAC,GAAG,mBAAmB,CAAC,GAAG,aAAa,CAAC,GAAG,QAAQ;AAC5E,eAAS,KAAK;AAAA;AAAA;AAGlB,SAAO;AAAA;;;ACjLT,IAAI,uBAAuB;AAE3B,IAAI,oCAAoC;AAExC,6BAA6B,MAAM;AACjC,MAAI,aAAa,KAAK;AAEtB,WAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,QAAI,UAAU,KAAK,iBAAiB,WAAW;AAE/C,QAAI,WAAW,QAAQ,UAAU,gBAAgB,GAAG;AAClD,aAAO,WAAW;AAAA;AAAA;AAAA;AAKxB,8BAA8B,MAAM;AAClC,MAAI,QAAQ;AACZ,OAAK,MAAM,SAAU,YAAY;AAC/B,QAAI,OAAO,WAAW;AAEtB,QAAI,KAAK,UAAU,sBAAsB;AACvC,UAAI,MAAuC;AACzC,aAAK;AAAA;AAGP;AAAA;AAGF,QAAI,UAAU,KAAK;AACnB,QAAI,WAAW,oBAAoB;AAEnC,aAAS,YAAY,GAAG,YAAY,QAAQ,QAAQ,aAAa;AAC/D,YAAM,KAAK;AAAA,QACT;AAAA,QACA,KAAK,WAAW,OAAO;AAAA,QACvB,QAAQ,WAAW;AAAA,QACnB;AAAA;AAAA;AAAA;AAIN,SAAO;AAAA;AAGT,uBAAuB,OAAO,WAAW,UAAU;AACjD,QAAM,SAAS,SAAU,IAAI;AAC3B,QAAI,cAAc,cAAM;AAEtB,gBAAU,IAAI;AAAA,QACZ,OAAO;AAAA,UACL,SAAS;AAAA;AAAA,SAEV,WAAW;AAAA,QACZ,WAAW;AAAA,QACX,QAAQ;AAAA;AAAA;AAAA;AAAA;AAMhB,mBAAkB,IAAI;AACpB,MAAI,GAAG,QAAQ;AAGb,QAAI,oBAAoB,GAAG;AAC3B,OAAG,kBAAkB;AACrB,OAAG,OAAO,OAAO;AAAA;AAAA;AAIrB,uBAAuB,IAAI;AACzB,KAAG;AAEH,MAAI,GAAG,SAAS;AACd,OAAG,SAAS,SAAU,OAAO;AAC3B,YAAM;AAAA;AAAA;AAAA;AAKZ,8BAA8B,IAAI,WAAW,aAAa;AACxD,MAAI,kBAAkB,mBAAmB,UAAU,aAAa;AAChE,qBAAmB,GAAG,SAAS,SAAU,OAAO;AAC9C,QAAI,iBAAiB,qBAAa;AAChC,UAAI,WAAW,YAAY;AAE3B,UAAI,UAAU;AACZ,cAAM,YAAY;AAAA,UAChB,OAAO;AAAA,WACN;AAAA;AAAA;AAAA;AAAA;AAMX,qBAAqB,cAAc,cAAc;AAC/C,MAAI,OAAM,aAAa;AAEvB,MAAI,SAAQ,aAAa,QAAQ;AAC/B,WAAO;AAAA;AAGT,WAAS,IAAI,GAAG,IAAI,MAAK,KAAK;AAC5B,QAAI,UAAU,aAAa;AAC3B,QAAI,UAAU,aAAa;AAE3B,QAAI,QAAQ,KAAK,MAAM,QAAQ,eAAe,QAAQ,KAAK,MAAM,QAAQ,YAAY;AACnF,aAAO;AAAA;AAAA;AAIX,SAAO;AAAA;AAGT,2BAA2B,SAAS,SAAS,KAAK;AAChD,MAAI,eAAe,qBAAqB;AACxC,MAAI,eAAe,qBAAqB;AAExC,mCAAiC,MAAM,IAAI,SAAS,OAAO,cAAc;AACvE,QAAI,WAAW,MAAM;AACnB,SAAG,YAAY;AAAA,QACb,OAAQ,YAAW,MAAM;AAAA,SACxB;AAAA;AAAA;AAIP,sBAAoB,OAAO;AACzB,aAAS,KAAI,GAAG,KAAI,MAAM,QAAQ,MAAK;AACrC,UAAI,MAAM,IAAG,KAAK;AAChB,eAAO,MAAM,IAAG;AAAA;AAAA;AAAA;AAKtB,MAAI,YAAY,WAAW;AAC3B,MAAI,YAAY,WAAW;AAC3B,MAAI,oBAAoB;AAExB,2BAAyB,OAAO,WAAW;AACzC,WAAO,SAAU,UAAU;AACzB,UAAI,OAAO,SAAS;AACpB,UAAI,YAAY,SAAS;AAEzB,UAAI,WAAW;AACb,eAAO,KAAK,MAAM;AAAA;AAMpB,UAAI,cAAc,KAAK,aAAa,KAAK,UAAU,IAAI;AAGvD,UAAI,SAAS,QAAQ,aAAa,YAAY,aAAa;AAC3D,UAAI,UAAU,UAAU,KAAK,iBAAiB;AAC9C,UAAI,iBAAiB,WAAW,QAAQ;AAExC,UAAI,SAAS;AAEX,YAAI,MAAM,KAAK,IAAI,QAAQ,MAAM;AAEjC,YAAI,gBAAgB;AAClB,iBAAO,eAAe,WAAW,QAAQ,MAAM;AAAA;AAGjD,eAAO,MAAM;AAAA;AAIf,UAAI,UAAU,KAAK,eAAe;AAElC,UAAI,WAAW,QAAQ,SAAS;AAC9B,eAAO,QAAQ,UAAU;AAAA;AAG3B,aAAO,eAAe,KAAK,MAAM;AAAA;AAAA;AAOrC,MAAI,QAAQ,YAAY,cAAc;AACtC,MAAI,wBAAwB;AAE5B,MAAI,CAAC,OAAO;AAIV,aAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,UAAI,UAAU,aAAa;AAC3B,UAAI,KAAK,QAAQ,KAAK,iBAAiB,QAAQ;AAE/C,UAAI,IAAI;AACN,8BAAsB,GAAG,MAAM;AAAA;AAAA;AAAA;AAKrC,0BAAwB,UAAU,UAAU;AAC1C,QAAI,UAAU,aAAa;AAC3B,QAAI,WAAU,aAAa;AAC3B,QAAI,YAAY,SAAQ,KAAK;AAE7B,QAAI,QAAQ,QAAQ,KAAK,iBAAiB,QAAQ;AAClD,QAAI,QAAQ,SAAQ,KAAK,iBAAiB,SAAQ;AAElD,QAAI,UAAU,OAAO;AACnB,eAAS,qBAAqB,OAAO,SAAQ,WAAW;AACxD;AAAA;AAGF,QACA,SAAS,sBAAsB,MAAM,KAAK;AACxC;AAAA;AAGF,QAAI,OAAO;AAIT,oBAAc;AAEd,UAAI,OAAO;AACT,sBAAc;AAEd,kBAAS;AACT,4BAAoB;AACpB,4BAAoB,YAAY,QAAQ,YAAY,QAAQ,SAAQ,QAAQ,WAAW,UAAU;AAAA,aAC5F;AACL,sBAAc,OAAO,WAAW;AAAA;AAAA;AAAA;AAMtC,MAAI,mBAAW,cAAc,cAAc,gBAAgB,MAAM,QAAQ,gBAAgB,OAAO,QAAQ,MAAM,YAAY,OAAO,gBAAgB,gBAAgB,SAAU,UAAU,YAAY;AAC/L,QAAI,WAAU,aAAa;AAC3B,QAAI,UAAU,SAAQ;AACtB,QAAI,YAAY,QAAQ;AACxB,QAAI,QAAQ,QAAQ,iBAAiB,SAAQ;AAC7C,QAAI,aAAa,OAAO,IAAI,YAAY,SAAU,KAAK;AACrD,aAAO,aAAa,KAAK,KAAK,iBAAiB,aAAa,KAAK;AAAA,QAC/D,SAAU,OAAO;AACnB,aAAO,SAAS,UAAU,SAAS,CAAC,sBAAsB,MAAM;AAAA;AAGlE,QAAI,OAAO;AACT,oBAAc;AAEd,UAAI,WAAW,QAAQ;AAErB,aAAK,YAAY,SAAU,OAAO;AAChC,wBAAc;AACd,oBAAS;AAAA;AAEX,4BAAoB;AACpB,4BAAoB,YAAY,aAAa,YAAY,QAAQ,SAAQ,QAAQ,WAAW,UAAU;AAAA,aACjG;AACL,sBAAc,OAAO,WAAW,SAAQ;AAAA;AAAA;AAAA,KAI3C,gBAAgB,SAAU,YAAY,UAAU;AACjD,QAAI,UAAU,aAAa;AAC3B,QAAI,QAAQ,QAAQ,KAAK,iBAAiB,QAAQ;AAElD,QAAI,SAAS,sBAAsB,MAAM,KAAK;AAC5C;AAAA;AAGF,QAAI,aAAa,OAAO,IAAI,YAAY,SAAU,KAAK;AACrD,aAAO,aAAa,KAAK,KAAK,iBAAiB,aAAa,KAAK;AAAA,QAC/D,SAAU,KAAI;AAChB,aAAO,OAAM,QAAO;AAAA;AAEtB,QAAI,WAAW,aAAa,WAAW,IAAI,KAAK;AAEhD,QAAI,WAAW,QAAQ;AACrB,WAAK,YAAY,SAAU,OAAO;AAChC,eAAO,cAAc;AAAA;AAGvB,UAAI,OAAO;AACT,sBAAc;AAEd,kBAAS;AACT,4BAAoB;AACpB,4BAAoB,YAAY,QAAQ,YAAY,aAAa,QAAQ,QACzE,UAAU,WAAW,IAAI;AAAA,aACpB;AACL,aAAK,YAAY,SAAU,OAAO;AAChC,iBAAO,cAAc,OAAO,UAAU,WAAW;AAAA;AAAA;AAAA;AAAA,KAKtD,iBAAiB,SAAU,YAAY,YAAY;AAGpD,QAAI,mBAAW,YAAY,YAAY,SAAU,QAAQ;AACvD,aAAO,aAAa,QAAQ,KAAK,MAAM,aAAa,QAAQ;AAAA,OAC3D,SAAU,QAAQ;AACnB,aAAO,aAAa,QAAQ,KAAK,MAAM,aAAa,QAAQ;AAAA,OAC3D,OAAO,SAAU,UAAU,UAAU;AAEtC,qBAAe,WAAW,WAAW,WAAW;AAAA,OAC/C;AAAA,KACF;AAEH,MAAI,mBAAmB;AACrB,SAAK,SAAS,SAAU,IAAI;AAC1B,UAAI,OAAO,GAAG;AACd,UAAI,cAAc,KAAK;AACvB,UAAI,OAAO,eAAe,IAAI,qBAAqB;AACnD,UAAI,eAAe,mBAAmB,UAAU,aAAa;AAE7D,UAAI,QAAQ,YAAY,wBAAwB,gBAAgB,aAAa,WAAW,GAAG;AACzF,aAAK,MAAM,SAAS,SAAU,KAAI;AAChC,cAAI,eAAc,gBAAQ,CAAC,IAAG,UAAU,QAAQ;AAG9C,gBAAG,YAAY;AAAA,cACb,OAAO;AAAA,gBACL,SAAS;AAAA;AAAA,eAEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQf,gCAAgC,QAAQ;AACtC,MAAI,YAAY,OAAO,SAAS,uBAAuB,IAAI;AAE3D,MAAI,CAAC,WAAW;AAEd,WAAO,OAAO;AAAA;AAGhB,SAAO;AAAA;AAGT,uCAAuC,WAAW;AAChD,MAAI,QAAQ,YAAY;AAEtB,WAAO,UAAU,OAAO,KAAK;AAAA;AAG/B,SAAO;AAAA;AAGT,gCAAgC,MAAM;AACpC,MAAI,KAAK,WAAW;AAClB,WAAO,KAAK,UAAU,SAAS,uBAAuB,IAAI;AAAA;AAAA;AAI9D,qCAAqC,aAAa,QAAQ;AACxD,MAAI,gBAAgB;AACpB,MAAI,aAAa;AAGjB,MAAI,qBAAqB;AACzB,OAAK,YAAY,WAAW,SAAU,QAAQ,KAAK;AACjD,QAAI,UAAU,YAAY,QAAQ;AAClC,QAAI,gBAAgB,uBAAuB;AAC3C,QAAI,mBAAmB,8BAA8B;AACrD,eAAW,IAAI,kBAAkB;AAEjC,QAAI,QAAQ,gBAAgB;AAE1B,WAAK,eAAe,SAAU,KAAK;AACjC,2BAAmB,IAAI,KAAK;AAAA,UAC1B,MAAM;AAAA,UACN,KAAK;AAAA;AAAA;AAAA;AAAA;AAMb,8CAA4C,kBAAkB;AAC5D,QAAI,cAAc,IAAI,mBAAmB;AACvC,WAAK,iDAAiD;AAAA;AAAA;AAI1D,OAAK,OAAO,eAAe,SAAU,QAAQ;AAC3C,QAAI,OAAO,kCAAkC,OAAO,sBAAsB;AACxE,UAAI,UAAU,OAAO;AACrB,UAAI,gBAAgB,uBAAuB;AAC3C,UAAI,mBAAmB,8BAA8B;AAErD,UAAI,UAAU,WAAW,IAAI;AAE7B,UAAI,SAAS;AACX,YAAI,MAAuC;AACzC,6CAAmC;AAAA;AAIrC,sBAAc,IAAI,kBAAkB;AAAA,UAClC,WAAW,CAAC;AAAA,YACV,QAAQ,uBAAuB;AAAA,YAC/B,MAAM;AAAA;AAAA,UAER,WAAW,CAAC;AAAA,YACV,QAAQ,uBAAuB;AAAA,YAC/B,MAAM;AAAA;AAAA;AAAA,aAGL;AAEL,YAAI,QAAQ,gBAAgB;AAC1B,cAAI,MAAuC;AACzC,+CAAmC;AAAA;AAGrC,cAAI,cAAc;AAClB,eAAK,eAAe,SAAU,KAAK;AACjC,gBAAI,WAAU,WAAW,IAAI;AAE7B,gBAAI,UAAS;AACX,0BAAY,KAAK;AAAA,gBACf,QAAQ,uBAAuB;AAAA,gBAC/B,MAAM;AAAA;AAAA;AAAA;AAKZ,cAAI,YAAY,QAAQ;AACtB,0BAAc,IAAI,kBAAkB;AAAA,cAClC,WAAW;AAAA,cACX,WAAW,CAAC;AAAA,gBACV,MAAM;AAAA,gBACN,QAAQ,uBAAuB;AAAA;AAAA;AAAA;AAAA,eAIhC;AAEL,cAAI,YAAY,mBAAmB,IAAI;AAEvC,cAAI,WAAW;AACb,gBAAI,QAAQ,cAAc,IAAI,UAAU;AAExC,gBAAI,CAAC,OAAO;AACV,sBAAQ;AAAA,gBACN,WAAW,CAAC;AAAA,kBACV,MAAM,UAAU;AAAA,kBAChB,QAAQ,uBAAuB,UAAU;AAAA;AAAA,gBAE3C,WAAW;AAAA;AAEb,4BAAc,IAAI,UAAU,KAAK;AAAA;AAGnC,kBAAM,UAAU,KAAK;AAAA,cACnB,MAAM;AAAA,cACN,QAAQ,uBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO3C,SAAO;AAAA;AAGT,qBAAqB,QAAQ,QAAQ;AACnC,WAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,QAAI,QAAQ,OAAO,eAAe,QAAQ,OAAO,gBAAgB,OAAO,GAAG,eAAe,OAAO,YAAY,QAAQ,OAAO,aAAa,OAAO,GAAG;AAEnJ,QAAI,OAAO;AACT,aAAO;AAAA;AAAA;AAAA;AAKb,iCAAiC,eAAe,aAAa,QAAQ,KAAK;AACxE,MAAI,OAAO;AACX,MAAI,KAAK;AACT,OAAK,iBAAiB,cAAc,OAAO,SAAU,QAAQ;AAC3D,QAAI,MAAM,YAAY,YAAY,WAAW;AAE7C,QAAI,OAAO,GAAG;AACZ,WAAK,KAAK;AAAA,QACR,MAAM,YAAY,QAAQ;AAAA,QAE1B,QAAQ,uBAAuB,YAAY,QAAQ;AAAA,QACnD,KAAK,OAAO;AAAA;AAAA;AAAA;AAIlB,OAAK,iBAAiB,cAAc,KAAK,SAAU,QAAQ;AACzD,QAAI,MAAM,YAAY,OAAO,eAAe;AAE5C,QAAI,OAAO,GAAG;AACZ,UAAI,OAAO,OAAO,cAAc,KAAK;AACrC,SAAG,KAAK;AAAA,QACN;AAAA,QACA,QAAQ,uBAAuB;AAAA,QAC/B,KAAK,OAAO;AAAA;AAAA;AAAA;AAKlB,MAAI,KAAK,SAAS,KAAK,GAAG,SAAS,GAAG;AACpC,sBAAkB,MAAM,IAAI;AAAA;AAAA;AAIzB,oCAAoC,WAAW;AACpD,YAAU,wBAAwB,uBAAuB,SAAU,SAAS,KAAK,QAAQ;AACvF,SAAK,iBAAiB,OAAO,mBAAmB,SAAU,UAAU;AAClE,WAAK,iBAAiB,SAAS,KAAK,SAAU,QAAQ;AACpD,YAAI,SAAS,OAAO;AAEpB,iBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,cAAI,OAAO,eAAe,QAAQ,OAAO,gBAAgB,OAAO,GAAG,eAAe,OAAO,YAAY,QAAQ,OAAO,aAAa,OAAO,GAAG,IAAI;AAC7I,mBAAO,GAAG,oCAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAMxD,YAAU,wBAAwB,qBAAqB,SAAU,SAAS,KAAK,QAAQ;AAErF,QAAI,cAAc,kCAAkC;AAEpD,QAAI,YAAY,aAAa,OAAO,iBAAiB,OAAO,eAAe;AAEzE,UAAI,gBAAgB,OAAO;AAE3B,UAAI,eAAe;AACjB,aAAK,iBAAiB,gBAAgB,SAAU,KAAK;AACnD,kCAAwB,KAAK,aAAa,QAAQ;AAAA;AAAA,aAE/C;AAEL,YAAI,kBAAkB,4BAA4B,aAAa;AAC/D,aAAK,gBAAgB,QAAQ,SAAU,KAAK;AAC1C,cAAI,QAAQ,gBAAgB,IAAI;AAChC,4BAAkB,MAAM,WAAW,MAAM,WAAW;AAAA;AAAA;AAKxD,WAAK,OAAO,eAAe,SAAU,QAAQ;AAE3C,YAAI,OAAO,mCAAmC;AAC5C,iBAAO,oCAAoC;AAAA;AAAA;AAAA;AAMjD,QAAI,YAAY,QAAQ;AACxB,QAAI,cAAc,YAAY,YAAY;AAC1C,QAAI,YAAY,YAAY,UAAU;AAEtC,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,UAAI,OAAO,UAAU,GAAG;AAGxB,UAAI,KAAK,UAAU,sBAAsB;AACvC,oBAAY,KAAK,UAAU;AAC3B,kBAAU,KAAK;AAAA;AAAA;AAAA;AAAA;;;ACljBvB,IAAI,CAAC;AAGL,IAAI,CAAC;AAUL,IAAI,CAAC,UAAW,UAAU,UAAU,UAAc,WAAY,WAAU,WAAW,WAAc,WAAY,WAAY,WAAa,WAAe,WAAa,WAAc,WAAkB,WAAoB,WAAY,WAAc,WAAmB,WAAiB,WAAe;AAenS,IAAI;AAUJ,IAAI;AAQJ,IAAI;AAOJ,IAAI;AASJ,IAAI;AAQJ,IAAI;AAQJ,IAAI;AAKJ,IAAI;AAKJ,IAAI;AASJ,IAAI;AASJ,IAAI;AAKJ,IAAI;AAKJ,IAAI;AAKJ,IAAI;AAKJ,IAAI;AAKJ,IAAI;AAKJ,IAAI;AAEJ,IAAI;AAMJ,IAAI;AAKJ,IAAI;AAEJ,IAAI;AAKJ,IAAI;AAKJ,IAAI;AAKJ,IAAI;AAOJ,IAAI;AACJ,IAAI;AAOJ,IAAI;AAOJ,IAAI;",
  "names": []
}
