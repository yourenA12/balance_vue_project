import {
  fs_exports,
  init_fs
} from "./chunk-G5DXBX77.js";
import {
  __commonJS,
  __require
} from "./chunk-ENMAWK7U.js";

// node_modules/xlsx/dist/xlsx.core.min.js
var require_xlsx_core_min = __commonJS({
  "node_modules/xlsx/dist/xlsx.core.min.js"(exports, module) {
    var DO_NOT_EXPORT_JSZIP = true;
    (function(e) {
      if (typeof exports == "object" && typeof module != "undefined" && typeof DO_NOT_EXPORT_JSZIP == "undefined")
        module.exports = e();
      else if (typeof define == "function" && define.amd && typeof DO_NOT_EXPORT_JSZIP == "undefined") {
        JSZipSync = e();
        define("j", [], e);
      } else {
        var r;
        typeof globalThis != "undefined" ? r = globalThis : typeof window != "undefined" ? r = window : typeof global != "undefined" ? r = global : typeof $ != "undefined" && $.global ? r = $.global : typeof self != "undefined" && (r = self), r.JSZipSync = e();
      }
    })(function() {
      var e, r, t;
      return function a(e2, r2, t2) {
        function n(s2, f) {
          if (!r2[s2]) {
            if (!e2[s2]) {
              var l = typeof __require == "function" && __require;
              if (!f && l)
                return l(s2, true);
              if (i)
                return i(s2, true);
              throw new Error("Cannot find module '" + s2 + "'");
            }
            var o = r2[s2] = { exports: {} };
            e2[s2][0].call(o.exports, function(r3) {
              var t3 = e2[s2][1][r3];
              return n(t3 ? t3 : r3);
            }, o, o.exports, a, e2, r2, t2);
          }
          return r2[s2].exports;
        }
        var i = typeof __require == "function" && __require;
        for (var s = 0; s < t2.length; s++)
          n(t2[s]);
        return n;
      }({ 1: [function(e2, r2, t2) {
        "use strict";
        var a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        t2.encode = function(e3, r3) {
          var t3 = "";
          var n, i, s, f, l, o, c;
          var u = 0;
          while (u < e3.length) {
            n = e3.charCodeAt(u++);
            i = e3.charCodeAt(u++);
            s = e3.charCodeAt(u++);
            f = n >> 2;
            l = (n & 3) << 4 | i >> 4;
            o = (i & 15) << 2 | s >> 6;
            c = s & 63;
            if (isNaN(i)) {
              o = c = 64;
            } else if (isNaN(s)) {
              c = 64;
            }
            t3 = t3 + a.charAt(f) + a.charAt(l) + a.charAt(o) + a.charAt(c);
          }
          return t3;
        };
        t2.decode = function(e3, r3) {
          var t3 = "";
          var n, i, s;
          var f, l, o, c;
          var u = 0;
          e3 = e3.replace(/[^A-Za-z0-9\+\/\=]/g, "");
          while (u < e3.length) {
            f = a.indexOf(e3.charAt(u++));
            l = a.indexOf(e3.charAt(u++));
            o = a.indexOf(e3.charAt(u++));
            c = a.indexOf(e3.charAt(u++));
            n = f << 2 | l >> 4;
            i = (l & 15) << 4 | o >> 2;
            s = (o & 3) << 6 | c;
            t3 = t3 + String.fromCharCode(n);
            if (o != 64) {
              t3 = t3 + String.fromCharCode(i);
            }
            if (c != 64) {
              t3 = t3 + String.fromCharCode(s);
            }
          }
          return t3;
        };
      }, {}], 2: [function(e2, r2, t2) {
        "use strict";
        function a() {
          this.compressedSize = 0;
          this.uncompressedSize = 0;
          this.crc32 = 0;
          this.compressionMethod = null;
          this.compressedContent = null;
        }
        a.prototype = { getContent: function() {
          return null;
        }, getCompressedContent: function() {
          return null;
        } };
        r2.exports = a;
      }, {}], 3: [function(e2, r2, t2) {
        "use strict";
        t2.STORE = { magic: "\0\0", compress: function(e3) {
          return e3;
        }, uncompress: function(e3) {
          return e3;
        }, compressInputType: null, uncompressInputType: null };
        t2.DEFLATE = e2("./flate");
      }, { "./flate": 8 }], 4: [function(e2, r2, t2) {
        "use strict";
        var a = e2("./utils");
        var n = [0, 1996959894, 3993919788, 2567524794, 124634137, 1886057615, 3915621685, 2657392035, 249268274, 2044508324, 3772115230, 2547177864, 162941995, 2125561021, 3887607047, 2428444049, 498536548, 1789927666, 4089016648, 2227061214, 450548861, 1843258603, 4107580753, 2211677639, 325883990, 1684777152, 4251122042, 2321926636, 335633487, 1661365465, 4195302755, 2366115317, 997073096, 1281953886, 3579855332, 2724688242, 1006888145, 1258607687, 3524101629, 2768942443, 901097722, 1119000684, 3686517206, 2898065728, 853044451, 1172266101, 3705015759, 2882616665, 651767980, 1373503546, 3369554304, 3218104598, 565507253, 1454621731, 3485111705, 3099436303, 671266974, 1594198024, 3322730930, 2970347812, 795835527, 1483230225, 3244367275, 3060149565, 1994146192, 31158534, 2563907772, 4023717930, 1907459465, 112637215, 2680153253, 3904427059, 2013776290, 251722036, 2517215374, 3775830040, 2137656763, 141376813, 2439277719, 3865271297, 1802195444, 476864866, 2238001368, 4066508878, 1812370925, 453092731, 2181625025, 4111451223, 1706088902, 314042704, 2344532202, 4240017532, 1658658271, 366619977, 2362670323, 4224994405, 1303535960, 984961486, 2747007092, 3569037538, 1256170817, 1037604311, 2765210733, 3554079995, 1131014506, 879679996, 2909243462, 3663771856, 1141124467, 855842277, 2852801631, 3708648649, 1342533948, 654459306, 3188396048, 3373015174, 1466479909, 544179635, 3110523913, 3462522015, 1591671054, 702138776, 2966460450, 3352799412, 1504918807, 783551873, 3082640443, 3233442989, 3988292384, 2596254646, 62317068, 1957810842, 3939845945, 2647816111, 81470997, 1943803523, 3814918930, 2489596804, 225274430, 2053790376, 3826175755, 2466906013, 167816743, 2097651377, 4027552580, 2265490386, 503444072, 1762050814, 4150417245, 2154129355, 426522225, 1852507879, 4275313526, 2312317920, 282753626, 1742555852, 4189708143, 2394877945, 397917763, 1622183637, 3604390888, 2714866558, 953729732, 1340076626, 3518719985, 2797360999, 1068828381, 1219638859, 3624741850, 2936675148, 906185462, 1090812512, 3747672003, 2825379669, 829329135, 1181335161, 3412177804, 3160834842, 628085408, 1382605366, 3423369109, 3138078467, 570562233, 1426400815, 3317316542, 2998733608, 733239954, 1555261956, 3268935591, 3050360625, 752459403, 1541320221, 2607071920, 3965973030, 1969922972, 40735498, 2617837225, 3943577151, 1913087877, 83908371, 2512341634, 3803740692, 2075208622, 213261112, 2463272603, 3855990285, 2094854071, 198958881, 2262029012, 4057260610, 1759359992, 534414190, 2176718541, 4139329115, 1873836001, 414664567, 2282248934, 4279200368, 1711684554, 285281116, 2405801727, 4167216745, 1634467795, 376229701, 2685067896, 3608007406, 1308918612, 956543938, 2808555105, 3495958263, 1231636301, 1047427035, 2932959818, 3654703836, 1088359270, 936918e3, 2847714899, 3736837829, 1202900863, 817233897, 3183342108, 3401237130, 1404277552, 615818150, 3134207493, 3453421203, 1423857449, 601450431, 3009837614, 3294710456, 1567103746, 711928724, 3020668471, 3272380065, 1510334235, 755167117];
        r2.exports = function i(e3, r3) {
          if (typeof e3 === "undefined" || !e3.length) {
            return 0;
          }
          var t3 = a.getTypeOf(e3) !== "string";
          if (typeof r3 == "undefined") {
            r3 = 0;
          }
          var i2 = 0;
          var s = 0;
          var f = 0;
          r3 = r3 ^ -1;
          for (var l = 0, o = e3.length; l < o; l++) {
            f = t3 ? e3[l] : e3.charCodeAt(l);
            s = (r3 ^ f) & 255;
            i2 = n[s];
            r3 = r3 >>> 8 ^ i2;
          }
          return r3 ^ -1;
        };
      }, { "./utils": 21 }], 5: [function(e2, r2, t2) {
        "use strict";
        var a = e2("./utils");
        function n(e3) {
          this.data = null;
          this.length = 0;
          this.index = 0;
        }
        n.prototype = { checkOffset: function(e3) {
          this.checkIndex(this.index + e3);
        }, checkIndex: function(e3) {
          if (this.length < e3 || e3 < 0) {
            throw new Error("End of data reached (data length = " + this.length + ", asked index = " + e3 + "). Corrupted zip ?");
          }
        }, setIndex: function(e3) {
          this.checkIndex(e3);
          this.index = e3;
        }, skip: function(e3) {
          this.setIndex(this.index + e3);
        }, byteAt: function(e3) {
        }, readInt: function(e3) {
          var r3 = 0, t3;
          this.checkOffset(e3);
          for (t3 = this.index + e3 - 1; t3 >= this.index; t3--) {
            r3 = (r3 << 8) + this.byteAt(t3);
          }
          this.index += e3;
          return r3;
        }, readString: function(e3) {
          return a.transformTo("string", this.readData(e3));
        }, readData: function(e3) {
        }, lastIndexOfSignature: function(e3) {
        }, readDate: function() {
          var e3 = this.readInt(4);
          return new Date((e3 >> 25 & 127) + 1980, (e3 >> 21 & 15) - 1, e3 >> 16 & 31, e3 >> 11 & 31, e3 >> 5 & 63, (e3 & 31) << 1);
        } };
        r2.exports = n;
      }, { "./utils": 21 }], 6: [function(e2, r2, t2) {
        "use strict";
        t2.base64 = false;
        t2.binary = false;
        t2.dir = false;
        t2.createFolders = false;
        t2.date = null;
        t2.compression = null;
        t2.comment = null;
      }, {}], 7: [function(e2, r2, t2) {
        "use strict";
        var a = e2("./utils");
        t2.string2binary = function(e3) {
          return a.string2binary(e3);
        };
        t2.string2Uint8Array = function(e3) {
          return a.transformTo("uint8array", e3);
        };
        t2.uint8Array2String = function(e3) {
          return a.transformTo("string", e3);
        };
        t2.string2Blob = function(e3) {
          var r3 = a.transformTo("arraybuffer", e3);
          return a.arrayBuffer2Blob(r3);
        };
        t2.arrayBuffer2Blob = function(e3) {
          return a.arrayBuffer2Blob(e3);
        };
        t2.transformTo = function(e3, r3) {
          return a.transformTo(e3, r3);
        };
        t2.getTypeOf = function(e3) {
          return a.getTypeOf(e3);
        };
        t2.checkSupport = function(e3) {
          return a.checkSupport(e3);
        };
        t2.MAX_VALUE_16BITS = a.MAX_VALUE_16BITS;
        t2.MAX_VALUE_32BITS = a.MAX_VALUE_32BITS;
        t2.pretty = function(e3) {
          return a.pretty(e3);
        };
        t2.findCompression = function(e3) {
          return a.findCompression(e3);
        };
        t2.isRegExp = function(e3) {
          return a.isRegExp(e3);
        };
      }, { "./utils": 21 }], 8: [function(e2, r2, t2) {
        "use strict";
        var a = typeof Uint8Array !== "undefined" && typeof Uint16Array !== "undefined" && typeof Uint32Array !== "undefined";
        var n = e2("pako");
        t2.uncompressInputType = a ? "uint8array" : "array";
        t2.compressInputType = a ? "uint8array" : "array";
        t2.magic = "\b\0";
        t2.compress = function(e3) {
          return n.deflateRaw(e3);
        };
        t2.uncompress = function(e3) {
          return n.inflateRaw(e3);
        };
      }, { pako: 24 }], 9: [function(e2, r2, t2) {
        "use strict";
        var a = e2("./base64");
        function n(e3, r3) {
          if (!(this instanceof n))
            return new n(e3, r3);
          this.files = {};
          this.comment = null;
          this.root = "";
          if (e3) {
            this.load(e3, r3);
          }
          this.clone = function() {
            var e4 = new n();
            for (var r4 in this) {
              if (typeof this[r4] !== "function") {
                e4[r4] = this[r4];
              }
            }
            return e4;
          };
        }
        n.prototype = e2("./object");
        n.prototype.load = e2("./load");
        n.support = e2("./support");
        n.defaults = e2("./defaults");
        n.utils = e2("./deprecatedPublicUtils");
        n.base64 = { encode: function(e3) {
          return a.encode(e3);
        }, decode: function(e3) {
          return a.decode(e3);
        } };
        n.compressions = e2("./compressions");
        r2.exports = n;
      }, { "./base64": 1, "./compressions": 3, "./defaults": 6, "./deprecatedPublicUtils": 7, "./load": 10, "./object": 13, "./support": 17 }], 10: [function(e2, r2, t2) {
        "use strict";
        var a = e2("./base64");
        var n = e2("./zipEntries");
        r2.exports = function(e3, r3) {
          var t3, i, s, f;
          r3 = r3 || {};
          if (r3.base64) {
            e3 = a.decode(e3);
          }
          i = new n(e3, r3);
          t3 = i.files;
          for (s = 0; s < t3.length; s++) {
            f = t3[s];
            this.file(f.fileName, f.decompressed, { binary: true, optimizedBinaryString: true, date: f.date, dir: f.dir, comment: f.fileComment.length ? f.fileComment : null, createFolders: r3.createFolders });
          }
          if (i.zipComment.length) {
            this.comment = i.zipComment;
          }
          return this;
        };
      }, { "./base64": 1, "./zipEntries": 22 }], 11: [function(e2, r2, t2) {
        (function(e3) {
          "use strict";
          var t3 = function() {
          };
          if (typeof e3 !== "undefined") {
            var a = !e3.from;
            if (!a)
              try {
                e3.from("foo", "utf8");
              } catch (n) {
                a = true;
              }
            t3 = a ? function(r3, t4) {
              return t4 ? new e3(r3, t4) : new e3(r3);
            } : e3.from.bind(e3);
            if (!e3.alloc)
              e3.alloc = function(r3) {
                return new e3(r3);
              };
          }
          r2.exports = function(r3, a2) {
            return typeof r3 == "number" ? e3.alloc(r3) : t3(r3, a2);
          };
          r2.exports.test = function(r3) {
            return e3.isBuffer(r3);
          };
        }).call(this, typeof Buffer !== "undefined" ? Buffer : void 0);
      }, {}], 12: [function(e2, r2, t2) {
        "use strict";
        var a = e2("./uint8ArrayReader");
        function n(e3) {
          this.data = e3;
          this.length = this.data.length;
          this.index = 0;
        }
        n.prototype = new a();
        n.prototype.readData = function(e3) {
          this.checkOffset(e3);
          var r3 = this.data.slice(this.index, this.index + e3);
          this.index += e3;
          return r3;
        };
        r2.exports = n;
      }, { "./uint8ArrayReader": 18 }], 13: [function(e2, r2, t2) {
        "use strict";
        var a = e2("./support");
        var n = e2("./utils");
        var i = e2("./crc32");
        var s = e2("./signature");
        var f = e2("./defaults");
        var l = e2("./base64");
        var o = e2("./compressions");
        var c = e2("./compressedObject");
        var u = e2("./nodeBuffer");
        var h = e2("./utf8");
        var d = e2("./stringWriter");
        var v = e2("./uint8ArrayWriter");
        var p = function(e3) {
          if (e3._data instanceof c) {
            e3._data = e3._data.getContent();
            e3.options.binary = true;
            e3.options.base64 = false;
            if (n.getTypeOf(e3._data) === "uint8array") {
              var r3 = e3._data;
              e3._data = new Uint8Array(r3.length);
              if (r3.length !== 0) {
                e3._data.set(r3, 0);
              }
            }
          }
          return e3._data;
        };
        var m = function(e3) {
          var r3 = p(e3), t3 = n.getTypeOf(r3);
          if (t3 === "string") {
            if (!e3.options.binary) {
              if (a.nodebuffer) {
                return u(r3, "utf-8");
              }
            }
            return e3.asBinary();
          }
          return r3;
        };
        var b = function(e3) {
          var r3 = p(this);
          if (r3 === null || typeof r3 === "undefined") {
            return "";
          }
          if (this.options.base64) {
            r3 = l.decode(r3);
          }
          if (e3 && this.options.binary) {
            r3 = y.utf8decode(r3);
          } else {
            r3 = n.transformTo("string", r3);
          }
          if (!e3 && !this.options.binary) {
            r3 = n.transformTo("string", y.utf8encode(r3));
          }
          return r3;
        };
        var g = function(e3, r3, t3) {
          this.name = e3;
          this.dir = t3.dir;
          this.date = t3.date;
          this.comment = t3.comment;
          this._data = r3;
          this.options = t3;
          this._initialMetadata = { dir: t3.dir, date: t3.date };
        };
        g.prototype = { asText: function() {
          return b.call(this, true);
        }, asBinary: function() {
          return b.call(this, false);
        }, asNodeBuffer: function() {
          var e3 = m(this);
          return n.transformTo("nodebuffer", e3);
        }, asUint8Array: function() {
          var e3 = m(this);
          return n.transformTo("uint8array", e3);
        }, asArrayBuffer: function() {
          return this.asUint8Array().buffer;
        } };
        var w = function(e3, r3) {
          var t3 = "", a2;
          for (a2 = 0; a2 < r3; a2++) {
            t3 += String.fromCharCode(e3 & 255);
            e3 = e3 >>> 8;
          }
          return t3;
        };
        var k = function() {
          var e3 = {}, r3, t3;
          for (r3 = 0; r3 < arguments.length; r3++) {
            for (t3 in arguments[r3]) {
              if (arguments[r3].hasOwnProperty(t3) && typeof e3[t3] === "undefined") {
                e3[t3] = arguments[r3][t3];
              }
            }
          }
          return e3;
        };
        var E = function(e3) {
          e3 = e3 || {};
          if (e3.base64 === true && (e3.binary === null || e3.binary === void 0)) {
            e3.binary = true;
          }
          e3 = k(e3, f);
          e3.date = e3.date || new Date();
          if (e3.compression !== null)
            e3.compression = e3.compression.toUpperCase();
          return e3;
        };
        var S = function(e3, r3, t3) {
          var a2 = n.getTypeOf(r3), i2;
          t3 = E(t3);
          if (t3.createFolders && (i2 = _(e3))) {
            C.call(this, i2, true);
          }
          if (t3.dir || r3 === null || typeof r3 === "undefined") {
            t3.base64 = false;
            t3.binary = false;
            r3 = null;
          } else if (a2 === "string") {
            if (t3.binary && !t3.base64) {
              if (t3.optimizedBinaryString !== true) {
                r3 = n.string2binary(r3);
              }
            }
          } else {
            t3.base64 = false;
            t3.binary = true;
            if (!a2 && !(r3 instanceof c)) {
              throw new Error("The data of '" + e3 + "' is in an unsupported format !");
            }
            if (a2 === "arraybuffer") {
              r3 = n.transformTo("uint8array", r3);
            }
          }
          var s2 = new g(e3, r3, t3);
          this.files[e3] = s2;
          return s2;
        };
        var _ = function(e3) {
          if (e3.slice(-1) == "/") {
            e3 = e3.substring(0, e3.length - 1);
          }
          var r3 = e3.lastIndexOf("/");
          return r3 > 0 ? e3.substring(0, r3) : "";
        };
        var C = function(e3, r3) {
          if (e3.slice(-1) != "/") {
            e3 += "/";
          }
          r3 = typeof r3 !== "undefined" ? r3 : false;
          if (!this.files[e3]) {
            S.call(this, e3, null, { dir: true, createFolders: r3 });
          }
          return this.files[e3];
        };
        var B = function(e3, r3) {
          var t3 = new c(), a2;
          if (e3._data instanceof c) {
            t3.uncompressedSize = e3._data.uncompressedSize;
            t3.crc32 = e3._data.crc32;
            if (t3.uncompressedSize === 0 || e3.dir) {
              r3 = o["STORE"];
              t3.compressedContent = "";
              t3.crc32 = 0;
            } else if (e3._data.compressionMethod === r3.magic) {
              t3.compressedContent = e3._data.getCompressedContent();
            } else {
              a2 = e3._data.getContent();
              t3.compressedContent = r3.compress(n.transformTo(r3.compressInputType, a2));
            }
          } else {
            a2 = m(e3);
            if (!a2 || a2.length === 0 || e3.dir) {
              r3 = o["STORE"];
              a2 = "";
            }
            t3.uncompressedSize = a2.length;
            t3.crc32 = i(a2);
            t3.compressedContent = r3.compress(n.transformTo(r3.compressInputType, a2));
          }
          t3.compressedSize = t3.compressedContent.length;
          t3.compressionMethod = r3.magic;
          return t3;
        };
        var T = function(e3, r3, t3, a2) {
          var f2 = t3.compressedContent, l2 = n.transformTo("string", h.utf8encode(r3.name)), o2 = r3.comment || "", c2 = n.transformTo("string", h.utf8encode(o2)), u2 = l2.length !== r3.name.length, d2 = c2.length !== o2.length, v2 = r3.options, p2, m2, b2 = "", g2 = "", k2 = "", E2, S2;
          if (r3._initialMetadata.dir !== r3.dir) {
            E2 = r3.dir;
          } else {
            E2 = v2.dir;
          }
          if (r3._initialMetadata.date !== r3.date) {
            S2 = r3.date;
          } else {
            S2 = v2.date;
          }
          p2 = S2.getHours();
          p2 = p2 << 6;
          p2 = p2 | S2.getMinutes();
          p2 = p2 << 5;
          p2 = p2 | S2.getSeconds() / 2;
          m2 = S2.getFullYear() - 1980;
          m2 = m2 << 4;
          m2 = m2 | S2.getMonth() + 1;
          m2 = m2 << 5;
          m2 = m2 | S2.getDate();
          if (u2) {
            g2 = w(1, 1) + w(i(l2), 4) + l2;
            b2 += "up" + w(g2.length, 2) + g2;
          }
          if (d2) {
            k2 = w(1, 1) + w(this.crc32(c2), 4) + c2;
            b2 += "uc" + w(k2.length, 2) + k2;
          }
          var _2 = "";
          _2 += "\n\0";
          _2 += u2 || d2 ? "\0\b" : "\0\0";
          _2 += t3.compressionMethod;
          _2 += w(p2, 2);
          _2 += w(m2, 2);
          _2 += w(t3.crc32, 4);
          _2 += w(t3.compressedSize, 4);
          _2 += w(t3.uncompressedSize, 4);
          _2 += w(l2.length, 2);
          _2 += w(b2.length, 2);
          var C2 = s.LOCAL_FILE_HEADER + _2 + l2 + b2;
          var B2 = s.CENTRAL_FILE_HEADER + "\0" + _2 + w(c2.length, 2) + "\0\0\0\0" + (E2 === true ? "\0\0\0" : "\0\0\0\0") + w(a2, 4) + l2 + b2 + c2;
          return { fileRecord: C2, dirRecord: B2, compressedObject: t3 };
        };
        var y = { load: function(e3, r3) {
          throw new Error("Load method is not defined. Is the file jszip-load.js included ?");
        }, filter: function(e3) {
          var r3 = [], t3, a2, n2, i2;
          for (t3 in this.files) {
            if (!this.files.hasOwnProperty(t3)) {
              continue;
            }
            n2 = this.files[t3];
            i2 = new g(n2.name, n2._data, k(n2.options));
            a2 = t3.slice(this.root.length, t3.length);
            if (t3.slice(0, this.root.length) === this.root && e3(a2, i2)) {
              r3.push(i2);
            }
          }
          return r3;
        }, file: function(e3, r3, t3) {
          if (arguments.length === 1) {
            if (n.isRegExp(e3)) {
              var a2 = e3;
              return this.filter(function(e4, r4) {
                return !r4.dir && a2.test(e4);
              });
            } else {
              return this.filter(function(r4, t4) {
                return !t4.dir && r4 === e3;
              })[0] || null;
            }
          } else {
            e3 = this.root + e3;
            S.call(this, e3, r3, t3);
          }
          return this;
        }, folder: function(e3) {
          if (!e3) {
            return this;
          }
          if (n.isRegExp(e3)) {
            return this.filter(function(r4, t4) {
              return t4.dir && e3.test(r4);
            });
          }
          var r3 = this.root + e3;
          var t3 = C.call(this, r3);
          var a2 = this.clone();
          a2.root = t3.name;
          return a2;
        }, remove: function(e3) {
          e3 = this.root + e3;
          var r3 = this.files[e3];
          if (!r3) {
            if (e3.slice(-1) != "/") {
              e3 += "/";
            }
            r3 = this.files[e3];
          }
          if (r3 && !r3.dir) {
            delete this.files[e3];
          } else {
            var t3 = this.filter(function(r4, t4) {
              return t4.name.slice(0, e3.length) === e3;
            });
            for (var a2 = 0; a2 < t3.length; a2++) {
              delete this.files[t3[a2].name];
            }
          }
          return this;
        }, generate: function(e3) {
          e3 = k(e3 || {}, { base64: true, compression: "STORE", type: "base64", comment: null });
          n.checkSupport(e3.type);
          var r3 = [], t3 = 0, a2 = 0, i2, f2, c2 = n.transformTo("string", this.utf8encode(e3.comment || this.comment || ""));
          for (var u2 in this.files) {
            if (!this.files.hasOwnProperty(u2)) {
              continue;
            }
            var h2 = this.files[u2];
            var p2 = h2.options.compression || e3.compression.toUpperCase();
            var m2 = o[p2];
            if (!m2) {
              throw new Error(p2 + " is not a valid compression method !");
            }
            var b2 = B.call(this, h2, m2);
            var g2 = T.call(this, u2, h2, b2, t3);
            t3 += g2.fileRecord.length + b2.compressedSize;
            a2 += g2.dirRecord.length;
            r3.push(g2);
          }
          var E2 = "";
          E2 = s.CENTRAL_DIRECTORY_END + "\0\0\0\0" + w(r3.length, 2) + w(r3.length, 2) + w(a2, 4) + w(t3, 4) + w(c2.length, 2) + c2;
          var S2 = e3.type.toLowerCase();
          if (S2 === "uint8array" || S2 === "arraybuffer" || S2 === "blob" || S2 === "nodebuffer") {
            i2 = new v(t3 + a2 + E2.length);
          } else {
            i2 = new d(t3 + a2 + E2.length);
          }
          for (f2 = 0; f2 < r3.length; f2++) {
            i2.append(r3[f2].fileRecord);
            i2.append(r3[f2].compressedObject.compressedContent);
          }
          for (f2 = 0; f2 < r3.length; f2++) {
            i2.append(r3[f2].dirRecord);
          }
          i2.append(E2);
          var _2 = i2.finalize();
          switch (e3.type.toLowerCase()) {
            case "uint8array":
              ;
            case "arraybuffer":
              ;
            case "nodebuffer":
              return n.transformTo(e3.type.toLowerCase(), _2);
            case "blob":
              return n.arrayBuffer2Blob(n.transformTo("arraybuffer", _2));
            case "base64":
              return e3.base64 ? l.encode(_2) : _2;
            default:
              return _2;
          }
        }, crc32: function(e3, r3) {
          return i(e3, r3);
        }, utf8encode: function(e3) {
          return n.transformTo("string", h.utf8encode(e3));
        }, utf8decode: function(e3) {
          return h.utf8decode(e3);
        } };
        r2.exports = y;
      }, { "./base64": 1, "./compressedObject": 2, "./compressions": 3, "./crc32": 4, "./defaults": 6, "./nodeBuffer": 11, "./signature": 14, "./stringWriter": 16, "./support": 17, "./uint8ArrayWriter": 19, "./utf8": 20, "./utils": 21 }], 14: [function(e2, r2, t2) {
        "use strict";
        t2.LOCAL_FILE_HEADER = "PK";
        t2.CENTRAL_FILE_HEADER = "PK";
        t2.CENTRAL_DIRECTORY_END = "PK";
        t2.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK\x07";
        t2.ZIP64_CENTRAL_DIRECTORY_END = "PK";
        t2.DATA_DESCRIPTOR = "PK\x07\b";
      }, {}], 15: [function(e2, r2, t2) {
        "use strict";
        var a = e2("./dataReader");
        var n = e2("./utils");
        function i(e3, r3) {
          this.data = e3;
          if (!r3) {
            this.data = n.string2binary(this.data);
          }
          this.length = this.data.length;
          this.index = 0;
        }
        i.prototype = new a();
        i.prototype.byteAt = function(e3) {
          return this.data.charCodeAt(e3);
        };
        i.prototype.lastIndexOfSignature = function(e3) {
          return this.data.lastIndexOf(e3);
        };
        i.prototype.readData = function(e3) {
          this.checkOffset(e3);
          var r3 = this.data.slice(this.index, this.index + e3);
          this.index += e3;
          return r3;
        };
        r2.exports = i;
      }, { "./dataReader": 5, "./utils": 21 }], 16: [function(e2, r2, t2) {
        "use strict";
        var a = e2("./utils");
        var n = function() {
          this.data = [];
        };
        n.prototype = { append: function(e3) {
          e3 = a.transformTo("string", e3);
          this.data.push(e3);
        }, finalize: function() {
          return this.data.join("");
        } };
        r2.exports = n;
      }, { "./utils": 21 }], 17: [function(e2, r2, t2) {
        (function(e3) {
          "use strict";
          t2.base64 = true;
          t2.array = true;
          t2.string = true;
          t2.arraybuffer = typeof ArrayBuffer !== "undefined" && typeof Uint8Array !== "undefined";
          t2.nodebuffer = typeof e3 !== "undefined";
          t2.uint8array = typeof Uint8Array !== "undefined";
          if (typeof ArrayBuffer === "undefined") {
            t2.blob = false;
          } else {
            var r3 = new ArrayBuffer(0);
            try {
              t2.blob = new Blob([r3], { type: "application/zip" }).size === 0;
            } catch (a) {
              try {
                var n = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;
                var i = new n();
                i.append(r3);
                t2.blob = i.getBlob("application/zip").size === 0;
              } catch (a2) {
                t2.blob = false;
              }
            }
          }
        }).call(this, typeof Buffer !== "undefined" ? Buffer : void 0);
      }, {}], 18: [function(e2, r2, t2) {
        "use strict";
        var a = e2("./dataReader");
        function n(e3) {
          if (e3) {
            this.data = e3;
            this.length = this.data.length;
            this.index = 0;
          }
        }
        n.prototype = new a();
        n.prototype.byteAt = function(e3) {
          return this.data[e3];
        };
        n.prototype.lastIndexOfSignature = function(e3) {
          var r3 = e3.charCodeAt(0), t3 = e3.charCodeAt(1), a2 = e3.charCodeAt(2), n2 = e3.charCodeAt(3);
          for (var i = this.length - 4; i >= 0; --i) {
            if (this.data[i] === r3 && this.data[i + 1] === t3 && this.data[i + 2] === a2 && this.data[i + 3] === n2) {
              return i;
            }
          }
          return -1;
        };
        n.prototype.readData = function(e3) {
          this.checkOffset(e3);
          if (e3 === 0) {
            return new Uint8Array(0);
          }
          var r3 = this.data.subarray(this.index, this.index + e3);
          this.index += e3;
          return r3;
        };
        r2.exports = n;
      }, { "./dataReader": 5 }], 19: [function(e2, r2, t2) {
        "use strict";
        var a = e2("./utils");
        var n = function(e3) {
          this.data = new Uint8Array(e3);
          this.index = 0;
        };
        n.prototype = { append: function(e3) {
          if (e3.length !== 0) {
            e3 = a.transformTo("uint8array", e3);
            this.data.set(e3, this.index);
            this.index += e3.length;
          }
        }, finalize: function() {
          return this.data;
        } };
        r2.exports = n;
      }, { "./utils": 21 }], 20: [function(e2, r2, t2) {
        "use strict";
        var a = e2("./utils");
        var n = e2("./support");
        var i = e2("./nodeBuffer");
        var s = new Array(256);
        for (var f = 0; f < 256; f++) {
          s[f] = f >= 252 ? 6 : f >= 248 ? 5 : f >= 240 ? 4 : f >= 224 ? 3 : f >= 192 ? 2 : 1;
        }
        s[254] = s[254] = 1;
        var l = function(e3) {
          var r3, t3, a2, i2, s2, f2 = e3.length, l2 = 0;
          for (i2 = 0; i2 < f2; i2++) {
            t3 = e3.charCodeAt(i2);
            if ((t3 & 64512) === 55296 && i2 + 1 < f2) {
              a2 = e3.charCodeAt(i2 + 1);
              if ((a2 & 64512) === 56320) {
                t3 = 65536 + (t3 - 55296 << 10) + (a2 - 56320);
                i2++;
              }
            }
            l2 += t3 < 128 ? 1 : t3 < 2048 ? 2 : t3 < 65536 ? 3 : 4;
          }
          if (n.uint8array) {
            r3 = new Uint8Array(l2);
          } else {
            r3 = new Array(l2);
          }
          for (s2 = 0, i2 = 0; s2 < l2; i2++) {
            t3 = e3.charCodeAt(i2);
            if ((t3 & 64512) === 55296 && i2 + 1 < f2) {
              a2 = e3.charCodeAt(i2 + 1);
              if ((a2 & 64512) === 56320) {
                t3 = 65536 + (t3 - 55296 << 10) + (a2 - 56320);
                i2++;
              }
            }
            if (t3 < 128) {
              r3[s2++] = t3;
            } else if (t3 < 2048) {
              r3[s2++] = 192 | t3 >>> 6;
              r3[s2++] = 128 | t3 & 63;
            } else if (t3 < 65536) {
              r3[s2++] = 224 | t3 >>> 12;
              r3[s2++] = 128 | t3 >>> 6 & 63;
              r3[s2++] = 128 | t3 & 63;
            } else {
              r3[s2++] = 240 | t3 >>> 18;
              r3[s2++] = 128 | t3 >>> 12 & 63;
              r3[s2++] = 128 | t3 >>> 6 & 63;
              r3[s2++] = 128 | t3 & 63;
            }
          }
          return r3;
        };
        var o = function(e3, r3) {
          var t3;
          r3 = r3 || e3.length;
          if (r3 > e3.length) {
            r3 = e3.length;
          }
          t3 = r3 - 1;
          while (t3 >= 0 && (e3[t3] & 192) === 128) {
            t3--;
          }
          if (t3 < 0) {
            return r3;
          }
          if (t3 === 0) {
            return r3;
          }
          return t3 + s[e3[t3]] > r3 ? t3 : r3;
        };
        var c = function(e3) {
          var r3, t3, n2, i2, f2;
          var l2 = e3.length;
          var o2 = new Array(l2 * 2);
          for (n2 = 0, t3 = 0; t3 < l2; ) {
            i2 = e3[t3++];
            if (i2 < 128) {
              o2[n2++] = i2;
              continue;
            }
            f2 = s[i2];
            if (f2 > 4) {
              o2[n2++] = 65533;
              t3 += f2 - 1;
              continue;
            }
            i2 &= f2 === 2 ? 31 : f2 === 3 ? 15 : 7;
            while (f2 > 1 && t3 < l2) {
              i2 = i2 << 6 | e3[t3++] & 63;
              f2--;
            }
            if (f2 > 1) {
              o2[n2++] = 65533;
              continue;
            }
            if (i2 < 65536) {
              o2[n2++] = i2;
            } else {
              i2 -= 65536;
              o2[n2++] = 55296 | i2 >> 10 & 1023;
              o2[n2++] = 56320 | i2 & 1023;
            }
          }
          if (o2.length !== n2) {
            if (o2.subarray) {
              o2 = o2.subarray(0, n2);
            } else {
              o2.length = n2;
            }
          }
          return a.applyFromCharCode(o2);
        };
        t2.utf8encode = function u(e3) {
          if (n.nodebuffer) {
            return i(e3, "utf-8");
          }
          return l(e3);
        };
        t2.utf8decode = function h(e3) {
          if (n.nodebuffer) {
            return a.transformTo("nodebuffer", e3).toString("utf-8");
          }
          e3 = a.transformTo(n.uint8array ? "uint8array" : "array", e3);
          var r3 = [], t3 = 0, i2 = e3.length, s2 = 65536;
          while (t3 < i2) {
            var f2 = o(e3, Math.min(t3 + s2, i2));
            if (n.uint8array) {
              r3.push(c(e3.subarray(t3, f2)));
            } else {
              r3.push(c(e3.slice(t3, f2)));
            }
            t3 = f2;
          }
          return r3.join("");
        };
      }, { "./nodeBuffer": 11, "./support": 17, "./utils": 21 }], 21: [function(e2, r2, t2) {
        "use strict";
        var a = e2("./support");
        var n = e2("./compressions");
        var i = e2("./nodeBuffer");
        t2.string2binary = function(e3) {
          var r3 = "";
          for (var t3 = 0; t3 < e3.length; t3++) {
            r3 += String.fromCharCode(e3.charCodeAt(t3) & 255);
          }
          return r3;
        };
        t2.arrayBuffer2Blob = function(e3) {
          t2.checkSupport("blob");
          try {
            return new Blob([e3], { type: "application/zip" });
          } catch (r3) {
            try {
              var a2 = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;
              var n2 = new a2();
              n2.append(e3);
              return n2.getBlob("application/zip");
            } catch (r4) {
              throw new Error("Bug : can't construct the Blob.");
            }
          }
        };
        function s(e3) {
          return e3;
        }
        function f(e3, r3) {
          for (var t3 = 0; t3 < e3.length; ++t3) {
            r3[t3] = e3.charCodeAt(t3) & 255;
          }
          return r3;
        }
        function l(e3) {
          var r3 = 65536;
          var a2 = [], n2 = e3.length, s2 = t2.getTypeOf(e3), f2 = 0, l2 = true;
          try {
            switch (s2) {
              case "uint8array":
                String.fromCharCode.apply(null, new Uint8Array(0));
                break;
              case "nodebuffer":
                String.fromCharCode.apply(null, i(0));
                break;
            }
          } catch (o2) {
            l2 = false;
          }
          if (!l2) {
            var c2 = "";
            for (var u = 0; u < e3.length; u++) {
              c2 += String.fromCharCode(e3[u]);
            }
            return c2;
          }
          while (f2 < n2 && r3 > 1) {
            try {
              if (s2 === "array" || s2 === "nodebuffer") {
                a2.push(String.fromCharCode.apply(null, e3.slice(f2, Math.min(f2 + r3, n2))));
              } else {
                a2.push(String.fromCharCode.apply(null, e3.subarray(f2, Math.min(f2 + r3, n2))));
              }
              f2 += r3;
            } catch (o2) {
              r3 = Math.floor(r3 / 2);
            }
          }
          return a2.join("");
        }
        t2.applyFromCharCode = l;
        function o(e3, r3) {
          for (var t3 = 0; t3 < e3.length; t3++) {
            r3[t3] = e3[t3];
          }
          return r3;
        }
        var c = {};
        c["string"] = { string: s, array: function(e3) {
          return f(e3, new Array(e3.length));
        }, arraybuffer: function(e3) {
          return c["string"]["uint8array"](e3).buffer;
        }, uint8array: function(e3) {
          return f(e3, new Uint8Array(e3.length));
        }, nodebuffer: function(e3) {
          return f(e3, i(e3.length));
        } };
        c["array"] = { string: l, array: s, arraybuffer: function(e3) {
          return new Uint8Array(e3).buffer;
        }, uint8array: function(e3) {
          return new Uint8Array(e3);
        }, nodebuffer: function(e3) {
          return i(e3);
        } };
        c["arraybuffer"] = { string: function(e3) {
          return l(new Uint8Array(e3));
        }, array: function(e3) {
          return o(new Uint8Array(e3), new Array(e3.byteLength));
        }, arraybuffer: s, uint8array: function(e3) {
          return new Uint8Array(e3);
        }, nodebuffer: function(e3) {
          return i(new Uint8Array(e3));
        } };
        c["uint8array"] = { string: l, array: function(e3) {
          return o(e3, new Array(e3.length));
        }, arraybuffer: function(e3) {
          return e3.buffer;
        }, uint8array: s, nodebuffer: function(e3) {
          return i(e3);
        } };
        c["nodebuffer"] = { string: l, array: function(e3) {
          return o(e3, new Array(e3.length));
        }, arraybuffer: function(e3) {
          return c["nodebuffer"]["uint8array"](e3).buffer;
        }, uint8array: function(e3) {
          return o(e3, new Uint8Array(e3.length));
        }, nodebuffer: s };
        t2.transformTo = function(e3, r3) {
          if (!r3) {
            r3 = "";
          }
          if (!e3) {
            return r3;
          }
          t2.checkSupport(e3);
          var a2 = t2.getTypeOf(r3);
          var n2 = c[a2][e3](r3);
          return n2;
        };
        t2.getTypeOf = function(e3) {
          if (typeof e3 === "string") {
            return "string";
          }
          if (Object.prototype.toString.call(e3) === "[object Array]") {
            return "array";
          }
          if (a.nodebuffer && i.test(e3)) {
            return "nodebuffer";
          }
          if (a.uint8array && e3 instanceof Uint8Array) {
            return "uint8array";
          }
          if (a.arraybuffer && e3 instanceof ArrayBuffer) {
            return "arraybuffer";
          }
        };
        t2.checkSupport = function(e3) {
          var r3 = a[e3.toLowerCase()];
          if (!r3) {
            throw new Error(e3 + " is not supported by this browser");
          }
        };
        t2.MAX_VALUE_16BITS = 65535;
        t2.MAX_VALUE_32BITS = -1;
        t2.pretty = function(e3) {
          var r3 = "", t3, a2;
          for (a2 = 0; a2 < (e3 || "").length; a2++) {
            t3 = e3.charCodeAt(a2);
            r3 += "\\x" + (t3 < 16 ? "0" : "") + t3.toString(16).toUpperCase();
          }
          return r3;
        };
        t2.findCompression = function(e3) {
          for (var r3 in n) {
            if (!n.hasOwnProperty(r3)) {
              continue;
            }
            if (n[r3].magic === e3) {
              return n[r3];
            }
          }
          return null;
        };
        t2.isRegExp = function(e3) {
          return Object.prototype.toString.call(e3) === "[object RegExp]";
        };
      }, { "./compressions": 3, "./nodeBuffer": 11, "./support": 17 }], 22: [function(e2, r2, t2) {
        "use strict";
        var a = e2("./stringReader");
        var n = e2("./nodeBufferReader");
        var i = e2("./uint8ArrayReader");
        var s = e2("./utils");
        var f = e2("./signature");
        var l = e2("./zipEntry");
        var o = e2("./support");
        var c = e2("./object");
        function u(e3, r3) {
          this.files = [];
          this.loadOptions = r3;
          if (e3) {
            this.load(e3);
          }
        }
        u.prototype = { checkSignature: function(e3) {
          var r3 = this.reader.readString(4);
          if (r3 !== e3) {
            throw new Error("Corrupted zip or bug : unexpected signature (" + s.pretty(r3) + ", expected " + s.pretty(e3) + ")");
          }
        }, readBlockEndOfCentral: function() {
          this.diskNumber = this.reader.readInt(2);
          this.diskWithCentralDirStart = this.reader.readInt(2);
          this.centralDirRecordsOnThisDisk = this.reader.readInt(2);
          this.centralDirRecords = this.reader.readInt(2);
          this.centralDirSize = this.reader.readInt(4);
          this.centralDirOffset = this.reader.readInt(4);
          this.zipCommentLength = this.reader.readInt(2);
          this.zipComment = this.reader.readString(this.zipCommentLength);
          this.zipComment = c.utf8decode(this.zipComment);
        }, readBlockZip64EndOfCentral: function() {
          this.zip64EndOfCentralSize = this.reader.readInt(8);
          this.versionMadeBy = this.reader.readString(2);
          this.versionNeeded = this.reader.readInt(2);
          this.diskNumber = this.reader.readInt(4);
          this.diskWithCentralDirStart = this.reader.readInt(4);
          this.centralDirRecordsOnThisDisk = this.reader.readInt(8);
          this.centralDirRecords = this.reader.readInt(8);
          this.centralDirSize = this.reader.readInt(8);
          this.centralDirOffset = this.reader.readInt(8);
          this.zip64ExtensibleData = {};
          var e3 = this.zip64EndOfCentralSize - 44, r3 = 0, t3, a2, n2;
          while (r3 < e3) {
            t3 = this.reader.readInt(2);
            a2 = this.reader.readInt(4);
            n2 = this.reader.readString(a2);
            this.zip64ExtensibleData[t3] = { id: t3, length: a2, value: n2 };
          }
        }, readBlockZip64EndOfCentralLocator: function() {
          this.diskWithZip64CentralDirStart = this.reader.readInt(4);
          this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8);
          this.disksCount = this.reader.readInt(4);
          if (this.disksCount > 1) {
            throw new Error("Multi-volumes zip are not supported");
          }
        }, readLocalFiles: function() {
          var e3, r3;
          for (e3 = 0; e3 < this.files.length; e3++) {
            r3 = this.files[e3];
            this.reader.setIndex(r3.localHeaderOffset);
            this.checkSignature(f.LOCAL_FILE_HEADER);
            r3.readLocalPart(this.reader);
            r3.handleUTF8();
          }
        }, readCentralDir: function() {
          var e3;
          this.reader.setIndex(this.centralDirOffset);
          while (this.reader.readString(4) === f.CENTRAL_FILE_HEADER) {
            e3 = new l({ zip64: this.zip64 }, this.loadOptions);
            e3.readCentralPart(this.reader);
            this.files.push(e3);
          }
        }, readEndOfCentral: function() {
          var e3 = this.reader.lastIndexOfSignature(f.CENTRAL_DIRECTORY_END);
          if (e3 === -1) {
            throw new Error("Corrupted zip : can't find end of central directory");
          }
          this.reader.setIndex(e3);
          this.checkSignature(f.CENTRAL_DIRECTORY_END);
          this.readBlockEndOfCentral();
          if (this.diskNumber === s.MAX_VALUE_16BITS || this.diskWithCentralDirStart === s.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === s.MAX_VALUE_16BITS || this.centralDirRecords === s.MAX_VALUE_16BITS || this.centralDirSize === s.MAX_VALUE_32BITS || this.centralDirOffset === s.MAX_VALUE_32BITS) {
            this.zip64 = true;
            e3 = this.reader.lastIndexOfSignature(f.ZIP64_CENTRAL_DIRECTORY_LOCATOR);
            if (e3 === -1) {
              throw new Error("Corrupted zip : can't find the ZIP64 end of central directory locator");
            }
            this.reader.setIndex(e3);
            this.checkSignature(f.ZIP64_CENTRAL_DIRECTORY_LOCATOR);
            this.readBlockZip64EndOfCentralLocator();
            this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir);
            this.checkSignature(f.ZIP64_CENTRAL_DIRECTORY_END);
            this.readBlockZip64EndOfCentral();
          }
        }, prepareReader: function(e3) {
          var r3 = s.getTypeOf(e3);
          if (r3 === "string" && !o.uint8array) {
            this.reader = new a(e3, this.loadOptions.optimizedBinaryString);
          } else if (r3 === "nodebuffer") {
            this.reader = new n(e3);
          } else {
            this.reader = new i(s.transformTo("uint8array", e3));
          }
        }, load: function(e3) {
          this.prepareReader(e3);
          this.readEndOfCentral();
          this.readCentralDir();
          this.readLocalFiles();
        } };
        r2.exports = u;
      }, { "./nodeBufferReader": 12, "./object": 13, "./signature": 14, "./stringReader": 15, "./support": 17, "./uint8ArrayReader": 18, "./utils": 21, "./zipEntry": 23 }], 23: [function(e2, r2, t2) {
        "use strict";
        var a = e2("./stringReader");
        var n = e2("./utils");
        var i = e2("./compressedObject");
        var s = e2("./object");
        function f(e3, r3) {
          this.options = e3;
          this.loadOptions = r3;
        }
        f.prototype = { isEncrypted: function() {
          return (this.bitFlag & 1) === 1;
        }, useUTF8: function() {
          return (this.bitFlag & 2048) === 2048;
        }, prepareCompressedContent: function(e3, r3, t3) {
          return function() {
            var a2 = e3.index;
            e3.setIndex(r3);
            var n2 = e3.readData(t3);
            e3.setIndex(a2);
            return n2;
          };
        }, prepareContent: function(e3, r3, t3, a2, i2) {
          return function() {
            var e4 = n.transformTo(a2.uncompressInputType, this.getCompressedContent());
            var r4 = a2.uncompress(e4);
            if (r4.length !== i2) {
              throw new Error("Bug : uncompressed data size mismatch");
            }
            return r4;
          };
        }, readLocalPart: function(e3) {
          var r3, t3;
          e3.skip(22);
          this.fileNameLength = e3.readInt(2);
          t3 = e3.readInt(2);
          this.fileName = e3.readString(this.fileNameLength);
          e3.skip(t3);
          if (this.compressedSize == -1 || this.uncompressedSize == -1) {
            throw new Error("Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)");
          }
          r3 = n.findCompression(this.compressionMethod);
          if (r3 === null) {
            throw new Error("Corrupted zip : compression " + n.pretty(this.compressionMethod) + " unknown (inner file : " + this.fileName + ")");
          }
          this.decompressed = new i();
          this.decompressed.compressedSize = this.compressedSize;
          this.decompressed.uncompressedSize = this.uncompressedSize;
          this.decompressed.crc32 = this.crc32;
          this.decompressed.compressionMethod = this.compressionMethod;
          this.decompressed.getCompressedContent = this.prepareCompressedContent(e3, e3.index, this.compressedSize, r3);
          this.decompressed.getContent = this.prepareContent(e3, e3.index, this.compressedSize, r3, this.uncompressedSize);
          if (this.loadOptions.checkCRC32) {
            this.decompressed = n.transformTo("string", this.decompressed.getContent());
            if (s.crc32(this.decompressed) !== this.crc32) {
              throw new Error("Corrupted zip : CRC32 mismatch");
            }
          }
        }, readCentralPart: function(e3) {
          this.versionMadeBy = e3.readString(2);
          this.versionNeeded = e3.readInt(2);
          this.bitFlag = e3.readInt(2);
          this.compressionMethod = e3.readString(2);
          this.date = e3.readDate();
          this.crc32 = e3.readInt(4);
          this.compressedSize = e3.readInt(4);
          this.uncompressedSize = e3.readInt(4);
          this.fileNameLength = e3.readInt(2);
          this.extraFieldsLength = e3.readInt(2);
          this.fileCommentLength = e3.readInt(2);
          this.diskNumberStart = e3.readInt(2);
          this.internalFileAttributes = e3.readInt(2);
          this.externalFileAttributes = e3.readInt(4);
          this.localHeaderOffset = e3.readInt(4);
          if (this.isEncrypted()) {
            throw new Error("Encrypted zip are not supported");
          }
          this.fileName = e3.readString(this.fileNameLength);
          this.readExtraFields(e3);
          this.parseZIP64ExtraField(e3);
          this.fileComment = e3.readString(this.fileCommentLength);
          this.dir = this.externalFileAttributes & 16 ? true : false;
        }, parseZIP64ExtraField: function(e3) {
          if (!this.extraFields[1]) {
            return;
          }
          var r3 = new a(this.extraFields[1].value);
          if (this.uncompressedSize === n.MAX_VALUE_32BITS) {
            this.uncompressedSize = r3.readInt(8);
          }
          if (this.compressedSize === n.MAX_VALUE_32BITS) {
            this.compressedSize = r3.readInt(8);
          }
          if (this.localHeaderOffset === n.MAX_VALUE_32BITS) {
            this.localHeaderOffset = r3.readInt(8);
          }
          if (this.diskNumberStart === n.MAX_VALUE_32BITS) {
            this.diskNumberStart = r3.readInt(4);
          }
        }, readExtraFields: function(e3) {
          var r3 = e3.index, t3, a2, n2;
          this.extraFields = this.extraFields || {};
          while (e3.index < r3 + this.extraFieldsLength) {
            t3 = e3.readInt(2);
            a2 = e3.readInt(2);
            n2 = e3.readString(a2);
            this.extraFields[t3] = { id: t3, length: a2, value: n2 };
          }
        }, handleUTF8: function() {
          if (this.useUTF8()) {
            this.fileName = s.utf8decode(this.fileName);
            this.fileComment = s.utf8decode(this.fileComment);
          } else {
            var e3 = this.findExtraFieldUnicodePath();
            if (e3 !== null) {
              this.fileName = e3;
            }
            var r3 = this.findExtraFieldUnicodeComment();
            if (r3 !== null) {
              this.fileComment = r3;
            }
          }
        }, findExtraFieldUnicodePath: function() {
          var e3 = this.extraFields[28789];
          if (e3) {
            var r3 = new a(e3.value);
            if (r3.readInt(1) !== 1) {
              return null;
            }
            if (s.crc32(this.fileName) !== r3.readInt(4)) {
              return null;
            }
            return s.utf8decode(r3.readString(e3.length - 5));
          }
          return null;
        }, findExtraFieldUnicodeComment: function() {
          var e3 = this.extraFields[25461];
          if (e3) {
            var r3 = new a(e3.value);
            if (r3.readInt(1) !== 1) {
              return null;
            }
            if (s.crc32(this.fileComment) !== r3.readInt(4)) {
              return null;
            }
            return s.utf8decode(r3.readString(e3.length - 5));
          }
          return null;
        } };
        r2.exports = f;
      }, { "./compressedObject": 2, "./object": 13, "./stringReader": 15, "./utils": 21 }], 24: [function(e2, r2, t2) {
        "use strict";
        var a = e2("./lib/utils/common").assign;
        var n = e2("./lib/deflate");
        var i = e2("./lib/inflate");
        var s = e2("./lib/zlib/constants");
        var f = {};
        a(f, n, i, s);
        r2.exports = f;
      }, { "./lib/deflate": 25, "./lib/inflate": 26, "./lib/utils/common": 27, "./lib/zlib/constants": 30 }], 25: [function(e2, r2, t2) {
        "use strict";
        var a = e2("./zlib/deflate.js");
        var n = e2("./utils/common");
        var i = e2("./utils/strings");
        var s = e2("./zlib/messages");
        var f = e2("./zlib/zstream");
        var l = 0;
        var o = 4;
        var c = 0;
        var u = 1;
        var h = -1;
        var d = 0;
        var v = 8;
        var p = function(e3) {
          this.options = n.assign({ level: h, method: v, chunkSize: 16384, windowBits: 15, memLevel: 8, strategy: d, to: "" }, e3 || {});
          var r3 = this.options;
          if (r3.raw && r3.windowBits > 0) {
            r3.windowBits = -r3.windowBits;
          } else if (r3.gzip && r3.windowBits > 0 && r3.windowBits < 16) {
            r3.windowBits += 16;
          }
          this.err = 0;
          this.msg = "";
          this.ended = false;
          this.chunks = [];
          this.strm = new f();
          this.strm.avail_out = 0;
          var t3 = a.deflateInit2(this.strm, r3.level, r3.method, r3.windowBits, r3.memLevel, r3.strategy);
          if (t3 !== c) {
            throw new Error(s[t3]);
          }
          if (r3.header) {
            a.deflateSetHeader(this.strm, r3.header);
          }
        };
        p.prototype.push = function(e3, r3) {
          var t3 = this.strm;
          var s2 = this.options.chunkSize;
          var f2, h2;
          if (this.ended) {
            return false;
          }
          h2 = r3 === ~~r3 ? r3 : r3 === true ? o : l;
          if (typeof e3 === "string") {
            t3.input = i.string2buf(e3);
          } else {
            t3.input = e3;
          }
          t3.next_in = 0;
          t3.avail_in = t3.input.length;
          do {
            if (t3.avail_out === 0) {
              t3.output = new n.Buf8(s2);
              t3.next_out = 0;
              t3.avail_out = s2;
            }
            f2 = a.deflate(t3, h2);
            if (f2 !== u && f2 !== c) {
              this.onEnd(f2);
              this.ended = true;
              return false;
            }
            if (t3.avail_out === 0 || t3.avail_in === 0 && h2 === o) {
              if (this.options.to === "string") {
                this.onData(i.buf2binstring(n.shrinkBuf(t3.output, t3.next_out)));
              } else {
                this.onData(n.shrinkBuf(t3.output, t3.next_out));
              }
            }
          } while ((t3.avail_in > 0 || t3.avail_out === 0) && f2 !== u);
          if (h2 === o) {
            f2 = a.deflateEnd(this.strm);
            this.onEnd(f2);
            this.ended = true;
            return f2 === c;
          }
          return true;
        };
        p.prototype.onData = function(e3) {
          this.chunks.push(e3);
        };
        p.prototype.onEnd = function(e3) {
          if (e3 === c) {
            if (this.options.to === "string") {
              this.result = this.chunks.join("");
            } else {
              this.result = n.flattenChunks(this.chunks);
            }
          }
          this.chunks = [];
          this.err = e3;
          this.msg = this.strm.msg;
        };
        function m(e3, r3) {
          var t3 = new p(r3);
          t3.push(e3, true);
          if (t3.err) {
            throw t3.msg;
          }
          return t3.result;
        }
        function b(e3, r3) {
          r3 = r3 || {};
          r3.raw = true;
          return m(e3, r3);
        }
        function g(e3, r3) {
          r3 = r3 || {};
          r3.gzip = true;
          return m(e3, r3);
        }
        t2.Deflate = p;
        t2.deflate = m;
        t2.deflateRaw = b;
        t2.gzip = g;
      }, { "./utils/common": 27, "./utils/strings": 28, "./zlib/deflate.js": 32, "./zlib/messages": 37, "./zlib/zstream": 39 }], 26: [function(e2, r2, t2) {
        "use strict";
        var a = e2("./zlib/inflate.js");
        var n = e2("./utils/common");
        var i = e2("./utils/strings");
        var s = e2("./zlib/constants");
        var f = e2("./zlib/messages");
        var l = e2("./zlib/zstream");
        var o = e2("./zlib/gzheader");
        var c = function(e3) {
          this.options = n.assign({ chunkSize: 16384, windowBits: 0, to: "" }, e3 || {});
          var r3 = this.options;
          if (r3.raw && r3.windowBits >= 0 && r3.windowBits < 16) {
            r3.windowBits = -r3.windowBits;
            if (r3.windowBits === 0) {
              r3.windowBits = -15;
            }
          }
          if (r3.windowBits >= 0 && r3.windowBits < 16 && !(e3 && e3.windowBits)) {
            r3.windowBits += 32;
          }
          if (r3.windowBits > 15 && r3.windowBits < 48) {
            if ((r3.windowBits & 15) === 0) {
              r3.windowBits |= 15;
            }
          }
          this.err = 0;
          this.msg = "";
          this.ended = false;
          this.chunks = [];
          this.strm = new l();
          this.strm.avail_out = 0;
          var t3 = a.inflateInit2(this.strm, r3.windowBits);
          if (t3 !== s.Z_OK) {
            throw new Error(f[t3]);
          }
          this.header = new o();
          a.inflateGetHeader(this.strm, this.header);
        };
        c.prototype.push = function(e3, r3) {
          var t3 = this.strm;
          var f2 = this.options.chunkSize;
          var l2, o2;
          var c2, u2, h2;
          if (this.ended) {
            return false;
          }
          o2 = r3 === ~~r3 ? r3 : r3 === true ? s.Z_FINISH : s.Z_NO_FLUSH;
          if (typeof e3 === "string") {
            t3.input = i.binstring2buf(e3);
          } else {
            t3.input = e3;
          }
          t3.next_in = 0;
          t3.avail_in = t3.input.length;
          do {
            if (t3.avail_out === 0) {
              t3.output = new n.Buf8(f2);
              t3.next_out = 0;
              t3.avail_out = f2;
            }
            l2 = a.inflate(t3, s.Z_NO_FLUSH);
            if (l2 !== s.Z_STREAM_END && l2 !== s.Z_OK) {
              this.onEnd(l2);
              this.ended = true;
              return false;
            }
            if (t3.next_out) {
              if (t3.avail_out === 0 || l2 === s.Z_STREAM_END || t3.avail_in === 0 && o2 === s.Z_FINISH) {
                if (this.options.to === "string") {
                  c2 = i.utf8border(t3.output, t3.next_out);
                  u2 = t3.next_out - c2;
                  h2 = i.buf2string(t3.output, c2);
                  t3.next_out = u2;
                  t3.avail_out = f2 - u2;
                  if (u2) {
                    n.arraySet(t3.output, t3.output, c2, u2, 0);
                  }
                  this.onData(h2);
                } else {
                  this.onData(n.shrinkBuf(t3.output, t3.next_out));
                }
              }
            }
          } while (t3.avail_in > 0 && l2 !== s.Z_STREAM_END);
          if (l2 === s.Z_STREAM_END) {
            o2 = s.Z_FINISH;
          }
          if (o2 === s.Z_FINISH) {
            l2 = a.inflateEnd(this.strm);
            this.onEnd(l2);
            this.ended = true;
            return l2 === s.Z_OK;
          }
          return true;
        };
        c.prototype.onData = function(e3) {
          this.chunks.push(e3);
        };
        c.prototype.onEnd = function(e3) {
          if (e3 === s.Z_OK) {
            if (this.options.to === "string") {
              this.result = this.chunks.join("");
            } else {
              this.result = n.flattenChunks(this.chunks);
            }
          }
          this.chunks = [];
          this.err = e3;
          this.msg = this.strm.msg;
        };
        function u(e3, r3) {
          var t3 = new c(r3);
          t3.push(e3, true);
          if (t3.err) {
            throw t3.msg;
          }
          return t3.result;
        }
        function h(e3, r3) {
          r3 = r3 || {};
          r3.raw = true;
          return u(e3, r3);
        }
        t2.Inflate = c;
        t2.inflate = u;
        t2.inflateRaw = h;
        t2.ungzip = u;
      }, { "./utils/common": 27, "./utils/strings": 28, "./zlib/constants": 30, "./zlib/gzheader": 33, "./zlib/inflate.js": 35, "./zlib/messages": 37, "./zlib/zstream": 39 }], 27: [function(e2, r2, t2) {
        "use strict";
        var a = typeof Uint8Array !== "undefined" && typeof Uint16Array !== "undefined" && typeof Int32Array !== "undefined";
        t2.assign = function(e3) {
          var r3 = Array.prototype.slice.call(arguments, 1);
          while (r3.length) {
            var t3 = r3.shift();
            if (!t3) {
              continue;
            }
            if (typeof t3 !== "object") {
              throw new TypeError(t3 + "must be non-object");
            }
            for (var a2 in t3) {
              if (t3.hasOwnProperty(a2)) {
                e3[a2] = t3[a2];
              }
            }
          }
          return e3;
        };
        t2.shrinkBuf = function(e3, r3) {
          if (e3.length === r3) {
            return e3;
          }
          if (e3.subarray) {
            return e3.subarray(0, r3);
          }
          e3.length = r3;
          return e3;
        };
        var n = { arraySet: function(e3, r3, t3, a2, n2) {
          if (r3.subarray && e3.subarray) {
            e3.set(r3.subarray(t3, t3 + a2), n2);
            return;
          }
          for (var i2 = 0; i2 < a2; i2++) {
            e3[n2 + i2] = r3[t3 + i2];
          }
        }, flattenChunks: function(e3) {
          var r3, t3, a2, n2, i2, s;
          a2 = 0;
          for (r3 = 0, t3 = e3.length; r3 < t3; r3++) {
            a2 += e3[r3].length;
          }
          s = new Uint8Array(a2);
          n2 = 0;
          for (r3 = 0, t3 = e3.length; r3 < t3; r3++) {
            i2 = e3[r3];
            s.set(i2, n2);
            n2 += i2.length;
          }
          return s;
        } };
        var i = { arraySet: function(e3, r3, t3, a2, n2) {
          for (var i2 = 0; i2 < a2; i2++) {
            e3[n2 + i2] = r3[t3 + i2];
          }
        }, flattenChunks: function(e3) {
          return [].concat.apply([], e3);
        } };
        t2.setTyped = function(e3) {
          if (e3) {
            t2.Buf8 = Uint8Array;
            t2.Buf16 = Uint16Array;
            t2.Buf32 = Int32Array;
            t2.assign(t2, n);
          } else {
            t2.Buf8 = Array;
            t2.Buf16 = Array;
            t2.Buf32 = Array;
            t2.assign(t2, i);
          }
        };
        t2.setTyped(a);
      }, {}], 28: [function(e2, r2, t2) {
        "use strict";
        var a = e2("./common");
        var n = true;
        var i = true;
        try {
          String.fromCharCode.apply(null, [0]);
        } catch (s) {
          n = false;
        }
        try {
          String.fromCharCode.apply(null, new Uint8Array(1));
        } catch (s) {
          i = false;
        }
        var f = new a.Buf8(256);
        for (var l = 0; l < 256; l++) {
          f[l] = l >= 252 ? 6 : l >= 248 ? 5 : l >= 240 ? 4 : l >= 224 ? 3 : l >= 192 ? 2 : 1;
        }
        f[254] = f[254] = 1;
        t2.string2buf = function(e3) {
          var r3, t3, n2, i2, s, f2 = e3.length, l2 = 0;
          for (i2 = 0; i2 < f2; i2++) {
            t3 = e3.charCodeAt(i2);
            if ((t3 & 64512) === 55296 && i2 + 1 < f2) {
              n2 = e3.charCodeAt(i2 + 1);
              if ((n2 & 64512) === 56320) {
                t3 = 65536 + (t3 - 55296 << 10) + (n2 - 56320);
                i2++;
              }
            }
            l2 += t3 < 128 ? 1 : t3 < 2048 ? 2 : t3 < 65536 ? 3 : 4;
          }
          r3 = new a.Buf8(l2);
          for (s = 0, i2 = 0; s < l2; i2++) {
            t3 = e3.charCodeAt(i2);
            if ((t3 & 64512) === 55296 && i2 + 1 < f2) {
              n2 = e3.charCodeAt(i2 + 1);
              if ((n2 & 64512) === 56320) {
                t3 = 65536 + (t3 - 55296 << 10) + (n2 - 56320);
                i2++;
              }
            }
            if (t3 < 128) {
              r3[s++] = t3;
            } else if (t3 < 2048) {
              r3[s++] = 192 | t3 >>> 6;
              r3[s++] = 128 | t3 & 63;
            } else if (t3 < 65536) {
              r3[s++] = 224 | t3 >>> 12;
              r3[s++] = 128 | t3 >>> 6 & 63;
              r3[s++] = 128 | t3 & 63;
            } else {
              r3[s++] = 240 | t3 >>> 18;
              r3[s++] = 128 | t3 >>> 12 & 63;
              r3[s++] = 128 | t3 >>> 6 & 63;
              r3[s++] = 128 | t3 & 63;
            }
          }
          return r3;
        };
        function o(e3, r3) {
          if (r3 < 65537) {
            if (e3.subarray && i || !e3.subarray && n) {
              return String.fromCharCode.apply(null, a.shrinkBuf(e3, r3));
            }
          }
          var t3 = "";
          for (var s = 0; s < r3; s++) {
            t3 += String.fromCharCode(e3[s]);
          }
          return t3;
        }
        t2.buf2binstring = function(e3) {
          return o(e3, e3.length);
        };
        t2.binstring2buf = function(e3) {
          var r3 = new a.Buf8(e3.length);
          for (var t3 = 0, n2 = r3.length; t3 < n2; t3++) {
            r3[t3] = e3.charCodeAt(t3);
          }
          return r3;
        };
        t2.buf2string = function(e3, r3) {
          var t3, a2, n2, i2;
          var s = r3 || e3.length;
          var l2 = new Array(s * 2);
          for (a2 = 0, t3 = 0; t3 < s; ) {
            n2 = e3[t3++];
            if (n2 < 128) {
              l2[a2++] = n2;
              continue;
            }
            i2 = f[n2];
            if (i2 > 4) {
              l2[a2++] = 65533;
              t3 += i2 - 1;
              continue;
            }
            n2 &= i2 === 2 ? 31 : i2 === 3 ? 15 : 7;
            while (i2 > 1 && t3 < s) {
              n2 = n2 << 6 | e3[t3++] & 63;
              i2--;
            }
            if (i2 > 1) {
              l2[a2++] = 65533;
              continue;
            }
            if (n2 < 65536) {
              l2[a2++] = n2;
            } else {
              n2 -= 65536;
              l2[a2++] = 55296 | n2 >> 10 & 1023;
              l2[a2++] = 56320 | n2 & 1023;
            }
          }
          return o(l2, a2);
        };
        t2.utf8border = function(e3, r3) {
          var t3;
          r3 = r3 || e3.length;
          if (r3 > e3.length) {
            r3 = e3.length;
          }
          t3 = r3 - 1;
          while (t3 >= 0 && (e3[t3] & 192) === 128) {
            t3--;
          }
          if (t3 < 0) {
            return r3;
          }
          if (t3 === 0) {
            return r3;
          }
          return t3 + f[e3[t3]] > r3 ? t3 : r3;
        };
      }, { "./common": 27 }], 29: [function(e2, r2, t2) {
        "use strict";
        function a(e3, r3, t3, a2) {
          var n = e3 & 65535 | 0, i = e3 >>> 16 & 65535 | 0, s = 0;
          while (t3 !== 0) {
            s = t3 > 2e3 ? 2e3 : t3;
            t3 -= s;
            do {
              n = n + r3[a2++] | 0;
              i = i + n | 0;
            } while (--s);
            n %= 65521;
            i %= 65521;
          }
          return n | i << 16 | 0;
        }
        r2.exports = a;
      }, {}], 30: [function(e2, r2, t2) {
        r2.exports = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 };
      }, {}], 31: [function(e2, r2, t2) {
        "use strict";
        function a() {
          var e3, r3 = [];
          for (var t3 = 0; t3 < 256; t3++) {
            e3 = t3;
            for (var a2 = 0; a2 < 8; a2++) {
              e3 = e3 & 1 ? 3988292384 ^ e3 >>> 1 : e3 >>> 1;
            }
            r3[t3] = e3;
          }
          return r3;
        }
        var n = a();
        function i(e3, r3, t3, a2) {
          var i2 = n, s = a2 + t3;
          e3 = e3 ^ -1;
          for (var f = a2; f < s; f++) {
            e3 = e3 >>> 8 ^ i2[(e3 ^ r3[f]) & 255];
          }
          return e3 ^ -1;
        }
        r2.exports = i;
      }, {}], 32: [function(e2, r2, t2) {
        "use strict";
        var a = e2("../utils/common");
        var n = e2("./trees");
        var i = e2("./adler32");
        var s = e2("./crc32");
        var f = e2("./messages");
        var l = 0;
        var o = 1;
        var c = 3;
        var u = 4;
        var h = 5;
        var d = 0;
        var v = 1;
        var p = -2;
        var m = -3;
        var b = -5;
        var g = -1;
        var w = 1;
        var k = 2;
        var E = 3;
        var S = 4;
        var _ = 0;
        var C = 2;
        var B = 8;
        var T = 9;
        var y = 15;
        var x = 8;
        var A = 29;
        var I = 256;
        var R = I + 1 + A;
        var F = 30;
        var O = 19;
        var D = 2 * R + 1;
        var P = 15;
        var N = 3;
        var L = 258;
        var M = L + N + 1;
        var U = 32;
        var z = 42;
        var H = 69;
        var W = 73;
        var V = 91;
        var X = 103;
        var G = 113;
        var j = 666;
        var K = 1;
        var $2 = 2;
        var Y = 3;
        var Z = 4;
        var J = 3;
        function Q(e3, r3) {
          e3.msg = f[r3];
          return r3;
        }
        function q(e3) {
          return (e3 << 1) - (e3 > 4 ? 9 : 0);
        }
        function ee(e3) {
          var r3 = e3.length;
          while (--r3 >= 0) {
            e3[r3] = 0;
          }
        }
        function re(e3) {
          var r3 = e3.state;
          var t3 = r3.pending;
          if (t3 > e3.avail_out) {
            t3 = e3.avail_out;
          }
          if (t3 === 0) {
            return;
          }
          a.arraySet(e3.output, r3.pending_buf, r3.pending_out, t3, e3.next_out);
          e3.next_out += t3;
          r3.pending_out += t3;
          e3.total_out += t3;
          e3.avail_out -= t3;
          r3.pending -= t3;
          if (r3.pending === 0) {
            r3.pending_out = 0;
          }
        }
        function te(e3, r3) {
          n._tr_flush_block(e3, e3.block_start >= 0 ? e3.block_start : -1, e3.strstart - e3.block_start, r3);
          e3.block_start = e3.strstart;
          re(e3.strm);
        }
        function ae(e3, r3) {
          e3.pending_buf[e3.pending++] = r3;
        }
        function ne(e3, r3) {
          e3.pending_buf[e3.pending++] = r3 >>> 8 & 255;
          e3.pending_buf[e3.pending++] = r3 & 255;
        }
        function ie(e3, r3, t3, n2) {
          var f2 = e3.avail_in;
          if (f2 > n2) {
            f2 = n2;
          }
          if (f2 === 0) {
            return 0;
          }
          e3.avail_in -= f2;
          a.arraySet(r3, e3.input, e3.next_in, f2, t3);
          if (e3.state.wrap === 1) {
            e3.adler = i(e3.adler, r3, f2, t3);
          } else if (e3.state.wrap === 2) {
            e3.adler = s(e3.adler, r3, f2, t3);
          }
          e3.next_in += f2;
          e3.total_in += f2;
          return f2;
        }
        function se(e3, r3) {
          var t3 = e3.max_chain_length;
          var a2 = e3.strstart;
          var n2;
          var i2;
          var s2 = e3.prev_length;
          var f2 = e3.nice_match;
          var l2 = e3.strstart > e3.w_size - M ? e3.strstart - (e3.w_size - M) : 0;
          var o2 = e3.window;
          var c2 = e3.w_mask;
          var u2 = e3.prev;
          var h2 = e3.strstart + L;
          var d2 = o2[a2 + s2 - 1];
          var v2 = o2[a2 + s2];
          if (e3.prev_length >= e3.good_match) {
            t3 >>= 2;
          }
          if (f2 > e3.lookahead) {
            f2 = e3.lookahead;
          }
          do {
            n2 = r3;
            if (o2[n2 + s2] !== v2 || o2[n2 + s2 - 1] !== d2 || o2[n2] !== o2[a2] || o2[++n2] !== o2[a2 + 1]) {
              continue;
            }
            a2 += 2;
            n2++;
            do {
            } while (o2[++a2] === o2[++n2] && o2[++a2] === o2[++n2] && o2[++a2] === o2[++n2] && o2[++a2] === o2[++n2] && o2[++a2] === o2[++n2] && o2[++a2] === o2[++n2] && o2[++a2] === o2[++n2] && o2[++a2] === o2[++n2] && a2 < h2);
            i2 = L - (h2 - a2);
            a2 = h2 - L;
            if (i2 > s2) {
              e3.match_start = r3;
              s2 = i2;
              if (i2 >= f2) {
                break;
              }
              d2 = o2[a2 + s2 - 1];
              v2 = o2[a2 + s2];
            }
          } while ((r3 = u2[r3 & c2]) > l2 && --t3 !== 0);
          if (s2 <= e3.lookahead) {
            return s2;
          }
          return e3.lookahead;
        }
        function fe(e3) {
          var r3 = e3.w_size;
          var t3, n2, i2, s2, f2;
          do {
            s2 = e3.window_size - e3.lookahead - e3.strstart;
            if (e3.strstart >= r3 + (r3 - M)) {
              a.arraySet(e3.window, e3.window, r3, r3, 0);
              e3.match_start -= r3;
              e3.strstart -= r3;
              e3.block_start -= r3;
              n2 = e3.hash_size;
              t3 = n2;
              do {
                i2 = e3.head[--t3];
                e3.head[t3] = i2 >= r3 ? i2 - r3 : 0;
              } while (--n2);
              n2 = r3;
              t3 = n2;
              do {
                i2 = e3.prev[--t3];
                e3.prev[t3] = i2 >= r3 ? i2 - r3 : 0;
              } while (--n2);
              s2 += r3;
            }
            if (e3.strm.avail_in === 0) {
              break;
            }
            n2 = ie(e3.strm, e3.window, e3.strstart + e3.lookahead, s2);
            e3.lookahead += n2;
            if (e3.lookahead + e3.insert >= N) {
              f2 = e3.strstart - e3.insert;
              e3.ins_h = e3.window[f2];
              e3.ins_h = (e3.ins_h << e3.hash_shift ^ e3.window[f2 + 1]) & e3.hash_mask;
              while (e3.insert) {
                e3.ins_h = (e3.ins_h << e3.hash_shift ^ e3.window[f2 + N - 1]) & e3.hash_mask;
                e3.prev[f2 & e3.w_mask] = e3.head[e3.ins_h];
                e3.head[e3.ins_h] = f2;
                f2++;
                e3.insert--;
                if (e3.lookahead + e3.insert < N) {
                  break;
                }
              }
            }
          } while (e3.lookahead < M && e3.strm.avail_in !== 0);
        }
        function le(e3, r3) {
          var t3 = 65535;
          if (t3 > e3.pending_buf_size - 5) {
            t3 = e3.pending_buf_size - 5;
          }
          for (; ; ) {
            if (e3.lookahead <= 1) {
              fe(e3);
              if (e3.lookahead === 0 && r3 === l) {
                return K;
              }
              if (e3.lookahead === 0) {
                break;
              }
            }
            e3.strstart += e3.lookahead;
            e3.lookahead = 0;
            var a2 = e3.block_start + t3;
            if (e3.strstart === 0 || e3.strstart >= a2) {
              e3.lookahead = e3.strstart - a2;
              e3.strstart = a2;
              te(e3, false);
              if (e3.strm.avail_out === 0) {
                return K;
              }
            }
            if (e3.strstart - e3.block_start >= e3.w_size - M) {
              te(e3, false);
              if (e3.strm.avail_out === 0) {
                return K;
              }
            }
          }
          e3.insert = 0;
          if (r3 === u) {
            te(e3, true);
            if (e3.strm.avail_out === 0) {
              return Y;
            }
            return Z;
          }
          if (e3.strstart > e3.block_start) {
            te(e3, false);
            if (e3.strm.avail_out === 0) {
              return K;
            }
          }
          return K;
        }
        function oe(e3, r3) {
          var t3;
          var a2;
          for (; ; ) {
            if (e3.lookahead < M) {
              fe(e3);
              if (e3.lookahead < M && r3 === l) {
                return K;
              }
              if (e3.lookahead === 0) {
                break;
              }
            }
            t3 = 0;
            if (e3.lookahead >= N) {
              e3.ins_h = (e3.ins_h << e3.hash_shift ^ e3.window[e3.strstart + N - 1]) & e3.hash_mask;
              t3 = e3.prev[e3.strstart & e3.w_mask] = e3.head[e3.ins_h];
              e3.head[e3.ins_h] = e3.strstart;
            }
            if (t3 !== 0 && e3.strstart - t3 <= e3.w_size - M) {
              e3.match_length = se(e3, t3);
            }
            if (e3.match_length >= N) {
              a2 = n._tr_tally(e3, e3.strstart - e3.match_start, e3.match_length - N);
              e3.lookahead -= e3.match_length;
              if (e3.match_length <= e3.max_lazy_match && e3.lookahead >= N) {
                e3.match_length--;
                do {
                  e3.strstart++;
                  e3.ins_h = (e3.ins_h << e3.hash_shift ^ e3.window[e3.strstart + N - 1]) & e3.hash_mask;
                  t3 = e3.prev[e3.strstart & e3.w_mask] = e3.head[e3.ins_h];
                  e3.head[e3.ins_h] = e3.strstart;
                } while (--e3.match_length !== 0);
                e3.strstart++;
              } else {
                e3.strstart += e3.match_length;
                e3.match_length = 0;
                e3.ins_h = e3.window[e3.strstart];
                e3.ins_h = (e3.ins_h << e3.hash_shift ^ e3.window[e3.strstart + 1]) & e3.hash_mask;
              }
            } else {
              a2 = n._tr_tally(e3, 0, e3.window[e3.strstart]);
              e3.lookahead--;
              e3.strstart++;
            }
            if (a2) {
              te(e3, false);
              if (e3.strm.avail_out === 0) {
                return K;
              }
            }
          }
          e3.insert = e3.strstart < N - 1 ? e3.strstart : N - 1;
          if (r3 === u) {
            te(e3, true);
            if (e3.strm.avail_out === 0) {
              return Y;
            }
            return Z;
          }
          if (e3.last_lit) {
            te(e3, false);
            if (e3.strm.avail_out === 0) {
              return K;
            }
          }
          return $2;
        }
        function ce(e3, r3) {
          var t3;
          var a2;
          var i2;
          for (; ; ) {
            if (e3.lookahead < M) {
              fe(e3);
              if (e3.lookahead < M && r3 === l) {
                return K;
              }
              if (e3.lookahead === 0) {
                break;
              }
            }
            t3 = 0;
            if (e3.lookahead >= N) {
              e3.ins_h = (e3.ins_h << e3.hash_shift ^ e3.window[e3.strstart + N - 1]) & e3.hash_mask;
              t3 = e3.prev[e3.strstart & e3.w_mask] = e3.head[e3.ins_h];
              e3.head[e3.ins_h] = e3.strstart;
            }
            e3.prev_length = e3.match_length;
            e3.prev_match = e3.match_start;
            e3.match_length = N - 1;
            if (t3 !== 0 && e3.prev_length < e3.max_lazy_match && e3.strstart - t3 <= e3.w_size - M) {
              e3.match_length = se(e3, t3);
              if (e3.match_length <= 5 && (e3.strategy === w || e3.match_length === N && e3.strstart - e3.match_start > 4096)) {
                e3.match_length = N - 1;
              }
            }
            if (e3.prev_length >= N && e3.match_length <= e3.prev_length) {
              i2 = e3.strstart + e3.lookahead - N;
              a2 = n._tr_tally(e3, e3.strstart - 1 - e3.prev_match, e3.prev_length - N);
              e3.lookahead -= e3.prev_length - 1;
              e3.prev_length -= 2;
              do {
                if (++e3.strstart <= i2) {
                  e3.ins_h = (e3.ins_h << e3.hash_shift ^ e3.window[e3.strstart + N - 1]) & e3.hash_mask;
                  t3 = e3.prev[e3.strstart & e3.w_mask] = e3.head[e3.ins_h];
                  e3.head[e3.ins_h] = e3.strstart;
                }
              } while (--e3.prev_length !== 0);
              e3.match_available = 0;
              e3.match_length = N - 1;
              e3.strstart++;
              if (a2) {
                te(e3, false);
                if (e3.strm.avail_out === 0) {
                  return K;
                }
              }
            } else if (e3.match_available) {
              a2 = n._tr_tally(e3, 0, e3.window[e3.strstart - 1]);
              if (a2) {
                te(e3, false);
              }
              e3.strstart++;
              e3.lookahead--;
              if (e3.strm.avail_out === 0) {
                return K;
              }
            } else {
              e3.match_available = 1;
              e3.strstart++;
              e3.lookahead--;
            }
          }
          if (e3.match_available) {
            a2 = n._tr_tally(e3, 0, e3.window[e3.strstart - 1]);
            e3.match_available = 0;
          }
          e3.insert = e3.strstart < N - 1 ? e3.strstart : N - 1;
          if (r3 === u) {
            te(e3, true);
            if (e3.strm.avail_out === 0) {
              return Y;
            }
            return Z;
          }
          if (e3.last_lit) {
            te(e3, false);
            if (e3.strm.avail_out === 0) {
              return K;
            }
          }
          return $2;
        }
        function ue(e3, r3) {
          var t3;
          var a2;
          var i2, s2;
          var f2 = e3.window;
          for (; ; ) {
            if (e3.lookahead <= L) {
              fe(e3);
              if (e3.lookahead <= L && r3 === l) {
                return K;
              }
              if (e3.lookahead === 0) {
                break;
              }
            }
            e3.match_length = 0;
            if (e3.lookahead >= N && e3.strstart > 0) {
              i2 = e3.strstart - 1;
              a2 = f2[i2];
              if (a2 === f2[++i2] && a2 === f2[++i2] && a2 === f2[++i2]) {
                s2 = e3.strstart + L;
                do {
                } while (a2 === f2[++i2] && a2 === f2[++i2] && a2 === f2[++i2] && a2 === f2[++i2] && a2 === f2[++i2] && a2 === f2[++i2] && a2 === f2[++i2] && a2 === f2[++i2] && i2 < s2);
                e3.match_length = L - (s2 - i2);
                if (e3.match_length > e3.lookahead) {
                  e3.match_length = e3.lookahead;
                }
              }
            }
            if (e3.match_length >= N) {
              t3 = n._tr_tally(e3, 1, e3.match_length - N);
              e3.lookahead -= e3.match_length;
              e3.strstart += e3.match_length;
              e3.match_length = 0;
            } else {
              t3 = n._tr_tally(e3, 0, e3.window[e3.strstart]);
              e3.lookahead--;
              e3.strstart++;
            }
            if (t3) {
              te(e3, false);
              if (e3.strm.avail_out === 0) {
                return K;
              }
            }
          }
          e3.insert = 0;
          if (r3 === u) {
            te(e3, true);
            if (e3.strm.avail_out === 0) {
              return Y;
            }
            return Z;
          }
          if (e3.last_lit) {
            te(e3, false);
            if (e3.strm.avail_out === 0) {
              return K;
            }
          }
          return $2;
        }
        function he(e3, r3) {
          var t3;
          for (; ; ) {
            if (e3.lookahead === 0) {
              fe(e3);
              if (e3.lookahead === 0) {
                if (r3 === l) {
                  return K;
                }
                break;
              }
            }
            e3.match_length = 0;
            t3 = n._tr_tally(e3, 0, e3.window[e3.strstart]);
            e3.lookahead--;
            e3.strstart++;
            if (t3) {
              te(e3, false);
              if (e3.strm.avail_out === 0) {
                return K;
              }
            }
          }
          e3.insert = 0;
          if (r3 === u) {
            te(e3, true);
            if (e3.strm.avail_out === 0) {
              return Y;
            }
            return Z;
          }
          if (e3.last_lit) {
            te(e3, false);
            if (e3.strm.avail_out === 0) {
              return K;
            }
          }
          return $2;
        }
        var de = function(e3, r3, t3, a2, n2) {
          this.good_length = e3;
          this.max_lazy = r3;
          this.nice_length = t3;
          this.max_chain = a2;
          this.func = n2;
        };
        var ve;
        ve = [new de(0, 0, 0, 0, le), new de(4, 4, 8, 4, oe), new de(4, 5, 16, 8, oe), new de(4, 6, 32, 32, oe), new de(4, 4, 16, 16, ce), new de(8, 16, 32, 32, ce), new de(8, 16, 128, 128, ce), new de(8, 32, 128, 256, ce), new de(32, 128, 258, 1024, ce), new de(32, 258, 258, 4096, ce)];
        function pe(e3) {
          e3.window_size = 2 * e3.w_size;
          ee(e3.head);
          e3.max_lazy_match = ve[e3.level].max_lazy;
          e3.good_match = ve[e3.level].good_length;
          e3.nice_match = ve[e3.level].nice_length;
          e3.max_chain_length = ve[e3.level].max_chain;
          e3.strstart = 0;
          e3.block_start = 0;
          e3.lookahead = 0;
          e3.insert = 0;
          e3.match_length = e3.prev_length = N - 1;
          e3.match_available = 0;
          e3.ins_h = 0;
        }
        function me() {
          this.strm = null;
          this.status = 0;
          this.pending_buf = null;
          this.pending_buf_size = 0;
          this.pending_out = 0;
          this.pending = 0;
          this.wrap = 0;
          this.gzhead = null;
          this.gzindex = 0;
          this.method = B;
          this.last_flush = -1;
          this.w_size = 0;
          this.w_bits = 0;
          this.w_mask = 0;
          this.window = null;
          this.window_size = 0;
          this.prev = null;
          this.head = null;
          this.ins_h = 0;
          this.hash_size = 0;
          this.hash_bits = 0;
          this.hash_mask = 0;
          this.hash_shift = 0;
          this.block_start = 0;
          this.match_length = 0;
          this.prev_match = 0;
          this.match_available = 0;
          this.strstart = 0;
          this.match_start = 0;
          this.lookahead = 0;
          this.prev_length = 0;
          this.max_chain_length = 0;
          this.max_lazy_match = 0;
          this.level = 0;
          this.strategy = 0;
          this.good_match = 0;
          this.nice_match = 0;
          this.dyn_ltree = new a.Buf16(D * 2);
          this.dyn_dtree = new a.Buf16((2 * F + 1) * 2);
          this.bl_tree = new a.Buf16((2 * O + 1) * 2);
          ee(this.dyn_ltree);
          ee(this.dyn_dtree);
          ee(this.bl_tree);
          this.l_desc = null;
          this.d_desc = null;
          this.bl_desc = null;
          this.bl_count = new a.Buf16(P + 1);
          this.heap = new a.Buf16(2 * R + 1);
          ee(this.heap);
          this.heap_len = 0;
          this.heap_max = 0;
          this.depth = new a.Buf16(2 * R + 1);
          ee(this.depth);
          this.l_buf = 0;
          this.lit_bufsize = 0;
          this.last_lit = 0;
          this.d_buf = 0;
          this.opt_len = 0;
          this.static_len = 0;
          this.matches = 0;
          this.insert = 0;
          this.bi_buf = 0;
          this.bi_valid = 0;
        }
        function be(e3) {
          var r3;
          if (!e3 || !e3.state) {
            return Q(e3, p);
          }
          e3.total_in = e3.total_out = 0;
          e3.data_type = C;
          r3 = e3.state;
          r3.pending = 0;
          r3.pending_out = 0;
          if (r3.wrap < 0) {
            r3.wrap = -r3.wrap;
          }
          r3.status = r3.wrap ? z : G;
          e3.adler = r3.wrap === 2 ? 0 : 1;
          r3.last_flush = l;
          n._tr_init(r3);
          return d;
        }
        function ge(e3) {
          var r3 = be(e3);
          if (r3 === d) {
            pe(e3.state);
          }
          return r3;
        }
        function we(e3, r3) {
          if (!e3 || !e3.state) {
            return p;
          }
          if (e3.state.wrap !== 2) {
            return p;
          }
          e3.state.gzhead = r3;
          return d;
        }
        function ke(e3, r3, t3, n2, i2, s2) {
          if (!e3) {
            return p;
          }
          var f2 = 1;
          if (r3 === g) {
            r3 = 6;
          }
          if (n2 < 0) {
            f2 = 0;
            n2 = -n2;
          } else if (n2 > 15) {
            f2 = 2;
            n2 -= 16;
          }
          if (i2 < 1 || i2 > T || t3 !== B || n2 < 8 || n2 > 15 || r3 < 0 || r3 > 9 || s2 < 0 || s2 > S) {
            return Q(e3, p);
          }
          if (n2 === 8) {
            n2 = 9;
          }
          var l2 = new me();
          e3.state = l2;
          l2.strm = e3;
          l2.wrap = f2;
          l2.gzhead = null;
          l2.w_bits = n2;
          l2.w_size = 1 << l2.w_bits;
          l2.w_mask = l2.w_size - 1;
          l2.hash_bits = i2 + 7;
          l2.hash_size = 1 << l2.hash_bits;
          l2.hash_mask = l2.hash_size - 1;
          l2.hash_shift = ~~((l2.hash_bits + N - 1) / N);
          l2.window = new a.Buf8(l2.w_size * 2);
          l2.head = new a.Buf16(l2.hash_size);
          l2.prev = new a.Buf16(l2.w_size);
          l2.lit_bufsize = 1 << i2 + 6;
          l2.pending_buf_size = l2.lit_bufsize * 4;
          l2.pending_buf = new a.Buf8(l2.pending_buf_size);
          l2.d_buf = l2.lit_bufsize >> 1;
          l2.l_buf = (1 + 2) * l2.lit_bufsize;
          l2.level = r3;
          l2.strategy = s2;
          l2.method = t3;
          return ge(e3);
        }
        function Ee(e3, r3) {
          return ke(e3, r3, B, y, x, _);
        }
        function Se(e3, r3) {
          var t3, a2;
          var i2, f2;
          if (!e3 || !e3.state || r3 > h || r3 < 0) {
            return e3 ? Q(e3, p) : p;
          }
          a2 = e3.state;
          if (!e3.output || !e3.input && e3.avail_in !== 0 || a2.status === j && r3 !== u) {
            return Q(e3, e3.avail_out === 0 ? b : p);
          }
          a2.strm = e3;
          t3 = a2.last_flush;
          a2.last_flush = r3;
          if (a2.status === z) {
            if (a2.wrap === 2) {
              e3.adler = 0;
              ae(a2, 31);
              ae(a2, 139);
              ae(a2, 8);
              if (!a2.gzhead) {
                ae(a2, 0);
                ae(a2, 0);
                ae(a2, 0);
                ae(a2, 0);
                ae(a2, 0);
                ae(a2, a2.level === 9 ? 2 : a2.strategy >= k || a2.level < 2 ? 4 : 0);
                ae(a2, J);
                a2.status = G;
              } else {
                ae(a2, (a2.gzhead.text ? 1 : 0) + (a2.gzhead.hcrc ? 2 : 0) + (!a2.gzhead.extra ? 0 : 4) + (!a2.gzhead.name ? 0 : 8) + (!a2.gzhead.comment ? 0 : 16));
                ae(a2, a2.gzhead.time & 255);
                ae(a2, a2.gzhead.time >> 8 & 255);
                ae(a2, a2.gzhead.time >> 16 & 255);
                ae(a2, a2.gzhead.time >> 24 & 255);
                ae(a2, a2.level === 9 ? 2 : a2.strategy >= k || a2.level < 2 ? 4 : 0);
                ae(a2, a2.gzhead.os & 255);
                if (a2.gzhead.extra && a2.gzhead.extra.length) {
                  ae(a2, a2.gzhead.extra.length & 255);
                  ae(a2, a2.gzhead.extra.length >> 8 & 255);
                }
                if (a2.gzhead.hcrc) {
                  e3.adler = s(e3.adler, a2.pending_buf, a2.pending, 0);
                }
                a2.gzindex = 0;
                a2.status = H;
              }
            } else {
              var m2 = B + (a2.w_bits - 8 << 4) << 8;
              var g2 = -1;
              if (a2.strategy >= k || a2.level < 2) {
                g2 = 0;
              } else if (a2.level < 6) {
                g2 = 1;
              } else if (a2.level === 6) {
                g2 = 2;
              } else {
                g2 = 3;
              }
              m2 |= g2 << 6;
              if (a2.strstart !== 0) {
                m2 |= U;
              }
              m2 += 31 - m2 % 31;
              a2.status = G;
              ne(a2, m2);
              if (a2.strstart !== 0) {
                ne(a2, e3.adler >>> 16);
                ne(a2, e3.adler & 65535);
              }
              e3.adler = 1;
            }
          }
          if (a2.status === H) {
            if (a2.gzhead.extra) {
              i2 = a2.pending;
              while (a2.gzindex < (a2.gzhead.extra.length & 65535)) {
                if (a2.pending === a2.pending_buf_size) {
                  if (a2.gzhead.hcrc && a2.pending > i2) {
                    e3.adler = s(e3.adler, a2.pending_buf, a2.pending - i2, i2);
                  }
                  re(e3);
                  i2 = a2.pending;
                  if (a2.pending === a2.pending_buf_size) {
                    break;
                  }
                }
                ae(a2, a2.gzhead.extra[a2.gzindex] & 255);
                a2.gzindex++;
              }
              if (a2.gzhead.hcrc && a2.pending > i2) {
                e3.adler = s(e3.adler, a2.pending_buf, a2.pending - i2, i2);
              }
              if (a2.gzindex === a2.gzhead.extra.length) {
                a2.gzindex = 0;
                a2.status = W;
              }
            } else {
              a2.status = W;
            }
          }
          if (a2.status === W) {
            if (a2.gzhead.name) {
              i2 = a2.pending;
              do {
                if (a2.pending === a2.pending_buf_size) {
                  if (a2.gzhead.hcrc && a2.pending > i2) {
                    e3.adler = s(e3.adler, a2.pending_buf, a2.pending - i2, i2);
                  }
                  re(e3);
                  i2 = a2.pending;
                  if (a2.pending === a2.pending_buf_size) {
                    f2 = 1;
                    break;
                  }
                }
                if (a2.gzindex < a2.gzhead.name.length) {
                  f2 = a2.gzhead.name.charCodeAt(a2.gzindex++) & 255;
                } else {
                  f2 = 0;
                }
                ae(a2, f2);
              } while (f2 !== 0);
              if (a2.gzhead.hcrc && a2.pending > i2) {
                e3.adler = s(e3.adler, a2.pending_buf, a2.pending - i2, i2);
              }
              if (f2 === 0) {
                a2.gzindex = 0;
                a2.status = V;
              }
            } else {
              a2.status = V;
            }
          }
          if (a2.status === V) {
            if (a2.gzhead.comment) {
              i2 = a2.pending;
              do {
                if (a2.pending === a2.pending_buf_size) {
                  if (a2.gzhead.hcrc && a2.pending > i2) {
                    e3.adler = s(e3.adler, a2.pending_buf, a2.pending - i2, i2);
                  }
                  re(e3);
                  i2 = a2.pending;
                  if (a2.pending === a2.pending_buf_size) {
                    f2 = 1;
                    break;
                  }
                }
                if (a2.gzindex < a2.gzhead.comment.length) {
                  f2 = a2.gzhead.comment.charCodeAt(a2.gzindex++) & 255;
                } else {
                  f2 = 0;
                }
                ae(a2, f2);
              } while (f2 !== 0);
              if (a2.gzhead.hcrc && a2.pending > i2) {
                e3.adler = s(e3.adler, a2.pending_buf, a2.pending - i2, i2);
              }
              if (f2 === 0) {
                a2.status = X;
              }
            } else {
              a2.status = X;
            }
          }
          if (a2.status === X) {
            if (a2.gzhead.hcrc) {
              if (a2.pending + 2 > a2.pending_buf_size) {
                re(e3);
              }
              if (a2.pending + 2 <= a2.pending_buf_size) {
                ae(a2, e3.adler & 255);
                ae(a2, e3.adler >> 8 & 255);
                e3.adler = 0;
                a2.status = G;
              }
            } else {
              a2.status = G;
            }
          }
          if (a2.pending !== 0) {
            re(e3);
            if (e3.avail_out === 0) {
              a2.last_flush = -1;
              return d;
            }
          } else if (e3.avail_in === 0 && q(r3) <= q(t3) && r3 !== u) {
            return Q(e3, b);
          }
          if (a2.status === j && e3.avail_in !== 0) {
            return Q(e3, b);
          }
          if (e3.avail_in !== 0 || a2.lookahead !== 0 || r3 !== l && a2.status !== j) {
            var w2 = a2.strategy === k ? he(a2, r3) : a2.strategy === E ? ue(a2, r3) : ve[a2.level].func(a2, r3);
            if (w2 === Y || w2 === Z) {
              a2.status = j;
            }
            if (w2 === K || w2 === Y) {
              if (e3.avail_out === 0) {
                a2.last_flush = -1;
              }
              return d;
            }
            if (w2 === $2) {
              if (r3 === o) {
                n._tr_align(a2);
              } else if (r3 !== h) {
                n._tr_stored_block(a2, 0, 0, false);
                if (r3 === c) {
                  ee(a2.head);
                  if (a2.lookahead === 0) {
                    a2.strstart = 0;
                    a2.block_start = 0;
                    a2.insert = 0;
                  }
                }
              }
              re(e3);
              if (e3.avail_out === 0) {
                a2.last_flush = -1;
                return d;
              }
            }
          }
          if (r3 !== u) {
            return d;
          }
          if (a2.wrap <= 0) {
            return v;
          }
          if (a2.wrap === 2) {
            ae(a2, e3.adler & 255);
            ae(a2, e3.adler >> 8 & 255);
            ae(a2, e3.adler >> 16 & 255);
            ae(a2, e3.adler >> 24 & 255);
            ae(a2, e3.total_in & 255);
            ae(a2, e3.total_in >> 8 & 255);
            ae(a2, e3.total_in >> 16 & 255);
            ae(a2, e3.total_in >> 24 & 255);
          } else {
            ne(a2, e3.adler >>> 16);
            ne(a2, e3.adler & 65535);
          }
          re(e3);
          if (a2.wrap > 0) {
            a2.wrap = -a2.wrap;
          }
          return a2.pending !== 0 ? d : v;
        }
        function _e(e3) {
          var r3;
          if (!e3 || !e3.state) {
            return p;
          }
          r3 = e3.state.status;
          if (r3 !== z && r3 !== H && r3 !== W && r3 !== V && r3 !== X && r3 !== G && r3 !== j) {
            return Q(e3, p);
          }
          e3.state = null;
          return r3 === G ? Q(e3, m) : d;
        }
        t2.deflateInit = Ee;
        t2.deflateInit2 = ke;
        t2.deflateReset = ge;
        t2.deflateResetKeep = be;
        t2.deflateSetHeader = we;
        t2.deflate = Se;
        t2.deflateEnd = _e;
        t2.deflateInfo = "pako deflate (from Nodeca project)";
      }, { "../utils/common": 27, "./adler32": 29, "./crc32": 31, "./messages": 37, "./trees": 38 }], 33: [function(e2, r2, t2) {
        "use strict";
        function a() {
          this.text = 0;
          this.time = 0;
          this.xflags = 0;
          this.os = 0;
          this.extra = null;
          this.extra_len = 0;
          this.name = "";
          this.comment = "";
          this.hcrc = 0;
          this.done = false;
        }
        r2.exports = a;
      }, {}], 34: [function(e2, r2, t2) {
        "use strict";
        var a = 30;
        var n = 12;
        r2.exports = function i(e3, r3) {
          var t3;
          var i2;
          var s;
          var f;
          var l;
          var o;
          var c;
          var u;
          var h;
          var d;
          var v;
          var p;
          var m;
          var b;
          var g;
          var w;
          var k;
          var E;
          var S;
          var _;
          var C;
          var B;
          var T;
          var y, x;
          t3 = e3.state;
          i2 = e3.next_in;
          y = e3.input;
          s = i2 + (e3.avail_in - 5);
          f = e3.next_out;
          x = e3.output;
          l = f - (r3 - e3.avail_out);
          o = f + (e3.avail_out - 257);
          c = t3.dmax;
          u = t3.wsize;
          h = t3.whave;
          d = t3.wnext;
          v = t3.window;
          p = t3.hold;
          m = t3.bits;
          b = t3.lencode;
          g = t3.distcode;
          w = (1 << t3.lenbits) - 1;
          k = (1 << t3.distbits) - 1;
          e:
            do {
              if (m < 15) {
                p += y[i2++] << m;
                m += 8;
                p += y[i2++] << m;
                m += 8;
              }
              E = b[p & w];
              r:
                for (; ; ) {
                  S = E >>> 24;
                  p >>>= S;
                  m -= S;
                  S = E >>> 16 & 255;
                  if (S === 0) {
                    x[f++] = E & 65535;
                  } else if (S & 16) {
                    _ = E & 65535;
                    S &= 15;
                    if (S) {
                      if (m < S) {
                        p += y[i2++] << m;
                        m += 8;
                      }
                      _ += p & (1 << S) - 1;
                      p >>>= S;
                      m -= S;
                    }
                    if (m < 15) {
                      p += y[i2++] << m;
                      m += 8;
                      p += y[i2++] << m;
                      m += 8;
                    }
                    E = g[p & k];
                    t:
                      for (; ; ) {
                        S = E >>> 24;
                        p >>>= S;
                        m -= S;
                        S = E >>> 16 & 255;
                        if (S & 16) {
                          C = E & 65535;
                          S &= 15;
                          if (m < S) {
                            p += y[i2++] << m;
                            m += 8;
                            if (m < S) {
                              p += y[i2++] << m;
                              m += 8;
                            }
                          }
                          C += p & (1 << S) - 1;
                          if (C > c) {
                            e3.msg = "invalid distance too far back";
                            t3.mode = a;
                            break e;
                          }
                          p >>>= S;
                          m -= S;
                          S = f - l;
                          if (C > S) {
                            S = C - S;
                            if (S > h) {
                              if (t3.sane) {
                                e3.msg = "invalid distance too far back";
                                t3.mode = a;
                                break e;
                              }
                            }
                            B = 0;
                            T = v;
                            if (d === 0) {
                              B += u - S;
                              if (S < _) {
                                _ -= S;
                                do {
                                  x[f++] = v[B++];
                                } while (--S);
                                B = f - C;
                                T = x;
                              }
                            } else if (d < S) {
                              B += u + d - S;
                              S -= d;
                              if (S < _) {
                                _ -= S;
                                do {
                                  x[f++] = v[B++];
                                } while (--S);
                                B = 0;
                                if (d < _) {
                                  S = d;
                                  _ -= S;
                                  do {
                                    x[f++] = v[B++];
                                  } while (--S);
                                  B = f - C;
                                  T = x;
                                }
                              }
                            } else {
                              B += d - S;
                              if (S < _) {
                                _ -= S;
                                do {
                                  x[f++] = v[B++];
                                } while (--S);
                                B = f - C;
                                T = x;
                              }
                            }
                            while (_ > 2) {
                              x[f++] = T[B++];
                              x[f++] = T[B++];
                              x[f++] = T[B++];
                              _ -= 3;
                            }
                            if (_) {
                              x[f++] = T[B++];
                              if (_ > 1) {
                                x[f++] = T[B++];
                              }
                            }
                          } else {
                            B = f - C;
                            do {
                              x[f++] = x[B++];
                              x[f++] = x[B++];
                              x[f++] = x[B++];
                              _ -= 3;
                            } while (_ > 2);
                            if (_) {
                              x[f++] = x[B++];
                              if (_ > 1) {
                                x[f++] = x[B++];
                              }
                            }
                          }
                        } else if ((S & 64) === 0) {
                          E = g[(E & 65535) + (p & (1 << S) - 1)];
                          continue t;
                        } else {
                          e3.msg = "invalid distance code";
                          t3.mode = a;
                          break e;
                        }
                        break;
                      }
                  } else if ((S & 64) === 0) {
                    E = b[(E & 65535) + (p & (1 << S) - 1)];
                    continue r;
                  } else if (S & 32) {
                    t3.mode = n;
                    break e;
                  } else {
                    e3.msg = "invalid literal/length code";
                    t3.mode = a;
                    break e;
                  }
                  break;
                }
            } while (i2 < s && f < o);
          _ = m >> 3;
          i2 -= _;
          m -= _ << 3;
          p &= (1 << m) - 1;
          e3.next_in = i2;
          e3.next_out = f;
          e3.avail_in = i2 < s ? 5 + (s - i2) : 5 - (i2 - s);
          e3.avail_out = f < o ? 257 + (o - f) : 257 - (f - o);
          t3.hold = p;
          t3.bits = m;
          return;
        };
      }, {}], 35: [function(e2, r2, t2) {
        "use strict";
        var a = e2("../utils/common");
        var n = e2("./adler32");
        var i = e2("./crc32");
        var s = e2("./inffast");
        var f = e2("./inftrees");
        var l = 0;
        var o = 1;
        var c = 2;
        var u = 4;
        var h = 5;
        var d = 6;
        var v = 0;
        var p = 1;
        var m = 2;
        var b = -2;
        var g = -3;
        var w = -4;
        var k = -5;
        var E = 8;
        var S = 1;
        var _ = 2;
        var C = 3;
        var B = 4;
        var T = 5;
        var y = 6;
        var x = 7;
        var A = 8;
        var I = 9;
        var R = 10;
        var F = 11;
        var O = 12;
        var D = 13;
        var P = 14;
        var N = 15;
        var L = 16;
        var M = 17;
        var U = 18;
        var z = 19;
        var H = 20;
        var W = 21;
        var V = 22;
        var X = 23;
        var G = 24;
        var j = 25;
        var K = 26;
        var $2 = 27;
        var Y = 28;
        var Z = 29;
        var J = 30;
        var Q = 31;
        var q = 32;
        var ee = 852;
        var re = 592;
        var te = 15;
        var ae = te;
        function ne(e3) {
          return (e3 >>> 24 & 255) + (e3 >>> 8 & 65280) + ((e3 & 65280) << 8) + ((e3 & 255) << 24);
        }
        function ie() {
          this.mode = 0;
          this.last = false;
          this.wrap = 0;
          this.havedict = false;
          this.flags = 0;
          this.dmax = 0;
          this.check = 0;
          this.total = 0;
          this.head = null;
          this.wbits = 0;
          this.wsize = 0;
          this.whave = 0;
          this.wnext = 0;
          this.window = null;
          this.hold = 0;
          this.bits = 0;
          this.length = 0;
          this.offset = 0;
          this.extra = 0;
          this.lencode = null;
          this.distcode = null;
          this.lenbits = 0;
          this.distbits = 0;
          this.ncode = 0;
          this.nlen = 0;
          this.ndist = 0;
          this.have = 0;
          this.next = null;
          this.lens = new a.Buf16(320);
          this.work = new a.Buf16(288);
          this.lendyn = null;
          this.distdyn = null;
          this.sane = 0;
          this.back = 0;
          this.was = 0;
        }
        function se(e3) {
          var r3;
          if (!e3 || !e3.state) {
            return b;
          }
          r3 = e3.state;
          e3.total_in = e3.total_out = r3.total = 0;
          e3.msg = "";
          if (r3.wrap) {
            e3.adler = r3.wrap & 1;
          }
          r3.mode = S;
          r3.last = 0;
          r3.havedict = 0;
          r3.dmax = 32768;
          r3.head = null;
          r3.hold = 0;
          r3.bits = 0;
          r3.lencode = r3.lendyn = new a.Buf32(ee);
          r3.distcode = r3.distdyn = new a.Buf32(re);
          r3.sane = 1;
          r3.back = -1;
          return v;
        }
        function fe(e3) {
          var r3;
          if (!e3 || !e3.state) {
            return b;
          }
          r3 = e3.state;
          r3.wsize = 0;
          r3.whave = 0;
          r3.wnext = 0;
          return se(e3);
        }
        function le(e3, r3) {
          var t3;
          var a2;
          if (!e3 || !e3.state) {
            return b;
          }
          a2 = e3.state;
          if (r3 < 0) {
            t3 = 0;
            r3 = -r3;
          } else {
            t3 = (r3 >> 4) + 1;
            if (r3 < 48) {
              r3 &= 15;
            }
          }
          if (r3 && (r3 < 8 || r3 > 15)) {
            return b;
          }
          if (a2.window !== null && a2.wbits !== r3) {
            a2.window = null;
          }
          a2.wrap = t3;
          a2.wbits = r3;
          return fe(e3);
        }
        function oe(e3, r3) {
          var t3;
          var a2;
          if (!e3) {
            return b;
          }
          a2 = new ie();
          e3.state = a2;
          a2.window = null;
          t3 = le(e3, r3);
          if (t3 !== v) {
            e3.state = null;
          }
          return t3;
        }
        function ce(e3) {
          return oe(e3, ae);
        }
        var ue = true;
        var he, de;
        function ve(e3) {
          if (ue) {
            var r3;
            he = new a.Buf32(512);
            de = new a.Buf32(32);
            r3 = 0;
            while (r3 < 144) {
              e3.lens[r3++] = 8;
            }
            while (r3 < 256) {
              e3.lens[r3++] = 9;
            }
            while (r3 < 280) {
              e3.lens[r3++] = 7;
            }
            while (r3 < 288) {
              e3.lens[r3++] = 8;
            }
            f(o, e3.lens, 0, 288, he, 0, e3.work, { bits: 9 });
            r3 = 0;
            while (r3 < 32) {
              e3.lens[r3++] = 5;
            }
            f(c, e3.lens, 0, 32, de, 0, e3.work, { bits: 5 });
            ue = false;
          }
          e3.lencode = he;
          e3.lenbits = 9;
          e3.distcode = de;
          e3.distbits = 5;
        }
        function pe(e3, r3, t3, n2) {
          var i2;
          var s2 = e3.state;
          if (s2.window === null) {
            s2.wsize = 1 << s2.wbits;
            s2.wnext = 0;
            s2.whave = 0;
            s2.window = new a.Buf8(s2.wsize);
          }
          if (n2 >= s2.wsize) {
            a.arraySet(s2.window, r3, t3 - s2.wsize, s2.wsize, 0);
            s2.wnext = 0;
            s2.whave = s2.wsize;
          } else {
            i2 = s2.wsize - s2.wnext;
            if (i2 > n2) {
              i2 = n2;
            }
            a.arraySet(s2.window, r3, t3 - n2, i2, s2.wnext);
            n2 -= i2;
            if (n2) {
              a.arraySet(s2.window, r3, t3 - n2, n2, 0);
              s2.wnext = n2;
              s2.whave = s2.wsize;
            } else {
              s2.wnext += i2;
              if (s2.wnext === s2.wsize) {
                s2.wnext = 0;
              }
              if (s2.whave < s2.wsize) {
                s2.whave += i2;
              }
            }
          }
          return 0;
        }
        function me(e3, r3) {
          var t3;
          var ee2, re2;
          var te2;
          var ae2;
          var ie2, se2;
          var fe2;
          var le2;
          var oe2, ce2;
          var ue2;
          var he2;
          var de2;
          var me2 = 0;
          var be2, ge2, we;
          var ke, Ee, Se;
          var _e;
          var Ce;
          var Be = new a.Buf8(4);
          var Te;
          var ye;
          var xe = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
          if (!e3 || !e3.state || !e3.output || !e3.input && e3.avail_in !== 0) {
            return b;
          }
          t3 = e3.state;
          if (t3.mode === O) {
            t3.mode = D;
          }
          ae2 = e3.next_out;
          re2 = e3.output;
          se2 = e3.avail_out;
          te2 = e3.next_in;
          ee2 = e3.input;
          ie2 = e3.avail_in;
          fe2 = t3.hold;
          le2 = t3.bits;
          oe2 = ie2;
          ce2 = se2;
          Ce = v;
          e:
            for (; ; ) {
              switch (t3.mode) {
                case S:
                  if (t3.wrap === 0) {
                    t3.mode = D;
                    break;
                  }
                  while (le2 < 16) {
                    if (ie2 === 0) {
                      break e;
                    }
                    ie2--;
                    fe2 += ee2[te2++] << le2;
                    le2 += 8;
                  }
                  if (t3.wrap & 2 && fe2 === 35615) {
                    t3.check = 0;
                    Be[0] = fe2 & 255;
                    Be[1] = fe2 >>> 8 & 255;
                    t3.check = i(t3.check, Be, 2, 0);
                    fe2 = 0;
                    le2 = 0;
                    t3.mode = _;
                    break;
                  }
                  t3.flags = 0;
                  if (t3.head) {
                    t3.head.done = false;
                  }
                  if (!(t3.wrap & 1) || (((fe2 & 255) << 8) + (fe2 >> 8)) % 31) {
                    e3.msg = "incorrect header check";
                    t3.mode = J;
                    break;
                  }
                  if ((fe2 & 15) !== E) {
                    e3.msg = "unknown compression method";
                    t3.mode = J;
                    break;
                  }
                  fe2 >>>= 4;
                  le2 -= 4;
                  _e = (fe2 & 15) + 8;
                  if (t3.wbits === 0) {
                    t3.wbits = _e;
                  } else if (_e > t3.wbits) {
                    e3.msg = "invalid window size";
                    t3.mode = J;
                    break;
                  }
                  t3.dmax = 1 << _e;
                  e3.adler = t3.check = 1;
                  t3.mode = fe2 & 512 ? R : O;
                  fe2 = 0;
                  le2 = 0;
                  break;
                case _:
                  while (le2 < 16) {
                    if (ie2 === 0) {
                      break e;
                    }
                    ie2--;
                    fe2 += ee2[te2++] << le2;
                    le2 += 8;
                  }
                  t3.flags = fe2;
                  if ((t3.flags & 255) !== E) {
                    e3.msg = "unknown compression method";
                    t3.mode = J;
                    break;
                  }
                  if (t3.flags & 57344) {
                    e3.msg = "unknown header flags set";
                    t3.mode = J;
                    break;
                  }
                  if (t3.head) {
                    t3.head.text = fe2 >> 8 & 1;
                  }
                  if (t3.flags & 512) {
                    Be[0] = fe2 & 255;
                    Be[1] = fe2 >>> 8 & 255;
                    t3.check = i(t3.check, Be, 2, 0);
                  }
                  fe2 = 0;
                  le2 = 0;
                  t3.mode = C;
                case C:
                  while (le2 < 32) {
                    if (ie2 === 0) {
                      break e;
                    }
                    ie2--;
                    fe2 += ee2[te2++] << le2;
                    le2 += 8;
                  }
                  if (t3.head) {
                    t3.head.time = fe2;
                  }
                  if (t3.flags & 512) {
                    Be[0] = fe2 & 255;
                    Be[1] = fe2 >>> 8 & 255;
                    Be[2] = fe2 >>> 16 & 255;
                    Be[3] = fe2 >>> 24 & 255;
                    t3.check = i(t3.check, Be, 4, 0);
                  }
                  fe2 = 0;
                  le2 = 0;
                  t3.mode = B;
                case B:
                  while (le2 < 16) {
                    if (ie2 === 0) {
                      break e;
                    }
                    ie2--;
                    fe2 += ee2[te2++] << le2;
                    le2 += 8;
                  }
                  if (t3.head) {
                    t3.head.xflags = fe2 & 255;
                    t3.head.os = fe2 >> 8;
                  }
                  if (t3.flags & 512) {
                    Be[0] = fe2 & 255;
                    Be[1] = fe2 >>> 8 & 255;
                    t3.check = i(t3.check, Be, 2, 0);
                  }
                  fe2 = 0;
                  le2 = 0;
                  t3.mode = T;
                case T:
                  if (t3.flags & 1024) {
                    while (le2 < 16) {
                      if (ie2 === 0) {
                        break e;
                      }
                      ie2--;
                      fe2 += ee2[te2++] << le2;
                      le2 += 8;
                    }
                    t3.length = fe2;
                    if (t3.head) {
                      t3.head.extra_len = fe2;
                    }
                    if (t3.flags & 512) {
                      Be[0] = fe2 & 255;
                      Be[1] = fe2 >>> 8 & 255;
                      t3.check = i(t3.check, Be, 2, 0);
                    }
                    fe2 = 0;
                    le2 = 0;
                  } else if (t3.head) {
                    t3.head.extra = null;
                  }
                  t3.mode = y;
                case y:
                  if (t3.flags & 1024) {
                    ue2 = t3.length;
                    if (ue2 > ie2) {
                      ue2 = ie2;
                    }
                    if (ue2) {
                      if (t3.head) {
                        _e = t3.head.extra_len - t3.length;
                        if (!t3.head.extra) {
                          t3.head.extra = new Array(t3.head.extra_len);
                        }
                        a.arraySet(t3.head.extra, ee2, te2, ue2, _e);
                      }
                      if (t3.flags & 512) {
                        t3.check = i(t3.check, ee2, ue2, te2);
                      }
                      ie2 -= ue2;
                      te2 += ue2;
                      t3.length -= ue2;
                    }
                    if (t3.length) {
                      break e;
                    }
                  }
                  t3.length = 0;
                  t3.mode = x;
                case x:
                  if (t3.flags & 2048) {
                    if (ie2 === 0) {
                      break e;
                    }
                    ue2 = 0;
                    do {
                      _e = ee2[te2 + ue2++];
                      if (t3.head && _e && t3.length < 65536) {
                        t3.head.name += String.fromCharCode(_e);
                      }
                    } while (_e && ue2 < ie2);
                    if (t3.flags & 512) {
                      t3.check = i(t3.check, ee2, ue2, te2);
                    }
                    ie2 -= ue2;
                    te2 += ue2;
                    if (_e) {
                      break e;
                    }
                  } else if (t3.head) {
                    t3.head.name = null;
                  }
                  t3.length = 0;
                  t3.mode = A;
                case A:
                  if (t3.flags & 4096) {
                    if (ie2 === 0) {
                      break e;
                    }
                    ue2 = 0;
                    do {
                      _e = ee2[te2 + ue2++];
                      if (t3.head && _e && t3.length < 65536) {
                        t3.head.comment += String.fromCharCode(_e);
                      }
                    } while (_e && ue2 < ie2);
                    if (t3.flags & 512) {
                      t3.check = i(t3.check, ee2, ue2, te2);
                    }
                    ie2 -= ue2;
                    te2 += ue2;
                    if (_e) {
                      break e;
                    }
                  } else if (t3.head) {
                    t3.head.comment = null;
                  }
                  t3.mode = I;
                case I:
                  if (t3.flags & 512) {
                    while (le2 < 16) {
                      if (ie2 === 0) {
                        break e;
                      }
                      ie2--;
                      fe2 += ee2[te2++] << le2;
                      le2 += 8;
                    }
                    if (fe2 !== (t3.check & 65535)) {
                      e3.msg = "header crc mismatch";
                      t3.mode = J;
                      break;
                    }
                    fe2 = 0;
                    le2 = 0;
                  }
                  if (t3.head) {
                    t3.head.hcrc = t3.flags >> 9 & 1;
                    t3.head.done = true;
                  }
                  e3.adler = t3.check = 0;
                  t3.mode = O;
                  break;
                case R:
                  while (le2 < 32) {
                    if (ie2 === 0) {
                      break e;
                    }
                    ie2--;
                    fe2 += ee2[te2++] << le2;
                    le2 += 8;
                  }
                  e3.adler = t3.check = ne(fe2);
                  fe2 = 0;
                  le2 = 0;
                  t3.mode = F;
                case F:
                  if (t3.havedict === 0) {
                    e3.next_out = ae2;
                    e3.avail_out = se2;
                    e3.next_in = te2;
                    e3.avail_in = ie2;
                    t3.hold = fe2;
                    t3.bits = le2;
                    return m;
                  }
                  e3.adler = t3.check = 1;
                  t3.mode = O;
                case O:
                  if (r3 === h || r3 === d) {
                    break e;
                  }
                  ;
                case D:
                  if (t3.last) {
                    fe2 >>>= le2 & 7;
                    le2 -= le2 & 7;
                    t3.mode = $2;
                    break;
                  }
                  while (le2 < 3) {
                    if (ie2 === 0) {
                      break e;
                    }
                    ie2--;
                    fe2 += ee2[te2++] << le2;
                    le2 += 8;
                  }
                  t3.last = fe2 & 1;
                  fe2 >>>= 1;
                  le2 -= 1;
                  switch (fe2 & 3) {
                    case 0:
                      t3.mode = P;
                      break;
                    case 1:
                      ve(t3);
                      t3.mode = H;
                      if (r3 === d) {
                        fe2 >>>= 2;
                        le2 -= 2;
                        break e;
                      }
                      break;
                    case 2:
                      t3.mode = M;
                      break;
                    case 3:
                      e3.msg = "invalid block type";
                      t3.mode = J;
                  }
                  fe2 >>>= 2;
                  le2 -= 2;
                  break;
                case P:
                  fe2 >>>= le2 & 7;
                  le2 -= le2 & 7;
                  while (le2 < 32) {
                    if (ie2 === 0) {
                      break e;
                    }
                    ie2--;
                    fe2 += ee2[te2++] << le2;
                    le2 += 8;
                  }
                  if ((fe2 & 65535) !== (fe2 >>> 16 ^ 65535)) {
                    e3.msg = "invalid stored block lengths";
                    t3.mode = J;
                    break;
                  }
                  t3.length = fe2 & 65535;
                  fe2 = 0;
                  le2 = 0;
                  t3.mode = N;
                  if (r3 === d) {
                    break e;
                  }
                  ;
                case N:
                  t3.mode = L;
                case L:
                  ue2 = t3.length;
                  if (ue2) {
                    if (ue2 > ie2) {
                      ue2 = ie2;
                    }
                    if (ue2 > se2) {
                      ue2 = se2;
                    }
                    if (ue2 === 0) {
                      break e;
                    }
                    a.arraySet(re2, ee2, te2, ue2, ae2);
                    ie2 -= ue2;
                    te2 += ue2;
                    se2 -= ue2;
                    ae2 += ue2;
                    t3.length -= ue2;
                    break;
                  }
                  t3.mode = O;
                  break;
                case M:
                  while (le2 < 14) {
                    if (ie2 === 0) {
                      break e;
                    }
                    ie2--;
                    fe2 += ee2[te2++] << le2;
                    le2 += 8;
                  }
                  t3.nlen = (fe2 & 31) + 257;
                  fe2 >>>= 5;
                  le2 -= 5;
                  t3.ndist = (fe2 & 31) + 1;
                  fe2 >>>= 5;
                  le2 -= 5;
                  t3.ncode = (fe2 & 15) + 4;
                  fe2 >>>= 4;
                  le2 -= 4;
                  if (t3.nlen > 286 || t3.ndist > 30) {
                    e3.msg = "too many length or distance symbols";
                    t3.mode = J;
                    break;
                  }
                  t3.have = 0;
                  t3.mode = U;
                case U:
                  while (t3.have < t3.ncode) {
                    while (le2 < 3) {
                      if (ie2 === 0) {
                        break e;
                      }
                      ie2--;
                      fe2 += ee2[te2++] << le2;
                      le2 += 8;
                    }
                    t3.lens[xe[t3.have++]] = fe2 & 7;
                    fe2 >>>= 3;
                    le2 -= 3;
                  }
                  while (t3.have < 19) {
                    t3.lens[xe[t3.have++]] = 0;
                  }
                  t3.lencode = t3.lendyn;
                  t3.lenbits = 7;
                  Te = { bits: t3.lenbits };
                  Ce = f(l, t3.lens, 0, 19, t3.lencode, 0, t3.work, Te);
                  t3.lenbits = Te.bits;
                  if (Ce) {
                    e3.msg = "invalid code lengths set";
                    t3.mode = J;
                    break;
                  }
                  t3.have = 0;
                  t3.mode = z;
                case z:
                  while (t3.have < t3.nlen + t3.ndist) {
                    for (; ; ) {
                      me2 = t3.lencode[fe2 & (1 << t3.lenbits) - 1];
                      be2 = me2 >>> 24;
                      ge2 = me2 >>> 16 & 255;
                      we = me2 & 65535;
                      if (be2 <= le2) {
                        break;
                      }
                      if (ie2 === 0) {
                        break e;
                      }
                      ie2--;
                      fe2 += ee2[te2++] << le2;
                      le2 += 8;
                    }
                    if (we < 16) {
                      fe2 >>>= be2;
                      le2 -= be2;
                      t3.lens[t3.have++] = we;
                    } else {
                      if (we === 16) {
                        ye = be2 + 2;
                        while (le2 < ye) {
                          if (ie2 === 0) {
                            break e;
                          }
                          ie2--;
                          fe2 += ee2[te2++] << le2;
                          le2 += 8;
                        }
                        fe2 >>>= be2;
                        le2 -= be2;
                        if (t3.have === 0) {
                          e3.msg = "invalid bit length repeat";
                          t3.mode = J;
                          break;
                        }
                        _e = t3.lens[t3.have - 1];
                        ue2 = 3 + (fe2 & 3);
                        fe2 >>>= 2;
                        le2 -= 2;
                      } else if (we === 17) {
                        ye = be2 + 3;
                        while (le2 < ye) {
                          if (ie2 === 0) {
                            break e;
                          }
                          ie2--;
                          fe2 += ee2[te2++] << le2;
                          le2 += 8;
                        }
                        fe2 >>>= be2;
                        le2 -= be2;
                        _e = 0;
                        ue2 = 3 + (fe2 & 7);
                        fe2 >>>= 3;
                        le2 -= 3;
                      } else {
                        ye = be2 + 7;
                        while (le2 < ye) {
                          if (ie2 === 0) {
                            break e;
                          }
                          ie2--;
                          fe2 += ee2[te2++] << le2;
                          le2 += 8;
                        }
                        fe2 >>>= be2;
                        le2 -= be2;
                        _e = 0;
                        ue2 = 11 + (fe2 & 127);
                        fe2 >>>= 7;
                        le2 -= 7;
                      }
                      if (t3.have + ue2 > t3.nlen + t3.ndist) {
                        e3.msg = "invalid bit length repeat";
                        t3.mode = J;
                        break;
                      }
                      while (ue2--) {
                        t3.lens[t3.have++] = _e;
                      }
                    }
                  }
                  if (t3.mode === J) {
                    break;
                  }
                  if (t3.lens[256] === 0) {
                    e3.msg = "invalid code -- missing end-of-block";
                    t3.mode = J;
                    break;
                  }
                  t3.lenbits = 9;
                  Te = { bits: t3.lenbits };
                  Ce = f(o, t3.lens, 0, t3.nlen, t3.lencode, 0, t3.work, Te);
                  t3.lenbits = Te.bits;
                  if (Ce) {
                    e3.msg = "invalid literal/lengths set";
                    t3.mode = J;
                    break;
                  }
                  t3.distbits = 6;
                  t3.distcode = t3.distdyn;
                  Te = { bits: t3.distbits };
                  Ce = f(c, t3.lens, t3.nlen, t3.ndist, t3.distcode, 0, t3.work, Te);
                  t3.distbits = Te.bits;
                  if (Ce) {
                    e3.msg = "invalid distances set";
                    t3.mode = J;
                    break;
                  }
                  t3.mode = H;
                  if (r3 === d) {
                    break e;
                  }
                  ;
                case H:
                  t3.mode = W;
                case W:
                  if (ie2 >= 6 && se2 >= 258) {
                    e3.next_out = ae2;
                    e3.avail_out = se2;
                    e3.next_in = te2;
                    e3.avail_in = ie2;
                    t3.hold = fe2;
                    t3.bits = le2;
                    s(e3, ce2);
                    ae2 = e3.next_out;
                    re2 = e3.output;
                    se2 = e3.avail_out;
                    te2 = e3.next_in;
                    ee2 = e3.input;
                    ie2 = e3.avail_in;
                    fe2 = t3.hold;
                    le2 = t3.bits;
                    if (t3.mode === O) {
                      t3.back = -1;
                    }
                    break;
                  }
                  t3.back = 0;
                  for (; ; ) {
                    me2 = t3.lencode[fe2 & (1 << t3.lenbits) - 1];
                    be2 = me2 >>> 24;
                    ge2 = me2 >>> 16 & 255;
                    we = me2 & 65535;
                    if (be2 <= le2) {
                      break;
                    }
                    if (ie2 === 0) {
                      break e;
                    }
                    ie2--;
                    fe2 += ee2[te2++] << le2;
                    le2 += 8;
                  }
                  if (ge2 && (ge2 & 240) === 0) {
                    ke = be2;
                    Ee = ge2;
                    Se = we;
                    for (; ; ) {
                      me2 = t3.lencode[Se + ((fe2 & (1 << ke + Ee) - 1) >> ke)];
                      be2 = me2 >>> 24;
                      ge2 = me2 >>> 16 & 255;
                      we = me2 & 65535;
                      if (ke + be2 <= le2) {
                        break;
                      }
                      if (ie2 === 0) {
                        break e;
                      }
                      ie2--;
                      fe2 += ee2[te2++] << le2;
                      le2 += 8;
                    }
                    fe2 >>>= ke;
                    le2 -= ke;
                    t3.back += ke;
                  }
                  fe2 >>>= be2;
                  le2 -= be2;
                  t3.back += be2;
                  t3.length = we;
                  if (ge2 === 0) {
                    t3.mode = K;
                    break;
                  }
                  if (ge2 & 32) {
                    t3.back = -1;
                    t3.mode = O;
                    break;
                  }
                  if (ge2 & 64) {
                    e3.msg = "invalid literal/length code";
                    t3.mode = J;
                    break;
                  }
                  t3.extra = ge2 & 15;
                  t3.mode = V;
                case V:
                  if (t3.extra) {
                    ye = t3.extra;
                    while (le2 < ye) {
                      if (ie2 === 0) {
                        break e;
                      }
                      ie2--;
                      fe2 += ee2[te2++] << le2;
                      le2 += 8;
                    }
                    t3.length += fe2 & (1 << t3.extra) - 1;
                    fe2 >>>= t3.extra;
                    le2 -= t3.extra;
                    t3.back += t3.extra;
                  }
                  t3.was = t3.length;
                  t3.mode = X;
                case X:
                  for (; ; ) {
                    me2 = t3.distcode[fe2 & (1 << t3.distbits) - 1];
                    be2 = me2 >>> 24;
                    ge2 = me2 >>> 16 & 255;
                    we = me2 & 65535;
                    if (be2 <= le2) {
                      break;
                    }
                    if (ie2 === 0) {
                      break e;
                    }
                    ie2--;
                    fe2 += ee2[te2++] << le2;
                    le2 += 8;
                  }
                  if ((ge2 & 240) === 0) {
                    ke = be2;
                    Ee = ge2;
                    Se = we;
                    for (; ; ) {
                      me2 = t3.distcode[Se + ((fe2 & (1 << ke + Ee) - 1) >> ke)];
                      be2 = me2 >>> 24;
                      ge2 = me2 >>> 16 & 255;
                      we = me2 & 65535;
                      if (ke + be2 <= le2) {
                        break;
                      }
                      if (ie2 === 0) {
                        break e;
                      }
                      ie2--;
                      fe2 += ee2[te2++] << le2;
                      le2 += 8;
                    }
                    fe2 >>>= ke;
                    le2 -= ke;
                    t3.back += ke;
                  }
                  fe2 >>>= be2;
                  le2 -= be2;
                  t3.back += be2;
                  if (ge2 & 64) {
                    e3.msg = "invalid distance code";
                    t3.mode = J;
                    break;
                  }
                  t3.offset = we;
                  t3.extra = ge2 & 15;
                  t3.mode = G;
                case G:
                  if (t3.extra) {
                    ye = t3.extra;
                    while (le2 < ye) {
                      if (ie2 === 0) {
                        break e;
                      }
                      ie2--;
                      fe2 += ee2[te2++] << le2;
                      le2 += 8;
                    }
                    t3.offset += fe2 & (1 << t3.extra) - 1;
                    fe2 >>>= t3.extra;
                    le2 -= t3.extra;
                    t3.back += t3.extra;
                  }
                  if (t3.offset > t3.dmax) {
                    e3.msg = "invalid distance too far back";
                    t3.mode = J;
                    break;
                  }
                  t3.mode = j;
                case j:
                  if (se2 === 0) {
                    break e;
                  }
                  ue2 = ce2 - se2;
                  if (t3.offset > ue2) {
                    ue2 = t3.offset - ue2;
                    if (ue2 > t3.whave) {
                      if (t3.sane) {
                        e3.msg = "invalid distance too far back";
                        t3.mode = J;
                        break;
                      }
                    }
                    if (ue2 > t3.wnext) {
                      ue2 -= t3.wnext;
                      he2 = t3.wsize - ue2;
                    } else {
                      he2 = t3.wnext - ue2;
                    }
                    if (ue2 > t3.length) {
                      ue2 = t3.length;
                    }
                    de2 = t3.window;
                  } else {
                    de2 = re2;
                    he2 = ae2 - t3.offset;
                    ue2 = t3.length;
                  }
                  if (ue2 > se2) {
                    ue2 = se2;
                  }
                  se2 -= ue2;
                  t3.length -= ue2;
                  do {
                    re2[ae2++] = de2[he2++];
                  } while (--ue2);
                  if (t3.length === 0) {
                    t3.mode = W;
                  }
                  break;
                case K:
                  if (se2 === 0) {
                    break e;
                  }
                  re2[ae2++] = t3.length;
                  se2--;
                  t3.mode = W;
                  break;
                case $2:
                  if (t3.wrap) {
                    while (le2 < 32) {
                      if (ie2 === 0) {
                        break e;
                      }
                      ie2--;
                      fe2 |= ee2[te2++] << le2;
                      le2 += 8;
                    }
                    ce2 -= se2;
                    e3.total_out += ce2;
                    t3.total += ce2;
                    if (ce2) {
                      e3.adler = t3.check = t3.flags ? i(t3.check, re2, ce2, ae2 - ce2) : n(t3.check, re2, ce2, ae2 - ce2);
                    }
                    ce2 = se2;
                    if ((t3.flags ? fe2 : ne(fe2)) !== t3.check) {
                      e3.msg = "incorrect data check";
                      t3.mode = J;
                      break;
                    }
                    fe2 = 0;
                    le2 = 0;
                  }
                  t3.mode = Y;
                case Y:
                  if (t3.wrap && t3.flags) {
                    while (le2 < 32) {
                      if (ie2 === 0) {
                        break e;
                      }
                      ie2--;
                      fe2 += ee2[te2++] << le2;
                      le2 += 8;
                    }
                    if (fe2 !== (t3.total & 4294967295)) {
                      e3.msg = "incorrect length check";
                      t3.mode = J;
                      break;
                    }
                    fe2 = 0;
                    le2 = 0;
                  }
                  t3.mode = Z;
                case Z:
                  Ce = p;
                  break e;
                case J:
                  Ce = g;
                  break e;
                case Q:
                  return w;
                case q:
                  ;
                default:
                  return b;
              }
            }
          e3.next_out = ae2;
          e3.avail_out = se2;
          e3.next_in = te2;
          e3.avail_in = ie2;
          t3.hold = fe2;
          t3.bits = le2;
          if (t3.wsize || ce2 !== e3.avail_out && t3.mode < J && (t3.mode < $2 || r3 !== u)) {
            if (pe(e3, e3.output, e3.next_out, ce2 - e3.avail_out)) {
              t3.mode = Q;
              return w;
            }
          }
          oe2 -= e3.avail_in;
          ce2 -= e3.avail_out;
          e3.total_in += oe2;
          e3.total_out += ce2;
          t3.total += ce2;
          if (t3.wrap && ce2) {
            e3.adler = t3.check = t3.flags ? i(t3.check, re2, ce2, e3.next_out - ce2) : n(t3.check, re2, ce2, e3.next_out - ce2);
          }
          e3.data_type = t3.bits + (t3.last ? 64 : 0) + (t3.mode === O ? 128 : 0) + (t3.mode === H || t3.mode === N ? 256 : 0);
          if ((oe2 === 0 && ce2 === 0 || r3 === u) && Ce === v) {
            Ce = k;
          }
          return Ce;
        }
        function be(e3) {
          if (!e3 || !e3.state) {
            return b;
          }
          var r3 = e3.state;
          if (r3.window) {
            r3.window = null;
          }
          e3.state = null;
          return v;
        }
        function ge(e3, r3) {
          var t3;
          if (!e3 || !e3.state) {
            return b;
          }
          t3 = e3.state;
          if ((t3.wrap & 2) === 0) {
            return b;
          }
          t3.head = r3;
          r3.done = false;
          return v;
        }
        t2.inflateReset = fe;
        t2.inflateReset2 = le;
        t2.inflateResetKeep = se;
        t2.inflateInit = ce;
        t2.inflateInit2 = oe;
        t2.inflate = me;
        t2.inflateEnd = be;
        t2.inflateGetHeader = ge;
        t2.inflateInfo = "pako inflate (from Nodeca project)";
      }, { "../utils/common": 27, "./adler32": 29, "./crc32": 31, "./inffast": 34, "./inftrees": 36 }], 36: [function(e2, r2, t2) {
        "use strict";
        var a = e2("../utils/common");
        var n = 15;
        var i = 852;
        var s = 592;
        var f = 0;
        var l = 1;
        var o = 2;
        var c = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0];
        var u = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78];
        var h = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0];
        var d = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
        r2.exports = function v(e3, r3, t3, p, m, b, g, w) {
          var k = w.bits;
          var E = 0;
          var S = 0;
          var _ = 0, C = 0;
          var B = 0;
          var T = 0;
          var y = 0;
          var x = 0;
          var A = 0;
          var I = 0;
          var R;
          var F;
          var O;
          var D;
          var P;
          var N = null;
          var L = 0;
          var M;
          var U = new a.Buf16(n + 1);
          var z = new a.Buf16(n + 1);
          var H = null;
          var W = 0;
          var V, X, G;
          for (E = 0; E <= n; E++) {
            U[E] = 0;
          }
          for (S = 0; S < p; S++) {
            U[r3[t3 + S]]++;
          }
          B = k;
          for (C = n; C >= 1; C--) {
            if (U[C] !== 0) {
              break;
            }
          }
          if (B > C) {
            B = C;
          }
          if (C === 0) {
            m[b++] = 1 << 24 | 64 << 16 | 0;
            m[b++] = 1 << 24 | 64 << 16 | 0;
            w.bits = 1;
            return 0;
          }
          for (_ = 1; _ < C; _++) {
            if (U[_] !== 0) {
              break;
            }
          }
          if (B < _) {
            B = _;
          }
          x = 1;
          for (E = 1; E <= n; E++) {
            x <<= 1;
            x -= U[E];
            if (x < 0) {
              return -1;
            }
          }
          if (x > 0 && (e3 === f || C !== 1)) {
            return -1;
          }
          z[1] = 0;
          for (E = 1; E < n; E++) {
            z[E + 1] = z[E] + U[E];
          }
          for (S = 0; S < p; S++) {
            if (r3[t3 + S] !== 0) {
              g[z[r3[t3 + S]]++] = S;
            }
          }
          if (e3 === f) {
            N = H = g;
            M = 19;
          } else if (e3 === l) {
            N = c;
            L -= 257;
            H = u;
            W -= 257;
            M = 256;
          } else {
            N = h;
            H = d;
            M = -1;
          }
          I = 0;
          S = 0;
          E = _;
          P = b;
          T = B;
          y = 0;
          O = -1;
          A = 1 << B;
          D = A - 1;
          if (e3 === l && A > i || e3 === o && A > s) {
            return 1;
          }
          var j = 0;
          for (; ; ) {
            j++;
            V = E - y;
            if (g[S] < M) {
              X = 0;
              G = g[S];
            } else if (g[S] > M) {
              X = H[W + g[S]];
              G = N[L + g[S]];
            } else {
              X = 32 + 64;
              G = 0;
            }
            R = 1 << E - y;
            F = 1 << T;
            _ = F;
            do {
              F -= R;
              m[P + (I >> y) + F] = V << 24 | X << 16 | G | 0;
            } while (F !== 0);
            R = 1 << E - 1;
            while (I & R) {
              R >>= 1;
            }
            if (R !== 0) {
              I &= R - 1;
              I += R;
            } else {
              I = 0;
            }
            S++;
            if (--U[E] === 0) {
              if (E === C) {
                break;
              }
              E = r3[t3 + g[S]];
            }
            if (E > B && (I & D) !== O) {
              if (y === 0) {
                y = B;
              }
              P += _;
              T = E - y;
              x = 1 << T;
              while (T + y < C) {
                x -= U[T + y];
                if (x <= 0) {
                  break;
                }
                T++;
                x <<= 1;
              }
              A += 1 << T;
              if (e3 === l && A > i || e3 === o && A > s) {
                return 1;
              }
              O = I & D;
              m[O] = B << 24 | T << 16 | P - b | 0;
            }
          }
          if (I !== 0) {
            m[P + I] = E - y << 24 | 64 << 16 | 0;
          }
          w.bits = B;
          return 0;
        };
      }, { "../utils/common": 27 }], 37: [function(e2, r2, t2) {
        "use strict";
        r2.exports = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" };
      }, {}], 38: [function(e2, r2, t2) {
        "use strict";
        var a = e2("../utils/common");
        var n = 4;
        var i = 0;
        var s = 1;
        var f = 2;
        function l(e3) {
          var r3 = e3.length;
          while (--r3 >= 0) {
            e3[r3] = 0;
          }
        }
        var o = 0;
        var c = 1;
        var u = 2;
        var h = 3;
        var d = 258;
        var v = 29;
        var p = 256;
        var m = p + 1 + v;
        var b = 30;
        var g = 19;
        var w = 2 * m + 1;
        var k = 15;
        var E = 16;
        var S = 7;
        var _ = 256;
        var C = 16;
        var B = 17;
        var T = 18;
        var y = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0];
        var x = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13];
        var A = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7];
        var I = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
        var R = 512;
        var F = new Array((m + 2) * 2);
        l(F);
        var O = new Array(b * 2);
        l(O);
        var D = new Array(R);
        l(D);
        var P = new Array(d - h + 1);
        l(P);
        var N = new Array(v);
        l(N);
        var L = new Array(b);
        l(L);
        var M = function(e3, r3, t3, a2, n2) {
          this.static_tree = e3;
          this.extra_bits = r3;
          this.extra_base = t3;
          this.elems = a2;
          this.max_length = n2;
          this.has_stree = e3 && e3.length;
        };
        var U;
        var z;
        var H;
        var W = function(e3, r3) {
          this.dyn_tree = e3;
          this.max_code = 0;
          this.stat_desc = r3;
        };
        function V(e3) {
          return e3 < 256 ? D[e3] : D[256 + (e3 >>> 7)];
        }
        function X(e3, r3) {
          e3.pending_buf[e3.pending++] = r3 & 255;
          e3.pending_buf[e3.pending++] = r3 >>> 8 & 255;
        }
        function G(e3, r3, t3) {
          if (e3.bi_valid > E - t3) {
            e3.bi_buf |= r3 << e3.bi_valid & 65535;
            X(e3, e3.bi_buf);
            e3.bi_buf = r3 >> E - e3.bi_valid;
            e3.bi_valid += t3 - E;
          } else {
            e3.bi_buf |= r3 << e3.bi_valid & 65535;
            e3.bi_valid += t3;
          }
        }
        function j(e3, r3, t3) {
          G(e3, t3[r3 * 2], t3[r3 * 2 + 1]);
        }
        function K(e3, r3) {
          var t3 = 0;
          do {
            t3 |= e3 & 1;
            e3 >>>= 1;
            t3 <<= 1;
          } while (--r3 > 0);
          return t3 >>> 1;
        }
        function $2(e3) {
          if (e3.bi_valid === 16) {
            X(e3, e3.bi_buf);
            e3.bi_buf = 0;
            e3.bi_valid = 0;
          } else if (e3.bi_valid >= 8) {
            e3.pending_buf[e3.pending++] = e3.bi_buf & 255;
            e3.bi_buf >>= 8;
            e3.bi_valid -= 8;
          }
        }
        function Y(e3, r3) {
          var t3 = r3.dyn_tree;
          var a2 = r3.max_code;
          var n2 = r3.stat_desc.static_tree;
          var i2 = r3.stat_desc.has_stree;
          var s2 = r3.stat_desc.extra_bits;
          var f2 = r3.stat_desc.extra_base;
          var l2 = r3.stat_desc.max_length;
          var o2;
          var c2, u2;
          var h2;
          var d2;
          var v2;
          var p2 = 0;
          for (h2 = 0; h2 <= k; h2++) {
            e3.bl_count[h2] = 0;
          }
          t3[e3.heap[e3.heap_max] * 2 + 1] = 0;
          for (o2 = e3.heap_max + 1; o2 < w; o2++) {
            c2 = e3.heap[o2];
            h2 = t3[t3[c2 * 2 + 1] * 2 + 1] + 1;
            if (h2 > l2) {
              h2 = l2;
              p2++;
            }
            t3[c2 * 2 + 1] = h2;
            if (c2 > a2) {
              continue;
            }
            e3.bl_count[h2]++;
            d2 = 0;
            if (c2 >= f2) {
              d2 = s2[c2 - f2];
            }
            v2 = t3[c2 * 2];
            e3.opt_len += v2 * (h2 + d2);
            if (i2) {
              e3.static_len += v2 * (n2[c2 * 2 + 1] + d2);
            }
          }
          if (p2 === 0) {
            return;
          }
          do {
            h2 = l2 - 1;
            while (e3.bl_count[h2] === 0) {
              h2--;
            }
            e3.bl_count[h2]--;
            e3.bl_count[h2 + 1] += 2;
            e3.bl_count[l2]--;
            p2 -= 2;
          } while (p2 > 0);
          for (h2 = l2; h2 !== 0; h2--) {
            c2 = e3.bl_count[h2];
            while (c2 !== 0) {
              u2 = e3.heap[--o2];
              if (u2 > a2) {
                continue;
              }
              if (t3[u2 * 2 + 1] !== h2) {
                e3.opt_len += (h2 - t3[u2 * 2 + 1]) * t3[u2 * 2];
                t3[u2 * 2 + 1] = h2;
              }
              c2--;
            }
          }
        }
        function Z(e3, r3, t3) {
          var a2 = new Array(k + 1);
          var n2 = 0;
          var i2;
          var s2;
          for (i2 = 1; i2 <= k; i2++) {
            a2[i2] = n2 = n2 + t3[i2 - 1] << 1;
          }
          for (s2 = 0; s2 <= r3; s2++) {
            var f2 = e3[s2 * 2 + 1];
            if (f2 === 0) {
              continue;
            }
            e3[s2 * 2] = K(a2[f2]++, f2);
          }
        }
        function J() {
          var e3;
          var r3;
          var t3;
          var a2;
          var n2;
          var i2 = new Array(k + 1);
          t3 = 0;
          for (a2 = 0; a2 < v - 1; a2++) {
            N[a2] = t3;
            for (e3 = 0; e3 < 1 << y[a2]; e3++) {
              P[t3++] = a2;
            }
          }
          P[t3 - 1] = a2;
          n2 = 0;
          for (a2 = 0; a2 < 16; a2++) {
            L[a2] = n2;
            for (e3 = 0; e3 < 1 << x[a2]; e3++) {
              D[n2++] = a2;
            }
          }
          n2 >>= 7;
          for (; a2 < b; a2++) {
            L[a2] = n2 << 7;
            for (e3 = 0; e3 < 1 << x[a2] - 7; e3++) {
              D[256 + n2++] = a2;
            }
          }
          for (r3 = 0; r3 <= k; r3++) {
            i2[r3] = 0;
          }
          e3 = 0;
          while (e3 <= 143) {
            F[e3 * 2 + 1] = 8;
            e3++;
            i2[8]++;
          }
          while (e3 <= 255) {
            F[e3 * 2 + 1] = 9;
            e3++;
            i2[9]++;
          }
          while (e3 <= 279) {
            F[e3 * 2 + 1] = 7;
            e3++;
            i2[7]++;
          }
          while (e3 <= 287) {
            F[e3 * 2 + 1] = 8;
            e3++;
            i2[8]++;
          }
          Z(F, m + 1, i2);
          for (e3 = 0; e3 < b; e3++) {
            O[e3 * 2 + 1] = 5;
            O[e3 * 2] = K(e3, 5);
          }
          U = new M(F, y, p + 1, m, k);
          z = new M(O, x, 0, b, k);
          H = new M(new Array(0), A, 0, g, S);
        }
        function Q(e3) {
          var r3;
          for (r3 = 0; r3 < m; r3++) {
            e3.dyn_ltree[r3 * 2] = 0;
          }
          for (r3 = 0; r3 < b; r3++) {
            e3.dyn_dtree[r3 * 2] = 0;
          }
          for (r3 = 0; r3 < g; r3++) {
            e3.bl_tree[r3 * 2] = 0;
          }
          e3.dyn_ltree[_ * 2] = 1;
          e3.opt_len = e3.static_len = 0;
          e3.last_lit = e3.matches = 0;
        }
        function q(e3) {
          if (e3.bi_valid > 8) {
            X(e3, e3.bi_buf);
          } else if (e3.bi_valid > 0) {
            e3.pending_buf[e3.pending++] = e3.bi_buf;
          }
          e3.bi_buf = 0;
          e3.bi_valid = 0;
        }
        function ee(e3, r3, t3, n2) {
          q(e3);
          if (n2) {
            X(e3, t3);
            X(e3, ~t3);
          }
          a.arraySet(e3.pending_buf, e3.window, r3, t3, e3.pending);
          e3.pending += t3;
        }
        function re(e3, r3, t3, a2) {
          var n2 = r3 * 2;
          var i2 = t3 * 2;
          return e3[n2] < e3[i2] || e3[n2] === e3[i2] && a2[r3] <= a2[t3];
        }
        function te(e3, r3, t3) {
          var a2 = e3.heap[t3];
          var n2 = t3 << 1;
          while (n2 <= e3.heap_len) {
            if (n2 < e3.heap_len && re(r3, e3.heap[n2 + 1], e3.heap[n2], e3.depth)) {
              n2++;
            }
            if (re(r3, a2, e3.heap[n2], e3.depth)) {
              break;
            }
            e3.heap[t3] = e3.heap[n2];
            t3 = n2;
            n2 <<= 1;
          }
          e3.heap[t3] = a2;
        }
        function ae(e3, r3, t3) {
          var a2;
          var n2;
          var i2 = 0;
          var s2;
          var f2;
          if (e3.last_lit !== 0) {
            do {
              a2 = e3.pending_buf[e3.d_buf + i2 * 2] << 8 | e3.pending_buf[e3.d_buf + i2 * 2 + 1];
              n2 = e3.pending_buf[e3.l_buf + i2];
              i2++;
              if (a2 === 0) {
                j(e3, n2, r3);
              } else {
                s2 = P[n2];
                j(e3, s2 + p + 1, r3);
                f2 = y[s2];
                if (f2 !== 0) {
                  n2 -= N[s2];
                  G(e3, n2, f2);
                }
                a2--;
                s2 = V(a2);
                j(e3, s2, t3);
                f2 = x[s2];
                if (f2 !== 0) {
                  a2 -= L[s2];
                  G(e3, a2, f2);
                }
              }
            } while (i2 < e3.last_lit);
          }
          j(e3, _, r3);
        }
        function ne(e3, r3) {
          var t3 = r3.dyn_tree;
          var a2 = r3.stat_desc.static_tree;
          var n2 = r3.stat_desc.has_stree;
          var i2 = r3.stat_desc.elems;
          var s2, f2;
          var l2 = -1;
          var o2;
          e3.heap_len = 0;
          e3.heap_max = w;
          for (s2 = 0; s2 < i2; s2++) {
            if (t3[s2 * 2] !== 0) {
              e3.heap[++e3.heap_len] = l2 = s2;
              e3.depth[s2] = 0;
            } else {
              t3[s2 * 2 + 1] = 0;
            }
          }
          while (e3.heap_len < 2) {
            o2 = e3.heap[++e3.heap_len] = l2 < 2 ? ++l2 : 0;
            t3[o2 * 2] = 1;
            e3.depth[o2] = 0;
            e3.opt_len--;
            if (n2) {
              e3.static_len -= a2[o2 * 2 + 1];
            }
          }
          r3.max_code = l2;
          for (s2 = e3.heap_len >> 1; s2 >= 1; s2--) {
            te(e3, t3, s2);
          }
          o2 = i2;
          do {
            s2 = e3.heap[1];
            e3.heap[1] = e3.heap[e3.heap_len--];
            te(e3, t3, 1);
            f2 = e3.heap[1];
            e3.heap[--e3.heap_max] = s2;
            e3.heap[--e3.heap_max] = f2;
            t3[o2 * 2] = t3[s2 * 2] + t3[f2 * 2];
            e3.depth[o2] = (e3.depth[s2] >= e3.depth[f2] ? e3.depth[s2] : e3.depth[f2]) + 1;
            t3[s2 * 2 + 1] = t3[f2 * 2 + 1] = o2;
            e3.heap[1] = o2++;
            te(e3, t3, 1);
          } while (e3.heap_len >= 2);
          e3.heap[--e3.heap_max] = e3.heap[1];
          Y(e3, r3);
          Z(t3, l2, e3.bl_count);
        }
        function ie(e3, r3, t3) {
          var a2;
          var n2 = -1;
          var i2;
          var s2 = r3[0 * 2 + 1];
          var f2 = 0;
          var l2 = 7;
          var o2 = 4;
          if (s2 === 0) {
            l2 = 138;
            o2 = 3;
          }
          r3[(t3 + 1) * 2 + 1] = 65535;
          for (a2 = 0; a2 <= t3; a2++) {
            i2 = s2;
            s2 = r3[(a2 + 1) * 2 + 1];
            if (++f2 < l2 && i2 === s2) {
              continue;
            } else if (f2 < o2) {
              e3.bl_tree[i2 * 2] += f2;
            } else if (i2 !== 0) {
              if (i2 !== n2) {
                e3.bl_tree[i2 * 2]++;
              }
              e3.bl_tree[C * 2]++;
            } else if (f2 <= 10) {
              e3.bl_tree[B * 2]++;
            } else {
              e3.bl_tree[T * 2]++;
            }
            f2 = 0;
            n2 = i2;
            if (s2 === 0) {
              l2 = 138;
              o2 = 3;
            } else if (i2 === s2) {
              l2 = 6;
              o2 = 3;
            } else {
              l2 = 7;
              o2 = 4;
            }
          }
        }
        function se(e3, r3, t3) {
          var a2;
          var n2 = -1;
          var i2;
          var s2 = r3[0 * 2 + 1];
          var f2 = 0;
          var l2 = 7;
          var o2 = 4;
          if (s2 === 0) {
            l2 = 138;
            o2 = 3;
          }
          for (a2 = 0; a2 <= t3; a2++) {
            i2 = s2;
            s2 = r3[(a2 + 1) * 2 + 1];
            if (++f2 < l2 && i2 === s2) {
              continue;
            } else if (f2 < o2) {
              do {
                j(e3, i2, e3.bl_tree);
              } while (--f2 !== 0);
            } else if (i2 !== 0) {
              if (i2 !== n2) {
                j(e3, i2, e3.bl_tree);
                f2--;
              }
              j(e3, C, e3.bl_tree);
              G(e3, f2 - 3, 2);
            } else if (f2 <= 10) {
              j(e3, B, e3.bl_tree);
              G(e3, f2 - 3, 3);
            } else {
              j(e3, T, e3.bl_tree);
              G(e3, f2 - 11, 7);
            }
            f2 = 0;
            n2 = i2;
            if (s2 === 0) {
              l2 = 138;
              o2 = 3;
            } else if (i2 === s2) {
              l2 = 6;
              o2 = 3;
            } else {
              l2 = 7;
              o2 = 4;
            }
          }
        }
        function fe(e3) {
          var r3;
          ie(e3, e3.dyn_ltree, e3.l_desc.max_code);
          ie(e3, e3.dyn_dtree, e3.d_desc.max_code);
          ne(e3, e3.bl_desc);
          for (r3 = g - 1; r3 >= 3; r3--) {
            if (e3.bl_tree[I[r3] * 2 + 1] !== 0) {
              break;
            }
          }
          e3.opt_len += 3 * (r3 + 1) + 5 + 5 + 4;
          return r3;
        }
        function le(e3, r3, t3, a2) {
          var n2;
          G(e3, r3 - 257, 5);
          G(e3, t3 - 1, 5);
          G(e3, a2 - 4, 4);
          for (n2 = 0; n2 < a2; n2++) {
            G(e3, e3.bl_tree[I[n2] * 2 + 1], 3);
          }
          se(e3, e3.dyn_ltree, r3 - 1);
          se(e3, e3.dyn_dtree, t3 - 1);
        }
        function oe(e3) {
          var r3 = 4093624447;
          var t3;
          for (t3 = 0; t3 <= 31; t3++, r3 >>>= 1) {
            if (r3 & 1 && e3.dyn_ltree[t3 * 2] !== 0) {
              return i;
            }
          }
          if (e3.dyn_ltree[9 * 2] !== 0 || e3.dyn_ltree[10 * 2] !== 0 || e3.dyn_ltree[13 * 2] !== 0) {
            return s;
          }
          for (t3 = 32; t3 < p; t3++) {
            if (e3.dyn_ltree[t3 * 2] !== 0) {
              return s;
            }
          }
          return i;
        }
        var ce = false;
        function ue(e3) {
          if (!ce) {
            J();
            ce = true;
          }
          e3.l_desc = new W(e3.dyn_ltree, U);
          e3.d_desc = new W(e3.dyn_dtree, z);
          e3.bl_desc = new W(e3.bl_tree, H);
          e3.bi_buf = 0;
          e3.bi_valid = 0;
          Q(e3);
        }
        function he(e3, r3, t3, a2) {
          G(e3, (o << 1) + (a2 ? 1 : 0), 3);
          ee(e3, r3, t3, true);
        }
        function de(e3) {
          G(e3, c << 1, 3);
          j(e3, _, F);
          $2(e3);
        }
        function ve(e3, r3, t3, a2) {
          var i2, s2;
          var l2 = 0;
          if (e3.level > 0) {
            if (e3.strm.data_type === f) {
              e3.strm.data_type = oe(e3);
            }
            ne(e3, e3.l_desc);
            ne(e3, e3.d_desc);
            l2 = fe(e3);
            i2 = e3.opt_len + 3 + 7 >>> 3;
            s2 = e3.static_len + 3 + 7 >>> 3;
            if (s2 <= i2) {
              i2 = s2;
            }
          } else {
            i2 = s2 = t3 + 5;
          }
          if (t3 + 4 <= i2 && r3 !== -1) {
            he(e3, r3, t3, a2);
          } else if (e3.strategy === n || s2 === i2) {
            G(e3, (c << 1) + (a2 ? 1 : 0), 3);
            ae(e3, F, O);
          } else {
            G(e3, (u << 1) + (a2 ? 1 : 0), 3);
            le(e3, e3.l_desc.max_code + 1, e3.d_desc.max_code + 1, l2 + 1);
            ae(e3, e3.dyn_ltree, e3.dyn_dtree);
          }
          Q(e3);
          if (a2) {
            q(e3);
          }
        }
        function pe(e3, r3, t3) {
          e3.pending_buf[e3.d_buf + e3.last_lit * 2] = r3 >>> 8 & 255;
          e3.pending_buf[e3.d_buf + e3.last_lit * 2 + 1] = r3 & 255;
          e3.pending_buf[e3.l_buf + e3.last_lit] = t3 & 255;
          e3.last_lit++;
          if (r3 === 0) {
            e3.dyn_ltree[t3 * 2]++;
          } else {
            e3.matches++;
            r3--;
            e3.dyn_ltree[(P[t3] + p + 1) * 2]++;
            e3.dyn_dtree[V(r3) * 2]++;
          }
          return e3.last_lit === e3.lit_bufsize - 1;
        }
        t2._tr_init = ue;
        t2._tr_stored_block = he;
        t2._tr_flush_block = ve;
        t2._tr_tally = pe;
        t2._tr_align = de;
      }, { "../utils/common": 27 }], 39: [function(e2, r2, t2) {
        "use strict";
        function a() {
          this.input = null;
          this.next_in = 0;
          this.avail_in = 0;
          this.total_in = 0;
          this.output = null;
          this.next_out = 0;
          this.avail_out = 0;
          this.total_out = 0;
          this.msg = "";
          this.state = null;
          this.data_type = 2;
          this.adler = 0;
        }
        r2.exports = a;
      }, {}] }, {}, [9])(9);
    });
    var XLSX = {};
    function make_xlsx_lib(e) {
      e.version = "0.17.4";
      var r = 1200, t = 1252;
      if (typeof module !== "undefined" && typeof __require !== "undefined") {
        if (typeof cptable === "undefined") {
          if (typeof global !== "undefined")
            global.cptable = void 0;
          else if (typeof window !== "undefined")
            window.cptable = void 0;
        }
      }
      var a = [874, 932, 936, 949, 950];
      for (var n = 0; n <= 8; ++n)
        a.push(1250 + n);
      var i = { 0: 1252, 1: 65001, 2: 65001, 77: 1e4, 128: 932, 129: 949, 130: 1361, 134: 936, 136: 950, 161: 1253, 162: 1254, 163: 1258, 177: 1255, 178: 1256, 186: 1257, 204: 1251, 222: 874, 238: 1250, 255: 1252, 69: 6969 };
      var s = function(e2) {
        if (a.indexOf(e2) == -1)
          return;
        t = i[0] = e2;
      };
      function f() {
        s(1252);
      }
      var l = function(e2) {
        r = e2;
        s(e2);
      };
      function o() {
        l(1200);
        f();
      }
      function c(e2) {
        var r2 = [];
        for (var t2 = 0, a2 = e2.length; t2 < a2; ++t2)
          r2[t2] = e2.charCodeAt(t2);
        return r2;
      }
      function u(e2) {
        var r2 = [];
        for (var t2 = 0; t2 < e2.length >> 1; ++t2)
          r2[t2] = String.fromCharCode(e2.charCodeAt(2 * t2) + (e2.charCodeAt(2 * t2 + 1) << 8));
        return r2.join("");
      }
      function h(e2) {
        var r2 = [];
        for (var t2 = 0; t2 < e2.length >> 1; ++t2)
          r2[t2] = String.fromCharCode(e2.charCodeAt(2 * t2 + 1) + (e2.charCodeAt(2 * t2) << 8));
        return r2.join("");
      }
      var d = function(e2) {
        var r2 = e2.charCodeAt(0), t2 = e2.charCodeAt(1);
        if (r2 == 255 && t2 == 254)
          return u(e2.slice(2));
        if (r2 == 254 && t2 == 255)
          return h(e2.slice(2));
        if (r2 == 65279)
          return e2.slice(1);
        return e2;
      };
      var v = function Rb(e2) {
        return String.fromCharCode(e2);
      };
      var p = function Fb(e2) {
        return String.fromCharCode(e2);
      };
      if (typeof cptable !== "undefined") {
        l = function(e2) {
          r = e2;
          s(e2);
        };
        d = function(e2) {
          if (e2.charCodeAt(0) === 255 && e2.charCodeAt(1) === 254) {
            return cptable.utils.decode(1200, c(e2.slice(2)));
          }
          return e2;
        };
        v = function Ob(e2) {
          if (r === 1200)
            return String.fromCharCode(e2);
          return cptable.utils.decode(r, [e2 & 255, e2 >> 8])[0];
        };
        p = function Db(e2) {
          return cptable.utils.decode(t, [e2])[0];
        };
      }
      var m = null;
      var b = true;
      var g = function Pb() {
        var e2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        return { encode: function(r2) {
          var t2 = "";
          var a2 = 0, n2 = 0, i2 = 0, s2 = 0, f2 = 0, l2 = 0, o2 = 0;
          for (var c2 = 0; c2 < r2.length; ) {
            a2 = r2.charCodeAt(c2++);
            s2 = a2 >> 2;
            n2 = r2.charCodeAt(c2++);
            f2 = (a2 & 3) << 4 | n2 >> 4;
            i2 = r2.charCodeAt(c2++);
            l2 = (n2 & 15) << 2 | i2 >> 6;
            o2 = i2 & 63;
            if (isNaN(n2)) {
              l2 = o2 = 64;
            } else if (isNaN(i2)) {
              o2 = 64;
            }
            t2 += e2.charAt(s2) + e2.charAt(f2) + e2.charAt(l2) + e2.charAt(o2);
          }
          return t2;
        }, decode: function r2(t2) {
          var a2 = "";
          var n2 = 0, i2 = 0, s2 = 0, f2 = 0, l2 = 0, o2 = 0, c2 = 0;
          t2 = t2.replace(/[^\w\+\/\=]/g, "");
          for (var u2 = 0; u2 < t2.length; ) {
            f2 = e2.indexOf(t2.charAt(u2++));
            l2 = e2.indexOf(t2.charAt(u2++));
            n2 = f2 << 2 | l2 >> 4;
            a2 += String.fromCharCode(n2);
            o2 = e2.indexOf(t2.charAt(u2++));
            i2 = (l2 & 15) << 4 | o2 >> 2;
            if (o2 !== 64) {
              a2 += String.fromCharCode(i2);
            }
            c2 = e2.indexOf(t2.charAt(u2++));
            s2 = (o2 & 3) << 6 | c2;
            if (c2 !== 64) {
              a2 += String.fromCharCode(s2);
            }
          }
          return a2;
        } };
      }();
      var w = typeof Buffer !== "undefined" && typeof process !== "undefined" && typeof process.versions !== "undefined" && !!process.versions.node;
      var k = function() {
      };
      if (typeof Buffer !== "undefined") {
        var E = !Buffer.from;
        if (!E)
          try {
            Buffer.from("foo", "utf8");
          } catch (S) {
            E = true;
          }
        k = E ? function(e2, r2) {
          return r2 ? new Buffer(e2, r2) : new Buffer(e2);
        } : Buffer.from.bind(Buffer);
        if (!Buffer.alloc)
          Buffer.alloc = function(e2) {
            return new Buffer(e2);
          };
        if (!Buffer.allocUnsafe)
          Buffer.allocUnsafe = function(e2) {
            return new Buffer(e2);
          };
      }
      function _(e2) {
        return w ? Buffer.alloc(e2) : new Array(e2);
      }
      function C(e2) {
        return w ? Buffer.allocUnsafe(e2) : new Array(e2);
      }
      var B = function Nb(e2) {
        if (w)
          return k(e2, "binary");
        return e2.split("").map(function(e3) {
          return e3.charCodeAt(0) & 255;
        });
      };
      function T(e2) {
        if (typeof ArrayBuffer === "undefined")
          return B(e2);
        var r2 = new ArrayBuffer(e2.length), t2 = new Uint8Array(r2);
        for (var a2 = 0; a2 != e2.length; ++a2)
          t2[a2] = e2.charCodeAt(a2) & 255;
        return r2;
      }
      function y(e2) {
        if (Array.isArray(e2))
          return e2.map(function(e3) {
            return String.fromCharCode(e3);
          }).join("");
        var r2 = [];
        for (var t2 = 0; t2 < e2.length; ++t2)
          r2[t2] = String.fromCharCode(e2[t2]);
        return r2.join("");
      }
      function x(e2) {
        if (typeof Uint8Array === "undefined")
          throw new Error("Unsupported");
        return new Uint8Array(e2);
      }
      function A(e2) {
        if (typeof ArrayBuffer == "undefined")
          throw new Error("Unsupported");
        if (e2 instanceof ArrayBuffer)
          return A(new Uint8Array(e2));
        var r2 = new Array(e2.length);
        for (var t2 = 0; t2 < e2.length; ++t2)
          r2[t2] = e2[t2];
        return r2;
      }
      var I = function(e2) {
        return [].concat.apply([], e2);
      };
      var R = /\u0000/g, F = /[\u0001-\u0006]/g;
      var O = {};
      var D = function Lb(e2) {
        e2.version = "0.11.2";
        function r2(e3) {
          var r3 = "", t3 = e3.length - 1;
          while (t3 >= 0)
            r3 += e3.charAt(t3--);
          return r3;
        }
        function t2(e3, r3) {
          var t3 = "";
          while (t3.length < r3)
            t3 += e3;
          return t3;
        }
        function a2(e3, r3) {
          var a3 = "" + e3;
          return a3.length >= r3 ? a3 : t2("0", r3 - a3.length) + a3;
        }
        function n2(e3, r3) {
          var a3 = "" + e3;
          return a3.length >= r3 ? a3 : t2(" ", r3 - a3.length) + a3;
        }
        function i2(e3, r3) {
          var a3 = "" + e3;
          return a3.length >= r3 ? a3 : a3 + t2(" ", r3 - a3.length);
        }
        function s2(e3, r3) {
          var a3 = "" + Math.round(e3);
          return a3.length >= r3 ? a3 : t2("0", r3 - a3.length) + a3;
        }
        function f2(e3, r3) {
          var a3 = "" + e3;
          return a3.length >= r3 ? a3 : t2("0", r3 - a3.length) + a3;
        }
        var l2 = Math.pow(2, 32);
        function o2(e3, r3) {
          if (e3 > l2 || e3 < -l2)
            return s2(e3, r3);
          var t3 = Math.round(e3);
          return f2(t3, r3);
        }
        function c2(e3, r3) {
          r3 = r3 || 0;
          return e3.length >= 7 + r3 && (e3.charCodeAt(r3) | 32) === 103 && (e3.charCodeAt(r3 + 1) | 32) === 101 && (e3.charCodeAt(r3 + 2) | 32) === 110 && (e3.charCodeAt(r3 + 3) | 32) === 101 && (e3.charCodeAt(r3 + 4) | 32) === 114 && (e3.charCodeAt(r3 + 5) | 32) === 97 && (e3.charCodeAt(r3 + 6) | 32) === 108;
        }
        var u2 = [["Sun", "Sunday"], ["Mon", "Monday"], ["Tue", "Tuesday"], ["Wed", "Wednesday"], ["Thu", "Thursday"], ["Fri", "Friday"], ["Sat", "Saturday"]];
        var h2 = [["J", "Jan", "January"], ["F", "Feb", "February"], ["M", "Mar", "March"], ["A", "Apr", "April"], ["M", "May", "May"], ["J", "Jun", "June"], ["J", "Jul", "July"], ["A", "Aug", "August"], ["S", "Sep", "September"], ["O", "Oct", "October"], ["N", "Nov", "November"], ["D", "Dec", "December"]];
        function d2(e3) {
          e3[0] = "General";
          e3[1] = "0";
          e3[2] = "0.00";
          e3[3] = "#,##0";
          e3[4] = "#,##0.00";
          e3[9] = "0%";
          e3[10] = "0.00%";
          e3[11] = "0.00E+00";
          e3[12] = "# ?/?";
          e3[13] = "# ??/??";
          e3[14] = "m/d/yy";
          e3[15] = "d-mmm-yy";
          e3[16] = "d-mmm";
          e3[17] = "mmm-yy";
          e3[18] = "h:mm AM/PM";
          e3[19] = "h:mm:ss AM/PM";
          e3[20] = "h:mm";
          e3[21] = "h:mm:ss";
          e3[22] = "m/d/yy h:mm";
          e3[37] = "#,##0 ;(#,##0)";
          e3[38] = "#,##0 ;[Red](#,##0)";
          e3[39] = "#,##0.00;(#,##0.00)";
          e3[40] = "#,##0.00;[Red](#,##0.00)";
          e3[45] = "mm:ss";
          e3[46] = "[h]:mm:ss";
          e3[47] = "mmss.0";
          e3[48] = "##0.0E+0";
          e3[49] = "@";
          e3[56] = '"\u4E0A\u5348/\u4E0B\u5348 "hh"\u6642"mm"\u5206"ss"\u79D2 "';
        }
        var v2 = {};
        d2(v2);
        var p2 = [];
        var m2 = 0;
        for (m2 = 5; m2 <= 8; ++m2)
          p2[m2] = 32 + m2;
        for (m2 = 23; m2 <= 26; ++m2)
          p2[m2] = 0;
        for (m2 = 27; m2 <= 31; ++m2)
          p2[m2] = 14;
        for (m2 = 50; m2 <= 58; ++m2)
          p2[m2] = 14;
        for (m2 = 59; m2 <= 62; ++m2)
          p2[m2] = m2 - 58;
        for (m2 = 67; m2 <= 68; ++m2)
          p2[m2] = m2 - 58;
        for (m2 = 72; m2 <= 75; ++m2)
          p2[m2] = m2 - 58;
        for (m2 = 67; m2 <= 68; ++m2)
          p2[m2] = m2 - 57;
        for (m2 = 76; m2 <= 78; ++m2)
          p2[m2] = m2 - 56;
        for (m2 = 79; m2 <= 81; ++m2)
          p2[m2] = m2 - 34;
        var b2 = [];
        b2[5] = b2[63] = '"$"#,##0_);\\("$"#,##0\\)';
        b2[6] = b2[64] = '"$"#,##0_);[Red]\\("$"#,##0\\)';
        b2[7] = b2[65] = '"$"#,##0.00_);\\("$"#,##0.00\\)';
        b2[8] = b2[66] = '"$"#,##0.00_);[Red]\\("$"#,##0.00\\)';
        b2[41] = '_(* #,##0_);_(* \\(#,##0\\);_(* "-"_);_(@_)';
        b2[42] = '_("$"* #,##0_);_("$"* \\(#,##0\\);_("$"* "-"_);_(@_)';
        b2[43] = '_(* #,##0.00_);_(* \\(#,##0.00\\);_(* "-"??_);_(@_)';
        b2[44] = '_("$"* #,##0.00_);_("$"* \\(#,##0.00\\);_("$"* "-"??_);_(@_)';
        function g2(e3, r3, t3) {
          var a3 = e3 < 0 ? -1 : 1;
          var n3 = e3 * a3;
          var i3 = 0, s3 = 1, f3 = 0;
          var l3 = 1, o3 = 0, c3 = 0;
          var u3 = Math.floor(n3);
          while (o3 < r3) {
            u3 = Math.floor(n3);
            f3 = u3 * s3 + i3;
            c3 = u3 * o3 + l3;
            if (n3 - u3 < 5e-8)
              break;
            n3 = 1 / (n3 - u3);
            i3 = s3;
            s3 = f3;
            l3 = o3;
            o3 = c3;
          }
          if (c3 > r3) {
            if (o3 > r3) {
              c3 = l3;
              f3 = i3;
            } else {
              c3 = o3;
              f3 = s3;
            }
          }
          if (!t3)
            return [0, a3 * f3, c3];
          var h3 = Math.floor(a3 * f3 / c3);
          return [h3, a3 * f3 - h3 * c3, c3];
        }
        function w2(e3, r3, t3) {
          if (e3 > 2958465 || e3 < 0)
            return null;
          var a3 = e3 | 0, n3 = Math.floor(86400 * (e3 - a3)), i3 = 0;
          var s3 = [];
          var f3 = { D: a3, T: n3, u: 86400 * (e3 - a3) - n3, y: 0, m: 0, d: 0, H: 0, M: 0, S: 0, q: 0 };
          if (Math.abs(f3.u) < 1e-6)
            f3.u = 0;
          if (r3 && r3.date1904)
            a3 += 1462;
          if (f3.u > 0.9999) {
            f3.u = 0;
            if (++n3 == 86400) {
              f3.T = n3 = 0;
              ++a3;
              ++f3.D;
            }
          }
          if (a3 === 60) {
            s3 = t3 ? [1317, 10, 29] : [1900, 2, 29];
            i3 = 3;
          } else if (a3 === 0) {
            s3 = t3 ? [1317, 8, 29] : [1900, 1, 0];
            i3 = 6;
          } else {
            if (a3 > 60)
              --a3;
            var l3 = new Date(1900, 0, 1);
            l3.setDate(l3.getDate() + a3 - 1);
            s3 = [l3.getFullYear(), l3.getMonth() + 1, l3.getDate()];
            i3 = l3.getDay();
            if (a3 < 60)
              i3 = (i3 + 6) % 7;
            if (t3)
              i3 = y2(l3, s3);
          }
          f3.y = s3[0];
          f3.m = s3[1];
          f3.d = s3[2];
          f3.S = n3 % 60;
          n3 = Math.floor(n3 / 60);
          f3.M = n3 % 60;
          n3 = Math.floor(n3 / 60);
          f3.H = n3;
          f3.q = i3;
          return f3;
        }
        e2.parse_date_code = w2;
        var k2 = new Date(1899, 11, 31, 0, 0, 0);
        var E2 = k2.getTime();
        var S = new Date(1900, 2, 1, 0, 0, 0);
        function _2(e3, r3) {
          var t3 = e3.getTime();
          if (r3)
            t3 -= 1461 * 24 * 60 * 60 * 1e3;
          else if (e3 >= S)
            t3 += 24 * 60 * 60 * 1e3;
          return (t3 - (E2 + (e3.getTimezoneOffset() - k2.getTimezoneOffset()) * 6e4)) / (24 * 60 * 60 * 1e3);
        }
        function C2(e3) {
          return e3.toString(10);
        }
        e2._general_int = C2;
        var B2 = function H2() {
          var e3 = /(?:\.0*|(\.\d*[1-9])0+)$/;
          function r3(r4) {
            return r4.indexOf(".") == -1 ? r4 : r4.replace(e3, "$1");
          }
          var t3 = /(?:\.0*|(\.\d*[1-9])0+)[Ee]/;
          var a3 = /(E[+-])(\d)$/;
          function n3(e4) {
            if (e4.indexOf("E") == -1)
              return e4;
            return e4.replace(t3, "$1E").replace(a3, "$10$2");
          }
          function i3(e4) {
            var t4 = e4 < 0 ? 12 : 11;
            var a4 = r3(e4.toFixed(12));
            if (a4.length <= t4)
              return a4;
            a4 = e4.toPrecision(10);
            if (a4.length <= t4)
              return a4;
            return e4.toExponential(5);
          }
          function s3(e4) {
            var t4 = r3(e4.toFixed(11));
            return t4.length > (e4 < 0 ? 12 : 11) || t4 === "0" || t4 === "-0" ? e4.toPrecision(6) : t4;
          }
          function f3(e4) {
            var t4 = Math.floor(Math.log(Math.abs(e4)) * Math.LOG10E), a4;
            if (t4 >= -4 && t4 <= -1)
              a4 = e4.toPrecision(10 + t4);
            else if (Math.abs(t4) <= 9)
              a4 = i3(e4);
            else if (t4 === 10)
              a4 = e4.toFixed(10).substr(0, 12);
            else
              a4 = s3(e4);
            return r3(n3(a4.toUpperCase()));
          }
          return f3;
        }();
        e2._general_num = B2;
        function T2(e3, r3) {
          switch (typeof e3) {
            case "string":
              return e3;
            case "boolean":
              return e3 ? "TRUE" : "FALSE";
            case "number":
              return (e3 | 0) === e3 ? e3.toString(10) : B2(e3);
            case "undefined":
              return "";
            case "object":
              if (e3 == null)
                return "";
              if (e3 instanceof Date)
                return U2(14, _2(e3, r3 && r3.date1904), r3);
          }
          throw new Error("unsupported value in General format: " + e3);
        }
        e2._general = T2;
        function y2(e3, r3) {
          r3[0] -= 581;
          var t3 = e3.getDay();
          if (e3 < 60)
            t3 = (t3 + 6) % 7;
          return t3;
        }
        function x2(e3, r3, t3, n3) {
          var i3 = "", s3 = 0, f3 = 0, l3 = t3.y, o3, c3 = 0;
          switch (e3) {
            case 98:
              l3 = t3.y + 543;
            case 121:
              switch (r3.length) {
                case 1:
                  ;
                case 2:
                  o3 = l3 % 100;
                  c3 = 2;
                  break;
                default:
                  o3 = l3 % 1e4;
                  c3 = 4;
                  break;
              }
              break;
            case 109:
              switch (r3.length) {
                case 1:
                  ;
                case 2:
                  o3 = t3.m;
                  c3 = r3.length;
                  break;
                case 3:
                  return h2[t3.m - 1][1];
                case 5:
                  return h2[t3.m - 1][0];
                default:
                  return h2[t3.m - 1][2];
              }
              break;
            case 100:
              switch (r3.length) {
                case 1:
                  ;
                case 2:
                  o3 = t3.d;
                  c3 = r3.length;
                  break;
                case 3:
                  return u2[t3.q][0];
                default:
                  return u2[t3.q][1];
              }
              break;
            case 104:
              switch (r3.length) {
                case 1:
                  ;
                case 2:
                  o3 = 1 + (t3.H + 11) % 12;
                  c3 = r3.length;
                  break;
                default:
                  throw "bad hour format: " + r3;
              }
              break;
            case 72:
              switch (r3.length) {
                case 1:
                  ;
                case 2:
                  o3 = t3.H;
                  c3 = r3.length;
                  break;
                default:
                  throw "bad hour format: " + r3;
              }
              break;
            case 77:
              switch (r3.length) {
                case 1:
                  ;
                case 2:
                  o3 = t3.M;
                  c3 = r3.length;
                  break;
                default:
                  throw "bad minute format: " + r3;
              }
              break;
            case 115:
              if (r3 != "s" && r3 != "ss" && r3 != ".0" && r3 != ".00" && r3 != ".000")
                throw "bad second format: " + r3;
              if (t3.u === 0 && (r3 == "s" || r3 == "ss"))
                return a2(t3.S, r3.length);
              if (n3 >= 2)
                f3 = n3 === 3 ? 1e3 : 100;
              else
                f3 = n3 === 1 ? 10 : 1;
              s3 = Math.round(f3 * (t3.S + t3.u));
              if (s3 >= 60 * f3)
                s3 = 0;
              if (r3 === "s")
                return s3 === 0 ? "0" : "" + s3 / f3;
              i3 = a2(s3, 2 + n3);
              if (r3 === "ss")
                return i3.substr(0, 2);
              return "." + i3.substr(2, r3.length - 1);
            case 90:
              switch (r3) {
                case "[h]":
                  ;
                case "[hh]":
                  o3 = t3.D * 24 + t3.H;
                  break;
                case "[m]":
                  ;
                case "[mm]":
                  o3 = (t3.D * 24 + t3.H) * 60 + t3.M;
                  break;
                case "[s]":
                  ;
                case "[ss]":
                  o3 = ((t3.D * 24 + t3.H) * 60 + t3.M) * 60 + Math.round(t3.S + t3.u);
                  break;
                default:
                  throw "bad abstime format: " + r3;
              }
              c3 = r3.length === 3 ? 1 : 2;
              break;
            case 101:
              o3 = l3;
              c3 = 1;
              break;
          }
          var d3 = c3 > 0 ? a2(o3, c3) : "";
          return d3;
        }
        function A2(e3) {
          var r3 = 3;
          if (e3.length <= r3)
            return e3;
          var t3 = e3.length % r3, a3 = e3.substr(0, t3);
          for (; t3 != e3.length; t3 += r3)
            a3 += (a3.length > 0 ? "," : "") + e3.substr(t3, r3);
          return a3;
        }
        var I2 = function W2() {
          var e3 = /%/g;
          function s3(r3, a3, n3) {
            var i3 = a3.replace(e3, ""), s4 = a3.length - i3.length;
            return I2(r3, i3, n3 * Math.pow(10, 2 * s4)) + t2("%", s4);
          }
          function f3(e4, r3, t3) {
            var a3 = r3.length - 1;
            while (r3.charCodeAt(a3 - 1) === 44)
              --a3;
            return I2(e4, r3.substr(0, a3), t3 / Math.pow(10, 3 * (r3.length - a3)));
          }
          function l3(e4, r3) {
            var t3;
            var a3 = e4.indexOf("E") - e4.indexOf(".") - 1;
            if (e4.match(/^#+0.0E\+0$/)) {
              if (r3 == 0)
                return "0.0E+0";
              else if (r3 < 0)
                return "-" + l3(e4, -r3);
              var n3 = e4.indexOf(".");
              if (n3 === -1)
                n3 = e4.indexOf("E");
              var i3 = Math.floor(Math.log(r3) * Math.LOG10E) % n3;
              if (i3 < 0)
                i3 += n3;
              t3 = (r3 / Math.pow(10, i3)).toPrecision(a3 + 1 + (n3 + i3) % n3);
              if (t3.indexOf("e") === -1) {
                var s4 = Math.floor(Math.log(r3) * Math.LOG10E);
                if (t3.indexOf(".") === -1)
                  t3 = t3.charAt(0) + "." + t3.substr(1) + "E+" + (s4 - t3.length + i3);
                else
                  t3 += "E+" + (s4 - i3);
                while (t3.substr(0, 2) === "0.") {
                  t3 = t3.charAt(0) + t3.substr(2, n3) + "." + t3.substr(2 + n3);
                  t3 = t3.replace(/^0+([1-9])/, "$1").replace(/^0+\./, "0.");
                }
                t3 = t3.replace(/\+-/, "-");
              }
              t3 = t3.replace(/^([+-]?)(\d*)\.(\d*)[Ee]/, function(e5, r4, t4, a4) {
                return r4 + t4 + a4.substr(0, (n3 + i3) % n3) + "." + a4.substr(i3) + "E";
              });
            } else
              t3 = r3.toExponential(a3);
            if (e4.match(/E\+00$/) && t3.match(/e[+-]\d$/))
              t3 = t3.substr(0, t3.length - 1) + "0" + t3.charAt(t3.length - 1);
            if (e4.match(/E\-/) && t3.match(/e\+/))
              t3 = t3.replace(/e\+/, "e");
            return t3.replace("e", "E");
          }
          var c3 = /# (\?+)( ?)\/( ?)(\d+)/;
          function u3(e4, r3, i3) {
            var s4 = parseInt(e4[4], 10), f4 = Math.round(r3 * s4), l4 = Math.floor(f4 / s4);
            var o3 = f4 - l4 * s4, c4 = s4;
            return i3 + (l4 === 0 ? "" : "" + l4) + " " + (o3 === 0 ? t2(" ", e4[1].length + 1 + e4[4].length) : n2(o3, e4[1].length) + e4[2] + "/" + e4[3] + a2(c4, e4[4].length));
          }
          function h3(e4, r3, a3) {
            return a3 + (r3 === 0 ? "" : "" + r3) + t2(" ", e4[1].length + 2 + e4[4].length);
          }
          var d3 = /^#*0*\.([0#]+)/;
          var v3 = /\).*[0#]/;
          var p3 = /\(###\) ###\\?-####/;
          function m3(e4) {
            var r3 = "", t3;
            for (var a3 = 0; a3 != e4.length; ++a3)
              switch (t3 = e4.charCodeAt(a3)) {
                case 35:
                  break;
                case 63:
                  r3 += " ";
                  break;
                case 48:
                  r3 += "0";
                  break;
                default:
                  r3 += String.fromCharCode(t3);
              }
            return r3;
          }
          function b3(e4, r3) {
            var t3 = Math.pow(10, r3);
            return "" + Math.round(e4 * t3) / t3;
          }
          function w3(e4, r3) {
            var t3 = e4 - Math.floor(e4), a3 = Math.pow(10, r3);
            if (r3 < ("" + Math.round(t3 * a3)).length)
              return 0;
            return Math.round(t3 * a3);
          }
          function k3(e4, r3) {
            if (r3 < ("" + Math.round((e4 - Math.floor(e4)) * Math.pow(10, r3))).length) {
              return 1;
            }
            return 0;
          }
          function E3(e4) {
            if (e4 < 2147483647 && e4 > -2147483648)
              return "" + (e4 >= 0 ? e4 | 0 : e4 - 1 | 0);
            return "" + Math.floor(e4);
          }
          function S2(e4, h4, _4) {
            if (e4.charCodeAt(0) === 40 && !h4.match(v3)) {
              var C4 = h4.replace(/\( */, "").replace(/ \)/, "").replace(/\)/, "");
              if (_4 >= 0)
                return S2("n", C4, _4);
              return "(" + S2("n", C4, -_4) + ")";
            }
            if (h4.charCodeAt(h4.length - 1) === 44)
              return f3(e4, h4, _4);
            if (h4.indexOf("%") !== -1)
              return s3(e4, h4, _4);
            if (h4.indexOf("E") !== -1)
              return l3(h4, _4);
            if (h4.charCodeAt(0) === 36)
              return "$" + S2(e4, h4.substr(h4.charAt(1) == " " ? 2 : 1), _4);
            var B4;
            var T4, y3, x3, R3 = Math.abs(_4), F3 = _4 < 0 ? "-" : "";
            if (h4.match(/^00+$/))
              return F3 + o2(R3, h4.length);
            if (h4.match(/^[#?]+$/)) {
              B4 = o2(_4, 0);
              if (B4 === "0")
                B4 = "";
              return B4.length > h4.length ? B4 : m3(h4.substr(0, h4.length - B4.length)) + B4;
            }
            if (T4 = h4.match(c3))
              return u3(T4, R3, F3);
            if (h4.match(/^#+0+$/))
              return F3 + o2(R3, h4.length - h4.indexOf("0"));
            if (T4 = h4.match(d3)) {
              B4 = b3(_4, T4[1].length).replace(/^([^\.]+)$/, "$1." + m3(T4[1])).replace(/\.$/, "." + m3(T4[1])).replace(/\.(\d*)$/, function(e5, r3) {
                return "." + r3 + t2("0", m3(T4[1]).length - r3.length);
              });
              return h4.indexOf("0.") !== -1 ? B4 : B4.replace(/^0\./, ".");
            }
            h4 = h4.replace(/^#+([0.])/, "$1");
            if (T4 = h4.match(/^(0*)\.(#*)$/)) {
              return F3 + b3(R3, T4[2].length).replace(/\.(\d*[1-9])0*$/, ".$1").replace(/^(-?\d*)$/, "$1.").replace(/^0\./, T4[1].length ? "0." : ".");
            }
            if (T4 = h4.match(/^#{1,3},##0(\.?)$/))
              return F3 + A2(o2(R3, 0));
            if (T4 = h4.match(/^#,##0\.([#0]*0)$/)) {
              return _4 < 0 ? "-" + S2(e4, h4, -_4) : A2("" + (Math.floor(_4) + k3(_4, T4[1].length))) + "." + a2(w3(_4, T4[1].length), T4[1].length);
            }
            if (T4 = h4.match(/^#,#*,#0/))
              return S2(e4, h4.replace(/^#,#*,/, ""), _4);
            if (T4 = h4.match(/^([0#]+)(\\?-([0#]+))+$/)) {
              B4 = r2(S2(e4, h4.replace(/[\\-]/g, ""), _4));
              y3 = 0;
              return r2(r2(h4.replace(/\\/g, "")).replace(/[0#]/g, function(e5) {
                return y3 < B4.length ? B4.charAt(y3++) : e5 === "0" ? "0" : "";
              }));
            }
            if (h4.match(p3)) {
              B4 = S2(e4, "##########", _4);
              return "(" + B4.substr(0, 3) + ") " + B4.substr(3, 3) + "-" + B4.substr(6);
            }
            var O3 = "";
            if (T4 = h4.match(/^([#0?]+)( ?)\/( ?)([#0?]+)/)) {
              y3 = Math.min(T4[4].length, 7);
              x3 = g2(R3, Math.pow(10, y3) - 1, false);
              B4 = "" + F3;
              O3 = I2("n", T4[1], x3[1]);
              if (O3.charAt(O3.length - 1) == " ")
                O3 = O3.substr(0, O3.length - 1) + "0";
              B4 += O3 + T4[2] + "/" + T4[3];
              O3 = i2(x3[2], y3);
              if (O3.length < T4[4].length)
                O3 = m3(T4[4].substr(T4[4].length - O3.length)) + O3;
              B4 += O3;
              return B4;
            }
            if (T4 = h4.match(/^# ([#0?]+)( ?)\/( ?)([#0?]+)/)) {
              y3 = Math.min(Math.max(T4[1].length, T4[4].length), 7);
              x3 = g2(R3, Math.pow(10, y3) - 1, true);
              return F3 + (x3[0] || (x3[1] ? "" : "0")) + " " + (x3[1] ? n2(x3[1], y3) + T4[2] + "/" + T4[3] + i2(x3[2], y3) : t2(" ", 2 * y3 + 1 + T4[2].length + T4[3].length));
            }
            if (T4 = h4.match(/^[#0?]+$/)) {
              B4 = o2(_4, 0);
              if (h4.length <= B4.length)
                return B4;
              return m3(h4.substr(0, h4.length - B4.length)) + B4;
            }
            if (T4 = h4.match(/^([#0?]+)\.([#0]+)$/)) {
              B4 = "" + _4.toFixed(Math.min(T4[2].length, 10)).replace(/([^0])0+$/, "$1");
              y3 = B4.indexOf(".");
              var D3 = h4.indexOf(".") - y3, P3 = h4.length - B4.length - D3;
              return m3(h4.substr(0, D3) + B4 + h4.substr(h4.length - P3));
            }
            if (T4 = h4.match(/^00,000\.([#0]*0)$/)) {
              y3 = w3(_4, T4[1].length);
              return _4 < 0 ? "-" + S2(e4, h4, -_4) : A2(E3(_4)).replace(/^\d,\d{3}$/, "0$&").replace(/^\d*$/, function(e5) {
                return "00," + (e5.length < 3 ? a2(0, 3 - e5.length) : "") + e5;
              }) + "." + a2(y3, T4[1].length);
            }
            switch (h4) {
              case "###,##0.00":
                return S2(e4, "#,##0.00", _4);
              case "###,###":
                ;
              case "##,###":
                ;
              case "#,###":
                var N3 = A2(o2(R3, 0));
                return N3 !== "0" ? F3 + N3 : "";
              case "###,###.00":
                return S2(e4, "###,##0.00", _4).replace(/^0\./, ".");
              case "#,###.00":
                return S2(e4, "#,##0.00", _4).replace(/^0\./, ".");
              default:
                ;
            }
            throw new Error("unsupported format |" + h4 + "|");
          }
          function _3(e4, r3, t3) {
            var a3 = r3.length - 1;
            while (r3.charCodeAt(a3 - 1) === 44)
              --a3;
            return I2(e4, r3.substr(0, a3), t3 / Math.pow(10, 3 * (r3.length - a3)));
          }
          function C3(r3, a3, n3) {
            var i3 = a3.replace(e3, ""), s4 = a3.length - i3.length;
            return I2(r3, i3, n3 * Math.pow(10, 2 * s4)) + t2("%", s4);
          }
          function B3(e4, r3) {
            var t3;
            var a3 = e4.indexOf("E") - e4.indexOf(".") - 1;
            if (e4.match(/^#+0.0E\+0$/)) {
              if (r3 == 0)
                return "0.0E+0";
              else if (r3 < 0)
                return "-" + B3(e4, -r3);
              var n3 = e4.indexOf(".");
              if (n3 === -1)
                n3 = e4.indexOf("E");
              var i3 = Math.floor(Math.log(r3) * Math.LOG10E) % n3;
              if (i3 < 0)
                i3 += n3;
              t3 = (r3 / Math.pow(10, i3)).toPrecision(a3 + 1 + (n3 + i3) % n3);
              if (!t3.match(/[Ee]/)) {
                var s4 = Math.floor(Math.log(r3) * Math.LOG10E);
                if (t3.indexOf(".") === -1)
                  t3 = t3.charAt(0) + "." + t3.substr(1) + "E+" + (s4 - t3.length + i3);
                else
                  t3 += "E+" + (s4 - i3);
                t3 = t3.replace(/\+-/, "-");
              }
              t3 = t3.replace(/^([+-]?)(\d*)\.(\d*)[Ee]/, function(e5, r4, t4, a4) {
                return r4 + t4 + a4.substr(0, (n3 + i3) % n3) + "." + a4.substr(i3) + "E";
              });
            } else
              t3 = r3.toExponential(a3);
            if (e4.match(/E\+00$/) && t3.match(/e[+-]\d$/))
              t3 = t3.substr(0, t3.length - 1) + "0" + t3.charAt(t3.length - 1);
            if (e4.match(/E\-/) && t3.match(/e\+/))
              t3 = t3.replace(/e\+/, "e");
            return t3.replace("e", "E");
          }
          function T3(e4, s4, f4) {
            if (e4.charCodeAt(0) === 40 && !s4.match(v3)) {
              var l4 = s4.replace(/\( */, "").replace(/ \)/, "").replace(/\)/, "");
              if (f4 >= 0)
                return T3("n", l4, f4);
              return "(" + T3("n", l4, -f4) + ")";
            }
            if (s4.charCodeAt(s4.length - 1) === 44)
              return _3(e4, s4, f4);
            if (s4.indexOf("%") !== -1)
              return C3(e4, s4, f4);
            if (s4.indexOf("E") !== -1)
              return B3(s4, f4);
            if (s4.charCodeAt(0) === 36)
              return "$" + T3(e4, s4.substr(s4.charAt(1) == " " ? 2 : 1), f4);
            var o3;
            var u4, b4, w4, k4 = Math.abs(f4), E4 = f4 < 0 ? "-" : "";
            if (s4.match(/^00+$/))
              return E4 + a2(k4, s4.length);
            if (s4.match(/^[#?]+$/)) {
              o3 = "" + f4;
              if (f4 === 0)
                o3 = "";
              return o3.length > s4.length ? o3 : m3(s4.substr(0, s4.length - o3.length)) + o3;
            }
            if (u4 = s4.match(c3))
              return h3(u4, k4, E4);
            if (s4.match(/^#+0+$/))
              return E4 + a2(k4, s4.length - s4.indexOf("0"));
            if (u4 = s4.match(d3)) {
              o3 = ("" + f4).replace(/^([^\.]+)$/, "$1." + m3(u4[1])).replace(/\.$/, "." + m3(u4[1]));
              o3 = o3.replace(/\.(\d*)$/, function(e5, r3) {
                return "." + r3 + t2("0", m3(u4[1]).length - r3.length);
              });
              return s4.indexOf("0.") !== -1 ? o3 : o3.replace(/^0\./, ".");
            }
            s4 = s4.replace(/^#+([0.])/, "$1");
            if (u4 = s4.match(/^(0*)\.(#*)$/)) {
              return E4 + ("" + k4).replace(/\.(\d*[1-9])0*$/, ".$1").replace(/^(-?\d*)$/, "$1.").replace(/^0\./, u4[1].length ? "0." : ".");
            }
            if (u4 = s4.match(/^#{1,3},##0(\.?)$/))
              return E4 + A2("" + k4);
            if (u4 = s4.match(/^#,##0\.([#0]*0)$/)) {
              return f4 < 0 ? "-" + T3(e4, s4, -f4) : A2("" + f4) + "." + t2("0", u4[1].length);
            }
            if (u4 = s4.match(/^#,#*,#0/))
              return T3(e4, s4.replace(/^#,#*,/, ""), f4);
            if (u4 = s4.match(/^([0#]+)(\\?-([0#]+))+$/)) {
              o3 = r2(T3(e4, s4.replace(/[\\-]/g, ""), f4));
              b4 = 0;
              return r2(r2(s4.replace(/\\/g, "")).replace(/[0#]/g, function(e5) {
                return b4 < o3.length ? o3.charAt(b4++) : e5 === "0" ? "0" : "";
              }));
            }
            if (s4.match(p3)) {
              o3 = T3(e4, "##########", f4);
              return "(" + o3.substr(0, 3) + ") " + o3.substr(3, 3) + "-" + o3.substr(6);
            }
            var S3 = "";
            if (u4 = s4.match(/^([#0?]+)( ?)\/( ?)([#0?]+)/)) {
              b4 = Math.min(u4[4].length, 7);
              w4 = g2(k4, Math.pow(10, b4) - 1, false);
              o3 = "" + E4;
              S3 = I2("n", u4[1], w4[1]);
              if (S3.charAt(S3.length - 1) == " ")
                S3 = S3.substr(0, S3.length - 1) + "0";
              o3 += S3 + u4[2] + "/" + u4[3];
              S3 = i2(w4[2], b4);
              if (S3.length < u4[4].length)
                S3 = m3(u4[4].substr(u4[4].length - S3.length)) + S3;
              o3 += S3;
              return o3;
            }
            if (u4 = s4.match(/^# ([#0?]+)( ?)\/( ?)([#0?]+)/)) {
              b4 = Math.min(Math.max(u4[1].length, u4[4].length), 7);
              w4 = g2(k4, Math.pow(10, b4) - 1, true);
              return E4 + (w4[0] || (w4[1] ? "" : "0")) + " " + (w4[1] ? n2(w4[1], b4) + u4[2] + "/" + u4[3] + i2(w4[2], b4) : t2(" ", 2 * b4 + 1 + u4[2].length + u4[3].length));
            }
            if (u4 = s4.match(/^[#0?]+$/)) {
              o3 = "" + f4;
              if (s4.length <= o3.length)
                return o3;
              return m3(s4.substr(0, s4.length - o3.length)) + o3;
            }
            if (u4 = s4.match(/^([#0]+)\.([#0]+)$/)) {
              o3 = "" + f4.toFixed(Math.min(u4[2].length, 10)).replace(/([^0])0+$/, "$1");
              b4 = o3.indexOf(".");
              var y3 = s4.indexOf(".") - b4, x3 = s4.length - o3.length - y3;
              return m3(s4.substr(0, y3) + o3 + s4.substr(s4.length - x3));
            }
            if (u4 = s4.match(/^00,000\.([#0]*0)$/)) {
              return f4 < 0 ? "-" + T3(e4, s4, -f4) : A2("" + f4).replace(/^\d,\d{3}$/, "0$&").replace(/^\d*$/, function(e5) {
                return "00," + (e5.length < 3 ? a2(0, 3 - e5.length) : "") + e5;
              }) + "." + a2(0, u4[1].length);
            }
            switch (s4) {
              case "###,###":
                ;
              case "##,###":
                ;
              case "#,###":
                var R3 = A2("" + k4);
                return R3 !== "0" ? E4 + R3 : "";
              default:
                if (s4.match(/\.[0#?]*$/))
                  return T3(e4, s4.slice(0, s4.lastIndexOf(".")), f4) + m3(s4.slice(s4.lastIndexOf(".")));
            }
            throw new Error("unsupported format |" + s4 + "|");
          }
          return function y3(e4, r3, t3) {
            return (t3 | 0) === t3 ? T3(e4, r3, t3) : S2(e4, r3, t3);
          };
        }();
        function R2(e3) {
          var r3 = [];
          var t3 = false;
          for (var a3 = 0, n3 = 0; a3 < e3.length; ++a3)
            switch (e3.charCodeAt(a3)) {
              case 34:
                t3 = !t3;
                break;
              case 95:
                ;
              case 42:
                ;
              case 92:
                ++a3;
                break;
              case 59:
                r3[r3.length] = e3.substr(n3, a3 - n3);
                n3 = a3 + 1;
            }
          r3[r3.length] = e3.substr(n3);
          if (t3 === true)
            throw new Error("Format |" + e3 + "| unterminated string ");
          return r3;
        }
        e2._split = R2;
        var F2 = /\[[HhMmSs\u0E0A\u0E19\u0E17]*\]/;
        function O2(e3) {
          var r3 = 0, t3 = "", a3 = "";
          while (r3 < e3.length) {
            switch (t3 = e3.charAt(r3)) {
              case "G":
                if (c2(e3, r3))
                  r3 += 6;
                r3++;
                break;
              case '"':
                for (; e3.charCodeAt(++r3) !== 34 && r3 < e3.length; ) {
                }
                ++r3;
                break;
              case "\\":
                r3 += 2;
                break;
              case "_":
                r3 += 2;
                break;
              case "@":
                ++r3;
                break;
              case "B":
                ;
              case "b":
                if (e3.charAt(r3 + 1) === "1" || e3.charAt(r3 + 1) === "2")
                  return true;
              case "M":
                ;
              case "D":
                ;
              case "Y":
                ;
              case "H":
                ;
              case "S":
                ;
              case "E":
                ;
              case "m":
                ;
              case "d":
                ;
              case "y":
                ;
              case "h":
                ;
              case "s":
                ;
              case "e":
                ;
              case "g":
                return true;
              case "A":
                ;
              case "a":
                ;
              case "\u4E0A":
                if (e3.substr(r3, 3).toUpperCase() === "A/P")
                  return true;
                if (e3.substr(r3, 5).toUpperCase() === "AM/PM")
                  return true;
                if (e3.substr(r3, 5).toUpperCase() === "\u4E0A\u5348/\u4E0B\u5348")
                  return true;
                ++r3;
                break;
              case "[":
                a3 = t3;
                while (e3.charAt(r3++) !== "]" && r3 < e3.length)
                  a3 += e3.charAt(r3);
                if (a3.match(F2))
                  return true;
                break;
              case ".":
                ;
              case "0":
                ;
              case "#":
                while (r3 < e3.length && ("0#?.,E+-%".indexOf(t3 = e3.charAt(++r3)) > -1 || t3 == "\\" && e3.charAt(r3 + 1) == "-" && "0#".indexOf(e3.charAt(r3 + 2)) > -1)) {
                }
                break;
              case "?":
                while (e3.charAt(++r3) === t3) {
                }
                break;
              case "*":
                ++r3;
                if (e3.charAt(r3) == " " || e3.charAt(r3) == "*")
                  ++r3;
                break;
              case "(":
                ;
              case ")":
                ++r3;
                break;
              case "1":
                ;
              case "2":
                ;
              case "3":
                ;
              case "4":
                ;
              case "5":
                ;
              case "6":
                ;
              case "7":
                ;
              case "8":
                ;
              case "9":
                while (r3 < e3.length && "0123456789".indexOf(e3.charAt(++r3)) > -1) {
                }
                break;
              case " ":
                ++r3;
                break;
              default:
                ++r3;
                break;
            }
          }
          return false;
        }
        e2.is_date = O2;
        function D2(e3, r3, t3, a3) {
          var n3 = [], i3 = "", s3 = 0, f3 = "", l3 = "t", o3, u3, h3;
          var d3 = "H";
          while (s3 < e3.length) {
            switch (f3 = e3.charAt(s3)) {
              case "G":
                if (!c2(e3, s3))
                  throw new Error("unrecognized character " + f3 + " in " + e3);
                n3[n3.length] = { t: "G", v: "General" };
                s3 += 7;
                break;
              case '"':
                for (i3 = ""; (h3 = e3.charCodeAt(++s3)) !== 34 && s3 < e3.length; )
                  i3 += String.fromCharCode(h3);
                n3[n3.length] = { t: "t", v: i3 };
                ++s3;
                break;
              case "\\":
                var v3 = e3.charAt(++s3), p3 = v3 === "(" || v3 === ")" ? v3 : "t";
                n3[n3.length] = { t: p3, v: v3 };
                ++s3;
                break;
              case "_":
                n3[n3.length] = { t: "t", v: " " };
                s3 += 2;
                break;
              case "@":
                n3[n3.length] = { t: "T", v: r3 };
                ++s3;
                break;
              case "B":
                ;
              case "b":
                if (e3.charAt(s3 + 1) === "1" || e3.charAt(s3 + 1) === "2") {
                  if (o3 == null) {
                    o3 = w2(r3, t3, e3.charAt(s3 + 1) === "2");
                    if (o3 == null)
                      return "";
                  }
                  n3[n3.length] = { t: "X", v: e3.substr(s3, 2) };
                  l3 = f3;
                  s3 += 2;
                  break;
                }
                ;
              case "M":
                ;
              case "D":
                ;
              case "Y":
                ;
              case "H":
                ;
              case "S":
                ;
              case "E":
                f3 = f3.toLowerCase();
              case "m":
                ;
              case "d":
                ;
              case "y":
                ;
              case "h":
                ;
              case "s":
                ;
              case "e":
                ;
              case "g":
                if (r3 < 0)
                  return "";
                if (o3 == null) {
                  o3 = w2(r3, t3);
                  if (o3 == null)
                    return "";
                }
                i3 = f3;
                while (++s3 < e3.length && e3.charAt(s3).toLowerCase() === f3)
                  i3 += f3;
                if (f3 === "m" && l3.toLowerCase() === "h")
                  f3 = "M";
                if (f3 === "h")
                  f3 = d3;
                n3[n3.length] = { t: f3, v: i3 };
                l3 = f3;
                break;
              case "A":
                ;
              case "a":
                ;
              case "\u4E0A":
                var m3 = { t: f3, v: f3 };
                if (o3 == null)
                  o3 = w2(r3, t3);
                if (e3.substr(s3, 3).toUpperCase() === "A/P") {
                  if (o3 != null)
                    m3.v = o3.H >= 12 ? "P" : "A";
                  m3.t = "T";
                  d3 = "h";
                  s3 += 3;
                } else if (e3.substr(s3, 5).toUpperCase() === "AM/PM") {
                  if (o3 != null)
                    m3.v = o3.H >= 12 ? "PM" : "AM";
                  m3.t = "T";
                  s3 += 5;
                  d3 = "h";
                } else if (e3.substr(s3, 5).toUpperCase() === "\u4E0A\u5348/\u4E0B\u5348") {
                  if (o3 != null)
                    m3.v = o3.H >= 12 ? "\u4E0B\u5348" : "\u4E0A\u5348";
                  m3.t = "T";
                  s3 += 5;
                  d3 = "h";
                } else {
                  m3.t = "t";
                  ++s3;
                }
                if (o3 == null && m3.t === "T")
                  return "";
                n3[n3.length] = m3;
                l3 = f3;
                break;
              case "[":
                i3 = f3;
                while (e3.charAt(s3++) !== "]" && s3 < e3.length)
                  i3 += e3.charAt(s3);
                if (i3.slice(-1) !== "]")
                  throw 'unterminated "[" block: |' + i3 + "|";
                if (i3.match(F2)) {
                  if (o3 == null) {
                    o3 = w2(r3, t3);
                    if (o3 == null)
                      return "";
                  }
                  n3[n3.length] = { t: "Z", v: i3.toLowerCase() };
                  l3 = i3.charAt(1);
                } else if (i3.indexOf("$") > -1) {
                  i3 = (i3.match(/\$([^-\[\]]*)/) || [])[1] || "$";
                  if (!O2(e3))
                    n3[n3.length] = { t: "t", v: i3 };
                }
                break;
              case ".":
                if (o3 != null) {
                  i3 = f3;
                  while (++s3 < e3.length && (f3 = e3.charAt(s3)) === "0")
                    i3 += f3;
                  n3[n3.length] = { t: "s", v: i3 };
                  break;
                }
                ;
              case "0":
                ;
              case "#":
                i3 = f3;
                while (++s3 < e3.length && "0#?.,E+-%".indexOf(f3 = e3.charAt(s3)) > -1)
                  i3 += f3;
                n3[n3.length] = { t: "n", v: i3 };
                break;
              case "?":
                i3 = f3;
                while (e3.charAt(++s3) === f3)
                  i3 += f3;
                n3[n3.length] = { t: f3, v: i3 };
                l3 = f3;
                break;
              case "*":
                ++s3;
                if (e3.charAt(s3) == " " || e3.charAt(s3) == "*")
                  ++s3;
                break;
              case "(":
                ;
              case ")":
                n3[n3.length] = { t: a3 === 1 ? "t" : f3, v: f3 };
                ++s3;
                break;
              case "1":
                ;
              case "2":
                ;
              case "3":
                ;
              case "4":
                ;
              case "5":
                ;
              case "6":
                ;
              case "7":
                ;
              case "8":
                ;
              case "9":
                i3 = f3;
                while (s3 < e3.length && "0123456789".indexOf(e3.charAt(++s3)) > -1)
                  i3 += e3.charAt(s3);
                n3[n3.length] = { t: "D", v: i3 };
                break;
              case " ":
                n3[n3.length] = { t: f3, v: f3 };
                ++s3;
                break;
              case "$":
                n3[n3.length] = { t: "t", v: "$" };
                ++s3;
                break;
              default:
                if (",$-+/():!^&'~{}<>=\u20ACacfijklopqrtuvwxzP".indexOf(f3) === -1)
                  throw new Error("unrecognized character " + f3 + " in " + e3);
                n3[n3.length] = { t: "t", v: f3 };
                ++s3;
                break;
            }
          }
          var b3 = 0, g3 = 0, k3;
          for (s3 = n3.length - 1, l3 = "t"; s3 >= 0; --s3) {
            switch (n3[s3].t) {
              case "h":
                ;
              case "H":
                n3[s3].t = d3;
                l3 = "h";
                if (b3 < 1)
                  b3 = 1;
                break;
              case "s":
                if (k3 = n3[s3].v.match(/\.0+$/))
                  g3 = Math.max(g3, k3[0].length - 1);
                if (b3 < 3)
                  b3 = 3;
              case "d":
                ;
              case "y":
                ;
              case "M":
                ;
              case "e":
                l3 = n3[s3].t;
                break;
              case "m":
                if (l3 === "s") {
                  n3[s3].t = "M";
                  if (b3 < 2)
                    b3 = 2;
                }
                break;
              case "X":
                break;
              case "Z":
                if (b3 < 1 && n3[s3].v.match(/[Hh]/))
                  b3 = 1;
                if (b3 < 2 && n3[s3].v.match(/[Mm]/))
                  b3 = 2;
                if (b3 < 3 && n3[s3].v.match(/[Ss]/))
                  b3 = 3;
            }
          }
          switch (b3) {
            case 0:
              break;
            case 1:
              if (o3.u >= 0.5) {
                o3.u = 0;
                ++o3.S;
              }
              if (o3.S >= 60) {
                o3.S = 0;
                ++o3.M;
              }
              if (o3.M >= 60) {
                o3.M = 0;
                ++o3.H;
              }
              break;
            case 2:
              if (o3.u >= 0.5) {
                o3.u = 0;
                ++o3.S;
              }
              if (o3.S >= 60) {
                o3.S = 0;
                ++o3.M;
              }
              break;
          }
          var E3 = "", S2;
          for (s3 = 0; s3 < n3.length; ++s3) {
            switch (n3[s3].t) {
              case "t":
                ;
              case "T":
                ;
              case " ":
                ;
              case "D":
                break;
              case "X":
                n3[s3].v = "";
                n3[s3].t = ";";
                break;
              case "d":
                ;
              case "m":
                ;
              case "y":
                ;
              case "h":
                ;
              case "H":
                ;
              case "M":
                ;
              case "s":
                ;
              case "e":
                ;
              case "b":
                ;
              case "Z":
                n3[s3].v = x2(n3[s3].t.charCodeAt(0), n3[s3].v, o3, g3);
                n3[s3].t = "t";
                break;
              case "n":
                ;
              case "?":
                S2 = s3 + 1;
                while (n3[S2] != null && ((f3 = n3[S2].t) === "?" || f3 === "D" || (f3 === " " || f3 === "t") && n3[S2 + 1] != null && (n3[S2 + 1].t === "?" || n3[S2 + 1].t === "t" && n3[S2 + 1].v === "/") || n3[s3].t === "(" && (f3 === " " || f3 === "n" || f3 === ")") || f3 === "t" && (n3[S2].v === "/" || n3[S2].v === " " && n3[S2 + 1] != null && n3[S2 + 1].t == "?"))) {
                  n3[s3].v += n3[S2].v;
                  n3[S2] = { v: "", t: ";" };
                  ++S2;
                }
                E3 += n3[s3].v;
                s3 = S2 - 1;
                break;
              case "G":
                n3[s3].t = "t";
                n3[s3].v = T2(r3, t3);
                break;
            }
          }
          var _3 = "", C3, B3;
          if (E3.length > 0) {
            if (E3.charCodeAt(0) == 40) {
              C3 = r3 < 0 && E3.charCodeAt(0) === 45 ? -r3 : r3;
              B3 = I2("n", E3, C3);
            } else {
              C3 = r3 < 0 && a3 > 1 ? -r3 : r3;
              B3 = I2("n", E3, C3);
              if (C3 < 0 && n3[0] && n3[0].t == "t") {
                B3 = B3.substr(1);
                n3[0].v = "-" + n3[0].v;
              }
            }
            S2 = B3.length - 1;
            var y3 = n3.length;
            for (s3 = 0; s3 < n3.length; ++s3)
              if (n3[s3] != null && n3[s3].t != "t" && n3[s3].v.indexOf(".") > -1) {
                y3 = s3;
                break;
              }
            var A3 = n3.length;
            if (y3 === n3.length && B3.indexOf("E") === -1) {
              for (s3 = n3.length - 1; s3 >= 0; --s3) {
                if (n3[s3] == null || "n?".indexOf(n3[s3].t) === -1)
                  continue;
                if (S2 >= n3[s3].v.length - 1) {
                  S2 -= n3[s3].v.length;
                  n3[s3].v = B3.substr(S2 + 1, n3[s3].v.length);
                } else if (S2 < 0)
                  n3[s3].v = "";
                else {
                  n3[s3].v = B3.substr(0, S2 + 1);
                  S2 = -1;
                }
                n3[s3].t = "t";
                A3 = s3;
              }
              if (S2 >= 0 && A3 < n3.length)
                n3[A3].v = B3.substr(0, S2 + 1) + n3[A3].v;
            } else if (y3 !== n3.length && B3.indexOf("E") === -1) {
              S2 = B3.indexOf(".") - 1;
              for (s3 = y3; s3 >= 0; --s3) {
                if (n3[s3] == null || "n?".indexOf(n3[s3].t) === -1)
                  continue;
                u3 = n3[s3].v.indexOf(".") > -1 && s3 === y3 ? n3[s3].v.indexOf(".") - 1 : n3[s3].v.length - 1;
                _3 = n3[s3].v.substr(u3 + 1);
                for (; u3 >= 0; --u3) {
                  if (S2 >= 0 && (n3[s3].v.charAt(u3) === "0" || n3[s3].v.charAt(u3) === "#"))
                    _3 = B3.charAt(S2--) + _3;
                }
                n3[s3].v = _3;
                n3[s3].t = "t";
                A3 = s3;
              }
              if (S2 >= 0 && A3 < n3.length)
                n3[A3].v = B3.substr(0, S2 + 1) + n3[A3].v;
              S2 = B3.indexOf(".") + 1;
              for (s3 = y3; s3 < n3.length; ++s3) {
                if (n3[s3] == null || "n?(".indexOf(n3[s3].t) === -1 && s3 !== y3)
                  continue;
                u3 = n3[s3].v.indexOf(".") > -1 && s3 === y3 ? n3[s3].v.indexOf(".") + 1 : 0;
                _3 = n3[s3].v.substr(0, u3);
                for (; u3 < n3[s3].v.length; ++u3) {
                  if (S2 < B3.length)
                    _3 += B3.charAt(S2++);
                }
                n3[s3].v = _3;
                n3[s3].t = "t";
                A3 = s3;
              }
            }
          }
          for (s3 = 0; s3 < n3.length; ++s3)
            if (n3[s3] != null && "n?".indexOf(n3[s3].t) > -1) {
              C3 = a3 > 1 && r3 < 0 && s3 > 0 && n3[s3 - 1].v === "-" ? -r3 : r3;
              n3[s3].v = I2(n3[s3].t, n3[s3].v, C3);
              n3[s3].t = "t";
            }
          var R3 = "";
          for (s3 = 0; s3 !== n3.length; ++s3)
            if (n3[s3] != null)
              R3 += n3[s3].v;
          return R3;
        }
        e2._eval = D2;
        var P2 = /\[[=<>]/;
        var N2 = /\[(=|>[=]?|<[>=]?)(-?\d+(?:\.\d*)?)\]/;
        function L2(e3, r3) {
          if (r3 == null)
            return false;
          var t3 = parseFloat(r3[2]);
          switch (r3[1]) {
            case "=":
              if (e3 == t3)
                return true;
              break;
            case ">":
              if (e3 > t3)
                return true;
              break;
            case "<":
              if (e3 < t3)
                return true;
              break;
            case "<>":
              if (e3 != t3)
                return true;
              break;
            case ">=":
              if (e3 >= t3)
                return true;
              break;
            case "<=":
              if (e3 <= t3)
                return true;
              break;
          }
          return false;
        }
        function M2(e3, r3) {
          var t3 = R2(e3);
          var a3 = t3.length, n3 = t3[a3 - 1].indexOf("@");
          if (a3 < 4 && n3 > -1)
            --a3;
          if (t3.length > 4)
            throw new Error("cannot find right format for |" + t3.join("|") + "|");
          if (typeof r3 !== "number")
            return [4, t3.length === 4 || n3 > -1 ? t3[t3.length - 1] : "@"];
          switch (t3.length) {
            case 1:
              t3 = n3 > -1 ? ["General", "General", "General", t3[0]] : [t3[0], t3[0], t3[0], "@"];
              break;
            case 2:
              t3 = n3 > -1 ? [t3[0], t3[0], t3[0], t3[1]] : [t3[0], t3[1], t3[0], "@"];
              break;
            case 3:
              t3 = n3 > -1 ? [t3[0], t3[1], t3[0], t3[2]] : [t3[0], t3[1], t3[2], "@"];
              break;
            case 4:
              break;
          }
          var i3 = r3 > 0 ? t3[0] : r3 < 0 ? t3[1] : t3[2];
          if (t3[0].indexOf("[") === -1 && t3[1].indexOf("[") === -1)
            return [a3, i3];
          if (t3[0].match(P2) != null || t3[1].match(P2) != null) {
            var s3 = t3[0].match(N2);
            var f3 = t3[1].match(N2);
            return L2(r3, s3) ? [a3, t3[0]] : L2(r3, f3) ? [a3, t3[1]] : [a3, t3[s3 != null && f3 != null ? 2 : 1]];
          }
          return [a3, i3];
        }
        function U2(e3, r3, t3) {
          if (t3 == null)
            t3 = {};
          var a3 = "";
          switch (typeof e3) {
            case "string":
              if (e3 == "m/d/yy" && t3.dateNF)
                a3 = t3.dateNF;
              else
                a3 = e3;
              break;
            case "number":
              if (e3 == 14 && t3.dateNF)
                a3 = t3.dateNF;
              else
                a3 = (t3.table != null ? t3.table : v2)[e3];
              if (a3 == null)
                a3 = t3.table && t3.table[p2[e3]] || v2[p2[e3]];
              if (a3 == null)
                a3 = b2[e3] || "General";
              break;
          }
          if (c2(a3, 0))
            return T2(r3, t3);
          if (r3 instanceof Date)
            r3 = _2(r3, t3.date1904);
          var n3 = M2(a3, r3);
          if (c2(n3[1]))
            return T2(r3, t3);
          if (r3 === true)
            r3 = "TRUE";
          else if (r3 === false)
            r3 = "FALSE";
          else if (r3 === "" || r3 == null)
            return "";
          return D2(n3[1], r3, t3, n3[0]);
        }
        function z2(e3, r3) {
          if (typeof r3 != "number") {
            r3 = +r3 || -1;
            for (var t3 = 0; t3 < 392; ++t3) {
              if (v2[t3] == void 0) {
                if (r3 < 0)
                  r3 = t3;
                continue;
              }
              if (v2[t3] == e3) {
                r3 = t3;
                break;
              }
            }
            if (r3 < 0)
              r3 = 391;
          }
          v2[r3] = e3;
          return r3;
        }
        e2.load = z2;
        e2._table = v2;
        e2.get_table = function V2() {
          return v2;
        };
        e2.load_table = function X2(e3) {
          for (var r3 = 0; r3 != 392; ++r3)
            if (e3[r3] !== void 0)
              z2(e3[r3], r3);
        };
        e2.init_table = d2;
        e2.format = U2;
      };
      D(O);
      var P = { "General Number": "General", "General Date": O._table[22], "Long Date": "dddd, mmmm dd, yyyy", "Medium Date": O._table[15], "Short Date": O._table[14], "Long Time": O._table[19], "Medium Time": O._table[18], "Short Time": O._table[20], Currency: '"$"#,##0.00_);[Red]\\("$"#,##0.00\\)', Fixed: O._table[2], Standard: O._table[4], Percent: O._table[10], Scientific: O._table[11], "Yes/No": '"Yes";"Yes";"No";@', "True/False": '"True";"True";"False";@', "On/Off": '"Yes";"Yes";"No";@' };
      var N = { 5: '"$"#,##0_);\\("$"#,##0\\)', 6: '"$"#,##0_);[Red]\\("$"#,##0\\)', 7: '"$"#,##0.00_);\\("$"#,##0.00\\)', 8: '"$"#,##0.00_);[Red]\\("$"#,##0.00\\)', 23: "General", 24: "General", 25: "General", 26: "General", 27: "m/d/yy", 28: "m/d/yy", 29: "m/d/yy", 30: "m/d/yy", 31: "m/d/yy", 32: "h:mm:ss", 33: "h:mm:ss", 34: "h:mm:ss", 35: "h:mm:ss", 36: "m/d/yy", 41: '_(* #,##0_);_(* (#,##0);_(* "-"_);_(@_)', 42: '_("$"* #,##0_);_("$"* (#,##0);_("$"* "-"_);_(@_)', 43: '_(* #,##0.00_);_(* (#,##0.00);_(* "-"??_);_(@_)', 44: '_("$"* #,##0.00_);_("$"* (#,##0.00);_("$"* "-"??_);_(@_)', 50: "m/d/yy", 51: "m/d/yy", 52: "m/d/yy", 53: "m/d/yy", 54: "m/d/yy", 55: "m/d/yy", 56: "m/d/yy", 57: "m/d/yy", 58: "m/d/yy", 59: "0", 60: "0.00", 61: "#,##0", 62: "#,##0.00", 63: '"$"#,##0_);\\("$"#,##0\\)', 64: '"$"#,##0_);[Red]\\("$"#,##0\\)', 65: '"$"#,##0.00_);\\("$"#,##0.00\\)', 66: '"$"#,##0.00_);[Red]\\("$"#,##0.00\\)', 67: "0%", 68: "0.00%", 69: "# ?/?", 70: "# ??/??", 71: "m/d/yy", 72: "m/d/yy", 73: "d-mmm-yy", 74: "d-mmm", 75: "mmm-yy", 76: "h:mm", 77: "h:mm:ss", 78: "m/d/yy h:mm", 79: "mm:ss", 80: "[h]:mm:ss", 81: "mmss.0" };
      var L = /[dD]+|[mM]+|[yYeE]+|[Hh]+|[Ss]+/g;
      function M(e2) {
        var r2 = typeof e2 == "number" ? O._table[e2] : e2;
        r2 = r2.replace(L, "(\\d+)");
        return new RegExp("^" + r2 + "$");
      }
      function U(e2, r2, t2) {
        var a2 = -1, n2 = -1, i2 = -1, s2 = -1, f2 = -1, l2 = -1;
        (r2.match(L) || []).forEach(function(e3, r3) {
          var o3 = parseInt(t2[r3 + 1], 10);
          switch (e3.toLowerCase().charAt(0)) {
            case "y":
              a2 = o3;
              break;
            case "d":
              i2 = o3;
              break;
            case "h":
              s2 = o3;
              break;
            case "s":
              l2 = o3;
              break;
            case "m":
              if (s2 >= 0)
                f2 = o3;
              else
                n2 = o3;
              break;
          }
        });
        if (l2 >= 0 && f2 == -1 && n2 >= 0) {
          f2 = n2;
          n2 = -1;
        }
        var o2 = ("" + (a2 >= 0 ? a2 : new Date().getFullYear())).slice(-4) + "-" + ("00" + (n2 >= 1 ? n2 : 1)).slice(-2) + "-" + ("00" + (i2 >= 1 ? i2 : 1)).slice(-2);
        if (o2.length == 7)
          o2 = "0" + o2;
        if (o2.length == 8)
          o2 = "20" + o2;
        var c2 = ("00" + (s2 >= 0 ? s2 : 0)).slice(-2) + ":" + ("00" + (f2 >= 0 ? f2 : 0)).slice(-2) + ":" + ("00" + (l2 >= 0 ? l2 : 0)).slice(-2);
        if (s2 == -1 && f2 == -1 && l2 == -1)
          return o2;
        if (a2 == -1 && n2 == -1 && i2 == -1)
          return c2;
        return o2 + "T" + c2;
      }
      var z = true;
      var H;
      (function(e2) {
        e2(H = {});
      })(function(e2) {
        e2.version = "1.2.0";
        function r2() {
          var e3 = 0, r3 = new Array(256);
          for (var t3 = 0; t3 != 256; ++t3) {
            e3 = t3;
            e3 = e3 & 1 ? -306674912 ^ e3 >>> 1 : e3 >>> 1;
            e3 = e3 & 1 ? -306674912 ^ e3 >>> 1 : e3 >>> 1;
            e3 = e3 & 1 ? -306674912 ^ e3 >>> 1 : e3 >>> 1;
            e3 = e3 & 1 ? -306674912 ^ e3 >>> 1 : e3 >>> 1;
            e3 = e3 & 1 ? -306674912 ^ e3 >>> 1 : e3 >>> 1;
            e3 = e3 & 1 ? -306674912 ^ e3 >>> 1 : e3 >>> 1;
            e3 = e3 & 1 ? -306674912 ^ e3 >>> 1 : e3 >>> 1;
            e3 = e3 & 1 ? -306674912 ^ e3 >>> 1 : e3 >>> 1;
            r3[t3] = e3;
          }
          return typeof Int32Array !== "undefined" ? new Int32Array(r3) : r3;
        }
        var t2 = r2();
        function a2(e3, r3) {
          var a3 = r3 ^ -1, n3 = e3.length - 1;
          for (var i3 = 0; i3 < n3; ) {
            a3 = a3 >>> 8 ^ t2[(a3 ^ e3.charCodeAt(i3++)) & 255];
            a3 = a3 >>> 8 ^ t2[(a3 ^ e3.charCodeAt(i3++)) & 255];
          }
          if (i3 === n3)
            a3 = a3 >>> 8 ^ t2[(a3 ^ e3.charCodeAt(i3)) & 255];
          return a3 ^ -1;
        }
        function n2(e3, r3) {
          if (e3.length > 1e4)
            return i2(e3, r3);
          var a3 = r3 ^ -1, n3 = e3.length - 3;
          for (var s3 = 0; s3 < n3; ) {
            a3 = a3 >>> 8 ^ t2[(a3 ^ e3[s3++]) & 255];
            a3 = a3 >>> 8 ^ t2[(a3 ^ e3[s3++]) & 255];
            a3 = a3 >>> 8 ^ t2[(a3 ^ e3[s3++]) & 255];
            a3 = a3 >>> 8 ^ t2[(a3 ^ e3[s3++]) & 255];
          }
          while (s3 < n3 + 3)
            a3 = a3 >>> 8 ^ t2[(a3 ^ e3[s3++]) & 255];
          return a3 ^ -1;
        }
        function i2(e3, r3) {
          var a3 = r3 ^ -1, n3 = e3.length - 7;
          for (var i3 = 0; i3 < n3; ) {
            a3 = a3 >>> 8 ^ t2[(a3 ^ e3[i3++]) & 255];
            a3 = a3 >>> 8 ^ t2[(a3 ^ e3[i3++]) & 255];
            a3 = a3 >>> 8 ^ t2[(a3 ^ e3[i3++]) & 255];
            a3 = a3 >>> 8 ^ t2[(a3 ^ e3[i3++]) & 255];
            a3 = a3 >>> 8 ^ t2[(a3 ^ e3[i3++]) & 255];
            a3 = a3 >>> 8 ^ t2[(a3 ^ e3[i3++]) & 255];
            a3 = a3 >>> 8 ^ t2[(a3 ^ e3[i3++]) & 255];
            a3 = a3 >>> 8 ^ t2[(a3 ^ e3[i3++]) & 255];
          }
          while (i3 < n3 + 7)
            a3 = a3 >>> 8 ^ t2[(a3 ^ e3[i3++]) & 255];
          return a3 ^ -1;
        }
        function s2(e3, r3) {
          var a3 = r3 ^ -1;
          for (var n3 = 0, i3 = e3.length, s3, f2; n3 < i3; ) {
            s3 = e3.charCodeAt(n3++);
            if (s3 < 128) {
              a3 = a3 >>> 8 ^ t2[(a3 ^ s3) & 255];
            } else if (s3 < 2048) {
              a3 = a3 >>> 8 ^ t2[(a3 ^ (192 | s3 >> 6 & 31)) & 255];
              a3 = a3 >>> 8 ^ t2[(a3 ^ (128 | s3 & 63)) & 255];
            } else if (s3 >= 55296 && s3 < 57344) {
              s3 = (s3 & 1023) + 64;
              f2 = e3.charCodeAt(n3++) & 1023;
              a3 = a3 >>> 8 ^ t2[(a3 ^ (240 | s3 >> 8 & 7)) & 255];
              a3 = a3 >>> 8 ^ t2[(a3 ^ (128 | s3 >> 2 & 63)) & 255];
              a3 = a3 >>> 8 ^ t2[(a3 ^ (128 | f2 >> 6 & 15 | (s3 & 3) << 4)) & 255];
              a3 = a3 >>> 8 ^ t2[(a3 ^ (128 | f2 & 63)) & 255];
            } else {
              a3 = a3 >>> 8 ^ t2[(a3 ^ (224 | s3 >> 12 & 15)) & 255];
              a3 = a3 >>> 8 ^ t2[(a3 ^ (128 | s3 >> 6 & 63)) & 255];
              a3 = a3 >>> 8 ^ t2[(a3 ^ (128 | s3 & 63)) & 255];
            }
          }
          return a3 ^ -1;
        }
        e2.table = t2;
        e2.bstr = a2;
        e2.buf = n2;
        e2.str = s2;
      });
      var W = function Mb() {
        var e2 = {};
        e2.version = "1.1.4";
        function r2(e3, r3) {
          var t3 = e3.split("/"), a3 = r3.split("/");
          for (var n3 = 0, i3 = 0, s3 = Math.min(t3.length, a3.length); n3 < s3; ++n3) {
            if (i3 = t3[n3].length - a3[n3].length)
              return i3;
            if (t3[n3] != a3[n3])
              return t3[n3] < a3[n3] ? -1 : 1;
          }
          return t3.length - a3.length;
        }
        function t2(e3) {
          if (e3.charAt(e3.length - 1) == "/")
            return e3.slice(0, -1).indexOf("/") === -1 ? e3 : t2(e3.slice(0, -1));
          var r3 = e3.lastIndexOf("/");
          return r3 === -1 ? e3 : e3.slice(0, r3 + 1);
        }
        function a2(e3) {
          if (e3.charAt(e3.length - 1) == "/")
            return a2(e3.slice(0, -1));
          var r3 = e3.lastIndexOf("/");
          return r3 === -1 ? e3 : e3.slice(r3 + 1);
        }
        function n2(e3, r3) {
          if (typeof r3 === "string")
            r3 = new Date(r3);
          var t3 = r3.getHours();
          t3 = t3 << 6 | r3.getMinutes();
          t3 = t3 << 5 | r3.getSeconds() >>> 1;
          e3._W(2, t3);
          var a3 = r3.getFullYear() - 1980;
          a3 = a3 << 4 | r3.getMonth() + 1;
          a3 = a3 << 5 | r3.getDate();
          e3._W(2, a3);
        }
        function i2(e3) {
          var r3 = e3._R(2) & 65535;
          var t3 = e3._R(2) & 65535;
          var a3 = new Date();
          var n3 = t3 & 31;
          t3 >>>= 5;
          var i3 = t3 & 15;
          t3 >>>= 4;
          a3.setMilliseconds(0);
          a3.setFullYear(t3 + 1980);
          a3.setMonth(i3 - 1);
          a3.setDate(n3);
          var s3 = r3 & 31;
          r3 >>>= 5;
          var f3 = r3 & 63;
          r3 >>>= 6;
          a3.setHours(r3);
          a3.setMinutes(f3);
          a3.setSeconds(s3 << 1);
          return a3;
        }
        function s2(e3) {
          Yr(e3, 0);
          var r3 = {};
          var t3 = 0;
          while (e3.l <= e3.length - 4) {
            var a3 = e3._R(2);
            var n3 = e3._R(2), i3 = e3.l + n3;
            var s3 = {};
            switch (a3) {
              case 21589:
                {
                  t3 = e3._R(1);
                  if (t3 & 1)
                    s3.mtime = e3._R(4);
                  if (n3 > 5) {
                    if (t3 & 2)
                      s3.atime = e3._R(4);
                    if (t3 & 4)
                      s3.ctime = e3._R(4);
                  }
                  if (s3.mtime)
                    s3.mt = new Date(s3.mtime * 1e3);
                }
                break;
            }
            e3.l = i3;
            r3[a3] = s3;
          }
          return r3;
        }
        var f2;
        function l2() {
          return f2 || (f2 = (init_fs(), fs_exports));
        }
        function o2(e3, r3) {
          if (e3[0] == 80 && e3[1] == 75)
            return Te2(e3, r3);
          if (e3.length < 512)
            throw new Error("CFB file size " + e3.length + " < 512");
          var t3 = 3;
          var a3 = 512;
          var n3 = 0;
          var i3 = 0;
          var s3 = 0;
          var f3 = 0;
          var l3 = 0;
          var o3 = [];
          var v3 = e3.slice(0, 512);
          Yr(v3, 0);
          var m3 = c2(v3);
          t3 = m3[0];
          switch (t3) {
            case 3:
              a3 = 512;
              break;
            case 4:
              a3 = 4096;
              break;
            case 0:
              if (m3[1] == 0)
                return Te2(e3, r3);
            default:
              throw new Error("Major Version: Expected 3 or 4 saw " + t3);
          }
          if (a3 !== 512) {
            v3 = e3.slice(0, a3);
            Yr(v3, 28);
          }
          var g2 = e3.slice(0, a3);
          u2(v3, t3);
          var w2 = v3._R(4, "i");
          if (t3 === 3 && w2 !== 0)
            throw new Error("# Directory Sectors: Expected 0 saw " + w2);
          v3.l += 4;
          s3 = v3._R(4, "i");
          v3.l += 4;
          v3.chk("00100000", "Mini Stream Cutoff Size: ");
          f3 = v3._R(4, "i");
          n3 = v3._R(4, "i");
          l3 = v3._R(4, "i");
          i3 = v3._R(4, "i");
          for (var E3 = -1, S2 = 0; S2 < 109; ++S2) {
            E3 = v3._R(4, "i");
            if (E3 < 0)
              break;
            o3[S2] = E3;
          }
          var _2 = h2(e3, a3);
          p2(l3, i3, _2, a3, o3);
          var C2 = b2(_2, s3, o3, a3);
          C2[s3].name = "!Directory";
          if (n3 > 0 && f3 !== N2)
            C2[f3].name = "!MiniFAT";
          C2[o3[0]].name = "!FAT";
          C2.fat_addrs = o3;
          C2.ssz = a3;
          var B2 = {}, T3 = [], y3 = [], x3 = [];
          k2(s3, C2, _2, T3, n3, B2, y3, f3);
          d2(y3, x3, T3);
          T3.shift();
          var A3 = { FileIndex: y3, FullPaths: x3 };
          if (r3 && r3.raw)
            A3.raw = { header: g2, sectors: _2 };
          return A3;
        }
        function c2(e3) {
          if (e3[e3.l] == 80 && e3[e3.l + 1] == 75)
            return [0, 0];
          e3.chk(L2, "Header Signature: ");
          e3.l += 16;
          var r3 = e3._R(2, "u");
          return [e3._R(2, "u"), r3];
        }
        function u2(e3, r3) {
          var t3 = 9;
          e3.l += 2;
          switch (t3 = e3._R(2)) {
            case 9:
              if (r3 != 3)
                throw new Error("Sector Shift: Expected 9 saw " + t3);
              break;
            case 12:
              if (r3 != 4)
                throw new Error("Sector Shift: Expected 12 saw " + t3);
              break;
            default:
              throw new Error("Sector Shift: Expected 9 or 12 saw " + t3);
          }
          e3.chk("0600", "Mini Sector Shift: ");
          e3.chk("000000000000", "Reserved: ");
        }
        function h2(e3, r3) {
          var t3 = Math.ceil(e3.length / r3) - 1;
          var a3 = [];
          for (var n3 = 1; n3 < t3; ++n3)
            a3[n3 - 1] = e3.slice(n3 * r3, (n3 + 1) * r3);
          a3[t3 - 1] = e3.slice(t3 * r3);
          return a3;
        }
        function d2(e3, r3, t3) {
          var a3 = 0, n3 = 0, i3 = 0, s3 = 0, f3 = 0, l3 = t3.length;
          var o3 = [], c3 = [];
          for (; a3 < l3; ++a3) {
            o3[a3] = c3[a3] = a3;
            r3[a3] = t3[a3];
          }
          for (; f3 < c3.length; ++f3) {
            a3 = c3[f3];
            n3 = e3[a3].L;
            i3 = e3[a3].R;
            s3 = e3[a3].C;
            if (o3[a3] === a3) {
              if (n3 !== -1 && o3[n3] !== n3)
                o3[a3] = o3[n3];
              if (i3 !== -1 && o3[i3] !== i3)
                o3[a3] = o3[i3];
            }
            if (s3 !== -1)
              o3[s3] = a3;
            if (n3 !== -1 && a3 != o3[a3]) {
              o3[n3] = o3[a3];
              if (c3.lastIndexOf(n3) < f3)
                c3.push(n3);
            }
            if (i3 !== -1 && a3 != o3[a3]) {
              o3[i3] = o3[a3];
              if (c3.lastIndexOf(i3) < f3)
                c3.push(i3);
            }
          }
          for (a3 = 1; a3 < l3; ++a3)
            if (o3[a3] === a3) {
              if (i3 !== -1 && o3[i3] !== i3)
                o3[a3] = o3[i3];
              else if (n3 !== -1 && o3[n3] !== n3)
                o3[a3] = o3[n3];
            }
          for (a3 = 1; a3 < l3; ++a3) {
            if (e3[a3].type === 0)
              continue;
            f3 = a3;
            if (f3 != o3[f3])
              do {
                f3 = o3[f3];
                r3[a3] = r3[f3] + "/" + r3[a3];
              } while (f3 !== 0 && o3[f3] !== -1 && f3 != o3[f3]);
            o3[a3] = -1;
          }
          r3[0] += "/";
          for (a3 = 1; a3 < l3; ++a3) {
            if (e3[a3].type !== 2)
              r3[a3] += "/";
          }
        }
        function v2(e3, r3, t3) {
          var a3 = e3.start, n3 = e3.size;
          var i3 = [];
          var s3 = a3;
          while (t3 && n3 > 0 && s3 >= 0) {
            i3.push(r3.slice(s3 * P2, s3 * P2 + P2));
            n3 -= P2;
            s3 = Hr(t3, s3 * 4);
          }
          if (i3.length === 0)
            return Jr(0);
          return I(i3).slice(0, e3.size);
        }
        function p2(e3, r3, t3, a3, n3) {
          var i3 = N2;
          if (e3 === N2) {
            if (r3 !== 0)
              throw new Error("DIFAT chain shorter than expected");
          } else if (e3 !== -1) {
            var s3 = t3[e3], f3 = (a3 >>> 2) - 1;
            if (!s3)
              return;
            for (var l3 = 0; l3 < f3; ++l3) {
              if ((i3 = Hr(s3, l3 * 4)) === N2)
                break;
              n3.push(i3);
            }
            if (r3 >= 1)
              p2(Hr(s3, a3 - 4), r3 - 1, t3, a3, n3);
          }
        }
        function m2(e3, r3, t3, a3, n3) {
          var i3 = [], s3 = [];
          if (!n3)
            n3 = [];
          var f3 = a3 - 1, l3 = 0, o3 = 0;
          for (l3 = r3; l3 >= 0; ) {
            n3[l3] = true;
            i3[i3.length] = l3;
            s3.push(e3[l3]);
            var c3 = t3[Math.floor(l3 * 4 / a3)];
            o3 = l3 * 4 & f3;
            if (a3 < 4 + o3)
              throw new Error("FAT boundary crossed: " + l3 + " 4 " + a3);
            if (!e3[c3])
              break;
            l3 = Hr(e3[c3], o3);
          }
          return { nodes: i3, data: mr([s3]) };
        }
        function b2(e3, r3, t3, a3) {
          var n3 = e3.length, i3 = [];
          var s3 = [], f3 = [], l3 = [];
          var o3 = a3 - 1, c3 = 0, u3 = 0, h3 = 0, d3 = 0;
          for (c3 = 0; c3 < n3; ++c3) {
            f3 = [];
            h3 = c3 + r3;
            if (h3 >= n3)
              h3 -= n3;
            if (s3[h3])
              continue;
            l3 = [];
            var v3 = [];
            for (u3 = h3; u3 >= 0; ) {
              v3[u3] = true;
              s3[u3] = true;
              f3[f3.length] = u3;
              l3.push(e3[u3]);
              var p3 = t3[Math.floor(u3 * 4 / a3)];
              d3 = u3 * 4 & o3;
              if (a3 < 4 + d3)
                throw new Error("FAT boundary crossed: " + u3 + " 4 " + a3);
              if (!e3[p3])
                break;
              u3 = Hr(e3[p3], d3);
              if (v3[u3])
                break;
            }
            i3[h3] = { nodes: f3, data: mr([l3]) };
          }
          return i3;
        }
        function k2(e3, r3, t3, a3, n3, i3, s3, f3) {
          var l3 = 0, o3 = a3.length ? 2 : 0;
          var c3 = r3[e3].data;
          var u3 = 0, h3 = 0, d3;
          for (; u3 < c3.length; u3 += 128) {
            var p3 = c3.slice(u3, u3 + 128);
            Yr(p3, 64);
            h3 = p3._R(2);
            d3 = gr(p3, 0, h3 - o3);
            a3.push(d3);
            var b3 = { name: d3, type: p3._R(1), color: p3._R(1), L: p3._R(4, "i"), R: p3._R(4, "i"), C: p3._R(4, "i"), clsid: p3._R(16), state: p3._R(4, "i"), start: 0, size: 0 };
            var g2 = p3._R(2) + p3._R(2) + p3._R(2) + p3._R(2);
            if (g2 !== 0)
              b3.ct = E2(p3, p3.l - 8);
            var w2 = p3._R(2) + p3._R(2) + p3._R(2) + p3._R(2);
            if (w2 !== 0)
              b3.mt = E2(p3, p3.l - 8);
            b3.start = p3._R(4, "i");
            b3.size = p3._R(4, "i");
            if (b3.size < 0 && b3.start < 0) {
              b3.size = b3.type = 0;
              b3.start = N2;
              b3.name = "";
            }
            if (b3.type === 5) {
              l3 = b3.start;
              if (n3 > 0 && l3 !== N2)
                r3[l3].name = "!StreamData";
            } else if (b3.size >= 4096) {
              b3.storage = "fat";
              if (r3[b3.start] === void 0)
                r3[b3.start] = m2(t3, b3.start, r3.fat_addrs, r3.ssz);
              r3[b3.start].name = b3.name;
              b3.content = r3[b3.start].data.slice(0, b3.size);
            } else {
              b3.storage = "minifat";
              if (b3.size < 0)
                b3.size = 0;
              else if (l3 !== N2 && b3.start !== N2 && r3[l3]) {
                b3.content = v2(b3, r3[l3].data, (r3[f3] || {}).data);
              }
            }
            if (b3.content)
              Yr(b3.content, 0);
            i3[d3] = b3;
            s3.push(b3);
          }
        }
        function E2(e3, r3) {
          return new Date((zr(e3, r3 + 4) / 1e7 * Math.pow(2, 32) + zr(e3, r3) / 1e7 - 11644473600) * 1e3);
        }
        function S(e3, r3) {
          l2();
          return o2(f2.readFileSync(e3), r3);
        }
        function T2(e3, r3) {
          switch (r3 && r3.type || "base64") {
            case "file":
              return S(e3, r3);
            case "base64":
              return o2(B(g.decode(e3)), r3);
            case "binary":
              return o2(B(e3), r3);
          }
          return o2(e3, r3);
        }
        function y2(e3, r3) {
          var t3 = r3 || {}, a3 = t3.root || "Root Entry";
          if (!e3.FullPaths)
            e3.FullPaths = [];
          if (!e3.FileIndex)
            e3.FileIndex = [];
          if (e3.FullPaths.length !== e3.FileIndex.length)
            throw new Error("inconsistent CFB structure");
          if (e3.FullPaths.length === 0) {
            e3.FullPaths[0] = a3 + "/";
            e3.FileIndex[0] = { name: a3, type: 5 };
          }
          if (t3.CLSID)
            e3.FileIndex[0].clsid = t3.CLSID;
          x2(e3);
        }
        function x2(e3) {
          var r3 = "Sh33tJ5";
          if (W.find(e3, "/" + r3))
            return;
          var t3 = Jr(4);
          t3[0] = 55;
          t3[1] = t3[3] = 50;
          t3[2] = 54;
          e3.FileIndex.push({ name: r3, type: 2, content: t3, size: 4, L: 69, R: 69, C: 69 });
          e3.FullPaths.push(e3.FullPaths[0] + r3);
          A2(e3);
        }
        function A2(e3, n3) {
          y2(e3);
          var i3 = false, s3 = false;
          for (var f3 = e3.FullPaths.length - 1; f3 >= 0; --f3) {
            var l3 = e3.FileIndex[f3];
            switch (l3.type) {
              case 0:
                if (s3)
                  i3 = true;
                else {
                  e3.FileIndex.pop();
                  e3.FullPaths.pop();
                }
                break;
              case 1:
                ;
              case 2:
                ;
              case 5:
                s3 = true;
                if (isNaN(l3.R * l3.L * l3.C))
                  i3 = true;
                if (l3.R > -1 && l3.L > -1 && l3.R == l3.L)
                  i3 = true;
                break;
              default:
                i3 = true;
                break;
            }
          }
          if (!i3 && !n3)
            return;
          var o3 = new Date(1987, 1, 19), c3 = 0;
          var u3 = [];
          for (f3 = 0; f3 < e3.FullPaths.length; ++f3) {
            if (e3.FileIndex[f3].type === 0)
              continue;
            u3.push([e3.FullPaths[f3], e3.FileIndex[f3]]);
          }
          for (f3 = 0; f3 < u3.length; ++f3) {
            var h3 = t2(u3[f3][0]);
            s3 = false;
            for (c3 = 0; c3 < u3.length; ++c3)
              if (u3[c3][0] === h3)
                s3 = true;
            if (!s3)
              u3.push([h3, { name: a2(h3).replace("/", ""), type: 1, clsid: U2, ct: o3, mt: o3, content: null }]);
          }
          u3.sort(function(e4, t3) {
            return r2(e4[0], t3[0]);
          });
          e3.FullPaths = [];
          e3.FileIndex = [];
          for (f3 = 0; f3 < u3.length; ++f3) {
            e3.FullPaths[f3] = u3[f3][0];
            e3.FileIndex[f3] = u3[f3][1];
          }
          for (f3 = 0; f3 < u3.length; ++f3) {
            var d3 = e3.FileIndex[f3];
            var v3 = e3.FullPaths[f3];
            d3.name = a2(v3).replace("/", "");
            d3.L = d3.R = d3.C = -(d3.color = 1);
            d3.size = d3.content ? d3.content.length : 0;
            d3.start = 0;
            d3.clsid = d3.clsid || U2;
            if (f3 === 0) {
              d3.C = u3.length > 1 ? 1 : -1;
              d3.size = 0;
              d3.type = 5;
            } else if (v3.slice(-1) == "/") {
              for (c3 = f3 + 1; c3 < u3.length; ++c3)
                if (t2(e3.FullPaths[c3]) == v3)
                  break;
              d3.C = c3 >= u3.length ? -1 : c3;
              for (c3 = f3 + 1; c3 < u3.length; ++c3)
                if (t2(e3.FullPaths[c3]) == t2(v3))
                  break;
              d3.R = c3 >= u3.length ? -1 : c3;
              d3.type = 1;
            } else {
              if (t2(e3.FullPaths[f3 + 1] || "") == t2(v3))
                d3.R = f3 + 1;
              d3.type = 2;
            }
          }
        }
        function O2(e3, r3) {
          var t3 = r3 || {};
          A2(e3);
          if (t3.fileType == "zip")
            return xe2(e3, t3);
          var a3 = function(e4) {
            var r4 = 0, t4 = 0;
            for (var a4 = 0; a4 < e4.FileIndex.length; ++a4) {
              var n4 = e4.FileIndex[a4];
              if (!n4.content)
                continue;
              var i4 = n4.content.length;
              if (i4 > 0) {
                if (i4 < 4096)
                  r4 += i4 + 63 >> 6;
                else
                  t4 += i4 + 511 >> 9;
              }
            }
            var s4 = e4.FullPaths.length + 3 >> 2;
            var f4 = r4 + 7 >> 3;
            var l4 = r4 + 127 >> 7;
            var o4 = f4 + t4 + s4 + l4;
            var c4 = o4 + 127 >> 7;
            var u4 = c4 <= 109 ? 0 : Math.ceil((c4 - 109) / 127);
            while (o4 + c4 + u4 + 127 >> 7 > c4)
              u4 = ++c4 <= 109 ? 0 : Math.ceil((c4 - 109) / 127);
            var h4 = [1, u4, c4, l4, s4, t4, r4, 0];
            e4.FileIndex[0].size = r4 << 6;
            h4[7] = (e4.FileIndex[0].start = h4[0] + h4[1] + h4[2] + h4[3] + h4[4] + h4[5]) + (h4[6] + 7 >> 3);
            return h4;
          }(e3);
          var n3 = Jr(a3[7] << 9);
          var i3 = 0, s3 = 0;
          {
            for (i3 = 0; i3 < 8; ++i3)
              n3._W(1, M2[i3]);
            for (i3 = 0; i3 < 8; ++i3)
              n3._W(2, 0);
            n3._W(2, 62);
            n3._W(2, 3);
            n3._W(2, 65534);
            n3._W(2, 9);
            n3._W(2, 6);
            for (i3 = 0; i3 < 3; ++i3)
              n3._W(2, 0);
            n3._W(4, 0);
            n3._W(4, a3[2]);
            n3._W(4, a3[0] + a3[1] + a3[2] + a3[3] - 1);
            n3._W(4, 0);
            n3._W(4, 1 << 12);
            n3._W(4, a3[3] ? a3[0] + a3[1] + a3[2] - 1 : N2);
            n3._W(4, a3[3]);
            n3._W(-4, a3[1] ? a3[0] - 1 : N2);
            n3._W(4, a3[1]);
            for (i3 = 0; i3 < 109; ++i3)
              n3._W(-4, i3 < a3[2] ? a3[1] + i3 : -1);
          }
          if (a3[1]) {
            for (s3 = 0; s3 < a3[1]; ++s3) {
              for (; i3 < 236 + s3 * 127; ++i3)
                n3._W(-4, i3 < a3[2] ? a3[1] + i3 : -1);
              n3._W(-4, s3 === a3[1] - 1 ? N2 : s3 + 1);
            }
          }
          var f3 = function(e4) {
            for (s3 += e4; i3 < s3 - 1; ++i3)
              n3._W(-4, i3 + 1);
            if (e4) {
              ++i3;
              n3._W(-4, N2);
            }
          };
          s3 = i3 = 0;
          for (s3 += a3[1]; i3 < s3; ++i3)
            n3._W(-4, z2.DIFSECT);
          for (s3 += a3[2]; i3 < s3; ++i3)
            n3._W(-4, z2.FATSECT);
          f3(a3[3]);
          f3(a3[4]);
          var l3 = 0, o3 = 0;
          var c3 = e3.FileIndex[0];
          for (; l3 < e3.FileIndex.length; ++l3) {
            c3 = e3.FileIndex[l3];
            if (!c3.content)
              continue;
            o3 = c3.content.length;
            if (o3 < 4096)
              continue;
            c3.start = s3;
            f3(o3 + 511 >> 9);
          }
          f3(a3[6] + 7 >> 3);
          while (n3.l & 511)
            n3._W(-4, z2.ENDOFCHAIN);
          s3 = i3 = 0;
          for (l3 = 0; l3 < e3.FileIndex.length; ++l3) {
            c3 = e3.FileIndex[l3];
            if (!c3.content)
              continue;
            o3 = c3.content.length;
            if (!o3 || o3 >= 4096)
              continue;
            c3.start = s3;
            f3(o3 + 63 >> 6);
          }
          while (n3.l & 511)
            n3._W(-4, z2.ENDOFCHAIN);
          for (i3 = 0; i3 < a3[4] << 2; ++i3) {
            var u3 = e3.FullPaths[i3];
            if (!u3 || u3.length === 0) {
              for (l3 = 0; l3 < 17; ++l3)
                n3._W(4, 0);
              for (l3 = 0; l3 < 3; ++l3)
                n3._W(4, -1);
              for (l3 = 0; l3 < 12; ++l3)
                n3._W(4, 0);
              continue;
            }
            c3 = e3.FileIndex[i3];
            if (i3 === 0)
              c3.start = c3.size ? c3.start - 1 : N2;
            var h3 = i3 === 0 && t3.root || c3.name;
            o3 = 2 * (h3.length + 1);
            n3._W(64, h3, "utf16le");
            n3._W(2, o3);
            n3._W(1, c3.type);
            n3._W(1, c3.color);
            n3._W(-4, c3.L);
            n3._W(-4, c3.R);
            n3._W(-4, c3.C);
            if (!c3.clsid)
              for (l3 = 0; l3 < 4; ++l3)
                n3._W(4, 0);
            else
              n3._W(16, c3.clsid, "hex");
            n3._W(4, c3.state || 0);
            n3._W(4, 0);
            n3._W(4, 0);
            n3._W(4, 0);
            n3._W(4, 0);
            n3._W(4, c3.start);
            n3._W(4, c3.size);
            n3._W(4, 0);
          }
          for (i3 = 1; i3 < e3.FileIndex.length; ++i3) {
            c3 = e3.FileIndex[i3];
            if (c3.size >= 4096) {
              n3.l = c3.start + 1 << 9;
              for (l3 = 0; l3 < c3.size; ++l3)
                n3._W(1, c3.content[l3]);
              for (; l3 & 511; ++l3)
                n3._W(1, 0);
            }
          }
          for (i3 = 1; i3 < e3.FileIndex.length; ++i3) {
            c3 = e3.FileIndex[i3];
            if (c3.size > 0 && c3.size < 4096) {
              for (l3 = 0; l3 < c3.size; ++l3)
                n3._W(1, c3.content[l3]);
              for (; l3 & 63; ++l3)
                n3._W(1, 0);
            }
          }
          while (n3.l < n3.length)
            n3._W(1, 0);
          return n3;
        }
        function D2(e3, r3) {
          var t3 = e3.FullPaths.map(function(e4) {
            return e4.toUpperCase();
          });
          var a3 = t3.map(function(e4) {
            var r4 = e4.split("/");
            return r4[r4.length - (e4.slice(-1) == "/" ? 2 : 1)];
          });
          var n3 = false;
          if (r3.charCodeAt(0) === 47) {
            n3 = true;
            r3 = t3[0].slice(0, -1) + r3;
          } else
            n3 = r3.indexOf("/") !== -1;
          var i3 = r3.toUpperCase();
          var s3 = n3 === true ? t3.indexOf(i3) : a3.indexOf(i3);
          if (s3 !== -1)
            return e3.FileIndex[s3];
          var f3 = !i3.match(F);
          i3 = i3.replace(R, "");
          if (f3)
            i3 = i3.replace(F, "!");
          for (s3 = 0; s3 < t3.length; ++s3) {
            if ((f3 ? t3[s3].replace(F, "!") : t3[s3]).replace(R, "") == i3)
              return e3.FileIndex[s3];
            if ((f3 ? a3[s3].replace(F, "!") : a3[s3]).replace(R, "") == i3)
              return e3.FileIndex[s3];
          }
          return null;
        }
        var P2 = 64;
        var N2 = -2;
        var L2 = "d0cf11e0a1b11ae1";
        var M2 = [208, 207, 17, 224, 161, 177, 26, 225];
        var U2 = "00000000000000000000000000000000";
        var z2 = { MAXREGSECT: -6, DIFSECT: -4, FATSECT: -3, ENDOFCHAIN: N2, FREESECT: -1, HEADER_SIGNATURE: L2, HEADER_MINOR_VERSION: "3e00", MAXREGSID: -6, NOSTREAM: -1, HEADER_CLSID: U2, EntryTypes: ["unknown", "storage", "stream", "lockbytes", "property", "root"] };
        function V2(e3, r3, t3) {
          l2();
          var a3 = O2(e3, t3);
          f2.writeFileSync(r3, a3);
        }
        function X2(e3) {
          var r3 = new Array(e3.length);
          for (var t3 = 0; t3 < e3.length; ++t3)
            r3[t3] = String.fromCharCode(e3[t3]);
          return r3.join("");
        }
        function G2(e3, r3) {
          var t3 = O2(e3, r3);
          switch (r3 && r3.type) {
            case "file":
              l2();
              f2.writeFileSync(r3.filename, t3);
              return t3;
            case "binary":
              return X2(t3);
            case "base64":
              return g.encode(X2(t3));
          }
          return t3;
        }
        var j2;
        function K2(e3) {
          try {
            var r3 = e3.InflateRaw;
            var t3 = new r3();
            t3._processChunk(new Uint8Array([3, 0]), t3._finishFlushFlag);
            if (t3.bytesRead)
              j2 = e3;
            else
              throw new Error("zlib does not expose bytesRead");
          } catch (a3) {
            console.error("cannot use native zlib: " + (a3.message || a3));
          }
        }
        function $2(e3, r3) {
          if (!j2)
            return Ce2(e3, r3);
          var t3 = j2.InflateRaw;
          var a3 = new t3();
          var n3 = a3._processChunk(e3.slice(e3.l), a3._finishFlushFlag);
          e3.l += a3.bytesRead;
          return n3;
        }
        function Y2(e3) {
          return j2 ? j2.deflateRawSync(e3) : he2(e3);
        }
        var Z2 = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
        var J2 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258];
        var Q2 = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577];
        function q2(e3) {
          var r3 = (e3 << 1 | e3 << 11) & 139536 | (e3 << 5 | e3 << 15) & 558144;
          return (r3 >> 16 | r3 >> 8 | r3) & 255;
        }
        var ee2 = typeof Uint8Array !== "undefined";
        var re2 = ee2 ? new Uint8Array(1 << 8) : [];
        for (var te2 = 0; te2 < 1 << 8; ++te2)
          re2[te2] = q2(te2);
        function ae2(e3, r3) {
          var t3 = re2[e3 & 255];
          if (r3 <= 8)
            return t3 >>> 8 - r3;
          t3 = t3 << 8 | re2[e3 >> 8 & 255];
          if (r3 <= 16)
            return t3 >>> 16 - r3;
          t3 = t3 << 8 | re2[e3 >> 16 & 255];
          return t3 >>> 24 - r3;
        }
        function ne2(e3, r3) {
          var t3 = r3 & 7, a3 = r3 >>> 3;
          return (e3[a3] | (t3 <= 6 ? 0 : e3[a3 + 1] << 8)) >>> t3 & 3;
        }
        function ie2(e3, r3) {
          var t3 = r3 & 7, a3 = r3 >>> 3;
          return (e3[a3] | (t3 <= 5 ? 0 : e3[a3 + 1] << 8)) >>> t3 & 7;
        }
        function se2(e3, r3) {
          var t3 = r3 & 7, a3 = r3 >>> 3;
          return (e3[a3] | (t3 <= 4 ? 0 : e3[a3 + 1] << 8)) >>> t3 & 15;
        }
        function fe2(e3, r3) {
          var t3 = r3 & 7, a3 = r3 >>> 3;
          return (e3[a3] | (t3 <= 3 ? 0 : e3[a3 + 1] << 8)) >>> t3 & 31;
        }
        function le2(e3, r3) {
          var t3 = r3 & 7, a3 = r3 >>> 3;
          return (e3[a3] | (t3 <= 1 ? 0 : e3[a3 + 1] << 8)) >>> t3 & 127;
        }
        function oe2(e3, r3, t3) {
          var a3 = r3 & 7, n3 = r3 >>> 3, i3 = (1 << t3) - 1;
          var s3 = e3[n3] >>> a3;
          if (t3 < 8 - a3)
            return s3 & i3;
          s3 |= e3[n3 + 1] << 8 - a3;
          if (t3 < 16 - a3)
            return s3 & i3;
          s3 |= e3[n3 + 2] << 16 - a3;
          if (t3 < 24 - a3)
            return s3 & i3;
          s3 |= e3[n3 + 3] << 24 - a3;
          return s3 & i3;
        }
        function ce2(e3, r3) {
          var t3 = e3.length, a3 = 2 * t3 > r3 ? 2 * t3 : r3 + 5, n3 = 0;
          if (t3 >= r3)
            return e3;
          if (w) {
            var i3 = C(a3);
            if (e3.copy)
              e3.copy(i3);
            else
              for (; n3 < e3.length; ++n3)
                i3[n3] = e3[n3];
            return i3;
          } else if (ee2) {
            var s3 = new Uint8Array(a3);
            if (s3.set)
              s3.set(e3);
            else
              for (; n3 < e3.length; ++n3)
                s3[n3] = e3[n3];
            return s3;
          }
          e3.length = a3;
          return e3;
        }
        function ue2(e3) {
          var r3 = new Array(e3);
          for (var t3 = 0; t3 < e3; ++t3)
            r3[t3] = 0;
          return r3;
        }
        var he2 = function() {
          var e3 = function() {
            return function e4(r3, t3) {
              var a3 = 0;
              while (a3 < r3.length) {
                var n3 = Math.min(65535, r3.length - a3);
                var i3 = a3 + n3 == r3.length;
                t3._W(1, +i3);
                t3._W(2, n3);
                t3._W(2, ~n3 & 65535);
                while (n3-- > 0)
                  t3[t3.l++] = r3[a3++];
              }
              return t3.l;
            };
          }();
          return function(r3) {
            var t3 = Jr(50 + Math.floor(r3.length * 1.1));
            var a3 = e3(r3, t3);
            return t3.slice(0, a3);
          };
        }();
        function de2(e3, r3, t3) {
          var a3 = 1, n3 = 0, i3 = 0, s3 = 0, f3 = 0, l3 = e3.length;
          var o3 = ee2 ? new Uint16Array(32) : ue2(32);
          for (i3 = 0; i3 < 32; ++i3)
            o3[i3] = 0;
          for (i3 = l3; i3 < t3; ++i3)
            e3[i3] = 0;
          l3 = e3.length;
          var c3 = ee2 ? new Uint16Array(l3) : ue2(l3);
          for (i3 = 0; i3 < l3; ++i3) {
            o3[n3 = e3[i3]]++;
            if (a3 < n3)
              a3 = n3;
            c3[i3] = 0;
          }
          o3[0] = 0;
          for (i3 = 1; i3 <= a3; ++i3)
            o3[i3 + 16] = f3 = f3 + o3[i3 - 1] << 1;
          for (i3 = 0; i3 < l3; ++i3) {
            f3 = e3[i3];
            if (f3 != 0)
              c3[i3] = o3[f3 + 16]++;
          }
          var u3 = 0;
          for (i3 = 0; i3 < l3; ++i3) {
            u3 = e3[i3];
            if (u3 != 0) {
              f3 = ae2(c3[i3], a3) >> a3 - u3;
              for (s3 = (1 << a3 + 4 - u3) - 1; s3 >= 0; --s3)
                r3[f3 | s3 << u3] = u3 & 15 | i3 << 4;
            }
          }
          return a3;
        }
        var ve2 = ee2 ? new Uint16Array(512) : ue2(512);
        var pe2 = ee2 ? new Uint16Array(32) : ue2(32);
        if (!ee2) {
          for (var me2 = 0; me2 < 512; ++me2)
            ve2[me2] = 0;
          for (me2 = 0; me2 < 32; ++me2)
            pe2[me2] = 0;
        }
        (function() {
          var e3 = [];
          var r3 = 0;
          for (; r3 < 32; r3++)
            e3.push(5);
          de2(e3, pe2, 32);
          var t3 = [];
          r3 = 0;
          for (; r3 <= 143; r3++)
            t3.push(8);
          for (; r3 <= 255; r3++)
            t3.push(9);
          for (; r3 <= 279; r3++)
            t3.push(7);
          for (; r3 <= 287; r3++)
            t3.push(8);
          de2(t3, ve2, 288);
        })();
        var be2 = ee2 ? new Uint16Array(32768) : ue2(32768);
        var ge2 = ee2 ? new Uint16Array(32768) : ue2(32768);
        var we2 = ee2 ? new Uint16Array(128) : ue2(128);
        var ke2 = 1, Ee2 = 1;
        function Se2(e3, r3) {
          var t3 = fe2(e3, r3) + 257;
          r3 += 5;
          var a3 = fe2(e3, r3) + 1;
          r3 += 5;
          var n3 = se2(e3, r3) + 4;
          r3 += 4;
          var i3 = 0;
          var s3 = ee2 ? new Uint8Array(19) : ue2(19);
          var f3 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
          var l3 = 1;
          var o3 = ee2 ? new Uint8Array(8) : ue2(8);
          var c3 = ee2 ? new Uint8Array(8) : ue2(8);
          var u3 = s3.length;
          for (var h3 = 0; h3 < n3; ++h3) {
            s3[Z2[h3]] = i3 = ie2(e3, r3);
            if (l3 < i3)
              l3 = i3;
            o3[i3]++;
            r3 += 3;
          }
          var d3 = 0;
          o3[0] = 0;
          for (h3 = 1; h3 <= l3; ++h3)
            c3[h3] = d3 = d3 + o3[h3 - 1] << 1;
          for (h3 = 0; h3 < u3; ++h3)
            if ((d3 = s3[h3]) != 0)
              f3[h3] = c3[d3]++;
          var v3 = 0;
          for (h3 = 0; h3 < u3; ++h3) {
            v3 = s3[h3];
            if (v3 != 0) {
              d3 = re2[f3[h3]] >> 8 - v3;
              for (var p3 = (1 << 7 - v3) - 1; p3 >= 0; --p3)
                we2[d3 | p3 << v3] = v3 & 7 | h3 << 3;
            }
          }
          var m3 = [];
          l3 = 1;
          for (; m3.length < t3 + a3; ) {
            d3 = we2[le2(e3, r3)];
            r3 += d3 & 7;
            switch (d3 >>>= 3) {
              case 16:
                i3 = 3 + ne2(e3, r3);
                r3 += 2;
                d3 = m3[m3.length - 1];
                while (i3-- > 0)
                  m3.push(d3);
                break;
              case 17:
                i3 = 3 + ie2(e3, r3);
                r3 += 3;
                while (i3-- > 0)
                  m3.push(0);
                break;
              case 18:
                i3 = 11 + le2(e3, r3);
                r3 += 7;
                while (i3-- > 0)
                  m3.push(0);
                break;
              default:
                m3.push(d3);
                if (l3 < d3)
                  l3 = d3;
                break;
            }
          }
          var b3 = m3.slice(0, t3), g2 = m3.slice(t3);
          for (h3 = t3; h3 < 286; ++h3)
            b3[h3] = 0;
          for (h3 = a3; h3 < 30; ++h3)
            g2[h3] = 0;
          ke2 = de2(b3, be2, 286);
          Ee2 = de2(g2, ge2, 30);
          return r3;
        }
        function _e2(e3, r3) {
          if (e3[0] == 3 && !(e3[1] & 3)) {
            return [_(r3), 2];
          }
          var t3 = 0;
          var a3 = 0;
          var n3 = C(r3 ? r3 : 1 << 18);
          var i3 = 0;
          var s3 = n3.length >>> 0;
          var f3 = 0, l3 = 0;
          while ((a3 & 1) == 0) {
            a3 = ie2(e3, t3);
            t3 += 3;
            if (a3 >>> 1 == 0) {
              if (t3 & 7)
                t3 += 8 - (t3 & 7);
              var o3 = e3[t3 >>> 3] | e3[(t3 >>> 3) + 1] << 8;
              t3 += 32;
              if (!r3 && s3 < i3 + o3) {
                n3 = ce2(n3, i3 + o3);
                s3 = n3.length;
              }
              if (typeof e3.copy === "function") {
                e3.copy(n3, i3, t3 >>> 3, (t3 >>> 3) + o3);
                i3 += o3;
                t3 += 8 * o3;
              } else
                while (o3-- > 0) {
                  n3[i3++] = e3[t3 >>> 3];
                  t3 += 8;
                }
              continue;
            } else if (a3 >>> 1 == 1) {
              f3 = 9;
              l3 = 5;
            } else {
              t3 = Se2(e3, t3);
              f3 = ke2;
              l3 = Ee2;
            }
            if (!r3 && s3 < i3 + 32767) {
              n3 = ce2(n3, i3 + 32767);
              s3 = n3.length;
            }
            for (; ; ) {
              var c3 = oe2(e3, t3, f3);
              var u3 = a3 >>> 1 == 1 ? ve2[c3] : be2[c3];
              t3 += u3 & 15;
              u3 >>>= 4;
              if ((u3 >>> 8 & 255) === 0)
                n3[i3++] = u3;
              else if (u3 == 256)
                break;
              else {
                u3 -= 257;
                var h3 = u3 < 8 ? 0 : u3 - 4 >> 2;
                if (h3 > 5)
                  h3 = 0;
                var d3 = i3 + J2[u3];
                if (h3 > 0) {
                  d3 += oe2(e3, t3, h3);
                  t3 += h3;
                }
                c3 = oe2(e3, t3, l3);
                u3 = a3 >>> 1 == 1 ? pe2[c3] : ge2[c3];
                t3 += u3 & 15;
                u3 >>>= 4;
                var v3 = u3 < 4 ? 0 : u3 - 2 >> 1;
                var p3 = Q2[u3];
                if (v3 > 0) {
                  p3 += oe2(e3, t3, v3);
                  t3 += v3;
                }
                if (!r3 && s3 < d3) {
                  n3 = ce2(n3, d3);
                  s3 = n3.length;
                }
                while (i3 < d3) {
                  n3[i3] = n3[i3 - p3];
                  ++i3;
                }
              }
            }
          }
          return [r3 ? n3 : n3.slice(0, i3), t3 + 7 >>> 3];
        }
        function Ce2(e3, r3) {
          var t3 = e3.slice(e3.l || 0);
          var a3 = _e2(t3, r3);
          e3.l += a3[1];
          return a3[0];
        }
        function Be2(e3, r3) {
          if (e3) {
            if (typeof console !== "undefined")
              console.error(r3);
          } else
            throw new Error(r3);
        }
        function Te2(e3, r3) {
          var t3 = e3;
          Yr(t3, 0);
          var a3 = [], n3 = [];
          var i3 = { FileIndex: a3, FullPaths: n3 };
          y2(i3, { root: r3.root });
          var f3 = t3.length - 4;
          while ((t3[f3] != 80 || t3[f3 + 1] != 75 || t3[f3 + 2] != 5 || t3[f3 + 3] != 6) && f3 >= 0)
            --f3;
          t3.l = f3 + 4;
          t3.l += 4;
          var l3 = t3._R(2);
          t3.l += 6;
          var o3 = t3._R(4);
          t3.l = o3;
          for (f3 = 0; f3 < l3; ++f3) {
            t3.l += 20;
            var c3 = t3._R(4);
            var u3 = t3._R(4);
            var h3 = t3._R(2);
            var d3 = t3._R(2);
            var v3 = t3._R(2);
            t3.l += 8;
            var p3 = t3._R(4);
            var m3 = s2(t3.slice(t3.l + h3, t3.l + h3 + d3));
            t3.l += h3 + d3 + v3;
            var b3 = t3.l;
            t3.l = p3 + 4;
            ye2(t3, c3, u3, i3, m3);
            t3.l = b3;
          }
          return i3;
        }
        function ye2(e3, r3, t3, a3, n3) {
          e3.l += 2;
          var f3 = e3._R(2);
          var l3 = e3._R(2);
          var o3 = i2(e3);
          if (f3 & 8257)
            throw new Error("Unsupported ZIP encryption");
          var c3 = e3._R(4);
          var u3 = e3._R(4);
          var h3 = e3._R(4);
          var d3 = e3._R(2);
          var v3 = e3._R(2);
          var p3 = "";
          for (var m3 = 0; m3 < d3; ++m3)
            p3 += String.fromCharCode(e3[e3.l++]);
          if (v3) {
            var b3 = s2(e3.slice(e3.l, e3.l + v3));
            if ((b3[21589] || {}).mt)
              o3 = b3[21589].mt;
            if (((n3 || {})[21589] || {}).mt)
              o3 = n3[21589].mt;
          }
          e3.l += v3;
          var g2 = e3.slice(e3.l, e3.l + u3);
          switch (l3) {
            case 8:
              g2 = $2(e3, h3);
              break;
            case 0:
              break;
            default:
              throw new Error("Unsupported ZIP Compression method " + l3);
          }
          var w2 = false;
          if (f3 & 8) {
            c3 = e3._R(4);
            if (c3 == 134695760) {
              c3 = e3._R(4);
              w2 = true;
            }
            u3 = e3._R(4);
            h3 = e3._R(4);
          }
          if (u3 != r3)
            Be2(w2, "Bad compressed size: " + r3 + " != " + u3);
          if (h3 != t3)
            Be2(w2, "Bad uncompressed size: " + t3 + " != " + h3);
          var k3 = H.buf(g2, 0);
          if (c3 >> 0 != k3 >> 0)
            Be2(w2, "Bad CRC32 checksum: " + c3 + " != " + k3);
          Ie2(a3, p3, g2, { unsafe: true, mt: o3 });
        }
        function xe2(e3, r3) {
          var t3 = r3 || {};
          var a3 = [], i3 = [];
          var s3 = Jr(1);
          var f3 = t3.compression ? 8 : 0, l3 = 0;
          var o3 = false;
          if (o3)
            l3 |= 8;
          var c3 = 0, u3 = 0;
          var h3 = 0, d3 = 0;
          var v3 = e3.FullPaths[0], p3 = v3, m3 = e3.FileIndex[0];
          var b3 = [];
          var g2 = 0;
          for (c3 = 1; c3 < e3.FullPaths.length; ++c3) {
            p3 = e3.FullPaths[c3].slice(v3.length);
            m3 = e3.FileIndex[c3];
            if (!m3.size || !m3.content || p3 == "Sh33tJ5")
              continue;
            var w2 = h3;
            var k3 = Jr(p3.length);
            for (u3 = 0; u3 < p3.length; ++u3)
              k3._W(1, p3.charCodeAt(u3) & 127);
            k3 = k3.slice(0, k3.l);
            b3[d3] = H.buf(m3.content, 0);
            var E3 = m3.content;
            if (f3 == 8)
              E3 = Y2(E3);
            s3 = Jr(30);
            s3._W(4, 67324752);
            s3._W(2, 20);
            s3._W(2, l3);
            s3._W(2, f3);
            if (m3.mt)
              n2(s3, m3.mt);
            else
              s3._W(4, 0);
            s3._W(-4, l3 & 8 ? 0 : b3[d3]);
            s3._W(4, l3 & 8 ? 0 : E3.length);
            s3._W(4, l3 & 8 ? 0 : m3.content.length);
            s3._W(2, k3.length);
            s3._W(2, 0);
            h3 += s3.length;
            a3.push(s3);
            h3 += k3.length;
            a3.push(k3);
            h3 += E3.length;
            a3.push(E3);
            if (l3 & 8) {
              s3 = Jr(12);
              s3._W(-4, b3[d3]);
              s3._W(4, E3.length);
              s3._W(4, m3.content.length);
              h3 += s3.l;
              a3.push(s3);
            }
            s3 = Jr(46);
            s3._W(4, 33639248);
            s3._W(2, 0);
            s3._W(2, 20);
            s3._W(2, l3);
            s3._W(2, f3);
            s3._W(4, 0);
            s3._W(-4, b3[d3]);
            s3._W(4, E3.length);
            s3._W(4, m3.content.length);
            s3._W(2, k3.length);
            s3._W(2, 0);
            s3._W(2, 0);
            s3._W(2, 0);
            s3._W(2, 0);
            s3._W(4, 0);
            s3._W(4, w2);
            g2 += s3.l;
            i3.push(s3);
            g2 += k3.length;
            i3.push(k3);
            ++d3;
          }
          s3 = Jr(22);
          s3._W(4, 101010256);
          s3._W(2, 0);
          s3._W(2, 0);
          s3._W(2, d3);
          s3._W(2, d3);
          s3._W(4, g2);
          s3._W(4, h3);
          s3._W(2, 0);
          return I([I(a3), I(i3), s3]);
        }
        function Ae2(e3) {
          var r3 = {};
          y2(r3, e3);
          return r3;
        }
        function Ie2(e3, r3, t3, n3) {
          var i3 = n3 && n3.unsafe;
          if (!i3)
            y2(e3);
          var s3 = !i3 && W.find(e3, r3);
          if (!s3) {
            var f3 = e3.FullPaths[0];
            if (r3.slice(0, f3.length) == f3)
              f3 = r3;
            else {
              if (f3.slice(-1) != "/")
                f3 += "/";
              f3 = (f3 + r3).replace("//", "/");
            }
            s3 = { name: a2(r3), type: 2 };
            e3.FileIndex.push(s3);
            e3.FullPaths.push(f3);
            if (!i3)
              W.utils.cfb_gc(e3);
          }
          s3.content = t3;
          s3.size = t3 ? t3.length : 0;
          if (n3) {
            if (n3.CLSID)
              s3.clsid = n3.CLSID;
            if (n3.mt)
              s3.mt = n3.mt;
            if (n3.ct)
              s3.ct = n3.ct;
          }
          return s3;
        }
        function Re2(e3, r3) {
          y2(e3);
          var t3 = W.find(e3, r3);
          if (t3) {
            for (var a3 = 0; a3 < e3.FileIndex.length; ++a3)
              if (e3.FileIndex[a3] == t3) {
                e3.FileIndex.splice(a3, 1);
                e3.FullPaths.splice(a3, 1);
                return true;
              }
          }
          return false;
        }
        function Fe2(e3, r3, t3) {
          y2(e3);
          var n3 = W.find(e3, r3);
          if (n3) {
            for (var i3 = 0; i3 < e3.FileIndex.length; ++i3)
              if (e3.FileIndex[i3] == n3) {
                e3.FileIndex[i3].name = a2(t3);
                e3.FullPaths[i3] = t3;
                return true;
              }
          }
          return false;
        }
        function Oe2(e3) {
          A2(e3, true);
        }
        e2.find = D2;
        e2.read = T2;
        e2.parse = o2;
        e2.write = G2;
        e2.writeFile = V2;
        e2.utils = { cfb_new: Ae2, cfb_add: Ie2, cfb_del: Re2, cfb_mov: Fe2, cfb_gc: Oe2, ReadShift: Vr, CheckField: $r, prep_blob: Yr, bconcat: I, use_zlib: K2, _deflateRaw: he2, _inflateRaw: Ce2, consts: z2 };
        return e2;
      }();
      if (typeof __require !== "undefined" && typeof module !== "undefined" && typeof z === "undefined") {
        module.exports = W;
      }
      var V;
      if (typeof __require !== "undefined")
        try {
          V = (init_fs(), fs_exports);
        } catch (S) {
        }
      function X(e2) {
        if (typeof e2 === "string")
          return T(e2);
        if (Array.isArray(e2))
          return x(e2);
        return e2;
      }
      function G(e2, r2, t2) {
        if (typeof V !== "undefined" && V.writeFileSync)
          return t2 ? V.writeFileSync(e2, r2, t2) : V.writeFileSync(e2, r2);
        var a2 = t2 == "utf8" ? Ze(r2) : r2;
        if (typeof IE_SaveFile !== "undefined")
          return IE_SaveFile(a2, e2);
        if (typeof Blob !== "undefined") {
          var n2 = new Blob([X(a2)], { type: "application/octet-stream" });
          if (typeof navigator !== "undefined" && navigator.msSaveBlob)
            return navigator.msSaveBlob(n2, e2);
          if (typeof saveAs !== "undefined")
            return saveAs(n2, e2);
          if (typeof URL !== "undefined" && typeof document !== "undefined" && document.createElement && URL.createObjectURL) {
            var i2 = URL.createObjectURL(n2);
            if (typeof chrome === "object" && typeof (chrome.downloads || {}).download == "function") {
              if (URL.revokeObjectURL && typeof setTimeout !== "undefined")
                setTimeout(function() {
                  URL.revokeObjectURL(i2);
                }, 6e4);
              return chrome.downloads.download({ url: i2, filename: e2, saveAs: true });
            }
            var s2 = document.createElement("a");
            if (s2.download != null) {
              s2.download = e2;
              s2.href = i2;
              document.body.appendChild(s2);
              s2.click();
              document.body.removeChild(s2);
              if (URL.revokeObjectURL && typeof setTimeout !== "undefined")
                setTimeout(function() {
                  URL.revokeObjectURL(i2);
                }, 6e4);
              return i2;
            }
          }
        }
        if (typeof $ !== "undefined" && typeof File !== "undefined" && typeof Folder !== "undefined")
          try {
            var f2 = File(e2);
            f2.open("w");
            f2.encoding = "binary";
            if (Array.isArray(r2))
              r2 = y(r2);
            f2.write(r2);
            f2.close();
            return r2;
          } catch (l2) {
            if (!l2.message || !l2.message.match(/onstruct/))
              throw l2;
          }
        throw new Error("cannot save file " + e2);
      }
      function j(e2) {
        if (typeof V !== "undefined")
          return V.readFileSync(e2);
        if (typeof $ !== "undefined" && typeof File !== "undefined" && typeof Folder !== "undefined")
          try {
            var r2 = File(e2);
            r2.open("r");
            r2.encoding = "binary";
            var t2 = r2.read();
            r2.close();
            return t2;
          } catch (a2) {
            if (!a2.message || !a2.message.match(/onstruct/))
              throw a2;
          }
        throw new Error("Cannot access file " + e2);
      }
      function K(e2) {
        var r2 = Object.keys(e2), t2 = [];
        for (var a2 = 0; a2 < r2.length; ++a2)
          if (Object.prototype.hasOwnProperty.call(e2, r2[a2]))
            t2.push(r2[a2]);
        return t2;
      }
      function Y(e2, r2) {
        var t2 = [], a2 = K(e2);
        for (var n2 = 0; n2 !== a2.length; ++n2)
          if (t2[e2[a2[n2]][r2]] == null)
            t2[e2[a2[n2]][r2]] = a2[n2];
        return t2;
      }
      function Z(e2) {
        var r2 = [], t2 = K(e2);
        for (var a2 = 0; a2 !== t2.length; ++a2)
          r2[e2[t2[a2]]] = t2[a2];
        return r2;
      }
      function J(e2) {
        var r2 = [], t2 = K(e2);
        for (var a2 = 0; a2 !== t2.length; ++a2)
          r2[e2[t2[a2]]] = parseInt(t2[a2], 10);
        return r2;
      }
      function Q(e2) {
        var r2 = [], t2 = K(e2);
        for (var a2 = 0; a2 !== t2.length; ++a2) {
          if (r2[e2[t2[a2]]] == null)
            r2[e2[t2[a2]]] = [];
          r2[e2[t2[a2]]].push(t2[a2]);
        }
        return r2;
      }
      var q = new Date(1899, 11, 30, 0, 0, 0);
      function ee(e2, r2) {
        var t2 = e2.getTime();
        if (r2)
          t2 -= 1462 * 24 * 60 * 60 * 1e3;
        var a2 = q.getTime() + (e2.getTimezoneOffset() - q.getTimezoneOffset()) * 6e4;
        return (t2 - a2) / (24 * 60 * 60 * 1e3);
      }
      var re = new Date();
      var te = q.getTime() + (re.getTimezoneOffset() - q.getTimezoneOffset()) * 6e4;
      var ae = re.getTimezoneOffset();
      function ne(e2) {
        var r2 = new Date();
        r2.setTime(e2 * 24 * 60 * 60 * 1e3 + te);
        if (r2.getTimezoneOffset() !== ae) {
          r2.setTime(r2.getTime() + (r2.getTimezoneOffset() - ae) * 6e4);
        }
        return r2;
      }
      function ie(e2) {
        var r2 = 0, t2 = 0, a2 = false;
        var n2 = e2.match(/P([0-9\.]+Y)?([0-9\.]+M)?([0-9\.]+D)?T([0-9\.]+H)?([0-9\.]+M)?([0-9\.]+S)?/);
        if (!n2)
          throw new Error("|" + e2 + "| is not an ISO8601 Duration");
        for (var i2 = 1; i2 != n2.length; ++i2) {
          if (!n2[i2])
            continue;
          t2 = 1;
          if (i2 > 3)
            a2 = true;
          switch (n2[i2].slice(n2[i2].length - 1)) {
            case "Y":
              throw new Error("Unsupported ISO Duration Field: " + n2[i2].slice(n2[i2].length - 1));
            case "D":
              t2 *= 24;
            case "H":
              t2 *= 60;
            case "M":
              if (!a2)
                throw new Error("Unsupported ISO Duration Field: M");
              else
                t2 *= 60;
            case "S":
              break;
          }
          r2 += t2 * parseInt(n2[i2], 10);
        }
        return r2;
      }
      var se = new Date("2017-02-19T19:06:09.000Z");
      if (isNaN(se.getFullYear()))
        se = new Date("2/19/17");
      var fe = se.getFullYear() == 2017;
      function le(e2, r2) {
        var t2 = new Date(e2);
        if (fe) {
          if (r2 > 0)
            t2.setTime(t2.getTime() + t2.getTimezoneOffset() * 60 * 1e3);
          else if (r2 < 0)
            t2.setTime(t2.getTime() - t2.getTimezoneOffset() * 60 * 1e3);
          return t2;
        }
        if (e2 instanceof Date)
          return e2;
        if (se.getFullYear() == 1917 && !isNaN(t2.getFullYear())) {
          var a2 = t2.getFullYear();
          if (e2.indexOf("" + a2) > -1)
            return t2;
          t2.setFullYear(t2.getFullYear() + 100);
          return t2;
        }
        var n2 = e2.match(/\d+/g) || ["2017", "2", "19", "0", "0", "0"];
        var i2 = new Date(+n2[0], +n2[1] - 1, +n2[2], +n2[3] || 0, +n2[4] || 0, +n2[5] || 0);
        if (e2.indexOf("Z") > -1)
          i2 = new Date(i2.getTime() - i2.getTimezoneOffset() * 60 * 1e3);
        return i2;
      }
      function oe(e2) {
        var r2 = "";
        for (var t2 = 0; t2 != e2.length; ++t2)
          r2 += String.fromCharCode(e2[t2]);
        return r2;
      }
      function ce(e2) {
        if (typeof JSON != "undefined" && !Array.isArray(e2))
          return JSON.parse(JSON.stringify(e2));
        if (typeof e2 != "object" || e2 == null)
          return e2;
        if (e2 instanceof Date)
          return new Date(e2.getTime());
        var r2 = {};
        for (var t2 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, t2))
            r2[t2] = ce(e2[t2]);
        return r2;
      }
      function ue(e2, r2) {
        var t2 = "";
        while (t2.length < r2)
          t2 += e2;
        return t2;
      }
      function he(e2) {
        var r2 = Number(e2);
        if (isFinite(r2))
          return r2;
        if (!isNaN(r2))
          return NaN;
        if (!/\d/.test(e2))
          return r2;
        var t2 = 1;
        var a2 = e2.replace(/([\d]),([\d])/g, "$1$2").replace(/[$]/g, "").replace(/[%]/g, function() {
          t2 *= 100;
          return "";
        });
        if (!isNaN(r2 = Number(a2)))
          return r2 / t2;
        a2 = a2.replace(/[(](.*)[)]/, function(e3, r3) {
          t2 = -t2;
          return r3;
        });
        if (!isNaN(r2 = Number(a2)))
          return r2 / t2;
        return r2;
      }
      function de(e2) {
        var r2 = new Date(e2), t2 = new Date(NaN);
        var a2 = r2.getYear(), n2 = r2.getMonth(), i2 = r2.getDate();
        if (isNaN(i2))
          return t2;
        if (a2 < 0 || a2 > 8099)
          return t2;
        if ((n2 > 0 || i2 > 1) && a2 != 101)
          return r2;
        if (e2.toLowerCase().match(/jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec/))
          return r2;
        if (e2.match(/[^-0-9:,\/\\]/))
          return t2;
        return r2;
      }
      var ve = "abacaba".split(/(:?b)/i).length == 5;
      function pe(e2, r2, t2) {
        if (ve || typeof r2 == "string")
          return e2.split(r2);
        var a2 = e2.split(r2), n2 = [a2[0]];
        for (var i2 = 1; i2 < a2.length; ++i2) {
          n2.push(t2);
          n2.push(a2[i2]);
        }
        return n2;
      }
      function me(e2) {
        if (!e2)
          return null;
        if (e2.data)
          return d(e2.data);
        if (e2.asNodeBuffer && w)
          return d(e2.asNodeBuffer().toString("binary"));
        if (e2.asBinary)
          return d(e2.asBinary());
        if (e2._data && e2._data.getContent)
          return d(oe(Array.prototype.slice.call(e2._data.getContent(), 0)));
        if (e2.content && e2.type)
          return d(oe(e2.content));
        return null;
      }
      function be(e2) {
        if (!e2)
          return null;
        if (e2.data)
          return c(e2.data);
        if (e2.asNodeBuffer && w)
          return e2.asNodeBuffer();
        if (e2._data && e2._data.getContent) {
          var r2 = e2._data.getContent();
          if (typeof r2 == "string")
            return c(r2);
          return Array.prototype.slice.call(r2);
        }
        if (e2.content && e2.type)
          return e2.content;
        return null;
      }
      function ge(e2) {
        return e2 && e2.name.slice(-4) === ".bin" ? be(e2) : me(e2);
      }
      function we(e2, r2) {
        var t2 = e2.FullPaths || K(e2.files);
        var a2 = r2.toLowerCase().replace(/[\/]/g, "\\"), n2 = a2.replace(/\\/g, "/");
        for (var i2 = 0; i2 < t2.length; ++i2) {
          var s2 = t2[i2].replace(/^Root Entry[\/]/, "").toLowerCase();
          if (a2 == s2 || n2 == s2)
            return e2.files ? e2.files[t2[i2]] : e2.FileIndex[i2];
        }
        return null;
      }
      function ke(e2, r2) {
        var t2 = we(e2, r2);
        if (t2 == null)
          throw new Error("Cannot find file " + r2 + " in zip");
        return t2;
      }
      function Ee(e2, r2, t2) {
        if (!t2)
          return ge(ke(e2, r2));
        if (!r2)
          return null;
        try {
          return Ee(e2, r2);
        } catch (a2) {
          return null;
        }
      }
      function Se(e2, r2, t2) {
        if (!t2)
          return me(ke(e2, r2));
        if (!r2)
          return null;
        try {
          return Se(e2, r2);
        } catch (a2) {
          return null;
        }
      }
      function _e(e2) {
        var r2 = e2.FullPaths || K(e2.files), t2 = [];
        for (var a2 = 0; a2 < r2.length; ++a2)
          if (r2[a2].slice(-1) != "/")
            t2.push(r2[a2]);
        return t2.sort();
      }
      function Ce(e2, r2, t2) {
        if (e2.FullPaths)
          W.utils.cfb_add(e2, r2, t2);
        else
          e2.file(r2, t2);
      }
      var Be;
      if (typeof JSZipSync !== "undefined")
        Be = JSZipSync;
      if (typeof exports !== "undefined") {
        if (typeof module !== "undefined" && module.exports) {
          if (typeof Be === "undefined")
            Be = void 0;
        }
      }
      function Te() {
        if (!Be)
          return W.utils.cfb_new();
        return new Be();
      }
      function ye(e2, r2) {
        var t2;
        if (Be)
          switch (r2.type) {
            case "base64":
              t2 = new Be(e2, { base64: true });
              break;
            case "binary":
              ;
            case "array":
              t2 = new Be(e2, { base64: false });
              break;
            case "buffer":
              t2 = new Be(e2);
              break;
            default:
              throw new Error("Unrecognized type " + r2.type);
          }
        else
          switch (r2.type) {
            case "base64":
              t2 = W.read(e2, { type: "base64" });
              break;
            case "binary":
              t2 = W.read(e2, { type: "binary" });
              break;
            case "buffer":
              ;
            case "array":
              t2 = W.read(e2, { type: "buffer" });
              break;
            default:
              throw new Error("Unrecognized type " + r2.type);
          }
        return t2;
      }
      function xe(e2, r2) {
        if (e2.charAt(0) == "/")
          return e2.slice(1);
        var t2 = r2.split("/");
        if (r2.slice(-1) != "/")
          t2.pop();
        var a2 = e2.split("/");
        while (a2.length !== 0) {
          var n2 = a2.shift();
          if (n2 === "..")
            t2.pop();
          else if (n2 !== ".")
            t2.push(n2);
        }
        return t2.join("/");
      }
      var Ae = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\r\n';
      var Ie = /([^"\s?>\/]+)\s*=\s*((?:")([^"]*)(?:")|(?:')([^']*)(?:')|([^'">\s]+))/g;
      var Re = /<[\/\?]?[a-zA-Z0-9:_-]+(?:\s+[^"\s?>\/]+\s*=\s*(?:"[^"]*"|'[^']*'|[^'">\s=]+))*\s*[\/\?]?>/gm;
      if (!Ae.match(Re))
        Re = /<[^>]*>/g;
      var Fe = /<\w*:/, Oe = /<(\/?)\w+:/;
      function De(e2, r2, t2) {
        var a2 = {};
        var n2 = 0, i2 = 0;
        for (; n2 !== e2.length; ++n2)
          if ((i2 = e2.charCodeAt(n2)) === 32 || i2 === 10 || i2 === 13)
            break;
        if (!r2)
          a2[0] = e2.slice(0, n2);
        if (n2 === e2.length)
          return a2;
        var s2 = e2.match(Ie), f2 = 0, l2 = "", o2 = 0, c2 = "", u2 = "", h2 = 1;
        if (s2)
          for (o2 = 0; o2 != s2.length; ++o2) {
            u2 = s2[o2];
            for (i2 = 0; i2 != u2.length; ++i2)
              if (u2.charCodeAt(i2) === 61)
                break;
            c2 = u2.slice(0, i2).trim();
            while (u2.charCodeAt(i2 + 1) == 32)
              ++i2;
            h2 = (n2 = u2.charCodeAt(i2 + 1)) == 34 || n2 == 39 ? 1 : 0;
            l2 = u2.slice(i2 + 1 + h2, u2.length - h2);
            for (f2 = 0; f2 != c2.length; ++f2)
              if (c2.charCodeAt(f2) === 58)
                break;
            if (f2 === c2.length) {
              if (c2.indexOf("_") > 0)
                c2 = c2.slice(0, c2.indexOf("_"));
              a2[c2] = l2;
              if (!t2)
                a2[c2.toLowerCase()] = l2;
            } else {
              var d2 = (f2 === 5 && c2.slice(0, 5) === "xmlns" ? "xmlns" : "") + c2.slice(f2 + 1);
              if (a2[d2] && c2.slice(f2 - 3, f2) == "ext")
                continue;
              a2[d2] = l2;
              if (!t2)
                a2[d2.toLowerCase()] = l2;
            }
          }
        return a2;
      }
      function Pe(e2) {
        return e2.replace(Oe, "<$1");
      }
      var Ne = { "&quot;": '"', "&apos;": "'", "&gt;": ">", "&lt;": "<", "&amp;": "&" };
      var Le = Z(Ne);
      var Me = function() {
        var e2 = /&(?:quot|apos|gt|lt|amp|#x?([\da-fA-F]+));/gi, r2 = /_x([\da-fA-F]{4})_/gi;
        return function t2(a2) {
          var n2 = a2 + "", i2 = n2.indexOf("<![CDATA[");
          if (i2 == -1)
            return n2.replace(e2, function(e3, r3) {
              return Ne[e3] || String.fromCharCode(parseInt(r3, e3.indexOf("x") > -1 ? 16 : 10)) || e3;
            }).replace(r2, function(e3, r3) {
              return String.fromCharCode(parseInt(r3, 16));
            });
          var s2 = n2.indexOf("]]>");
          return t2(n2.slice(0, i2)) + n2.slice(i2 + 9, s2) + t2(n2.slice(s2 + 3));
        };
      }();
      var Ue = /[&<>'"]/g, ze = /[\u0000-\u0008\u000b-\u001f]/g;
      function He(e2) {
        var r2 = e2 + "";
        return r2.replace(Ue, function(e3) {
          return Le[e3];
        }).replace(ze, function(e3) {
          return "_x" + ("000" + e3.charCodeAt(0).toString(16)).slice(-4) + "_";
        });
      }
      function We(e2) {
        return He(e2).replace(/ /g, "_x0020_");
      }
      var Ve = /[\u0000-\u001f]/g;
      function Xe(e2) {
        var r2 = e2 + "";
        return r2.replace(Ue, function(e3) {
          return Le[e3];
        }).replace(/\n/g, "<br/>").replace(Ve, function(e3) {
          return "&#x" + ("000" + e3.charCodeAt(0).toString(16)).slice(-4) + ";";
        });
      }
      function Ge(e2) {
        var r2 = e2 + "";
        return r2.replace(Ue, function(e3) {
          return Le[e3];
        }).replace(Ve, function(e3) {
          return "&#x" + e3.charCodeAt(0).toString(16).toUpperCase() + ";";
        });
      }
      var je = function() {
        var e2 = /&#(\d+);/g;
        function r2(e3, r3) {
          return String.fromCharCode(parseInt(r3, 10));
        }
        return function t2(a2) {
          return a2.replace(e2, r2);
        };
      }();
      var Ke = function() {
        return function e2(r2) {
          return r2.replace(/(\r\n|[\r\n])/g, "&#10;");
        };
      }();
      function $e(e2) {
        switch (e2) {
          case 1:
            ;
          case true:
            ;
          case "1":
            ;
          case "true":
            ;
          case "TRUE":
            return true;
          default:
            return false;
        }
      }
      var Ye = function Ub(e2) {
        var r2 = "", t2 = 0, a2 = 0, n2 = 0, i2 = 0, s2 = 0, f2 = 0;
        while (t2 < e2.length) {
          a2 = e2.charCodeAt(t2++);
          if (a2 < 128) {
            r2 += String.fromCharCode(a2);
            continue;
          }
          n2 = e2.charCodeAt(t2++);
          if (a2 > 191 && a2 < 224) {
            s2 = (a2 & 31) << 6;
            s2 |= n2 & 63;
            r2 += String.fromCharCode(s2);
            continue;
          }
          i2 = e2.charCodeAt(t2++);
          if (a2 < 240) {
            r2 += String.fromCharCode((a2 & 15) << 12 | (n2 & 63) << 6 | i2 & 63);
            continue;
          }
          s2 = e2.charCodeAt(t2++);
          f2 = ((a2 & 7) << 18 | (n2 & 63) << 12 | (i2 & 63) << 6 | s2 & 63) - 65536;
          r2 += String.fromCharCode(55296 + (f2 >>> 10 & 1023));
          r2 += String.fromCharCode(56320 + (f2 & 1023));
        }
        return r2;
      };
      var Ze = function(e2) {
        var r2 = [], t2 = 0, a2 = 0, n2 = 0;
        while (t2 < e2.length) {
          a2 = e2.charCodeAt(t2++);
          switch (true) {
            case a2 < 128:
              r2.push(String.fromCharCode(a2));
              break;
            case a2 < 2048:
              r2.push(String.fromCharCode(192 + (a2 >> 6)));
              r2.push(String.fromCharCode(128 + (a2 & 63)));
              break;
            case (a2 >= 55296 && a2 < 57344):
              a2 -= 55296;
              n2 = e2.charCodeAt(t2++) - 56320 + (a2 << 10);
              r2.push(String.fromCharCode(240 + (n2 >> 18 & 7)));
              r2.push(String.fromCharCode(144 + (n2 >> 12 & 63)));
              r2.push(String.fromCharCode(128 + (n2 >> 6 & 63)));
              r2.push(String.fromCharCode(128 + (n2 & 63)));
              break;
            default:
              r2.push(String.fromCharCode(224 + (a2 >> 12)));
              r2.push(String.fromCharCode(128 + (a2 >> 6 & 63)));
              r2.push(String.fromCharCode(128 + (a2 & 63)));
          }
        }
        return r2.join("");
      };
      if (w) {
        var Je = function zb(e2) {
          var r2 = Buffer.alloc(2 * e2.length), t2, a2, n2 = 1, i2 = 0, s2 = 0, f2;
          for (a2 = 0; a2 < e2.length; a2 += n2) {
            n2 = 1;
            if ((f2 = e2.charCodeAt(a2)) < 128)
              t2 = f2;
            else if (f2 < 224) {
              t2 = (f2 & 31) * 64 + (e2.charCodeAt(a2 + 1) & 63);
              n2 = 2;
            } else if (f2 < 240) {
              t2 = (f2 & 15) * 4096 + (e2.charCodeAt(a2 + 1) & 63) * 64 + (e2.charCodeAt(a2 + 2) & 63);
              n2 = 3;
            } else {
              n2 = 4;
              t2 = (f2 & 7) * 262144 + (e2.charCodeAt(a2 + 1) & 63) * 4096 + (e2.charCodeAt(a2 + 2) & 63) * 64 + (e2.charCodeAt(a2 + 3) & 63);
              t2 -= 65536;
              s2 = 55296 + (t2 >>> 10 & 1023);
              t2 = 56320 + (t2 & 1023);
            }
            if (s2 !== 0) {
              r2[i2++] = s2 & 255;
              r2[i2++] = s2 >>> 8;
              s2 = 0;
            }
            r2[i2++] = t2 % 256;
            r2[i2++] = t2 >>> 8;
          }
          return r2.slice(0, i2).toString("ucs2");
        };
        var Qe = "foo bar baz\xE2\x98\x83\xF0\x9F\x8D\xA3";
        if (Ye(Qe) == Je(Qe))
          Ye = Je;
        var qe = function Hb(e2) {
          return k(e2, "binary").toString("utf8");
        };
        if (Ye(Qe) == qe(Qe))
          Ye = qe;
        Ze = function(e2) {
          return k(e2, "utf8").toString("binary");
        };
      }
      var er = function() {
        var e2 = {};
        return function r2(t2, a2) {
          var n2 = t2 + "|" + (a2 || "");
          if (e2[n2])
            return e2[n2];
          return e2[n2] = new RegExp("<(?:\\w+:)?" + t2 + '(?: xml:space="preserve")?(?:[^>]*)>([\\s\\S]*?)</(?:\\w+:)?' + t2 + ">", a2 || "");
        };
      }();
      var rr = function() {
        var e2 = [["nbsp", " "], ["middot", "\xB7"], ["quot", '"'], ["apos", "'"], ["gt", ">"], ["lt", "<"], ["amp", "&"]].map(function(e3) {
          return [new RegExp("&" + e3[0] + ";", "ig"), e3[1]];
        });
        return function r2(t2) {
          var a2 = t2.replace(/^[\t\n\r ]+/, "").replace(/[\t\n\r ]+$/, "").replace(/>\s+/g, ">").replace(/\s+</g, "<").replace(/[\t\n\r ]+/g, " ").replace(/<\s*[bB][rR]\s*\/?>/g, "\n").replace(/<[^>]*>/g, "");
          for (var n2 = 0; n2 < e2.length; ++n2)
            a2 = a2.replace(e2[n2][0], e2[n2][1]);
          return a2;
        };
      }();
      var tr = function() {
        var e2 = {};
        return function r2(t2) {
          if (e2[t2] !== void 0)
            return e2[t2];
          return e2[t2] = new RegExp("<(?:vt:)?" + t2 + ">([\\s\\S]*?)</(?:vt:)?" + t2 + ">", "g");
        };
      }();
      var ar = /<\/?(?:vt:)?variant>/g, nr = /<(?:vt:)([^>]*)>([\s\S]*)</;
      function ir(e2, r2) {
        var t2 = De(e2);
        var a2 = e2.match(tr(t2.baseType)) || [];
        var n2 = [];
        if (a2.length != t2.size) {
          if (r2.WTF)
            throw new Error("unexpected vector length " + a2.length + " != " + t2.size);
          return n2;
        }
        a2.forEach(function(e3) {
          var r3 = e3.replace(ar, "").match(nr);
          if (r3)
            n2.push({ v: Ye(r3[2]), t: r3[1] });
        });
        return n2;
      }
      var sr = /(^\s|\s$|\n)/;
      function fr(e2, r2) {
        return "<" + e2 + (r2.match(sr) ? ' xml:space="preserve"' : "") + ">" + r2 + "</" + e2 + ">";
      }
      function lr(e2) {
        return K(e2).map(function(r2) {
          return " " + r2 + '="' + e2[r2] + '"';
        }).join("");
      }
      function or(e2, r2, t2) {
        return "<" + e2 + (t2 != null ? lr(t2) : "") + (r2 != null ? (r2.match(sr) ? ' xml:space="preserve"' : "") + ">" + r2 + "</" + e2 : "/") + ">";
      }
      function cr(e2, r2) {
        try {
          return e2.toISOString().replace(/\.\d*/, "");
        } catch (t2) {
          if (r2)
            throw t2;
        }
        return "";
      }
      function ur(e2, r2) {
        switch (typeof e2) {
          case "string":
            var t2 = or("vt:lpwstr", He(e2));
            if (r2)
              t2 = t2.replace(/&quot;/g, "_x0022_");
            return t2;
          case "number":
            return or((e2 | 0) == e2 ? "vt:i4" : "vt:r8", He(String(e2)));
          case "boolean":
            return or("vt:bool", e2 ? "true" : "false");
        }
        if (e2 instanceof Date)
          return or("vt:filetime", cr(e2));
        throw new Error("Unable to serialize " + e2);
      }
      var hr = { dc: "http://purl.org/dc/elements/1.1/", dcterms: "http://purl.org/dc/terms/", dcmitype: "http://purl.org/dc/dcmitype/", mx: "http://schemas.microsoft.com/office/mac/excel/2008/main", r: "http://schemas.openxmlformats.org/officeDocument/2006/relationships", sjs: "http://schemas.openxmlformats.org/package/2006/sheetjs/core-properties", vt: "http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes", xsi: "http://www.w3.org/2001/XMLSchema-instance", xsd: "http://www.w3.org/2001/XMLSchema" };
      hr.main = ["http://schemas.openxmlformats.org/spreadsheetml/2006/main", "http://purl.oclc.org/ooxml/spreadsheetml/main", "http://schemas.microsoft.com/office/excel/2006/main", "http://schemas.microsoft.com/office/excel/2006/2"];
      var dr = { o: "urn:schemas-microsoft-com:office:office", x: "urn:schemas-microsoft-com:office:excel", ss: "urn:schemas-microsoft-com:office:spreadsheet", dt: "uuid:C2F41010-65B3-11d1-A29F-00AA00C14882", mv: "http://macVmlSchemaUri", v: "urn:schemas-microsoft-com:vml", html: "http://www.w3.org/TR/REC-html40" };
      function vr(e2, r2) {
        var t2 = 1 - 2 * (e2[r2 + 7] >>> 7);
        var a2 = ((e2[r2 + 7] & 127) << 4) + (e2[r2 + 6] >>> 4 & 15);
        var n2 = e2[r2 + 6] & 15;
        for (var i2 = 5; i2 >= 0; --i2)
          n2 = n2 * 256 + e2[r2 + i2];
        if (a2 == 2047)
          return n2 == 0 ? t2 * Infinity : NaN;
        if (a2 == 0)
          a2 = -1022;
        else {
          a2 -= 1023;
          n2 += Math.pow(2, 52);
        }
        return t2 * Math.pow(2, a2 - 52) * n2;
      }
      function pr(e2, r2, t2) {
        var a2 = (r2 < 0 || 1 / r2 == -Infinity ? 1 : 0) << 7, n2 = 0, i2 = 0;
        var s2 = a2 ? -r2 : r2;
        if (!isFinite(s2)) {
          n2 = 2047;
          i2 = isNaN(r2) ? 26985 : 0;
        } else if (s2 == 0)
          n2 = i2 = 0;
        else {
          n2 = Math.floor(Math.log(s2) / Math.LN2);
          i2 = s2 * Math.pow(2, 52 - n2);
          if (n2 <= -1023 && (!isFinite(i2) || i2 < Math.pow(2, 52))) {
            n2 = -1022;
          } else {
            i2 -= Math.pow(2, 52);
            n2 += 1023;
          }
        }
        for (var f2 = 0; f2 <= 5; ++f2, i2 /= 256)
          e2[t2 + f2] = i2 & 255;
        e2[t2 + 6] = (n2 & 15) << 4 | i2 & 15;
        e2[t2 + 7] = n2 >> 4 | a2;
      }
      var mr = function(e2) {
        var r2 = [], t2 = 10240;
        for (var a2 = 0; a2 < e2[0].length; ++a2)
          if (e2[0][a2])
            for (var n2 = 0, i2 = e2[0][a2].length; n2 < i2; n2 += t2)
              r2.push.apply(r2, e2[0][a2].slice(n2, n2 + t2));
        return r2;
      };
      var br = mr;
      var gr = function(e2, r2, t2) {
        var a2 = [];
        for (var n2 = r2; n2 < t2; n2 += 2)
          a2.push(String.fromCharCode(Mr(e2, n2)));
        return a2.join("").replace(R, "");
      };
      var wr = gr;
      var kr = function(e2, r2, t2) {
        var a2 = [];
        for (var n2 = r2; n2 < r2 + t2; ++n2)
          a2.push(("0" + e2[n2].toString(16)).slice(-2));
        return a2.join("");
      };
      var Er = kr;
      var Sr = function(e2, r2, t2) {
        var a2 = [];
        for (var n2 = r2; n2 < t2; n2++)
          a2.push(String.fromCharCode(Lr(e2, n2)));
        return a2.join("");
      };
      var _r = Sr;
      var Cr = function(e2, r2) {
        var t2 = zr(e2, r2);
        return t2 > 0 ? Sr(e2, r2 + 4, r2 + 4 + t2 - 1) : "";
      };
      var Br = Cr;
      var Tr = function(e2, r2) {
        var t2 = zr(e2, r2);
        return t2 > 0 ? Sr(e2, r2 + 4, r2 + 4 + t2 - 1) : "";
      };
      var yr = Tr;
      var xr = function(e2, r2) {
        var t2 = 2 * zr(e2, r2);
        return t2 > 0 ? Sr(e2, r2 + 4, r2 + 4 + t2 - 1) : "";
      };
      var Ar = xr;
      var Ir, Rr;
      Ir = Rr = function Wb(e2, r2) {
        var t2 = zr(e2, r2);
        return t2 > 0 ? gr(e2, r2 + 4, r2 + 4 + t2) : "";
      };
      var Fr = function(e2, r2) {
        var t2 = zr(e2, r2);
        return t2 > 0 ? Sr(e2, r2 + 4, r2 + 4 + t2) : "";
      };
      var Or = Fr;
      var Dr, Pr;
      Dr = Pr = function(e2, r2) {
        return vr(e2, r2);
      };
      var Nr = function Vb(e2) {
        return Array.isArray(e2);
      };
      if (w) {
        gr = function(e2, r2, t2) {
          if (!Buffer.isBuffer(e2))
            return wr(e2, r2, t2);
          return e2.toString("utf16le", r2, t2).replace(R, "");
        };
        kr = function(e2, r2, t2) {
          return Buffer.isBuffer(e2) ? e2.toString("hex", r2, r2 + t2) : Er(e2, r2, t2);
        };
        Cr = function Xb(e2, r2) {
          if (!Buffer.isBuffer(e2))
            return Br(e2, r2);
          var t2 = e2.readUInt32LE(r2);
          return t2 > 0 ? e2.toString("utf8", r2 + 4, r2 + 4 + t2 - 1) : "";
        };
        Tr = function Gb(e2, r2) {
          if (!Buffer.isBuffer(e2))
            return yr(e2, r2);
          var t2 = e2.readUInt32LE(r2);
          return t2 > 0 ? e2.toString("utf8", r2 + 4, r2 + 4 + t2 - 1) : "";
        };
        xr = function jb(e2, r2) {
          if (!Buffer.isBuffer(e2))
            return Ar(e2, r2);
          var t2 = 2 * e2.readUInt32LE(r2);
          return e2.toString("utf16le", r2 + 4, r2 + 4 + t2 - 1);
        };
        Ir = function Kb(e2, r2) {
          if (!Buffer.isBuffer(e2))
            return Rr(e2, r2);
          var t2 = e2.readUInt32LE(r2);
          return e2.toString("utf16le", r2 + 4, r2 + 4 + t2);
        };
        Fr = function $b(e2, r2) {
          if (!Buffer.isBuffer(e2))
            return Or(e2, r2);
          var t2 = e2.readUInt32LE(r2);
          return e2.toString("utf8", r2 + 4, r2 + 4 + t2);
        };
        Sr = function Yb(e2, r2, t2) {
          return Buffer.isBuffer(e2) ? e2.toString("utf8", r2, t2) : _r(e2, r2, t2);
        };
        mr = function(e2) {
          return e2[0].length > 0 && Buffer.isBuffer(e2[0][0]) ? Buffer.concat(e2[0]) : br(e2);
        };
        I = function(e2) {
          return Buffer.isBuffer(e2[0]) ? Buffer.concat(e2) : [].concat.apply([], e2);
        };
        Dr = function Zb(e2, r2) {
          if (Buffer.isBuffer(e2))
            return e2.readDoubleLE(r2);
          return Pr(e2, r2);
        };
        Nr = function Jb(e2) {
          return Buffer.isBuffer(e2) || Array.isArray(e2);
        };
      }
      if (typeof cptable !== "undefined") {
        gr = function(e2, r2, t2) {
          return cptable.utils.decode(1200, e2.slice(r2, t2)).replace(R, "");
        };
        Sr = function(e2, r2, t2) {
          return cptable.utils.decode(65001, e2.slice(r2, t2));
        };
        Cr = function(e2, r2) {
          var a2 = zr(e2, r2);
          return a2 > 0 ? cptable.utils.decode(t, e2.slice(r2 + 4, r2 + 4 + a2 - 1)) : "";
        };
        Tr = function(e2, t2) {
          var a2 = zr(e2, t2);
          return a2 > 0 ? cptable.utils.decode(r, e2.slice(t2 + 4, t2 + 4 + a2 - 1)) : "";
        };
        xr = function(e2, r2) {
          var t2 = 2 * zr(e2, r2);
          return t2 > 0 ? cptable.utils.decode(1200, e2.slice(r2 + 4, r2 + 4 + t2 - 1)) : "";
        };
        Ir = function(e2, r2) {
          var t2 = zr(e2, r2);
          return t2 > 0 ? cptable.utils.decode(1200, e2.slice(r2 + 4, r2 + 4 + t2)) : "";
        };
        Fr = function(e2, r2) {
          var t2 = zr(e2, r2);
          return t2 > 0 ? cptable.utils.decode(65001, e2.slice(r2 + 4, r2 + 4 + t2)) : "";
        };
      }
      var Lr = function(e2, r2) {
        return e2[r2];
      };
      var Mr = function(e2, r2) {
        return e2[r2 + 1] * (1 << 8) + e2[r2];
      };
      var Ur = function(e2, r2) {
        var t2 = e2[r2 + 1] * (1 << 8) + e2[r2];
        return t2 < 32768 ? t2 : (65535 - t2 + 1) * -1;
      };
      var zr = function(e2, r2) {
        return e2[r2 + 3] * (1 << 24) + (e2[r2 + 2] << 16) + (e2[r2 + 1] << 8) + e2[r2];
      };
      var Hr = function(e2, r2) {
        return e2[r2 + 3] << 24 | e2[r2 + 2] << 16 | e2[r2 + 1] << 8 | e2[r2];
      };
      var Wr = function(e2, r2) {
        return e2[r2] << 24 | e2[r2 + 1] << 16 | e2[r2 + 2] << 8 | e2[r2 + 3];
      };
      function Vr(e2, t2) {
        var a2 = "", n2, i2, s2 = [], f2, l2, o2, c2;
        switch (t2) {
          case "dbcs":
            c2 = this.l;
            if (w && Buffer.isBuffer(this))
              a2 = this.slice(this.l, this.l + 2 * e2).toString("utf16le");
            else
              for (o2 = 0; o2 < e2; ++o2) {
                a2 += String.fromCharCode(Mr(this, c2));
                c2 += 2;
              }
            e2 *= 2;
            break;
          case "utf8":
            a2 = Sr(this, this.l, this.l + e2);
            break;
          case "utf16le":
            e2 *= 2;
            a2 = gr(this, this.l, this.l + e2);
            break;
          case "wstr":
            if (typeof cptable !== "undefined")
              a2 = cptable.utils.decode(r, this.slice(this.l, this.l + 2 * e2));
            else
              return Vr.call(this, e2, "dbcs");
            e2 = 2 * e2;
            break;
          case "lpstr-ansi":
            a2 = Cr(this, this.l);
            e2 = 4 + zr(this, this.l);
            break;
          case "lpstr-cp":
            a2 = Tr(this, this.l);
            e2 = 4 + zr(this, this.l);
            break;
          case "lpwstr":
            a2 = xr(this, this.l);
            e2 = 4 + 2 * zr(this, this.l);
            break;
          case "lpp4":
            e2 = 4 + zr(this, this.l);
            a2 = Ir(this, this.l);
            if (e2 & 2)
              e2 += 2;
            break;
          case "8lpp4":
            e2 = 4 + zr(this, this.l);
            a2 = Fr(this, this.l);
            if (e2 & 3)
              e2 += 4 - (e2 & 3);
            break;
          case "cstr":
            e2 = 0;
            a2 = "";
            while ((f2 = Lr(this, this.l + e2++)) !== 0)
              s2.push(v(f2));
            a2 = s2.join("");
            break;
          case "_wstr":
            e2 = 0;
            a2 = "";
            while ((f2 = Mr(this, this.l + e2)) !== 0) {
              s2.push(v(f2));
              e2 += 2;
            }
            e2 += 2;
            a2 = s2.join("");
            break;
          case "dbcs-cont":
            a2 = "";
            c2 = this.l;
            for (o2 = 0; o2 < e2; ++o2) {
              if (this.lens && this.lens.indexOf(c2) !== -1) {
                f2 = Lr(this, c2);
                this.l = c2 + 1;
                l2 = Vr.call(this, e2 - o2, f2 ? "dbcs-cont" : "sbcs-cont");
                return s2.join("") + l2;
              }
              s2.push(v(Mr(this, c2)));
              c2 += 2;
            }
            a2 = s2.join("");
            e2 *= 2;
            break;
          case "cpstr":
            if (typeof cptable !== "undefined") {
              a2 = cptable.utils.decode(r, this.slice(this.l, this.l + e2));
              break;
            }
            ;
          case "sbcs-cont":
            a2 = "";
            c2 = this.l;
            for (o2 = 0; o2 != e2; ++o2) {
              if (this.lens && this.lens.indexOf(c2) !== -1) {
                f2 = Lr(this, c2);
                this.l = c2 + 1;
                l2 = Vr.call(this, e2 - o2, f2 ? "dbcs-cont" : "sbcs-cont");
                return s2.join("") + l2;
              }
              s2.push(v(Lr(this, c2)));
              c2 += 1;
            }
            a2 = s2.join("");
            break;
          default:
            switch (e2) {
              case 1:
                n2 = Lr(this, this.l);
                this.l++;
                return n2;
              case 2:
                n2 = (t2 === "i" ? Ur : Mr)(this, this.l);
                this.l += 2;
                return n2;
              case 4:
                ;
              case -4:
                if (t2 === "i" || (this[this.l + 3] & 128) === 0) {
                  n2 = (e2 > 0 ? Hr : Wr)(this, this.l);
                  this.l += 4;
                  return n2;
                } else {
                  i2 = zr(this, this.l);
                  this.l += 4;
                }
                return i2;
              case 8:
                ;
              case -8:
                if (t2 === "f") {
                  if (e2 == 8)
                    i2 = Dr(this, this.l);
                  else
                    i2 = Dr([this[this.l + 7], this[this.l + 6], this[this.l + 5], this[this.l + 4], this[this.l + 3], this[this.l + 2], this[this.l + 1], this[this.l + 0]], 0);
                  this.l += 8;
                  return i2;
                } else
                  e2 = 8;
              case 16:
                a2 = kr(this, this.l, e2);
                break;
            }
            ;
        }
        this.l += e2;
        return a2;
      }
      var Xr = function(e2, r2, t2) {
        e2[t2] = r2 & 255;
        e2[t2 + 1] = r2 >>> 8 & 255;
        e2[t2 + 2] = r2 >>> 16 & 255;
        e2[t2 + 3] = r2 >>> 24 & 255;
      };
      var Gr = function(e2, r2, t2) {
        e2[t2] = r2 & 255;
        e2[t2 + 1] = r2 >> 8 & 255;
        e2[t2 + 2] = r2 >> 16 & 255;
        e2[t2 + 3] = r2 >> 24 & 255;
      };
      var jr = function(e2, r2, t2) {
        e2[t2] = r2 & 255;
        e2[t2 + 1] = r2 >>> 8 & 255;
      };
      function Kr(e2, r2, a2) {
        var n2 = 0, i2 = 0;
        if (a2 === "dbcs") {
          for (i2 = 0; i2 != r2.length; ++i2)
            jr(this, r2.charCodeAt(i2), this.l + 2 * i2);
          n2 = 2 * r2.length;
        } else if (a2 === "sbcs") {
          if (typeof cptable !== "undefined" && t == 874) {
            for (i2 = 0; i2 != r2.length; ++i2) {
              var s2 = cptable.utils.encode(t, r2.charAt(i2));
              this[this.l + i2] = s2[0];
            }
          } else {
            r2 = r2.replace(/[^\x00-\x7F]/g, "_");
            for (i2 = 0; i2 != r2.length; ++i2)
              this[this.l + i2] = r2.charCodeAt(i2) & 255;
          }
          n2 = r2.length;
        } else if (a2 === "hex") {
          for (; i2 < e2; ++i2) {
            this[this.l++] = parseInt(r2.slice(2 * i2, 2 * i2 + 2), 16) || 0;
          }
          return this;
        } else if (a2 === "utf16le") {
          var f2 = Math.min(this.l + e2, this.length);
          for (i2 = 0; i2 < Math.min(r2.length, e2); ++i2) {
            var l2 = r2.charCodeAt(i2);
            this[this.l++] = l2 & 255;
            this[this.l++] = l2 >> 8;
          }
          while (this.l < f2)
            this[this.l++] = 0;
          return this;
        } else
          switch (e2) {
            case 1:
              n2 = 1;
              this[this.l] = r2 & 255;
              break;
            case 2:
              n2 = 2;
              this[this.l] = r2 & 255;
              r2 >>>= 8;
              this[this.l + 1] = r2 & 255;
              break;
            case 3:
              n2 = 3;
              this[this.l] = r2 & 255;
              r2 >>>= 8;
              this[this.l + 1] = r2 & 255;
              r2 >>>= 8;
              this[this.l + 2] = r2 & 255;
              break;
            case 4:
              n2 = 4;
              Xr(this, r2, this.l);
              break;
            case 8:
              n2 = 8;
              if (a2 === "f") {
                pr(this, r2, this.l);
                break;
              }
              ;
            case 16:
              break;
            case -4:
              n2 = 4;
              Gr(this, r2, this.l);
              break;
          }
        this.l += n2;
        return this;
      }
      function $r(e2, r2) {
        var t2 = kr(this, this.l, e2.length >> 1);
        if (t2 !== e2)
          throw new Error(r2 + "Expected " + e2 + " saw " + t2);
        this.l += e2.length >> 1;
      }
      function Yr(e2, r2) {
        e2.l = r2;
        e2._R = Vr;
        e2.chk = $r;
        e2._W = Kr;
      }
      function Zr(e2, r2) {
        e2.l += r2;
      }
      function Jr(e2) {
        var r2 = _(e2);
        Yr(r2, 0);
        return r2;
      }
      function Qr(e2, r2, t2) {
        if (!e2)
          return;
        var a2, n2, i2;
        Yr(e2, e2.l || 0);
        var s2 = e2.length, f2 = 0, l2 = 0;
        while (e2.l < s2) {
          f2 = e2._R(1);
          if (f2 & 128)
            f2 = (f2 & 127) + ((e2._R(1) & 127) << 7);
          var o2 = Qp[f2] || Qp[65535];
          a2 = e2._R(1);
          i2 = a2 & 127;
          for (n2 = 1; n2 < 4 && a2 & 128; ++n2)
            i2 += ((a2 = e2._R(1)) & 127) << 7 * n2;
          l2 = e2.l + i2;
          var c2 = o2.f && o2.f(e2, i2, t2);
          e2.l = l2;
          if (r2(c2, o2.n, f2))
            return;
        }
      }
      function qr() {
        var e2 = [], r2 = w ? 256 : 2048;
        var t2 = function l2(e3) {
          var r3 = Jr(e3);
          Yr(r3, 0);
          return r3;
        };
        var a2 = t2(r2);
        var n2 = function o2() {
          if (!a2)
            return;
          if (a2.length > a2.l) {
            a2 = a2.slice(0, a2.l);
            a2.l = a2.length;
          }
          if (a2.length > 0)
            e2.push(a2);
          a2 = null;
        };
        var i2 = function c2(e3) {
          if (a2 && e3 < a2.length - a2.l)
            return a2;
          n2();
          return a2 = t2(Math.max(e3 + 1, r2));
        };
        var s2 = function u2() {
          n2();
          return mr([e2]);
        };
        var f2 = function h2(e3) {
          n2();
          a2 = e3;
          if (a2.l == null)
            a2.l = a2.length;
          i2(r2);
        };
        return { next: i2, push: f2, end: s2, _bufs: e2 };
      }
      function et(e2, r2, t2, a2) {
        var n2 = +qp[r2], i2;
        if (isNaN(n2))
          return;
        if (!a2)
          a2 = Qp[n2].p || (t2 || []).length || 0;
        i2 = 1 + (n2 >= 128 ? 1 : 0) + 1;
        if (a2 >= 128)
          ++i2;
        if (a2 >= 16384)
          ++i2;
        if (a2 >= 2097152)
          ++i2;
        var s2 = e2.next(i2);
        if (n2 <= 127)
          s2._W(1, n2);
        else {
          s2._W(1, (n2 & 127) + 128);
          s2._W(1, n2 >> 7);
        }
        for (var f2 = 0; f2 != 4; ++f2) {
          if (a2 >= 128) {
            s2._W(1, (a2 & 127) + 128);
            a2 >>= 7;
          } else {
            s2._W(1, a2);
            break;
          }
        }
        if (a2 > 0 && Nr(t2))
          e2.push(t2);
      }
      function rt(e2, r2, t2) {
        var a2 = ce(e2);
        if (r2.s) {
          if (a2.cRel)
            a2.c += r2.s.c;
          if (a2.rRel)
            a2.r += r2.s.r;
        } else {
          if (a2.cRel)
            a2.c += r2.c;
          if (a2.rRel)
            a2.r += r2.r;
        }
        if (!t2 || t2.biff < 12) {
          while (a2.c >= 256)
            a2.c -= 256;
          while (a2.r >= 65536)
            a2.r -= 65536;
        }
        return a2;
      }
      function tt(e2, r2, t2) {
        var a2 = ce(e2);
        a2.s = rt(a2.s, r2.s, t2);
        a2.e = rt(a2.e, r2.s, t2);
        return a2;
      }
      function at(e2, r2) {
        if (e2.cRel && e2.c < 0) {
          e2 = ce(e2);
          while (e2.c < 0)
            e2.c += r2 > 8 ? 16384 : 256;
        }
        if (e2.rRel && e2.r < 0) {
          e2 = ce(e2);
          while (e2.r < 0)
            e2.r += r2 > 8 ? 1048576 : r2 > 5 ? 65536 : 16384;
        }
        var t2 = bt(e2);
        if (!e2.cRel && e2.cRel != null)
          t2 = dt(t2);
        if (!e2.rRel && e2.rRel != null)
          t2 = ot(t2);
        return t2;
      }
      function nt(e2, r2) {
        if (e2.s.r == 0 && !e2.s.rRel) {
          if (e2.e.r == (r2.biff >= 12 ? 1048575 : r2.biff >= 8 ? 65536 : 16384) && !e2.e.rRel) {
            return (e2.s.cRel ? "" : "$") + ht(e2.s.c) + ":" + (e2.e.cRel ? "" : "$") + ht(e2.e.c);
          }
        }
        if (e2.s.c == 0 && !e2.s.cRel) {
          if (e2.e.c == (r2.biff >= 12 ? 16383 : 255) && !e2.e.cRel) {
            return (e2.s.rRel ? "" : "$") + lt(e2.s.r) + ":" + (e2.e.rRel ? "" : "$") + lt(e2.e.r);
          }
        }
        return at(e2.s, r2.biff) + ":" + at(e2.e, r2.biff);
      }
      var it = {};
      var st = function(e2, r2) {
        var t2;
        if (typeof r2 !== "undefined")
          t2 = r2;
        else if (typeof __require !== "undefined") {
          try {
            t2 = void 0;
          } catch (a2) {
            t2 = null;
          }
        }
        e2.rc4 = function(e3, r3) {
          var t3 = new Array(256);
          var a2 = 0, n2 = 0, i2 = 0, s2 = 0;
          for (n2 = 0; n2 != 256; ++n2)
            t3[n2] = n2;
          for (n2 = 0; n2 != 256; ++n2) {
            i2 = i2 + t3[n2] + e3[n2 % e3.length].charCodeAt(0) & 255;
            s2 = t3[n2];
            t3[n2] = t3[i2];
            t3[i2] = s2;
          }
          n2 = i2 = 0;
          var f2 = _(r3.length);
          for (a2 = 0; a2 != r3.length; ++a2) {
            n2 = n2 + 1 & 255;
            i2 = (i2 + t3[n2]) % 256;
            s2 = t3[n2];
            t3[n2] = t3[i2];
            t3[i2] = s2;
            f2[a2] = r3[a2] ^ t3[t3[n2] + t3[i2] & 255];
          }
          return f2;
        };
        e2.md5 = function(e3) {
          if (!t2)
            throw new Error("Unsupported crypto");
          return t2.createHash("md5").update(e3).digest("hex");
        };
      };
      st(it, typeof crypto !== "undefined" ? crypto : void 0);
      function ft(e2) {
        return parseInt(ct(e2), 10) - 1;
      }
      function lt(e2) {
        return "" + (e2 + 1);
      }
      function ot(e2) {
        return e2.replace(/([A-Z]|^)(\d+)$/, "$1$$$2");
      }
      function ct(e2) {
        return e2.replace(/\$(\d+)$/, "$1");
      }
      function ut(e2) {
        var r2 = vt(e2), t2 = 0, a2 = 0;
        for (; a2 !== r2.length; ++a2)
          t2 = 26 * t2 + r2.charCodeAt(a2) - 64;
        return t2 - 1;
      }
      function ht(e2) {
        if (e2 < 0)
          throw new Error("invalid column " + e2);
        var r2 = "";
        for (++e2; e2; e2 = Math.floor((e2 - 1) / 26))
          r2 = String.fromCharCode((e2 - 1) % 26 + 65) + r2;
        return r2;
      }
      function dt(e2) {
        return e2.replace(/^([A-Z])/, "$$$1");
      }
      function vt(e2) {
        return e2.replace(/^\$([A-Z])/, "$1");
      }
      function pt(e2) {
        return e2.replace(/(\$?[A-Z]*)(\$?\d*)/, "$1,$2").split(",");
      }
      function mt(e2) {
        var r2 = 0, t2 = 0;
        for (var a2 = 0; a2 < e2.length; ++a2) {
          var n2 = e2.charCodeAt(a2);
          if (n2 >= 48 && n2 <= 57)
            r2 = 10 * r2 + (n2 - 48);
          else if (n2 >= 65 && n2 <= 90)
            t2 = 26 * t2 + (n2 - 64);
        }
        return { c: t2 - 1, r: r2 - 1 };
      }
      function bt(e2) {
        var r2 = e2.c + 1;
        var t2 = "";
        for (; r2; r2 = (r2 - 1) / 26 | 0)
          t2 = String.fromCharCode((r2 - 1) % 26 + 65) + t2;
        return t2 + (e2.r + 1);
      }
      function gt(e2) {
        var r2 = e2.indexOf(":");
        if (r2 == -1)
          return { s: mt(e2), e: mt(e2) };
        return { s: mt(e2.slice(0, r2)), e: mt(e2.slice(r2 + 1)) };
      }
      function wt(e2, r2) {
        if (typeof r2 === "undefined" || typeof r2 === "number") {
          return wt(e2.s, e2.e);
        }
        if (typeof e2 !== "string")
          e2 = bt(e2);
        if (typeof r2 !== "string")
          r2 = bt(r2);
        return e2 == r2 ? e2 : e2 + ":" + r2;
      }
      function kt(e2) {
        var r2 = { s: { c: 0, r: 0 }, e: { c: 0, r: 0 } };
        var t2 = 0, a2 = 0, n2 = 0;
        var i2 = e2.length;
        for (t2 = 0; a2 < i2; ++a2) {
          if ((n2 = e2.charCodeAt(a2) - 64) < 1 || n2 > 26)
            break;
          t2 = 26 * t2 + n2;
        }
        r2.s.c = --t2;
        for (t2 = 0; a2 < i2; ++a2) {
          if ((n2 = e2.charCodeAt(a2) - 48) < 0 || n2 > 9)
            break;
          t2 = 10 * t2 + n2;
        }
        r2.s.r = --t2;
        if (a2 === i2 || e2.charCodeAt(++a2) === 58) {
          r2.e.c = r2.s.c;
          r2.e.r = r2.s.r;
          return r2;
        }
        for (t2 = 0; a2 != i2; ++a2) {
          if ((n2 = e2.charCodeAt(a2) - 64) < 1 || n2 > 26)
            break;
          t2 = 26 * t2 + n2;
        }
        r2.e.c = --t2;
        for (t2 = 0; a2 != i2; ++a2) {
          if ((n2 = e2.charCodeAt(a2) - 48) < 0 || n2 > 9)
            break;
          t2 = 10 * t2 + n2;
        }
        r2.e.r = --t2;
        return r2;
      }
      function Et(e2, r2) {
        var t2 = e2.t == "d" && r2 instanceof Date;
        if (e2.z != null)
          try {
            return e2.w = O.format(e2.z, t2 ? ee(r2) : r2);
          } catch (a2) {
          }
        try {
          return e2.w = O.format((e2.XF || {}).numFmtId || (t2 ? 14 : 0), t2 ? ee(r2) : r2);
        } catch (a2) {
          return "" + r2;
        }
      }
      function St(e2, r2, t2) {
        if (e2 == null || e2.t == null || e2.t == "z")
          return "";
        if (e2.w !== void 0)
          return e2.w;
        if (e2.t == "d" && !e2.z && t2 && t2.dateNF)
          e2.z = t2.dateNF;
        if (e2.t == "e")
          return Aa[e2.v] || e2.v;
        if (r2 == void 0)
          return Et(e2, e2.v);
        return Et(e2, r2);
      }
      function _t(e2, r2) {
        var t2 = r2 && r2.sheet ? r2.sheet : "Sheet1";
        var a2 = {};
        a2[t2] = e2;
        return { SheetNames: [t2], Sheets: a2 };
      }
      function Ct(e2, r2, t2) {
        var a2 = t2 || {};
        var n2 = e2 ? Array.isArray(e2) : a2.dense;
        if (m != null && n2 == null)
          n2 = m;
        var i2 = e2 || (n2 ? [] : {});
        var s2 = 0, f2 = 0;
        if (i2 && a2.origin != null) {
          if (typeof a2.origin == "number")
            s2 = a2.origin;
          else {
            var l2 = typeof a2.origin == "string" ? mt(a2.origin) : a2.origin;
            s2 = l2.r;
            f2 = l2.c;
          }
          if (!i2["!ref"])
            i2["!ref"] = "A1:A1";
        }
        var o2 = { s: { c: 1e7, r: 1e7 }, e: { c: 0, r: 0 } };
        if (i2["!ref"]) {
          var c2 = kt(i2["!ref"]);
          o2.s.c = c2.s.c;
          o2.s.r = c2.s.r;
          o2.e.c = Math.max(o2.e.c, c2.e.c);
          o2.e.r = Math.max(o2.e.r, c2.e.r);
          if (s2 == -1)
            o2.e.r = s2 = c2.e.r + 1;
        }
        for (var u2 = 0; u2 != r2.length; ++u2) {
          if (!r2[u2])
            continue;
          if (!Array.isArray(r2[u2]))
            throw new Error("aoa_to_sheet expects an array of arrays");
          for (var h2 = 0; h2 != r2[u2].length; ++h2) {
            if (typeof r2[u2][h2] === "undefined")
              continue;
            var d2 = { v: r2[u2][h2] };
            var v2 = s2 + u2, p2 = f2 + h2;
            if (o2.s.r > v2)
              o2.s.r = v2;
            if (o2.s.c > p2)
              o2.s.c = p2;
            if (o2.e.r < v2)
              o2.e.r = v2;
            if (o2.e.c < p2)
              o2.e.c = p2;
            if (r2[u2][h2] && typeof r2[u2][h2] === "object" && !Array.isArray(r2[u2][h2]) && !(r2[u2][h2] instanceof Date))
              d2 = r2[u2][h2];
            else {
              if (Array.isArray(d2.v)) {
                d2.f = r2[u2][h2][1];
                d2.v = d2.v[0];
              }
              if (d2.v === null) {
                if (d2.f)
                  d2.t = "n";
                else if (a2.nullError) {
                  d2.t = "e";
                  d2.v = 0;
                } else if (!a2.sheetStubs)
                  continue;
                else
                  d2.t = "z";
              } else if (typeof d2.v === "number")
                d2.t = "n";
              else if (typeof d2.v === "boolean")
                d2.t = "b";
              else if (d2.v instanceof Date) {
                d2.z = a2.dateNF || O._table[14];
                if (a2.cellDates) {
                  d2.t = "d";
                  d2.w = O.format(d2.z, ee(d2.v));
                } else {
                  d2.t = "n";
                  d2.v = ee(d2.v);
                  d2.w = O.format(d2.z, d2.v);
                }
              } else
                d2.t = "s";
            }
            if (n2) {
              if (!i2[v2])
                i2[v2] = [];
              if (i2[v2][p2] && i2[v2][p2].z)
                d2.z = i2[v2][p2].z;
              i2[v2][p2] = d2;
            } else {
              var b2 = bt({ c: p2, r: v2 });
              if (i2[b2] && i2[b2].z)
                d2.z = i2[b2].z;
              i2[b2] = d2;
            }
          }
        }
        if (o2.s.c < 1e7)
          i2["!ref"] = wt(o2);
        return i2;
      }
      function Bt(e2, r2) {
        return Ct(null, e2, r2);
      }
      function Tt(e2, r2) {
        if (!r2)
          r2 = Jr(4);
        r2._W(4, e2);
        return r2;
      }
      function yt(e2) {
        var r2 = e2._R(4);
        return r2 === 0 ? "" : e2._R(r2, "dbcs");
      }
      function xt(e2, r2) {
        var t2 = false;
        if (r2 == null) {
          t2 = true;
          r2 = Jr(4 + 2 * e2.length);
        }
        r2._W(4, e2.length);
        if (e2.length > 0)
          r2._W(0, e2, "dbcs");
        return t2 ? r2.slice(0, r2.l) : r2;
      }
      function At(e2) {
        return { ich: e2._R(2), ifnt: e2._R(2) };
      }
      function It(e2, r2) {
        if (!r2)
          r2 = Jr(4);
        r2._W(2, e2.ich || 0);
        r2._W(2, e2.ifnt || 0);
        return r2;
      }
      function Rt(e2, r2) {
        var t2 = e2.l;
        var a2 = e2._R(1);
        var n2 = yt(e2);
        var i2 = [];
        var s2 = { t: n2, h: n2 };
        if ((a2 & 1) !== 0) {
          var f2 = e2._R(4);
          for (var l2 = 0; l2 != f2; ++l2)
            i2.push(At(e2));
          s2.r = i2;
        } else
          s2.r = [{ ich: 0, ifnt: 0 }];
        e2.l = t2 + r2;
        return s2;
      }
      function Ft(e2, r2) {
        var t2 = false;
        if (r2 == null) {
          t2 = true;
          r2 = Jr(15 + 4 * e2.t.length);
        }
        r2._W(1, 0);
        xt(e2.t, r2);
        return t2 ? r2.slice(0, r2.l) : r2;
      }
      var Ot = Rt;
      function Dt(e2, r2) {
        var t2 = false;
        if (r2 == null) {
          t2 = true;
          r2 = Jr(23 + 4 * e2.t.length);
        }
        r2._W(1, 1);
        xt(e2.t, r2);
        r2._W(4, 1);
        It({ ich: 0, ifnt: 0 }, r2);
        return t2 ? r2.slice(0, r2.l) : r2;
      }
      function Pt(e2) {
        var r2 = e2._R(4);
        var t2 = e2._R(2);
        t2 += e2._R(1) << 16;
        e2.l++;
        return { c: r2, iStyleRef: t2 };
      }
      function Nt(e2, r2) {
        if (r2 == null)
          r2 = Jr(8);
        r2._W(-4, e2.c);
        r2._W(3, e2.iStyleRef || e2.s);
        r2._W(1, 0);
        return r2;
      }
      function Lt(e2) {
        var r2 = e2._R(2);
        r2 += e2._R(1) << 16;
        e2.l++;
        return { c: -1, iStyleRef: r2 };
      }
      function Mt(e2, r2) {
        if (r2 == null)
          r2 = Jr(4);
        r2._W(3, e2.iStyleRef || e2.s);
        r2._W(1, 0);
        return r2;
      }
      var Ut = yt;
      var zt = xt;
      function Ht(e2) {
        var r2 = e2._R(4);
        return r2 === 0 || r2 === 4294967295 ? "" : e2._R(r2, "dbcs");
      }
      function Wt(e2, r2) {
        var t2 = false;
        if (r2 == null) {
          t2 = true;
          r2 = Jr(127);
        }
        r2._W(4, e2.length > 0 ? e2.length : 4294967295);
        if (e2.length > 0)
          r2._W(0, e2, "dbcs");
        return t2 ? r2.slice(0, r2.l) : r2;
      }
      var Vt = yt;
      var Xt = Ht;
      var Gt = Wt;
      function jt(e2) {
        var r2 = e2.slice(e2.l, e2.l + 4);
        var t2 = r2[0] & 1, a2 = r2[0] & 2;
        e2.l += 4;
        r2[0] &= 252;
        var n2 = a2 === 0 ? Dr([0, 0, 0, 0, r2[0], r2[1], r2[2], r2[3]], 0) : Hr(r2, 0) >> 2;
        return t2 ? n2 / 100 : n2;
      }
      function Kt(e2, r2) {
        if (r2 == null)
          r2 = Jr(4);
        var t2 = 0, a2 = 0, n2 = e2 * 100;
        if (e2 == (e2 | 0) && e2 >= -(1 << 29) && e2 < 1 << 29) {
          a2 = 1;
        } else if (n2 == (n2 | 0) && n2 >= -(1 << 29) && n2 < 1 << 29) {
          a2 = 1;
          t2 = 1;
        }
        if (a2)
          r2._W(-4, ((t2 ? n2 : e2) << 2) + (t2 + 2));
        else
          throw new Error("unsupported RkNumber " + e2);
      }
      function $t(e2) {
        var r2 = { s: {}, e: {} };
        r2.s.r = e2._R(4);
        r2.e.r = e2._R(4);
        r2.s.c = e2._R(4);
        r2.e.c = e2._R(4);
        return r2;
      }
      function Yt(e2, r2) {
        if (!r2)
          r2 = Jr(16);
        r2._W(4, e2.s.r);
        r2._W(4, e2.e.r);
        r2._W(4, e2.s.c);
        r2._W(4, e2.e.c);
        return r2;
      }
      var Zt = $t;
      var Jt = Yt;
      function Qt(e2) {
        if (e2.length - e2.l < 8)
          throw "XLS Xnum Buffer underflow";
        return e2._R(8, "f");
      }
      function qt(e2, r2) {
        return (r2 || Jr(8))._W(8, e2, "f");
      }
      function ea(e2) {
        var r2 = {};
        var t2 = e2._R(1);
        var a2 = t2 >>> 1;
        var n2 = e2._R(1);
        var i2 = e2._R(2, "i");
        var s2 = e2._R(1);
        var f2 = e2._R(1);
        var l2 = e2._R(1);
        e2.l++;
        switch (a2) {
          case 0:
            r2.auto = 1;
            break;
          case 1:
            r2.index = n2;
            var o2 = xa[n2];
            if (o2)
              r2.rgb = cl(o2);
            break;
          case 2:
            r2.rgb = cl([s2, f2, l2]);
            break;
          case 3:
            r2.theme = n2;
            break;
        }
        if (i2 != 0)
          r2.tint = i2 > 0 ? i2 / 32767 : i2 / 32768;
        return r2;
      }
      function ra(e2, r2) {
        if (!r2)
          r2 = Jr(8);
        if (!e2 || e2.auto) {
          r2._W(4, 0);
          r2._W(4, 0);
          return r2;
        }
        if (e2.index != null) {
          r2._W(1, 2);
          r2._W(1, e2.index);
        } else if (e2.theme != null) {
          r2._W(1, 6);
          r2._W(1, e2.theme);
        } else {
          r2._W(1, 5);
          r2._W(1, 0);
        }
        var t2 = e2.tint || 0;
        if (t2 > 0)
          t2 *= 32767;
        else if (t2 < 0)
          t2 *= 32768;
        r2._W(2, t2);
        if (!e2.rgb || e2.theme != null) {
          r2._W(2, 0);
          r2._W(1, 0);
          r2._W(1, 0);
        } else {
          var a2 = e2.rgb || "FFFFFF";
          if (typeof a2 == "number")
            a2 = ("000000" + a2.toString(16)).slice(-6);
          r2._W(1, parseInt(a2.slice(0, 2), 16));
          r2._W(1, parseInt(a2.slice(2, 4), 16));
          r2._W(1, parseInt(a2.slice(4, 6), 16));
          r2._W(1, 255);
        }
        return r2;
      }
      function ta(e2) {
        var r2 = e2._R(1);
        e2.l++;
        var t2 = { fBold: r2 & 1, fItalic: r2 & 2, fUnderline: r2 & 4, fStrikeout: r2 & 8, fOutline: r2 & 16, fShadow: r2 & 32, fCondense: r2 & 64, fExtend: r2 & 128 };
        return t2;
      }
      function aa(e2, r2) {
        if (!r2)
          r2 = Jr(2);
        var t2 = (e2.italic ? 2 : 0) | (e2.strike ? 8 : 0) | (e2.outline ? 16 : 0) | (e2.shadow ? 32 : 0) | (e2.condense ? 64 : 0) | (e2.extend ? 128 : 0);
        r2._W(1, t2);
        r2._W(1, 0);
        return r2;
      }
      function na(e2, r2) {
        var t2 = { 2: "BITMAP", 3: "METAFILEPICT", 8: "DIB", 14: "ENHMETAFILE" };
        var a2 = e2._R(4);
        switch (a2) {
          case 0:
            return "";
          case 4294967295:
            ;
          case 4294967294:
            return t2[e2._R(4)] || "";
        }
        if (a2 > 400)
          throw new Error("Unsupported Clipboard: " + a2.toString(16));
        e2.l -= 4;
        return e2._R(0, r2 == 1 ? "lpstr" : "lpwstr");
      }
      function ia(e2) {
        return na(e2, 1);
      }
      function sa(e2) {
        return na(e2, 2);
      }
      var fa = 2;
      var la = 3;
      var oa = 11;
      var ca = 12;
      var ua = 19;
      var ha = 30;
      var da = 64;
      var va = 65;
      var pa = 71;
      var ma = 4096;
      var ba = 80;
      var ga = 81;
      var wa = [ba, ga];
      var ka = { 1: { n: "CodePage", t: fa }, 2: { n: "Category", t: ba }, 3: { n: "PresentationFormat", t: ba }, 4: { n: "ByteCount", t: la }, 5: { n: "LineCount", t: la }, 6: { n: "ParagraphCount", t: la }, 7: { n: "SlideCount", t: la }, 8: { n: "NoteCount", t: la }, 9: { n: "HiddenCount", t: la }, 10: { n: "MultimediaClipCount", t: la }, 11: { n: "ScaleCrop", t: oa }, 12: { n: "HeadingPairs", t: ma | ca }, 13: { n: "TitlesOfParts", t: ma | ha }, 14: { n: "Manager", t: ba }, 15: { n: "Company", t: ba }, 16: { n: "LinksUpToDate", t: oa }, 17: { n: "CharacterCount", t: la }, 19: { n: "SharedDoc", t: oa }, 22: { n: "HyperlinksChanged", t: oa }, 23: { n: "AppVersion", t: la, p: "version" }, 24: { n: "DigSig", t: va }, 26: { n: "ContentType", t: ba }, 27: { n: "ContentStatus", t: ba }, 28: { n: "Language", t: ba }, 29: { n: "Version", t: ba }, 255: {}, 2147483648: { n: "Locale", t: ua }, 2147483651: { n: "Behavior", t: ua }, 1919054434: {} };
      var Ea = { 1: { n: "CodePage", t: fa }, 2: { n: "Title", t: ba }, 3: { n: "Subject", t: ba }, 4: { n: "Author", t: ba }, 5: { n: "Keywords", t: ba }, 6: { n: "Comments", t: ba }, 7: { n: "Template", t: ba }, 8: { n: "LastAuthor", t: ba }, 9: { n: "RevNumber", t: ba }, 10: { n: "EditTime", t: da }, 11: { n: "LastPrinted", t: da }, 12: { n: "CreatedDate", t: da }, 13: { n: "ModifiedDate", t: da }, 14: { n: "PageCount", t: la }, 15: { n: "WordCount", t: la }, 16: { n: "CharCount", t: la }, 17: { n: "Thumbnail", t: pa }, 18: { n: "Application", t: ba }, 19: { n: "DocSecurity", t: la }, 255: {}, 2147483648: { n: "Locale", t: ua }, 2147483651: { n: "Behavior", t: ua }, 1919054434: {} };
      var Sa = Y(ka, "n");
      var _a = Y(Ea, "n");
      var Ca = { 1: "US", 2: "CA", 3: "", 7: "RU", 20: "EG", 30: "GR", 31: "NL", 32: "BE", 33: "FR", 34: "ES", 36: "HU", 39: "IT", 41: "CH", 43: "AT", 44: "GB", 45: "DK", 46: "SE", 47: "NO", 48: "PL", 49: "DE", 52: "MX", 55: "BR", 61: "AU", 64: "NZ", 66: "TH", 81: "JP", 82: "KR", 84: "VN", 86: "CN", 90: "TR", 105: "JS", 213: "DZ", 216: "MA", 218: "LY", 351: "PT", 354: "IS", 358: "FI", 420: "CZ", 886: "TW", 961: "LB", 962: "JO", 963: "SY", 964: "IQ", 965: "KW", 966: "SA", 971: "AE", 972: "IL", 974: "QA", 981: "IR", 65535: "US" };
      var Ba = [null, "solid", "mediumGray", "darkGray", "lightGray", "darkHorizontal", "darkVertical", "darkDown", "darkUp", "darkGrid", "darkTrellis", "lightHorizontal", "lightVertical", "lightDown", "lightUp", "lightGrid", "lightTrellis", "gray125", "gray0625"];
      function Ta(e2) {
        return e2.map(function(e3) {
          return [e3 >> 16 & 255, e3 >> 8 & 255, e3 & 255];
        });
      }
      var ya = Ta([0, 16777215, 16711680, 65280, 255, 16776960, 16711935, 65535, 0, 16777215, 16711680, 65280, 255, 16776960, 16711935, 65535, 8388608, 32768, 128, 8421376, 8388736, 32896, 12632256, 8421504, 10066431, 10040166, 16777164, 13434879, 6684774, 16744576, 26316, 13421823, 128, 16711935, 16776960, 65535, 8388736, 8388608, 32896, 255, 52479, 13434879, 13434828, 16777113, 10079487, 16751052, 13408767, 16764057, 3368703, 3394764, 10079232, 16763904, 16750848, 16737792, 6710937, 9868950, 13158, 3381606, 13056, 3355392, 10040064, 10040166, 3355545, 3355443, 16777215, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
      var xa = ce(ya);
      var Aa = { 0: "#NULL!", 7: "#DIV/0!", 15: "#VALUE!", 23: "#REF!", 29: "#NAME?", 36: "#NUM!", 42: "#N/A", 43: "#GETTING_DATA", 255: "#WTF?" };
      var Ia = J(Aa);
      var Ra = { "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml": "workbooks", "application/vnd.ms-excel.binIndexWs": "TODO", "application/vnd.ms-excel.intlmacrosheet": "TODO", "application/vnd.ms-excel.binIndexMs": "TODO", "application/vnd.openxmlformats-package.core-properties+xml": "coreprops", "application/vnd.openxmlformats-officedocument.custom-properties+xml": "custprops", "application/vnd.openxmlformats-officedocument.extended-properties+xml": "extprops", "application/vnd.openxmlformats-officedocument.customXmlProperties+xml": "TODO", "application/vnd.openxmlformats-officedocument.spreadsheetml.customProperty": "TODO", "application/vnd.ms-excel.pivotTable": "TODO", "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotTable+xml": "TODO", "application/vnd.openxmlformats-officedocument.drawingml.chart+xml": "TODO", "application/vnd.ms-office.chartcolorstyle+xml": "TODO", "application/vnd.ms-office.chartstyle+xml": "TODO", "application/vnd.ms-office.chartex+xml": "TODO", "application/vnd.ms-excel.calcChain": "calcchains", "application/vnd.openxmlformats-officedocument.spreadsheetml.calcChain+xml": "calcchains", "application/vnd.openxmlformats-officedocument.spreadsheetml.printerSettings": "TODO", "application/vnd.ms-office.activeX": "TODO", "application/vnd.ms-office.activeX+xml": "TODO", "application/vnd.ms-excel.attachedToolbars": "TODO", "application/vnd.ms-excel.connections": "TODO", "application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml": "TODO", "application/vnd.ms-excel.externalLink": "links", "application/vnd.openxmlformats-officedocument.spreadsheetml.externalLink+xml": "links", "application/vnd.ms-excel.sheetMetadata": "TODO", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheetMetadata+xml": "TODO", "application/vnd.ms-excel.pivotCacheDefinition": "TODO", "application/vnd.ms-excel.pivotCacheRecords": "TODO", "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheDefinition+xml": "TODO", "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotCacheRecords+xml": "TODO", "application/vnd.ms-excel.queryTable": "TODO", "application/vnd.openxmlformats-officedocument.spreadsheetml.queryTable+xml": "TODO", "application/vnd.ms-excel.userNames": "TODO", "application/vnd.ms-excel.revisionHeaders": "TODO", "application/vnd.ms-excel.revisionLog": "TODO", "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionHeaders+xml": "TODO", "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionLog+xml": "TODO", "application/vnd.openxmlformats-officedocument.spreadsheetml.userNames+xml": "TODO", "application/vnd.ms-excel.tableSingleCells": "TODO", "application/vnd.openxmlformats-officedocument.spreadsheetml.tableSingleCells+xml": "TODO", "application/vnd.ms-excel.slicer": "TODO", "application/vnd.ms-excel.slicerCache": "TODO", "application/vnd.ms-excel.slicer+xml": "TODO", "application/vnd.ms-excel.slicerCache+xml": "TODO", "application/vnd.ms-excel.wsSortMap": "TODO", "application/vnd.ms-excel.table": "TODO", "application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml": "TODO", "application/vnd.openxmlformats-officedocument.theme+xml": "themes", "application/vnd.openxmlformats-officedocument.themeOverride+xml": "TODO", "application/vnd.ms-excel.Timeline+xml": "TODO", "application/vnd.ms-excel.TimelineCache+xml": "TODO", "application/vnd.ms-office.vbaProject": "vba", "application/vnd.ms-office.vbaProjectSignature": "vba", "application/vnd.ms-office.volatileDependencies": "TODO", "application/vnd.openxmlformats-officedocument.spreadsheetml.volatileDependencies+xml": "TODO", "application/vnd.ms-excel.controlproperties+xml": "TODO", "application/vnd.openxmlformats-officedocument.model+data": "TODO", "application/vnd.ms-excel.Survey+xml": "TODO", "application/vnd.openxmlformats-officedocument.drawing+xml": "drawings", "application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml": "TODO", "application/vnd.openxmlformats-officedocument.drawingml.diagramColors+xml": "TODO", "application/vnd.openxmlformats-officedocument.drawingml.diagramData+xml": "TODO", "application/vnd.openxmlformats-officedocument.drawingml.diagramLayout+xml": "TODO", "application/vnd.openxmlformats-officedocument.drawingml.diagramStyle+xml": "TODO", "application/vnd.openxmlformats-officedocument.vmlDrawing": "TODO", "application/vnd.openxmlformats-package.relationships+xml": "rels", "application/vnd.openxmlformats-officedocument.oleObject": "TODO", "image/png": "TODO", sheet: "js" };
      var Fa = function() {
        var e2 = { workbooks: { xlsx: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml", xlsm: "application/vnd.ms-excel.sheet.macroEnabled.main+xml", xlsb: "application/vnd.ms-excel.sheet.binary.macroEnabled.main", xlam: "application/vnd.ms-excel.addin.macroEnabled.main+xml", xltx: "application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml" }, strs: { xlsx: "application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml", xlsb: "application/vnd.ms-excel.sharedStrings" }, comments: { xlsx: "application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml", xlsb: "application/vnd.ms-excel.comments" }, sheets: { xlsx: "application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml", xlsb: "application/vnd.ms-excel.worksheet" }, charts: { xlsx: "application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml", xlsb: "application/vnd.ms-excel.chartsheet" }, dialogs: { xlsx: "application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml", xlsb: "application/vnd.ms-excel.dialogsheet" }, macros: { xlsx: "application/vnd.ms-excel.macrosheet+xml", xlsb: "application/vnd.ms-excel.macrosheet" }, styles: { xlsx: "application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml", xlsb: "application/vnd.ms-excel.styles" } };
        K(e2).forEach(function(r2) {
          ["xlsm", "xlam"].forEach(function(t2) {
            if (!e2[r2][t2])
              e2[r2][t2] = e2[r2].xlsx;
          });
        });
        K(e2).forEach(function(r2) {
          K(e2[r2]).forEach(function(t2) {
            Ra[e2[r2][t2]] = r2;
          });
        });
        return e2;
      }();
      var Oa = Q(Ra);
      hr.CT = "http://schemas.openxmlformats.org/package/2006/content-types";
      function Da() {
        return { workbooks: [], sheets: [], charts: [], dialogs: [], macros: [], rels: [], strs: [], comments: [], links: [], coreprops: [], extprops: [], custprops: [], themes: [], styles: [], calcchains: [], vba: [], drawings: [], TODO: [], xmlns: "" };
      }
      function Pa(e2) {
        var r2 = Da();
        if (!e2 || !e2.match)
          return r2;
        var t2 = {};
        (e2.match(Re) || []).forEach(function(e3) {
          var a2 = De(e3);
          switch (a2[0].replace(Fe, "<")) {
            case "<?xml":
              break;
            case "<Types":
              r2.xmlns = a2["xmlns" + (a2[0].match(/<(\w+):/) || ["", ""])[1]];
              break;
            case "<Default":
              t2[a2.Extension] = a2.ContentType;
              break;
            case "<Override":
              if (r2[Ra[a2.ContentType]] !== void 0)
                r2[Ra[a2.ContentType]].push(a2.PartName);
              break;
          }
        });
        if (r2.xmlns !== hr.CT)
          throw new Error("Unknown Namespace: " + r2.xmlns);
        r2.calcchain = r2.calcchains.length > 0 ? r2.calcchains[0] : "";
        r2.sst = r2.strs.length > 0 ? r2.strs[0] : "";
        r2.style = r2.styles.length > 0 ? r2.styles[0] : "";
        r2.defaults = t2;
        delete r2.calcchains;
        return r2;
      }
      var Na = or("Types", null, { xmlns: hr.CT, "xmlns:xsd": hr.xsd, "xmlns:xsi": hr.xsi });
      var La = [["xml", "application/xml"], ["bin", "application/vnd.ms-excel.sheet.binary.macroEnabled.main"], ["vml", "application/vnd.openxmlformats-officedocument.vmlDrawing"], ["data", "application/vnd.openxmlformats-officedocument.model+data"], ["bmp", "image/bmp"], ["png", "image/png"], ["gif", "image/gif"], ["emf", "image/x-emf"], ["wmf", "image/x-wmf"], ["jpg", "image/jpeg"], ["jpeg", "image/jpeg"], ["tif", "image/tiff"], ["tiff", "image/tiff"], ["pdf", "application/pdf"], ["rels", Oa.rels[0]]].map(function(e2) {
        return or("Default", null, { Extension: e2[0], ContentType: e2[1] });
      });
      function Ma(e2, r2) {
        var t2 = [], a2;
        t2[t2.length] = Ae;
        t2[t2.length] = Na;
        t2 = t2.concat(La);
        var n2 = function(n3) {
          if (e2[n3] && e2[n3].length > 0) {
            a2 = e2[n3][0];
            t2[t2.length] = or("Override", null, { PartName: (a2[0] == "/" ? "" : "/") + a2, ContentType: Fa[n3][r2.bookType || "xlsx"] });
          }
        };
        var i2 = function(a3) {
          (e2[a3] || []).forEach(function(e3) {
            t2[t2.length] = or("Override", null, { PartName: (e3[0] == "/" ? "" : "/") + e3, ContentType: Fa[a3][r2.bookType || "xlsx"] });
          });
        };
        var s2 = function(r3) {
          (e2[r3] || []).forEach(function(e3) {
            t2[t2.length] = or("Override", null, { PartName: (e3[0] == "/" ? "" : "/") + e3, ContentType: Oa[r3][0] });
          });
        };
        n2("workbooks");
        i2("sheets");
        i2("charts");
        s2("themes");
        ["strs", "styles"].forEach(n2);
        ["coreprops", "extprops", "custprops"].forEach(s2);
        s2("vba");
        s2("comments");
        s2("drawings");
        if (t2.length > 2) {
          t2[t2.length] = "</Types>";
          t2[1] = t2[1].replace("/>", ">");
        }
        return t2.join("");
      }
      var Ua = { WB: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument", SHEET: "http://sheetjs.openxmlformats.org/officeDocument/2006/relationships/officeDocument", HLINK: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink", VML: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/vmlDrawing", XPATH: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLinkPath", XMISS: "http://schemas.microsoft.com/office/2006/relationships/xlExternalLinkPath/xlPathMissing", XLINK: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/externalLink", CXML: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXml", CXMLP: "http://schemas.openxmlformats.org/officeDocument/2006/relationships/customXmlProps", VBA: "http://schemas.microsoft.com/office/2006/relationships/vbaProject" };
      function za(e2) {
        var r2 = e2.lastIndexOf("/");
        return e2.slice(0, r2 + 1) + "_rels/" + e2.slice(r2 + 1) + ".rels";
      }
      function Ha(e2, r2) {
        var t2 = { "!id": {} };
        if (!e2)
          return t2;
        if (r2.charAt(0) !== "/") {
          r2 = "/" + r2;
        }
        var a2 = {};
        (e2.match(Re) || []).forEach(function(e3) {
          var n2 = De(e3);
          if (n2[0] === "<Relationship") {
            var i2 = {};
            i2.Type = n2.Type;
            i2.Target = n2.Target;
            i2.Id = n2.Id;
            i2.TargetMode = n2.TargetMode;
            var s2 = n2.TargetMode === "External" ? n2.Target : xe(n2.Target, r2);
            t2[s2] = i2;
            a2[n2.Id] = i2;
          }
        });
        t2["!id"] = a2;
        return t2;
      }
      hr.RELS = "http://schemas.openxmlformats.org/package/2006/relationships";
      var Wa = or("Relationships", null, { xmlns: hr.RELS });
      function Va(e2) {
        var r2 = [Ae, Wa];
        K(e2["!id"]).forEach(function(t2) {
          r2[r2.length] = or("Relationship", null, e2["!id"][t2]);
        });
        if (r2.length > 2) {
          r2[r2.length] = "</Relationships>";
          r2[1] = r2[1].replace("/>", ">");
        }
        return r2.join("");
      }
      var Xa = [Ua.HLINK, Ua.XPATH, Ua.XMISS];
      function Ga(e2, r2, t2, a2, n2, i2) {
        if (!n2)
          n2 = {};
        if (!e2["!id"])
          e2["!id"] = {};
        if (r2 < 0)
          for (r2 = 1; e2["!id"]["rId" + r2]; ++r2) {
          }
        n2.Id = "rId" + r2;
        n2.Type = a2;
        n2.Target = t2;
        if (i2)
          n2.TargetMode = i2;
        else if (Xa.indexOf(n2.Type) > -1)
          n2.TargetMode = "External";
        if (e2["!id"][n2.Id])
          throw new Error("Cannot rewrite rId " + r2);
        e2["!id"][n2.Id] = n2;
        e2[("/" + n2.Target).replace("//", "/")] = n2;
        return r2;
      }
      var ja = "application/vnd.oasis.opendocument.spreadsheet";
      function Ka(e2, r2) {
        var t2 = Bp(e2);
        var a2;
        var n2;
        while (a2 = Tp.exec(t2))
          switch (a2[3]) {
            case "manifest":
              break;
            case "file-entry":
              n2 = De(a2[0], false);
              if (n2.path == "/" && n2.type !== ja)
                throw new Error("This OpenDocument is not a spreadsheet");
              break;
            case "encryption-data":
              ;
            case "algorithm":
              ;
            case "start-key-generation":
              ;
            case "key-derivation":
              throw new Error("Unsupported ODS Encryption");
            default:
              if (r2 && r2.WTF)
                throw a2;
          }
      }
      function $a(e2) {
        var r2 = [Ae];
        r2.push('<manifest:manifest xmlns:manifest="urn:oasis:names:tc:opendocument:xmlns:manifest:1.0" manifest:version="1.2">\n');
        r2.push('  <manifest:file-entry manifest:full-path="/" manifest:version="1.2" manifest:media-type="application/vnd.oasis.opendocument.spreadsheet"/>\n');
        for (var t2 = 0; t2 < e2.length; ++t2)
          r2.push('  <manifest:file-entry manifest:full-path="' + e2[t2][0] + '" manifest:media-type="' + e2[t2][1] + '"/>\n');
        r2.push("</manifest:manifest>");
        return r2.join("");
      }
      function Ya(e2, r2, t2) {
        return ['  <rdf:Description rdf:about="' + e2 + '">\n', '    <rdf:type rdf:resource="http://docs.oasis-open.org/ns/office/1.2/meta/' + (t2 || "odf") + "#" + r2 + '"/>\n', "  </rdf:Description>\n"].join("");
      }
      function Za(e2, r2) {
        return ['  <rdf:Description rdf:about="' + e2 + '">\n', '    <ns0:hasPart xmlns:ns0="http://docs.oasis-open.org/ns/office/1.2/meta/pkg#" rdf:resource="' + r2 + '"/>\n', "  </rdf:Description>\n"].join("");
      }
      function Ja(e2) {
        var r2 = [Ae];
        r2.push('<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">\n');
        for (var t2 = 0; t2 != e2.length; ++t2) {
          r2.push(Ya(e2[t2][0], e2[t2][1]));
          r2.push(Za("", e2[t2][0]));
        }
        r2.push(Ya("", "Document", "pkg"));
        r2.push("</rdf:RDF>");
        return r2.join("");
      }
      var Qa = function() {
        var r2 = '<office:document-meta xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xlink="http://www.w3.org/1999/xlink" office:version="1.2"><office:meta><meta:generator>SheetJS ' + e.version + "</meta:generator></office:meta></office:document-meta>";
        return function t2() {
          return r2;
        };
      }();
      var qa = [["cp:category", "Category"], ["cp:contentStatus", "ContentStatus"], ["cp:keywords", "Keywords"], ["cp:lastModifiedBy", "LastAuthor"], ["cp:lastPrinted", "LastPrinted"], ["cp:revision", "RevNumber"], ["cp:version", "Version"], ["dc:creator", "Author"], ["dc:description", "Comments"], ["dc:identifier", "Identifier"], ["dc:language", "Language"], ["dc:subject", "Subject"], ["dc:title", "Title"], ["dcterms:created", "CreatedDate", "date"], ["dcterms:modified", "ModifiedDate", "date"]];
      hr.CORE_PROPS = "http://schemas.openxmlformats.org/package/2006/metadata/core-properties";
      Ua.CORE_PROPS = "http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties";
      var en = function() {
        var e2 = new Array(qa.length);
        for (var r2 = 0; r2 < qa.length; ++r2) {
          var t2 = qa[r2];
          var a2 = "(?:" + t2[0].slice(0, t2[0].indexOf(":")) + ":)" + t2[0].slice(t2[0].indexOf(":") + 1);
          e2[r2] = new RegExp("<" + a2 + "[^>]*>([\\s\\S]*?)</" + a2 + ">");
        }
        return e2;
      }();
      function rn(e2) {
        var r2 = {};
        e2 = Ye(e2);
        for (var t2 = 0; t2 < qa.length; ++t2) {
          var a2 = qa[t2], n2 = e2.match(en[t2]);
          if (n2 != null && n2.length > 0)
            r2[a2[1]] = Me(n2[1]);
          if (a2[2] === "date" && r2[a2[1]])
            r2[a2[1]] = le(r2[a2[1]]);
        }
        return r2;
      }
      var tn = or("cp:coreProperties", null, { "xmlns:cp": hr.CORE_PROPS, "xmlns:dc": hr.dc, "xmlns:dcterms": hr.dcterms, "xmlns:dcmitype": hr.dcmitype, "xmlns:xsi": hr.xsi });
      function an(e2, r2, t2, a2, n2) {
        if (n2[e2] != null || r2 == null || r2 === "")
          return;
        n2[e2] = r2;
        r2 = He(r2);
        a2[a2.length] = t2 ? or(e2, r2, t2) : fr(e2, r2);
      }
      function nn(e2, r2) {
        var t2 = r2 || {};
        var a2 = [Ae, tn], n2 = {};
        if (!e2 && !t2.Props)
          return a2.join("");
        if (e2) {
          if (e2.CreatedDate != null)
            an("dcterms:created", typeof e2.CreatedDate === "string" ? e2.CreatedDate : cr(e2.CreatedDate, t2.WTF), { "xsi:type": "dcterms:W3CDTF" }, a2, n2);
          if (e2.ModifiedDate != null)
            an("dcterms:modified", typeof e2.ModifiedDate === "string" ? e2.ModifiedDate : cr(e2.ModifiedDate, t2.WTF), { "xsi:type": "dcterms:W3CDTF" }, a2, n2);
        }
        for (var i2 = 0; i2 != qa.length; ++i2) {
          var s2 = qa[i2];
          var f2 = t2.Props && t2.Props[s2[1]] != null ? t2.Props[s2[1]] : e2 ? e2[s2[1]] : null;
          if (f2 === true)
            f2 = "1";
          else if (f2 === false)
            f2 = "0";
          else if (typeof f2 == "number")
            f2 = String(f2);
          if (f2 != null)
            an(s2[0], f2, null, a2, n2);
        }
        if (a2.length > 2) {
          a2[a2.length] = "</cp:coreProperties>";
          a2[1] = a2[1].replace("/>", ">");
        }
        return a2.join("");
      }
      var sn = [["Application", "Application", "string"], ["AppVersion", "AppVersion", "string"], ["Company", "Company", "string"], ["DocSecurity", "DocSecurity", "string"], ["Manager", "Manager", "string"], ["HyperlinksChanged", "HyperlinksChanged", "bool"], ["SharedDoc", "SharedDoc", "bool"], ["LinksUpToDate", "LinksUpToDate", "bool"], ["ScaleCrop", "ScaleCrop", "bool"], ["HeadingPairs", "HeadingPairs", "raw"], ["TitlesOfParts", "TitlesOfParts", "raw"]];
      hr.EXT_PROPS = "http://schemas.openxmlformats.org/officeDocument/2006/extended-properties";
      Ua.EXT_PROPS = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties";
      var fn = ["Worksheets", "SheetNames", "NamedRanges", "DefinedNames", "Chartsheets", "ChartNames"];
      function ln(e2, r2, t2, a2) {
        var n2 = [];
        if (typeof e2 == "string")
          n2 = ir(e2, a2);
        else
          for (var i2 = 0; i2 < e2.length; ++i2)
            n2 = n2.concat(e2[i2].map(function(e3) {
              return { v: e3 };
            }));
        var s2 = typeof r2 == "string" ? ir(r2, a2).map(function(e3) {
          return e3.v;
        }) : r2;
        var f2 = 0, l2 = 0;
        if (s2.length > 0)
          for (var o2 = 0; o2 !== n2.length; o2 += 2) {
            l2 = +n2[o2 + 1].v;
            switch (n2[o2].v) {
              case "Worksheets":
                ;
              case "\u5DE5\u4F5C\u8868":
                ;
              case "\u041B\u0438\u0441\u0442\u044B":
                ;
              case "\u0623\u0648\u0631\u0627\u0642 \u0627\u0644\u0639\u0645\u0644":
                ;
              case "\u30EF\u30FC\u30AF\u30B7\u30FC\u30C8":
                ;
              case "\u05D2\u05DC\u05D9\u05D5\u05E0\u05D5\u05EA \u05E2\u05D1\u05D5\u05D3\u05D4":
                ;
              case "Arbeitsbl\xE4tter":
                ;
              case "\xC7al\u0131\u015Fma Sayfalar\u0131":
                ;
              case "Feuilles de calcul":
                ;
              case "Fogli di lavoro":
                ;
              case "Folhas de c\xE1lculo":
                ;
              case "Planilhas":
                ;
              case "Regneark":
                ;
              case "Hojas de c\xE1lculo":
                ;
              case "Werkbladen":
                t2.Worksheets = l2;
                t2.SheetNames = s2.slice(f2, f2 + l2);
                break;
              case "Named Ranges":
                ;
              case "Rangos con nombre":
                ;
              case "\u540D\u524D\u4ED8\u304D\u4E00\u89A7":
                ;
              case "Benannte Bereiche":
                ;
              case "Navngivne omr\xE5der":
                t2.NamedRanges = l2;
                t2.DefinedNames = s2.slice(f2, f2 + l2);
                break;
              case "Charts":
                ;
              case "Diagramme":
                t2.Chartsheets = l2;
                t2.ChartNames = s2.slice(f2, f2 + l2);
                break;
            }
            f2 += l2;
          }
      }
      function on(e2, r2, t2) {
        var a2 = {};
        if (!r2)
          r2 = {};
        e2 = Ye(e2);
        sn.forEach(function(t3) {
          var n2 = (e2.match(er(t3[0])) || [])[1];
          switch (t3[2]) {
            case "string":
              if (n2)
                r2[t3[1]] = Me(n2);
              break;
            case "bool":
              r2[t3[1]] = n2 === "true";
              break;
            case "raw":
              var i2 = e2.match(new RegExp("<" + t3[0] + "[^>]*>([\\s\\S]*?)</" + t3[0] + ">"));
              if (i2 && i2.length > 0)
                a2[t3[1]] = i2[1];
              break;
          }
        });
        if (a2.HeadingPairs && a2.TitlesOfParts)
          ln(a2.HeadingPairs, a2.TitlesOfParts, r2, t2);
        return r2;
      }
      var cn = or("Properties", null, { xmlns: hr.EXT_PROPS, "xmlns:vt": hr.vt });
      function un(e2) {
        var r2 = [], t2 = or;
        if (!e2)
          e2 = {};
        e2.Application = "SheetJS";
        r2[r2.length] = Ae;
        r2[r2.length] = cn;
        sn.forEach(function(a2) {
          if (e2[a2[1]] === void 0)
            return;
          var n2;
          switch (a2[2]) {
            case "string":
              n2 = He(String(e2[a2[1]]));
              break;
            case "bool":
              n2 = e2[a2[1]] ? "true" : "false";
              break;
          }
          if (n2 !== void 0)
            r2[r2.length] = t2(a2[0], n2);
        });
        r2[r2.length] = t2("HeadingPairs", t2("vt:vector", t2("vt:variant", "<vt:lpstr>Worksheets</vt:lpstr>") + t2("vt:variant", t2("vt:i4", String(e2.Worksheets))), { size: 2, baseType: "variant" }));
        r2[r2.length] = t2("TitlesOfParts", t2("vt:vector", e2.SheetNames.map(function(e3) {
          return "<vt:lpstr>" + He(e3) + "</vt:lpstr>";
        }).join(""), { size: e2.Worksheets, baseType: "lpstr" }));
        if (r2.length > 2) {
          r2[r2.length] = "</Properties>";
          r2[1] = r2[1].replace("/>", ">");
        }
        return r2.join("");
      }
      hr.CUST_PROPS = "http://schemas.openxmlformats.org/officeDocument/2006/custom-properties";
      Ua.CUST_PROPS = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/custom-properties";
      var hn = /<[^>]+>[^<]*/g;
      function dn(e2, r2) {
        var t2 = {}, a2 = "";
        var n2 = e2.match(hn);
        if (n2)
          for (var i2 = 0; i2 != n2.length; ++i2) {
            var s2 = n2[i2], f2 = De(s2);
            switch (f2[0]) {
              case "<?xml":
                break;
              case "<Properties":
                break;
              case "<property":
                a2 = Me(f2.name);
                break;
              case "</property>":
                a2 = null;
                break;
              default:
                if (s2.indexOf("<vt:") === 0) {
                  var l2 = s2.split(">");
                  var o2 = l2[0].slice(4), c2 = l2[1];
                  switch (o2) {
                    case "lpstr":
                      ;
                    case "bstr":
                      ;
                    case "lpwstr":
                      t2[a2] = Me(c2);
                      break;
                    case "bool":
                      t2[a2] = $e(c2);
                      break;
                    case "i1":
                      ;
                    case "i2":
                      ;
                    case "i4":
                      ;
                    case "i8":
                      ;
                    case "int":
                      ;
                    case "uint":
                      t2[a2] = parseInt(c2, 10);
                      break;
                    case "r4":
                      ;
                    case "r8":
                      ;
                    case "decimal":
                      t2[a2] = parseFloat(c2);
                      break;
                    case "filetime":
                      ;
                    case "date":
                      t2[a2] = le(c2);
                      break;
                    case "cy":
                      ;
                    case "error":
                      t2[a2] = Me(c2);
                      break;
                    default:
                      if (o2.slice(-1) == "/")
                        break;
                      if (r2.WTF && typeof console !== "undefined")
                        console.warn("Unexpected", s2, o2, l2);
                  }
                } else if (s2.slice(0, 2) === "</") {
                } else if (r2.WTF)
                  throw new Error(s2);
            }
          }
        return t2;
      }
      var vn = or("Properties", null, { xmlns: hr.CUST_PROPS, "xmlns:vt": hr.vt });
      function pn(e2) {
        var r2 = [Ae, vn];
        if (!e2)
          return r2.join("");
        var t2 = 1;
        K(e2).forEach(function a2(n2) {
          ++t2;
          r2[r2.length] = or("property", ur(e2[n2], true), { fmtid: "{D5CDD505-2E9C-101B-9397-08002B2CF9AE}", pid: t2, name: He(n2) });
        });
        if (r2.length > 2) {
          r2[r2.length] = "</Properties>";
          r2[1] = r2[1].replace("/>", ">");
        }
        return r2.join("");
      }
      var mn = { Title: "Title", Subject: "Subject", Author: "Author", Keywords: "Keywords", Comments: "Description", LastAuthor: "LastAuthor", RevNumber: "Revision", Application: "AppName", LastPrinted: "LastPrinted", CreatedDate: "Created", ModifiedDate: "LastSaved", Category: "Category", Manager: "Manager", Company: "Company", AppVersion: "Version", ContentStatus: "ContentStatus", Identifier: "Identifier", Language: "Language" };
      var bn = Z(mn);
      function gn(e2, r2, t2) {
        r2 = bn[r2] || r2;
        e2[r2] = t2;
      }
      function wn(e2, r2) {
        var t2 = [];
        K(mn).map(function(e3) {
          for (var r3 = 0; r3 < qa.length; ++r3)
            if (qa[r3][1] == e3)
              return qa[r3];
          for (r3 = 0; r3 < sn.length; ++r3)
            if (sn[r3][1] == e3)
              return sn[r3];
          throw e3;
        }).forEach(function(a2) {
          if (e2[a2[1]] == null)
            return;
          var n2 = r2 && r2.Props && r2.Props[a2[1]] != null ? r2.Props[a2[1]] : e2[a2[1]];
          switch (a2[2]) {
            case "date":
              n2 = new Date(n2).toISOString().replace(/\.\d*Z/, "Z");
              break;
          }
          if (typeof n2 == "number")
            n2 = String(n2);
          else if (n2 === true || n2 === false) {
            n2 = n2 ? "1" : "0";
          } else if (n2 instanceof Date)
            n2 = new Date(n2).toISOString().replace(/\.\d*Z/, "");
          t2.push(fr(mn[a2[1]] || a2[1], n2));
        });
        return or("DocumentProperties", t2.join(""), { xmlns: dr.o });
      }
      function kn(e2, r2) {
        var t2 = ["Worksheets", "SheetNames"];
        var a2 = "CustomDocumentProperties";
        var n2 = [];
        if (e2)
          K(e2).forEach(function(r3) {
            if (!Object.prototype.hasOwnProperty.call(e2, r3))
              return;
            for (var a3 = 0; a3 < qa.length; ++a3)
              if (r3 == qa[a3][1])
                return;
            for (a3 = 0; a3 < sn.length; ++a3)
              if (r3 == sn[a3][1])
                return;
            for (a3 = 0; a3 < t2.length; ++a3)
              if (r3 == t2[a3])
                return;
            var i2 = e2[r3];
            var s2 = "string";
            if (typeof i2 == "number") {
              s2 = "float";
              i2 = String(i2);
            } else if (i2 === true || i2 === false) {
              s2 = "boolean";
              i2 = i2 ? "1" : "0";
            } else
              i2 = String(i2);
            n2.push(or(We(r3), i2, { "dt:dt": s2 }));
          });
        if (r2)
          K(r2).forEach(function(t3) {
            if (!Object.prototype.hasOwnProperty.call(r2, t3))
              return;
            if (e2 && Object.prototype.hasOwnProperty.call(e2, t3))
              return;
            var a3 = r2[t3];
            var i2 = "string";
            if (typeof a3 == "number") {
              i2 = "float";
              a3 = String(a3);
            } else if (a3 === true || a3 === false) {
              i2 = "boolean";
              a3 = a3 ? "1" : "0";
            } else if (a3 instanceof Date) {
              i2 = "dateTime.tz";
              a3 = a3.toISOString();
            } else
              a3 = String(a3);
            n2.push(or(We(t3), a3, { "dt:dt": i2 }));
          });
        return "<" + a2 + ' xmlns="' + dr.o + '">' + n2.join("") + "</" + a2 + ">";
      }
      function En(e2) {
        var r2 = e2._R(4), t2 = e2._R(4);
        return new Date((t2 / 1e7 * Math.pow(2, 32) + r2 / 1e7 - 11644473600) * 1e3).toISOString().replace(/\.000/, "");
      }
      function Sn(e2) {
        var r2 = typeof e2 == "string" ? new Date(Date.parse(e2)) : e2;
        var t2 = r2.getTime() / 1e3 + 11644473600;
        var a2 = t2 % Math.pow(2, 32), n2 = (t2 - a2) / Math.pow(2, 32);
        a2 *= 1e7;
        n2 *= 1e7;
        var i2 = a2 / Math.pow(2, 32) | 0;
        if (i2 > 0) {
          a2 = a2 % Math.pow(2, 32);
          n2 += i2;
        }
        var s2 = Jr(8);
        s2._W(4, a2);
        s2._W(4, n2);
        return s2;
      }
      function _n(e2, r2, t2) {
        var a2 = e2.l;
        var n2 = e2._R(0, "lpstr-cp");
        if (t2)
          while (e2.l - a2 & 3)
            ++e2.l;
        return n2;
      }
      function Cn(e2, r2, t2) {
        var a2 = e2._R(0, "lpwstr");
        if (t2)
          e2.l += 4 - (a2.length + 1 & 3) & 3;
        return a2;
      }
      function Bn(e2, r2, t2) {
        if (r2 === 31)
          return Cn(e2);
        return _n(e2, r2, t2);
      }
      function Tn(e2, r2, t2) {
        return Bn(e2, r2, t2 === false ? 0 : 4);
      }
      function yn(e2, r2) {
        if (!r2)
          throw new Error("VtUnalignedString must have positive length");
        return Bn(e2, r2, 0);
      }
      function xn(e2) {
        var r2 = e2._R(4);
        var t2 = [];
        for (var a2 = 0; a2 != r2; ++a2) {
          var n2 = e2.l;
          t2[a2] = e2._R(0, "lpwstr").replace(R, "");
          if (e2.l - n2 & 2)
            e2.l += 2;
        }
        return t2;
      }
      function An(e2) {
        var r2 = e2._R(4);
        var t2 = [];
        for (var a2 = 0; a2 != r2; ++a2)
          t2[a2] = e2._R(0, "lpstr-cp").replace(R, "");
        return t2;
      }
      function In(e2) {
        var r2 = e2.l;
        var t2 = Pn(e2, ga);
        if (e2[e2.l] == 0 && e2[e2.l + 1] == 0 && e2.l - r2 & 2)
          e2.l += 2;
        var a2 = Pn(e2, la);
        return [t2, a2];
      }
      function Rn(e2) {
        var r2 = e2._R(4);
        var t2 = [];
        for (var a2 = 0; a2 < r2 / 2; ++a2)
          t2.push(In(e2));
        return t2;
      }
      function Fn(e2, r2) {
        var t2 = e2._R(4);
        var a2 = {};
        for (var n2 = 0; n2 != t2; ++n2) {
          var i2 = e2._R(4);
          var s2 = e2._R(4);
          a2[i2] = e2._R(s2, r2 === 1200 ? "utf16le" : "utf8").replace(R, "").replace(F, "!");
          if (r2 === 1200 && s2 % 2)
            e2.l += 2;
        }
        if (e2.l & 3)
          e2.l = e2.l >> 2 + 1 << 2;
        return a2;
      }
      function On(e2) {
        var r2 = e2._R(4);
        var t2 = e2.slice(e2.l, e2.l + r2);
        e2.l += r2;
        if ((r2 & 3) > 0)
          e2.l += 4 - (r2 & 3) & 3;
        return t2;
      }
      function Dn(e2) {
        var r2 = {};
        r2.Size = e2._R(4);
        e2.l += r2.Size + 3 - (r2.Size - 1) % 4;
        return r2;
      }
      function Pn(e2, r2, t2) {
        var a2 = e2._R(2), n2, i2 = t2 || {};
        e2.l += 2;
        if (r2 !== ca) {
          if (a2 !== r2 && wa.indexOf(r2) === -1 && !((r2 & 65534) == 4126 && (a2 & 65534) == 4126))
            throw new Error("Expected type " + r2 + " saw " + a2);
        }
        switch (r2 === ca ? a2 : r2) {
          case 2:
            n2 = e2._R(2, "i");
            if (!i2.raw)
              e2.l += 2;
            return n2;
          case 3:
            n2 = e2._R(4, "i");
            return n2;
          case 11:
            return e2._R(4) !== 0;
          case 19:
            n2 = e2._R(4);
            return n2;
          case 30:
            return _n(e2, a2, 4).replace(R, "");
          case 31:
            return Cn(e2);
          case 64:
            return En(e2);
          case 65:
            return On(e2);
          case 71:
            return Dn(e2);
          case 80:
            return Tn(e2, a2, !i2.raw).replace(R, "");
            ;
          case 81:
            return yn(e2, a2).replace(R, "");
          case 4108:
            return Rn(e2);
          case 4126:
            ;
          case 4127:
            return a2 == 4127 ? xn(e2) : An(e2);
          default:
            throw new Error("TypedPropertyValue unrecognized type " + r2 + " " + a2);
        }
      }
      function Nn(e2, r2) {
        var t2 = Jr(4), a2 = Jr(4);
        t2._W(4, e2 == 80 ? 31 : e2);
        switch (e2) {
          case 3:
            a2._W(-4, r2);
            break;
          case 5:
            a2 = Jr(8);
            a2._W(8, r2, "f");
            break;
          case 11:
            a2._W(4, r2 ? 1 : 0);
            break;
          case 64:
            a2 = Sn(r2);
            break;
          case 31:
            ;
          case 80:
            a2 = Jr(4 + 2 * (r2.length + 1) + (r2.length % 2 ? 0 : 2));
            a2._W(4, r2.length + 1);
            a2._W(0, r2, "dbcs");
            while (a2.l != a2.length)
              a2._W(1, 0);
            break;
          default:
            throw new Error("TypedPropertyValue unrecognized type " + e2 + " " + r2);
        }
        return I([t2, a2]);
      }
      function Ln(e2, r2) {
        var t2 = e2.l;
        var a2 = e2._R(4);
        var n2 = e2._R(4);
        var i2 = [], s2 = 0;
        var f2 = 0;
        var o2 = -1, c2 = {};
        for (s2 = 0; s2 != n2; ++s2) {
          var u2 = e2._R(4);
          var h2 = e2._R(4);
          i2[s2] = [u2, h2 + t2];
        }
        i2.sort(function(e3, r3) {
          return e3[1] - r3[1];
        });
        var d2 = {};
        for (s2 = 0; s2 != n2; ++s2) {
          if (e2.l !== i2[s2][1]) {
            var v2 = true;
            if (s2 > 0 && r2)
              switch (r2[i2[s2 - 1][0]].t) {
                case 2:
                  if (e2.l + 2 === i2[s2][1]) {
                    e2.l += 2;
                    v2 = false;
                  }
                  break;
                case 80:
                  if (e2.l <= i2[s2][1]) {
                    e2.l = i2[s2][1];
                    v2 = false;
                  }
                  break;
                case 4108:
                  if (e2.l <= i2[s2][1]) {
                    e2.l = i2[s2][1];
                    v2 = false;
                  }
                  break;
              }
            if ((!r2 || s2 == 0) && e2.l <= i2[s2][1]) {
              v2 = false;
              e2.l = i2[s2][1];
            }
            if (v2)
              throw new Error("Read Error: Expected address " + i2[s2][1] + " at " + e2.l + " :" + s2);
          }
          if (r2) {
            var p2 = r2[i2[s2][0]];
            d2[p2.n] = Pn(e2, p2.t, { raw: true });
            if (p2.p === "version")
              d2[p2.n] = String(d2[p2.n] >> 16) + "." + ("0000" + String(d2[p2.n] & 65535)).slice(-4);
            if (p2.n == "CodePage")
              switch (d2[p2.n]) {
                case 0:
                  d2[p2.n] = 1252;
                case 874:
                  ;
                case 932:
                  ;
                case 936:
                  ;
                case 949:
                  ;
                case 950:
                  ;
                case 1250:
                  ;
                case 1251:
                  ;
                case 1253:
                  ;
                case 1254:
                  ;
                case 1255:
                  ;
                case 1256:
                  ;
                case 1257:
                  ;
                case 1258:
                  ;
                case 1e4:
                  ;
                case 1200:
                  ;
                case 1201:
                  ;
                case 1252:
                  ;
                case 65e3:
                  ;
                case -536:
                  ;
                case 65001:
                  ;
                case -535:
                  l(f2 = d2[p2.n] >>> 0 & 65535);
                  break;
                default:
                  throw new Error("Unsupported CodePage: " + d2[p2.n]);
              }
          } else {
            if (i2[s2][0] === 1) {
              f2 = d2.CodePage = Pn(e2, fa);
              l(f2);
              if (o2 !== -1) {
                var m2 = e2.l;
                e2.l = i2[o2][1];
                c2 = Fn(e2, f2);
                e2.l = m2;
              }
            } else if (i2[s2][0] === 0) {
              if (f2 === 0) {
                o2 = s2;
                e2.l = i2[s2 + 1][1];
                continue;
              }
              c2 = Fn(e2, f2);
            } else {
              var b2 = c2[i2[s2][0]];
              var g2;
              switch (e2[e2.l]) {
                case 65:
                  e2.l += 4;
                  g2 = On(e2);
                  break;
                case 30:
                  e2.l += 4;
                  g2 = Tn(e2, e2[e2.l - 4]).replace(/\u0000+$/, "");
                  break;
                case 31:
                  e2.l += 4;
                  g2 = Tn(e2, e2[e2.l - 4]).replace(/\u0000+$/, "");
                  break;
                case 3:
                  e2.l += 4;
                  g2 = e2._R(4, "i");
                  break;
                case 19:
                  e2.l += 4;
                  g2 = e2._R(4);
                  break;
                case 5:
                  e2.l += 4;
                  g2 = e2._R(8, "f");
                  break;
                case 11:
                  e2.l += 4;
                  g2 = jn(e2, 4);
                  break;
                case 64:
                  e2.l += 4;
                  g2 = le(En(e2));
                  break;
                default:
                  throw new Error("unparsed value: " + e2[e2.l]);
              }
              d2[b2] = g2;
            }
          }
        }
        e2.l = t2 + a2;
        return d2;
      }
      var Mn = ["CodePage", "Thumbnail", "_PID_LINKBASE", "_PID_HLINKS", "SystemIdentifier", "FMTID"].concat(fn);
      function Un(e2) {
        switch (typeof e2) {
          case "boolean":
            return 11;
          case "number":
            return (e2 | 0) == e2 ? 3 : 5;
          case "string":
            return 31;
          case "object":
            if (e2 instanceof Date)
              return 64;
            break;
        }
        return -1;
      }
      function zn(e2, r2, t2) {
        var a2 = Jr(8), n2 = [], i2 = [];
        var s2 = 8, f2 = 0;
        var l2 = Jr(8), o2 = Jr(8);
        l2._W(4, 2);
        l2._W(4, 1200);
        o2._W(4, 1);
        i2.push(l2);
        n2.push(o2);
        s2 += 8 + l2.length;
        if (!r2) {
          o2 = Jr(8);
          o2._W(4, 0);
          n2.unshift(o2);
          var c2 = [Jr(4)];
          c2[0]._W(4, e2.length);
          for (f2 = 0; f2 < e2.length; ++f2) {
            var u2 = e2[f2][0];
            l2 = Jr(4 + 4 + 2 * (u2.length + 1) + (u2.length % 2 ? 0 : 2));
            l2._W(4, f2 + 2);
            l2._W(4, u2.length + 1);
            l2._W(0, u2, "dbcs");
            while (l2.l != l2.length)
              l2._W(1, 0);
            c2.push(l2);
          }
          l2 = I(c2);
          i2.unshift(l2);
          s2 += 8 + l2.length;
        }
        for (f2 = 0; f2 < e2.length; ++f2) {
          if (r2 && !r2[e2[f2][0]])
            continue;
          if (Mn.indexOf(e2[f2][0]) > -1)
            continue;
          if (e2[f2][1] == null)
            continue;
          var h2 = e2[f2][1], d2 = 0;
          if (r2) {
            d2 = +r2[e2[f2][0]];
            var v2 = t2[d2];
            if (v2.p == "version" && typeof h2 == "string") {
              var p2 = h2.split(".");
              h2 = (+p2[0] << 16) + (+p2[1] || 0);
            }
            l2 = Nn(v2.t, h2);
          } else {
            var m2 = Un(h2);
            if (m2 == -1) {
              m2 = 31;
              h2 = String(h2);
            }
            l2 = Nn(m2, h2);
          }
          i2.push(l2);
          o2 = Jr(8);
          o2._W(4, !r2 ? 2 + f2 : d2);
          n2.push(o2);
          s2 += 8 + l2.length;
        }
        var b2 = 8 * (i2.length + 1);
        for (f2 = 0; f2 < i2.length; ++f2) {
          n2[f2]._W(4, b2);
          b2 += i2[f2].length;
        }
        a2._W(4, s2);
        a2._W(4, i2.length);
        return I([a2].concat(n2).concat(i2));
      }
      function Hn(e2, r2, t2) {
        var a2 = e2.content;
        if (!a2)
          return {};
        Yr(a2, 0);
        var n2, i2, s2, f2, l2 = 0;
        a2.chk("feff", "Byte Order: ");
        a2._R(2);
        var o2 = a2._R(4);
        var c2 = a2._R(16);
        if (c2 !== W.utils.consts.HEADER_CLSID && c2 !== t2)
          throw new Error("Bad PropertySet CLSID " + c2);
        n2 = a2._R(4);
        if (n2 !== 1 && n2 !== 2)
          throw new Error("Unrecognized #Sets: " + n2);
        i2 = a2._R(16);
        f2 = a2._R(4);
        if (n2 === 1 && f2 !== a2.l)
          throw new Error("Length mismatch: " + f2 + " !== " + a2.l);
        else if (n2 === 2) {
          s2 = a2._R(16);
          l2 = a2._R(4);
        }
        var u2 = Ln(a2, r2);
        var h2 = { SystemIdentifier: o2 };
        for (var d2 in u2)
          h2[d2] = u2[d2];
        h2.FMTID = i2;
        if (n2 === 1)
          return h2;
        if (l2 - a2.l == 2)
          a2.l += 2;
        if (a2.l !== l2)
          throw new Error("Length mismatch 2: " + a2.l + " !== " + l2);
        var v2;
        try {
          v2 = Ln(a2, null);
        } catch (p2) {
        }
        for (d2 in v2)
          h2[d2] = v2[d2];
        h2.FMTID = [i2, s2];
        return h2;
      }
      function Wn(e2, r2, t2, a2, n2, i2) {
        var s2 = Jr(n2 ? 68 : 48);
        var f2 = [s2];
        s2._W(2, 65534);
        s2._W(2, 0);
        s2._W(4, 842412599);
        s2._W(16, W.utils.consts.HEADER_CLSID, "hex");
        s2._W(4, n2 ? 2 : 1);
        s2._W(16, r2, "hex");
        s2._W(4, n2 ? 68 : 48);
        var l2 = zn(e2, t2, a2);
        f2.push(l2);
        if (n2) {
          var o2 = zn(n2, null, null);
          s2._W(16, i2, "hex");
          s2._W(4, 68 + l2.length);
          f2.push(o2);
        }
        return I(f2);
      }
      function Vn(e2, r2) {
        e2._R(r2);
        return null;
      }
      function Xn(e2, r2) {
        if (!r2)
          r2 = Jr(e2);
        for (var t2 = 0; t2 < e2; ++t2)
          r2._W(1, 0);
        return r2;
      }
      function Gn(e2, r2, t2) {
        var a2 = [], n2 = e2.l + r2;
        while (e2.l < n2)
          a2.push(t2(e2, n2 - e2.l));
        if (n2 !== e2.l)
          throw new Error("Slurp error");
        return a2;
      }
      function jn(e2, r2) {
        return e2._R(r2) === 1;
      }
      function Kn(e2, r2) {
        if (!r2)
          r2 = Jr(2);
        r2._W(2, +!!e2);
        return r2;
      }
      function $n(e2) {
        return e2._R(2, "u");
      }
      function Yn(e2, r2) {
        if (!r2)
          r2 = Jr(2);
        r2._W(2, e2);
        return r2;
      }
      function Zn(e2, r2) {
        return Gn(e2, r2, $n);
      }
      function Jn(e2) {
        var r2 = e2._R(1), t2 = e2._R(1);
        return t2 === 1 ? r2 : r2 === 1;
      }
      function Qn(e2, r2, t2) {
        if (!t2)
          t2 = Jr(2);
        t2._W(1, r2 == "e" ? +e2 : +!!e2);
        t2._W(1, r2 == "e" ? 1 : 0);
        return t2;
      }
      function qn(e2, t2, a2) {
        var n2 = e2._R(a2 && a2.biff >= 12 ? 2 : 1);
        var i2 = "sbcs-cont";
        var s2 = r;
        if (a2 && a2.biff >= 8)
          r = 1200;
        if (!a2 || a2.biff == 8) {
          var f2 = e2._R(1);
          if (f2) {
            i2 = "dbcs-cont";
          }
        } else if (a2.biff == 12) {
          i2 = "wstr";
        }
        if (a2.biff >= 2 && a2.biff <= 5)
          i2 = "cpstr";
        var l2 = n2 ? e2._R(n2, i2) : "";
        r = s2;
        return l2;
      }
      function ei(e2) {
        var t2 = r;
        r = 1200;
        var a2 = e2._R(2), n2 = e2._R(1);
        var i2 = n2 & 4, s2 = n2 & 8;
        var f2 = 1 + (n2 & 1);
        var l2 = 0, o2;
        var c2 = {};
        if (s2)
          l2 = e2._R(2);
        if (i2)
          o2 = e2._R(4);
        var u2 = f2 == 2 ? "dbcs-cont" : "sbcs-cont";
        var h2 = a2 === 0 ? "" : e2._R(a2, u2);
        if (s2)
          e2.l += 4 * l2;
        if (i2)
          e2.l += o2;
        c2.t = h2;
        if (!s2) {
          c2.raw = "<t>" + c2.t + "</t>";
          c2.r = c2.t;
        }
        r = t2;
        return c2;
      }
      function ri(e2) {
        var r2 = e2.t || "", t2 = 1;
        var a2 = Jr(3 + (t2 > 1 ? 2 : 0));
        a2._W(2, r2.length);
        a2._W(1, (t2 > 1 ? 8 : 0) | 1);
        if (t2 > 1)
          a2._W(2, t2);
        var n2 = Jr(2 * r2.length);
        n2._W(2 * r2.length, r2, "utf16le");
        var i2 = [a2, n2];
        return I(i2);
      }
      function ti(e2, r2, t2) {
        var a2;
        if (t2) {
          if (t2.biff >= 2 && t2.biff <= 5)
            return e2._R(r2, "cpstr");
          if (t2.biff >= 12)
            return e2._R(r2, "dbcs-cont");
        }
        var n2 = e2._R(1);
        if (n2 === 0) {
          a2 = e2._R(r2, "sbcs-cont");
        } else {
          a2 = e2._R(r2, "dbcs-cont");
        }
        return a2;
      }
      function ai(e2, r2, t2) {
        var a2 = e2._R(t2 && t2.biff == 2 ? 1 : 2);
        if (a2 === 0) {
          e2.l++;
          return "";
        }
        return ti(e2, a2, t2);
      }
      function ni(e2, r2, t2) {
        if (t2.biff > 5)
          return ai(e2, r2, t2);
        var a2 = e2._R(1);
        if (a2 === 0) {
          e2.l++;
          return "";
        }
        return e2._R(a2, t2.biff <= 4 || !e2.lens ? "cpstr" : "sbcs-cont");
      }
      function ii(e2, r2, t2) {
        if (!t2)
          t2 = Jr(3 + 2 * e2.length);
        t2._W(2, e2.length);
        t2._W(1, 1);
        t2._W(31, e2, "utf16le");
        return t2;
      }
      function si(e2) {
        var r2 = e2._R(1);
        e2.l++;
        var t2 = e2._R(2);
        e2.l += 2;
        return [r2, t2];
      }
      function fi(e2) {
        var r2 = e2._R(4), t2 = e2.l;
        var a2 = false;
        if (r2 > 24) {
          e2.l += r2 - 24;
          if (e2._R(16) === "795881f43b1d7f48af2c825dc4852763")
            a2 = true;
          e2.l = t2;
        }
        var n2 = e2._R((a2 ? r2 - 24 : r2) >> 1, "utf16le").replace(R, "");
        if (a2)
          e2.l += 24;
        return n2;
      }
      function li(e2) {
        var r2 = e2._R(2);
        var t2 = "";
        while (r2-- > 0)
          t2 += "../";
        var a2 = e2._R(0, "lpstr-ansi");
        e2.l += 2;
        if (e2._R(2) != 57005)
          throw new Error("Bad FileMoniker");
        var n2 = e2._R(4);
        if (n2 === 0)
          return t2 + a2.replace(/\\/g, "/");
        var i2 = e2._R(4);
        if (e2._R(2) != 3)
          throw new Error("Bad FileMoniker");
        var s2 = e2._R(i2 >> 1, "utf16le").replace(R, "");
        return t2 + s2;
      }
      function oi(e2, r2) {
        var t2 = e2._R(16);
        r2 -= 16;
        switch (t2) {
          case "e0c9ea79f9bace118c8200aa004ba90b":
            return fi(e2, r2);
          case "0303000000000000c000000000000046":
            return li(e2, r2);
          default:
            throw new Error("Unsupported Moniker " + t2);
        }
      }
      function ci(e2) {
        var r2 = e2._R(4);
        var t2 = r2 > 0 ? e2._R(r2, "utf16le").replace(R, "") : "";
        return t2;
      }
      function ui(e2, r2) {
        if (!r2)
          r2 = Jr(6 + e2.length * 2);
        r2._W(4, 1 + e2.length);
        for (var t2 = 0; t2 < e2.length; ++t2)
          r2._W(2, e2.charCodeAt(t2));
        r2._W(2, 0);
        return r2;
      }
      function hi(e2, r2) {
        var t2 = e2.l + r2;
        var a2 = e2._R(4);
        if (a2 !== 2)
          throw new Error("Unrecognized streamVersion: " + a2);
        var n2 = e2._R(2);
        e2.l += 2;
        var i2, s2, f2, l2, o2 = "", c2, u2;
        if (n2 & 16)
          i2 = ci(e2, t2 - e2.l);
        if (n2 & 128)
          s2 = ci(e2, t2 - e2.l);
        if ((n2 & 257) === 257)
          f2 = ci(e2, t2 - e2.l);
        if ((n2 & 257) === 1)
          l2 = oi(e2, t2 - e2.l);
        if (n2 & 8)
          o2 = ci(e2, t2 - e2.l);
        if (n2 & 32)
          c2 = e2._R(16);
        if (n2 & 64)
          u2 = En(e2);
        e2.l = t2;
        var h2 = s2 || f2 || l2 || "";
        if (h2 && o2)
          h2 += "#" + o2;
        if (!h2)
          h2 = "#" + o2;
        if (n2 & 2 && h2.charAt(0) == "/" && h2.charAt(1) != "/")
          h2 = "file://" + h2;
        var d2 = { Target: h2 };
        if (c2)
          d2.guid = c2;
        if (u2)
          d2.time = u2;
        if (i2)
          d2.Tooltip = i2;
        return d2;
      }
      function di(e2) {
        var r2 = Jr(512), t2 = 0;
        var a2 = e2.Target;
        if (a2.slice(0, 7) == "file://")
          a2 = a2.slice(7);
        var n2 = a2.indexOf("#");
        var i2 = n2 > -1 ? 31 : 23;
        switch (a2.charAt(0)) {
          case "#":
            i2 = 28;
            break;
          case ".":
            i2 &= ~2;
            break;
        }
        r2._W(4, 2);
        r2._W(4, i2);
        var s2 = [8, 6815827, 6619237, 4849780, 83];
        for (t2 = 0; t2 < s2.length; ++t2)
          r2._W(4, s2[t2]);
        if (i2 == 28) {
          a2 = a2.slice(1);
          ui(a2, r2);
        } else if (i2 & 2) {
          s2 = "e0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b".split(" ");
          for (t2 = 0; t2 < s2.length; ++t2)
            r2._W(1, parseInt(s2[t2], 16));
          var f2 = n2 > -1 ? a2.slice(0, n2) : a2;
          r2._W(4, 2 * (f2.length + 1));
          for (t2 = 0; t2 < f2.length; ++t2)
            r2._W(2, f2.charCodeAt(t2));
          r2._W(2, 0);
          if (i2 & 8)
            ui(n2 > -1 ? a2.slice(n2 + 1) : "", r2);
        } else {
          s2 = "03 03 00 00 00 00 00 00 c0 00 00 00 00 00 00 46".split(" ");
          for (t2 = 0; t2 < s2.length; ++t2)
            r2._W(1, parseInt(s2[t2], 16));
          var l2 = 0;
          while (a2.slice(l2 * 3, l2 * 3 + 3) == "../" || a2.slice(l2 * 3, l2 * 3 + 3) == "..\\")
            ++l2;
          r2._W(2, l2);
          r2._W(4, a2.length - 3 * l2 + 1);
          for (t2 = 0; t2 < a2.length - 3 * l2; ++t2)
            r2._W(1, a2.charCodeAt(t2 + 3 * l2) & 255);
          r2._W(1, 0);
          r2._W(2, 65535);
          r2._W(2, 57005);
          for (t2 = 0; t2 < 6; ++t2)
            r2._W(4, 0);
        }
        return r2.slice(0, r2.l);
      }
      function vi(e2) {
        var r2 = e2._R(1), t2 = e2._R(1), a2 = e2._R(1), n2 = e2._R(1);
        return [r2, t2, a2, n2];
      }
      function pi(e2, r2) {
        var t2 = vi(e2, r2);
        t2[3] = 0;
        return t2;
      }
      function mi(e2) {
        var r2 = e2._R(2);
        var t2 = e2._R(2);
        var a2 = e2._R(2);
        return { r: r2, c: t2, ixfe: a2 };
      }
      function bi(e2, r2, t2, a2) {
        if (!a2)
          a2 = Jr(6);
        a2._W(2, e2);
        a2._W(2, r2);
        a2._W(2, t2 || 0);
        return a2;
      }
      function gi(e2) {
        var r2 = e2._R(2);
        var t2 = e2._R(2);
        e2.l += 8;
        return { type: r2, flags: t2 };
      }
      function wi(e2, r2, t2) {
        return r2 === 0 ? "" : ni(e2, r2, t2);
      }
      function ki(e2, r2, t2) {
        var a2 = t2.biff > 8 ? 4 : 2;
        var n2 = e2._R(a2), i2 = e2._R(a2, "i"), s2 = e2._R(a2, "i");
        return [n2, i2, s2];
      }
      function Ei(e2) {
        var r2 = e2._R(2);
        var t2 = jt(e2);
        return [r2, t2];
      }
      function Si(e2, r2, t2) {
        e2.l += 4;
        r2 -= 4;
        var a2 = e2.l + r2;
        var n2 = qn(e2, r2, t2);
        var i2 = e2._R(2);
        a2 -= e2.l;
        if (i2 !== a2)
          throw new Error("Malformed AddinUdf: padding = " + a2 + " != " + i2);
        e2.l += i2;
        return n2;
      }
      function _i(e2) {
        var r2 = e2._R(2);
        var t2 = e2._R(2);
        var a2 = e2._R(2);
        var n2 = e2._R(2);
        return { s: { c: a2, r: r2 }, e: { c: n2, r: t2 } };
      }
      function Ci(e2, r2) {
        if (!r2)
          r2 = Jr(8);
        r2._W(2, e2.s.r);
        r2._W(2, e2.e.r);
        r2._W(2, e2.s.c);
        r2._W(2, e2.e.c);
        return r2;
      }
      function Bi(e2) {
        var r2 = e2._R(2);
        var t2 = e2._R(2);
        var a2 = e2._R(1);
        var n2 = e2._R(1);
        return { s: { c: a2, r: r2 }, e: { c: n2, r: t2 } };
      }
      var Ti = Bi;
      function yi(e2) {
        e2.l += 4;
        var r2 = e2._R(2);
        var t2 = e2._R(2);
        var a2 = e2._R(2);
        e2.l += 12;
        return [t2, r2, a2];
      }
      function xi(e2) {
        var r2 = {};
        e2.l += 4;
        e2.l += 16;
        r2.fSharedNote = e2._R(2);
        e2.l += 4;
        return r2;
      }
      function Ai(e2) {
        var r2 = {};
        e2.l += 4;
        e2.cf = e2._R(2);
        return r2;
      }
      function Ii(e2) {
        e2.l += 2;
        e2.l += e2._R(2);
      }
      var Ri = { 0: Ii, 4: Ii, 5: Ii, 6: Ii, 7: Ai, 8: Ii, 9: Ii, 10: Ii, 11: Ii, 12: Ii, 13: xi, 14: Ii, 15: Ii, 16: Ii, 17: Ii, 18: Ii, 19: Ii, 20: Ii, 21: yi };
      function Fi(e2, r2) {
        var t2 = e2.l + r2;
        var a2 = [];
        while (e2.l < t2) {
          var n2 = e2._R(2);
          e2.l -= 2;
          try {
            a2.push(Ri[n2](e2, t2 - e2.l));
          } catch (i2) {
            e2.l = t2;
            return a2;
          }
        }
        if (e2.l != t2)
          e2.l = t2;
        return a2;
      }
      function Oi(e2, r2) {
        var t2 = { BIFFVer: 0, dt: 0 };
        t2.BIFFVer = e2._R(2);
        r2 -= 2;
        if (r2 >= 2) {
          t2.dt = e2._R(2);
          e2.l -= 2;
        }
        switch (t2.BIFFVer) {
          case 1536:
            ;
          case 1280:
            ;
          case 1024:
            ;
          case 768:
            ;
          case 512:
            ;
          case 2:
            ;
          case 7:
            break;
          default:
            if (r2 > 6)
              throw new Error("Unexpected BIFF Ver " + t2.BIFFVer);
        }
        e2._R(r2);
        return t2;
      }
      function Di(e2, r2, t2) {
        var a2 = 1536, n2 = 16;
        switch (t2.bookType) {
          case "biff8":
            break;
          case "biff5":
            a2 = 1280;
            n2 = 8;
            break;
          case "biff4":
            a2 = 4;
            n2 = 6;
            break;
          case "biff3":
            a2 = 3;
            n2 = 6;
            break;
          case "biff2":
            a2 = 2;
            n2 = 4;
            break;
          case "xla":
            break;
          default:
            throw new Error("unsupported BIFF version");
        }
        var i2 = Jr(n2);
        i2._W(2, a2);
        i2._W(2, r2);
        if (n2 > 4)
          i2._W(2, 29282);
        if (n2 > 6)
          i2._W(2, 1997);
        if (n2 > 8) {
          i2._W(2, 49161);
          i2._W(2, 1);
          i2._W(2, 1798);
          i2._W(2, 0);
        }
        return i2;
      }
      function Pi(e2, r2) {
        if (r2 === 0)
          return 1200;
        if (e2._R(2) !== 1200) {
        }
        return 1200;
      }
      function Ni(e2, r2, t2) {
        if (t2.enc) {
          e2.l += r2;
          return "";
        }
        var a2 = e2.l;
        var n2 = ni(e2, 0, t2);
        e2._R(r2 + a2 - e2.l);
        return n2;
      }
      function Li(e2, r2) {
        var t2 = !r2 || r2.biff == 8;
        var a2 = Jr(t2 ? 112 : 54);
        a2._W(r2.biff == 8 ? 2 : 1, 7);
        if (t2)
          a2._W(1, 0);
        a2._W(4, 859007059);
        a2._W(4, 5458548 | (t2 ? 0 : 536870912));
        while (a2.l < a2.length)
          a2._W(1, t2 ? 0 : 32);
        return a2;
      }
      function Mi(e2, r2, t2) {
        var a2 = t2 && t2.biff == 8 || r2 == 2 ? e2._R(2) : (e2.l += r2, 0);
        return { fDialog: a2 & 16, fBelow: a2 & 64, fRight: a2 & 128 };
      }
      function Ui(e2, r2, t2) {
        var a2 = e2._R(4);
        var n2 = e2._R(1) & 3;
        var i2 = e2._R(1);
        switch (i2) {
          case 0:
            i2 = "Worksheet";
            break;
          case 1:
            i2 = "Macrosheet";
            break;
          case 2:
            i2 = "Chartsheet";
            break;
          case 6:
            i2 = "VBAModule";
            break;
        }
        var s2 = qn(e2, 0, t2);
        if (s2.length === 0)
          s2 = "Sheet1";
        return { pos: a2, hs: n2, dt: i2, name: s2 };
      }
      function zi(e2, r2) {
        var t2 = !r2 || r2.biff >= 8 ? 2 : 1;
        var a2 = Jr(8 + t2 * e2.name.length);
        a2._W(4, e2.pos);
        a2._W(1, e2.hs || 0);
        a2._W(1, e2.dt);
        a2._W(1, e2.name.length);
        if (r2.biff >= 8)
          a2._W(1, 1);
        a2._W(t2 * e2.name.length, e2.name, r2.biff < 8 ? "sbcs" : "utf16le");
        var n2 = a2.slice(0, a2.l);
        n2.l = a2.l;
        return n2;
      }
      function Hi(e2, r2) {
        var t2 = e2.l + r2;
        var a2 = e2._R(4);
        var n2 = e2._R(4);
        var i2 = [];
        for (var s2 = 0; s2 != n2 && e2.l < t2; ++s2) {
          i2.push(ei(e2));
        }
        i2.Count = a2;
        i2.Unique = n2;
        return i2;
      }
      function Wi(e2, r2) {
        var t2 = Jr(8);
        t2._W(4, e2.Count);
        t2._W(4, e2.Unique);
        var a2 = [];
        for (var n2 = 0; n2 < e2.length; ++n2)
          a2[n2] = ri(e2[n2], r2);
        var i2 = I([t2].concat(a2));
        i2.parts = [t2.length].concat(a2.map(function(e3) {
          return e3.length;
        }));
        return i2;
      }
      function Vi(e2, r2) {
        var t2 = {};
        t2.dsst = e2._R(2);
        e2.l += r2 - 2;
        return t2;
      }
      function Xi(e2) {
        var r2 = {};
        r2.r = e2._R(2);
        r2.c = e2._R(2);
        r2.cnt = e2._R(2) - r2.c;
        var t2 = e2._R(2);
        e2.l += 4;
        var a2 = e2._R(1);
        e2.l += 3;
        if (a2 & 7)
          r2.level = a2 & 7;
        if (a2 & 32)
          r2.hidden = true;
        if (a2 & 64)
          r2.hpt = t2 / 20;
        return r2;
      }
      function Gi(e2) {
        var r2 = gi(e2);
        if (r2.type != 2211)
          throw new Error("Invalid Future Record " + r2.type);
        var t2 = e2._R(4);
        return t2 !== 0;
      }
      function ji(e2) {
        e2._R(2);
        return e2._R(4);
      }
      function Ki(e2, r2, t2) {
        var a2 = 0;
        if (!(t2 && t2.biff == 2)) {
          a2 = e2._R(2);
        }
        var n2 = e2._R(2);
        if (t2 && t2.biff == 2) {
          a2 = 1 - (n2 >> 15);
          n2 &= 32767;
        }
        var i2 = { Unsynced: a2 & 1, DyZero: (a2 & 2) >> 1, ExAsc: (a2 & 4) >> 2, ExDsc: (a2 & 8) >> 3 };
        return [i2, n2];
      }
      function $i(e2) {
        var r2 = e2._R(2), t2 = e2._R(2), a2 = e2._R(2), n2 = e2._R(2);
        var i2 = e2._R(2), s2 = e2._R(2), f2 = e2._R(2);
        var l2 = e2._R(2), o2 = e2._R(2);
        return { Pos: [r2, t2], Dim: [a2, n2], Flags: i2, CurTab: s2, FirstTab: f2, Selected: l2, TabRatio: o2 };
      }
      function Yi() {
        var e2 = Jr(18);
        e2._W(2, 0);
        e2._W(2, 0);
        e2._W(2, 29280);
        e2._W(2, 17600);
        e2._W(2, 56);
        e2._W(2, 0);
        e2._W(2, 0);
        e2._W(2, 1);
        e2._W(2, 500);
        return e2;
      }
      function Zi(e2, r2, t2) {
        if (t2 && t2.biff >= 2 && t2.biff < 5)
          return {};
        var a2 = e2._R(2);
        return { RTL: a2 & 64 };
      }
      function Ji(e2) {
        var r2 = Jr(18), t2 = 1718;
        if (e2 && e2.RTL)
          t2 |= 64;
        r2._W(2, t2);
        r2._W(4, 0);
        r2._W(4, 64);
        r2._W(4, 0);
        r2._W(4, 0);
        return r2;
      }
      function Qi() {
      }
      function qi(e2, r2, t2) {
        var a2 = { dyHeight: e2._R(2), fl: e2._R(2) };
        switch (t2 && t2.biff || 8) {
          case 2:
            break;
          case 3:
            ;
          case 4:
            e2.l += 2;
            break;
          default:
            e2.l += 10;
            break;
        }
        a2.name = qn(e2, 0, t2);
        return a2;
      }
      function es(e2, r2) {
        var t2 = e2.name || "Arial";
        var a2 = r2 && r2.biff == 5, n2 = a2 ? 15 + t2.length : 16 + 2 * t2.length;
        var i2 = Jr(n2);
        i2._W(2, (e2.sz || 12) * 20);
        i2._W(4, 0);
        i2._W(2, 400);
        i2._W(4, 0);
        i2._W(2, 0);
        i2._W(1, t2.length);
        if (!a2)
          i2._W(1, 1);
        i2._W((a2 ? 1 : 2) * t2.length, t2, a2 ? "sbcs" : "utf16le");
        return i2;
      }
      function rs(e2) {
        var r2 = mi(e2);
        r2.isst = e2._R(4);
        return r2;
      }
      function ts(e2, r2, t2, a2) {
        var n2 = Jr(10);
        bi(e2, r2, a2, n2);
        n2._W(4, t2);
        return n2;
      }
      function as(e2, r2, t2) {
        if (t2.biffguess && t2.biff == 2)
          t2.biff = 5;
        var a2 = e2.l + r2;
        var n2 = mi(e2, 6);
        if (t2.biff == 2)
          e2.l++;
        var i2 = ai(e2, a2 - e2.l, t2);
        n2.val = i2;
        return n2;
      }
      function ns(e2, r2, t2, a2, n2) {
        var i2 = !n2 || n2.biff == 8;
        var s2 = Jr(6 + 2 + +i2 + (1 + i2) * t2.length);
        bi(e2, r2, a2, s2);
        s2._W(2, t2.length);
        if (i2)
          s2._W(1, 1);
        s2._W((1 + i2) * t2.length, t2, i2 ? "utf16le" : "sbcs");
        return s2;
      }
      function is(e2, r2, t2) {
        var a2 = e2._R(2);
        var n2 = ni(e2, 0, t2);
        return [a2, n2];
      }
      function ss(e2, r2, t2, a2) {
        var n2 = t2 && t2.biff == 5;
        if (!a2)
          a2 = Jr(n2 ? 3 + r2.length : 5 + 2 * r2.length);
        a2._W(2, e2);
        a2._W(n2 ? 1 : 2, r2.length);
        if (!n2)
          a2._W(1, 1);
        a2._W((n2 ? 1 : 2) * r2.length, r2, n2 ? "sbcs" : "utf16le");
        var i2 = a2.length > a2.l ? a2.slice(0, a2.l) : a2;
        if (i2.l == null)
          i2.l = i2.length;
        return i2;
      }
      var fs = ni;
      function ls(e2, r2, t2) {
        var a2 = e2.l + r2;
        var n2 = t2.biff == 8 || !t2.biff ? 4 : 2;
        var i2 = e2._R(n2), s2 = e2._R(n2);
        var f2 = e2._R(2), l2 = e2._R(2);
        e2.l = a2;
        return { s: { r: i2, c: f2 }, e: { r: s2, c: l2 } };
      }
      function os(e2, r2) {
        var t2 = r2.biff == 8 || !r2.biff ? 4 : 2;
        var a2 = Jr(2 * t2 + 6);
        a2._W(t2, e2.s.r);
        a2._W(t2, e2.e.r + 1);
        a2._W(2, e2.s.c);
        a2._W(2, e2.e.c + 1);
        a2._W(2, 0);
        return a2;
      }
      function cs(e2) {
        var r2 = e2._R(2), t2 = e2._R(2);
        var a2 = Ei(e2);
        return { r: r2, c: t2, ixfe: a2[0], rknum: a2[1] };
      }
      function us(e2, r2) {
        var t2 = e2.l + r2 - 2;
        var a2 = e2._R(2), n2 = e2._R(2);
        var i2 = [];
        while (e2.l < t2)
          i2.push(Ei(e2));
        if (e2.l !== t2)
          throw new Error("MulRK read error");
        var s2 = e2._R(2);
        if (i2.length != s2 - n2 + 1)
          throw new Error("MulRK length mismatch");
        return { r: a2, c: n2, C: s2, rkrec: i2 };
      }
      function hs(e2, r2) {
        var t2 = e2.l + r2 - 2;
        var a2 = e2._R(2), n2 = e2._R(2);
        var i2 = [];
        while (e2.l < t2)
          i2.push(e2._R(2));
        if (e2.l !== t2)
          throw new Error("MulBlank read error");
        var s2 = e2._R(2);
        if (i2.length != s2 - n2 + 1)
          throw new Error("MulBlank length mismatch");
        return { r: a2, c: n2, C: s2, ixfe: i2 };
      }
      function ds(e2, r2, t2, a2) {
        var n2 = {};
        var i2 = e2._R(4), s2 = e2._R(4);
        var f2 = e2._R(4), l2 = e2._R(2);
        n2.patternType = Ba[f2 >> 26];
        if (!a2.cellStyles)
          return n2;
        n2.alc = i2 & 7;
        n2.fWrap = i2 >> 3 & 1;
        n2.alcV = i2 >> 4 & 7;
        n2.fJustLast = i2 >> 7 & 1;
        n2.trot = i2 >> 8 & 255;
        n2.cIndent = i2 >> 16 & 15;
        n2.fShrinkToFit = i2 >> 20 & 1;
        n2.iReadOrder = i2 >> 22 & 2;
        n2.fAtrNum = i2 >> 26 & 1;
        n2.fAtrFnt = i2 >> 27 & 1;
        n2.fAtrAlc = i2 >> 28 & 1;
        n2.fAtrBdr = i2 >> 29 & 1;
        n2.fAtrPat = i2 >> 30 & 1;
        n2.fAtrProt = i2 >> 31 & 1;
        n2.dgLeft = s2 & 15;
        n2.dgRight = s2 >> 4 & 15;
        n2.dgTop = s2 >> 8 & 15;
        n2.dgBottom = s2 >> 12 & 15;
        n2.icvLeft = s2 >> 16 & 127;
        n2.icvRight = s2 >> 23 & 127;
        n2.grbitDiag = s2 >> 30 & 3;
        n2.icvTop = f2 & 127;
        n2.icvBottom = f2 >> 7 & 127;
        n2.icvDiag = f2 >> 14 & 127;
        n2.dgDiag = f2 >> 21 & 15;
        n2.icvFore = l2 & 127;
        n2.icvBack = l2 >> 7 & 127;
        n2.fsxButton = l2 >> 14 & 1;
        return n2;
      }
      function vs(e2, r2, t2) {
        var a2 = {};
        a2.ifnt = e2._R(2);
        a2.numFmtId = e2._R(2);
        a2.flags = e2._R(2);
        a2.fStyle = a2.flags >> 2 & 1;
        r2 -= 6;
        a2.data = ds(e2, r2, a2.fStyle, t2);
        return a2;
      }
      function ps(e2, r2, t2, a2) {
        var n2 = t2 && t2.biff == 5;
        if (!a2)
          a2 = Jr(n2 ? 16 : 20);
        a2._W(2, 0);
        if (e2.style) {
          a2._W(2, e2.numFmtId || 0);
          a2._W(2, 65524);
        } else {
          a2._W(2, e2.numFmtId || 0);
          a2._W(2, r2 << 4);
        }
        var i2 = 0;
        if (e2.numFmtId > 0 && n2)
          i2 |= 1024;
        a2._W(4, i2);
        a2._W(4, 0);
        if (!n2)
          a2._W(4, 0);
        a2._W(2, 0);
        return a2;
      }
      function ms(e2) {
        e2.l += 4;
        var r2 = [e2._R(2), e2._R(2)];
        if (r2[0] !== 0)
          r2[0]--;
        if (r2[1] !== 0)
          r2[1]--;
        if (r2[0] > 7 || r2[1] > 7)
          throw new Error("Bad Gutters: " + r2.join("|"));
        return r2;
      }
      function bs(e2) {
        var r2 = Jr(8);
        r2._W(4, 0);
        r2._W(2, e2[0] ? e2[0] + 1 : 0);
        r2._W(2, e2[1] ? e2[1] + 1 : 0);
        return r2;
      }
      function gs(e2, r2, t2) {
        var a2 = mi(e2, 6);
        if (t2.biff == 2 || r2 == 9)
          ++e2.l;
        var n2 = Jn(e2, 2);
        a2.val = n2;
        a2.t = n2 === true || n2 === false ? "b" : "e";
        return a2;
      }
      function ws(e2, r2, t2, a2, n2, i2) {
        var s2 = Jr(8);
        bi(e2, r2, a2, s2);
        Qn(t2, i2, s2);
        return s2;
      }
      function ks(e2, r2, t2) {
        if (t2.biffguess && t2.biff == 2)
          t2.biff = 5;
        var a2 = mi(e2, 6);
        var n2 = Qt(e2, 8);
        a2.val = n2;
        return a2;
      }
      function Es(e2, r2, t2, a2) {
        var n2 = Jr(14);
        bi(e2, r2, a2, n2);
        qt(t2, n2);
        return n2;
      }
      var Ss = wi;
      function _s(e2, r2, t2) {
        var a2 = e2.l + r2;
        var n2 = e2._R(2);
        var i2 = e2._R(2);
        t2.sbcch = i2;
        if (i2 == 1025 || i2 == 14849)
          return [i2, n2];
        if (i2 < 1 || i2 > 255)
          throw new Error("Unexpected SupBook type: " + i2);
        var s2 = ti(e2, i2);
        var f2 = [];
        while (a2 > e2.l)
          f2.push(ai(e2));
        return [i2, n2, s2, f2];
      }
      function Cs(e2, r2, t2) {
        var a2 = e2._R(2);
        var n2;
        var i2 = { fBuiltIn: a2 & 1, fWantAdvise: a2 >>> 1 & 1, fWantPict: a2 >>> 2 & 1, fOle: a2 >>> 3 & 1, fOleLink: a2 >>> 4 & 1, cf: a2 >>> 5 & 1023, fIcon: a2 >>> 15 & 1 };
        if (t2.sbcch === 14849)
          n2 = Si(e2, r2 - 2, t2);
        i2.body = n2 || e2._R(r2 - 2);
        if (typeof n2 === "string")
          i2.Name = n2;
        return i2;
      }
      var Bs = ["_xlnm.Consolidate_Area", "_xlnm.Auto_Open", "_xlnm.Auto_Close", "_xlnm.Extract", "_xlnm.Database", "_xlnm.Criteria", "_xlnm.Print_Area", "_xlnm.Print_Titles", "_xlnm.Recorder", "_xlnm.Data_Form", "_xlnm.Auto_Activate", "_xlnm.Auto_Deactivate", "_xlnm.Sheet_Title", "_xlnm._FilterDatabase"];
      function Ts(e2, r2, t2) {
        var a2 = e2.l + r2;
        var n2 = e2._R(2);
        var i2 = e2._R(1);
        var s2 = e2._R(1);
        var f2 = e2._R(t2 && t2.biff == 2 ? 1 : 2);
        var l2 = 0;
        if (!t2 || t2.biff >= 5) {
          if (t2.biff != 5)
            e2.l += 2;
          l2 = e2._R(2);
          if (t2.biff == 5)
            e2.l += 2;
          e2.l += 4;
        }
        var o2 = ti(e2, s2, t2);
        if (n2 & 32)
          o2 = Bs[o2.charCodeAt(0)];
        var c2 = a2 - e2.l;
        if (t2 && t2.biff == 2)
          --c2;
        var u2 = a2 == e2.l || f2 === 0 || !(c2 > 0) ? [] : Gu(e2, c2, t2, f2);
        return { chKey: i2, Name: o2, itab: l2, rgce: u2 };
      }
      function ys(e2, r2, t2) {
        if (t2.biff < 8)
          return xs(e2, r2, t2);
        var a2 = [], n2 = e2.l + r2, i2 = e2._R(t2.biff > 8 ? 4 : 2);
        while (i2-- !== 0)
          a2.push(ki(e2, t2.biff > 8 ? 12 : 6, t2));
        if (e2.l != n2)
          throw new Error("Bad ExternSheet: " + e2.l + " != " + n2);
        return a2;
      }
      function xs(e2, r2, t2) {
        if (e2[e2.l + 1] == 3)
          e2[e2.l]++;
        var a2 = qn(e2, r2, t2);
        return a2.charCodeAt(0) == 3 ? a2.slice(1) : a2;
      }
      function As(e2, r2, t2) {
        if (t2.biff < 8) {
          e2.l += r2;
          return;
        }
        var a2 = e2._R(2);
        var n2 = e2._R(2);
        var i2 = ti(e2, a2, t2);
        var s2 = ti(e2, n2, t2);
        return [i2, s2];
      }
      function Is(e2, r2, t2) {
        var a2 = Bi(e2, 6);
        e2.l++;
        var n2 = e2._R(1);
        r2 -= 8;
        return [ju(e2, r2, t2), n2, a2];
      }
      function Rs(e2, r2, t2) {
        var a2 = Ti(e2, 6);
        switch (t2.biff) {
          case 2:
            e2.l++;
            r2 -= 7;
            break;
          case 3:
            ;
          case 4:
            e2.l += 2;
            r2 -= 8;
            break;
          default:
            e2.l += 6;
            r2 -= 12;
        }
        return [a2, Vu(e2, r2, t2, a2)];
      }
      function Fs(e2) {
        var r2 = e2._R(4) !== 0;
        var t2 = e2._R(4) !== 0;
        var a2 = e2._R(4);
        return [r2, t2, a2];
      }
      function Os(e2, r2, t2) {
        if (t2.biff < 8)
          return;
        var a2 = e2._R(2), n2 = e2._R(2);
        var i2 = e2._R(2), s2 = e2._R(2);
        var f2 = ni(e2, 0, t2);
        if (t2.biff < 8)
          e2._R(1);
        return [{ r: a2, c: n2 }, f2, s2, i2];
      }
      function Ds(e2, r2, t2) {
        return Os(e2, r2, t2);
      }
      function Ps(e2, r2) {
        var t2 = [];
        var a2 = e2._R(2);
        while (a2--)
          t2.push(_i(e2, r2));
        return t2;
      }
      function Ns(e2) {
        var r2 = Jr(2 + e2.length * 8);
        r2._W(2, e2.length);
        for (var t2 = 0; t2 < e2.length; ++t2)
          Ci(e2[t2], r2);
        return r2;
      }
      function Ls(e2, r2, t2) {
        if (t2 && t2.biff < 8)
          return Us(e2, r2, t2);
        var a2 = yi(e2, 22);
        var n2 = Fi(e2, r2 - 22, a2[1]);
        return { cmo: a2, ft: n2 };
      }
      var Ms = [];
      Ms[8] = function(e2, r2) {
        var t2 = e2.l + r2;
        e2.l += 10;
        var a2 = e2._R(2);
        e2.l += 4;
        e2.l += 2;
        e2.l += 2;
        e2.l += 2;
        e2.l += 4;
        var n2 = e2._R(1);
        e2.l += n2;
        e2.l = t2;
        return { fmt: a2 };
      };
      function Us(e2, r2, t2) {
        e2.l += 4;
        var a2 = e2._R(2);
        var n2 = e2._R(2);
        var i2 = e2._R(2);
        e2.l += 2;
        e2.l += 2;
        e2.l += 2;
        e2.l += 2;
        e2.l += 2;
        e2.l += 2;
        e2.l += 2;
        e2.l += 2;
        e2.l += 2;
        e2.l += 6;
        r2 -= 36;
        var s2 = [];
        s2.push((Ms[a2] || Zr)(e2, r2, t2));
        return { cmo: [n2, a2, i2], ft: s2 };
      }
      function zs(e2, r2, t2) {
        var a2 = e2.l;
        var n2 = "";
        try {
          e2.l += 4;
          var i2 = (t2.lastobj || { cmo: [0, 0] }).cmo[1];
          var s2;
          if ([0, 5, 7, 11, 12, 14].indexOf(i2) == -1)
            e2.l += 6;
          else
            s2 = si(e2, 6, t2);
          var f2 = e2._R(2);
          e2._R(2);
          $n(e2, 2);
          var l2 = e2._R(2);
          e2.l += l2;
          for (var o2 = 1; o2 < e2.lens.length - 1; ++o2) {
            if (e2.l - a2 != e2.lens[o2])
              throw new Error("TxO: bad continue record");
            var c2 = e2[e2.l];
            var u2 = ti(e2, e2.lens[o2 + 1] - e2.lens[o2] - 1);
            n2 += u2;
            if (n2.length >= (c2 ? f2 : 2 * f2))
              break;
          }
          if (n2.length !== f2 && n2.length !== f2 * 2) {
            throw new Error("cchText: " + f2 + " != " + n2.length);
          }
          e2.l = a2 + r2;
          return { t: n2 };
        } catch (h2) {
          e2.l = a2 + r2;
          return { t: n2 };
        }
      }
      function Hs(e2, r2) {
        var t2 = _i(e2, 8);
        e2.l += 16;
        var a2 = hi(e2, r2 - 24);
        return [t2, a2];
      }
      function Ws(e2) {
        var r2 = Jr(24);
        var t2 = mt(e2[0]);
        r2._W(2, t2.r);
        r2._W(2, t2.r);
        r2._W(2, t2.c);
        r2._W(2, t2.c);
        var a2 = "d0 c9 ea 79 f9 ba ce 11 8c 82 00 aa 00 4b a9 0b".split(" ");
        for (var n2 = 0; n2 < 16; ++n2)
          r2._W(1, parseInt(a2[n2], 16));
        return I([r2, di(e2[1])]);
      }
      function Vs(e2, r2) {
        e2._R(2);
        var t2 = _i(e2, 8);
        var a2 = e2._R((r2 - 10) / 2, "dbcs-cont");
        a2 = a2.replace(R, "");
        return [t2, a2];
      }
      function Xs(e2) {
        var r2 = e2[1].Tooltip;
        var t2 = Jr(10 + 2 * (r2.length + 1));
        t2._W(2, 2048);
        var a2 = mt(e2[0]);
        t2._W(2, a2.r);
        t2._W(2, a2.r);
        t2._W(2, a2.c);
        t2._W(2, a2.c);
        for (var n2 = 0; n2 < r2.length; ++n2)
          t2._W(2, r2.charCodeAt(n2));
        t2._W(2, 0);
        return t2;
      }
      function Gs(e2) {
        var r2 = [0, 0], t2;
        t2 = e2._R(2);
        r2[0] = Ca[t2] || t2;
        t2 = e2._R(2);
        r2[1] = Ca[t2] || t2;
        return r2;
      }
      function js(e2) {
        if (!e2)
          e2 = Jr(4);
        e2._W(2, 1);
        e2._W(2, 1);
        return e2;
      }
      function Ks(e2) {
        var r2 = e2._R(2);
        var t2 = [];
        while (r2-- > 0)
          t2.push(pi(e2, 8));
        return t2;
      }
      function $s(e2) {
        var r2 = e2._R(2);
        var t2 = [];
        while (r2-- > 0)
          t2.push(pi(e2, 8));
        return t2;
      }
      function Ys(e2) {
        e2.l += 2;
        var r2 = { cxfs: 0, crc: 0 };
        r2.cxfs = e2._R(2);
        r2.crc = e2._R(4);
        return r2;
      }
      function Zs(e2, r2, t2) {
        if (!t2.cellStyles)
          return Zr(e2, r2);
        var a2 = t2 && t2.biff >= 12 ? 4 : 2;
        var n2 = e2._R(a2);
        var i2 = e2._R(a2);
        var s2 = e2._R(a2);
        var f2 = e2._R(a2);
        var l2 = e2._R(2);
        if (a2 == 2)
          e2.l += 2;
        var o2 = { s: n2, e: i2, w: s2, ixfe: f2, flags: l2 };
        if (t2.biff >= 5 || !t2.biff)
          o2.level = l2 >> 8 & 7;
        return o2;
      }
      function Js(e2, r2) {
        var t2 = Jr(12);
        t2._W(2, r2);
        t2._W(2, r2);
        t2._W(2, e2.width * 256);
        t2._W(2, 0);
        var a2 = 0;
        if (e2.hidden)
          a2 |= 1;
        t2._W(1, a2);
        a2 = e2.level || 0;
        t2._W(1, a2);
        t2._W(2, 0);
        return t2;
      }
      function Qs(e2, r2) {
        var t2 = {};
        if (r2 < 32)
          return t2;
        e2.l += 16;
        t2.header = Qt(e2, 8);
        t2.footer = Qt(e2, 8);
        e2.l += 2;
        return t2;
      }
      function qs(e2, r2, t2) {
        var a2 = { area: false };
        if (t2.biff != 5) {
          e2.l += r2;
          return a2;
        }
        var n2 = e2._R(1);
        e2.l += 3;
        if (n2 & 16)
          a2.area = true;
        return a2;
      }
      function ef(e2) {
        var r2 = Jr(2 * e2);
        for (var t2 = 0; t2 < e2; ++t2)
          r2._W(2, t2 + 1);
        return r2;
      }
      var rf = mi;
      var tf = Zn;
      var af = ai;
      function nf(e2) {
        var r2 = e2._R(2);
        var t2 = e2._R(2);
        var a2 = e2._R(4);
        var n2 = { fmt: r2, env: t2, len: a2, data: e2.slice(e2.l, e2.l + a2) };
        e2.l += a2;
        return n2;
      }
      function sf(e2, r2, t2) {
        if (t2.biffguess && t2.biff == 5)
          t2.biff = 2;
        var a2 = mi(e2, 6);
        ++e2.l;
        var n2 = ni(e2, r2 - 7, t2);
        a2.t = "str";
        a2.val = n2;
        return a2;
      }
      function ff(e2) {
        var r2 = mi(e2, 6);
        ++e2.l;
        var t2 = Qt(e2, 8);
        r2.t = "n";
        r2.val = t2;
        return r2;
      }
      function lf(e2, r2, t2) {
        var a2 = Jr(15);
        nm(a2, e2, r2);
        a2._W(8, t2, "f");
        return a2;
      }
      function of(e2) {
        var r2 = mi(e2, 6);
        ++e2.l;
        var t2 = e2._R(2);
        r2.t = "n";
        r2.val = t2;
        return r2;
      }
      function cf(e2, r2, t2) {
        var a2 = Jr(9);
        nm(a2, e2, r2);
        a2._W(2, t2);
        return a2;
      }
      function uf(e2) {
        var r2 = e2._R(1);
        if (r2 === 0) {
          e2.l++;
          return "";
        }
        return e2._R(r2, "sbcs-cont");
      }
      function hf(e2, r2) {
        e2.l += 6;
        e2.l += 2;
        e2.l += 1;
        e2.l += 3;
        e2.l += 1;
        e2.l += r2 - 13;
      }
      function df(e2, r2, t2) {
        var a2 = e2.l + r2;
        var n2 = mi(e2, 6);
        var i2 = e2._R(2);
        var s2 = ti(e2, i2, t2);
        e2.l = a2;
        n2.t = "str";
        n2.val = s2;
        return n2;
      }
      var vf = function() {
        var e2 = { 1: 437, 2: 850, 3: 1252, 4: 1e4, 100: 852, 101: 866, 102: 865, 103: 861, 104: 895, 105: 620, 106: 737, 107: 857, 120: 950, 121: 949, 122: 936, 123: 932, 124: 874, 125: 1255, 126: 1256, 150: 10007, 151: 10029, 152: 10006, 200: 1250, 201: 1251, 202: 1254, 203: 1253, 0: 20127, 8: 865, 9: 437, 10: 850, 11: 437, 13: 437, 14: 850, 15: 437, 16: 850, 17: 437, 18: 850, 19: 932, 20: 850, 21: 437, 22: 850, 23: 865, 24: 437, 25: 437, 26: 850, 27: 437, 28: 863, 29: 850, 31: 852, 34: 852, 35: 852, 36: 860, 37: 850, 38: 866, 55: 850, 64: 852, 77: 936, 78: 949, 79: 950, 80: 874, 87: 1252, 88: 1252, 89: 1252, 108: 863, 134: 737, 135: 852, 136: 857, 204: 1257, 255: 16969 };
        var r2 = Z({ 1: 437, 2: 850, 3: 1252, 4: 1e4, 100: 852, 101: 866, 102: 865, 103: 861, 104: 895, 105: 620, 106: 737, 107: 857, 120: 950, 121: 949, 122: 936, 123: 932, 124: 874, 125: 1255, 126: 1256, 150: 10007, 151: 10029, 152: 10006, 200: 1250, 201: 1251, 202: 1254, 203: 1253, 0: 20127 });
        var a2 = [2, 3, 48, 49, 131, 139, 140, 245];
        function n2(r3, t2) {
          var a3 = [];
          var n3 = _(1);
          switch (t2.type) {
            case "base64":
              n3 = B(g.decode(r3));
              break;
            case "binary":
              n3 = B(r3);
              break;
            case "buffer":
              ;
            case "array":
              n3 = r3;
              break;
          }
          Yr(n3, 0);
          var i3 = n3._R(1);
          var s3 = !!(i3 & 136);
          var f3 = false, l2 = false;
          switch (i3) {
            case 2:
              break;
            case 3:
              break;
            case 48:
              f3 = true;
              s3 = true;
              break;
            case 49:
              f3 = true;
              s3 = true;
              break;
            case 131:
              break;
            case 139:
              break;
            case 140:
              l2 = true;
              break;
            case 245:
              break;
            default:
              throw new Error("DBF Unsupported Version: " + i3.toString(16));
          }
          var o3 = 0, c2 = 521;
          if (i3 == 2)
            o3 = n3._R(2);
          n3.l += 3;
          if (i3 != 2)
            o3 = n3._R(4);
          if (o3 > 1048576)
            o3 = 1e6;
          if (i3 != 2)
            c2 = n3._R(2);
          var u2 = n3._R(2);
          var h2 = t2.codepage || 1252;
          if (i3 != 2) {
            n3.l += 16;
            n3._R(1);
            if (n3[n3.l] !== 0)
              h2 = e2[n3[n3.l]];
            n3.l += 1;
            n3.l += 2;
          }
          if (l2)
            n3.l += 36;
          var d2 = [], v2 = {};
          var p2 = Math.min(n3.length, i3 == 2 ? 521 : c2 - 10 - (f3 ? 264 : 0));
          var m2 = l2 ? 32 : 11;
          while (n3.l < p2 && n3[n3.l] != 13) {
            v2 = {};
            v2.name = cptable.utils.decode(h2, n3.slice(n3.l, n3.l + m2)).replace(/[\u0000\r\n].*$/g, "");
            n3.l += m2;
            v2.type = String.fromCharCode(n3._R(1));
            if (i3 != 2 && !l2)
              v2.offset = n3._R(4);
            v2.len = n3._R(1);
            if (i3 == 2)
              v2.offset = n3._R(2);
            v2.dec = n3._R(1);
            if (v2.name.length)
              d2.push(v2);
            if (i3 != 2)
              n3.l += l2 ? 13 : 14;
            switch (v2.type) {
              case "B":
                if ((!f3 || v2.len != 8) && t2.WTF)
                  console.log("Skipping " + v2.name + ":" + v2.type);
                break;
              case "G":
                ;
              case "P":
                if (t2.WTF)
                  console.log("Skipping " + v2.name + ":" + v2.type);
                break;
              case "+":
                ;
              case "0":
                ;
              case "@":
                ;
              case "C":
                ;
              case "D":
                ;
              case "F":
                ;
              case "I":
                ;
              case "L":
                ;
              case "M":
                ;
              case "N":
                ;
              case "O":
                ;
              case "T":
                ;
              case "Y":
                break;
              default:
                throw new Error("Unknown Field Type: " + v2.type);
            }
          }
          if (n3[n3.l] !== 13)
            n3.l = c2 - 1;
          if (n3._R(1) !== 13)
            throw new Error("DBF Terminator not found " + n3.l + " " + n3[n3.l]);
          n3.l = c2;
          var b2 = 0, w2 = 0;
          a3[0] = [];
          for (w2 = 0; w2 != d2.length; ++w2)
            a3[0][w2] = d2[w2].name;
          while (o3-- > 0) {
            if (n3[n3.l] === 42) {
              n3.l += u2;
              continue;
            }
            ++n3.l;
            a3[++b2] = [];
            w2 = 0;
            for (w2 = 0; w2 != d2.length; ++w2) {
              var k2 = n3.slice(n3.l, n3.l + d2[w2].len);
              n3.l += d2[w2].len;
              Yr(k2, 0);
              var E2 = cptable.utils.decode(h2, k2);
              switch (d2[w2].type) {
                case "C":
                  if (E2.trim().length)
                    a3[b2][w2] = E2.replace(/\s+$/, "");
                  break;
                case "D":
                  if (E2.length === 8)
                    a3[b2][w2] = new Date(+E2.slice(0, 4), +E2.slice(4, 6) - 1, +E2.slice(6, 8));
                  else
                    a3[b2][w2] = E2;
                  break;
                case "F":
                  a3[b2][w2] = parseFloat(E2.trim());
                  break;
                case "+":
                  ;
                case "I":
                  a3[b2][w2] = l2 ? k2._R(-4, "i") ^ 2147483648 : k2._R(4, "i");
                  break;
                case "L":
                  switch (E2.trim().toUpperCase()) {
                    case "Y":
                      ;
                    case "T":
                      a3[b2][w2] = true;
                      break;
                    case "N":
                      ;
                    case "F":
                      a3[b2][w2] = false;
                      break;
                    case "":
                      ;
                    case "?":
                      break;
                    default:
                      throw new Error("DBF Unrecognized L:|" + E2 + "|");
                  }
                  break;
                case "M":
                  if (!s3)
                    throw new Error("DBF Unexpected MEMO for type " + i3.toString(16));
                  a3[b2][w2] = "##MEMO##" + (l2 ? parseInt(E2.trim(), 10) : k2._R(4));
                  break;
                case "N":
                  E2 = E2.replace(/\u0000/g, "").trim();
                  if (E2 && E2 != ".")
                    a3[b2][w2] = +E2 || 0;
                  break;
                case "@":
                  a3[b2][w2] = new Date(k2._R(-8, "f") - 621356832e5);
                  break;
                case "T":
                  a3[b2][w2] = new Date((k2._R(4) - 2440588) * 864e5 + k2._R(4));
                  break;
                case "Y":
                  a3[b2][w2] = k2._R(4, "i") / 1e4;
                  break;
                case "O":
                  a3[b2][w2] = -k2._R(-8, "f");
                  break;
                case "B":
                  if (f3 && d2[w2].len == 8) {
                    a3[b2][w2] = k2._R(8, "f");
                    break;
                  }
                  ;
                case "G":
                  ;
                case "P":
                  k2.l += d2[w2].len;
                  break;
                case "0":
                  if (d2[w2].name === "_NullFlags")
                    break;
                default:
                  throw new Error("DBF Unsupported data type " + d2[w2].type);
              }
            }
          }
          if (i3 != 2) {
            if (n3.l < n3.length && n3[n3.l++] != 26)
              throw new Error("DBF EOF Marker missing " + (n3.l - 1) + " of " + n3.length + " " + n3[n3.l - 1].toString(16));
          }
          if (t2 && t2.sheetRows)
            a3 = a3.slice(0, t2.sheetRows);
          return a3;
        }
        function i2(e3, r3) {
          var t2 = r3 || {};
          if (!t2.dateNF)
            t2.dateNF = "yyyymmdd";
          return Bt(n2(e3, t2), t2);
        }
        function s2(e3, r3) {
          try {
            return _t(i2(e3, r3), r3);
          } catch (t2) {
            if (r3 && r3.WTF)
              throw t2;
          }
          return { SheetNames: [], Sheets: {} };
        }
        var f2 = { B: 8, C: 250, L: 1, D: 8, "?": 0, "": 0 };
        function o2(e3, a3) {
          var n3 = a3 || {};
          if (+n3.codepage >= 0)
            l(+n3.codepage);
          if (n3.type == "string")
            throw new Error("Cannot write DBF to JS string");
          var i3 = qr();
          var s3 = Sb(e3, { header: 1, raw: true, cellDates: true });
          var o3 = s3[0], c2 = s3.slice(1);
          var u2 = 0, h2 = 0, d2 = 0, v2 = 1;
          for (u2 = 0; u2 < o3.length; ++u2) {
            if (u2 == null)
              continue;
            ++d2;
            if (typeof o3[u2] === "number")
              o3[u2] = o3[u2].toString(10);
            if (typeof o3[u2] !== "string")
              throw new Error("DBF Invalid column name " + o3[u2] + " |" + typeof o3[u2] + "|");
            if (o3.indexOf(o3[u2]) !== u2) {
              for (h2 = 0; h2 < 1024; ++h2)
                if (o3.indexOf(o3[u2] + "_" + h2) == -1) {
                  o3[u2] += "_" + h2;
                  break;
                }
            }
          }
          var p2 = kt(e3["!ref"]);
          var m2 = [];
          for (u2 = 0; u2 <= p2.e.c - p2.s.c; ++u2) {
            var b2 = [];
            for (h2 = 0; h2 < c2.length; ++h2) {
              if (c2[h2][u2] != null)
                b2.push(c2[h2][u2]);
            }
            if (b2.length == 0 || o3[u2] == null) {
              m2[u2] = "?";
              continue;
            }
            var g2 = "", w2 = "";
            for (h2 = 0; h2 < b2.length; ++h2) {
              switch (typeof b2[h2]) {
                case "number":
                  w2 = "B";
                  break;
                case "string":
                  w2 = "C";
                  break;
                case "boolean":
                  w2 = "L";
                  break;
                case "object":
                  w2 = b2[h2] instanceof Date ? "D" : "C";
                  break;
                default:
                  w2 = "C";
              }
              g2 = g2 && g2 != w2 ? "C" : w2;
              if (g2 == "C")
                break;
            }
            v2 += f2[g2] || 0;
            m2[u2] = g2;
          }
          var k2 = i3.next(32);
          k2._W(4, 318902576);
          k2._W(4, c2.length);
          k2._W(2, 296 + 32 * d2);
          k2._W(2, v2);
          for (u2 = 0; u2 < 4; ++u2)
            k2._W(4, 0);
          k2._W(4, 0 | (+r2[t] || 3) << 8);
          for (u2 = 0, h2 = 0; u2 < o3.length; ++u2) {
            if (o3[u2] == null)
              continue;
            var E2 = i3.next(32);
            var S = (o3[u2].slice(-10) + "\0\0\0\0\0\0\0\0\0\0\0").slice(0, 11);
            E2._W(1, S, "sbcs");
            E2._W(1, m2[u2] == "?" ? "C" : m2[u2], "sbcs");
            E2._W(4, h2);
            E2._W(1, f2[m2[u2]] || 0);
            E2._W(1, 0);
            E2._W(1, 2);
            E2._W(4, 0);
            E2._W(1, 0);
            E2._W(4, 0);
            E2._W(4, 0);
            h2 += f2[m2[u2]] || 0;
          }
          var _2 = i3.next(264);
          _2._W(4, 13);
          for (u2 = 0; u2 < 65; ++u2)
            _2._W(4, 0);
          for (u2 = 0; u2 < c2.length; ++u2) {
            var C2 = i3.next(v2);
            C2._W(1, 0);
            for (h2 = 0; h2 < o3.length; ++h2) {
              if (o3[h2] == null)
                continue;
              switch (m2[h2]) {
                case "L":
                  C2._W(1, c2[u2][h2] == null ? 63 : c2[u2][h2] ? 84 : 70);
                  break;
                case "B":
                  C2._W(8, c2[u2][h2] || 0, "f");
                  break;
                case "D":
                  if (!c2[u2][h2])
                    C2._W(8, "00000000", "sbcs");
                  else {
                    C2._W(4, ("0000" + c2[u2][h2].getFullYear()).slice(-4), "sbcs");
                    C2._W(2, ("00" + (c2[u2][h2].getMonth() + 1)).slice(-2), "sbcs");
                    C2._W(2, ("00" + c2[u2][h2].getDate()).slice(-2), "sbcs");
                  }
                  break;
                case "C":
                  var B2 = String(c2[u2][h2] || "");
                  C2._W(1, B2, "sbcs");
                  for (d2 = 0; d2 < 250 - B2.length; ++d2)
                    C2._W(1, 32);
                  break;
              }
            }
          }
          i3.next(1)._W(1, 26);
          return i3.end();
        }
        return { versions: a2, to_workbook: s2, to_sheet: i2, from_sheet: o2 };
      }();
      var pf = function() {
        var e2 = {
          AA: "\xC0",
          BA: "\xC1",
          CA: "\xC2",
          DA: 195,
          HA: "\xC4",
          JA: 197,
          AE: "\xC8",
          BE: "\xC9",
          CE: "\xCA",
          HE: "\xCB",
          AI: "\xCC",
          BI: "\xCD",
          CI: "\xCE",
          HI: "\xCF",
          AO: "\xD2",
          BO: "\xD3",
          CO: "\xD4",
          DO: 213,
          HO: "\xD6",
          AU: "\xD9",
          BU: "\xDA",
          CU: "\xDB",
          HU: "\xDC",
          Aa: "\xE0",
          Ba: "\xE1",
          Ca: "\xE2",
          Da: 227,
          Ha: "\xE4",
          Ja: 229,
          Ae: "\xE8",
          Be: "\xE9",
          Ce: "\xEA",
          He: "\xEB",
          Ai: "\xEC",
          Bi: "\xED",
          Ci: "\xEE",
          Hi: "\xEF",
          Ao: "\xF2",
          Bo: "\xF3",
          Co: "\xF4",
          Do: 245,
          Ho: "\xF6",
          Au: "\xF9",
          Bu: "\xFA",
          Cu: "\xFB",
          Hu: "\xFC",
          KC: "\xC7",
          Kc: "\xE7",
          q: "\xE6",
          z: "\u0153",
          a: "\xC6",
          j: "\u0152",
          DN: 209,
          Dn: 241,
          Hy: 255,
          S: 169,
          c: 170,
          R: 174,
          "B ": 180,
          0: 176,
          1: 177,
          2: 178,
          3: 179,
          5: 181,
          6: 182,
          7: 183,
          Q: 185,
          k: 186,
          b: 208,
          i: 216,
          l: 222,
          s: 240,
          y: 248,
          "!": 161,
          '"': 162,
          "#": 163,
          "(": 164,
          "%": 165,
          "'": 167,
          "H ": 168,
          "+": 171,
          ";": 187,
          "<": 188,
          "=": 189,
          ">": 190,
          "?": 191,
          "{": 223
        };
        var r2 = new RegExp("N(" + K(e2).join("|").replace(/\|\|\|/, "|\\||").replace(/([?()+])/g, "\\$1") + "|\\|)", "gm");
        var t2 = function(r3, t3) {
          var a3 = e2[t3];
          return typeof a3 == "number" ? p(a3) : a3;
        };
        var a2 = function(e3, r3, t3) {
          var a3 = r3.charCodeAt(0) - 32 << 4 | t3.charCodeAt(0) - 48;
          return a3 == 59 ? e3 : p(a3);
        };
        e2["|"] = 254;
        function n2(e3, r3) {
          switch (r3.type) {
            case "base64":
              return i2(g.decode(e3), r3);
            case "binary":
              return i2(e3, r3);
            case "buffer":
              return i2(w && Buffer.isBuffer(e3) ? e3.toString("binary") : y(e3), r3);
            case "array":
              return i2(oe(e3), r3);
          }
          throw new Error("Unrecognized type " + r3.type);
        }
        function i2(e3, n3) {
          var i3 = e3.split(/[\n\r]+/), s3 = -1, f3 = -1, o3 = 0, c3 = 0, u3 = [];
          var h3 = [];
          var d2 = null;
          var v2 = {}, p2 = [], m2 = [], b2 = [];
          var g2 = 0, w2;
          if (+n3.codepage >= 0)
            l(+n3.codepage);
          for (; o3 !== i3.length; ++o3) {
            g2 = 0;
            var k2 = i3[o3].trim().replace(/\x1B([\x20-\x2F])([\x30-\x3F])/g, a2).replace(r2, t2);
            var E2 = k2.replace(/;;/g, "\0").split(";").map(function(e4) {
              return e4.replace(/\u0000/g, ";");
            });
            var S = E2[0], _2;
            if (k2.length > 0)
              switch (S) {
                case "ID":
                  break;
                case "E":
                  break;
                case "B":
                  break;
                case "O":
                  break;
                case "W":
                  break;
                case "P":
                  if (E2[1].charAt(0) == "P")
                    h3.push(k2.slice(3).replace(/;;/g, ";"));
                  break;
                case "C":
                  var C2 = false, B2 = false, T2 = false, y2 = false, x2 = -1, A2 = -1;
                  for (c3 = 1; c3 < E2.length; ++c3)
                    switch (E2[c3].charAt(0)) {
                      case "A":
                        break;
                      case "X":
                        f3 = parseInt(E2[c3].slice(1)) - 1;
                        B2 = true;
                        break;
                      case "Y":
                        s3 = parseInt(E2[c3].slice(1)) - 1;
                        if (!B2)
                          f3 = 0;
                        for (w2 = u3.length; w2 <= s3; ++w2)
                          u3[w2] = [];
                        break;
                      case "K":
                        _2 = E2[c3].slice(1);
                        if (_2.charAt(0) === '"')
                          _2 = _2.slice(1, _2.length - 1);
                        else if (_2 === "TRUE")
                          _2 = true;
                        else if (_2 === "FALSE")
                          _2 = false;
                        else if (!isNaN(he(_2))) {
                          _2 = he(_2);
                          if (d2 !== null && O.is_date(d2))
                            _2 = ne(_2);
                        } else if (!isNaN(de(_2).getDate())) {
                          _2 = le(_2);
                        }
                        if (typeof cptable !== "undefined" && typeof _2 == "string" && (n3 || {}).type != "string" && (n3 || {}).codepage)
                          _2 = cptable.utils.decode(n3.codepage, _2);
                        C2 = true;
                        break;
                      case "E":
                        y2 = true;
                        var I2 = sc(E2[c3].slice(1), { r: s3, c: f3 });
                        u3[s3][f3] = [u3[s3][f3], I2];
                        break;
                      case "S":
                        T2 = true;
                        u3[s3][f3] = [u3[s3][f3], "S5S"];
                        break;
                      case "G":
                        break;
                      case "R":
                        x2 = parseInt(E2[c3].slice(1)) - 1;
                        break;
                      case "C":
                        A2 = parseInt(E2[c3].slice(1)) - 1;
                        break;
                      default:
                        if (n3 && n3.WTF)
                          throw new Error("SYLK bad record " + k2);
                    }
                  if (C2) {
                    if (u3[s3][f3] && u3[s3][f3].length == 2)
                      u3[s3][f3][0] = _2;
                    else
                      u3[s3][f3] = _2;
                    d2 = null;
                  }
                  if (T2) {
                    if (y2)
                      throw new Error("SYLK shared formula cannot have own formula");
                    var R2 = x2 > -1 && u3[x2][A2];
                    if (!R2 || !R2[1])
                      throw new Error("SYLK shared formula cannot find base");
                    u3[s3][f3][1] = oc(R2[1], { r: s3 - x2, c: f3 - A2 });
                  }
                  break;
                case "F":
                  var F2 = 0;
                  for (c3 = 1; c3 < E2.length; ++c3)
                    switch (E2[c3].charAt(0)) {
                      case "X":
                        f3 = parseInt(E2[c3].slice(1)) - 1;
                        ++F2;
                        break;
                      case "Y":
                        s3 = parseInt(E2[c3].slice(1)) - 1;
                        for (w2 = u3.length; w2 <= s3; ++w2)
                          u3[w2] = [];
                        break;
                      case "M":
                        g2 = parseInt(E2[c3].slice(1)) / 20;
                        break;
                      case "F":
                        break;
                      case "G":
                        break;
                      case "P":
                        d2 = h3[parseInt(E2[c3].slice(1))];
                        break;
                      case "S":
                        break;
                      case "D":
                        break;
                      case "N":
                        break;
                      case "W":
                        b2 = E2[c3].slice(1).split(" ");
                        for (w2 = parseInt(b2[0], 10); w2 <= parseInt(b2[1], 10); ++w2) {
                          g2 = parseInt(b2[2], 10);
                          m2[w2 - 1] = g2 === 0 ? { hidden: true } : { wch: g2 };
                          _l(m2[w2 - 1]);
                        }
                        break;
                      case "C":
                        f3 = parseInt(E2[c3].slice(1)) - 1;
                        if (!m2[f3])
                          m2[f3] = {};
                        break;
                      case "R":
                        s3 = parseInt(E2[c3].slice(1)) - 1;
                        if (!p2[s3])
                          p2[s3] = {};
                        if (g2 > 0) {
                          p2[s3].hpt = g2;
                          p2[s3].hpx = yl(g2);
                        } else if (g2 === 0)
                          p2[s3].hidden = true;
                        break;
                      default:
                        if (n3 && n3.WTF)
                          throw new Error("SYLK bad record " + k2);
                    }
                  if (F2 < 1)
                    d2 = null;
                  break;
                default:
                  if (n3 && n3.WTF)
                    throw new Error("SYLK bad record " + k2);
              }
          }
          if (p2.length > 0)
            v2["!rows"] = p2;
          if (m2.length > 0)
            v2["!cols"] = m2;
          if (n3 && n3.sheetRows)
            u3 = u3.slice(0, n3.sheetRows);
          return [u3, v2];
        }
        function s2(e3, r3) {
          var t3 = n2(e3, r3);
          var a3 = t3[0], i3 = t3[1];
          var s3 = Bt(a3, r3);
          K(i3).forEach(function(e4) {
            s3[e4] = i3[e4];
          });
          return s3;
        }
        function f2(e3, r3) {
          return _t(s2(e3, r3), r3);
        }
        function o2(e3, r3, t3, a3) {
          var n3 = "C;Y" + (t3 + 1) + ";X" + (a3 + 1) + ";K";
          switch (e3.t) {
            case "n":
              n3 += e3.v || 0;
              if (e3.f && !e3.F)
                n3 += ";E" + lc(e3.f, { r: t3, c: a3 });
              break;
            case "b":
              n3 += e3.v ? "TRUE" : "FALSE";
              break;
            case "e":
              n3 += e3.w || e3.v;
              break;
            case "d":
              n3 += '"' + (e3.w || e3.v) + '"';
              break;
            case "s":
              n3 += '"' + e3.v.replace(/"/g, "") + '"';
              break;
          }
          return n3;
        }
        function c2(e3, r3) {
          r3.forEach(function(r4, t3) {
            var a3 = "F;W" + (t3 + 1) + " " + (t3 + 1) + " ";
            if (r4.hidden)
              a3 += "0";
            else {
              if (typeof r4.width == "number" && !r4.wpx)
                r4.wpx = gl(r4.width);
              if (typeof r4.wpx == "number" && !r4.wch)
                r4.wch = wl(r4.wpx);
              if (typeof r4.wch == "number")
                a3 += Math.round(r4.wch);
            }
            if (a3.charAt(a3.length - 1) != " ")
              e3.push(a3);
          });
        }
        function u2(e3, r3) {
          r3.forEach(function(r4, t3) {
            var a3 = "F;";
            if (r4.hidden)
              a3 += "M0;";
            else if (r4.hpt)
              a3 += "M" + 20 * r4.hpt + ";";
            else if (r4.hpx)
              a3 += "M" + 20 * Tl(r4.hpx) + ";";
            if (a3.length > 2)
              e3.push(a3 + "R" + (t3 + 1));
          });
        }
        function h2(e3, r3) {
          var t3 = ["ID;PWXL;N;E"], a3 = [];
          var n3 = kt(e3["!ref"]), i3;
          var s3 = Array.isArray(e3);
          var f3 = "\r\n";
          t3.push("P;PGeneral");
          t3.push("F;P0;DG0G8;M255");
          if (e3["!cols"])
            c2(t3, e3["!cols"]);
          if (e3["!rows"])
            u2(t3, e3["!rows"]);
          t3.push("B;Y" + (n3.e.r - n3.s.r + 1) + ";X" + (n3.e.c - n3.s.c + 1) + ";D" + [n3.s.c, n3.s.r, n3.e.c, n3.e.r].join(" "));
          for (var l2 = n3.s.r; l2 <= n3.e.r; ++l2) {
            for (var h3 = n3.s.c; h3 <= n3.e.c; ++h3) {
              var d2 = bt({ r: l2, c: h3 });
              i3 = s3 ? (e3[l2] || [])[h3] : e3[d2];
              if (!i3 || i3.v == null && (!i3.f || i3.F))
                continue;
              a3.push(o2(i3, e3, l2, h3, r3));
            }
          }
          return t3.join(f3) + f3 + a3.join(f3) + f3 + "E" + f3;
        }
        return { to_workbook: f2, to_sheet: s2, from_sheet: h2 };
      }();
      var mf = function() {
        function e2(e3, t3) {
          switch (t3.type) {
            case "base64":
              return r2(g.decode(e3), t3);
            case "binary":
              return r2(e3, t3);
            case "buffer":
              return r2(w && Buffer.isBuffer(e3) ? e3.toString("binary") : y(e3), t3);
            case "array":
              return r2(oe(e3), t3);
          }
          throw new Error("Unrecognized type " + t3.type);
        }
        function r2(e3, r3) {
          var t3 = e3.split("\n"), a3 = -1, n3 = -1, i2 = 0, s2 = [];
          for (; i2 !== t3.length; ++i2) {
            if (t3[i2].trim() === "BOT") {
              s2[++a3] = [];
              n3 = 0;
              continue;
            }
            if (a3 < 0)
              continue;
            var f2 = t3[i2].trim().split(",");
            var l2 = f2[0], o2 = f2[1];
            ++i2;
            var c2 = t3[i2] || "";
            while ((c2.match(/["]/g) || []).length & 1 && i2 < t3.length - 1)
              c2 += "\n" + t3[++i2];
            c2 = c2.trim();
            switch (+l2) {
              case -1:
                if (c2 === "BOT") {
                  s2[++a3] = [];
                  n3 = 0;
                  continue;
                } else if (c2 !== "EOD")
                  throw new Error("Unrecognized DIF special command " + c2);
                break;
              case 0:
                if (c2 === "TRUE")
                  s2[a3][n3] = true;
                else if (c2 === "FALSE")
                  s2[a3][n3] = false;
                else if (!isNaN(he(o2)))
                  s2[a3][n3] = he(o2);
                else if (!isNaN(de(o2).getDate()))
                  s2[a3][n3] = le(o2);
                else
                  s2[a3][n3] = o2;
                ++n3;
                break;
              case 1:
                c2 = c2.slice(1, c2.length - 1);
                c2 = c2.replace(/""/g, '"');
                if (b && c2 && c2.match(/^=".*"$/))
                  c2 = c2.slice(2, -1);
                s2[a3][n3++] = c2 !== "" ? c2 : null;
                break;
            }
            if (c2 === "EOD")
              break;
          }
          if (r3 && r3.sheetRows)
            s2 = s2.slice(0, r3.sheetRows);
          return s2;
        }
        function t2(r3, t3) {
          return Bt(e2(r3, t3), t3);
        }
        function a2(e3, r3) {
          return _t(t2(e3, r3), r3);
        }
        var n2 = function() {
          var e3 = function t3(e4, r4, a3, n3, i2) {
            e4.push(r4);
            e4.push(a3 + "," + n3);
            e4.push('"' + i2.replace(/"/g, '""') + '"');
          };
          var r3 = function a3(e4, r4, t3, n3) {
            e4.push(r4 + "," + t3);
            e4.push(r4 == 1 ? '"' + n3.replace(/"/g, '""') + '"' : n3);
          };
          return function n3(t3) {
            var a3 = [];
            var n4 = kt(t3["!ref"]), i2;
            var s2 = Array.isArray(t3);
            e3(a3, "TABLE", 0, 1, "sheetjs");
            e3(a3, "VECTORS", 0, n4.e.r - n4.s.r + 1, "");
            e3(a3, "TUPLES", 0, n4.e.c - n4.s.c + 1, "");
            e3(a3, "DATA", 0, 0, "");
            for (var f2 = n4.s.r; f2 <= n4.e.r; ++f2) {
              r3(a3, -1, 0, "BOT");
              for (var l2 = n4.s.c; l2 <= n4.e.c; ++l2) {
                var o2 = bt({ r: f2, c: l2 });
                i2 = s2 ? (t3[f2] || [])[l2] : t3[o2];
                if (!i2) {
                  r3(a3, 1, 0, "");
                  continue;
                }
                switch (i2.t) {
                  case "n":
                    var c2 = b ? i2.w : i2.v;
                    if (!c2 && i2.v != null)
                      c2 = i2.v;
                    if (c2 == null) {
                      if (b && i2.f && !i2.F)
                        r3(a3, 1, 0, "=" + i2.f);
                      else
                        r3(a3, 1, 0, "");
                    } else
                      r3(a3, 0, c2, "V");
                    break;
                  case "b":
                    r3(a3, 0, i2.v ? 1 : 0, i2.v ? "TRUE" : "FALSE");
                    break;
                  case "s":
                    r3(a3, 1, 0, !b || isNaN(i2.v) ? i2.v : '="' + i2.v + '"');
                    break;
                  case "d":
                    if (!i2.w)
                      i2.w = O.format(i2.z || O._table[14], ee(le(i2.v)));
                    if (b)
                      r3(a3, 0, i2.w, "V");
                    else
                      r3(a3, 1, 0, i2.w);
                    break;
                  default:
                    r3(a3, 1, 0, "");
                }
              }
            }
            r3(a3, -1, 0, "EOD");
            var u2 = "\r\n";
            var h2 = a3.join(u2);
            return h2;
          };
        }();
        return { to_workbook: a2, to_sheet: t2, from_sheet: n2 };
      }();
      var bf = function() {
        function e2(e3) {
          return e3.replace(/\\b/g, "\\").replace(/\\c/g, ":").replace(/\\n/g, "\n");
        }
        function r2(e3) {
          return e3.replace(/\\/g, "\\b").replace(/:/g, "\\c").replace(/\n/g, "\\n");
        }
        function t2(r3, t3) {
          var a3 = r3.split("\n"), n3 = -1, i3 = -1, s3 = 0, f3 = [];
          for (; s3 !== a3.length; ++s3) {
            var l3 = a3[s3].trim().split(":");
            if (l3[0] !== "cell")
              continue;
            var o3 = mt(l3[1]);
            if (f3.length <= o3.r) {
              for (n3 = f3.length; n3 <= o3.r; ++n3)
                if (!f3[n3])
                  f3[n3] = [];
            }
            n3 = o3.r;
            i3 = o3.c;
            switch (l3[2]) {
              case "t":
                f3[n3][i3] = e2(l3[3]);
                break;
              case "v":
                f3[n3][i3] = +l3[3];
                break;
              case "vtf":
                var c3 = l3[l3.length - 1];
              case "vtc":
                switch (l3[3]) {
                  case "nl":
                    f3[n3][i3] = +l3[4] ? true : false;
                    break;
                  default:
                    f3[n3][i3] = +l3[4];
                    break;
                }
                if (l3[2] == "vtf")
                  f3[n3][i3] = [f3[n3][i3], c3];
            }
          }
          if (t3 && t3.sheetRows)
            f3 = f3.slice(0, t3.sheetRows);
          return f3;
        }
        function a2(e3, r3) {
          return Bt(t2(e3, r3), r3);
        }
        function n2(e3, r3) {
          return _t(a2(e3, r3), r3);
        }
        var i2 = ["socialcalc:version:1.5", "MIME-Version: 1.0", "Content-Type: multipart/mixed; boundary=SocialCalcSpreadsheetControlSave"].join("\n");
        var s2 = ["--SocialCalcSpreadsheetControlSave", "Content-type: text/plain; charset=UTF-8"].join("\n") + "\n";
        var f2 = ["# SocialCalc Spreadsheet Control Save", "part:sheet"].join("\n");
        var l2 = "--SocialCalcSpreadsheetControlSave--";
        function o2(e3) {
          if (!e3 || !e3["!ref"])
            return "";
          var t3 = [], a3 = [], n3, i3 = "";
          var s3 = gt(e3["!ref"]);
          var f3 = Array.isArray(e3);
          for (var l3 = s3.s.r; l3 <= s3.e.r; ++l3) {
            for (var o3 = s3.s.c; o3 <= s3.e.c; ++o3) {
              i3 = bt({ r: l3, c: o3 });
              n3 = f3 ? (e3[l3] || [])[o3] : e3[i3];
              if (!n3 || n3.v == null || n3.t === "z")
                continue;
              a3 = ["cell", i3, "t"];
              switch (n3.t) {
                case "s":
                  ;
                case "str":
                  a3.push(r2(n3.v));
                  break;
                case "n":
                  if (!n3.f) {
                    a3[2] = "v";
                    a3[3] = n3.v;
                  } else {
                    a3[2] = "vtf";
                    a3[3] = "n";
                    a3[4] = n3.v;
                    a3[5] = r2(n3.f);
                  }
                  break;
                case "b":
                  a3[2] = "vt" + (n3.f ? "f" : "c");
                  a3[3] = "nl";
                  a3[4] = n3.v ? "1" : "0";
                  a3[5] = r2(n3.f || (n3.v ? "TRUE" : "FALSE"));
                  break;
                case "d":
                  var c3 = ee(le(n3.v));
                  a3[2] = "vtc";
                  a3[3] = "nd";
                  a3[4] = "" + c3;
                  a3[5] = n3.w || O.format(n3.z || O._table[14], c3);
                  break;
                case "e":
                  continue;
              }
              t3.push(a3.join(":"));
            }
          }
          t3.push("sheet:c:" + (s3.e.c - s3.s.c + 1) + ":r:" + (s3.e.r - s3.s.r + 1) + ":tvf:1");
          t3.push("valueformat:1:text-wiki");
          return t3.join("\n");
        }
        function c2(e3) {
          return [i2, s2, f2, s2, o2(e3), l2].join("\n");
        }
        return { to_workbook: n2, to_sheet: a2, from_sheet: c2 };
      }();
      var gf = function() {
        function e2(e3, r3, t3, a3, n3) {
          if (n3.raw)
            r3[t3][a3] = e3;
          else if (e3 === "") {
          } else if (e3 === "TRUE")
            r3[t3][a3] = true;
          else if (e3 === "FALSE")
            r3[t3][a3] = false;
          else if (!isNaN(he(e3)))
            r3[t3][a3] = he(e3);
          else if (!isNaN(de(e3).getDate()))
            r3[t3][a3] = le(e3);
          else
            r3[t3][a3] = e3;
        }
        function r2(r3, t3) {
          var a3 = t3 || {};
          var n3 = [];
          if (!r3 || r3.length === 0)
            return n3;
          var i3 = r3.split(/[\r\n]/);
          var s3 = i3.length - 1;
          while (s3 >= 0 && i3[s3].length === 0)
            --s3;
          var f3 = 10, l3 = 0;
          var o3 = 0;
          for (; o3 <= s3; ++o3) {
            l3 = i3[o3].indexOf(" ");
            if (l3 == -1)
              l3 = i3[o3].length;
            else
              l3++;
            f3 = Math.max(f3, l3);
          }
          for (o3 = 0; o3 <= s3; ++o3) {
            n3[o3] = [];
            var c2 = 0;
            e2(i3[o3].slice(0, f3).trim(), n3, o3, c2, a3);
            for (c2 = 1; c2 <= (i3[o3].length - f3) / 10 + 1; ++c2)
              e2(i3[o3].slice(f3 + (c2 - 1) * 10, f3 + c2 * 10).trim(), n3, o3, c2, a3);
          }
          if (a3.sheetRows)
            n3 = n3.slice(0, a3.sheetRows);
          return n3;
        }
        var t2 = { 44: ",", 9: "	", 59: ";", 124: "|" };
        var a2 = { 44: 3, 9: 2, 59: 1, 124: 0 };
        function n2(e3) {
          var r3 = {}, n3 = false, i3 = 0, s3 = 0;
          for (; i3 < e3.length; ++i3) {
            if ((s3 = e3.charCodeAt(i3)) == 34)
              n3 = !n3;
            else if (!n3 && s3 in t2)
              r3[s3] = (r3[s3] || 0) + 1;
          }
          s3 = [];
          for (i3 in r3)
            if (Object.prototype.hasOwnProperty.call(r3, i3)) {
              s3.push([r3[i3], i3]);
            }
          if (!s3.length) {
            r3 = a2;
            for (i3 in r3)
              if (Object.prototype.hasOwnProperty.call(r3, i3)) {
                s3.push([r3[i3], i3]);
              }
          }
          s3.sort(function(e4, r4) {
            return e4[0] - r4[0] || a2[e4[1]] - a2[r4[1]];
          });
          return t2[s3.pop()[1]] || 44;
        }
        function i2(e3, r3) {
          var t3 = r3 || {};
          var a3 = "";
          if (m != null && t3.dense == null)
            t3.dense = m;
          var i3 = t3.dense ? [] : {};
          var s3 = { s: { c: 0, r: 0 }, e: { c: 0, r: 0 } };
          if (e3.slice(0, 4) == "sep=") {
            if (e3.charCodeAt(5) == 13 && e3.charCodeAt(6) == 10) {
              a3 = e3.charAt(4);
              e3 = e3.slice(7);
            } else if (e3.charCodeAt(5) == 13 || e3.charCodeAt(5) == 10) {
              a3 = e3.charAt(4);
              e3 = e3.slice(6);
            } else
              a3 = n2(e3.slice(0, 1024));
          } else if (t3 && t3.FS)
            a3 = t3.FS;
          else
            a3 = n2(e3.slice(0, 1024));
          var f3 = 0, l3 = 0, o3 = 0;
          var c2 = 0, u2 = 0, h2 = a3.charCodeAt(0), d2 = false, v2 = 0, p2 = e3.charCodeAt(0);
          e3 = e3.replace(/\r\n/gm, "\n");
          var b2 = t3.dateNF != null ? M(t3.dateNF) : null;
          function g2() {
            var r4 = e3.slice(c2, u2);
            var a4 = {};
            if (r4.charAt(0) == '"' && r4.charAt(r4.length - 1) == '"')
              r4 = r4.slice(1, -1).replace(/""/g, '"');
            if (r4.length === 0)
              a4.t = "z";
            else if (t3.raw) {
              a4.t = "s";
              a4.v = r4;
            } else if (r4.trim().length === 0) {
              a4.t = "s";
              a4.v = r4;
            } else if (r4.charCodeAt(0) == 61) {
              if (r4.charCodeAt(1) == 34 && r4.charCodeAt(r4.length - 1) == 34) {
                a4.t = "s";
                a4.v = r4.slice(2, -1).replace(/""/g, '"');
              } else if (uc(r4)) {
                a4.t = "n";
                a4.f = r4.slice(1);
              } else {
                a4.t = "s";
                a4.v = r4;
              }
            } else if (r4 == "TRUE") {
              a4.t = "b";
              a4.v = true;
            } else if (r4 == "FALSE") {
              a4.t = "b";
              a4.v = false;
            } else if (!isNaN(o3 = he(r4))) {
              a4.t = "n";
              if (t3.cellText !== false)
                a4.w = r4;
              a4.v = o3;
            } else if (!isNaN(de(r4).getDate()) || b2 && r4.match(b2)) {
              a4.z = t3.dateNF || O._table[14];
              var n3 = 0;
              if (b2 && r4.match(b2)) {
                r4 = U(r4, t3.dateNF, r4.match(b2) || []);
                n3 = 1;
              }
              if (t3.cellDates) {
                a4.t = "d";
                a4.v = le(r4, n3);
              } else {
                a4.t = "n";
                a4.v = ee(le(r4, n3));
              }
              if (t3.cellText !== false)
                a4.w = O.format(a4.z, a4.v instanceof Date ? ee(a4.v) : a4.v);
              if (!t3.cellNF)
                delete a4.z;
            } else {
              a4.t = "s";
              a4.v = r4;
            }
            if (a4.t == "z") {
            } else if (t3.dense) {
              if (!i3[f3])
                i3[f3] = [];
              i3[f3][l3] = a4;
            } else
              i3[bt({ c: l3, r: f3 })] = a4;
            c2 = u2 + 1;
            p2 = e3.charCodeAt(c2);
            if (s3.e.c < l3)
              s3.e.c = l3;
            if (s3.e.r < f3)
              s3.e.r = f3;
            if (v2 == h2)
              ++l3;
            else {
              l3 = 0;
              ++f3;
              if (t3.sheetRows && t3.sheetRows <= f3)
                return true;
            }
          }
          e:
            for (; u2 < e3.length; ++u2)
              switch (v2 = e3.charCodeAt(u2)) {
                case 34:
                  if (p2 === 34)
                    d2 = !d2;
                  break;
                case h2:
                  ;
                case 10:
                  ;
                case 13:
                  if (!d2 && g2())
                    break e;
                  break;
                default:
                  break;
              }
          if (u2 - c2 > 0)
            g2();
          i3["!ref"] = wt(s3);
          return i3;
        }
        function s2(e3, t3) {
          if (!(t3 && t3.PRN))
            return i2(e3, t3);
          if (t3.FS)
            return i2(e3, t3);
          if (e3.slice(0, 4) == "sep=")
            return i2(e3, t3);
          if (e3.indexOf("	") >= 0 || e3.indexOf(",") >= 0 || e3.indexOf(";") >= 0)
            return i2(e3, t3);
          return Bt(r2(e3, t3), t3);
        }
        function f2(e3, r3) {
          var t3 = "", a3 = r3.type == "string" ? [0, 0, 0, 0] : rb(e3, r3);
          switch (r3.type) {
            case "base64":
              t3 = g.decode(e3);
              break;
            case "binary":
              t3 = e3;
              break;
            case "buffer":
              if (r3.codepage == 65001)
                t3 = e3.toString("utf8");
              else if (r3.codepage && typeof cptable !== "undefined")
                t3 = cptable.utils.decode(r3.codepage, e3);
              else
                t3 = w && Buffer.isBuffer(e3) ? e3.toString("binary") : y(e3);
              break;
            case "array":
              t3 = oe(e3);
              break;
            case "string":
              t3 = e3;
              break;
            default:
              throw new Error("Unrecognized type " + r3.type);
          }
          if (a3[0] == 239 && a3[1] == 187 && a3[2] == 191)
            t3 = Ye(t3.slice(3));
          else if (r3.type != "string" && r3.codepage == 65001)
            t3 = Ye(t3);
          else if (r3.type == "binary" && typeof cptable !== "undefined" && r3.codepage)
            t3 = cptable.utils.decode(r3.codepage, cptable.utils.encode(28591, t3));
          if (t3.slice(0, 19) == "socialcalc:version:")
            return bf.to_sheet(r3.type == "string" ? t3 : Ye(t3), r3);
          return s2(t3, r3);
        }
        function l2(e3, r3) {
          return _t(f2(e3, r3), r3);
        }
        function o2(e3) {
          var r3 = [];
          var t3 = kt(e3["!ref"]), a3;
          var n3 = Array.isArray(e3);
          for (var i3 = t3.s.r; i3 <= t3.e.r; ++i3) {
            var s3 = [];
            for (var f3 = t3.s.c; f3 <= t3.e.c; ++f3) {
              var l3 = bt({ r: i3, c: f3 });
              a3 = n3 ? (e3[i3] || [])[f3] : e3[l3];
              if (!a3 || a3.v == null) {
                s3.push("          ");
                continue;
              }
              var o3 = (a3.w || (St(a3), a3.w) || "").slice(0, 10);
              while (o3.length < 10)
                o3 += " ";
              s3.push(o3 + (f3 === 0 ? " " : ""));
            }
            r3.push(s3.join(""));
          }
          return r3.join("\n");
        }
        return { to_workbook: l2, to_sheet: f2, from_sheet: o2 };
      }();
      function wf(e2, r2) {
        var t2 = r2 || {}, a2 = !!t2.WTF;
        t2.WTF = true;
        try {
          var n2 = pf.to_workbook(e2, t2);
          t2.WTF = a2;
          return n2;
        } catch (i2) {
          t2.WTF = a2;
          if (!i2.message.match(/SYLK bad record ID/) && a2)
            throw i2;
          return gf.to_workbook(e2, r2);
        }
      }
      var kf = function() {
        function e2(e3, r3, t3) {
          if (!e3)
            return;
          Yr(e3, e3.l || 0);
          var a3 = t3.Enum || U2;
          while (e3.l < e3.length) {
            var n3 = e3._R(2);
            var i3 = a3[n3] || a3[65535];
            var s3 = e3._R(2);
            var f3 = e3.l + s3;
            var l2 = i3.f && i3.f(e3, s3, t3);
            e3.l = f3;
            if (r3(l2, i3, n3))
              return;
          }
        }
        function r2(e3, r3) {
          switch (r3.type) {
            case "base64":
              return t2(B(g.decode(e3)), r3);
            case "binary":
              return t2(B(e3), r3);
            case "buffer":
              ;
            case "array":
              return t2(e3, r3);
          }
          throw "Unsupported type " + r3.type;
        }
        function t2(r3, t3) {
          if (!r3)
            return r3;
          var a3 = t3 || {};
          if (m != null && a3.dense == null)
            a3.dense = m;
          var n3 = a3.dense ? [] : {}, i3 = "Sheet1", s3 = 0;
          var f3 = {}, l2 = [i3], o3 = [];
          var c3 = { s: { r: 0, c: 0 }, e: { r: 0, c: 0 } };
          var u3 = a3.sheetRows || 0;
          if (r3[2] == 2) {
            a3.Enum = U2;
            e2(r3, function(e3, r4, t4) {
              switch (t4) {
                case 0:
                  a3.vers = e3;
                  if (e3 >= 4096)
                    a3.qpro = true;
                  break;
                case 6:
                  c3 = e3;
                  break;
                case 15:
                  ;
                case 51:
                  if (!a3.qpro)
                    e3[1].v = e3[1].v.slice(1);
                case 13:
                  ;
                case 14:
                  ;
                case 16:
                  if (t4 == 14 && (e3[2] & 112) == 112 && (e3[2] & 15) > 1 && (e3[2] & 15) < 15) {
                    e3[1].z = a3.dateNF || O._table[14];
                    if (a3.cellDates) {
                      e3[1].t = "d";
                      e3[1].v = ne(e3[1].v);
                    }
                  }
                  var i4 = a3.dense ? (n3[e3[0].r] || [])[e3[0].c] : n3[bt(e3[0])];
                  if (i4) {
                    i4.t = e3[1].t;
                    i4.v = e3[1].v;
                    if (e3[1].z != null)
                      i4.z = e3[1].z;
                    if (e3[1].f != null)
                      i4.f = e3[1].f;
                    break;
                  }
                  if (a3.dense) {
                    if (!n3[e3[0].r])
                      n3[e3[0].r] = [];
                    n3[e3[0].r][e3[0].c] = e3[1];
                  } else
                    n3[bt(e3[0])] = e3[1];
                  break;
                default:
                  ;
              }
            }, a3);
          } else if (r3[2] == 26 || r3[2] == 14) {
            a3.Enum = z2;
            if (r3[2] == 14) {
              a3.qpro = true;
              r3.l = 0;
            }
            e2(r3, function(e3, r4, t4) {
              switch (t4) {
                case 22:
                  e3[1].v = e3[1].v.slice(1);
                case 23:
                  ;
                case 24:
                  ;
                case 25:
                  ;
                case 37:
                  ;
                case 39:
                  ;
                case 40:
                  if (e3[3] > s3) {
                    n3["!ref"] = wt(c3);
                    f3[i3] = n3;
                    n3 = a3.dense ? [] : {};
                    c3 = { s: { r: 0, c: 0 }, e: { r: 0, c: 0 } };
                    s3 = e3[3];
                    i3 = "Sheet" + (s3 + 1);
                    l2.push(i3);
                  }
                  if (u3 > 0 && e3[0].r >= u3)
                    break;
                  if (a3.dense) {
                    if (!n3[e3[0].r])
                      n3[e3[0].r] = [];
                    n3[e3[0].r][e3[0].c] = e3[1];
                  } else
                    n3[bt(e3[0])] = e3[1];
                  if (c3.e.c < e3[0].c)
                    c3.e.c = e3[0].c;
                  if (c3.e.r < e3[0].r)
                    c3.e.r = e3[0].r;
                  break;
                case 27:
                  if (e3[14e3])
                    o3[e3[14e3][0]] = e3[14e3][1];
                  break;
                default:
                  break;
              }
            }, a3);
          } else
            throw new Error("Unrecognized LOTUS BOF " + r3[2]);
          n3["!ref"] = wt(c3);
          f3[i3] = n3;
          if (!o3.length)
            return { SheetNames: l2, Sheets: f3 };
          var h3 = {}, d3 = [];
          for (var v3 = 0; v3 < o3.length; ++v3)
            if (f3[l2[v3]]) {
              d3.push(o3[v3]);
              h3[o3[v3]] = f3[l2[v3]];
            }
          return { SheetNames: d3, Sheets: h3 };
        }
        function a2(e3, r3) {
          var t3 = r3 || {};
          if (+t3.codepage >= 0)
            l(+t3.codepage);
          if (t3.type == "string")
            throw new Error("Cannot write WK1 to JS string");
          var a3 = qr();
          var n3 = kt(e3["!ref"]);
          var s3 = Array.isArray(e3);
          var f3 = [];
          tm(a3, 0, i2(1030));
          tm(a3, 6, o2(n3));
          for (var c3 = n3.s.r; c3 <= n3.e.r; ++c3) {
            var u3 = lt(c3);
            for (var d3 = n3.s.c; d3 <= n3.e.c; ++d3) {
              if (c3 === n3.s.r)
                f3[d3] = ht(d3);
              var p3 = f3[d3] + u3;
              var m2 = s3 ? (e3[c3] || [])[d3] : e3[p3];
              if (!m2 || m2.t == "z")
                continue;
              if (m2.t == "n") {
                if ((m2.v | 0) == m2.v && m2.v >= -32768 && m2.v <= 32767)
                  tm(a3, 13, v2(c3, d3, m2.v));
                else
                  tm(a3, 14, b2(c3, d3, m2.v));
              } else {
                var g2 = St(m2);
                tm(a3, 15, h2(c3, d3, g2.slice(0, 239)));
              }
            }
          }
          tm(a3, 1);
          return a3.end();
        }
        function n2(e3, r3) {
          var t3 = r3 || {};
          if (+t3.codepage >= 0)
            l(+t3.codepage);
          if (t3.type == "string")
            throw new Error("Cannot write WK3 to JS string");
          var a3 = qr();
          tm(a3, 0, s2(e3));
          for (var n3 = 0, i3 = 0; n3 < e3.SheetNames.length; ++n3)
            if ((e3.Sheets[e3.SheetNames[n3]] || {})["!ref"])
              tm(a3, 27, M2(e3.SheetNames[n3], i3++));
          var f3 = 0;
          for (n3 = 0; n3 < e3.SheetNames.length; ++n3) {
            var o3 = e3.Sheets[e3.SheetNames[n3]];
            if (!o3 || !o3["!ref"])
              continue;
            var c3 = kt(o3["!ref"]);
            var u3 = Array.isArray(o3);
            var h3 = [];
            for (var d3 = c3.s.r; d3 <= c3.e.r; ++d3) {
              var v3 = lt(d3);
              for (var p3 = c3.s.c; p3 <= c3.e.c; ++p3) {
                if (d3 === c3.s.r)
                  h3[p3] = ht(p3);
                var m2 = h3[p3] + v3;
                var b3 = u3 ? (o3[d3] || [])[p3] : o3[m2];
                if (!b3 || b3.t == "z")
                  continue;
                if (b3.t == "n") {
                  tm(a3, 23, R2(d3, p3, f3, b3.v));
                } else {
                  var g2 = St(b3);
                  tm(a3, 22, x2(d3, p3, f3, g2.slice(0, 239)));
                }
              }
            }
            ++f3;
          }
          tm(a3, 1);
          return a3.end();
        }
        function i2(e3) {
          var r3 = Jr(2);
          r3._W(2, e3);
          return r3;
        }
        function s2(e3) {
          var r3 = Jr(26);
          r3._W(2, 4096);
          r3._W(2, 4);
          r3._W(4, 0);
          var t3 = 0, a3 = 0, n3 = 0;
          for (var i3 = 0; i3 < e3.SheetNames.length; ++i3) {
            var s3 = e3.SheetNames[i3];
            var f3 = e3.Sheets[s3];
            if (!f3 || !f3["!ref"])
              continue;
            ++n3;
            var l2 = gt(f3["!ref"]);
            if (t3 < l2.e.r)
              t3 = l2.e.r;
            if (a3 < l2.e.c)
              a3 = l2.e.c;
          }
          r3._W(2, t3);
          r3._W(1, n3);
          r3._W(1, a3);
          r3._W(2, 0);
          r3._W(2, 0);
          r3._W(1, 1);
          r3._W(1, 2);
          r3._W(4, 0);
          r3._W(4, 0);
          return r3;
        }
        function f2(e3) {
          var r3 = { s: { c: 0, r: 0 }, e: { c: 0, r: 0 } };
          r3.s.c = e3._R(2);
          r3.s.r = e3._R(2);
          r3.e.c = e3._R(2);
          r3.e.r = e3._R(2);
          if (r3.s.c == 65535)
            r3.s.c = r3.e.c = r3.s.r = r3.e.r = 0;
          return r3;
        }
        function o2(e3) {
          var r3 = Jr(8);
          r3._W(2, e3.s.c);
          r3._W(2, e3.s.r);
          r3._W(2, e3.e.c);
          r3._W(2, e3.e.r);
          return r3;
        }
        function c2(e3, r3, t3) {
          var a3 = [{ c: 0, r: 0 }, { t: "n", v: 0 }, 0];
          if (t3.qpro && t3.vers != 20768) {
            a3[0].c = e3._R(1);
            e3.l++;
            a3[0].r = e3._R(2);
            e3.l += 2;
          } else {
            a3[2] = e3._R(1);
            a3[0].c = e3._R(2);
            a3[0].r = e3._R(2);
          }
          return a3;
        }
        function u2(e3, r3, t3) {
          var a3 = e3.l + r3;
          var n3 = c2(e3, r3, t3);
          n3[1].t = "s";
          if (t3.vers == 20768) {
            e3.l++;
            var i3 = e3._R(1);
            n3[1].v = e3._R(i3, "utf8");
            return n3;
          }
          if (t3.qpro)
            e3.l++;
          n3[1].v = e3._R(a3 - e3.l, "cstr");
          return n3;
        }
        function h2(e3, r3, t3) {
          var a3 = Jr(7 + t3.length);
          a3._W(1, 255);
          a3._W(2, r3);
          a3._W(2, e3);
          a3._W(1, 39);
          for (var n3 = 0; n3 < a3.length; ++n3) {
            var i3 = t3.charCodeAt(n3);
            a3._W(1, i3 >= 128 ? 95 : i3);
          }
          a3._W(1, 0);
          return a3;
        }
        function d2(e3, r3, t3) {
          var a3 = c2(e3, r3, t3);
          a3[1].v = e3._R(2, "i");
          return a3;
        }
        function v2(e3, r3, t3) {
          var a3 = Jr(7);
          a3._W(1, 255);
          a3._W(2, r3);
          a3._W(2, e3);
          a3._W(2, t3, "i");
          return a3;
        }
        function p2(e3, r3, t3) {
          var a3 = c2(e3, r3, t3);
          a3[1].v = e3._R(8, "f");
          return a3;
        }
        function b2(e3, r3, t3) {
          var a3 = Jr(13);
          a3._W(1, 255);
          a3._W(2, r3);
          a3._W(2, e3);
          a3._W(8, t3, "f");
          return a3;
        }
        function w2(e3, r3, t3) {
          var a3 = e3.l + r3;
          var n3 = c2(e3, r3, t3);
          n3[1].v = e3._R(8, "f");
          if (t3.qpro)
            e3.l = a3;
          else {
            var i3 = e3._R(2);
            C2(e3.slice(e3.l, e3.l + i3), n3);
            e3.l += i3;
          }
          return n3;
        }
        function k2(e3, r3, t3) {
          var a3 = r3 & 32768;
          r3 &= ~32768;
          r3 = (a3 ? e3 : 0) + (r3 >= 8192 ? r3 - 16384 : r3);
          return (a3 ? "" : "$") + (t3 ? ht(r3) : lt(r3));
        }
        var E2 = [8, 8, 8, 8, 8, 8, 8, 8, 6, 4, 4, 5, 5, 7, 3, 3, 3, 3, 3, 3, 1, 1, 2, 6, 8, 8, 8, 8, 8, 8, 8, 8];
        var S = { 51: ["FALSE", 0], 52: ["TRUE", 0], 70: ["LEN", 1], 80: ["SUM", 69], 81: ["AVERAGEA", 69], 82: ["COUNTA", 69], 83: ["MINA", 69], 84: ["MAXA", 69], 111: ["T", 1] };
        var _2 = ["", "", "", "", "", "", "", "", "", "+", "-", "*", "/", "^", "=", "<>", "<=", ">=", "<", ">", "", "", "", "", "&", "", "", "", "", "", "", ""];
        function C2(e3, r3) {
          Yr(e3, 0);
          var t3 = [], a3 = 0, n3 = "", i3 = "";
          while (e3.l < e3.length) {
            var s3 = e3[e3.l++];
            switch (s3) {
              case 0:
                t3.push(e3._R(8, "f"));
                break;
              case 1:
                {
                  i3 = k2(r3[0].c, e3._R(2), true);
                  n3 = k2(r3[0].r, e3._R(2), false);
                  t3.push(i3 + n3);
                }
                break;
              case 2:
                {
                  var f3 = k2(r3[0].c, e3._R(2), true);
                  var l2 = k2(r3[0].r, e3._R(2), false);
                  i3 = k2(r3[0].c, e3._R(2), true);
                  n3 = k2(r3[0].r, e3._R(2), false);
                  t3.push(f3 + l2 + ":" + i3 + n3);
                }
                break;
              case 3:
                if (e3.l < e3.length) {
                  console.error("WK1 premature formula end");
                  return;
                }
                break;
              case 4:
                t3.push("(" + t3.pop() + ")");
                break;
              case 5:
                t3.push(e3._R(2));
                break;
              case 6:
                {
                  var o3 = "";
                  while (s3 = e3[e3.l++])
                    o3 += String.fromCharCode(s3);
                  t3.push('"' + o3.replace(/"/g, '""') + '"');
                  break;
                }
                break;
              case 8:
                t3.push("-" + t3.pop());
                break;
              case 23:
                t3.push("+" + t3.pop());
                break;
              case 22:
                t3.push("NOT(" + t3.pop() + ")");
                break;
              case 20:
                ;
              case 21:
                {
                  var c3 = t3.pop(), u3 = t3.pop();
                  t3.push(["AND", "OR"][s3 - 20] + "(" + u3 + "," + c3 + ")");
                }
                break;
              default:
                if (s3 < 32 && _2[s3]) {
                  c3 = t3.pop();
                  u3 = t3.pop();
                  t3.push(u3 + _2[s3] + c3);
                } else if (S[s3]) {
                  a3 = S[s3][1];
                  if (a3 == 69)
                    a3 = e3[e3.l++];
                  if (a3 > t3.length) {
                    console.error("WK1 bad formula parse 0x" + s3.toString(16) + ":|" + t3.join("|") + "|");
                    return;
                  }
                  var h3 = t3.slice(-a3);
                  t3.length -= a3;
                  t3.push(S[s3][0] + "(" + h3.join(",") + ")");
                } else if (s3 <= 7)
                  return console.error("WK1 invalid opcode " + s3.toString(16));
                else if (s3 <= 24)
                  return console.error("WK1 unsupported op " + s3.toString(16));
                else if (s3 <= 30)
                  return console.error("WK1 invalid opcode " + s3.toString(16));
                else if (s3 <= 115)
                  return console.error("WK1 unsupported function opcode " + s3.toString(16));
                else
                  return console.error("WK1 unrecognized opcode " + s3.toString(16));
            }
          }
          if (t3.length == 1)
            r3[1].f = "" + t3[0];
          else
            console.error("WK1 bad formula parse |" + t3.join("|") + "|");
        }
        function T2(e3) {
          var r3 = [{ c: 0, r: 0 }, { t: "n", v: 0 }, 0];
          r3[0].r = e3._R(2);
          r3[3] = e3[e3.l++];
          r3[0].c = e3[e3.l++];
          return r3;
        }
        function y2(e3, r3) {
          var t3 = T2(e3, r3);
          t3[1].t = "s";
          t3[1].v = e3._R(r3 - 4, "cstr");
          return t3;
        }
        function x2(e3, r3, t3, a3) {
          var n3 = Jr(6 + a3.length);
          n3._W(2, e3);
          n3._W(1, t3);
          n3._W(1, r3);
          n3._W(1, 39);
          for (var i3 = 0; i3 < a3.length; ++i3) {
            var s3 = a3.charCodeAt(i3);
            n3._W(1, s3 >= 128 ? 95 : s3);
          }
          n3._W(1, 0);
          return n3;
        }
        function A2(e3, r3) {
          var t3 = T2(e3, r3);
          t3[1].v = e3._R(2);
          var a3 = t3[1].v >> 1;
          if (t3[1].v & 1) {
            switch (a3 & 7) {
              case 0:
                a3 = (a3 >> 3) * 5e3;
                break;
              case 1:
                a3 = (a3 >> 3) * 500;
                break;
              case 2:
                a3 = (a3 >> 3) / 20;
                break;
              case 3:
                a3 = (a3 >> 3) / 200;
                break;
              case 4:
                a3 = (a3 >> 3) / 2e3;
                break;
              case 5:
                a3 = (a3 >> 3) / 2e4;
                break;
              case 6:
                a3 = (a3 >> 3) / 16;
                break;
              case 7:
                a3 = (a3 >> 3) / 64;
                break;
            }
          }
          t3[1].v = a3;
          return t3;
        }
        function I2(e3, r3) {
          var t3 = T2(e3, r3);
          var a3 = e3._R(4);
          var n3 = e3._R(4);
          var i3 = e3._R(2);
          if (i3 == 65535) {
            if (a3 === 0 && n3 === 3221225472) {
              t3[1].t = "e";
              t3[1].v = 15;
            } else if (a3 === 0 && n3 === 3489660928) {
              t3[1].t = "e";
              t3[1].v = 42;
            } else
              t3[1].v = 0;
            return t3;
          }
          var s3 = i3 & 32768;
          i3 = (i3 & 32767) - 16446;
          t3[1].v = (1 - s3 * 2) * (n3 * Math.pow(2, i3 + 32) + a3 * Math.pow(2, i3));
          return t3;
        }
        function R2(e3, r3, t3, a3) {
          var n3 = Jr(14);
          n3._W(2, e3);
          n3._W(1, t3);
          n3._W(1, r3);
          if (a3 == 0) {
            n3._W(4, 0);
            n3._W(4, 0);
            n3._W(2, 65535);
            return n3;
          }
          var i3 = 0, s3 = 0, f3 = 0, l2 = 0;
          if (a3 < 0) {
            i3 = 1;
            a3 = -a3;
          }
          s3 = Math.log2(a3) | 0;
          a3 /= Math.pow(2, s3 - 31);
          l2 = a3 >>> 0;
          if ((l2 & 2147483648) == 0) {
            a3 /= 2;
            ++s3;
            l2 = a3 >>> 0;
          }
          a3 -= l2;
          l2 |= 2147483648;
          l2 >>>= 0;
          a3 *= Math.pow(2, 32);
          f3 = a3 >>> 0;
          n3._W(4, f3);
          n3._W(4, l2);
          s3 += 16383 + (i3 ? 32768 : 0);
          n3._W(2, s3);
          return n3;
        }
        function F2(e3, r3) {
          var t3 = I2(e3, 14);
          e3.l += r3 - 14;
          return t3;
        }
        function D2(e3, r3) {
          var t3 = T2(e3, r3);
          var a3 = e3._R(4);
          t3[1].v = a3 >> 6;
          return t3;
        }
        function P2(e3, r3) {
          var t3 = T2(e3, r3);
          var a3 = e3._R(8, "f");
          t3[1].v = a3;
          return t3;
        }
        function N2(e3, r3) {
          var t3 = P2(e3, 14);
          e3.l += r3 - 10;
          return t3;
        }
        function L2(e3, r3) {
          var t3 = {}, a3 = e3.l + r3;
          while (e3.l < a3) {
            var n3 = e3._R(2);
            if (n3 == 14e3) {
              t3[n3] = [0, ""];
              t3[n3][0] = e3._R(2);
              while (e3[e3.l]) {
                t3[n3][1] += String.fromCharCode(e3[e3.l]);
                e3.l++;
              }
              e3.l++;
            }
          }
          return t3;
        }
        function M2(e3, r3) {
          var t3 = Jr(5 + e3.length);
          t3._W(2, 14e3);
          t3._W(2, r3);
          for (var a3 = 0; a3 < e3.length; ++a3) {
            var n3 = e3.charCodeAt(a3);
            t3[t3.l++] = n3 > 127 ? 95 : n3;
          }
          t3[t3.l++] = 0;
          return t3;
        }
        var U2 = { 0: { n: "BOF", f: $n }, 1: { n: "EOF" }, 2: { n: "CALCMODE" }, 3: { n: "CALCORDER" }, 4: { n: "SPLIT" }, 5: { n: "SYNC" }, 6: { n: "RANGE", f: f2 }, 7: { n: "WINDOW1" }, 8: { n: "COLW1" }, 9: { n: "WINTWO" }, 10: { n: "COLW2" }, 11: { n: "NAME" }, 12: { n: "BLANK" }, 13: { n: "INTEGER", f: d2 }, 14: { n: "NUMBER", f: p2 }, 15: { n: "LABEL", f: u2 }, 16: { n: "FORMULA", f: w2 }, 24: { n: "TABLE" }, 25: { n: "ORANGE" }, 26: { n: "PRANGE" }, 27: { n: "SRANGE" }, 28: { n: "FRANGE" }, 29: { n: "KRANGE1" }, 32: { n: "HRANGE" }, 35: { n: "KRANGE2" }, 36: { n: "PROTEC" }, 37: { n: "FOOTER" }, 38: { n: "HEADER" }, 39: { n: "SETUP" }, 40: { n: "MARGINS" }, 41: { n: "LABELFMT" }, 42: { n: "TITLES" }, 43: { n: "SHEETJS" }, 45: { n: "GRAPH" }, 46: { n: "NGRAPH" }, 47: { n: "CALCCOUNT" }, 48: { n: "UNFORMATTED" }, 49: { n: "CURSORW12" }, 50: { n: "WINDOW" }, 51: { n: "STRING", f: u2 }, 55: { n: "PASSWORD" }, 56: { n: "LOCKED" }, 60: { n: "QUERY" }, 61: { n: "QUERYNAME" }, 62: { n: "PRINT" }, 63: { n: "PRINTNAME" }, 64: { n: "GRAPH2" }, 65: { n: "GRAPHNAME" }, 66: { n: "ZOOM" }, 67: { n: "SYMSPLIT" }, 68: { n: "NSROWS" }, 69: { n: "NSCOLS" }, 70: { n: "RULER" }, 71: { n: "NNAME" }, 72: { n: "ACOMM" }, 73: { n: "AMACRO" }, 74: { n: "PARSE" }, 102: { n: "PRANGES??" }, 103: { n: "RRANGES??" }, 104: { n: "FNAME??" }, 105: { n: "MRANGES??" }, 65535: { n: "" } };
        var z2 = { 0: { n: "BOF" }, 1: { n: "EOF" }, 2: { n: "PASSWORD" }, 3: { n: "CALCSET" }, 4: { n: "WINDOWSET" }, 5: { n: "SHEETCELLPTR" }, 6: { n: "SHEETLAYOUT" }, 7: { n: "COLUMNWIDTH" }, 8: { n: "HIDDENCOLUMN" }, 9: { n: "USERRANGE" }, 10: { n: "SYSTEMRANGE" }, 11: { n: "ZEROFORCE" }, 12: { n: "SORTKEYDIR" }, 13: { n: "FILESEAL" }, 14: { n: "DATAFILLNUMS" }, 15: { n: "PRINTMAIN" }, 16: { n: "PRINTSTRING" }, 17: { n: "GRAPHMAIN" }, 18: { n: "GRAPHSTRING" }, 19: { n: "??" }, 20: { n: "ERRCELL" }, 21: { n: "NACELL" }, 22: { n: "LABEL16", f: y2 }, 23: { n: "NUMBER17", f: I2 }, 24: { n: "NUMBER18", f: A2 }, 25: { n: "FORMULA19", f: F2 }, 26: { n: "FORMULA1A" }, 27: { n: "XFORMAT", f: L2 }, 28: { n: "DTLABELMISC" }, 29: { n: "DTLABELCELL" }, 30: { n: "GRAPHWINDOW" }, 31: { n: "CPA" }, 32: { n: "LPLAUTO" }, 33: { n: "QUERY" }, 34: { n: "HIDDENSHEET" }, 35: { n: "??" }, 37: { n: "NUMBER25", f: D2 }, 38: { n: "??" }, 39: { n: "NUMBER27", f: P2 }, 40: { n: "FORMULA28", f: N2 }, 142: { n: "??" }, 147: { n: "??" }, 150: { n: "??" }, 151: { n: "??" }, 152: { n: "??" }, 153: { n: "??" }, 154: { n: "??" }, 155: { n: "??" }, 156: { n: "??" }, 163: { n: "??" }, 174: { n: "??" }, 175: { n: "??" }, 176: { n: "??" }, 177: { n: "??" }, 184: { n: "??" }, 185: { n: "??" }, 186: { n: "??" }, 187: { n: "??" }, 188: { n: "??" }, 195: { n: "??" }, 201: { n: "??" }, 205: { n: "??" }, 206: { n: "??" }, 207: { n: "??" }, 208: { n: "??" }, 256: { n: "??" }, 259: { n: "??" }, 260: { n: "??" }, 261: { n: "??" }, 262: { n: "??" }, 263: { n: "??" }, 265: { n: "??" }, 266: { n: "??" }, 267: { n: "??" }, 268: { n: "??" }, 270: { n: "??" }, 271: { n: "??" }, 384: { n: "??" }, 389: { n: "??" }, 390: { n: "??" }, 393: { n: "??" }, 396: { n: "??" }, 512: { n: "??" }, 514: { n: "??" }, 513: { n: "??" }, 516: { n: "??" }, 517: { n: "??" }, 640: { n: "??" }, 641: { n: "??" }, 642: { n: "??" }, 643: { n: "??" }, 644: { n: "??" }, 645: { n: "??" }, 646: { n: "??" }, 647: { n: "??" }, 648: { n: "??" }, 658: { n: "??" }, 659: { n: "??" }, 660: { n: "??" }, 661: { n: "??" }, 662: { n: "??" }, 665: { n: "??" }, 666: { n: "??" }, 768: { n: "??" }, 772: { n: "??" }, 1600: { n: "??" }, 1602: { n: "??" }, 1793: { n: "??" }, 1794: { n: "??" }, 1795: { n: "??" }, 1796: { n: "??" }, 1920: { n: "??" }, 2048: { n: "??" }, 2049: { n: "??" }, 2052: { n: "??" }, 2688: { n: "??" }, 10998: { n: "??" }, 12849: { n: "??" }, 28233: { n: "??" }, 28484: { n: "??" }, 65535: { n: "" } };
        return { sheet_to_wk1: a2, book_to_wk3: n2, to_workbook: r2 };
      }();
      function Ef(e2) {
        var r2 = {}, t2 = e2.match(Re), a2 = 0;
        var n2 = false;
        if (t2)
          for (; a2 != t2.length; ++a2) {
            var s2 = De(t2[a2]);
            switch (s2[0].replace(/\w*:/g, "")) {
              case "<condense":
                break;
              case "<extend":
                break;
              case "<shadow":
                if (!s2.val)
                  break;
              case "<shadow>":
                ;
              case "<shadow/>":
                r2.shadow = 1;
                break;
              case "</shadow>":
                break;
              case "<charset":
                if (s2.val == "1")
                  break;
                r2.cp = i[parseInt(s2.val, 10)];
                break;
              case "<outline":
                if (!s2.val)
                  break;
              case "<outline>":
                ;
              case "<outline/>":
                r2.outline = 1;
                break;
              case "</outline>":
                break;
              case "<rFont":
                r2.name = s2.val;
                break;
              case "<sz":
                r2.sz = s2.val;
                break;
              case "<strike":
                if (!s2.val)
                  break;
              case "<strike>":
                ;
              case "<strike/>":
                r2.strike = 1;
                break;
              case "</strike>":
                break;
              case "<u":
                if (!s2.val)
                  break;
                switch (s2.val) {
                  case "double":
                    r2.uval = "double";
                    break;
                  case "singleAccounting":
                    r2.uval = "single-accounting";
                    break;
                  case "doubleAccounting":
                    r2.uval = "double-accounting";
                    break;
                }
                ;
              case "<u>":
                ;
              case "<u/>":
                r2.u = 1;
                break;
              case "</u>":
                break;
              case "<b":
                if (s2.val == "0")
                  break;
              case "<b>":
                ;
              case "<b/>":
                r2.b = 1;
                break;
              case "</b>":
                break;
              case "<i":
                if (s2.val == "0")
                  break;
              case "<i>":
                ;
              case "<i/>":
                r2.i = 1;
                break;
              case "</i>":
                break;
              case "<color":
                if (s2.rgb)
                  r2.color = s2.rgb.slice(2, 8);
                break;
              case "<family":
                r2.family = s2.val;
                break;
              case "<vertAlign":
                r2.valign = s2.val;
                break;
              case "<scheme":
                break;
              case "<extLst":
                ;
              case "<extLst>":
                ;
              case "</extLst>":
                break;
              case "<ext":
                n2 = true;
                break;
              case "</ext>":
                n2 = false;
                break;
              default:
                if (s2[0].charCodeAt(1) !== 47 && !n2)
                  throw new Error("Unrecognized rich format " + s2[0]);
            }
          }
        return r2;
      }
      var Sf = function() {
        var e2 = er("t"), r2 = er("rPr");
        function t2(t3) {
          var a3 = t3.match(e2);
          if (!a3)
            return { t: "s", v: "" };
          var n3 = { t: "s", v: Me(a3[1]) };
          var i2 = t3.match(r2);
          if (i2)
            n3.s = Ef(i2[1]);
          return n3;
        }
        var a2 = /<(?:\w+:)?r>/g, n2 = /<\/(?:\w+:)?r>/;
        return function i2(e3) {
          return e3.replace(a2, "").split(n2).map(t2).filter(function(e4) {
            return e4.v;
          });
        };
      }();
      var _f = function Qb() {
        var e2 = /(\r\n|\n)/g;
        function r2(e3, r3, t3) {
          var a2 = [];
          if (e3.u)
            a2.push("text-decoration: underline;");
          if (e3.uval)
            a2.push("text-underline-style:" + e3.uval + ";");
          if (e3.sz)
            a2.push("font-size:" + e3.sz + "pt;");
          if (e3.outline)
            a2.push("text-effect: outline;");
          if (e3.shadow)
            a2.push("text-shadow: auto;");
          r3.push('<span style="' + a2.join("") + '">');
          if (e3.b) {
            r3.push("<b>");
            t3.push("</b>");
          }
          if (e3.i) {
            r3.push("<i>");
            t3.push("</i>");
          }
          if (e3.strike) {
            r3.push("<s>");
            t3.push("</s>");
          }
          var n2 = e3.valign || "";
          if (n2 == "superscript" || n2 == "super")
            n2 = "sup";
          else if (n2 == "subscript")
            n2 = "sub";
          if (n2 != "") {
            r3.push("<" + n2 + ">");
            t3.push("</" + n2 + ">");
          }
          t3.push("</span>");
          return e3;
        }
        function t2(t3) {
          var a2 = [[], t3.v, []];
          if (!t3.v)
            return "";
          if (t3.s)
            r2(t3.s, a2[0], a2[2]);
          return a2[0].join("") + a2[1].replace(e2, "<br/>") + a2[2].join("");
        }
        return function a2(e3) {
          return e3.map(t2).join("");
        };
      }();
      var Cf = /<(?:\w+:)?t[^>]*>([^<]*)<\/(?:\w+:)?t>/g, Bf = /<(?:\w+:)?r>/;
      var Tf = /<(?:\w+:)?rPh.*?>([\s\S]*?)<\/(?:\w+:)?rPh>/g;
      function yf(e2, r2) {
        var t2 = r2 ? r2.cellHTML : true;
        var a2 = {};
        if (!e2)
          return { t: "" };
        if (e2.match(/^\s*<(?:\w+:)?t[^>]*>/)) {
          a2.t = Me(Ye(e2.slice(e2.indexOf(">") + 1).split(/<\/(?:\w+:)?t>/)[0] || ""));
          a2.r = Ye(e2);
          if (t2)
            a2.h = Xe(a2.t);
        } else if (e2.match(Bf)) {
          a2.r = Ye(e2);
          a2.t = Me(Ye((e2.replace(Tf, "").match(Cf) || []).join("").replace(Re, "")));
          if (t2)
            a2.h = _f(Sf(a2.r));
        }
        return a2;
      }
      var xf = /<(?:\w+:)?sst([^>]*)>([\s\S]*)<\/(?:\w+:)?sst>/;
      var Af = /<(?:\w+:)?(?:si|sstItem)>/g;
      var If = /<\/(?:\w+:)?(?:si|sstItem)>/;
      function Rf(e2, r2) {
        var t2 = [], a2 = "";
        if (!e2)
          return t2;
        var n2 = e2.match(xf);
        if (n2) {
          a2 = n2[2].replace(Af, "").split(If);
          for (var i2 = 0; i2 != a2.length; ++i2) {
            var s2 = yf(a2[i2].trim(), r2);
            if (s2 != null)
              t2[t2.length] = s2;
          }
          n2 = De(n2[1]);
          t2.Count = n2.count;
          t2.Unique = n2.uniqueCount;
        }
        return t2;
      }
      Ua.SST = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings";
      var Ff = /^\s|\s$|[\t\n\r]/;
      function Of(e2, r2) {
        if (!r2.bookSST)
          return "";
        var t2 = [Ae];
        t2[t2.length] = or("sst", null, { xmlns: hr.main[0], count: e2.Count, uniqueCount: e2.Unique });
        for (var a2 = 0; a2 != e2.length; ++a2) {
          if (e2[a2] == null)
            continue;
          var n2 = e2[a2];
          var i2 = "<si>";
          if (n2.r)
            i2 += n2.r;
          else {
            i2 += "<t";
            if (!n2.t)
              n2.t = "";
            if (n2.t.match(Ff))
              i2 += ' xml:space="preserve"';
            i2 += ">" + He(n2.t) + "</t>";
          }
          i2 += "</si>";
          t2[t2.length] = i2;
        }
        if (t2.length > 2) {
          t2[t2.length] = "</sst>";
          t2[1] = t2[1].replace("/>", ">");
        }
        return t2.join("");
      }
      function Df(e2) {
        return [e2._R(4), e2._R(4)];
      }
      function Pf(e2, r2) {
        var t2 = [];
        var a2 = false;
        Qr(e2, function n2(e3, i2, s2) {
          switch (s2) {
            case 159:
              t2.Count = e3[0];
              t2.Unique = e3[1];
              break;
            case 19:
              t2.push(e3);
              break;
            case 160:
              return true;
            case 35:
              a2 = true;
              break;
            case 36:
              a2 = false;
              break;
            default:
              if (i2.indexOf("Begin") > 0) {
              } else if (i2.indexOf("End") > 0) {
              }
              if (!a2 || r2.WTF)
                throw new Error("Unexpected record " + s2 + " " + i2);
          }
        });
        return t2;
      }
      function Nf(e2, r2) {
        if (!r2)
          r2 = Jr(8);
        r2._W(4, e2.Count);
        r2._W(4, e2.Unique);
        return r2;
      }
      var Lf = Ft;
      function Mf(e2) {
        var r2 = qr();
        et(r2, "BrtBeginSst", Nf(e2));
        for (var t2 = 0; t2 < e2.length; ++t2)
          et(r2, "BrtSSTItem", Lf(e2[t2]));
        et(r2, "BrtEndSst");
        return r2.end();
      }
      function Uf(e2) {
        if (typeof cptable !== "undefined")
          return cptable.utils.encode(t, e2);
        var r2 = [], a2 = e2.split("");
        for (var n2 = 0; n2 < a2.length; ++n2)
          r2[n2] = a2[n2].charCodeAt(0);
        return r2;
      }
      function zf(e2, r2) {
        var t2 = {};
        t2.Major = e2._R(2);
        t2.Minor = e2._R(2);
        if (r2 >= 4)
          e2.l += r2 - 4;
        return t2;
      }
      function Hf(e2) {
        var r2 = {};
        r2.id = e2._R(0, "lpp4");
        r2.R = zf(e2, 4);
        r2.U = zf(e2, 4);
        r2.W = zf(e2, 4);
        return r2;
      }
      function Wf(e2) {
        var r2 = e2._R(4);
        var t2 = e2.l + r2 - 4;
        var a2 = {};
        var n2 = e2._R(4);
        var i2 = [];
        while (n2-- > 0)
          i2.push({ t: e2._R(4), v: e2._R(0, "lpp4") });
        a2.name = e2._R(0, "lpp4");
        a2.comps = i2;
        if (e2.l != t2)
          throw new Error("Bad DataSpaceMapEntry: " + e2.l + " != " + t2);
        return a2;
      }
      function Vf(e2) {
        var r2 = [];
        e2.l += 4;
        var t2 = e2._R(4);
        while (t2-- > 0)
          r2.push(Wf(e2));
        return r2;
      }
      function Xf(e2) {
        var r2 = [];
        e2.l += 4;
        var t2 = e2._R(4);
        while (t2-- > 0)
          r2.push(e2._R(0, "lpp4"));
        return r2;
      }
      function Gf(e2) {
        var r2 = {};
        e2._R(4);
        e2.l += 4;
        r2.id = e2._R(0, "lpp4");
        r2.name = e2._R(0, "lpp4");
        r2.R = zf(e2, 4);
        r2.U = zf(e2, 4);
        r2.W = zf(e2, 4);
        return r2;
      }
      function jf(e2) {
        var r2 = Gf(e2);
        r2.ename = e2._R(0, "8lpp4");
        r2.blksz = e2._R(4);
        r2.cmode = e2._R(4);
        if (e2._R(4) != 4)
          throw new Error("Bad !Primary record");
        return r2;
      }
      function Kf(e2, r2) {
        var t2 = e2.l + r2;
        var a2 = {};
        a2.Flags = e2._R(4) & 63;
        e2.l += 4;
        a2.AlgID = e2._R(4);
        var n2 = false;
        switch (a2.AlgID) {
          case 26126:
            ;
          case 26127:
            ;
          case 26128:
            n2 = a2.Flags == 36;
            break;
          case 26625:
            n2 = a2.Flags == 4;
            break;
          case 0:
            n2 = a2.Flags == 16 || a2.Flags == 4 || a2.Flags == 36;
            break;
          default:
            throw "Unrecognized encryption algorithm: " + a2.AlgID;
        }
        if (!n2)
          throw new Error("Encryption Flags/AlgID mismatch");
        a2.AlgIDHash = e2._R(4);
        a2.KeySize = e2._R(4);
        a2.ProviderType = e2._R(4);
        e2.l += 8;
        a2.CSPName = e2._R(t2 - e2.l >> 1, "utf16le");
        e2.l = t2;
        return a2;
      }
      function $f(e2, r2) {
        var t2 = {}, a2 = e2.l + r2;
        e2.l += 4;
        t2.Salt = e2.slice(e2.l, e2.l + 16);
        e2.l += 16;
        t2.Verifier = e2.slice(e2.l, e2.l + 16);
        e2.l += 16;
        e2._R(4);
        t2.VerifierHash = e2.slice(e2.l, a2);
        e2.l = a2;
        return t2;
      }
      function Yf(e2) {
        var r2 = zf(e2);
        switch (r2.Minor) {
          case 2:
            return [r2.Minor, Zf(e2, r2)];
          case 3:
            return [r2.Minor, Jf(e2, r2)];
          case 4:
            return [r2.Minor, Qf(e2, r2)];
        }
        throw new Error("ECMA-376 Encrypted file unrecognized Version: " + r2.Minor);
      }
      function Zf(e2) {
        var r2 = e2._R(4);
        if ((r2 & 63) != 36)
          throw new Error("EncryptionInfo mismatch");
        var t2 = e2._R(4);
        var a2 = Kf(e2, t2);
        var n2 = $f(e2, e2.length - e2.l);
        return { t: "Std", h: a2, v: n2 };
      }
      function Jf() {
        throw new Error("File is password-protected: ECMA-376 Extensible");
      }
      function Qf(e2) {
        var r2 = ["saltSize", "blockSize", "keyBits", "hashSize", "cipherAlgorithm", "cipherChaining", "hashAlgorithm", "saltValue"];
        e2.l += 4;
        var t2 = e2._R(e2.length - e2.l, "utf8");
        var a2 = {};
        t2.replace(Re, function n2(e3) {
          var t3 = De(e3);
          switch (Pe(t3[0])) {
            case "<?xml":
              break;
            case "<encryption":
              ;
            case "</encryption>":
              break;
            case "<keyData":
              r2.forEach(function(e4) {
                a2[e4] = t3[e4];
              });
              break;
            case "<dataIntegrity":
              a2.encryptedHmacKey = t3.encryptedHmacKey;
              a2.encryptedHmacValue = t3.encryptedHmacValue;
              break;
            case "<keyEncryptors>":
              ;
            case "<keyEncryptors":
              a2.encs = [];
              break;
            case "</keyEncryptors>":
              break;
            case "<keyEncryptor":
              a2.uri = t3.uri;
              break;
            case "</keyEncryptor>":
              break;
            case "<encryptedKey":
              a2.encs.push(t3);
              break;
            default:
              throw t3[0];
          }
        });
        return a2;
      }
      function qf(e2, r2) {
        var t2 = {};
        var a2 = t2.EncryptionVersionInfo = zf(e2, 4);
        r2 -= 4;
        if (a2.Minor != 2)
          throw new Error("unrecognized minor version code: " + a2.Minor);
        if (a2.Major > 4 || a2.Major < 2)
          throw new Error("unrecognized major version code: " + a2.Major);
        t2.Flags = e2._R(4);
        r2 -= 4;
        var n2 = e2._R(4);
        r2 -= 4;
        t2.EncryptionHeader = Kf(e2, n2);
        r2 -= n2;
        t2.EncryptionVerifier = $f(e2, r2);
        return t2;
      }
      function el(e2) {
        var r2 = {};
        var t2 = r2.EncryptionVersionInfo = zf(e2, 4);
        if (t2.Major != 1 || t2.Minor != 1)
          throw "unrecognized version code " + t2.Major + " : " + t2.Minor;
        r2.Salt = e2._R(16);
        r2.EncryptedVerifier = e2._R(16);
        r2.EncryptedVerifierHash = e2._R(16);
        return r2;
      }
      function rl(e2) {
        var r2 = 0, t2;
        var a2 = Uf(e2);
        var n2 = a2.length + 1, i2, s2;
        var f2, l2, o2;
        t2 = _(n2);
        t2[0] = a2.length;
        for (i2 = 1; i2 != n2; ++i2)
          t2[i2] = a2[i2 - 1];
        for (i2 = n2 - 1; i2 >= 0; --i2) {
          s2 = t2[i2];
          f2 = (r2 & 16384) === 0 ? 0 : 1;
          l2 = r2 << 1 & 32767;
          o2 = f2 | l2;
          r2 = o2 ^ s2;
        }
        return r2 ^ 52811;
      }
      var tl = function() {
        var e2 = [187, 255, 255, 186, 255, 255, 185, 128, 0, 190, 15, 0, 191, 15, 0];
        var r2 = [57840, 7439, 52380, 33984, 4364, 3600, 61902, 12606, 6258, 57657, 54287, 34041, 10252, 43370, 20163];
        var t2 = [44796, 19929, 39858, 10053, 20106, 40212, 10761, 31585, 63170, 64933, 60267, 50935, 40399, 11199, 17763, 35526, 1453, 2906, 5812, 11624, 23248, 885, 1770, 3540, 7080, 14160, 28320, 56640, 55369, 41139, 20807, 41614, 21821, 43642, 17621, 28485, 56970, 44341, 19019, 38038, 14605, 29210, 60195, 50791, 40175, 10751, 21502, 43004, 24537, 18387, 36774, 3949, 7898, 15796, 31592, 63184, 47201, 24803, 49606, 37805, 14203, 28406, 56812, 17824, 35648, 1697, 3394, 6788, 13576, 27152, 43601, 17539, 35078, 557, 1114, 2228, 4456, 30388, 60776, 51953, 34243, 7079, 14158, 28316, 14128, 28256, 56512, 43425, 17251, 34502, 7597, 13105, 26210, 52420, 35241, 883, 1766, 3532, 4129, 8258, 16516, 33032, 4657, 9314, 18628];
        var a2 = function(e3) {
          return (e3 / 2 | e3 * 128) & 255;
        };
        var n2 = function(e3, r3) {
          return a2(e3 ^ r3);
        };
        var i2 = function(e3) {
          var a3 = r2[e3.length - 1];
          var n3 = 104;
          for (var i3 = e3.length - 1; i3 >= 0; --i3) {
            var s2 = e3[i3];
            for (var f2 = 0; f2 != 7; ++f2) {
              if (s2 & 64)
                a3 ^= t2[n3];
              s2 *= 2;
              --n3;
            }
          }
          return a3;
        };
        return function(r3) {
          var t3 = Uf(r3);
          var a3 = i2(t3);
          var s2 = t3.length;
          var f2 = _(16);
          for (var l2 = 0; l2 != 16; ++l2)
            f2[l2] = 0;
          var o2, c2, u2;
          if ((s2 & 1) === 1) {
            o2 = a3 >> 8;
            f2[s2] = n2(e2[0], o2);
            --s2;
            o2 = a3 & 255;
            c2 = t3[t3.length - 1];
            f2[s2] = n2(c2, o2);
          }
          while (s2 > 0) {
            --s2;
            o2 = a3 >> 8;
            f2[s2] = n2(t3[s2], o2);
            --s2;
            o2 = a3 & 255;
            f2[s2] = n2(t3[s2], o2);
          }
          s2 = 15;
          u2 = 15 - t3.length;
          while (u2 > 0) {
            o2 = a3 >> 8;
            f2[s2] = n2(e2[u2], o2);
            --s2;
            --u2;
            o2 = a3 & 255;
            f2[s2] = n2(t3[s2], o2);
            --s2;
            --u2;
          }
          return f2;
        };
      }();
      var al = function(e2, r2, t2, a2, n2) {
        if (!n2)
          n2 = r2;
        if (!a2)
          a2 = tl(e2);
        var i2, s2;
        for (i2 = 0; i2 != r2.length; ++i2) {
          s2 = r2[i2];
          s2 ^= a2[t2];
          s2 = (s2 >> 5 | s2 << 3) & 255;
          n2[i2] = s2;
          ++t2;
        }
        return [n2, t2, a2];
      };
      var nl = function(e2) {
        var r2 = 0, t2 = tl(e2);
        return function(e3) {
          var a2 = al("", e3, r2, t2);
          r2 = a2[1];
          return a2[0];
        };
      };
      function il(e2, r2, t2, a2) {
        var n2 = { key: $n(e2), verificationBytes: $n(e2) };
        if (t2.password)
          n2.verifier = rl(t2.password);
        a2.valid = n2.verificationBytes === n2.verifier;
        if (a2.valid)
          a2.insitu = nl(t2.password);
        return n2;
      }
      function sl(e2, r2, t2) {
        var a2 = t2 || {};
        a2.Info = e2._R(2);
        e2.l -= 2;
        if (a2.Info === 1)
          a2.Data = el(e2, r2);
        else
          a2.Data = qf(e2, r2);
        return a2;
      }
      function fl(e2, r2, t2) {
        var a2 = { Type: t2.biff >= 8 ? e2._R(2) : 0 };
        if (a2.Type)
          sl(e2, r2 - 2, a2);
        else
          il(e2, t2.biff >= 8 ? r2 : r2 - 2, t2, a2);
        return a2;
      }
      var ll = function() {
        function e2(e3, t3) {
          switch (t3.type) {
            case "base64":
              return r2(g.decode(e3), t3);
            case "binary":
              return r2(e3, t3);
            case "buffer":
              return r2(w && Buffer.isBuffer(e3) ? e3.toString("binary") : y(e3), t3);
            case "array":
              return r2(oe(e3), t3);
          }
          throw new Error("Unrecognized type " + t3.type);
        }
        function r2(e3, r3) {
          var t3 = r3 || {};
          var a3 = t3.dense ? [] : {};
          var n2 = e3.match(/\\trowd.*?\\row\b/g);
          if (!n2.length)
            throw new Error("RTF missing table");
          var i2 = { s: { c: 0, r: 0 }, e: { c: 0, r: n2.length - 1 } };
          n2.forEach(function(e4, r4) {
            if (Array.isArray(a3))
              a3[r4] = [];
            var t4 = /\\\w+\b/g;
            var n3 = 0;
            var s2;
            var f2 = -1;
            while (s2 = t4.exec(e4)) {
              switch (s2[0]) {
                case "\\cell":
                  var l2 = e4.slice(n3, t4.lastIndex - s2[0].length);
                  if (l2[0] == " ")
                    l2 = l2.slice(1);
                  ++f2;
                  if (l2.length) {
                    var o2 = { v: l2, t: "s" };
                    if (Array.isArray(a3))
                      a3[r4][f2] = o2;
                    else
                      a3[bt({ r: r4, c: f2 })] = o2;
                  }
                  break;
              }
              n3 = t4.lastIndex;
            }
            if (f2 > i2.e.c)
              i2.e.c = f2;
          });
          a3["!ref"] = wt(i2);
          return a3;
        }
        function t2(r3, t3) {
          return _t(e2(r3, t3), t3);
        }
        function a2(e3) {
          var r3 = ["{\\rtf1\\ansi"];
          var t3 = kt(e3["!ref"]), a3;
          var n2 = Array.isArray(e3);
          for (var i2 = t3.s.r; i2 <= t3.e.r; ++i2) {
            r3.push("\\trowd\\trautofit1");
            for (var s2 = t3.s.c; s2 <= t3.e.c; ++s2)
              r3.push("\\cellx" + (s2 + 1));
            r3.push("\\pard\\intbl");
            for (s2 = t3.s.c; s2 <= t3.e.c; ++s2) {
              var f2 = bt({ r: i2, c: s2 });
              a3 = n2 ? (e3[i2] || [])[s2] : e3[f2];
              if (!a3 || a3.v == null && (!a3.f || a3.F))
                continue;
              r3.push(" " + (a3.w || (St(a3), a3.w)));
              r3.push("\\cell");
            }
            r3.push("\\pard\\intbl\\row");
          }
          return r3.join("") + "}";
        }
        return { to_workbook: t2, to_sheet: e2, from_sheet: a2 };
      }();
      function ol(e2) {
        var r2 = e2.slice(e2[0] === "#" ? 1 : 0).slice(0, 6);
        return [parseInt(r2.slice(0, 2), 16), parseInt(r2.slice(2, 4), 16), parseInt(r2.slice(4, 6), 16)];
      }
      function cl(e2) {
        for (var r2 = 0, t2 = 1; r2 != 3; ++r2)
          t2 = t2 * 256 + (e2[r2] > 255 ? 255 : e2[r2] < 0 ? 0 : e2[r2]);
        return t2.toString(16).toUpperCase().slice(1);
      }
      function ul(e2) {
        var r2 = e2[0] / 255, t2 = e2[1] / 255, a2 = e2[2] / 255;
        var n2 = Math.max(r2, t2, a2), i2 = Math.min(r2, t2, a2), s2 = n2 - i2;
        if (s2 === 0)
          return [0, 0, r2];
        var f2 = 0, l2 = 0, o2 = n2 + i2;
        l2 = s2 / (o2 > 1 ? 2 - o2 : o2);
        switch (n2) {
          case r2:
            f2 = ((t2 - a2) / s2 + 6) % 6;
            break;
          case t2:
            f2 = (a2 - r2) / s2 + 2;
            break;
          case a2:
            f2 = (r2 - t2) / s2 + 4;
            break;
        }
        return [f2 / 6, l2, o2 / 2];
      }
      function hl(e2) {
        var r2 = e2[0], t2 = e2[1], a2 = e2[2];
        var n2 = t2 * 2 * (a2 < 0.5 ? a2 : 1 - a2), i2 = a2 - n2 / 2;
        var s2 = [i2, i2, i2], f2 = 6 * r2;
        var l2;
        if (t2 !== 0)
          switch (f2 | 0) {
            case 0:
              ;
            case 6:
              l2 = n2 * f2;
              s2[0] += n2;
              s2[1] += l2;
              break;
            case 1:
              l2 = n2 * (2 - f2);
              s2[0] += l2;
              s2[1] += n2;
              break;
            case 2:
              l2 = n2 * (f2 - 2);
              s2[1] += n2;
              s2[2] += l2;
              break;
            case 3:
              l2 = n2 * (4 - f2);
              s2[1] += l2;
              s2[2] += n2;
              break;
            case 4:
              l2 = n2 * (f2 - 4);
              s2[2] += n2;
              s2[0] += l2;
              break;
            case 5:
              l2 = n2 * (6 - f2);
              s2[2] += l2;
              s2[0] += n2;
              break;
          }
        for (var o2 = 0; o2 != 3; ++o2)
          s2[o2] = Math.round(s2[o2] * 255);
        return s2;
      }
      function dl(e2, r2) {
        if (r2 === 0)
          return e2;
        var t2 = ul(ol(e2));
        if (r2 < 0)
          t2[2] = t2[2] * (1 + r2);
        else
          t2[2] = 1 - (1 - t2[2]) * (1 - r2);
        return cl(hl(t2));
      }
      var vl = 6, pl = 15, ml = 1, bl = vl;
      function gl(e2) {
        return Math.floor((e2 + Math.round(128 / bl) / 256) * bl);
      }
      function wl(e2) {
        return Math.floor((e2 - 5) / bl * 100 + 0.5) / 100;
      }
      function kl(e2) {
        return Math.round((e2 * bl + 5) / bl * 256) / 256;
      }
      function El(e2) {
        return kl(wl(gl(e2)));
      }
      function Sl(e2) {
        var r2 = Math.abs(e2 - El(e2)), t2 = bl;
        if (r2 > 5e-3) {
          for (bl = ml; bl < pl; ++bl)
            if (Math.abs(e2 - El(e2)) <= r2) {
              r2 = Math.abs(e2 - El(e2));
              t2 = bl;
            }
        }
        bl = t2;
      }
      function _l(e2) {
        if (e2.width) {
          e2.wpx = gl(e2.width);
          e2.wch = wl(e2.wpx);
          e2.MDW = bl;
        } else if (e2.wpx) {
          e2.wch = wl(e2.wpx);
          e2.width = kl(e2.wch);
          e2.MDW = bl;
        } else if (typeof e2.wch == "number") {
          e2.width = kl(e2.wch);
          e2.wpx = gl(e2.width);
          e2.MDW = bl;
        }
        if (e2.customWidth)
          delete e2.customWidth;
      }
      var Cl = 96, Bl = Cl;
      function Tl(e2) {
        return e2 * 96 / Bl;
      }
      function yl(e2) {
        return e2 * Bl / 96;
      }
      var xl = { None: "none", Solid: "solid", Gray50: "mediumGray", Gray75: "darkGray", Gray25: "lightGray", HorzStripe: "darkHorizontal", VertStripe: "darkVertical", ReverseDiagStripe: "darkDown", DiagStripe: "darkUp", DiagCross: "darkGrid", ThickDiagCross: "darkTrellis", ThinHorzStripe: "lightHorizontal", ThinVertStripe: "lightVertical", ThinReverseDiagStripe: "lightDown", ThinHorzCross: "lightGrid" };
      function Al(e2, r2, t2, a2) {
        r2.Borders = [];
        var n2 = {};
        var i2 = false;
        (e2[0].match(Re) || []).forEach(function(e3) {
          var t3 = De(e3);
          switch (Pe(t3[0])) {
            case "<borders":
              ;
            case "<borders>":
              ;
            case "</borders>":
              break;
            case "<border":
              ;
            case "<border>":
              ;
            case "<border/>":
              n2 = {};
              if (t3.diagonalUp)
                n2.diagonalUp = $e(t3.diagonalUp);
              if (t3.diagonalDown)
                n2.diagonalDown = $e(t3.diagonalDown);
              r2.Borders.push(n2);
              break;
            case "</border>":
              break;
            case "<left/>":
              break;
            case "<left":
              ;
            case "<left>":
              break;
            case "</left>":
              break;
            case "<right/>":
              break;
            case "<right":
              ;
            case "<right>":
              break;
            case "</right>":
              break;
            case "<top/>":
              break;
            case "<top":
              ;
            case "<top>":
              break;
            case "</top>":
              break;
            case "<bottom/>":
              break;
            case "<bottom":
              ;
            case "<bottom>":
              break;
            case "</bottom>":
              break;
            case "<diagonal":
              ;
            case "<diagonal>":
              ;
            case "<diagonal/>":
              break;
            case "</diagonal>":
              break;
            case "<horizontal":
              ;
            case "<horizontal>":
              ;
            case "<horizontal/>":
              break;
            case "</horizontal>":
              break;
            case "<vertical":
              ;
            case "<vertical>":
              ;
            case "<vertical/>":
              break;
            case "</vertical>":
              break;
            case "<start":
              ;
            case "<start>":
              ;
            case "<start/>":
              break;
            case "</start>":
              break;
            case "<end":
              ;
            case "<end>":
              ;
            case "<end/>":
              break;
            case "</end>":
              break;
            case "<color":
              ;
            case "<color>":
              break;
            case "<color/>":
              ;
            case "</color>":
              break;
            case "<extLst":
              ;
            case "<extLst>":
              ;
            case "</extLst>":
              break;
            case "<ext":
              i2 = true;
              break;
            case "</ext>":
              i2 = false;
              break;
            default:
              if (a2 && a2.WTF) {
                if (!i2)
                  throw new Error("unrecognized " + t3[0] + " in borders");
              }
              ;
          }
        });
      }
      function Il(e2, r2, t2, a2) {
        r2.Fills = [];
        var n2 = {};
        var i2 = false;
        (e2[0].match(Re) || []).forEach(function(e3) {
          var t3 = De(e3);
          switch (Pe(t3[0])) {
            case "<fills":
              ;
            case "<fills>":
              ;
            case "</fills>":
              break;
            case "<fill>":
              ;
            case "<fill":
              ;
            case "<fill/>":
              n2 = {};
              r2.Fills.push(n2);
              break;
            case "</fill>":
              break;
            case "<gradientFill>":
              break;
            case "<gradientFill":
              ;
            case "</gradientFill>":
              r2.Fills.push(n2);
              n2 = {};
              break;
            case "<patternFill":
              ;
            case "<patternFill>":
              if (t3.patternType)
                n2.patternType = t3.patternType;
              break;
            case "<patternFill/>":
              ;
            case "</patternFill>":
              break;
            case "<bgColor":
              if (!n2.bgColor)
                n2.bgColor = {};
              if (t3.indexed)
                n2.bgColor.indexed = parseInt(t3.indexed, 10);
              if (t3.theme)
                n2.bgColor.theme = parseInt(t3.theme, 10);
              if (t3.tint)
                n2.bgColor.tint = parseFloat(t3.tint);
              if (t3.rgb)
                n2.bgColor.rgb = t3.rgb.slice(-6);
              break;
            case "<bgColor/>":
              ;
            case "</bgColor>":
              break;
            case "<fgColor":
              if (!n2.fgColor)
                n2.fgColor = {};
              if (t3.theme)
                n2.fgColor.theme = parseInt(t3.theme, 10);
              if (t3.tint)
                n2.fgColor.tint = parseFloat(t3.tint);
              if (t3.rgb != null)
                n2.fgColor.rgb = t3.rgb.slice(-6);
              break;
            case "<fgColor/>":
              ;
            case "</fgColor>":
              break;
            case "<stop":
              ;
            case "<stop/>":
              break;
            case "</stop>":
              break;
            case "<color":
              ;
            case "<color/>":
              break;
            case "</color>":
              break;
            case "<extLst":
              ;
            case "<extLst>":
              ;
            case "</extLst>":
              break;
            case "<ext":
              i2 = true;
              break;
            case "</ext>":
              i2 = false;
              break;
            default:
              if (a2 && a2.WTF) {
                if (!i2)
                  throw new Error("unrecognized " + t3[0] + " in fills");
              }
              ;
          }
        });
      }
      function Rl(e2, r2, t2, a2) {
        r2.Fonts = [];
        var n2 = {};
        var s2 = false;
        (e2[0].match(Re) || []).forEach(function(e3) {
          var f2 = De(e3);
          switch (Pe(f2[0])) {
            case "<fonts":
              ;
            case "<fonts>":
              ;
            case "</fonts>":
              break;
            case "<font":
              ;
            case "<font>":
              break;
            case "</font>":
              ;
            case "<font/>":
              r2.Fonts.push(n2);
              n2 = {};
              break;
            case "<name":
              if (f2.val)
                n2.name = Ye(f2.val);
              break;
            case "<name/>":
              ;
            case "</name>":
              break;
            case "<b":
              n2.bold = f2.val ? $e(f2.val) : 1;
              break;
            case "<b/>":
              n2.bold = 1;
              break;
            case "<i":
              n2.italic = f2.val ? $e(f2.val) : 1;
              break;
            case "<i/>":
              n2.italic = 1;
              break;
            case "<u":
              switch (f2.val) {
                case "none":
                  n2.underline = 0;
                  break;
                case "single":
                  n2.underline = 1;
                  break;
                case "double":
                  n2.underline = 2;
                  break;
                case "singleAccounting":
                  n2.underline = 33;
                  break;
                case "doubleAccounting":
                  n2.underline = 34;
                  break;
              }
              break;
            case "<u/>":
              n2.underline = 1;
              break;
            case "<strike":
              n2.strike = f2.val ? $e(f2.val) : 1;
              break;
            case "<strike/>":
              n2.strike = 1;
              break;
            case "<outline":
              n2.outline = f2.val ? $e(f2.val) : 1;
              break;
            case "<outline/>":
              n2.outline = 1;
              break;
            case "<shadow":
              n2.shadow = f2.val ? $e(f2.val) : 1;
              break;
            case "<shadow/>":
              n2.shadow = 1;
              break;
            case "<condense":
              n2.condense = f2.val ? $e(f2.val) : 1;
              break;
            case "<condense/>":
              n2.condense = 1;
              break;
            case "<extend":
              n2.extend = f2.val ? $e(f2.val) : 1;
              break;
            case "<extend/>":
              n2.extend = 1;
              break;
            case "<sz":
              if (f2.val)
                n2.sz = +f2.val;
              break;
            case "<sz/>":
              ;
            case "</sz>":
              break;
            case "<vertAlign":
              if (f2.val)
                n2.vertAlign = f2.val;
              break;
            case "<vertAlign/>":
              ;
            case "</vertAlign>":
              break;
            case "<family":
              if (f2.val)
                n2.family = parseInt(f2.val, 10);
              break;
            case "<family/>":
              ;
            case "</family>":
              break;
            case "<scheme":
              if (f2.val)
                n2.scheme = f2.val;
              break;
            case "<scheme/>":
              ;
            case "</scheme>":
              break;
            case "<charset":
              if (f2.val == "1")
                break;
              f2.codepage = i[parseInt(f2.val, 10)];
              break;
            case "<color":
              if (!n2.color)
                n2.color = {};
              if (f2.auto)
                n2.color.auto = $e(f2.auto);
              if (f2.rgb)
                n2.color.rgb = f2.rgb.slice(-6);
              else if (f2.indexed) {
                n2.color.index = parseInt(f2.indexed, 10);
                var l2 = xa[n2.color.index];
                if (n2.color.index == 81)
                  l2 = xa[1];
                if (!l2)
                  l2 = xa[1];
                n2.color.rgb = l2[0].toString(16) + l2[1].toString(16) + l2[2].toString(16);
              } else if (f2.theme) {
                n2.color.theme = parseInt(f2.theme, 10);
                if (f2.tint)
                  n2.color.tint = parseFloat(f2.tint);
                if (f2.theme && t2.themeElements && t2.themeElements.clrScheme) {
                  n2.color.rgb = dl(t2.themeElements.clrScheme[n2.color.theme].rgb, n2.color.tint || 0);
                }
              }
              break;
            case "<color/>":
              ;
            case "</color>":
              break;
            case "<AlternateContent":
              s2 = true;
              break;
            case "</AlternateContent>":
              s2 = false;
              break;
            case "<extLst":
              ;
            case "<extLst>":
              ;
            case "</extLst>":
              break;
            case "<ext":
              s2 = true;
              break;
            case "</ext>":
              s2 = false;
              break;
            default:
              if (a2 && a2.WTF) {
                if (!s2)
                  throw new Error("unrecognized " + f2[0] + " in fonts");
              }
              ;
          }
        });
      }
      function Fl(e2, r2, t2) {
        r2.NumberFmt = [];
        var a2 = K(O._table);
        for (var n2 = 0; n2 < a2.length; ++n2)
          r2.NumberFmt[a2[n2]] = O._table[a2[n2]];
        var i2 = e2[0].match(Re);
        if (!i2)
          return;
        for (n2 = 0; n2 < i2.length; ++n2) {
          var s2 = De(i2[n2]);
          switch (Pe(s2[0])) {
            case "<numFmts":
              ;
            case "</numFmts>":
              ;
            case "<numFmts/>":
              ;
            case "<numFmts>":
              break;
            case "<numFmt":
              {
                var f2 = Me(Ye(s2.formatCode)), l2 = parseInt(s2.numFmtId, 10);
                r2.NumberFmt[l2] = f2;
                if (l2 > 0) {
                  if (l2 > 392) {
                    for (l2 = 392; l2 > 60; --l2)
                      if (r2.NumberFmt[l2] == null)
                        break;
                    r2.NumberFmt[l2] = f2;
                  }
                  O.load(f2, l2);
                }
              }
              break;
            case "</numFmt>":
              break;
            default:
              if (t2.WTF)
                throw new Error("unrecognized " + s2[0] + " in numFmts");
          }
        }
      }
      function Ol(e2) {
        var r2 = ["<numFmts>"];
        [[5, 8], [23, 26], [41, 44], [50, 392]].forEach(function(t2) {
          for (var a2 = t2[0]; a2 <= t2[1]; ++a2)
            if (e2[a2] != null)
              r2[r2.length] = or("numFmt", null, { numFmtId: a2, formatCode: He(e2[a2]) });
        });
        if (r2.length === 1)
          return "";
        r2[r2.length] = "</numFmts>";
        r2[0] = or("numFmts", null, { count: r2.length - 2 }).replace("/>", ">");
        return r2.join("");
      }
      var Dl = ["numFmtId", "fillId", "fontId", "borderId", "xfId"];
      var Pl = ["applyAlignment", "applyBorder", "applyFill", "applyFont", "applyNumberFormat", "applyProtection", "pivotButton", "quotePrefix"];
      function Nl(e2, r2, t2) {
        r2.CellXf = [];
        var a2;
        var n2 = false;
        (e2[0].match(Re) || []).forEach(function(e3) {
          var i2 = De(e3), s2 = 0;
          switch (Pe(i2[0])) {
            case "<cellXfs":
              ;
            case "<cellXfs>":
              ;
            case "<cellXfs/>":
              ;
            case "</cellXfs>":
              break;
            case "<xf":
              ;
            case "<xf/>":
              a2 = i2;
              delete a2[0];
              for (s2 = 0; s2 < Dl.length; ++s2)
                if (a2[Dl[s2]])
                  a2[Dl[s2]] = parseInt(a2[Dl[s2]], 10);
              for (s2 = 0; s2 < Pl.length; ++s2)
                if (a2[Pl[s2]])
                  a2[Pl[s2]] = $e(a2[Pl[s2]]);
              if (r2.NumberFmt && a2.numFmtId > 392) {
                for (s2 = 392; s2 > 60; --s2)
                  if (r2.NumberFmt[a2.numFmtId] == r2.NumberFmt[s2]) {
                    a2.numFmtId = s2;
                    break;
                  }
              }
              r2.CellXf.push(a2);
              break;
            case "</xf>":
              break;
            case "<alignment":
              ;
            case "<alignment/>":
              var f2 = {};
              if (i2.vertical)
                f2.vertical = i2.vertical;
              if (i2.horizontal)
                f2.horizontal = i2.horizontal;
              if (i2.textRotation != null)
                f2.textRotation = i2.textRotation;
              if (i2.indent)
                f2.indent = i2.indent;
              if (i2.wrapText)
                f2.wrapText = $e(i2.wrapText);
              a2.alignment = f2;
              break;
            case "</alignment>":
              break;
            case "<protection":
              break;
            case "</protection>":
              ;
            case "<protection/>":
              break;
            case "<AlternateContent":
              n2 = true;
              break;
            case "</AlternateContent>":
              n2 = false;
              break;
            case "<extLst":
              ;
            case "<extLst>":
              ;
            case "</extLst>":
              break;
            case "<ext":
              n2 = true;
              break;
            case "</ext>":
              n2 = false;
              break;
            default:
              if (t2 && t2.WTF) {
                if (!n2)
                  throw new Error("unrecognized " + i2[0] + " in cellXfs");
              }
              ;
          }
        });
      }
      function Ll(e2) {
        var r2 = [];
        r2[r2.length] = or("cellXfs", null);
        e2.forEach(function(e3) {
          r2[r2.length] = or("xf", null, e3);
        });
        r2[r2.length] = "</cellXfs>";
        if (r2.length === 2)
          return "";
        r2[0] = or("cellXfs", null, { count: r2.length - 2 }).replace("/>", ">");
        return r2.join("");
      }
      var Ml = function qb() {
        var e2 = /<(?:\w+:)?numFmts([^>]*)>[\S\s]*?<\/(?:\w+:)?numFmts>/;
        var r2 = /<(?:\w+:)?cellXfs([^>]*)>[\S\s]*?<\/(?:\w+:)?cellXfs>/;
        var t2 = /<(?:\w+:)?fills([^>]*)>[\S\s]*?<\/(?:\w+:)?fills>/;
        var a2 = /<(?:\w+:)?fonts([^>]*)>[\S\s]*?<\/(?:\w+:)?fonts>/;
        var n2 = /<(?:\w+:)?borders([^>]*)>[\S\s]*?<\/(?:\w+:)?borders>/;
        return function i2(s2, f2, l2) {
          var o2 = {};
          if (!s2)
            return o2;
          s2 = s2.replace(/<!--([\s\S]*?)-->/gm, "").replace(/<!DOCTYPE[^\[]*\[[^\]]*\]>/gm, "");
          var c2;
          if (c2 = s2.match(e2))
            Fl(c2, o2, l2);
          if (c2 = s2.match(a2))
            Rl(c2, o2, f2, l2);
          if (c2 = s2.match(t2))
            Il(c2, o2, f2, l2);
          if (c2 = s2.match(n2))
            Al(c2, o2, f2, l2);
          if (c2 = s2.match(r2))
            Nl(c2, o2, l2);
          return o2;
        };
      }();
      var Ul = or("styleSheet", null, { xmlns: hr.main[0], "xmlns:vt": hr.vt });
      Ua.STY = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles";
      function zl(e2, r2) {
        var t2 = [Ae, Ul], a2;
        if (e2.SSF && (a2 = Ol(e2.SSF)) != null)
          t2[t2.length] = a2;
        t2[t2.length] = '<fonts count="1"><font><sz val="12"/><color theme="1"/><name val="Calibri"/><family val="2"/><scheme val="minor"/></font></fonts>';
        t2[t2.length] = '<fills count="2"><fill><patternFill patternType="none"/></fill><fill><patternFill patternType="gray125"/></fill></fills>';
        t2[t2.length] = '<borders count="1"><border><left/><right/><top/><bottom/><diagonal/></border></borders>';
        t2[t2.length] = '<cellStyleXfs count="1"><xf numFmtId="0" fontId="0" fillId="0" borderId="0"/></cellStyleXfs>';
        if (a2 = Ll(r2.cellXfs))
          t2[t2.length] = a2;
        t2[t2.length] = '<cellStyles count="1"><cellStyle name="Normal" xfId="0" builtinId="0"/></cellStyles>';
        t2[t2.length] = '<dxfs count="0"/>';
        t2[t2.length] = '<tableStyles count="0" defaultTableStyle="TableStyleMedium9" defaultPivotStyle="PivotStyleMedium4"/>';
        if (t2.length > 2) {
          t2[t2.length] = "</styleSheet>";
          t2[1] = t2[1].replace("/>", ">");
        }
        return t2.join("");
      }
      function Hl(e2, r2) {
        var t2 = e2._R(2);
        var a2 = yt(e2, r2 - 2);
        return [t2, a2];
      }
      function Wl(e2, r2, t2) {
        if (!t2)
          t2 = Jr(6 + 4 * r2.length);
        t2._W(2, e2);
        xt(r2, t2);
        var a2 = t2.length > t2.l ? t2.slice(0, t2.l) : t2;
        if (t2.l == null)
          t2.l = t2.length;
        return a2;
      }
      function Vl(e2, r2, t2) {
        var a2 = {};
        a2.sz = e2._R(2) / 20;
        var n2 = ta(e2, 2, t2);
        if (n2.fItalic)
          a2.italic = 1;
        if (n2.fCondense)
          a2.condense = 1;
        if (n2.fExtend)
          a2.extend = 1;
        if (n2.fShadow)
          a2.shadow = 1;
        if (n2.fOutline)
          a2.outline = 1;
        if (n2.fStrikeout)
          a2.strike = 1;
        var i2 = e2._R(2);
        if (i2 === 700)
          a2.bold = 1;
        switch (e2._R(2)) {
          case 1:
            a2.vertAlign = "superscript";
            break;
          case 2:
            a2.vertAlign = "subscript";
            break;
        }
        var s2 = e2._R(1);
        if (s2 != 0)
          a2.underline = s2;
        var f2 = e2._R(1);
        if (f2 > 0)
          a2.family = f2;
        var l2 = e2._R(1);
        if (l2 > 0)
          a2.charset = l2;
        e2.l++;
        a2.color = ea(e2, 8);
        switch (e2._R(1)) {
          case 1:
            a2.scheme = "major";
            break;
          case 2:
            a2.scheme = "minor";
            break;
        }
        a2.name = yt(e2, r2 - 21);
        return a2;
      }
      function Xl(e2, r2) {
        if (!r2)
          r2 = Jr(25 + 4 * 32);
        r2._W(2, e2.sz * 20);
        aa(e2, r2);
        r2._W(2, e2.bold ? 700 : 400);
        var t2 = 0;
        if (e2.vertAlign == "superscript")
          t2 = 1;
        else if (e2.vertAlign == "subscript")
          t2 = 2;
        r2._W(2, t2);
        r2._W(1, e2.underline || 0);
        r2._W(1, e2.family || 0);
        r2._W(1, e2.charset || 0);
        r2._W(1, 0);
        ra(e2.color, r2);
        var a2 = 0;
        if (e2.scheme == "major")
          a2 = 1;
        if (e2.scheme == "minor")
          a2 = 2;
        r2._W(1, a2);
        xt(e2.name, r2);
        return r2.length > r2.l ? r2.slice(0, r2.l) : r2;
      }
      var Gl = ["none", "solid", "mediumGray", "darkGray", "lightGray", "darkHorizontal", "darkVertical", "darkDown", "darkUp", "darkGrid", "darkTrellis", "lightHorizontal", "lightVertical", "lightDown", "lightUp", "lightGrid", "lightTrellis", "gray125", "gray0625"];
      var jl = Z(Gl);
      var Kl = Zr;
      function $l(e2, r2) {
        if (!r2)
          r2 = Jr(4 * 3 + 8 * 7 + 16 * 1);
        var t2 = jl[e2.patternType];
        if (t2 == null)
          t2 = 40;
        r2._W(4, t2);
        var a2 = 0;
        if (t2 != 40) {
          ra({ auto: 1 }, r2);
          ra({ auto: 1 }, r2);
          for (; a2 < 12; ++a2)
            r2._W(4, 0);
        } else {
          for (; a2 < 4; ++a2)
            r2._W(4, 0);
          for (; a2 < 12; ++a2)
            r2._W(4, 0);
        }
        return r2.length > r2.l ? r2.slice(0, r2.l) : r2;
      }
      function Yl(e2, r2) {
        var t2 = e2.l + r2;
        var a2 = e2._R(2);
        var n2 = e2._R(2);
        e2.l = t2;
        return { ixfe: a2, numFmtId: n2 };
      }
      function Zl(e2, r2, t2) {
        if (!t2)
          t2 = Jr(16);
        t2._W(2, r2 || 0);
        t2._W(2, e2.numFmtId || 0);
        t2._W(2, 0);
        t2._W(2, 0);
        t2._W(2, 0);
        t2._W(1, 0);
        t2._W(1, 0);
        var a2 = 0;
        t2._W(1, a2);
        t2._W(1, 0);
        t2._W(1, 0);
        t2._W(1, 0);
        return t2;
      }
      function Jl(e2, r2) {
        if (!r2)
          r2 = Jr(10);
        r2._W(1, 0);
        r2._W(1, 0);
        r2._W(4, 0);
        r2._W(4, 0);
        return r2;
      }
      var Ql = Zr;
      function ql(e2, r2) {
        if (!r2)
          r2 = Jr(51);
        r2._W(1, 0);
        Jl(null, r2);
        Jl(null, r2);
        Jl(null, r2);
        Jl(null, r2);
        Jl(null, r2);
        return r2.length > r2.l ? r2.slice(0, r2.l) : r2;
      }
      function eo(e2, r2) {
        if (!r2)
          r2 = Jr(12 + 4 * 10);
        r2._W(4, e2.xfId);
        r2._W(2, 1);
        r2._W(1, +e2.builtinId);
        r2._W(1, 0);
        Wt(e2.name || "", r2);
        return r2.length > r2.l ? r2.slice(0, r2.l) : r2;
      }
      function ro(e2, r2, t2) {
        var a2 = Jr(4 + 256 * 2 * 4);
        a2._W(4, e2);
        Wt(r2, a2);
        Wt(t2, a2);
        return a2.length > a2.l ? a2.slice(0, a2.l) : a2;
      }
      function to(e2, r2, t2) {
        var a2 = {};
        a2.NumberFmt = [];
        for (var n2 in O._table)
          a2.NumberFmt[n2] = O._table[n2];
        a2.CellXf = [];
        a2.Fonts = [];
        var i2 = [];
        var s2 = false;
        Qr(e2, function f2(e3, n3, l2) {
          switch (l2) {
            case 44:
              a2.NumberFmt[e3[0]] = e3[1];
              O.load(e3[1], e3[0]);
              break;
            case 43:
              a2.Fonts.push(e3);
              if (e3.color.theme != null && r2 && r2.themeElements && r2.themeElements.clrScheme) {
                e3.color.rgb = dl(r2.themeElements.clrScheme[e3.color.theme].rgb, e3.color.tint || 0);
              }
              break;
            case 1025:
              break;
            case 45:
              break;
            case 46:
              break;
            case 47:
              if (i2[i2.length - 1] == "BrtBeginCellXFs") {
                a2.CellXf.push(e3);
              }
              break;
            case 48:
              ;
            case 507:
              ;
            case 572:
              ;
            case 475:
              break;
            case 1171:
              ;
            case 2102:
              ;
            case 1130:
              ;
            case 512:
              ;
            case 2095:
              ;
            case 3072:
              break;
            case 35:
              s2 = true;
              break;
            case 36:
              s2 = false;
              break;
            case 37:
              i2.push(n3);
              s2 = true;
              break;
            case 38:
              i2.pop();
              s2 = false;
              break;
            default:
              if ((n3 || "").indexOf("Begin") > 0)
                i2.push(n3);
              else if ((n3 || "").indexOf("End") > 0)
                i2.pop();
              else if (!s2 || t2.WTF && i2[i2.length - 1] != "BrtACBegin")
                throw new Error("Unexpected record " + l2 + " " + n3);
          }
        });
        return a2;
      }
      function ao(e2, r2) {
        if (!r2)
          return;
        var t2 = 0;
        [[5, 8], [23, 26], [41, 44], [50, 392]].forEach(function(e3) {
          for (var a2 = e3[0]; a2 <= e3[1]; ++a2)
            if (r2[a2] != null)
              ++t2;
        });
        if (t2 == 0)
          return;
        et(e2, "BrtBeginFmts", Tt(t2));
        [[5, 8], [23, 26], [41, 44], [50, 392]].forEach(function(t3) {
          for (var a2 = t3[0]; a2 <= t3[1]; ++a2)
            if (r2[a2] != null)
              et(e2, "BrtFmt", Wl(a2, r2[a2]));
        });
        et(e2, "BrtEndFmts");
      }
      function no(e2) {
        var r2 = 1;
        if (r2 == 0)
          return;
        et(e2, "BrtBeginFonts", Tt(r2));
        et(e2, "BrtFont", Xl({ sz: 12, color: { theme: 1 }, name: "Calibri", family: 2, scheme: "minor" }));
        et(e2, "BrtEndFonts");
      }
      function io(e2) {
        var r2 = 2;
        if (r2 == 0)
          return;
        et(e2, "BrtBeginFills", Tt(r2));
        et(e2, "BrtFill", $l({ patternType: "none" }));
        et(e2, "BrtFill", $l({ patternType: "gray125" }));
        et(e2, "BrtEndFills");
      }
      function so(e2) {
        var r2 = 1;
        if (r2 == 0)
          return;
        et(e2, "BrtBeginBorders", Tt(r2));
        et(e2, "BrtBorder", ql({}));
        et(e2, "BrtEndBorders");
      }
      function fo(e2) {
        var r2 = 1;
        et(e2, "BrtBeginCellStyleXFs", Tt(r2));
        et(e2, "BrtXF", Zl({ numFmtId: 0, fontId: 0, fillId: 0, borderId: 0 }, 65535));
        et(e2, "BrtEndCellStyleXFs");
      }
      function lo(e2, r2) {
        et(e2, "BrtBeginCellXFs", Tt(r2.length));
        r2.forEach(function(r3) {
          et(e2, "BrtXF", Zl(r3, 0));
        });
        et(e2, "BrtEndCellXFs");
      }
      function oo(e2) {
        var r2 = 1;
        et(e2, "BrtBeginStyles", Tt(r2));
        et(e2, "BrtStyle", eo({ xfId: 0, builtinId: 0, name: "Normal" }));
        et(e2, "BrtEndStyles");
      }
      function co(e2) {
        var r2 = 0;
        et(e2, "BrtBeginDXFs", Tt(r2));
        et(e2, "BrtEndDXFs");
      }
      function uo(e2) {
        var r2 = 0;
        et(e2, "BrtBeginTableStyles", ro(r2, "TableStyleMedium9", "PivotStyleMedium4"));
        et(e2, "BrtEndTableStyles");
      }
      function ho() {
        return;
      }
      function vo(e2, r2) {
        var t2 = qr();
        et(t2, "BrtBeginStyleSheet");
        ao(t2, e2.SSF);
        no(t2, e2);
        io(t2, e2);
        so(t2, e2);
        fo(t2, e2);
        lo(t2, r2.cellXfs);
        oo(t2, e2);
        co(t2, e2);
        uo(t2, e2);
        ho(t2, e2);
        et(t2, "BrtEndStyleSheet");
        return t2.end();
      }
      Ua.THEME = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme";
      var po = ["</a:lt1>", "</a:dk1>", "</a:lt2>", "</a:dk2>", "</a:accent1>", "</a:accent2>", "</a:accent3>", "</a:accent4>", "</a:accent5>", "</a:accent6>", "</a:hlink>", "</a:folHlink>"];
      function mo(e2, r2, t2) {
        r2.themeElements.clrScheme = [];
        var a2 = {};
        (e2[0].match(Re) || []).forEach(function(e3) {
          var n2 = De(e3);
          switch (n2[0]) {
            case "<a:clrScheme":
              ;
            case "</a:clrScheme>":
              break;
            case "<a:srgbClr":
              a2.rgb = n2.val;
              break;
            case "<a:sysClr":
              a2.rgb = n2.lastClr;
              break;
            case "<a:dk1>":
              ;
            case "</a:dk1>":
              ;
            case "<a:lt1>":
              ;
            case "</a:lt1>":
              ;
            case "<a:dk2>":
              ;
            case "</a:dk2>":
              ;
            case "<a:lt2>":
              ;
            case "</a:lt2>":
              ;
            case "<a:accent1>":
              ;
            case "</a:accent1>":
              ;
            case "<a:accent2>":
              ;
            case "</a:accent2>":
              ;
            case "<a:accent3>":
              ;
            case "</a:accent3>":
              ;
            case "<a:accent4>":
              ;
            case "</a:accent4>":
              ;
            case "<a:accent5>":
              ;
            case "</a:accent5>":
              ;
            case "<a:accent6>":
              ;
            case "</a:accent6>":
              ;
            case "<a:hlink>":
              ;
            case "</a:hlink>":
              ;
            case "<a:folHlink>":
              ;
            case "</a:folHlink>":
              if (n2[0].charAt(1) === "/") {
                r2.themeElements.clrScheme[po.indexOf(n2[0])] = a2;
                a2 = {};
              } else {
                a2.name = n2[0].slice(3, n2[0].length - 1);
              }
              break;
            default:
              if (t2 && t2.WTF)
                throw new Error("Unrecognized " + n2[0] + " in clrScheme");
          }
        });
      }
      function bo() {
      }
      function go() {
      }
      var wo = /<a:clrScheme([^>]*)>[\s\S]*<\/a:clrScheme>/;
      var ko = /<a:fontScheme([^>]*)>[\s\S]*<\/a:fontScheme>/;
      var Eo = /<a:fmtScheme([^>]*)>[\s\S]*<\/a:fmtScheme>/;
      function So(e2, r2, t2) {
        r2.themeElements = {};
        var a2;
        [["clrScheme", wo, mo], ["fontScheme", ko, bo], ["fmtScheme", Eo, go]].forEach(function(n2) {
          if (!(a2 = e2.match(n2[1])))
            throw new Error(n2[0] + " not found in themeElements");
          n2[2](a2, r2, t2);
        });
      }
      var _o = /<a:themeElements([^>]*)>[\s\S]*<\/a:themeElements>/;
      function Co(e2, r2) {
        if (!e2 || e2.length === 0)
          return Co(Bo());
        var t2;
        var a2 = {};
        if (!(t2 = e2.match(_o)))
          throw new Error("themeElements not found in theme");
        So(t2[0], a2, r2);
        a2.raw = e2;
        return a2;
      }
      function Bo(e2, r2) {
        if (r2 && r2.themeXLSX)
          return r2.themeXLSX;
        if (e2 && typeof e2.raw == "string")
          return e2.raw;
        var t2 = [Ae];
        t2[t2.length] = '<a:theme xmlns:a="http://schemas.openxmlformats.org/drawingml/2006/main" name="Office Theme">';
        t2[t2.length] = "<a:themeElements>";
        t2[t2.length] = '<a:clrScheme name="Office">';
        t2[t2.length] = '<a:dk1><a:sysClr val="windowText" lastClr="000000"/></a:dk1>';
        t2[t2.length] = '<a:lt1><a:sysClr val="window" lastClr="FFFFFF"/></a:lt1>';
        t2[t2.length] = '<a:dk2><a:srgbClr val="1F497D"/></a:dk2>';
        t2[t2.length] = '<a:lt2><a:srgbClr val="EEECE1"/></a:lt2>';
        t2[t2.length] = '<a:accent1><a:srgbClr val="4F81BD"/></a:accent1>';
        t2[t2.length] = '<a:accent2><a:srgbClr val="C0504D"/></a:accent2>';
        t2[t2.length] = '<a:accent3><a:srgbClr val="9BBB59"/></a:accent3>';
        t2[t2.length] = '<a:accent4><a:srgbClr val="8064A2"/></a:accent4>';
        t2[t2.length] = '<a:accent5><a:srgbClr val="4BACC6"/></a:accent5>';
        t2[t2.length] = '<a:accent6><a:srgbClr val="F79646"/></a:accent6>';
        t2[t2.length] = '<a:hlink><a:srgbClr val="0000FF"/></a:hlink>';
        t2[t2.length] = '<a:folHlink><a:srgbClr val="800080"/></a:folHlink>';
        t2[t2.length] = "</a:clrScheme>";
        t2[t2.length] = '<a:fontScheme name="Office">';
        t2[t2.length] = "<a:majorFont>";
        t2[t2.length] = '<a:latin typeface="Cambria"/>';
        t2[t2.length] = '<a:ea typeface=""/>';
        t2[t2.length] = '<a:cs typeface=""/>';
        t2[t2.length] = '<a:font script="Jpan" typeface="\uFF2D\uFF33 \uFF30\u30B4\u30B7\u30C3\u30AF"/>';
        t2[t2.length] = '<a:font script="Hang" typeface="\uB9D1\uC740 \uACE0\uB515"/>';
        t2[t2.length] = '<a:font script="Hans" typeface="\u5B8B\u4F53"/>';
        t2[t2.length] = '<a:font script="Hant" typeface="\u65B0\u7D30\u660E\u9AD4"/>';
        t2[t2.length] = '<a:font script="Arab" typeface="Times New Roman"/>';
        t2[t2.length] = '<a:font script="Hebr" typeface="Times New Roman"/>';
        t2[t2.length] = '<a:font script="Thai" typeface="Tahoma"/>';
        t2[t2.length] = '<a:font script="Ethi" typeface="Nyala"/>';
        t2[t2.length] = '<a:font script="Beng" typeface="Vrinda"/>';
        t2[t2.length] = '<a:font script="Gujr" typeface="Shruti"/>';
        t2[t2.length] = '<a:font script="Khmr" typeface="MoolBoran"/>';
        t2[t2.length] = '<a:font script="Knda" typeface="Tunga"/>';
        t2[t2.length] = '<a:font script="Guru" typeface="Raavi"/>';
        t2[t2.length] = '<a:font script="Cans" typeface="Euphemia"/>';
        t2[t2.length] = '<a:font script="Cher" typeface="Plantagenet Cherokee"/>';
        t2[t2.length] = '<a:font script="Yiii" typeface="Microsoft Yi Baiti"/>';
        t2[t2.length] = '<a:font script="Tibt" typeface="Microsoft Himalaya"/>';
        t2[t2.length] = '<a:font script="Thaa" typeface="MV Boli"/>';
        t2[t2.length] = '<a:font script="Deva" typeface="Mangal"/>';
        t2[t2.length] = '<a:font script="Telu" typeface="Gautami"/>';
        t2[t2.length] = '<a:font script="Taml" typeface="Latha"/>';
        t2[t2.length] = '<a:font script="Syrc" typeface="Estrangelo Edessa"/>';
        t2[t2.length] = '<a:font script="Orya" typeface="Kalinga"/>';
        t2[t2.length] = '<a:font script="Mlym" typeface="Kartika"/>';
        t2[t2.length] = '<a:font script="Laoo" typeface="DokChampa"/>';
        t2[t2.length] = '<a:font script="Sinh" typeface="Iskoola Pota"/>';
        t2[t2.length] = '<a:font script="Mong" typeface="Mongolian Baiti"/>';
        t2[t2.length] = '<a:font script="Viet" typeface="Times New Roman"/>';
        t2[t2.length] = '<a:font script="Uigh" typeface="Microsoft Uighur"/>';
        t2[t2.length] = '<a:font script="Geor" typeface="Sylfaen"/>';
        t2[t2.length] = "</a:majorFont>";
        t2[t2.length] = "<a:minorFont>";
        t2[t2.length] = '<a:latin typeface="Calibri"/>';
        t2[t2.length] = '<a:ea typeface=""/>';
        t2[t2.length] = '<a:cs typeface=""/>';
        t2[t2.length] = '<a:font script="Jpan" typeface="\uFF2D\uFF33 \uFF30\u30B4\u30B7\u30C3\u30AF"/>';
        t2[t2.length] = '<a:font script="Hang" typeface="\uB9D1\uC740 \uACE0\uB515"/>';
        t2[t2.length] = '<a:font script="Hans" typeface="\u5B8B\u4F53"/>';
        t2[t2.length] = '<a:font script="Hant" typeface="\u65B0\u7D30\u660E\u9AD4"/>';
        t2[t2.length] = '<a:font script="Arab" typeface="Arial"/>';
        t2[t2.length] = '<a:font script="Hebr" typeface="Arial"/>';
        t2[t2.length] = '<a:font script="Thai" typeface="Tahoma"/>';
        t2[t2.length] = '<a:font script="Ethi" typeface="Nyala"/>';
        t2[t2.length] = '<a:font script="Beng" typeface="Vrinda"/>';
        t2[t2.length] = '<a:font script="Gujr" typeface="Shruti"/>';
        t2[t2.length] = '<a:font script="Khmr" typeface="DaunPenh"/>';
        t2[t2.length] = '<a:font script="Knda" typeface="Tunga"/>';
        t2[t2.length] = '<a:font script="Guru" typeface="Raavi"/>';
        t2[t2.length] = '<a:font script="Cans" typeface="Euphemia"/>';
        t2[t2.length] = '<a:font script="Cher" typeface="Plantagenet Cherokee"/>';
        t2[t2.length] = '<a:font script="Yiii" typeface="Microsoft Yi Baiti"/>';
        t2[t2.length] = '<a:font script="Tibt" typeface="Microsoft Himalaya"/>';
        t2[t2.length] = '<a:font script="Thaa" typeface="MV Boli"/>';
        t2[t2.length] = '<a:font script="Deva" typeface="Mangal"/>';
        t2[t2.length] = '<a:font script="Telu" typeface="Gautami"/>';
        t2[t2.length] = '<a:font script="Taml" typeface="Latha"/>';
        t2[t2.length] = '<a:font script="Syrc" typeface="Estrangelo Edessa"/>';
        t2[t2.length] = '<a:font script="Orya" typeface="Kalinga"/>';
        t2[t2.length] = '<a:font script="Mlym" typeface="Kartika"/>';
        t2[t2.length] = '<a:font script="Laoo" typeface="DokChampa"/>';
        t2[t2.length] = '<a:font script="Sinh" typeface="Iskoola Pota"/>';
        t2[t2.length] = '<a:font script="Mong" typeface="Mongolian Baiti"/>';
        t2[t2.length] = '<a:font script="Viet" typeface="Arial"/>';
        t2[t2.length] = '<a:font script="Uigh" typeface="Microsoft Uighur"/>';
        t2[t2.length] = '<a:font script="Geor" typeface="Sylfaen"/>';
        t2[t2.length] = "</a:minorFont>";
        t2[t2.length] = "</a:fontScheme>";
        t2[t2.length] = '<a:fmtScheme name="Office">';
        t2[t2.length] = "<a:fillStyleLst>";
        t2[t2.length] = '<a:solidFill><a:schemeClr val="phClr"/></a:solidFill>';
        t2[t2.length] = '<a:gradFill rotWithShape="1">';
        t2[t2.length] = "<a:gsLst>";
        t2[t2.length] = '<a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="50000"/><a:satMod val="300000"/></a:schemeClr></a:gs>';
        t2[t2.length] = '<a:gs pos="35000"><a:schemeClr val="phClr"><a:tint val="37000"/><a:satMod val="300000"/></a:schemeClr></a:gs>';
        t2[t2.length] = '<a:gs pos="100000"><a:schemeClr val="phClr"><a:tint val="15000"/><a:satMod val="350000"/></a:schemeClr></a:gs>';
        t2[t2.length] = "</a:gsLst>";
        t2[t2.length] = '<a:lin ang="16200000" scaled="1"/>';
        t2[t2.length] = "</a:gradFill>";
        t2[t2.length] = '<a:gradFill rotWithShape="1">';
        t2[t2.length] = "<a:gsLst>";
        t2[t2.length] = '<a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="100000"/><a:shade val="100000"/><a:satMod val="130000"/></a:schemeClr></a:gs>';
        t2[t2.length] = '<a:gs pos="100000"><a:schemeClr val="phClr"><a:tint val="50000"/><a:shade val="100000"/><a:satMod val="350000"/></a:schemeClr></a:gs>';
        t2[t2.length] = "</a:gsLst>";
        t2[t2.length] = '<a:lin ang="16200000" scaled="0"/>';
        t2[t2.length] = "</a:gradFill>";
        t2[t2.length] = "</a:fillStyleLst>";
        t2[t2.length] = "<a:lnStyleLst>";
        t2[t2.length] = '<a:ln w="9525" cap="flat" cmpd="sng" algn="ctr"><a:solidFill><a:schemeClr val="phClr"><a:shade val="95000"/><a:satMod val="105000"/></a:schemeClr></a:solidFill><a:prstDash val="solid"/></a:ln>';
        t2[t2.length] = '<a:ln w="25400" cap="flat" cmpd="sng" algn="ctr"><a:solidFill><a:schemeClr val="phClr"/></a:solidFill><a:prstDash val="solid"/></a:ln>';
        t2[t2.length] = '<a:ln w="38100" cap="flat" cmpd="sng" algn="ctr"><a:solidFill><a:schemeClr val="phClr"/></a:solidFill><a:prstDash val="solid"/></a:ln>';
        t2[t2.length] = "</a:lnStyleLst>";
        t2[t2.length] = "<a:effectStyleLst>";
        t2[t2.length] = "<a:effectStyle>";
        t2[t2.length] = "<a:effectLst>";
        t2[t2.length] = '<a:outerShdw blurRad="40000" dist="20000" dir="5400000" rotWithShape="0"><a:srgbClr val="000000"><a:alpha val="38000"/></a:srgbClr></a:outerShdw>';
        t2[t2.length] = "</a:effectLst>";
        t2[t2.length] = "</a:effectStyle>";
        t2[t2.length] = "<a:effectStyle>";
        t2[t2.length] = "<a:effectLst>";
        t2[t2.length] = '<a:outerShdw blurRad="40000" dist="23000" dir="5400000" rotWithShape="0"><a:srgbClr val="000000"><a:alpha val="35000"/></a:srgbClr></a:outerShdw>';
        t2[t2.length] = "</a:effectLst>";
        t2[t2.length] = "</a:effectStyle>";
        t2[t2.length] = "<a:effectStyle>";
        t2[t2.length] = "<a:effectLst>";
        t2[t2.length] = '<a:outerShdw blurRad="40000" dist="23000" dir="5400000" rotWithShape="0"><a:srgbClr val="000000"><a:alpha val="35000"/></a:srgbClr></a:outerShdw>';
        t2[t2.length] = "</a:effectLst>";
        t2[t2.length] = '<a:scene3d><a:camera prst="orthographicFront"><a:rot lat="0" lon="0" rev="0"/></a:camera><a:lightRig rig="threePt" dir="t"><a:rot lat="0" lon="0" rev="1200000"/></a:lightRig></a:scene3d>';
        t2[t2.length] = '<a:sp3d><a:bevelT w="63500" h="25400"/></a:sp3d>';
        t2[t2.length] = "</a:effectStyle>";
        t2[t2.length] = "</a:effectStyleLst>";
        t2[t2.length] = "<a:bgFillStyleLst>";
        t2[t2.length] = '<a:solidFill><a:schemeClr val="phClr"/></a:solidFill>';
        t2[t2.length] = '<a:gradFill rotWithShape="1">';
        t2[t2.length] = "<a:gsLst>";
        t2[t2.length] = '<a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="40000"/><a:satMod val="350000"/></a:schemeClr></a:gs>';
        t2[t2.length] = '<a:gs pos="40000"><a:schemeClr val="phClr"><a:tint val="45000"/><a:shade val="99000"/><a:satMod val="350000"/></a:schemeClr></a:gs>';
        t2[t2.length] = '<a:gs pos="100000"><a:schemeClr val="phClr"><a:shade val="20000"/><a:satMod val="255000"/></a:schemeClr></a:gs>';
        t2[t2.length] = "</a:gsLst>";
        t2[t2.length] = '<a:path path="circle"><a:fillToRect l="50000" t="-80000" r="50000" b="180000"/></a:path>';
        t2[t2.length] = "</a:gradFill>";
        t2[t2.length] = '<a:gradFill rotWithShape="1">';
        t2[t2.length] = "<a:gsLst>";
        t2[t2.length] = '<a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="80000"/><a:satMod val="300000"/></a:schemeClr></a:gs>';
        t2[t2.length] = '<a:gs pos="100000"><a:schemeClr val="phClr"><a:shade val="30000"/><a:satMod val="200000"/></a:schemeClr></a:gs>';
        t2[t2.length] = "</a:gsLst>";
        t2[t2.length] = '<a:path path="circle"><a:fillToRect l="50000" t="50000" r="50000" b="50000"/></a:path>';
        t2[t2.length] = "</a:gradFill>";
        t2[t2.length] = "</a:bgFillStyleLst>";
        t2[t2.length] = "</a:fmtScheme>";
        t2[t2.length] = "</a:themeElements>";
        t2[t2.length] = "<a:objectDefaults>";
        t2[t2.length] = "<a:spDef>";
        t2[t2.length] = '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx="1"><a:schemeClr val="accent1"/></a:lnRef><a:fillRef idx="3"><a:schemeClr val="accent1"/></a:fillRef><a:effectRef idx="2"><a:schemeClr val="accent1"/></a:effectRef><a:fontRef idx="minor"><a:schemeClr val="lt1"/></a:fontRef></a:style>';
        t2[t2.length] = "</a:spDef>";
        t2[t2.length] = "<a:lnDef>";
        t2[t2.length] = '<a:spPr/><a:bodyPr/><a:lstStyle/><a:style><a:lnRef idx="2"><a:schemeClr val="accent1"/></a:lnRef><a:fillRef idx="0"><a:schemeClr val="accent1"/></a:fillRef><a:effectRef idx="1"><a:schemeClr val="accent1"/></a:effectRef><a:fontRef idx="minor"><a:schemeClr val="tx1"/></a:fontRef></a:style>';
        t2[t2.length] = "</a:lnDef>";
        t2[t2.length] = "</a:objectDefaults>";
        t2[t2.length] = "<a:extraClrSchemeLst/>";
        t2[t2.length] = "</a:theme>";
        return t2.join("");
      }
      function To(e2, r2, t2) {
        var a2 = e2.l + r2;
        var n2 = e2._R(4);
        if (n2 === 124226)
          return;
        if (!t2.cellStyles) {
          e2.l = a2;
          return;
        }
        var i2 = e2.slice(e2.l);
        e2.l = a2;
        var s2;
        try {
          s2 = ye(i2, { type: "array" });
        } catch (f2) {
          return;
        }
        var l2 = Se(s2, "theme/theme/theme1.xml", true);
        if (!l2)
          return;
        return Co(l2, t2);
      }
      function yo(e2) {
        return e2._R(4);
      }
      function xo(e2) {
        var r2 = {};
        r2.xclrType = e2._R(2);
        r2.nTintShade = e2._R(2);
        switch (r2.xclrType) {
          case 0:
            e2.l += 4;
            break;
          case 1:
            r2.xclrValue = Ao(e2, 4);
            break;
          case 2:
            r2.xclrValue = vi(e2, 4);
            break;
          case 3:
            r2.xclrValue = yo(e2, 4);
            break;
          case 4:
            e2.l += 4;
            break;
        }
        e2.l += 8;
        return r2;
      }
      function Ao(e2, r2) {
        return Zr(e2, r2);
      }
      function Io(e2, r2) {
        return Zr(e2, r2);
      }
      function Ro(e2) {
        var r2 = e2._R(2);
        var t2 = e2._R(2) - 4;
        var a2 = [r2];
        switch (r2) {
          case 4:
            ;
          case 5:
            ;
          case 7:
            ;
          case 8:
            ;
          case 9:
            ;
          case 10:
            ;
          case 11:
            ;
          case 13:
            a2[1] = xo(e2, t2);
            break;
          case 6:
            a2[1] = Io(e2, t2);
            break;
          case 14:
            ;
          case 15:
            a2[1] = e2._R(t2 === 1 ? 1 : 2);
            break;
          default:
            throw new Error("Unrecognized ExtProp type: " + r2 + " " + t2);
        }
        return a2;
      }
      function Fo(e2, r2) {
        var t2 = e2.l + r2;
        e2.l += 2;
        var a2 = e2._R(2);
        e2.l += 2;
        var n2 = e2._R(2);
        var i2 = [];
        while (n2-- > 0)
          i2.push(Ro(e2, t2 - e2.l));
        return { ixfe: a2, ext: i2 };
      }
      function Oo(e2, r2) {
        r2.forEach(function(e3) {
          switch (e3[0]) {
            case 4:
              break;
            case 5:
              break;
            case 6:
              break;
            case 7:
              break;
            case 8:
              break;
            case 9:
              break;
            case 10:
              break;
            case 11:
              break;
            case 13:
              break;
            case 14:
              break;
            case 15:
              break;
          }
        });
      }
      function Do(e2) {
        var r2 = [];
        if (!e2)
          return r2;
        var t2 = 1;
        (e2.match(Re) || []).forEach(function(e3) {
          var a2 = De(e3);
          switch (a2[0]) {
            case "<?xml":
              break;
            case "<calcChain":
              ;
            case "<calcChain>":
              ;
            case "</calcChain>":
              break;
            case "<c":
              delete a2[0];
              if (a2.i)
                t2 = a2.i;
              else
                a2.i = t2;
              r2.push(a2);
              break;
          }
        });
        return r2;
      }
      function Po(e2) {
        var r2 = {};
        r2.i = e2._R(4);
        var t2 = {};
        t2.r = e2._R(4);
        t2.c = e2._R(4);
        r2.r = bt(t2);
        var a2 = e2._R(1);
        if (a2 & 2)
          r2.l = "1";
        if (a2 & 8)
          r2.a = "1";
        return r2;
      }
      function No(e2, r2, t2) {
        var a2 = [];
        var n2 = false;
        Qr(e2, function i2(e3, r3, s2) {
          switch (s2) {
            case 63:
              a2.push(e3);
              break;
            default:
              if ((r3 || "").indexOf("Begin") > 0) {
              } else if ((r3 || "").indexOf("End") > 0) {
              } else if (!n2 || t2.WTF)
                throw new Error("Unexpected record " + s2 + " " + r3);
          }
        });
        return a2;
      }
      function Lo() {
      }
      function Mo(e2, r2, t2, a2) {
        if (!e2)
          return e2;
        var n2 = a2 || {};
        var i2 = false, s2 = false;
        Qr(e2, function f2(e3, r3, t3) {
          if (s2)
            return;
          switch (t3) {
            case 359:
              ;
            case 363:
              ;
            case 364:
              ;
            case 366:
              ;
            case 367:
              ;
            case 368:
              ;
            case 369:
              ;
            case 370:
              ;
            case 371:
              ;
            case 472:
              ;
            case 577:
              ;
            case 578:
              ;
            case 579:
              ;
            case 580:
              ;
            case 581:
              ;
            case 582:
              ;
            case 583:
              ;
            case 584:
              ;
            case 585:
              ;
            case 586:
              ;
            case 587:
              break;
            case 35:
              i2 = true;
              break;
            case 36:
              i2 = false;
              break;
            default:
              if ((r3 || "").indexOf("Begin") > 0) {
              } else if ((r3 || "").indexOf("End") > 0) {
              } else if (!i2 || n2.WTF)
                throw new Error("Unexpected record " + t3.toString(16) + " " + r3);
          }
        }, n2);
      }
      Ua.IMG = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/image";
      Ua.DRAW = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing";
      function Uo(e2, r2) {
        if (!e2)
          return "??";
        var t2 = (e2.match(/<c:chart [^>]*r:id="([^"]*)"/) || ["", ""])[1];
        return r2["!id"][t2].Target;
      }
      var zo = 1024;
      function Ho(e2, r2) {
        var t2 = [21600, 21600];
        var a2 = ["m0,0l0", t2[1], t2[0], t2[1], t2[0], "0xe"].join(",");
        var n2 = [or("xml", null, { "xmlns:v": dr.v, "xmlns:o": dr.o, "xmlns:x": dr.x, "xmlns:mv": dr.mv }).replace(/\/>/, ">"), or("o:shapelayout", or("o:idmap", null, { "v:ext": "edit", data: e2 }), { "v:ext": "edit" }), or("v:shapetype", [or("v:stroke", null, { joinstyle: "miter" }), or("v:path", null, { gradientshapeok: "t", "o:connecttype": "rect" })].join(""), { id: "_x0000_t202", "o:spt": 202, coordsize: t2.join(","), path: a2 })];
        while (zo < e2 * 1e3)
          zo += 1e3;
        r2.forEach(function(e3) {
          var r3 = mt(e3[0]);
          var t3 = { color2: "#BEFF82", type: "gradient" };
          if (t3.type == "gradient")
            t3.angle = "-180";
          var a3 = t3.type == "gradient" ? or("o:fill", null, { type: "gradientUnscaled", "v:ext": "view" }) : null;
          var i2 = or("v:fill", a3, t3);
          var s2 = { on: "t", obscured: "t" };
          ++zo;
          n2 = n2.concat(["<v:shape" + lr({ id: "_x0000_s" + zo, type: "#_x0000_t202", style: "position:absolute; margin-left:80pt;margin-top:5pt;width:104pt;height:64pt;z-index:10" + (e3[1].hidden ? ";visibility:hidden" : ""), fillcolor: "#ECFAD4", strokecolor: "#edeaa1" }) + ">", i2, or("v:shadow", null, s2), or("v:path", null, { "o:connecttype": "none" }), '<v:textbox><div style="text-align:left"></div></v:textbox>', '<x:ClientData ObjectType="Note">', "<x:MoveWithCells/>", "<x:SizeWithCells/>", fr("x:Anchor", [r3.c + 1, 0, r3.r + 1, 0, r3.c + 3, 20, r3.r + 5, 20].join(",")), fr("x:AutoFill", "False"), fr("x:Row", String(r3.r)), fr("x:Column", String(r3.c)), e3[1].hidden ? "" : "<x:Visible/>", "</x:ClientData>", "</v:shape>"]);
        });
        n2.push("</xml>");
        return n2.join("");
      }
      Ua.CMNT = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/comments";
      function Wo(e2, r2) {
        var t2 = Array.isArray(e2);
        var a2;
        r2.forEach(function(r3) {
          var n2 = mt(r3.ref);
          if (t2) {
            if (!e2[n2.r])
              e2[n2.r] = [];
            a2 = e2[n2.r][n2.c];
          } else
            a2 = e2[r3.ref];
          if (!a2) {
            a2 = { t: "z" };
            if (t2)
              e2[n2.r][n2.c] = a2;
            else
              e2[r3.ref] = a2;
            var i2 = kt(e2["!ref"] || "BDWGO1000001:A1");
            if (i2.s.r > n2.r)
              i2.s.r = n2.r;
            if (i2.e.r < n2.r)
              i2.e.r = n2.r;
            if (i2.s.c > n2.c)
              i2.s.c = n2.c;
            if (i2.e.c < n2.c)
              i2.e.c = n2.c;
            var s2 = wt(i2);
            if (s2 !== e2["!ref"])
              e2["!ref"] = s2;
          }
          if (!a2.c)
            a2.c = [];
          var f2 = { a: r3.author, t: r3.t, r: r3.r };
          if (r3.h)
            f2.h = r3.h;
          a2.c.push(f2);
        });
      }
      function Vo(e2, r2) {
        if (e2.match(/<(?:\w+:)?comments *\/>/))
          return [];
        var t2 = [];
        var a2 = [];
        var n2 = e2.match(/<(?:\w+:)?authors>([\s\S]*)<\/(?:\w+:)?authors>/);
        if (n2 && n2[1])
          n2[1].split(/<\/\w*:?author>/).forEach(function(e3) {
            if (e3 === "" || e3.trim() === "")
              return;
            var r3 = e3.match(/<(?:\w+:)?author[^>]*>(.*)/);
            if (r3)
              t2.push(r3[1]);
          });
        var i2 = e2.match(/<(?:\w+:)?commentList>([\s\S]*)<\/(?:\w+:)?commentList>/);
        if (i2 && i2[1])
          i2[1].split(/<\/\w*:?comment>/).forEach(function(e3) {
            if (e3 === "" || e3.trim() === "")
              return;
            var n3 = e3.match(/<(?:\w+:)?comment[^>]*>/);
            if (!n3)
              return;
            var i3 = De(n3[0]);
            var s2 = { author: i3.authorId && t2[i3.authorId] || "sheetjsghost", ref: i3.ref, guid: i3.guid };
            var f2 = mt(i3.ref);
            if (r2.sheetRows && r2.sheetRows <= f2.r)
              return;
            var l2 = e3.match(/<(?:\w+:)?text>([\s\S]*)<\/(?:\w+:)?text>/);
            var o2 = !!l2 && !!l2[1] && yf(l2[1]) || { r: "", t: "", h: "" };
            s2.r = o2.r;
            if (o2.r == "<t></t>")
              o2.t = o2.h = "";
            s2.t = (o2.t || "").replace(/\r\n/g, "\n").replace(/\r/g, "\n");
            if (r2.cellHTML)
              s2.h = o2.h;
            a2.push(s2);
          });
        return a2;
      }
      var Xo = or("comments", null, { xmlns: hr.main[0] });
      function Go(e2) {
        var r2 = [Ae, Xo];
        var t2 = [];
        r2.push("<authors>");
        e2.forEach(function(e3) {
          e3[1].forEach(function(e4) {
            var a2 = He(e4.a);
            if (t2.indexOf(a2) > -1)
              return;
            t2.push(a2);
            r2.push("<author>" + a2 + "</author>");
          });
        });
        r2.push("</authors>");
        r2.push("<commentList>");
        e2.forEach(function(e3) {
          e3[1].forEach(function(a2) {
            r2.push('<comment ref="' + e3[0] + '" authorId="' + t2.indexOf(He(a2.a)) + '"><text>');
            r2.push(fr("t", a2.t == null ? "" : He(a2.t)));
            r2.push("</text></comment>");
          });
        });
        r2.push("</commentList>");
        if (r2.length > 2) {
          r2[r2.length] = "</comments>";
          r2[1] = r2[1].replace("/>", ">");
        }
        return r2.join("");
      }
      function jo(e2) {
        var r2 = {};
        r2.iauthor = e2._R(4);
        var t2 = Zt(e2, 16);
        r2.rfx = t2.s;
        r2.ref = bt(t2.s);
        e2.l += 16;
        return r2;
      }
      function Ko(e2, r2) {
        if (r2 == null)
          r2 = Jr(36);
        r2._W(4, e2[1].iauthor);
        Jt(e2[0], r2);
        r2._W(4, 0);
        r2._W(4, 0);
        r2._W(4, 0);
        r2._W(4, 0);
        return r2;
      }
      var $o = yt;
      function Yo(e2) {
        return xt(e2.slice(0, 54));
      }
      function Zo(e2, r2) {
        var t2 = [];
        var a2 = [];
        var n2 = {};
        var i2 = false;
        Qr(e2, function s2(e3, f2, l2) {
          switch (l2) {
            case 632:
              a2.push(e3);
              break;
            case 635:
              n2 = e3;
              break;
            case 637:
              n2.t = e3.t;
              n2.h = e3.h;
              n2.r = e3.r;
              break;
            case 636:
              n2.author = a2[n2.iauthor];
              delete n2.iauthor;
              if (r2.sheetRows && n2.rfx && r2.sheetRows <= n2.rfx.r)
                break;
              if (!n2.t)
                n2.t = "";
              delete n2.rfx;
              t2.push(n2);
              break;
            case 3072:
              break;
            case 35:
              i2 = true;
              break;
            case 36:
              i2 = false;
              break;
            case 37:
              break;
            case 38:
              break;
            default:
              if ((f2 || "").indexOf("Begin") > 0) {
              } else if ((f2 || "").indexOf("End") > 0) {
              } else if (!i2 || r2.WTF)
                throw new Error("Unexpected record " + l2 + " " + f2);
          }
        });
        return t2;
      }
      function Jo(e2) {
        var r2 = qr();
        var t2 = [];
        et(r2, "BrtBeginComments");
        et(r2, "BrtBeginCommentAuthors");
        e2.forEach(function(e3) {
          e3[1].forEach(function(e4) {
            if (t2.indexOf(e4.a) > -1)
              return;
            t2.push(e4.a.slice(0, 54));
            et(r2, "BrtCommentAuthor", Yo(e4.a));
          });
        });
        et(r2, "BrtEndCommentAuthors");
        et(r2, "BrtBeginCommentList");
        e2.forEach(function(e3) {
          e3[1].forEach(function(a2) {
            a2.iauthor = t2.indexOf(a2.a);
            var n2 = { s: mt(e3[0]), e: mt(e3[0]) };
            et(r2, "BrtBeginComment", Ko([n2, a2]));
            if (a2.t && a2.t.length > 0)
              et(r2, "BrtCommentText", Dt(a2));
            et(r2, "BrtEndComment");
            delete a2.iauthor;
          });
        });
        et(r2, "BrtEndCommentList");
        et(r2, "BrtEndComments");
        return r2.end();
      }
      var Qo = "application/vnd.ms-office.vbaProject";
      function qo(e2) {
        var r2 = W.utils.cfb_new({ root: "R" });
        e2.FullPaths.forEach(function(t2, a2) {
          if (t2.slice(-1) === "/" || !t2.match(/_VBA_PROJECT_CUR/))
            return;
          var n2 = t2.replace(/^[^\/]*/, "R").replace(/\/_VBA_PROJECT_CUR\u0000*/, "");
          W.utils.cfb_add(r2, n2, e2.FileIndex[a2].content);
        });
        return W.write(r2);
      }
      function ec(e2, r2) {
        r2.FullPaths.forEach(function(t2, a2) {
          if (a2 == 0)
            return;
          var n2 = t2.replace(/[^\/]*[\/]/, "/_VBA_PROJECT_CUR/");
          if (n2.slice(-1) !== "/")
            W.utils.cfb_add(e2, n2, r2.FileIndex[a2].content);
        });
      }
      var rc = ["xlsb", "xlsm", "xlam", "biff8", "xla"];
      Ua.DS = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/dialogsheet";
      Ua.MS = "http://schemas.microsoft.com/office/2006/relationships/xlMacrosheet";
      function tc() {
        return { "!type": "dialog" };
      }
      function ac() {
        return { "!type": "dialog" };
      }
      function nc() {
        return { "!type": "macro" };
      }
      function ic() {
        return { "!type": "macro" };
      }
      var sc = function() {
        var e2 = /(^|[^A-Za-z_])R(\[?-?\d+\]|[1-9]\d*|)C(\[?-?\d+\]|[1-9]\d*|)(?![A-Za-z0-9_])/g;
        var r2 = { r: 0, c: 0 };
        function t2(e3, t3, a2, n2) {
          var i2 = false, s2 = false;
          if (a2.length == 0)
            s2 = true;
          else if (a2.charAt(0) == "[") {
            s2 = true;
            a2 = a2.slice(1, -1);
          }
          if (n2.length == 0)
            i2 = true;
          else if (n2.charAt(0) == "[") {
            i2 = true;
            n2 = n2.slice(1, -1);
          }
          var f2 = a2.length > 0 ? parseInt(a2, 10) | 0 : 0, l2 = n2.length > 0 ? parseInt(n2, 10) | 0 : 0;
          if (i2)
            l2 += r2.c;
          else
            --l2;
          if (s2)
            f2 += r2.r;
          else
            --f2;
          return t3 + (i2 ? "" : "$") + ht(l2) + (s2 ? "" : "$") + lt(f2);
        }
        return function a2(n2, i2) {
          r2 = i2;
          return n2.replace(e2, t2);
        };
      }();
      var fc = /(^|[^._A-Z0-9])([$]?)([A-Z]{1,2}|[A-W][A-Z]{2}|X[A-E][A-Z]|XF[A-D])([$]?)(10[0-3]\d{4}|104[0-7]\d{3}|1048[0-4]\d{2}|10485[0-6]\d|104857[0-6]|[1-9]\d{0,5})(?![_.\(A-Za-z0-9])/g;
      var lc = function() {
        return function e2(r2, t2) {
          return r2.replace(fc, function(e3, r3, a2, n2, i2, s2) {
            var f2 = ut(n2) - (a2 ? 0 : t2.c);
            var l2 = ft(s2) - (i2 ? 0 : t2.r);
            var o2 = l2 == 0 ? "" : !i2 ? "[" + l2 + "]" : l2 + 1;
            var c2 = f2 == 0 ? "" : !a2 ? "[" + f2 + "]" : f2 + 1;
            return r3 + "R" + o2 + "C" + c2;
          });
        };
      }();
      function oc(e2, r2) {
        return e2.replace(fc, function(e3, t2, a2, n2, i2, s2) {
          return t2 + (a2 == "$" ? a2 + n2 : ht(ut(n2) + r2.c)) + (i2 == "$" ? i2 + s2 : lt(ft(s2) + r2.r));
        });
      }
      function cc(e2, r2, t2) {
        var a2 = gt(r2), n2 = a2.s, i2 = mt(t2);
        var s2 = { r: i2.r - n2.r, c: i2.c - n2.c };
        return oc(e2, s2);
      }
      function uc(e2) {
        if (e2.length == 1)
          return false;
        return true;
      }
      function hc(e2) {
        return e2.replace(/_xlfn\./g, "");
      }
      function dc(e2) {
        e2.l += 1;
        return;
      }
      function vc(e2, r2) {
        var t2 = e2._R(r2 == 1 ? 1 : 2);
        return [t2 & 16383, t2 >> 14 & 1, t2 >> 15 & 1];
      }
      function pc(e2, r2, t2) {
        var a2 = 2;
        if (t2) {
          if (t2.biff >= 2 && t2.biff <= 5)
            return mc(e2, r2, t2);
          else if (t2.biff == 12)
            a2 = 4;
        }
        var n2 = e2._R(a2), i2 = e2._R(a2);
        var s2 = vc(e2, 2);
        var f2 = vc(e2, 2);
        return { s: { r: n2, c: s2[0], cRel: s2[1], rRel: s2[2] }, e: { r: i2, c: f2[0], cRel: f2[1], rRel: f2[2] } };
      }
      function mc(e2) {
        var r2 = vc(e2, 2), t2 = vc(e2, 2);
        var a2 = e2._R(1);
        var n2 = e2._R(1);
        return { s: { r: r2[0], c: a2, cRel: r2[1], rRel: r2[2] }, e: { r: t2[0], c: n2, cRel: t2[1], rRel: t2[2] } };
      }
      function bc(e2, r2, t2) {
        if (t2.biff < 8)
          return mc(e2, r2, t2);
        var a2 = e2._R(t2.biff == 12 ? 4 : 2), n2 = e2._R(t2.biff == 12 ? 4 : 2);
        var i2 = vc(e2, 2);
        var s2 = vc(e2, 2);
        return { s: { r: a2, c: i2[0], cRel: i2[1], rRel: i2[2] }, e: { r: n2, c: s2[0], cRel: s2[1], rRel: s2[2] } };
      }
      function gc(e2, r2, t2) {
        if (t2 && t2.biff >= 2 && t2.biff <= 5)
          return wc(e2, r2, t2);
        var a2 = e2._R(t2 && t2.biff == 12 ? 4 : 2);
        var n2 = vc(e2, 2);
        return { r: a2, c: n2[0], cRel: n2[1], rRel: n2[2] };
      }
      function wc(e2) {
        var r2 = vc(e2, 2);
        var t2 = e2._R(1);
        return { r: r2[0], c: t2, cRel: r2[1], rRel: r2[2] };
      }
      function kc(e2) {
        var r2 = e2._R(2);
        var t2 = e2._R(2);
        return { r: r2, c: t2 & 255, fQuoted: !!(t2 & 16384), cRel: t2 >> 15, rRel: t2 >> 15 };
      }
      function Ec(e2, r2, t2) {
        var a2 = t2 && t2.biff ? t2.biff : 8;
        if (a2 >= 2 && a2 <= 5)
          return Sc(e2, r2, t2);
        var n2 = e2._R(a2 >= 12 ? 4 : 2);
        var i2 = e2._R(2);
        var s2 = (i2 & 16384) >> 14, f2 = (i2 & 32768) >> 15;
        i2 &= 16383;
        if (f2 == 1)
          while (n2 > 524287)
            n2 -= 1048576;
        if (s2 == 1)
          while (i2 > 8191)
            i2 = i2 - 16384;
        return { r: n2, c: i2, cRel: s2, rRel: f2 };
      }
      function Sc(e2) {
        var r2 = e2._R(2);
        var t2 = e2._R(1);
        var a2 = (r2 & 32768) >> 15, n2 = (r2 & 16384) >> 14;
        r2 &= 16383;
        if (a2 == 1 && r2 >= 8192)
          r2 = r2 - 16384;
        if (n2 == 1 && t2 >= 128)
          t2 = t2 - 256;
        return { r: r2, c: t2, cRel: n2, rRel: a2 };
      }
      function _c(e2, r2, t2) {
        var a2 = (e2[e2.l++] & 96) >> 5;
        var n2 = pc(e2, t2.biff >= 2 && t2.biff <= 5 ? 6 : 8, t2);
        return [a2, n2];
      }
      function Cc(e2, r2, t2) {
        var a2 = (e2[e2.l++] & 96) >> 5;
        var n2 = e2._R(2, "i");
        var i2 = 8;
        if (t2)
          switch (t2.biff) {
            case 5:
              e2.l += 12;
              i2 = 6;
              break;
            case 12:
              i2 = 12;
              break;
          }
        var s2 = pc(e2, i2, t2);
        return [a2, n2, s2];
      }
      function Bc(e2, r2, t2) {
        var a2 = (e2[e2.l++] & 96) >> 5;
        e2.l += t2 && t2.biff > 8 ? 12 : t2.biff < 8 ? 6 : 8;
        return [a2];
      }
      function Tc(e2, r2, t2) {
        var a2 = (e2[e2.l++] & 96) >> 5;
        var n2 = e2._R(2);
        var i2 = 8;
        if (t2)
          switch (t2.biff) {
            case 5:
              e2.l += 12;
              i2 = 6;
              break;
            case 12:
              i2 = 12;
              break;
          }
        e2.l += i2;
        return [a2, n2];
      }
      function yc(e2, r2, t2) {
        var a2 = (e2[e2.l++] & 96) >> 5;
        var n2 = bc(e2, r2 - 1, t2);
        return [a2, n2];
      }
      function xc(e2, r2, t2) {
        var a2 = (e2[e2.l++] & 96) >> 5;
        e2.l += t2.biff == 2 ? 6 : t2.biff == 12 ? 14 : 7;
        return [a2];
      }
      function Ac(e2) {
        var r2 = e2[e2.l + 1] & 1;
        var t2 = 1;
        e2.l += 4;
        return [r2, t2];
      }
      function Ic(e2, r2, t2) {
        e2.l += 2;
        var a2 = e2._R(t2 && t2.biff == 2 ? 1 : 2);
        var n2 = [];
        for (var i2 = 0; i2 <= a2; ++i2)
          n2.push(e2._R(t2 && t2.biff == 2 ? 1 : 2));
        return n2;
      }
      function Rc(e2, r2, t2) {
        var a2 = e2[e2.l + 1] & 255 ? 1 : 0;
        e2.l += 2;
        return [a2, e2._R(t2 && t2.biff == 2 ? 1 : 2)];
      }
      function Fc(e2, r2, t2) {
        var a2 = e2[e2.l + 1] & 255 ? 1 : 0;
        e2.l += 2;
        return [a2, e2._R(t2 && t2.biff == 2 ? 1 : 2)];
      }
      function Oc(e2) {
        var r2 = e2[e2.l + 1] & 255 ? 1 : 0;
        e2.l += 2;
        return [r2, e2._R(2)];
      }
      function Dc(e2, r2, t2) {
        var a2 = e2[e2.l + 1] & 255 ? 1 : 0;
        e2.l += t2 && t2.biff == 2 ? 3 : 4;
        return [a2];
      }
      function Pc(e2) {
        var r2 = e2._R(1), t2 = e2._R(1);
        return [r2, t2];
      }
      function Nc(e2) {
        e2._R(2);
        return Pc(e2, 2);
      }
      function Lc(e2) {
        e2._R(2);
        return Pc(e2, 2);
      }
      function Mc(e2, r2, t2) {
        var a2 = (e2[e2.l] & 96) >> 5;
        e2.l += 1;
        var n2 = gc(e2, 0, t2);
        return [a2, n2];
      }
      function Uc(e2, r2, t2) {
        var a2 = (e2[e2.l] & 96) >> 5;
        e2.l += 1;
        var n2 = Ec(e2, 0, t2);
        return [a2, n2];
      }
      function zc(e2, r2, t2) {
        var a2 = (e2[e2.l] & 96) >> 5;
        e2.l += 1;
        var n2 = e2._R(2);
        if (t2 && t2.biff == 5)
          e2.l += 12;
        var i2 = gc(e2, 0, t2);
        return [a2, n2, i2];
      }
      function Hc(e2, r2, t2) {
        var a2 = (e2[e2.l] & 96) >> 5;
        e2.l += 1;
        var n2 = e2._R(t2 && t2.biff <= 3 ? 1 : 2);
        return [nh[n2], ah[n2], a2];
      }
      function Wc(e2, r2, t2) {
        var a2 = e2[e2.l++];
        var n2 = e2._R(1), i2 = t2 && t2.biff <= 3 ? [a2 == 88 ? -1 : 0, e2._R(1)] : Vc(e2);
        return [n2, (i2[0] === 0 ? ah : th)[i2[1]]];
      }
      function Vc(e2) {
        return [e2[e2.l + 1] >> 7, e2._R(2) & 32767];
      }
      function Xc(e2, r2, t2) {
        e2.l += t2 && t2.biff == 2 ? 3 : 4;
        return;
      }
      function Gc(e2, r2, t2) {
        e2.l++;
        if (t2 && t2.biff == 12)
          return [e2._R(4, "i"), 0];
        var a2 = e2._R(2);
        var n2 = e2._R(t2 && t2.biff == 2 ? 1 : 2);
        return [a2, n2];
      }
      function jc(e2) {
        e2.l++;
        return Aa[e2._R(1)];
      }
      function Kc(e2) {
        e2.l++;
        return e2._R(2);
      }
      function $c(e2) {
        e2.l++;
        return e2._R(1) !== 0;
      }
      function Yc(e2) {
        e2.l++;
        return Qt(e2, 8);
      }
      function Zc(e2, r2, t2) {
        e2.l++;
        return qn(e2, r2 - 1, t2);
      }
      function Jc(e2, r2) {
        var t2 = [e2._R(1)];
        if (r2 == 12)
          switch (t2[0]) {
            case 2:
              t2[0] = 4;
              break;
            case 4:
              t2[0] = 16;
              break;
            case 0:
              t2[0] = 1;
              break;
            case 1:
              t2[0] = 2;
              break;
          }
        switch (t2[0]) {
          case 4:
            t2[1] = jn(e2, 1) ? "TRUE" : "FALSE";
            if (r2 != 12)
              e2.l += 7;
            break;
          case 37:
            ;
          case 16:
            t2[1] = Aa[e2[e2.l]];
            e2.l += r2 == 12 ? 4 : 8;
            break;
          case 0:
            e2.l += 8;
            break;
          case 1:
            t2[1] = Qt(e2, 8);
            break;
          case 2:
            t2[1] = ni(e2, 0, { biff: r2 > 0 && r2 < 8 ? 2 : r2 });
            break;
          default:
            throw new Error("Bad SerAr: " + t2[0]);
        }
        return t2;
      }
      function Qc(e2, r2, t2) {
        var a2 = e2._R(t2.biff == 12 ? 4 : 2);
        var n2 = [];
        for (var i2 = 0; i2 != a2; ++i2)
          n2.push((t2.biff == 12 ? Zt : _i)(e2, 8));
        return n2;
      }
      function qc(e2, r2, t2) {
        var a2 = 0, n2 = 0;
        if (t2.biff == 12) {
          a2 = e2._R(4);
          n2 = e2._R(4);
        } else {
          n2 = 1 + e2._R(1);
          a2 = 1 + e2._R(2);
        }
        if (t2.biff >= 2 && t2.biff < 8) {
          --a2;
          if (--n2 == 0)
            n2 = 256;
        }
        for (var i2 = 0, s2 = []; i2 != a2 && (s2[i2] = []); ++i2)
          for (var f2 = 0; f2 != n2; ++f2)
            s2[i2][f2] = Jc(e2, t2.biff);
        return s2;
      }
      function eu(e2, r2, t2) {
        var a2 = e2._R(1) >>> 5 & 3;
        var n2 = !t2 || t2.biff >= 8 ? 4 : 2;
        var i2 = e2._R(n2);
        switch (t2.biff) {
          case 2:
            e2.l += 5;
            break;
          case 3:
            ;
          case 4:
            e2.l += 8;
            break;
          case 5:
            e2.l += 12;
            break;
        }
        return [a2, 0, i2];
      }
      function ru(e2, r2, t2) {
        if (t2.biff == 5)
          return tu(e2, r2, t2);
        var a2 = e2._R(1) >>> 5 & 3;
        var n2 = e2._R(2);
        var i2 = e2._R(4);
        return [a2, n2, i2];
      }
      function tu(e2) {
        var r2 = e2._R(1) >>> 5 & 3;
        var t2 = e2._R(2, "i");
        e2.l += 8;
        var a2 = e2._R(2);
        e2.l += 12;
        return [r2, t2, a2];
      }
      function au(e2, r2, t2) {
        var a2 = e2._R(1) >>> 5 & 3;
        e2.l += t2 && t2.biff == 2 ? 3 : 4;
        var n2 = e2._R(t2 && t2.biff == 2 ? 1 : 2);
        return [a2, n2];
      }
      function nu(e2, r2, t2) {
        var a2 = e2._R(1) >>> 5 & 3;
        var n2 = e2._R(t2 && t2.biff == 2 ? 1 : 2);
        return [a2, n2];
      }
      function iu(e2, r2, t2) {
        var a2 = e2._R(1) >>> 5 & 3;
        e2.l += 4;
        if (t2.biff < 8)
          e2.l--;
        if (t2.biff == 12)
          e2.l += 2;
        return [a2];
      }
      function su(e2, r2, t2) {
        var a2 = (e2[e2.l++] & 96) >> 5;
        var n2 = e2._R(2);
        var i2 = 4;
        if (t2)
          switch (t2.biff) {
            case 5:
              i2 = 15;
              break;
            case 12:
              i2 = 6;
              break;
          }
        e2.l += i2;
        return [a2, n2];
      }
      var fu = Zr;
      var lu = Zr;
      var ou = Zr;
      function cu(e2, r2, t2) {
        e2.l += 2;
        return [kc(e2, 4, t2)];
      }
      function uu(e2) {
        e2.l += 6;
        return [];
      }
      var hu = cu;
      var du = uu;
      var vu = uu;
      var pu = cu;
      function mu(e2) {
        e2.l += 2;
        return [$n(e2), e2._R(2) & 1];
      }
      var bu = cu;
      var gu = mu;
      var wu = uu;
      var ku = cu;
      var Eu = cu;
      var Su = ["Data", "All", "Headers", "??", "?Data2", "??", "?DataHeaders", "??", "Totals", "??", "??", "??", "?DataTotals", "??", "??", "??", "?Current"];
      function _u(e2) {
        e2.l += 2;
        var r2 = e2._R(2);
        var t2 = e2._R(2);
        var a2 = e2._R(4);
        var n2 = e2._R(2);
        var i2 = e2._R(2);
        var s2 = Su[t2 >> 2 & 31];
        return { ixti: r2, coltype: t2 & 3, rt: s2, idx: a2, c: n2, C: i2 };
      }
      function Cu(e2) {
        e2.l += 2;
        return [e2._R(4)];
      }
      function Bu(e2, r2, t2) {
        e2.l += 5;
        e2.l += 2;
        e2.l += t2.biff == 2 ? 1 : 4;
        return ["PTGSHEET"];
      }
      function Tu(e2, r2, t2) {
        e2.l += t2.biff == 2 ? 4 : 5;
        return ["PTGENDSHEET"];
      }
      function yu(e2) {
        var r2 = e2._R(1) >>> 5 & 3;
        var t2 = e2._R(2);
        return [r2, t2];
      }
      function xu(e2) {
        var r2 = e2._R(1) >>> 5 & 3;
        var t2 = e2._R(2);
        return [r2, t2];
      }
      function Au(e2) {
        e2.l += 4;
        return [0, 0];
      }
      var Iu = { 1: { n: "PtgExp", f: Gc }, 2: { n: "PtgTbl", f: ou }, 3: { n: "PtgAdd", f: dc }, 4: { n: "PtgSub", f: dc }, 5: { n: "PtgMul", f: dc }, 6: { n: "PtgDiv", f: dc }, 7: { n: "PtgPower", f: dc }, 8: { n: "PtgConcat", f: dc }, 9: { n: "PtgLt", f: dc }, 10: { n: "PtgLe", f: dc }, 11: { n: "PtgEq", f: dc }, 12: { n: "PtgGe", f: dc }, 13: { n: "PtgGt", f: dc }, 14: { n: "PtgNe", f: dc }, 15: { n: "PtgIsect", f: dc }, 16: { n: "PtgUnion", f: dc }, 17: { n: "PtgRange", f: dc }, 18: { n: "PtgUplus", f: dc }, 19: { n: "PtgUminus", f: dc }, 20: { n: "PtgPercent", f: dc }, 21: { n: "PtgParen", f: dc }, 22: { n: "PtgMissArg", f: dc }, 23: { n: "PtgStr", f: Zc }, 26: { n: "PtgSheet", f: Bu }, 27: { n: "PtgEndSheet", f: Tu }, 28: { n: "PtgErr", f: jc }, 29: { n: "PtgBool", f: $c }, 30: { n: "PtgInt", f: Kc }, 31: { n: "PtgNum", f: Yc }, 32: { n: "PtgArray", f: xc }, 33: { n: "PtgFunc", f: Hc }, 34: { n: "PtgFuncVar", f: Wc }, 35: { n: "PtgName", f: eu }, 36: { n: "PtgRef", f: Mc }, 37: { n: "PtgArea", f: _c }, 38: { n: "PtgMemArea", f: au }, 39: { n: "PtgMemErr", f: fu }, 40: { n: "PtgMemNoMem", f: lu }, 41: { n: "PtgMemFunc", f: nu }, 42: { n: "PtgRefErr", f: iu }, 43: { n: "PtgAreaErr", f: Bc }, 44: { n: "PtgRefN", f: Uc }, 45: { n: "PtgAreaN", f: yc }, 46: { n: "PtgMemAreaN", f: yu }, 47: { n: "PtgMemNoMemN", f: xu }, 57: { n: "PtgNameX", f: ru }, 58: { n: "PtgRef3d", f: zc }, 59: { n: "PtgArea3d", f: Cc }, 60: { n: "PtgRefErr3d", f: su }, 61: { n: "PtgAreaErr3d", f: Tc }, 255: {} };
      var Ru = { 64: 32, 96: 32, 65: 33, 97: 33, 66: 34, 98: 34, 67: 35, 99: 35, 68: 36, 100: 36, 69: 37, 101: 37, 70: 38, 102: 38, 71: 39, 103: 39, 72: 40, 104: 40, 73: 41, 105: 41, 74: 42, 106: 42, 75: 43, 107: 43, 76: 44, 108: 44, 77: 45, 109: 45, 78: 46, 110: 46, 79: 47, 111: 47, 88: 34, 120: 34, 89: 57, 121: 57, 90: 58, 122: 58, 91: 59, 123: 59, 92: 60, 124: 60, 93: 61, 125: 61 };
      (function() {
        for (var e2 in Ru)
          Iu[e2] = Iu[Ru[e2]];
      })();
      var Fu = { 1: { n: "PtgElfLel", f: mu }, 2: { n: "PtgElfRw", f: ku }, 3: { n: "PtgElfCol", f: hu }, 6: { n: "PtgElfRwV", f: Eu }, 7: { n: "PtgElfColV", f: pu }, 10: { n: "PtgElfRadical", f: bu }, 11: { n: "PtgElfRadicalS", f: wu }, 13: { n: "PtgElfColS", f: du }, 15: { n: "PtgElfColSV", f: vu }, 16: { n: "PtgElfRadicalLel", f: gu }, 25: { n: "PtgList", f: _u }, 29: { n: "PtgSxName", f: Cu }, 255: {} };
      var Ou = { 0: { n: "PtgAttrNoop", f: Au }, 1: { n: "PtgAttrSemi", f: Dc }, 2: { n: "PtgAttrIf", f: Fc }, 4: { n: "PtgAttrChoose", f: Ic }, 8: { n: "PtgAttrGoto", f: Rc }, 16: { n: "PtgAttrSum", f: Xc }, 32: { n: "PtgAttrBaxcel", f: Ac }, 64: { n: "PtgAttrSpace", f: Nc }, 65: { n: "PtgAttrSpaceSemi", f: Lc }, 128: { n: "PtgAttrIfError", f: Oc }, 255: {} };
      Ou[33] = Ou[32];
      function Du(e2, r2, t2, a2) {
        if (a2.biff < 8)
          return Zr(e2, r2);
        var n2 = e2.l + r2;
        var i2 = [];
        for (var s2 = 0; s2 !== t2.length; ++s2) {
          switch (t2[s2][0]) {
            case "PtgArray":
              t2[s2][1] = qc(e2, 0, a2);
              i2.push(t2[s2][1]);
              break;
            case "PtgMemArea":
              t2[s2][2] = Qc(e2, t2[s2][1], a2);
              i2.push(t2[s2][2]);
              break;
            case "PtgExp":
              if (a2 && a2.biff == 12) {
                t2[s2][1][1] = e2._R(4);
                i2.push(t2[s2][1]);
              }
              break;
            case "PtgList":
              ;
            case "PtgElfRadicalS":
              ;
            case "PtgElfColS":
              ;
            case "PtgElfColSV":
              throw "Unsupported " + t2[s2][0];
            default:
              break;
          }
        }
        r2 = n2 - e2.l;
        if (r2 !== 0)
          i2.push(Zr(e2, r2));
        return i2;
      }
      function Pu(e2, r2, t2) {
        var a2 = e2.l + r2;
        var n2, i2, s2 = [];
        while (a2 != e2.l) {
          r2 = a2 - e2.l;
          i2 = e2[e2.l];
          n2 = Iu[i2];
          if (i2 === 24 || i2 === 25)
            n2 = (i2 === 24 ? Fu : Ou)[e2[e2.l + 1]];
          if (!n2 || !n2.f) {
            Zr(e2, r2);
          } else {
            s2.push([n2.n, n2.f(e2, r2, t2)]);
          }
        }
        return s2;
      }
      function Nu(e2) {
        var r2 = [];
        for (var t2 = 0; t2 < e2.length; ++t2) {
          var a2 = e2[t2], n2 = [];
          for (var i2 = 0; i2 < a2.length; ++i2) {
            var s2 = a2[i2];
            if (s2)
              switch (s2[0]) {
                case 2:
                  n2.push('"' + s2[1].replace(/"/g, '""') + '"');
                  break;
                default:
                  n2.push(s2[1]);
              }
            else
              n2.push("");
          }
          r2.push(n2.join(","));
        }
        return r2.join(";");
      }
      var Lu = { PtgAdd: "+", PtgConcat: "&", PtgDiv: "/", PtgEq: "=", PtgGe: ">=", PtgGt: ">", PtgLe: "<=", PtgLt: "<", PtgMul: "*", PtgNe: "<>", PtgPower: "^", PtgSub: "-" };
      var Mu = new RegExp(/[^\w\u4E00-\u9FFF\u3040-\u30FF]/);
      function Uu(e2, r2) {
        if (!e2 && !(r2 && r2.biff <= 5 && r2.biff >= 2))
          throw new Error("empty sheet name");
        if (Mu.test(e2))
          return "'" + e2 + "'";
        return e2;
      }
      function zu(e2, r2, t2) {
        if (!e2)
          return "SH33TJSERR0";
        if (t2.biff > 8 && (!e2.XTI || !e2.XTI[r2]))
          return e2.SheetNames[r2];
        if (!e2.XTI)
          return "SH33TJSERR6";
        var a2 = e2.XTI[r2];
        if (t2.biff < 8) {
          if (r2 > 1e4)
            r2 -= 65536;
          if (r2 < 0)
            r2 = -r2;
          return r2 == 0 ? "" : e2.XTI[r2 - 1];
        }
        if (!a2)
          return "SH33TJSERR1";
        var n2 = "";
        if (t2.biff > 8)
          switch (e2[a2[0]][0]) {
            case 357:
              n2 = a2[1] == -1 ? "#REF" : e2.SheetNames[a2[1]];
              return a2[1] == a2[2] ? n2 : n2 + ":" + e2.SheetNames[a2[2]];
            case 358:
              if (t2.SID != null)
                return e2.SheetNames[t2.SID];
              return "SH33TJSSAME" + e2[a2[0]][0];
            case 355:
              ;
            default:
              return "SH33TJSSRC" + e2[a2[0]][0];
          }
        switch (e2[a2[0]][0][0]) {
          case 1025:
            n2 = a2[1] == -1 ? "#REF" : e2.SheetNames[a2[1]] || "SH33TJSERR3";
            return a2[1] == a2[2] ? n2 : n2 + ":" + e2.SheetNames[a2[2]];
          case 14849:
            return e2[a2[0]].slice(1).map(function(e3) {
              return e3.Name;
            }).join(";;");
          default:
            if (!e2[a2[0]][0][3])
              return "SH33TJSERR2";
            n2 = a2[1] == -1 ? "#REF" : e2[a2[0]][0][3][a2[1]] || "SH33TJSERR4";
            return a2[1] == a2[2] ? n2 : n2 + ":" + e2[a2[0]][0][3][a2[2]];
        }
      }
      function Hu(e2, r2, t2) {
        var a2 = zu(e2, r2, t2);
        return a2 == "#REF" ? a2 : Uu(a2, t2);
      }
      function Wu(e2, r2, t2, a2, n2) {
        var i2 = n2 && n2.biff || 8;
        var s2 = { s: { c: 0, r: 0 }, e: { c: 0, r: 0 } };
        var f2 = [], l2, o2, c2, u2 = 0, h2 = 0, d2, v2 = "";
        if (!e2[0] || !e2[0][0])
          return "";
        var p2 = -1, m2 = "";
        for (var b2 = 0, g2 = e2[0].length; b2 < g2; ++b2) {
          var w2 = e2[0][b2];
          switch (w2[0]) {
            case "PtgUminus":
              f2.push("-" + f2.pop());
              break;
            case "PtgUplus":
              f2.push("+" + f2.pop());
              break;
            case "PtgPercent":
              f2.push(f2.pop() + "%");
              break;
            case "PtgAdd":
              ;
            case "PtgConcat":
              ;
            case "PtgDiv":
              ;
            case "PtgEq":
              ;
            case "PtgGe":
              ;
            case "PtgGt":
              ;
            case "PtgLe":
              ;
            case "PtgLt":
              ;
            case "PtgMul":
              ;
            case "PtgNe":
              ;
            case "PtgPower":
              ;
            case "PtgSub":
              l2 = f2.pop();
              o2 = f2.pop();
              if (p2 >= 0) {
                switch (e2[0][p2][1][0]) {
                  case 0:
                    m2 = ue(" ", e2[0][p2][1][1]);
                    break;
                  case 1:
                    m2 = ue("\r", e2[0][p2][1][1]);
                    break;
                  default:
                    m2 = "";
                    if (n2.WTF)
                      throw new Error("Unexpected PtgAttrSpaceType " + e2[0][p2][1][0]);
                }
                o2 = o2 + m2;
                p2 = -1;
              }
              f2.push(o2 + Lu[w2[0]] + l2);
              break;
            case "PtgIsect":
              l2 = f2.pop();
              o2 = f2.pop();
              f2.push(o2 + " " + l2);
              break;
            case "PtgUnion":
              l2 = f2.pop();
              o2 = f2.pop();
              f2.push(o2 + "," + l2);
              break;
            case "PtgRange":
              l2 = f2.pop();
              o2 = f2.pop();
              f2.push(o2 + ":" + l2);
              break;
            case "PtgAttrChoose":
              break;
            case "PtgAttrGoto":
              break;
            case "PtgAttrIf":
              break;
            case "PtgAttrIfError":
              break;
            case "PtgRef":
              c2 = rt(w2[1][1], s2, n2);
              f2.push(at(c2, i2));
              break;
            case "PtgRefN":
              c2 = t2 ? rt(w2[1][1], t2, n2) : w2[1][1];
              f2.push(at(c2, i2));
              break;
            case "PtgRef3d":
              u2 = w2[1][1];
              c2 = rt(w2[1][2], s2, n2);
              v2 = Hu(a2, u2, n2);
              var k2 = v2;
              f2.push(v2 + "!" + at(c2, i2));
              break;
            case "PtgFunc":
              ;
            case "PtgFuncVar":
              var E2 = w2[1][0], S = w2[1][1];
              if (!E2)
                E2 = 0;
              E2 &= 127;
              var _2 = E2 == 0 ? [] : f2.slice(-E2);
              f2.length -= E2;
              if (S === "User")
                S = _2.shift();
              f2.push(S + "(" + _2.join(",") + ")");
              break;
            case "PtgBool":
              f2.push(w2[1] ? "TRUE" : "FALSE");
              break;
            case "PtgInt":
              f2.push(w2[1]);
              break;
            case "PtgNum":
              f2.push(String(w2[1]));
              break;
            case "PtgStr":
              f2.push('"' + w2[1].replace(/"/g, '""') + '"');
              break;
            case "PtgErr":
              f2.push(w2[1]);
              break;
            case "PtgAreaN":
              d2 = tt(w2[1][1], t2 ? { s: t2 } : s2, n2);
              f2.push(nt(d2, n2));
              break;
            case "PtgArea":
              d2 = tt(w2[1][1], s2, n2);
              f2.push(nt(d2, n2));
              break;
            case "PtgArea3d":
              u2 = w2[1][1];
              d2 = w2[1][2];
              v2 = Hu(a2, u2, n2);
              f2.push(v2 + "!" + nt(d2, n2));
              break;
            case "PtgAttrSum":
              f2.push("SUM(" + f2.pop() + ")");
              break;
            case "PtgAttrBaxcel":
              ;
            case "PtgAttrSemi":
              break;
            case "PtgName":
              h2 = w2[1][2];
              var C2 = (a2.names || [])[h2 - 1] || (a2[0] || [])[h2];
              var B2 = C2 ? C2.Name : "SH33TJSNAME" + String(h2);
              if (B2 in ih)
                B2 = ih[B2];
              f2.push(B2);
              break;
            case "PtgNameX":
              var T2 = w2[1][1];
              h2 = w2[1][2];
              var y2;
              if (n2.biff <= 5) {
                if (T2 < 0)
                  T2 = -T2;
                if (a2[T2])
                  y2 = a2[T2][h2];
              } else {
                var x2 = "";
                if (((a2[T2] || [])[0] || [])[0] == 14849) {
                } else if (((a2[T2] || [])[0] || [])[0] == 1025) {
                  if (a2[T2][h2] && a2[T2][h2].itab > 0) {
                    x2 = a2.SheetNames[a2[T2][h2].itab - 1] + "!";
                  }
                } else
                  x2 = a2.SheetNames[h2 - 1] + "!";
                if (a2[T2] && a2[T2][h2])
                  x2 += a2[T2][h2].Name;
                else if (a2[0] && a2[0][h2])
                  x2 += a2[0][h2].Name;
                else {
                  var A2 = (zu(a2, T2, n2) || "").split(";;");
                  if (A2[h2 - 1])
                    x2 = A2[h2 - 1];
                  else
                    x2 += "SH33TJSERRX";
                }
                f2.push(x2);
                break;
              }
              if (!y2)
                y2 = { Name: "SH33TJSERRY" };
              f2.push(y2.Name);
              break;
            case "PtgParen":
              var I2 = "(", R2 = ")";
              if (p2 >= 0) {
                m2 = "";
                switch (e2[0][p2][1][0]) {
                  case 2:
                    I2 = ue(" ", e2[0][p2][1][1]) + I2;
                    break;
                  case 3:
                    I2 = ue("\r", e2[0][p2][1][1]) + I2;
                    break;
                  case 4:
                    R2 = ue(" ", e2[0][p2][1][1]) + R2;
                    break;
                  case 5:
                    R2 = ue("\r", e2[0][p2][1][1]) + R2;
                    break;
                  default:
                    if (n2.WTF)
                      throw new Error("Unexpected PtgAttrSpaceType " + e2[0][p2][1][0]);
                }
                p2 = -1;
              }
              f2.push(I2 + f2.pop() + R2);
              break;
            case "PtgRefErr":
              f2.push("#REF!");
              break;
            case "PtgRefErr3d":
              f2.push("#REF!");
              break;
            case "PtgExp":
              c2 = { c: w2[1][1], r: w2[1][0] };
              var F2 = { c: t2.c, r: t2.r };
              if (a2.sharedf[bt(c2)]) {
                var O2 = a2.sharedf[bt(c2)];
                f2.push(Wu(O2, s2, F2, a2, n2));
              } else {
                var D2 = false;
                for (l2 = 0; l2 != a2.arrayf.length; ++l2) {
                  o2 = a2.arrayf[l2];
                  if (c2.c < o2[0].s.c || c2.c > o2[0].e.c)
                    continue;
                  if (c2.r < o2[0].s.r || c2.r > o2[0].e.r)
                    continue;
                  f2.push(Wu(o2[1], s2, F2, a2, n2));
                  D2 = true;
                  break;
                }
                if (!D2)
                  f2.push(w2[1]);
              }
              break;
            case "PtgArray":
              f2.push("{" + Nu(w2[1]) + "}");
              break;
            case "PtgMemArea":
              break;
            case "PtgAttrSpace":
              ;
            case "PtgAttrSpaceSemi":
              p2 = b2;
              break;
            case "PtgTbl":
              break;
            case "PtgMemErr":
              break;
            case "PtgMissArg":
              f2.push("");
              break;
            case "PtgAreaErr":
              f2.push("#REF!");
              break;
            case "PtgAreaErr3d":
              f2.push("#REF!");
              break;
            case "PtgList":
              f2.push("Table" + w2[1].idx + "[#" + w2[1].rt + "]");
              break;
            case "PtgMemAreaN":
              ;
            case "PtgMemNoMemN":
              ;
            case "PtgAttrNoop":
              ;
            case "PtgSheet":
              ;
            case "PtgEndSheet":
              break;
            case "PtgMemFunc":
              break;
            case "PtgMemNoMem":
              break;
            case "PtgElfCol":
              ;
            case "PtgElfColS":
              ;
            case "PtgElfColSV":
              ;
            case "PtgElfColV":
              ;
            case "PtgElfLel":
              ;
            case "PtgElfRadical":
              ;
            case "PtgElfRadicalLel":
              ;
            case "PtgElfRadicalS":
              ;
            case "PtgElfRw":
              ;
            case "PtgElfRwV":
              throw new Error("Unsupported ELFs");
            case "PtgSxName":
              throw new Error("Unrecognized Formula Token: " + String(w2));
            default:
              throw new Error("Unrecognized Formula Token: " + String(w2));
          }
          var P2 = ["PtgAttrSpace", "PtgAttrSpaceSemi", "PtgAttrGoto"];
          if (n2.biff != 3) {
            if (p2 >= 0 && P2.indexOf(e2[0][b2][0]) == -1) {
              w2 = e2[0][p2];
              var N2 = true;
              switch (w2[1][0]) {
                case 4:
                  N2 = false;
                case 0:
                  m2 = ue(" ", w2[1][1]);
                  break;
                case 5:
                  N2 = false;
                case 1:
                  m2 = ue("\r", w2[1][1]);
                  break;
                default:
                  m2 = "";
                  if (n2.WTF)
                    throw new Error("Unexpected PtgAttrSpaceType " + w2[1][0]);
              }
              f2.push((N2 ? m2 : "") + f2.pop() + (N2 ? "" : m2));
              p2 = -1;
            }
          }
        }
        if (f2.length > 1 && n2.WTF)
          throw new Error("bad formula stack");
        return f2[0];
      }
      function Vu(e2, r2, t2) {
        var a2 = e2.l + r2, n2 = t2.biff == 2 ? 1 : 2;
        var i2, s2 = e2._R(n2);
        if (s2 == 65535)
          return [[], Zr(e2, r2 - 2)];
        var f2 = Pu(e2, s2, t2);
        if (r2 !== s2 + n2)
          i2 = Du(e2, r2 - s2 - n2, f2, t2);
        e2.l = a2;
        return [f2, i2];
      }
      function Xu(e2, r2, t2) {
        var a2 = e2.l + r2, n2 = t2.biff == 2 ? 1 : 2;
        var i2, s2 = e2._R(n2);
        if (s2 == 65535)
          return [[], Zr(e2, r2 - 2)];
        var f2 = Pu(e2, s2, t2);
        if (r2 !== s2 + n2)
          i2 = Du(e2, r2 - s2 - n2, f2, t2);
        e2.l = a2;
        return [f2, i2];
      }
      function Gu(e2, r2, t2, a2) {
        var n2 = e2.l + r2;
        var i2 = Pu(e2, a2, t2);
        var s2;
        if (n2 !== e2.l)
          s2 = Du(e2, n2 - e2.l, i2, t2);
        return [i2, s2];
      }
      function ju(e2, r2, t2) {
        var a2 = e2.l + r2;
        var n2, i2 = e2._R(2);
        var s2 = Pu(e2, i2, t2);
        if (i2 == 65535)
          return [[], Zr(e2, r2 - 2)];
        if (r2 !== i2 + 2)
          n2 = Du(e2, a2 - i2 - 2, s2, t2);
        return [s2, n2];
      }
      function Ku(e2) {
        var r2;
        if (Mr(e2, e2.l + 6) !== 65535)
          return [Qt(e2), "n"];
        switch (e2[e2.l]) {
          case 0:
            e2.l += 8;
            return ["String", "s"];
          case 1:
            r2 = e2[e2.l + 2] === 1;
            e2.l += 8;
            return [r2, "b"];
          case 2:
            r2 = e2[e2.l + 2];
            e2.l += 8;
            return [r2, "e"];
          case 3:
            e2.l += 8;
            return ["", "s"];
        }
        return [];
      }
      function $u(e2) {
        if (e2 == null) {
          var r2 = Jr(8);
          r2._W(1, 3);
          r2._W(1, 0);
          r2._W(2, 0);
          r2._W(2, 0);
          r2._W(2, 65535);
          return r2;
        } else if (typeof e2 == "number")
          return qt(e2);
        return qt(0);
      }
      function Yu(e2, r2, t2) {
        var a2 = e2.l + r2;
        var n2 = mi(e2, 6);
        if (t2.biff == 2)
          ++e2.l;
        var i2 = Ku(e2, 8);
        var s2 = e2._R(1);
        if (t2.biff != 2) {
          e2._R(1);
          if (t2.biff >= 5) {
            e2._R(4);
          }
        }
        var f2 = Xu(e2, a2 - e2.l, t2);
        return { cell: n2, val: i2[0], formula: f2, shared: s2 >> 3 & 1, tt: i2[1] };
      }
      function Zu(e2, r2, t2, a2, n2) {
        var i2 = bi(r2, t2, n2);
        var s2 = $u(e2.v);
        var f2 = Jr(6);
        var l2 = 1 | 32;
        f2._W(2, l2);
        f2._W(4, 0);
        var o2 = Jr(e2.bf.length);
        for (var c2 = 0; c2 < e2.bf.length; ++c2)
          o2[c2] = e2.bf[c2];
        var u2 = I([i2, s2, f2, o2]);
        return u2;
      }
      function Ju(e2, r2, t2) {
        var a2 = e2._R(4);
        var n2 = Pu(e2, a2, t2);
        var i2 = e2._R(4);
        var s2 = i2 > 0 ? Du(e2, i2, n2, t2) : null;
        return [n2, s2];
      }
      var Qu = Ju;
      var qu = Ju;
      var eh = Ju;
      var rh = Ju;
      var th = {
        0: "BEEP",
        1: "OPEN",
        2: "OPEN.LINKS",
        3: "CLOSE.ALL",
        4: "SAVE",
        5: "SAVE.AS",
        6: "FILE.DELETE",
        7: "PAGE.SETUP",
        8: "PRINT",
        9: "PRINTER.SETUP",
        10: "QUIT",
        11: "NEW.WINDOW",
        12: "ARRANGE.ALL",
        13: "WINDOW.SIZE",
        14: "WINDOW.MOVE",
        15: "FULL",
        16: "CLOSE",
        17: "RUN",
        22: "SET.PRINT.AREA",
        23: "SET.PRINT.TITLES",
        24: "SET.PAGE.BREAK",
        25: "REMOVE.PAGE.BREAK",
        26: "FONT",
        27: "DISPLAY",
        28: "PROTECT.DOCUMENT",
        29: "PRECISION",
        30: "A1.R1C1",
        31: "CALCULATE.NOW",
        32: "CALCULATION",
        34: "DATA.FIND",
        35: "EXTRACT",
        36: "DATA.DELETE",
        37: "SET.DATABASE",
        38: "SET.CRITERIA",
        39: "SORT",
        40: "DATA.SERIES",
        41: "TABLE",
        42: "FORMAT.NUMBER",
        43: "ALIGNMENT",
        44: "STYLE",
        45: "BORDER",
        46: "CELL.PROTECTION",
        47: "COLUMN.WIDTH",
        48: "UNDO",
        49: "CUT",
        50: "COPY",
        51: "PASTE",
        52: "CLEAR",
        53: "PASTE.SPECIAL",
        54: "EDIT.DELETE",
        55: "INSERT",
        56: "FILL.RIGHT",
        57: "FILL.DOWN",
        61: "DEFINE.NAME",
        62: "CREATE.NAMES",
        63: "FORMULA.GOTO",
        64: "FORMULA.FIND",
        65: "SELECT.LAST.CELL",
        66: "SHOW.ACTIVE.CELL",
        67: "GALLERY.AREA",
        68: "GALLERY.BAR",
        69: "GALLERY.COLUMN",
        70: "GALLERY.LINE",
        71: "GALLERY.PIE",
        72: "GALLERY.SCATTER",
        73: "COMBINATION",
        74: "PREFERRED",
        75: "ADD.OVERLAY",
        76: "GRIDLINES",
        77: "SET.PREFERRED",
        78: "AXES",
        79: "LEGEND",
        80: "ATTACH.TEXT",
        81: "ADD.ARROW",
        82: "SELECT.CHART",
        83: "SELECT.PLOT.AREA",
        84: "PATTERNS",
        85: "MAIN.CHART",
        86: "OVERLAY",
        87: "SCALE",
        88: "FORMAT.LEGEND",
        89: "FORMAT.TEXT",
        90: "EDIT.REPEAT",
        91: "PARSE",
        92: "JUSTIFY",
        93: "HIDE",
        94: "UNHIDE",
        95: "WORKSPACE",
        96: "FORMULA",
        97: "FORMULA.FILL",
        98: "FORMULA.ARRAY",
        99: "DATA.FIND.NEXT",
        100: "DATA.FIND.PREV",
        101: "FORMULA.FIND.NEXT",
        102: "FORMULA.FIND.PREV",
        103: "ACTIVATE",
        104: "ACTIVATE.NEXT",
        105: "ACTIVATE.PREV",
        106: "UNLOCKED.NEXT",
        107: "UNLOCKED.PREV",
        108: "COPY.PICTURE",
        109: "SELECT",
        110: "DELETE.NAME",
        111: "DELETE.FORMAT",
        112: "VLINE",
        113: "HLINE",
        114: "VPAGE",
        115: "HPAGE",
        116: "VSCROLL",
        117: "HSCROLL",
        118: "ALERT",
        119: "NEW",
        120: "CANCEL.COPY",
        121: "SHOW.CLIPBOARD",
        122: "MESSAGE",
        124: "PASTE.LINK",
        125: "APP.ACTIVATE",
        126: "DELETE.ARROW",
        127: "ROW.HEIGHT",
        128: "FORMAT.MOVE",
        129: "FORMAT.SIZE",
        130: "FORMULA.REPLACE",
        131: "SEND.KEYS",
        132: "SELECT.SPECIAL",
        133: "APPLY.NAMES",
        134: "REPLACE.FONT",
        135: "FREEZE.PANES",
        136: "SHOW.INFO",
        137: "SPLIT",
        138: "ON.WINDOW",
        139: "ON.DATA",
        140: "DISABLE.INPUT",
        142: "OUTLINE",
        143: "LIST.NAMES",
        144: "FILE.CLOSE",
        145: "SAVE.WORKBOOK",
        146: "DATA.FORM",
        147: "COPY.CHART",
        148: "ON.TIME",
        149: "WAIT",
        150: "FORMAT.FONT",
        151: "FILL.UP",
        152: "FILL.LEFT",
        153: "DELETE.OVERLAY",
        155: "SHORT.MENUS",
        159: "SET.UPDATE.STATUS",
        161: "COLOR.PALETTE",
        162: "DELETE.STYLE",
        163: "WINDOW.RESTORE",
        164: "WINDOW.MAXIMIZE",
        166: "CHANGE.LINK",
        167: "CALCULATE.DOCUMENT",
        168: "ON.KEY",
        169: "APP.RESTORE",
        170: "APP.MOVE",
        171: "APP.SIZE",
        172: "APP.MINIMIZE",
        173: "APP.MAXIMIZE",
        174: "BRING.TO.FRONT",
        175: "SEND.TO.BACK",
        185: "MAIN.CHART.TYPE",
        186: "OVERLAY.CHART.TYPE",
        187: "SELECT.END",
        188: "OPEN.MAIL",
        189: "SEND.MAIL",
        190: "STANDARD.FONT",
        191: "CONSOLIDATE",
        192: "SORT.SPECIAL",
        193: "GALLERY.3D.AREA",
        194: "GALLERY.3D.COLUMN",
        195: "GALLERY.3D.LINE",
        196: "GALLERY.3D.PIE",
        197: "VIEW.3D",
        198: "GOAL.SEEK",
        199: "WORKGROUP",
        200: "FILL.GROUP",
        201: "UPDATE.LINK",
        202: "PROMOTE",
        203: "DEMOTE",
        204: "SHOW.DETAIL",
        206: "UNGROUP",
        207: "OBJECT.PROPERTIES",
        208: "SAVE.NEW.OBJECT",
        209: "SHARE",
        210: "SHARE.NAME",
        211: "DUPLICATE",
        212: "APPLY.STYLE",
        213: "ASSIGN.TO.OBJECT",
        214: "OBJECT.PROTECTION",
        215: "HIDE.OBJECT",
        216: "SET.EXTRACT",
        217: "CREATE.PUBLISHER",
        218: "SUBSCRIBE.TO",
        219: "ATTRIBUTES",
        220: "SHOW.TOOLBAR",
        222: "PRINT.PREVIEW",
        223: "EDIT.COLOR",
        224: "SHOW.LEVELS",
        225: "FORMAT.MAIN",
        226: "FORMAT.OVERLAY",
        227: "ON.RECALC",
        228: "EDIT.SERIES",
        229: "DEFINE.STYLE",
        240: "LINE.PRINT",
        243: "ENTER.DATA",
        249: "GALLERY.RADAR",
        250: "MERGE.STYLES",
        251: "EDITION.OPTIONS",
        252: "PASTE.PICTURE",
        253: "PASTE.PICTURE.LINK",
        254: "SPELLING",
        256: "ZOOM",
        259: "INSERT.OBJECT",
        260: "WINDOW.MINIMIZE",
        265: "SOUND.NOTE",
        266: "SOUND.PLAY",
        267: "FORMAT.SHAPE",
        268: "EXTEND.POLYGON",
        269: "FORMAT.AUTO",
        272: "GALLERY.3D.BAR",
        273: "GALLERY.3D.SURFACE",
        274: "FILL.AUTO",
        276: "CUSTOMIZE.TOOLBAR",
        277: "ADD.TOOL",
        278: "EDIT.OBJECT",
        279: "ON.DOUBLECLICK",
        280: "ON.ENTRY",
        281: "WORKBOOK.ADD",
        282: "WORKBOOK.MOVE",
        283: "WORKBOOK.COPY",
        284: "WORKBOOK.OPTIONS",
        285: "SAVE.WORKSPACE",
        288: "CHART.WIZARD",
        289: "DELETE.TOOL",
        290: "MOVE.TOOL",
        291: "WORKBOOK.SELECT",
        292: "WORKBOOK.ACTIVATE",
        293: "ASSIGN.TO.TOOL",
        295: "COPY.TOOL",
        296: "RESET.TOOL",
        297: "CONSTRAIN.NUMERIC",
        298: "PASTE.TOOL",
        302: "WORKBOOK.NEW",
        305: "SCENARIO.CELLS",
        306: "SCENARIO.DELETE",
        307: "SCENARIO.ADD",
        308: "SCENARIO.EDIT",
        309: "SCENARIO.SHOW",
        310: "SCENARIO.SHOW.NEXT",
        311: "SCENARIO.SUMMARY",
        312: "PIVOT.TABLE.WIZARD",
        313: "PIVOT.FIELD.PROPERTIES",
        314: "PIVOT.FIELD",
        315: "PIVOT.ITEM",
        316: "PIVOT.ADD.FIELDS",
        318: "OPTIONS.CALCULATION",
        319: "OPTIONS.EDIT",
        320: "OPTIONS.VIEW",
        321: "ADDIN.MANAGER",
        322: "MENU.EDITOR",
        323: "ATTACH.TOOLBARS",
        324: "VBAActivate",
        325: "OPTIONS.CHART",
        328: "VBA.INSERT.FILE",
        330: "VBA.PROCEDURE.DEFINITION",
        336: "ROUTING.SLIP",
        338: "ROUTE.DOCUMENT",
        339: "MAIL.LOGON",
        342: "INSERT.PICTURE",
        343: "EDIT.TOOL",
        344: "GALLERY.DOUGHNUT",
        350: "CHART.TREND",
        352: "PIVOT.ITEM.PROPERTIES",
        354: "WORKBOOK.INSERT",
        355: "OPTIONS.TRANSITION",
        356: "OPTIONS.GENERAL",
        370: "FILTER.ADVANCED",
        373: "MAIL.ADD.MAILER",
        374: "MAIL.DELETE.MAILER",
        375: "MAIL.REPLY",
        376: "MAIL.REPLY.ALL",
        377: "MAIL.FORWARD",
        378: "MAIL.NEXT.LETTER",
        379: "DATA.LABEL",
        380: "INSERT.TITLE",
        381: "FONT.PROPERTIES",
        382: "MACRO.OPTIONS",
        383: "WORKBOOK.HIDE",
        384: "WORKBOOK.UNHIDE",
        385: "WORKBOOK.DELETE",
        386: "WORKBOOK.NAME",
        388: "GALLERY.CUSTOM",
        390: "ADD.CHART.AUTOFORMAT",
        391: "DELETE.CHART.AUTOFORMAT",
        392: "CHART.ADD.DATA",
        393: "AUTO.OUTLINE",
        394: "TAB.ORDER",
        395: "SHOW.DIALOG",
        396: "SELECT.ALL",
        397: "UNGROUP.SHEETS",
        398: "SUBTOTAL.CREATE",
        399: "SUBTOTAL.REMOVE",
        400: "RENAME.OBJECT",
        412: "WORKBOOK.SCROLL",
        413: "WORKBOOK.NEXT",
        414: "WORKBOOK.PREV",
        415: "WORKBOOK.TAB.SPLIT",
        416: "FULL.SCREEN",
        417: "WORKBOOK.PROTECT",
        420: "SCROLLBAR.PROPERTIES",
        421: "PIVOT.SHOW.PAGES",
        422: "TEXT.TO.COLUMNS",
        423: "FORMAT.CHARTTYPE",
        424: "LINK.FORMAT",
        425: "TRACER.DISPLAY",
        430: "TRACER.NAVIGATE",
        431: "TRACER.CLEAR",
        432: "TRACER.ERROR",
        433: "PIVOT.FIELD.GROUP",
        434: "PIVOT.FIELD.UNGROUP",
        435: "CHECKBOX.PROPERTIES",
        436: "LABEL.PROPERTIES",
        437: "LISTBOX.PROPERTIES",
        438: "EDITBOX.PROPERTIES",
        439: "PIVOT.REFRESH",
        440: "LINK.COMBO",
        441: "OPEN.TEXT",
        442: "HIDE.DIALOG",
        443: "SET.DIALOG.FOCUS",
        444: "ENABLE.OBJECT",
        445: "PUSHBUTTON.PROPERTIES",
        446: "SET.DIALOG.DEFAULT",
        447: "FILTER",
        448: "FILTER.SHOW.ALL",
        449: "CLEAR.OUTLINE",
        450: "FUNCTION.WIZARD",
        451: "ADD.LIST.ITEM",
        452: "SET.LIST.ITEM",
        453: "REMOVE.LIST.ITEM",
        454: "SELECT.LIST.ITEM",
        455: "SET.CONTROL.VALUE",
        456: "SAVE.COPY.AS",
        458: "OPTIONS.LISTS.ADD",
        459: "OPTIONS.LISTS.DELETE",
        460: "SERIES.AXES",
        461: "SERIES.X",
        462: "SERIES.Y",
        463: "ERRORBAR.X",
        464: "ERRORBAR.Y",
        465: "FORMAT.CHART",
        466: "SERIES.ORDER",
        467: "MAIL.LOGOFF",
        468: "CLEAR.ROUTING.SLIP",
        469: "APP.ACTIVATE.MICROSOFT",
        470: "MAIL.EDIT.MAILER",
        471: "ON.SHEET",
        472: "STANDARD.WIDTH",
        473: "SCENARIO.MERGE",
        474: "SUMMARY.INFO",
        475: "FIND.FILE",
        476: "ACTIVE.CELL.FONT",
        477: "ENABLE.TIPWIZARD",
        478: "VBA.MAKE.ADDIN",
        480: "INSERTDATATABLE",
        481: "WORKGROUP.OPTIONS",
        482: "MAIL.SEND.MAILER",
        485: "AUTOCORRECT",
        489: "POST.DOCUMENT",
        491: "PICKLIST",
        493: "VIEW.SHOW",
        494: "VIEW.DEFINE",
        495: "VIEW.DELETE",
        509: "SHEET.BACKGROUND",
        510: "INSERT.MAP.OBJECT",
        511: "OPTIONS.MENONO",
        517: "MSOCHECKS",
        518: "NORMAL",
        519: "LAYOUT",
        520: "RM.PRINT.AREA",
        521: "CLEAR.PRINT.AREA",
        522: "ADD.PRINT.AREA",
        523: "MOVE.BRK",
        545: "HIDECURR.NOTE",
        546: "HIDEALL.NOTES",
        547: "DELETE.NOTE",
        548: "TRAVERSE.NOTES",
        549: "ACTIVATE.NOTES",
        620: "PROTECT.REVISIONS",
        621: "UNPROTECT.REVISIONS",
        647: "OPTIONS.ME",
        653: "WEB.PUBLISH",
        667: "NEWWEBQUERY",
        673: "PIVOT.TABLE.CHART",
        753: "OPTIONS.SAVE",
        755: "OPTIONS.SPELL",
        808: "HIDEALL.INKANNOTS"
      };
      var ah = { 0: "COUNT", 1: "IF", 2: "ISNA", 3: "ISERROR", 4: "SUM", 5: "AVERAGE", 6: "MIN", 7: "MAX", 8: "ROW", 9: "COLUMN", 10: "NA", 11: "NPV", 12: "STDEV", 13: "DOLLAR", 14: "FIXED", 15: "SIN", 16: "COS", 17: "TAN", 18: "ATAN", 19: "PI", 20: "SQRT", 21: "EXP", 22: "LN", 23: "LOG10", 24: "ABS", 25: "INT", 26: "SIGN", 27: "ROUND", 28: "LOOKUP", 29: "INDEX", 30: "REPT", 31: "MID", 32: "LEN", 33: "VALUE", 34: "TRUE", 35: "FALSE", 36: "AND", 37: "OR", 38: "NOT", 39: "MOD", 40: "DCOUNT", 41: "DSUM", 42: "DAVERAGE", 43: "DMIN", 44: "DMAX", 45: "DSTDEV", 46: "VAR", 47: "DVAR", 48: "TEXT", 49: "LINEST", 50: "TREND", 51: "LOGEST", 52: "GROWTH", 53: "GOTO", 54: "HALT", 55: "RETURN", 56: "PV", 57: "FV", 58: "NPER", 59: "PMT", 60: "RATE", 61: "MIRR", 62: "IRR", 63: "RAND", 64: "MATCH", 65: "DATE", 66: "TIME", 67: "DAY", 68: "MONTH", 69: "YEAR", 70: "WEEKDAY", 71: "HOUR", 72: "MINUTE", 73: "SECOND", 74: "NOW", 75: "AREAS", 76: "ROWS", 77: "COLUMNS", 78: "OFFSET", 79: "ABSREF", 80: "RELREF", 81: "ARGUMENT", 82: "SEARCH", 83: "TRANSPOSE", 84: "ERROR", 85: "STEP", 86: "TYPE", 87: "ECHO", 88: "SET.NAME", 89: "CALLER", 90: "DEREF", 91: "WINDOWS", 92: "SERIES", 93: "DOCUMENTS", 94: "ACTIVE.CELL", 95: "SELECTION", 96: "RESULT", 97: "ATAN2", 98: "ASIN", 99: "ACOS", 100: "CHOOSE", 101: "HLOOKUP", 102: "VLOOKUP", 103: "LINKS", 104: "INPUT", 105: "ISREF", 106: "GET.FORMULA", 107: "GET.NAME", 108: "SET.VALUE", 109: "LOG", 110: "EXEC", 111: "CHAR", 112: "LOWER", 113: "UPPER", 114: "PROPER", 115: "LEFT", 116: "RIGHT", 117: "EXACT", 118: "TRIM", 119: "REPLACE", 120: "SUBSTITUTE", 121: "CODE", 122: "NAMES", 123: "DIRECTORY", 124: "FIND", 125: "CELL", 126: "ISERR", 127: "ISTEXT", 128: "ISNUMBER", 129: "ISBLANK", 130: "T", 131: "N", 132: "FOPEN", 133: "FCLOSE", 134: "FSIZE", 135: "FREADLN", 136: "FREAD", 137: "FWRITELN", 138: "FWRITE", 139: "FPOS", 140: "DATEVALUE", 141: "TIMEVALUE", 142: "SLN", 143: "SYD", 144: "DDB", 145: "GET.DEF", 146: "REFTEXT", 147: "TEXTREF", 148: "INDIRECT", 149: "REGISTER", 150: "CALL", 151: "ADD.BAR", 152: "ADD.MENU", 153: "ADD.COMMAND", 154: "ENABLE.COMMAND", 155: "CHECK.COMMAND", 156: "RENAME.COMMAND", 157: "SHOW.BAR", 158: "DELETE.MENU", 159: "DELETE.COMMAND", 160: "GET.CHART.ITEM", 161: "DIALOG.BOX", 162: "CLEAN", 163: "MDETERM", 164: "MINVERSE", 165: "MMULT", 166: "FILES", 167: "IPMT", 168: "PPMT", 169: "COUNTA", 170: "CANCEL.KEY", 171: "FOR", 172: "WHILE", 173: "BREAK", 174: "NEXT", 175: "INITIATE", 176: "REQUEST", 177: "POKE", 178: "EXECUTE", 179: "TERMINATE", 180: "RESTART", 181: "HELP", 182: "GET.BAR", 183: "PRODUCT", 184: "FACT", 185: "GET.CELL", 186: "GET.WORKSPACE", 187: "GET.WINDOW", 188: "GET.DOCUMENT", 189: "DPRODUCT", 190: "ISNONTEXT", 191: "GET.NOTE", 192: "NOTE", 193: "STDEVP", 194: "VARP", 195: "DSTDEVP", 196: "DVARP", 197: "TRUNC", 198: "ISLOGICAL", 199: "DCOUNTA", 200: "DELETE.BAR", 201: "UNREGISTER", 204: "USDOLLAR", 205: "FINDB", 206: "SEARCHB", 207: "REPLACEB", 208: "LEFTB", 209: "RIGHTB", 210: "MIDB", 211: "LENB", 212: "ROUNDUP", 213: "ROUNDDOWN", 214: "ASC", 215: "DBCS", 216: "RANK", 219: "ADDRESS", 220: "DAYS360", 221: "TODAY", 222: "VDB", 223: "ELSE", 224: "ELSE.IF", 225: "END.IF", 226: "FOR.CELL", 227: "MEDIAN", 228: "SUMPRODUCT", 229: "SINH", 230: "COSH", 231: "TANH", 232: "ASINH", 233: "ACOSH", 234: "ATANH", 235: "DGET", 236: "CREATE.OBJECT", 237: "VOLATILE", 238: "LAST.ERROR", 239: "CUSTOM.UNDO", 240: "CUSTOM.REPEAT", 241: "FORMULA.CONVERT", 242: "GET.LINK.INFO", 243: "TEXT.BOX", 244: "INFO", 245: "GROUP", 246: "GET.OBJECT", 247: "DB", 248: "PAUSE", 251: "RESUME", 252: "FREQUENCY", 253: "ADD.TOOLBAR", 254: "DELETE.TOOLBAR", 255: "User", 256: "RESET.TOOLBAR", 257: "EVALUATE", 258: "GET.TOOLBAR", 259: "GET.TOOL", 260: "SPELLING.CHECK", 261: "ERROR.TYPE", 262: "APP.TITLE", 263: "WINDOW.TITLE", 264: "SAVE.TOOLBAR", 265: "ENABLE.TOOL", 266: "PRESS.TOOL", 267: "REGISTER.ID", 268: "GET.WORKBOOK", 269: "AVEDEV", 270: "BETADIST", 271: "GAMMALN", 272: "BETAINV", 273: "BINOMDIST", 274: "CHIDIST", 275: "CHIINV", 276: "COMBIN", 277: "CONFIDENCE", 278: "CRITBINOM", 279: "EVEN", 280: "EXPONDIST", 281: "FDIST", 282: "FINV", 283: "FISHER", 284: "FISHERINV", 285: "FLOOR", 286: "GAMMADIST", 287: "GAMMAINV", 288: "CEILING", 289: "HYPGEOMDIST", 290: "LOGNORMDIST", 291: "LOGINV", 292: "NEGBINOMDIST", 293: "NORMDIST", 294: "NORMSDIST", 295: "NORMINV", 296: "NORMSINV", 297: "STANDARDIZE", 298: "ODD", 299: "PERMUT", 300: "POISSON", 301: "TDIST", 302: "WEIBULL", 303: "SUMXMY2", 304: "SUMX2MY2", 305: "SUMX2PY2", 306: "CHITEST", 307: "CORREL", 308: "COVAR", 309: "FORECAST", 310: "FTEST", 311: "INTERCEPT", 312: "PEARSON", 313: "RSQ", 314: "STEYX", 315: "SLOPE", 316: "TTEST", 317: "PROB", 318: "DEVSQ", 319: "GEOMEAN", 320: "HARMEAN", 321: "SUMSQ", 322: "KURT", 323: "SKEW", 324: "ZTEST", 325: "LARGE", 326: "SMALL", 327: "QUARTILE", 328: "PERCENTILE", 329: "PERCENTRANK", 330: "MODE", 331: "TRIMMEAN", 332: "TINV", 334: "MOVIE.COMMAND", 335: "GET.MOVIE", 336: "CONCATENATE", 337: "POWER", 338: "PIVOT.ADD.DATA", 339: "GET.PIVOT.TABLE", 340: "GET.PIVOT.FIELD", 341: "GET.PIVOT.ITEM", 342: "RADIANS", 343: "DEGREES", 344: "SUBTOTAL", 345: "SUMIF", 346: "COUNTIF", 347: "COUNTBLANK", 348: "SCENARIO.GET", 349: "OPTIONS.LISTS.GET", 350: "ISPMT", 351: "DATEDIF", 352: "DATESTRING", 353: "NUMBERSTRING", 354: "ROMAN", 355: "OPEN.DIALOG", 356: "SAVE.DIALOG", 357: "VIEW.GET", 358: "GETPIVOTDATA", 359: "HYPERLINK", 360: "PHONETIC", 361: "AVERAGEA", 362: "MAXA", 363: "MINA", 364: "STDEVPA", 365: "VARPA", 366: "STDEVA", 367: "VARA", 368: "BAHTTEXT", 369: "THAIDAYOFWEEK", 370: "THAIDIGIT", 371: "THAIMONTHOFYEAR", 372: "THAINUMSOUND", 373: "THAINUMSTRING", 374: "THAISTRINGLENGTH", 375: "ISTHAIDIGIT", 376: "ROUNDBAHTDOWN", 377: "ROUNDBAHTUP", 378: "THAIYEAR", 379: "RTD", 380: "CUBEVALUE", 381: "CUBEMEMBER", 382: "CUBEMEMBERPROPERTY", 383: "CUBERANKEDMEMBER", 384: "HEX2BIN", 385: "HEX2DEC", 386: "HEX2OCT", 387: "DEC2BIN", 388: "DEC2HEX", 389: "DEC2OCT", 390: "OCT2BIN", 391: "OCT2HEX", 392: "OCT2DEC", 393: "BIN2DEC", 394: "BIN2OCT", 395: "BIN2HEX", 396: "IMSUB", 397: "IMDIV", 398: "IMPOWER", 399: "IMABS", 400: "IMSQRT", 401: "IMLN", 402: "IMLOG2", 403: "IMLOG10", 404: "IMSIN", 405: "IMCOS", 406: "IMEXP", 407: "IMARGUMENT", 408: "IMCONJUGATE", 409: "IMAGINARY", 410: "IMREAL", 411: "COMPLEX", 412: "IMSUM", 413: "IMPRODUCT", 414: "SERIESSUM", 415: "FACTDOUBLE", 416: "SQRTPI", 417: "QUOTIENT", 418: "DELTA", 419: "GESTEP", 420: "ISEVEN", 421: "ISODD", 422: "MROUND", 423: "ERF", 424: "ERFC", 425: "BESSELJ", 426: "BESSELK", 427: "BESSELY", 428: "BESSELI", 429: "XIRR", 430: "XNPV", 431: "PRICEMAT", 432: "YIELDMAT", 433: "INTRATE", 434: "RECEIVED", 435: "DISC", 436: "PRICEDISC", 437: "YIELDDISC", 438: "TBILLEQ", 439: "TBILLPRICE", 440: "TBILLYIELD", 441: "PRICE", 442: "YIELD", 443: "DOLLARDE", 444: "DOLLARFR", 445: "NOMINAL", 446: "EFFECT", 447: "CUMPRINC", 448: "CUMIPMT", 449: "EDATE", 450: "EOMONTH", 451: "YEARFRAC", 452: "COUPDAYBS", 453: "COUPDAYS", 454: "COUPDAYSNC", 455: "COUPNCD", 456: "COUPNUM", 457: "COUPPCD", 458: "DURATION", 459: "MDURATION", 460: "ODDLPRICE", 461: "ODDLYIELD", 462: "ODDFPRICE", 463: "ODDFYIELD", 464: "RANDBETWEEN", 465: "WEEKNUM", 466: "AMORDEGRC", 467: "AMORLINC", 468: "CONVERT", 724: "SHEETJS", 469: "ACCRINT", 470: "ACCRINTM", 471: "WORKDAY", 472: "NETWORKDAYS", 473: "GCD", 474: "MULTINOMIAL", 475: "LCM", 476: "FVSCHEDULE", 477: "CUBEKPIMEMBER", 478: "CUBESET", 479: "CUBESETCOUNT", 480: "IFERROR", 481: "COUNTIFS", 482: "SUMIFS", 483: "AVERAGEIF", 484: "AVERAGEIFS" };
      var nh = { 2: 1, 3: 1, 10: 0, 15: 1, 16: 1, 17: 1, 18: 1, 19: 0, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 2, 30: 2, 31: 3, 32: 1, 33: 1, 34: 0, 35: 0, 38: 1, 39: 2, 40: 3, 41: 3, 42: 3, 43: 3, 44: 3, 45: 3, 47: 3, 48: 2, 53: 1, 61: 3, 63: 0, 65: 3, 66: 3, 67: 1, 68: 1, 69: 1, 70: 1, 71: 1, 72: 1, 73: 1, 74: 0, 75: 1, 76: 1, 77: 1, 79: 2, 80: 2, 83: 1, 85: 0, 86: 1, 89: 0, 90: 1, 94: 0, 95: 0, 97: 2, 98: 1, 99: 1, 101: 3, 102: 3, 105: 1, 106: 1, 108: 2, 111: 1, 112: 1, 113: 1, 114: 1, 117: 2, 118: 1, 119: 4, 121: 1, 126: 1, 127: 1, 128: 1, 129: 1, 130: 1, 131: 1, 133: 1, 134: 1, 135: 1, 136: 2, 137: 2, 138: 2, 140: 1, 141: 1, 142: 3, 143: 4, 144: 4, 161: 1, 162: 1, 163: 1, 164: 1, 165: 2, 172: 1, 175: 2, 176: 2, 177: 3, 178: 2, 179: 1, 184: 1, 186: 1, 189: 3, 190: 1, 195: 3, 196: 3, 197: 1, 198: 1, 199: 3, 201: 1, 207: 4, 210: 3, 211: 1, 212: 2, 213: 2, 214: 1, 215: 1, 225: 0, 229: 1, 230: 1, 231: 1, 232: 1, 233: 1, 234: 1, 235: 3, 244: 1, 247: 4, 252: 2, 257: 1, 261: 1, 271: 1, 273: 4, 274: 2, 275: 2, 276: 2, 277: 3, 278: 3, 279: 1, 280: 3, 281: 3, 282: 3, 283: 1, 284: 1, 285: 2, 286: 4, 287: 3, 288: 2, 289: 4, 290: 3, 291: 3, 292: 3, 293: 4, 294: 1, 295: 3, 296: 1, 297: 3, 298: 1, 299: 2, 300: 3, 301: 3, 302: 4, 303: 2, 304: 2, 305: 2, 306: 2, 307: 2, 308: 2, 309: 3, 310: 2, 311: 2, 312: 2, 313: 2, 314: 2, 315: 2, 316: 4, 325: 2, 326: 2, 327: 2, 328: 2, 331: 2, 332: 2, 337: 2, 342: 1, 343: 1, 346: 2, 347: 1, 350: 4, 351: 3, 352: 1, 353: 2, 360: 1, 368: 1, 369: 1, 370: 1, 371: 1, 372: 1, 373: 1, 374: 1, 375: 1, 376: 1, 377: 1, 378: 1, 382: 3, 385: 1, 392: 1, 393: 1, 396: 2, 397: 2, 398: 2, 399: 1, 400: 1, 401: 1, 402: 1, 403: 1, 404: 1, 405: 1, 406: 1, 407: 1, 408: 1, 409: 1, 410: 1, 414: 4, 415: 1, 416: 1, 417: 2, 420: 1, 421: 1, 422: 2, 424: 1, 425: 2, 426: 2, 427: 2, 428: 2, 430: 3, 438: 3, 439: 3, 440: 3, 443: 2, 444: 2, 445: 2, 446: 2, 447: 6, 448: 6, 449: 2, 450: 2, 464: 2, 468: 3, 476: 2, 479: 1, 480: 2, 65535: 0 };
      var ih = { "_xlfn.ACOT": "ACOT", "_xlfn.ACOTH": "ACOTH", "_xlfn.AGGREGATE": "AGGREGATE", "_xlfn.ARABIC": "ARABIC", "_xlfn.AVERAGEIF": "AVERAGEIF", "_xlfn.AVERAGEIFS": "AVERAGEIFS", "_xlfn.BASE": "BASE", "_xlfn.BETA.DIST": "BETA.DIST", "_xlfn.BETA.INV": "BETA.INV", "_xlfn.BINOM.DIST": "BINOM.DIST", "_xlfn.BINOM.DIST.RANGE": "BINOM.DIST.RANGE", "_xlfn.BINOM.INV": "BINOM.INV", "_xlfn.BITAND": "BITAND", "_xlfn.BITLSHIFT": "BITLSHIFT", "_xlfn.BITOR": "BITOR", "_xlfn.BITRSHIFT": "BITRSHIFT", "_xlfn.BITXOR": "BITXOR", "_xlfn.CEILING.MATH": "CEILING.MATH", "_xlfn.CEILING.PRECISE": "CEILING.PRECISE", "_xlfn.CHISQ.DIST": "CHISQ.DIST", "_xlfn.CHISQ.DIST.RT": "CHISQ.DIST.RT", "_xlfn.CHISQ.INV": "CHISQ.INV", "_xlfn.CHISQ.INV.RT": "CHISQ.INV.RT", "_xlfn.CHISQ.TEST": "CHISQ.TEST", "_xlfn.COMBINA": "COMBINA", "_xlfn.CONCAT": "CONCAT", "_xlfn.CONFIDENCE.NORM": "CONFIDENCE.NORM", "_xlfn.CONFIDENCE.T": "CONFIDENCE.T", "_xlfn.COT": "COT", "_xlfn.COTH": "COTH", "_xlfn.COUNTIFS": "COUNTIFS", "_xlfn.COVARIANCE.P": "COVARIANCE.P", "_xlfn.COVARIANCE.S": "COVARIANCE.S", "_xlfn.CSC": "CSC", "_xlfn.CSCH": "CSCH", "_xlfn.DAYS": "DAYS", "_xlfn.DECIMAL": "DECIMAL", "_xlfn.ECMA.CEILING": "ECMA.CEILING", "_xlfn.ERF.PRECISE": "ERF.PRECISE", "_xlfn.ERFC.PRECISE": "ERFC.PRECISE", "_xlfn.EXPON.DIST": "EXPON.DIST", "_xlfn.F.DIST": "F.DIST", "_xlfn.F.DIST.RT": "F.DIST.RT", "_xlfn.F.INV": "F.INV", "_xlfn.F.INV.RT": "F.INV.RT", "_xlfn.F.TEST": "F.TEST", "_xlfn.FILTERXML": "FILTERXML", "_xlfn.FLOOR.MATH": "FLOOR.MATH", "_xlfn.FLOOR.PRECISE": "FLOOR.PRECISE", "_xlfn.FORECAST.ETS": "FORECAST.ETS", "_xlfn.FORECAST.ETS.CONFINT": "FORECAST.ETS.CONFINT", "_xlfn.FORECAST.ETS.SEASONALITY": "FORECAST.ETS.SEASONALITY", "_xlfn.FORECAST.ETS.STAT": "FORECAST.ETS.STAT", "_xlfn.FORECAST.LINEAR": "FORECAST.LINEAR", "_xlfn.FORMULATEXT": "FORMULATEXT", "_xlfn.GAMMA": "GAMMA", "_xlfn.GAMMA.DIST": "GAMMA.DIST", "_xlfn.GAMMA.INV": "GAMMA.INV", "_xlfn.GAMMALN.PRECISE": "GAMMALN.PRECISE", "_xlfn.GAUSS": "GAUSS", "_xlfn.HYPGEOM.DIST": "HYPGEOM.DIST", "_xlfn.IFERROR": "IFERROR", "_xlfn.IFNA": "IFNA", "_xlfn.IFS": "IFS", "_xlfn.IMCOSH": "IMCOSH", "_xlfn.IMCOT": "IMCOT", "_xlfn.IMCSC": "IMCSC", "_xlfn.IMCSCH": "IMCSCH", "_xlfn.IMSEC": "IMSEC", "_xlfn.IMSECH": "IMSECH", "_xlfn.IMSINH": "IMSINH", "_xlfn.IMTAN": "IMTAN", "_xlfn.ISFORMULA": "ISFORMULA", "_xlfn.ISO.CEILING": "ISO.CEILING", "_xlfn.ISOWEEKNUM": "ISOWEEKNUM", "_xlfn.LOGNORM.DIST": "LOGNORM.DIST", "_xlfn.LOGNORM.INV": "LOGNORM.INV", "_xlfn.MAXIFS": "MAXIFS", "_xlfn.MINIFS": "MINIFS", "_xlfn.MODE.MULT": "MODE.MULT", "_xlfn.MODE.SNGL": "MODE.SNGL", "_xlfn.MUNIT": "MUNIT", "_xlfn.NEGBINOM.DIST": "NEGBINOM.DIST", "_xlfn.NETWORKDAYS.INTL": "NETWORKDAYS.INTL", "_xlfn.NIGBINOM": "NIGBINOM", "_xlfn.NORM.DIST": "NORM.DIST", "_xlfn.NORM.INV": "NORM.INV", "_xlfn.NORM.S.DIST": "NORM.S.DIST", "_xlfn.NORM.S.INV": "NORM.S.INV", "_xlfn.NUMBERVALUE": "NUMBERVALUE", "_xlfn.PDURATION": "PDURATION", "_xlfn.PERCENTILE.EXC": "PERCENTILE.EXC", "_xlfn.PERCENTILE.INC": "PERCENTILE.INC", "_xlfn.PERCENTRANK.EXC": "PERCENTRANK.EXC", "_xlfn.PERCENTRANK.INC": "PERCENTRANK.INC", "_xlfn.PERMUTATIONA": "PERMUTATIONA", "_xlfn.PHI": "PHI", "_xlfn.POISSON.DIST": "POISSON.DIST", "_xlfn.QUARTILE.EXC": "QUARTILE.EXC", "_xlfn.QUARTILE.INC": "QUARTILE.INC", "_xlfn.QUERYSTRING": "QUERYSTRING", "_xlfn.RANK.AVG": "RANK.AVG", "_xlfn.RANK.EQ": "RANK.EQ", "_xlfn.RRI": "RRI", "_xlfn.SEC": "SEC", "_xlfn.SECH": "SECH", "_xlfn.SHEET": "SHEET", "_xlfn.SHEETS": "SHEETS", "_xlfn.SKEW.P": "SKEW.P", "_xlfn.STDEV.P": "STDEV.P", "_xlfn.STDEV.S": "STDEV.S", "_xlfn.SUMIFS": "SUMIFS", "_xlfn.SWITCH": "SWITCH", "_xlfn.T.DIST": "T.DIST", "_xlfn.T.DIST.2T": "T.DIST.2T", "_xlfn.T.DIST.RT": "T.DIST.RT", "_xlfn.T.INV": "T.INV", "_xlfn.T.INV.2T": "T.INV.2T", "_xlfn.T.TEST": "T.TEST", "_xlfn.TEXTJOIN": "TEXTJOIN", "_xlfn.UNICHAR": "UNICHAR", "_xlfn.UNICODE": "UNICODE", "_xlfn.VAR.P": "VAR.P", "_xlfn.VAR.S": "VAR.S", "_xlfn.WEBSERVICE": "WEBSERVICE", "_xlfn.WEIBULL.DIST": "WEIBULL.DIST", "_xlfn.WORKDAY.INTL": "WORKDAY.INTL", "_xlfn.XOR": "XOR", "_xlfn.Z.TEST": "Z.TEST" };
      function sh(e2) {
        if (e2.slice(0, 3) == "of:")
          e2 = e2.slice(3);
        if (e2.charCodeAt(0) == 61) {
          e2 = e2.slice(1);
          if (e2.charCodeAt(0) == 61)
            e2 = e2.slice(1);
        }
        e2 = e2.replace(/COM\.MICROSOFT\./g, "");
        e2 = e2.replace(/\[((?:\.[A-Z]+[0-9]+)(?::\.[A-Z]+[0-9]+)?)\]/g, function(e3, r2) {
          return r2.replace(/\./g, "");
        });
        e2 = e2.replace(/\[.(#[A-Z]*[?!])\]/g, "$1");
        return e2.replace(/[;~]/g, ",").replace(/\|/g, ";");
      }
      function fh(e2) {
        var r2 = "of:=" + e2.replace(fc, "$1[.$2$3$4$5]").replace(/\]:\[/g, ":");
        return r2.replace(/;/g, "|").replace(/,/g, ";");
      }
      function lh(e2) {
        var r2 = e2.split(":");
        var t2 = r2[0].split(".")[0];
        return [t2, r2[0].split(".")[1] + (r2.length > 1 ? ":" + (r2[1].split(".")[1] || r2[1].split(".")[0]) : "")];
      }
      function oh(e2) {
        return e2.replace(/\./, "!");
      }
      var ch = {};
      var uh = {};
      Ua.WS = ["http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet", "http://purl.oclc.org/ooxml/officeDocument/relationships/worksheet"];
      var hh = typeof Map !== "undefined";
      function dh(e2, r2, t2) {
        var a2 = 0, n2 = e2.length;
        if (t2) {
          if (hh ? t2.has(r2) : Object.prototype.hasOwnProperty.call(t2, r2)) {
            var i2 = hh ? t2.get(r2) : t2[r2];
            for (; a2 < i2.length; ++a2) {
              if (e2[i2[a2]].t === r2) {
                e2.Count++;
                return i2[a2];
              }
            }
          }
        } else
          for (; a2 < n2; ++a2) {
            if (e2[a2].t === r2) {
              e2.Count++;
              return a2;
            }
          }
        e2[n2] = { t: r2 };
        e2.Count++;
        e2.Unique++;
        if (t2) {
          if (hh) {
            if (!t2.has(r2))
              t2.set(r2, []);
            t2.get(r2).push(n2);
          } else {
            if (!Object.prototype.hasOwnProperty.call(t2, r2))
              t2[r2] = [];
            t2[r2].push(n2);
          }
        }
        return n2;
      }
      function vh(e2, r2) {
        var t2 = { min: e2 + 1, max: e2 + 1 };
        var a2 = -1;
        if (r2.MDW)
          bl = r2.MDW;
        if (r2.width != null)
          t2.customWidth = 1;
        else if (r2.wpx != null)
          a2 = wl(r2.wpx);
        else if (r2.wch != null)
          a2 = r2.wch;
        if (a2 > -1) {
          t2.width = kl(a2);
          t2.customWidth = 1;
        } else if (r2.width != null)
          t2.width = r2.width;
        if (r2.hidden)
          t2.hidden = true;
        if (r2.level != null) {
          t2.outlineLevel = t2.level = r2.level;
        }
        return t2;
      }
      function ph(e2, r2) {
        if (!e2)
          return;
        var t2 = [0.7, 0.7, 0.75, 0.75, 0.3, 0.3];
        if (r2 == "xlml")
          t2 = [1, 1, 1, 1, 0.5, 0.5];
        if (e2.left == null)
          e2.left = t2[0];
        if (e2.right == null)
          e2.right = t2[1];
        if (e2.top == null)
          e2.top = t2[2];
        if (e2.bottom == null)
          e2.bottom = t2[3];
        if (e2.header == null)
          e2.header = t2[4];
        if (e2.footer == null)
          e2.footer = t2[5];
      }
      function mh(e2, r2, t2) {
        var a2 = t2.revssf[r2.z != null ? r2.z : "General"];
        var n2 = 60, i2 = e2.length;
        if (a2 == null && t2.ssf) {
          for (; n2 < 392; ++n2)
            if (t2.ssf[n2] == null) {
              O.load(r2.z, n2);
              t2.ssf[n2] = r2.z;
              t2.revssf[r2.z] = a2 = n2;
              break;
            }
        }
        for (n2 = 0; n2 != i2; ++n2)
          if (e2[n2].numFmtId === a2)
            return n2;
        e2[i2] = { numFmtId: a2, fontId: 0, fillId: 0, borderId: 0, xfId: 0, applyNumberFormat: 1 };
        return i2;
      }
      function bh(e2, r2, t2, a2, n2, i2) {
        try {
          if (a2.cellNF)
            e2.z = O._table[r2];
        } catch (s2) {
          if (a2.WTF)
            throw s2;
        }
        if (e2.t === "z" && !a2.cellStyles)
          return;
        if (e2.t === "d" && typeof e2.v === "string")
          e2.v = le(e2.v);
        if ((!a2 || a2.cellText !== false) && e2.t !== "z")
          try {
            if (O._table[r2] == null)
              O.load(N[r2] || "General", r2);
            if (e2.t === "e")
              e2.w = e2.w || Aa[e2.v];
            else if (r2 === 0) {
              if (e2.t === "n") {
                if ((e2.v | 0) === e2.v)
                  e2.w = O._general_int(e2.v);
                else
                  e2.w = O._general_num(e2.v);
              } else if (e2.t === "d") {
                var f2 = ee(e2.v);
                if ((f2 | 0) === f2)
                  e2.w = O._general_int(f2);
                else
                  e2.w = O._general_num(f2);
              } else if (e2.v === void 0)
                return "";
              else
                e2.w = O._general(e2.v, uh);
            } else if (e2.t === "d")
              e2.w = O.format(r2, ee(e2.v), uh);
            else
              e2.w = O.format(r2, e2.v, uh);
          } catch (s2) {
            if (a2.WTF)
              throw s2;
          }
        if (!a2.cellStyles)
          return;
        if (t2 != null)
          try {
            e2.s = i2.Fills[t2];
            if (e2.s.fgColor && e2.s.fgColor.theme && !e2.s.fgColor.rgb) {
              e2.s.fgColor.rgb = dl(n2.themeElements.clrScheme[e2.s.fgColor.theme].rgb, e2.s.fgColor.tint || 0);
              if (a2.WTF)
                e2.s.fgColor.raw_rgb = n2.themeElements.clrScheme[e2.s.fgColor.theme].rgb;
            }
            if (e2.s.bgColor && e2.s.bgColor.theme) {
              e2.s.bgColor.rgb = dl(n2.themeElements.clrScheme[e2.s.bgColor.theme].rgb, e2.s.bgColor.tint || 0);
              if (a2.WTF)
                e2.s.bgColor.raw_rgb = n2.themeElements.clrScheme[e2.s.bgColor.theme].rgb;
            }
          } catch (s2) {
            if (a2.WTF && i2.Fills)
              throw s2;
          }
      }
      function gh(e2, r2, t2) {
        if (e2 && e2["!ref"]) {
          var a2 = kt(e2["!ref"]);
          if (a2.e.c < a2.s.c || a2.e.r < a2.s.r)
            throw new Error("Bad range (" + t2 + "): " + e2["!ref"]);
        }
      }
      function wh(e2, r2) {
        var t2 = kt(r2);
        if (t2.s.r <= t2.e.r && t2.s.c <= t2.e.c && t2.s.r >= 0 && t2.s.c >= 0)
          e2["!ref"] = wt(t2);
      }
      var kh = /<(?:\w:)?mergeCell ref="[A-Z0-9:]+"\s*[\/]?>/g;
      var Eh = /<(?:\w+:)?sheetData[^>]*>([\s\S]*)<\/(?:\w+:)?sheetData>/;
      var Sh = /<(?:\w:)?hyperlink [^>]*>/gm;
      var _h = /"(\w*:\w*)"/;
      var Ch = /<(?:\w:)?col\b[^>]*[\/]?>/g;
      var Bh = /<(?:\w:)?autoFilter[^>]*([\/]|>([\s\S]*)<\/(?:\w:)?autoFilter)>/g;
      var Th = /<(?:\w:)?pageMargins[^>]*\/>/g;
      var yh = /<(?:\w:)?sheetPr\b(?:[^>a-z][^>]*)?\/>/;
      var xh = /<(?:\w:)?sheetPr[^>]*(?:[\/]|>([\s\S]*)<\/(?:\w:)?sheetPr)>/;
      var Ah = /<(?:\w:)?sheetViews[^>]*(?:[\/]|>([\s\S]*)<\/(?:\w:)?sheetViews)>/;
      function Ih(e2, r2, t2, a2, n2, i2, s2) {
        if (!e2)
          return e2;
        if (!a2)
          a2 = { "!id": {} };
        if (m != null && r2.dense == null)
          r2.dense = m;
        var f2 = r2.dense ? [] : {};
        var l2 = { s: { r: 2e6, c: 2e6 }, e: { r: 0, c: 0 } };
        var o2 = "", c2 = "";
        var u2 = e2.match(Eh);
        if (u2) {
          o2 = e2.slice(0, u2.index);
          c2 = e2.slice(u2.index + u2[0].length);
        } else
          o2 = c2 = e2;
        var h2 = o2.match(yh);
        if (h2)
          Fh(h2[0], f2, n2, t2);
        else if (h2 = o2.match(xh))
          Oh(h2[0], h2[1] || "", f2, n2, t2, s2, i2);
        var d2 = (o2.match(/<(?:\w*:)?dimension/) || { index: -1 }).index;
        if (d2 > 0) {
          var v2 = o2.slice(d2, d2 + 50).match(_h);
          if (v2)
            wh(f2, v2[1]);
        }
        var p2 = o2.match(Ah);
        if (p2 && p2[1])
          jh(p2[1], n2);
        var b2 = [];
        if (r2.cellStyles) {
          var g2 = o2.match(Ch);
          if (g2)
            Hh(b2, g2);
        }
        if (u2)
          Yh(u2[1], f2, r2, l2, i2, s2);
        var w2 = c2.match(Bh);
        if (w2)
          f2["!autofilter"] = Vh(w2[0]);
        var k2 = [];
        var E2 = c2.match(kh);
        if (E2)
          for (d2 = 0; d2 != E2.length; ++d2)
            k2[d2] = kt(E2[d2].slice(E2[d2].indexOf('"') + 1));
        var S = c2.match(Sh);
        if (S)
          Mh(f2, S, a2);
        var _2 = c2.match(Th);
        if (_2)
          f2["!margins"] = Uh(De(_2[0]));
        if (!f2["!ref"] && l2.e.c >= l2.s.c && l2.e.r >= l2.s.r)
          f2["!ref"] = wt(l2);
        if (r2.sheetRows > 0 && f2["!ref"]) {
          var C2 = kt(f2["!ref"]);
          if (r2.sheetRows <= +C2.e.r) {
            C2.e.r = r2.sheetRows - 1;
            if (C2.e.r > l2.e.r)
              C2.e.r = l2.e.r;
            if (C2.e.r < C2.s.r)
              C2.s.r = C2.e.r;
            if (C2.e.c > l2.e.c)
              C2.e.c = l2.e.c;
            if (C2.e.c < C2.s.c)
              C2.s.c = C2.e.c;
            f2["!fullref"] = f2["!ref"];
            f2["!ref"] = wt(C2);
          }
        }
        if (b2.length > 0)
          f2["!cols"] = b2;
        if (k2.length > 0)
          f2["!merges"] = k2;
        return f2;
      }
      function Rh(e2) {
        if (e2.length === 0)
          return "";
        var r2 = '<mergeCells count="' + e2.length + '">';
        for (var t2 = 0; t2 != e2.length; ++t2)
          r2 += '<mergeCell ref="' + wt(e2[t2]) + '"/>';
        return r2 + "</mergeCells>";
      }
      function Fh(e2, r2, t2, a2) {
        var n2 = De(e2);
        if (!t2.Sheets[a2])
          t2.Sheets[a2] = {};
        if (n2.codeName)
          t2.Sheets[a2].CodeName = Me(Ye(n2.codeName));
      }
      function Oh(e2, r2, t2, a2, n2, i2, s2) {
        Fh(e2.slice(0, e2.indexOf(">")), t2, a2, n2);
      }
      function Dh(e2, r2, t2, a2, n2) {
        var i2 = false;
        var s2 = {}, f2 = null;
        if (a2.bookType !== "xlsx" && r2.vbaraw) {
          var l2 = r2.SheetNames[t2];
          try {
            if (r2.Workbook)
              l2 = r2.Workbook.Sheets[t2].CodeName || l2;
          } catch (o2) {
          }
          i2 = true;
          s2.codeName = Ze(He(l2));
        }
        if (e2 && e2["!outline"]) {
          var c2 = { summaryBelow: 1, summaryRight: 1 };
          if (e2["!outline"].above)
            c2.summaryBelow = 0;
          if (e2["!outline"].left)
            c2.summaryRight = 0;
          f2 = (f2 || "") + or("outlinePr", null, c2);
        }
        if (!i2 && !f2)
          return;
        n2[n2.length] = or("sheetPr", f2, s2);
      }
      var Ph = ["objects", "scenarios", "selectLockedCells", "selectUnlockedCells"];
      var Nh = ["formatColumns", "formatRows", "formatCells", "insertColumns", "insertRows", "insertHyperlinks", "deleteColumns", "deleteRows", "sort", "autoFilter", "pivotTables"];
      function Lh(e2) {
        var r2 = { sheet: 1 };
        Ph.forEach(function(t2) {
          if (e2[t2] != null && e2[t2])
            r2[t2] = "1";
        });
        Nh.forEach(function(t2) {
          if (e2[t2] != null && !e2[t2])
            r2[t2] = "0";
        });
        if (e2.password)
          r2.password = rl(e2.password).toString(16).toUpperCase();
        return or("sheetProtection", null, r2);
      }
      function Mh(e2, r2, t2) {
        var a2 = Array.isArray(e2);
        for (var n2 = 0; n2 != r2.length; ++n2) {
          var i2 = De(Ye(r2[n2]), true);
          if (!i2.ref)
            return;
          var s2 = ((t2 || {})["!id"] || [])[i2.id];
          if (s2) {
            i2.Target = s2.Target;
            if (i2.location)
              i2.Target += "#" + Me(i2.location);
          } else {
            i2.Target = "#" + Me(i2.location);
            s2 = { Target: i2.Target, TargetMode: "Internal" };
          }
          i2.Rel = s2;
          if (i2.tooltip) {
            i2.Tooltip = i2.tooltip;
            delete i2.tooltip;
          }
          var f2 = kt(i2.ref);
          for (var l2 = f2.s.r; l2 <= f2.e.r; ++l2)
            for (var o2 = f2.s.c; o2 <= f2.e.c; ++o2) {
              var c2 = bt({ c: o2, r: l2 });
              if (a2) {
                if (!e2[l2])
                  e2[l2] = [];
                if (!e2[l2][o2])
                  e2[l2][o2] = { t: "z", v: void 0 };
                e2[l2][o2].l = i2;
              } else {
                if (!e2[c2])
                  e2[c2] = { t: "z", v: void 0 };
                e2[c2].l = i2;
              }
            }
        }
      }
      function Uh(e2) {
        var r2 = {};
        ["left", "right", "top", "bottom", "header", "footer"].forEach(function(t2) {
          if (e2[t2])
            r2[t2] = parseFloat(e2[t2]);
        });
        return r2;
      }
      function zh(e2) {
        ph(e2);
        return or("pageMargins", null, e2);
      }
      function Hh(e2, r2) {
        var t2 = false;
        for (var a2 = 0; a2 != r2.length; ++a2) {
          var n2 = De(r2[a2], true);
          if (n2.hidden)
            n2.hidden = $e(n2.hidden);
          var i2 = parseInt(n2.min, 10) - 1, s2 = parseInt(n2.max, 10) - 1;
          if (n2.outlineLevel)
            n2.level = +n2.outlineLevel || 0;
          delete n2.min;
          delete n2.max;
          n2.width = +n2.width;
          if (!t2 && n2.width) {
            t2 = true;
            Sl(n2.width);
          }
          _l(n2);
          while (i2 <= s2)
            e2[i2++] = ce(n2);
        }
      }
      function Wh(e2, r2) {
        var t2 = ["<cols>"], a2;
        for (var n2 = 0; n2 != r2.length; ++n2) {
          if (!(a2 = r2[n2]))
            continue;
          t2[t2.length] = or("col", null, vh(n2, a2));
        }
        t2[t2.length] = "</cols>";
        return t2.join("");
      }
      function Vh(e2) {
        var r2 = { ref: (e2.match(/ref="([^"]*)"/) || [])[1] };
        return r2;
      }
      function Xh(e2, r2, t2, a2) {
        var n2 = typeof e2.ref == "string" ? e2.ref : wt(e2.ref);
        if (!t2.Workbook)
          t2.Workbook = { Sheets: [] };
        if (!t2.Workbook.Names)
          t2.Workbook.Names = [];
        var i2 = t2.Workbook.Names;
        var s2 = gt(n2);
        if (s2.s.r == s2.e.r) {
          s2.e.r = gt(r2["!ref"]).e.r;
          n2 = wt(s2);
        }
        for (var f2 = 0; f2 < i2.length; ++f2) {
          var l2 = i2[f2];
          if (l2.Name != "_xlnm._FilterDatabase")
            continue;
          if (l2.Sheet != a2)
            continue;
          l2.Ref = "'" + t2.SheetNames[a2] + "'!" + n2;
          break;
        }
        if (f2 == i2.length)
          i2.push({ Name: "_xlnm._FilterDatabase", Sheet: a2, Ref: "'" + t2.SheetNames[a2] + "'!" + n2 });
        return or("autoFilter", null, { ref: n2 });
      }
      var Gh = /<(?:\w:)?sheetView(?:[^>a-z][^>]*)?\/?>/;
      function jh(e2, r2) {
        if (!r2.Views)
          r2.Views = [{}];
        (e2.match(Gh) || []).forEach(function(e3, t2) {
          var a2 = De(e3);
          if (!r2.Views[t2])
            r2.Views[t2] = {};
          if (+a2.zoomScale)
            r2.Views[t2].zoom = +a2.zoomScale;
          if ($e(a2.rightToLeft))
            r2.Views[t2].RTL = true;
        });
      }
      function Kh(e2, r2, t2, a2) {
        var n2 = { workbookViewId: "0" };
        if ((((a2 || {}).Workbook || {}).Views || [])[0])
          n2.rightToLeft = a2.Workbook.Views[0].RTL ? "1" : "0";
        return or("sheetViews", or("sheetView", null, n2), {});
      }
      function $h(e2, r2, t2, a2) {
        if (e2.v === void 0 && typeof e2.f !== "string" || e2.t === "z")
          return "";
        var n2 = "";
        var i2 = e2.t, s2 = e2.v;
        if (e2.t !== "z")
          switch (e2.t) {
            case "b":
              n2 = e2.v ? "1" : "0";
              break;
            case "n":
              n2 = "" + e2.v;
              break;
            case "e":
              n2 = Aa[e2.v];
              break;
            case "d":
              if (a2 && a2.cellDates)
                n2 = le(e2.v, -1).toISOString();
              else {
                e2 = ce(e2);
                e2.t = "n";
                n2 = "" + (e2.v = ee(le(e2.v)));
              }
              if (typeof e2.z === "undefined")
                e2.z = O._table[14];
              break;
            default:
              n2 = e2.v;
              break;
          }
        var f2 = fr("v", He(n2)), l2 = { r: r2 };
        var o2 = mh(a2.cellXfs, e2, a2);
        if (o2 !== 0)
          l2.s = o2;
        switch (e2.t) {
          case "n":
            break;
          case "d":
            l2.t = "d";
            break;
          case "b":
            l2.t = "b";
            break;
          case "e":
            l2.t = "e";
            break;
          case "z":
            break;
          default:
            if (e2.v == null) {
              delete e2.t;
              break;
            }
            if (e2.v.length > 32767)
              throw new Error("Text length must not exceed 32767 characters");
            if (a2 && a2.bookSST) {
              f2 = fr("v", "" + dh(a2.Strings, e2.v, a2.revStrings));
              l2.t = "s";
              break;
            }
            l2.t = "str";
            break;
        }
        if (e2.t != i2) {
          e2.t = i2;
          e2.v = s2;
        }
        if (typeof e2.f == "string" && e2.f) {
          var c2 = e2.F && e2.F.slice(0, r2.length) == r2 ? { t: "array", ref: e2.F } : null;
          f2 = or("f", He(e2.f), c2) + (e2.v != null ? f2 : "");
        }
        if (e2.l)
          t2["!links"].push([r2, e2.l]);
        if (e2.c)
          t2["!comments"].push([r2, e2.c]);
        return or("c", f2, l2);
      }
      var Yh = function() {
        var e2 = /<(?:\w+:)?c[ \/>]/, r2 = /<\/(?:\w+:)?row>/;
        var t2 = /r=["']([^"']*)["']/, a2 = /<(?:\w+:)?is>([\S\s]*?)<\/(?:\w+:)?is>/;
        var n2 = /ref=["']([^"']*)["']/;
        var i2 = er("v"), s2 = er("f");
        return function f2(l2, o2, c2, u2, h2, d2) {
          var v2 = 0, p2 = "", m2 = [], b2 = [], g2 = 0, w2 = 0, k2 = 0, E2 = "", S;
          var _2, C2 = 0, B2 = 0;
          var T2, y2;
          var x2 = 0, A2 = 0;
          var I2 = Array.isArray(d2.CellXf), R2;
          var F2 = [];
          var D2 = [];
          var P2 = Array.isArray(o2);
          var N2 = [], L2 = {}, M2 = false;
          var U2 = !!c2.sheetStubs;
          for (var z2 = l2.split(r2), H2 = 0, W2 = z2.length; H2 != W2; ++H2) {
            p2 = z2[H2].trim();
            var V2 = p2.length;
            if (V2 === 0)
              continue;
            var X2 = 0;
            e:
              for (v2 = 0; v2 < V2; ++v2)
                switch (p2[v2]) {
                  case ">":
                    if (p2[v2 - 1] != "/") {
                      ++v2;
                      break e;
                    }
                    if (c2 && c2.cellStyles) {
                      _2 = De(p2.slice(X2, v2), true);
                      C2 = _2.r != null ? parseInt(_2.r, 10) : C2 + 1;
                      B2 = -1;
                      if (c2.sheetRows && c2.sheetRows < C2)
                        continue;
                      L2 = {};
                      M2 = false;
                      if (_2.ht) {
                        M2 = true;
                        L2.hpt = parseFloat(_2.ht);
                        L2.hpx = yl(L2.hpt);
                      }
                      if (_2.hidden == "1") {
                        M2 = true;
                        L2.hidden = true;
                      }
                      if (_2.outlineLevel != null) {
                        M2 = true;
                        L2.level = +_2.outlineLevel;
                      }
                      if (M2)
                        N2[C2 - 1] = L2;
                    }
                    break;
                  case "<":
                    X2 = v2;
                    break;
                }
            if (X2 >= v2)
              break;
            _2 = De(p2.slice(X2, v2), true);
            C2 = _2.r != null ? parseInt(_2.r, 10) : C2 + 1;
            B2 = -1;
            if (c2.sheetRows && c2.sheetRows < C2)
              continue;
            if (u2.s.r > C2 - 1)
              u2.s.r = C2 - 1;
            if (u2.e.r < C2 - 1)
              u2.e.r = C2 - 1;
            if (c2 && c2.cellStyles) {
              L2 = {};
              M2 = false;
              if (_2.ht) {
                M2 = true;
                L2.hpt = parseFloat(_2.ht);
                L2.hpx = yl(L2.hpt);
              }
              if (_2.hidden == "1") {
                M2 = true;
                L2.hidden = true;
              }
              if (_2.outlineLevel != null) {
                M2 = true;
                L2.level = +_2.outlineLevel;
              }
              if (M2)
                N2[C2 - 1] = L2;
            }
            m2 = p2.slice(v2).split(e2);
            for (var G2 = 0; G2 != m2.length; ++G2)
              if (m2[G2].trim().charAt(0) != "<")
                break;
            m2 = m2.slice(G2);
            for (v2 = 0; v2 != m2.length; ++v2) {
              p2 = m2[v2].trim();
              if (p2.length === 0)
                continue;
              b2 = p2.match(t2);
              g2 = v2;
              w2 = 0;
              k2 = 0;
              p2 = "<c " + (p2.slice(0, 1) == "<" ? ">" : "") + p2;
              if (b2 != null && b2.length === 2) {
                g2 = 0;
                E2 = b2[1];
                for (w2 = 0; w2 != E2.length; ++w2) {
                  if ((k2 = E2.charCodeAt(w2) - 64) < 1 || k2 > 26)
                    break;
                  g2 = 26 * g2 + k2;
                }
                --g2;
                B2 = g2;
              } else
                ++B2;
              for (w2 = 0; w2 != p2.length; ++w2)
                if (p2.charCodeAt(w2) === 62)
                  break;
              ++w2;
              _2 = De(p2.slice(0, w2), true);
              if (!_2.r)
                _2.r = bt({ r: C2 - 1, c: B2 });
              E2 = p2.slice(w2);
              S = { t: "" };
              if ((b2 = E2.match(i2)) != null && b2[1] !== "")
                S.v = Me(b2[1]);
              if (c2.cellFormula) {
                if ((b2 = E2.match(s2)) != null && b2[1] !== "") {
                  S.f = Me(Ye(b2[1])).replace(/\r\n/g, "\n");
                  if (!c2.xlfn)
                    S.f = hc(S.f);
                  if (b2[0].indexOf('t="array"') > -1) {
                    S.F = (E2.match(n2) || [])[1];
                    if (S.F.indexOf(":") > -1)
                      F2.push([kt(S.F), S.F]);
                  } else if (b2[0].indexOf('t="shared"') > -1) {
                    y2 = De(b2[0]);
                    var j2 = Me(Ye(b2[1]));
                    if (!c2.xlfn)
                      j2 = hc(j2);
                    D2[parseInt(y2.si, 10)] = [y2, j2, _2.r];
                  }
                } else if (b2 = E2.match(/<f[^>]*\/>/)) {
                  y2 = De(b2[0]);
                  if (D2[y2.si])
                    S.f = cc(D2[y2.si][1], D2[y2.si][2], _2.r);
                }
                var K2 = mt(_2.r);
                for (w2 = 0; w2 < F2.length; ++w2)
                  if (K2.r >= F2[w2][0].s.r && K2.r <= F2[w2][0].e.r) {
                    if (K2.c >= F2[w2][0].s.c && K2.c <= F2[w2][0].e.c)
                      S.F = F2[w2][1];
                  }
              }
              if (_2.t == null && S.v === void 0) {
                if (S.f || S.F) {
                  S.v = 0;
                  S.t = "n";
                } else if (!U2)
                  continue;
                else
                  S.t = "z";
              } else
                S.t = _2.t || "n";
              if (u2.s.c > B2)
                u2.s.c = B2;
              if (u2.e.c < B2)
                u2.e.c = B2;
              switch (S.t) {
                case "n":
                  if (S.v == "" || S.v == null) {
                    if (!U2)
                      continue;
                    S.t = "z";
                  } else
                    S.v = parseFloat(S.v);
                  break;
                case "s":
                  if (typeof S.v == "undefined") {
                    if (!U2)
                      continue;
                    S.t = "z";
                  } else {
                    T2 = ch[parseInt(S.v, 10)];
                    S.v = T2.t;
                    S.r = T2.r;
                    if (c2.cellHTML)
                      S.h = T2.h;
                  }
                  break;
                case "str":
                  S.t = "s";
                  S.v = S.v != null ? Ye(S.v) : "";
                  if (c2.cellHTML)
                    S.h = Xe(S.v);
                  break;
                case "inlineStr":
                  b2 = E2.match(a2);
                  S.t = "s";
                  if (b2 != null && (T2 = yf(b2[1]))) {
                    S.v = T2.t;
                    if (c2.cellHTML)
                      S.h = T2.h;
                  } else
                    S.v = "";
                  break;
                case "b":
                  S.v = $e(S.v);
                  break;
                case "d":
                  if (c2.cellDates)
                    S.v = le(S.v, 1);
                  else {
                    S.v = ee(le(S.v, 1));
                    S.t = "n";
                  }
                  break;
                case "e":
                  if (!c2 || c2.cellText !== false)
                    S.w = S.v;
                  S.v = Ia[S.v];
                  break;
              }
              x2 = A2 = 0;
              R2 = null;
              if (I2 && _2.s !== void 0) {
                R2 = d2.CellXf[_2.s];
                if (R2 != null) {
                  if (R2.numFmtId != null)
                    x2 = R2.numFmtId;
                  if (c2.cellStyles) {
                    if (R2.fillId != null)
                      A2 = R2.fillId;
                  }
                }
              }
              bh(S, x2, A2, c2, h2, d2);
              if (c2.cellDates && I2 && S.t == "n" && O.is_date(O._table[x2])) {
                S.t = "d";
                S.v = ne(S.v);
              }
              if (P2) {
                var $2 = mt(_2.r);
                if (!o2[$2.r])
                  o2[$2.r] = [];
                o2[$2.r][$2.c] = S;
              } else
                o2[_2.r] = S;
            }
          }
          if (N2.length > 0)
            o2["!rows"] = N2;
        };
      }();
      function Zh(e2, r2, t2, a2) {
        var n2 = [], i2 = [], s2 = kt(e2["!ref"]), f2 = "", l2, o2 = "", c2 = [], u2 = 0, h2 = 0, d2 = e2["!rows"];
        var v2 = Array.isArray(e2);
        var p2 = { r: o2 }, m2, b2 = -1;
        for (h2 = s2.s.c; h2 <= s2.e.c; ++h2)
          c2[h2] = ht(h2);
        for (u2 = s2.s.r; u2 <= s2.e.r; ++u2) {
          i2 = [];
          o2 = lt(u2);
          for (h2 = s2.s.c; h2 <= s2.e.c; ++h2) {
            l2 = c2[h2] + o2;
            var g2 = v2 ? (e2[u2] || [])[h2] : e2[l2];
            if (g2 === void 0)
              continue;
            if ((f2 = $h(g2, l2, e2, r2, t2, a2)) != null)
              i2.push(f2);
          }
          if (i2.length > 0 || d2 && d2[u2]) {
            p2 = { r: o2 };
            if (d2 && d2[u2]) {
              m2 = d2[u2];
              if (m2.hidden)
                p2.hidden = 1;
              b2 = -1;
              if (m2.hpx)
                b2 = Tl(m2.hpx);
              else if (m2.hpt)
                b2 = m2.hpt;
              if (b2 > -1) {
                p2.ht = b2;
                p2.customHeight = 1;
              }
              if (m2.level) {
                p2.outlineLevel = m2.level;
              }
            }
            n2[n2.length] = or("row", i2.join(""), p2);
          }
        }
        if (d2)
          for (; u2 < d2.length; ++u2) {
            if (d2 && d2[u2]) {
              p2 = { r: u2 + 1 };
              m2 = d2[u2];
              if (m2.hidden)
                p2.hidden = 1;
              b2 = -1;
              if (m2.hpx)
                b2 = Tl(m2.hpx);
              else if (m2.hpt)
                b2 = m2.hpt;
              if (b2 > -1) {
                p2.ht = b2;
                p2.customHeight = 1;
              }
              if (m2.level) {
                p2.outlineLevel = m2.level;
              }
              n2[n2.length] = or("row", "", p2);
            }
          }
        return n2.join("");
      }
      var Jh = or("worksheet", null, { xmlns: hr.main[0], "xmlns:r": hr.r });
      function Qh(e2, r2, t2, a2) {
        var n2 = [Ae, Jh];
        var i2 = t2.SheetNames[e2], s2 = 0, f2 = "";
        var l2 = t2.Sheets[i2];
        if (l2 == null)
          l2 = {};
        var o2 = l2["!ref"] || "A1";
        var c2 = kt(o2);
        if (c2.e.c > 16383 || c2.e.r > 1048575) {
          if (r2.WTF)
            throw new Error("Range " + o2 + " exceeds format limit A1:XFD1048576");
          c2.e.c = Math.min(c2.e.c, 16383);
          c2.e.r = Math.min(c2.e.c, 1048575);
          o2 = wt(c2);
        }
        if (!a2)
          a2 = {};
        l2["!comments"] = [];
        var u2 = [];
        Dh(l2, t2, e2, r2, n2);
        n2[n2.length] = or("dimension", null, { ref: o2 });
        n2[n2.length] = Kh(l2, r2, e2, t2);
        if (r2.sheetFormat)
          n2[n2.length] = or("sheetFormatPr", null, { defaultRowHeight: r2.sheetFormat.defaultRowHeight || "16", baseColWidth: r2.sheetFormat.baseColWidth || "10", outlineLevelRow: r2.sheetFormat.outlineLevelRow || "7" });
        if (l2["!cols"] != null && l2["!cols"].length > 0)
          n2[n2.length] = Wh(l2, l2["!cols"]);
        n2[s2 = n2.length] = "<sheetData/>";
        l2["!links"] = [];
        if (l2["!ref"] != null) {
          f2 = Zh(l2, r2, e2, t2, a2);
          if (f2.length > 0)
            n2[n2.length] = f2;
        }
        if (n2.length > s2 + 1) {
          n2[n2.length] = "</sheetData>";
          n2[s2] = n2[s2].replace("/>", ">");
        }
        if (l2["!protect"])
          n2[n2.length] = Lh(l2["!protect"]);
        if (l2["!autofilter"] != null)
          n2[n2.length] = Xh(l2["!autofilter"], l2, t2, e2);
        if (l2["!merges"] != null && l2["!merges"].length > 0)
          n2[n2.length] = Rh(l2["!merges"]);
        var h2 = -1, d2, v2 = -1;
        if (l2["!links"].length > 0) {
          n2[n2.length] = "<hyperlinks>";
          l2["!links"].forEach(function(e3) {
            if (!e3[1].Target)
              return;
            d2 = { ref: e3[0] };
            if (e3[1].Target.charAt(0) != "#") {
              v2 = Ga(a2, -1, He(e3[1].Target).replace(/#.*$/, ""), Ua.HLINK);
              d2["r:id"] = "rId" + v2;
            }
            if ((h2 = e3[1].Target.indexOf("#")) > -1)
              d2.location = He(e3[1].Target.slice(h2 + 1));
            if (e3[1].Tooltip)
              d2.tooltip = He(e3[1].Tooltip);
            n2[n2.length] = or("hyperlink", null, d2);
          });
          n2[n2.length] = "</hyperlinks>";
        }
        delete l2["!links"];
        if (l2["!margins"] != null)
          n2[n2.length] = zh(l2["!margins"]);
        if (!r2 || r2.ignoreEC || r2.ignoreEC == void 0)
          n2[n2.length] = fr("ignoredErrors", or("ignoredError", null, { numberStoredAsText: 1, sqref: o2 }));
        if (u2.length > 0) {
          v2 = Ga(a2, -1, "../drawings/drawing" + (e2 + 1) + ".xml", Ua.DRAW);
          n2[n2.length] = or("drawing", null, { "r:id": "rId" + v2 });
          l2["!drawing"] = u2;
        }
        if (l2["!comments"].length > 0) {
          v2 = Ga(a2, -1, "../drawings/vmlDrawing" + (e2 + 1) + ".vml", Ua.VML);
          n2[n2.length] = or("legacyDrawing", null, { "r:id": "rId" + v2 });
          l2["!legacy"] = v2;
        }
        if (n2.length > 1) {
          n2[n2.length] = "</worksheet>";
          n2[1] = n2[1].replace("/>", ">");
        }
        return n2.join("");
      }
      function qh(e2, r2) {
        var t2 = {};
        var a2 = e2.l + r2;
        t2.r = e2._R(4);
        e2.l += 4;
        var n2 = e2._R(2);
        e2.l += 1;
        var i2 = e2._R(1);
        e2.l = a2;
        if (i2 & 7)
          t2.level = i2 & 7;
        if (i2 & 16)
          t2.hidden = true;
        if (i2 & 32)
          t2.hpt = n2 / 20;
        return t2;
      }
      function ed(e2, r2, t2) {
        var a2 = Jr(17 + 8 * 16);
        var n2 = (t2["!rows"] || [])[e2] || {};
        a2._W(4, e2);
        a2._W(4, 0);
        var i2 = 320;
        if (n2.hpx)
          i2 = Tl(n2.hpx) * 20;
        else if (n2.hpt)
          i2 = n2.hpt * 20;
        a2._W(2, i2);
        a2._W(1, 0);
        var s2 = 0;
        if (n2.level)
          s2 |= n2.level;
        if (n2.hidden)
          s2 |= 16;
        if (n2.hpx || n2.hpt)
          s2 |= 32;
        a2._W(1, s2);
        a2._W(1, 0);
        var f2 = 0, l2 = a2.l;
        a2.l += 4;
        var o2 = { r: e2, c: 0 };
        for (var c2 = 0; c2 < 16; ++c2) {
          if (r2.s.c > c2 + 1 << 10 || r2.e.c < c2 << 10)
            continue;
          var u2 = -1, h2 = -1;
          for (var d2 = c2 << 10; d2 < c2 + 1 << 10; ++d2) {
            o2.c = d2;
            var v2 = Array.isArray(t2) ? (t2[o2.r] || [])[o2.c] : t2[bt(o2)];
            if (v2) {
              if (u2 < 0)
                u2 = d2;
              h2 = d2;
            }
          }
          if (u2 < 0)
            continue;
          ++f2;
          a2._W(4, u2);
          a2._W(4, h2);
        }
        var p2 = a2.l;
        a2.l = l2;
        a2._W(4, f2);
        a2.l = p2;
        return a2.length > a2.l ? a2.slice(0, a2.l) : a2;
      }
      function rd(e2, r2, t2, a2) {
        var n2 = ed(a2, t2, r2);
        if (n2.length > 17 || (r2["!rows"] || [])[a2])
          et(e2, "BrtRowHdr", n2);
      }
      var td = Zt;
      var ad = Jt;
      function nd() {
      }
      function id(e2, r2) {
        var t2 = {};
        var a2 = e2[e2.l];
        ++e2.l;
        t2.above = !(a2 & 64);
        t2.left = !(a2 & 128);
        e2.l += 18;
        t2.name = Ut(e2, r2 - 19);
        return t2;
      }
      function sd(e2, r2, t2) {
        if (t2 == null)
          t2 = Jr(84 + 4 * e2.length);
        var a2 = 192;
        if (r2) {
          if (r2.above)
            a2 &= ~64;
          if (r2.left)
            a2 &= ~128;
        }
        t2._W(1, a2);
        for (var n2 = 1; n2 < 3; ++n2)
          t2._W(1, 0);
        ra({ auto: 1 }, t2);
        t2._W(-4, -1);
        t2._W(-4, -1);
        zt(e2, t2);
        return t2.slice(0, t2.l);
      }
      function fd(e2) {
        var r2 = Pt(e2);
        return [r2];
      }
      function ld(e2, r2, t2) {
        if (t2 == null)
          t2 = Jr(8);
        return Nt(r2, t2);
      }
      function od(e2) {
        var r2 = Lt(e2);
        return [r2];
      }
      function cd(e2, r2, t2) {
        if (t2 == null)
          t2 = Jr(4);
        return Mt(r2, t2);
      }
      function ud(e2) {
        var r2 = Pt(e2);
        var t2 = e2._R(1);
        return [r2, t2, "b"];
      }
      function hd(e2, r2, t2) {
        if (t2 == null)
          t2 = Jr(9);
        Nt(r2, t2);
        t2._W(1, e2.v ? 1 : 0);
        return t2;
      }
      function dd(e2) {
        var r2 = Lt(e2);
        var t2 = e2._R(1);
        return [r2, t2, "b"];
      }
      function vd(e2, r2, t2) {
        if (t2 == null)
          t2 = Jr(5);
        Mt(r2, t2);
        t2._W(1, e2.v ? 1 : 0);
        return t2;
      }
      function pd(e2) {
        var r2 = Pt(e2);
        var t2 = e2._R(1);
        return [r2, t2, "e"];
      }
      function md(e2, r2, t2) {
        if (t2 == null)
          t2 = Jr(9);
        Nt(r2, t2);
        t2._W(1, e2.v);
        return t2;
      }
      function bd(e2) {
        var r2 = Lt(e2);
        var t2 = e2._R(1);
        return [r2, t2, "e"];
      }
      function gd(e2, r2, t2) {
        if (t2 == null)
          t2 = Jr(8);
        Mt(r2, t2);
        t2._W(1, e2.v);
        t2._W(2, 0);
        t2._W(1, 0);
        return t2;
      }
      function wd(e2) {
        var r2 = Pt(e2);
        var t2 = e2._R(4);
        return [r2, t2, "s"];
      }
      function kd(e2, r2, t2) {
        if (t2 == null)
          t2 = Jr(12);
        Nt(r2, t2);
        t2._W(4, r2.v);
        return t2;
      }
      function Ed(e2) {
        var r2 = Lt(e2);
        var t2 = e2._R(4);
        return [r2, t2, "s"];
      }
      function Sd(e2, r2, t2) {
        if (t2 == null)
          t2 = Jr(8);
        Mt(r2, t2);
        t2._W(4, r2.v);
        return t2;
      }
      function _d(e2) {
        var r2 = Pt(e2);
        var t2 = Qt(e2);
        return [r2, t2, "n"];
      }
      function Cd(e2, r2, t2) {
        if (t2 == null)
          t2 = Jr(16);
        Nt(r2, t2);
        qt(e2.v, t2);
        return t2;
      }
      function Bd(e2) {
        var r2 = Lt(e2);
        var t2 = Qt(e2);
        return [r2, t2, "n"];
      }
      function Td(e2, r2, t2) {
        if (t2 == null)
          t2 = Jr(12);
        Mt(r2, t2);
        qt(e2.v, t2);
        return t2;
      }
      function yd(e2) {
        var r2 = Pt(e2);
        var t2 = jt(e2);
        return [r2, t2, "n"];
      }
      function xd(e2, r2, t2) {
        if (t2 == null)
          t2 = Jr(12);
        Nt(r2, t2);
        Kt(e2.v, t2);
        return t2;
      }
      function Ad(e2) {
        var r2 = Lt(e2);
        var t2 = jt(e2);
        return [r2, t2, "n"];
      }
      function Id(e2, r2, t2) {
        if (t2 == null)
          t2 = Jr(8);
        Mt(r2, t2);
        Kt(e2.v, t2);
        return t2;
      }
      function Rd(e2) {
        var r2 = Pt(e2);
        var t2 = yt(e2);
        return [r2, t2, "str"];
      }
      function Fd(e2, r2, t2) {
        if (t2 == null)
          t2 = Jr(12 + 4 * e2.v.length);
        Nt(r2, t2);
        xt(e2.v, t2);
        return t2.length > t2.l ? t2.slice(0, t2.l) : t2;
      }
      function Od(e2) {
        var r2 = Lt(e2);
        var t2 = yt(e2);
        return [r2, t2, "str"];
      }
      function Dd(e2, r2, t2) {
        if (t2 == null)
          t2 = Jr(8 + 4 * e2.v.length);
        Mt(r2, t2);
        xt(e2.v, t2);
        return t2.length > t2.l ? t2.slice(0, t2.l) : t2;
      }
      function Pd(e2, r2, t2) {
        var a2 = e2.l + r2;
        var n2 = Pt(e2);
        n2.r = t2["!row"];
        var i2 = e2._R(1);
        var s2 = [n2, i2, "b"];
        if (t2.cellFormula) {
          e2.l += 2;
          var f2 = qu(e2, a2 - e2.l, t2);
          s2[3] = Wu(f2, null, n2, t2.supbooks, t2);
        } else
          e2.l = a2;
        return s2;
      }
      function Nd(e2, r2, t2) {
        var a2 = e2.l + r2;
        var n2 = Pt(e2);
        n2.r = t2["!row"];
        var i2 = e2._R(1);
        var s2 = [n2, i2, "e"];
        if (t2.cellFormula) {
          e2.l += 2;
          var f2 = qu(e2, a2 - e2.l, t2);
          s2[3] = Wu(f2, null, n2, t2.supbooks, t2);
        } else
          e2.l = a2;
        return s2;
      }
      function Ld(e2, r2, t2) {
        var a2 = e2.l + r2;
        var n2 = Pt(e2);
        n2.r = t2["!row"];
        var i2 = Qt(e2);
        var s2 = [n2, i2, "n"];
        if (t2.cellFormula) {
          e2.l += 2;
          var f2 = qu(e2, a2 - e2.l, t2);
          s2[3] = Wu(f2, null, n2, t2.supbooks, t2);
        } else
          e2.l = a2;
        return s2;
      }
      function Md(e2, r2, t2) {
        var a2 = e2.l + r2;
        var n2 = Pt(e2);
        n2.r = t2["!row"];
        var i2 = yt(e2);
        var s2 = [n2, i2, "str"];
        if (t2.cellFormula) {
          e2.l += 2;
          var f2 = qu(e2, a2 - e2.l, t2);
          s2[3] = Wu(f2, null, n2, t2.supbooks, t2);
        } else
          e2.l = a2;
        return s2;
      }
      var Ud = Zt;
      var zd = Jt;
      function Hd(e2, r2) {
        if (r2 == null)
          r2 = Jr(4);
        r2._W(4, e2);
        return r2;
      }
      function Wd(e2, r2) {
        var t2 = e2.l + r2;
        var a2 = Zt(e2, 16);
        var n2 = Ht(e2);
        var i2 = yt(e2);
        var s2 = yt(e2);
        var f2 = yt(e2);
        e2.l = t2;
        var l2 = { rfx: a2, relId: n2, loc: i2, display: f2 };
        if (s2)
          l2.Tooltip = s2;
        return l2;
      }
      function Vd(e2, r2) {
        var t2 = Jr(50 + 4 * (e2[1].Target.length + (e2[1].Tooltip || "").length));
        Jt({ s: mt(e2[0]), e: mt(e2[0]) }, t2);
        Gt("rId" + r2, t2);
        var a2 = e2[1].Target.indexOf("#");
        var n2 = a2 == -1 ? "" : e2[1].Target.slice(a2 + 1);
        xt(n2 || "", t2);
        xt(e2[1].Tooltip || "", t2);
        xt("", t2);
        return t2.slice(0, t2.l);
      }
      function Xd() {
      }
      function Gd(e2, r2, t2) {
        var a2 = e2.l + r2;
        var n2 = $t(e2, 16);
        var i2 = e2._R(1);
        var s2 = [n2];
        s2[2] = i2;
        if (t2.cellFormula) {
          var f2 = Qu(e2, a2 - e2.l, t2);
          s2[1] = f2;
        } else
          e2.l = a2;
        return s2;
      }
      function jd(e2, r2, t2) {
        var a2 = e2.l + r2;
        var n2 = Zt(e2, 16);
        var i2 = [n2];
        if (t2.cellFormula) {
          var s2 = rh(e2, a2 - e2.l, t2);
          i2[1] = s2;
          e2.l = a2;
        } else
          e2.l = a2;
        return i2;
      }
      function Kd(e2, r2, t2) {
        if (t2 == null)
          t2 = Jr(18);
        var a2 = vh(e2, r2);
        t2._W(-4, e2);
        t2._W(-4, e2);
        t2._W(4, (a2.width || 10) * 256);
        t2._W(4, 0);
        var n2 = 0;
        if (r2.hidden)
          n2 |= 1;
        if (typeof a2.width == "number")
          n2 |= 2;
        if (r2.level)
          n2 |= r2.level << 8;
        t2._W(2, n2);
        return t2;
      }
      var $d = ["left", "right", "top", "bottom", "header", "footer"];
      function Yd(e2) {
        var r2 = {};
        $d.forEach(function(t2) {
          r2[t2] = Qt(e2, 8);
        });
        return r2;
      }
      function Zd(e2, r2) {
        if (r2 == null)
          r2 = Jr(6 * 8);
        ph(e2);
        $d.forEach(function(t2) {
          qt(e2[t2], r2);
        });
        return r2;
      }
      function Jd(e2) {
        var r2 = e2._R(2);
        e2.l += 28;
        return { RTL: r2 & 32 };
      }
      function Qd(e2, r2, t2) {
        if (t2 == null)
          t2 = Jr(30);
        var a2 = 924;
        if ((((r2 || {}).Views || [])[0] || {}).RTL)
          a2 |= 32;
        t2._W(2, a2);
        t2._W(4, 0);
        t2._W(4, 0);
        t2._W(4, 0);
        t2._W(1, 0);
        t2._W(1, 0);
        t2._W(2, 0);
        t2._W(2, 100);
        t2._W(2, 0);
        t2._W(2, 0);
        t2._W(2, 0);
        t2._W(4, 0);
        return t2;
      }
      function qd(e2) {
        var r2 = Jr(24);
        r2._W(4, 4);
        r2._W(4, 1);
        Jt(e2, r2);
        return r2;
      }
      function ev(e2, r2) {
        if (r2 == null)
          r2 = Jr(16 * 4 + 2);
        r2._W(2, e2.password ? rl(e2.password) : 0);
        r2._W(4, 1);
        [["objects", false], ["scenarios", false], ["formatCells", true], ["formatColumns", true], ["formatRows", true], ["insertColumns", true], ["insertRows", true], ["insertHyperlinks", true], ["deleteColumns", true], ["deleteRows", true], ["selectLockedCells", false], ["sort", true], ["autoFilter", true], ["pivotTables", true], ["selectUnlockedCells", false]].forEach(function(t2) {
          if (t2[1])
            r2._W(4, e2[t2[0]] != null && !e2[t2[0]] ? 1 : 0);
          else
            r2._W(4, e2[t2[0]] != null && e2[t2[0]] ? 0 : 1);
        });
        return r2;
      }
      function rv() {
      }
      function tv() {
      }
      function av(e2, r2, t2, a2, n2, i2, s2) {
        if (!e2)
          return e2;
        var f2 = r2 || {};
        if (!a2)
          a2 = { "!id": {} };
        if (m != null && f2.dense == null)
          f2.dense = m;
        var l2 = f2.dense ? [] : {};
        var o2;
        var c2 = { s: { r: 2e6, c: 2e6 }, e: { r: 0, c: 0 } };
        var u2 = [];
        var h2 = false, d2 = false;
        var v2, p2, b2, g2, w2, k2, E2, S, _2;
        var C2 = [];
        f2.biff = 12;
        f2["!row"] = 0;
        var B2 = 0, T2 = false;
        var y2 = [];
        var x2 = {};
        var A2 = f2.supbooks || n2.supbooks || [[]];
        A2.sharedf = x2;
        A2.arrayf = y2;
        A2.SheetNames = n2.SheetNames || n2.Sheets.map(function(e3) {
          return e3.name;
        });
        if (!f2.supbooks) {
          f2.supbooks = A2;
          if (n2.Names)
            for (var I2 = 0; I2 < n2.Names.length; ++I2)
              A2[0][I2 + 1] = n2.Names[I2];
        }
        var R2 = [], F2 = [];
        var D2 = false;
        Qp[16] = { n: "BrtShortReal", f: Bd };
        Qr(e2, function N2(e3, r3, m2) {
          if (d2)
            return;
          switch (m2) {
            case 148:
              o2 = e3;
              break;
            case 0:
              v2 = e3;
              if (f2.sheetRows && f2.sheetRows <= v2.r)
                d2 = true;
              S = lt(g2 = v2.r);
              f2["!row"] = v2.r;
              if (e3.hidden || e3.hpt || e3.level != null) {
                if (e3.hpt)
                  e3.hpx = yl(e3.hpt);
                F2[e3.r] = e3;
              }
              break;
            case 2:
              ;
            case 3:
              ;
            case 4:
              ;
            case 5:
              ;
            case 6:
              ;
            case 7:
              ;
            case 8:
              ;
            case 9:
              ;
            case 10:
              ;
            case 11:
              ;
            case 13:
              ;
            case 14:
              ;
            case 15:
              ;
            case 16:
              ;
            case 17:
              ;
            case 18:
              p2 = { t: e3[2] };
              switch (e3[2]) {
                case "n":
                  p2.v = e3[1];
                  break;
                case "s":
                  E2 = ch[e3[1]];
                  p2.v = E2.t;
                  p2.r = E2.r;
                  break;
                case "b":
                  p2.v = e3[1] ? true : false;
                  break;
                case "e":
                  p2.v = e3[1];
                  if (f2.cellText !== false)
                    p2.w = Aa[p2.v];
                  break;
                case "str":
                  p2.t = "s";
                  p2.v = e3[1];
                  break;
              }
              if (b2 = s2.CellXf[e3[0].iStyleRef])
                bh(p2, b2.numFmtId, null, f2, i2, s2);
              w2 = e3[0].c == -1 ? w2 + 1 : e3[0].c;
              if (f2.dense) {
                if (!l2[g2])
                  l2[g2] = [];
                l2[g2][w2] = p2;
              } else
                l2[ht(w2) + S] = p2;
              if (f2.cellFormula) {
                T2 = false;
                for (B2 = 0; B2 < y2.length; ++B2) {
                  var I3 = y2[B2];
                  if (v2.r >= I3[0].s.r && v2.r <= I3[0].e.r) {
                    if (w2 >= I3[0].s.c && w2 <= I3[0].e.c) {
                      p2.F = wt(I3[0]);
                      T2 = true;
                    }
                  }
                }
                if (!T2 && e3.length > 3)
                  p2.f = e3[3];
              }
              if (c2.s.r > v2.r)
                c2.s.r = v2.r;
              if (c2.s.c > w2)
                c2.s.c = w2;
              if (c2.e.r < v2.r)
                c2.e.r = v2.r;
              if (c2.e.c < w2)
                c2.e.c = w2;
              if (f2.cellDates && b2 && p2.t == "n" && O.is_date(O._table[b2.numFmtId])) {
                var P3 = O.parse_date_code(p2.v);
                if (P3) {
                  p2.t = "d";
                  p2.v = new Date(P3.y, P3.m - 1, P3.d, P3.H, P3.M, P3.S, P3.u);
                }
              }
              break;
            case 1:
              ;
            case 12:
              if (!f2.sheetStubs || h2)
                break;
              p2 = { t: "z", v: void 0 };
              w2 = e3[0].c == -1 ? w2 + 1 : e3[0].c;
              if (f2.dense) {
                if (!l2[g2])
                  l2[g2] = [];
                l2[g2][w2] = p2;
              } else
                l2[ht(w2) + S] = p2;
              if (c2.s.r > v2.r)
                c2.s.r = v2.r;
              if (c2.s.c > w2)
                c2.s.c = w2;
              if (c2.e.r < v2.r)
                c2.e.r = v2.r;
              if (c2.e.c < w2)
                c2.e.c = w2;
              break;
            case 176:
              C2.push(e3);
              break;
            case 494:
              var N3 = a2["!id"][e3.relId];
              if (N3) {
                e3.Target = N3.Target;
                if (e3.loc)
                  e3.Target += "#" + e3.loc;
                e3.Rel = N3;
              } else if (e3.relId == "") {
                e3.Target = "#" + e3.loc;
              }
              for (g2 = e3.rfx.s.r; g2 <= e3.rfx.e.r; ++g2)
                for (w2 = e3.rfx.s.c; w2 <= e3.rfx.e.c; ++w2) {
                  if (f2.dense) {
                    if (!l2[g2])
                      l2[g2] = [];
                    if (!l2[g2][w2])
                      l2[g2][w2] = { t: "z", v: void 0 };
                    l2[g2][w2].l = e3;
                  } else {
                    k2 = bt({ c: w2, r: g2 });
                    if (!l2[k2])
                      l2[k2] = { t: "z", v: void 0 };
                    l2[k2].l = e3;
                  }
                }
              break;
            case 426:
              if (!f2.cellFormula)
                break;
              y2.push(e3);
              _2 = f2.dense ? l2[g2][w2] : l2[ht(w2) + S];
              _2.f = Wu(e3[1], c2, { r: v2.r, c: w2 }, A2, f2);
              _2.F = wt(e3[0]);
              break;
            case 427:
              if (!f2.cellFormula)
                break;
              x2[bt(e3[0].s)] = e3[1];
              _2 = f2.dense ? l2[g2][w2] : l2[ht(w2) + S];
              _2.f = Wu(e3[1], c2, { r: v2.r, c: w2 }, A2, f2);
              break;
            case 60:
              if (!f2.cellStyles)
                break;
              while (e3.e >= e3.s) {
                R2[e3.e--] = { width: e3.w / 256, hidden: !!(e3.flags & 1), level: e3.level };
                if (!D2) {
                  D2 = true;
                  Sl(e3.w / 256);
                }
                _l(R2[e3.e + 1]);
              }
              break;
            case 161:
              l2["!autofilter"] = { ref: wt(e3) };
              break;
            case 476:
              l2["!margins"] = e3;
              break;
            case 147:
              if (!n2.Sheets[t2])
                n2.Sheets[t2] = {};
              if (e3.name)
                n2.Sheets[t2].CodeName = e3.name;
              if (e3.above || e3.left)
                l2["!outline"] = { above: e3.above, left: e3.left };
              break;
            case 137:
              if (!n2.Views)
                n2.Views = [{}];
              if (!n2.Views[0])
                n2.Views[0] = {};
              if (e3.RTL)
                n2.Views[0].RTL = true;
              break;
            case 485:
              break;
            case 64:
              ;
            case 1053:
              break;
            case 151:
              break;
            case 152:
              ;
            case 175:
              ;
            case 644:
              ;
            case 625:
              ;
            case 562:
              ;
            case 396:
              ;
            case 1112:
              ;
            case 1146:
              ;
            case 471:
              ;
            case 1050:
              ;
            case 649:
              ;
            case 1105:
              ;
            case 49:
              ;
            case 589:
              ;
            case 607:
              ;
            case 564:
              ;
            case 1055:
              ;
            case 168:
              ;
            case 174:
              ;
            case 1180:
              ;
            case 499:
              ;
            case 507:
              ;
            case 550:
              ;
            case 171:
              ;
            case 167:
              ;
            case 1177:
              ;
            case 169:
              ;
            case 1181:
              ;
            case 551:
              ;
            case 552:
              ;
            case 661:
              ;
            case 639:
              ;
            case 478:
              ;
            case 537:
              ;
            case 477:
              ;
            case 536:
              ;
            case 1103:
              ;
            case 680:
              ;
            case 1104:
              ;
            case 1024:
              ;
            case 663:
              ;
            case 535:
              ;
            case 678:
              ;
            case 504:
              ;
            case 1043:
              ;
            case 428:
              ;
            case 170:
              ;
            case 3072:
              ;
            case 50:
              ;
            case 2070:
              ;
            case 1045:
              break;
            case 35:
              h2 = true;
              break;
            case 36:
              h2 = false;
              break;
            case 37:
              u2.push(r3);
              h2 = true;
              break;
            case 38:
              u2.pop();
              h2 = false;
              break;
            default:
              if ((r3 || "").indexOf("Begin") > 0) {
              } else if ((r3 || "").indexOf("End") > 0) {
              } else if (!h2 || f2.WTF)
                throw new Error("Unexpected record " + m2 + " " + r3);
          }
        }, f2);
        delete f2.supbooks;
        delete f2["!row"];
        if (!l2["!ref"] && (c2.s.r < 2e6 || o2 && (o2.e.r > 0 || o2.e.c > 0 || o2.s.r > 0 || o2.s.c > 0)))
          l2["!ref"] = wt(o2 || c2);
        if (f2.sheetRows && l2["!ref"]) {
          var P2 = kt(l2["!ref"]);
          if (f2.sheetRows <= +P2.e.r) {
            P2.e.r = f2.sheetRows - 1;
            if (P2.e.r > c2.e.r)
              P2.e.r = c2.e.r;
            if (P2.e.r < P2.s.r)
              P2.s.r = P2.e.r;
            if (P2.e.c > c2.e.c)
              P2.e.c = c2.e.c;
            if (P2.e.c < P2.s.c)
              P2.s.c = P2.e.c;
            l2["!fullref"] = l2["!ref"];
            l2["!ref"] = wt(P2);
          }
        }
        if (C2.length > 0)
          l2["!merges"] = C2;
        if (R2.length > 0)
          l2["!cols"] = R2;
        if (F2.length > 0)
          l2["!rows"] = F2;
        return l2;
      }
      function nv(e2, r2, t2, a2, n2, i2, s2) {
        if (r2.v === void 0)
          return false;
        var f2 = "";
        switch (r2.t) {
          case "b":
            f2 = r2.v ? "1" : "0";
            break;
          case "d":
            r2 = ce(r2);
            r2.z = r2.z || O._table[14];
            r2.v = ee(le(r2.v));
            r2.t = "n";
            break;
          case "n":
            ;
          case "e":
            f2 = "" + r2.v;
            break;
          default:
            f2 = r2.v;
            break;
        }
        var l2 = { r: t2, c: a2 };
        l2.s = mh(n2.cellXfs, r2, n2);
        if (r2.l)
          i2["!links"].push([bt(l2), r2.l]);
        if (r2.c)
          i2["!comments"].push([bt(l2), r2.c]);
        switch (r2.t) {
          case "s":
            ;
          case "str":
            if (n2.bookSST) {
              f2 = dh(n2.Strings, r2.v, n2.revStrings);
              l2.t = "s";
              l2.v = f2;
              if (s2)
                et(e2, "BrtShortIsst", Sd(r2, l2));
              else
                et(e2, "BrtCellIsst", kd(r2, l2));
            } else {
              l2.t = "str";
              if (s2)
                et(e2, "BrtShortSt", Dd(r2, l2));
              else
                et(e2, "BrtCellSt", Fd(r2, l2));
            }
            return true;
          case "n":
            if (r2.v == (r2.v | 0) && r2.v > -1e3 && r2.v < 1e3) {
              if (s2)
                et(e2, "BrtShortRk", Id(r2, l2));
              else
                et(e2, "BrtCellRk", xd(r2, l2));
            } else {
              if (s2)
                et(e2, "BrtShortReal", Td(r2, l2));
              else
                et(e2, "BrtCellReal", Cd(r2, l2));
            }
            return true;
          case "b":
            l2.t = "b";
            if (s2)
              et(e2, "BrtShortBool", vd(r2, l2));
            else
              et(e2, "BrtCellBool", hd(r2, l2));
            return true;
          case "e":
            l2.t = "e";
            if (s2)
              et(e2, "BrtShortError", gd(r2, l2));
            else
              et(e2, "BrtCellError", md(r2, l2));
            return true;
        }
        if (s2)
          et(e2, "BrtShortBlank", cd(r2, l2));
        else
          et(e2, "BrtCellBlank", ld(r2, l2));
        return true;
      }
      function iv(e2, r2, t2, a2) {
        var n2 = kt(r2["!ref"] || "A1"), i2, s2 = "", f2 = [];
        et(e2, "BrtBeginSheetData");
        var l2 = Array.isArray(r2);
        var o2 = n2.e.r;
        if (r2["!rows"])
          o2 = Math.max(n2.e.r, r2["!rows"].length - 1);
        for (var c2 = n2.s.r; c2 <= o2; ++c2) {
          s2 = lt(c2);
          rd(e2, r2, n2, c2);
          var u2 = false;
          if (c2 <= n2.e.r)
            for (var h2 = n2.s.c; h2 <= n2.e.c; ++h2) {
              if (c2 === n2.s.r)
                f2[h2] = ht(h2);
              i2 = f2[h2] + s2;
              var d2 = l2 ? (r2[c2] || [])[h2] : r2[i2];
              if (!d2) {
                u2 = false;
                continue;
              }
              u2 = nv(e2, d2, c2, h2, a2, r2, u2);
            }
        }
        et(e2, "BrtEndSheetData");
      }
      function sv(e2, r2) {
        if (!r2 || !r2["!merges"])
          return;
        et(e2, "BrtBeginMergeCells", Hd(r2["!merges"].length));
        r2["!merges"].forEach(function(r3) {
          et(e2, "BrtMergeCell", zd(r3));
        });
        et(e2, "BrtEndMergeCells");
      }
      function fv(e2, r2) {
        if (!r2 || !r2["!cols"])
          return;
        et(e2, "BrtBeginColInfos");
        r2["!cols"].forEach(function(r3, t2) {
          if (r3)
            et(e2, "BrtColInfo", Kd(t2, r3));
        });
        et(e2, "BrtEndColInfos");
      }
      function lv(e2, r2) {
        if (!r2 || !r2["!ref"])
          return;
        et(e2, "BrtBeginCellIgnoreECs");
        et(e2, "BrtCellIgnoreEC", qd(kt(r2["!ref"])));
        et(e2, "BrtEndCellIgnoreECs");
      }
      function ov(e2, r2, t2) {
        r2["!links"].forEach(function(r3) {
          if (!r3[1].Target)
            return;
          var a2 = Ga(t2, -1, r3[1].Target.replace(/#.*$/, ""), Ua.HLINK);
          et(e2, "BrtHLink", Vd(r3, a2));
        });
        delete r2["!links"];
      }
      function cv(e2, r2, t2, a2) {
        if (r2["!comments"].length > 0) {
          var n2 = Ga(a2, -1, "../drawings/vmlDrawing" + (t2 + 1) + ".vml", Ua.VML);
          et(e2, "BrtLegacyDrawing", Gt("rId" + n2));
          r2["!legacy"] = n2;
        }
      }
      function uv(e2, r2, t2, a2) {
        if (!r2["!autofilter"])
          return;
        var n2 = r2["!autofilter"];
        var i2 = typeof n2.ref === "string" ? n2.ref : wt(n2.ref);
        if (!t2.Workbook)
          t2.Workbook = { Sheets: [] };
        if (!t2.Workbook.Names)
          t2.Workbook.Names = [];
        var s2 = t2.Workbook.Names;
        var f2 = gt(i2);
        if (f2.s.r == f2.e.r) {
          f2.e.r = gt(r2["!ref"]).e.r;
          i2 = wt(f2);
        }
        for (var l2 = 0; l2 < s2.length; ++l2) {
          var o2 = s2[l2];
          if (o2.Name != "_xlnm._FilterDatabase")
            continue;
          if (o2.Sheet != a2)
            continue;
          o2.Ref = "'" + t2.SheetNames[a2] + "'!" + i2;
          break;
        }
        if (l2 == s2.length)
          s2.push({ Name: "_xlnm._FilterDatabase", Sheet: a2, Ref: "'" + t2.SheetNames[a2] + "'!" + i2 });
        et(e2, "BrtBeginAFilter", Jt(kt(i2)));
        et(e2, "BrtEndAFilter");
      }
      function hv(e2, r2, t2) {
        et(e2, "BrtBeginWsViews");
        {
          et(e2, "BrtBeginWsView", Qd(r2, t2));
          et(e2, "BrtEndWsView");
        }
        et(e2, "BrtEndWsViews");
      }
      function dv() {
      }
      function vv(e2, r2) {
        if (!r2["!protect"])
          return;
        et(e2, "BrtSheetProtection", ev(r2["!protect"]));
      }
      function pv(e2, r2, t2, a2) {
        var n2 = qr();
        var i2 = t2.SheetNames[e2], s2 = t2.Sheets[i2] || {};
        var f2 = i2;
        try {
          if (t2 && t2.Workbook)
            f2 = t2.Workbook.Sheets[e2].CodeName || f2;
        } catch (l2) {
        }
        var o2 = kt(s2["!ref"] || "A1");
        if (o2.e.c > 16383 || o2.e.r > 1048575) {
          if (r2.WTF)
            throw new Error("Range " + (s2["!ref"] || "A1") + " exceeds format limit A1:XFD1048576");
          o2.e.c = Math.min(o2.e.c, 16383);
          o2.e.r = Math.min(o2.e.c, 1048575);
        }
        s2["!links"] = [];
        s2["!comments"] = [];
        et(n2, "BrtBeginSheet");
        if (t2.vbaraw || s2["!outline"])
          et(n2, "BrtWsProp", sd(f2, s2["!outline"]));
        et(n2, "BrtWsDim", ad(o2));
        hv(n2, s2, t2.Workbook);
        dv(n2, s2);
        fv(n2, s2, e2, r2, t2);
        iv(n2, s2, e2, r2, t2);
        vv(n2, s2);
        uv(n2, s2, t2, e2);
        sv(n2, s2);
        ov(n2, s2, a2);
        if (s2["!margins"])
          et(n2, "BrtMargins", Zd(s2["!margins"]));
        if (!r2 || r2.ignoreEC || r2.ignoreEC == void 0)
          lv(n2, s2);
        cv(n2, s2, e2, a2);
        et(n2, "BrtEndSheet");
        return n2.end();
      }
      Ua.CHART = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart";
      Ua.CHARTEX = "http://schemas.microsoft.com/office/2014/relationships/chartEx";
      function mv(e2) {
        var r2 = [];
        var t2 = e2.match(/^<c:numCache>/);
        var a2;
        (e2.match(/<c:pt idx="(\d*)">(.*?)<\/c:pt>/gm) || []).forEach(function(e3) {
          var a3 = e3.match(/<c:pt idx="(\d*?)"><c:v>(.*)<\/c:v><\/c:pt>/);
          if (!a3)
            return;
          r2[+a3[1]] = t2 ? +a3[2] : a3[2];
        });
        var n2 = Me((e2.match(/<c:formatCode>([\s\S]*?)<\/c:formatCode>/) || ["", "General"])[1]);
        (e2.match(/<c:f>(.*?)<\/c:f>/gm) || []).forEach(function(e3) {
          a2 = e3.replace(/<.*?>/g, "");
        });
        return [r2, n2, a2];
      }
      function bv(e2, r2, t2, a2, n2, i2) {
        var s2 = i2 || { "!type": "chart" };
        if (!e2)
          return i2;
        var f2 = 0, l2 = 0, o2 = "A";
        var c2 = { s: { r: 2e6, c: 2e6 }, e: { r: 0, c: 0 } };
        (e2.match(/<c:numCache>[\s\S]*?<\/c:numCache>/gm) || []).forEach(function(e3) {
          var r3 = mv(e3);
          c2.s.r = c2.s.c = 0;
          c2.e.c = f2;
          o2 = ht(f2);
          r3[0].forEach(function(e4, t3) {
            s2[o2 + lt(t3)] = { t: "n", v: e4, z: r3[1] };
            l2 = t3;
          });
          if (c2.e.r < l2)
            c2.e.r = l2;
          ++f2;
        });
        if (f2 > 0)
          s2["!ref"] = wt(c2);
        return s2;
      }
      Ua.CS = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/chartsheet";
      var gv = or("chartsheet", null, { xmlns: hr.main[0], "xmlns:r": hr.r });
      function wv(e2, r2, t2, a2, n2) {
        if (!e2)
          return e2;
        if (!a2)
          a2 = { "!id": {} };
        var i2 = { "!type": "chart", "!drawel": null, "!rel": "" };
        var s2;
        var f2 = e2.match(yh);
        if (f2)
          Fh(f2[0], i2, n2, t2);
        if (s2 = e2.match(/drawing r:id="(.*?)"/))
          i2["!rel"] = s2[1];
        if (a2["!id"][i2["!rel"]])
          i2["!drawel"] = a2["!id"][i2["!rel"]];
        return i2;
      }
      function kv(e2, r2, t2, a2) {
        var n2 = [Ae, gv];
        n2[n2.length] = or("drawing", null, { "r:id": "rId1" });
        Ga(a2, -1, "../drawings/drawing" + (e2 + 1) + ".xml", Ua.DRAW);
        if (n2.length > 2) {
          n2[n2.length] = "</chartsheet>";
          n2[1] = n2[1].replace("/>", ">");
        }
        return n2.join("");
      }
      function Ev(e2, r2) {
        e2.l += 10;
        var t2 = yt(e2, r2 - 10);
        return { name: t2 };
      }
      function Sv(e2, r2, t2, a2, n2) {
        if (!e2)
          return e2;
        if (!a2)
          a2 = { "!id": {} };
        var i2 = { "!type": "chart", "!drawel": null, "!rel": "" };
        var s2 = [];
        var f2 = false;
        Qr(e2, function l2(e3, a3, o2) {
          switch (o2) {
            case 550:
              i2["!rel"] = e3;
              break;
            case 651:
              if (!n2.Sheets[t2])
                n2.Sheets[t2] = {};
              if (e3.name)
                n2.Sheets[t2].CodeName = e3.name;
              break;
            case 562:
              ;
            case 652:
              ;
            case 669:
              ;
            case 679:
              ;
            case 551:
              ;
            case 552:
              ;
            case 476:
              ;
            case 3072:
              break;
            case 35:
              f2 = true;
              break;
            case 36:
              f2 = false;
              break;
            case 37:
              s2.push(a3);
              break;
            case 38:
              s2.pop();
              break;
            default:
              if ((a3 || "").indexOf("Begin") > 0)
                s2.push(a3);
              else if ((a3 || "").indexOf("End") > 0)
                s2.pop();
              else if (!f2 || r2.WTF)
                throw new Error("Unexpected record " + o2 + " " + a3);
          }
        }, r2);
        if (a2["!id"][i2["!rel"]])
          i2["!drawel"] = a2["!id"][i2["!rel"]];
        return i2;
      }
      function _v() {
        var e2 = qr();
        et(e2, "BrtBeginSheet");
        et(e2, "BrtEndSheet");
        return e2.end();
      }
      var Cv = [["allowRefreshQuery", false, "bool"], ["autoCompressPictures", true, "bool"], ["backupFile", false, "bool"], ["checkCompatibility", false, "bool"], ["CodeName", ""], ["date1904", false, "bool"], ["defaultThemeVersion", 0, "int"], ["filterPrivacy", false, "bool"], ["hidePivotFieldList", false, "bool"], ["promptedSolutions", false, "bool"], ["publishItems", false, "bool"], ["refreshAllConnections", false, "bool"], ["saveExternalLinkValues", true, "bool"], ["showBorderUnselectedTables", true, "bool"], ["showInkAnnotation", true, "bool"], ["showObjects", "all"], ["showPivotChartFilter", false, "bool"], ["updateLinks", "userSet"]];
      var Bv = [["activeTab", 0, "int"], ["autoFilterDateGrouping", true, "bool"], ["firstSheet", 0, "int"], ["minimized", false, "bool"], ["showHorizontalScroll", true, "bool"], ["showSheetTabs", true, "bool"], ["showVerticalScroll", true, "bool"], ["tabRatio", 600, "int"], ["visibility", "visible"]];
      var Tv = [];
      var yv = [["calcCompleted", "true"], ["calcMode", "auto"], ["calcOnSave", "true"], ["concurrentCalc", "true"], ["fullCalcOnLoad", "false"], ["fullPrecision", "true"], ["iterate", "false"], ["iterateCount", "100"], ["iterateDelta", "0.001"], ["refMode", "A1"]];
      function xv(e2, r2) {
        for (var t2 = 0; t2 != e2.length; ++t2) {
          var a2 = e2[t2];
          for (var n2 = 0; n2 != r2.length; ++n2) {
            var i2 = r2[n2];
            if (a2[i2[0]] == null)
              a2[i2[0]] = i2[1];
            else
              switch (i2[2]) {
                case "bool":
                  if (typeof a2[i2[0]] == "string")
                    a2[i2[0]] = $e(a2[i2[0]]);
                  break;
                case "int":
                  if (typeof a2[i2[0]] == "string")
                    a2[i2[0]] = parseInt(a2[i2[0]], 10);
                  break;
              }
          }
        }
      }
      function Av(e2, r2) {
        for (var t2 = 0; t2 != r2.length; ++t2) {
          var a2 = r2[t2];
          if (e2[a2[0]] == null)
            e2[a2[0]] = a2[1];
          else
            switch (a2[2]) {
              case "bool":
                if (typeof e2[a2[0]] == "string")
                  e2[a2[0]] = $e(e2[a2[0]]);
                break;
              case "int":
                if (typeof e2[a2[0]] == "string")
                  e2[a2[0]] = parseInt(e2[a2[0]], 10);
                break;
            }
        }
      }
      function Iv(e2) {
        Av(e2.WBProps, Cv);
        Av(e2.CalcPr, yv);
        xv(e2.WBView, Bv);
        xv(e2.Sheets, Tv);
        uh.date1904 = $e(e2.WBProps.date1904);
      }
      function Rv(e2) {
        if (!e2.Workbook)
          return "false";
        if (!e2.Workbook.WBProps)
          return "false";
        return $e(e2.Workbook.WBProps.date1904) ? "true" : "false";
      }
      var Fv = "][*?/\\".split("");
      function Ov(e2, r2) {
        if (e2.length > 31) {
          if (r2)
            return false;
          throw new Error("Sheet names cannot exceed 31 chars");
        }
        var t2 = true;
        Fv.forEach(function(a2) {
          if (e2.indexOf(a2) == -1)
            return;
          if (!r2)
            throw new Error("Sheet name cannot contain : \\ / ? * [ ]");
          t2 = false;
        });
        return t2;
      }
      function Dv(e2, r2, t2) {
        e2.forEach(function(a2, n2) {
          Ov(a2);
          for (var i2 = 0; i2 < n2; ++i2)
            if (a2 == e2[i2])
              throw new Error("Duplicate Sheet Name: " + a2);
          if (t2) {
            var s2 = r2 && r2[n2] && r2[n2].CodeName || a2;
            if (s2.charCodeAt(0) == 95 && s2.length > 22)
              throw new Error("Bad Code Name: Worksheet" + s2);
          }
        });
      }
      function Pv(e2) {
        if (!e2 || !e2.SheetNames || !e2.Sheets)
          throw new Error("Invalid Workbook");
        if (!e2.SheetNames.length)
          throw new Error("Workbook is empty");
        var r2 = e2.Workbook && e2.Workbook.Sheets || [];
        Dv(e2.SheetNames, r2, !!e2.vbaraw);
        for (var t2 = 0; t2 < e2.SheetNames.length; ++t2)
          gh(e2.Sheets[e2.SheetNames[t2]], e2.SheetNames[t2], t2);
      }
      var Nv = /<\w+:workbook/;
      function Lv(e2, r2) {
        if (!e2)
          throw new Error("Could not find file");
        var t2 = { AppVersion: {}, WBProps: {}, WBView: [], Sheets: [], CalcPr: {}, Names: [], xmlns: "" };
        var a2 = false, n2 = "xmlns";
        var i2 = {}, s2 = 0;
        e2.replace(Re, function f2(l2, o2) {
          var c2 = De(l2);
          switch (Pe(c2[0])) {
            case "<?xml":
              break;
            case "<workbook":
              if (l2.match(Nv))
                n2 = "xmlns" + l2.match(/<(\w+):/)[1];
              t2.xmlns = c2[n2];
              break;
            case "</workbook>":
              break;
            case "<fileVersion":
              delete c2[0];
              t2.AppVersion = c2;
              break;
            case "<fileVersion/>":
              ;
            case "</fileVersion>":
              break;
            case "<fileSharing":
              break;
            case "<fileSharing/>":
              break;
            case "<workbookPr":
              ;
            case "<workbookPr/>":
              Cv.forEach(function(e3) {
                if (c2[e3[0]] == null)
                  return;
                switch (e3[2]) {
                  case "bool":
                    t2.WBProps[e3[0]] = $e(c2[e3[0]]);
                    break;
                  case "int":
                    t2.WBProps[e3[0]] = parseInt(c2[e3[0]], 10);
                    break;
                  default:
                    t2.WBProps[e3[0]] = c2[e3[0]];
                }
              });
              if (c2.codeName)
                t2.WBProps.CodeName = Ye(c2.codeName);
              break;
            case "</workbookPr>":
              break;
            case "<workbookProtection":
              break;
            case "<workbookProtection/>":
              break;
            case "<bookViews":
              ;
            case "<bookViews>":
              ;
            case "</bookViews>":
              break;
            case "<workbookView":
              ;
            case "<workbookView/>":
              delete c2[0];
              t2.WBView.push(c2);
              break;
            case "</workbookView>":
              break;
            case "<sheets":
              ;
            case "<sheets>":
              ;
            case "</sheets>":
              break;
            case "<sheet":
              switch (c2.state) {
                case "hidden":
                  c2.Hidden = 1;
                  break;
                case "veryHidden":
                  c2.Hidden = 2;
                  break;
                default:
                  c2.Hidden = 0;
              }
              delete c2.state;
              c2.name = Me(Ye(c2.name));
              delete c2[0];
              t2.Sheets.push(c2);
              break;
            case "</sheet>":
              break;
            case "<functionGroups":
              ;
            case "<functionGroups/>":
              break;
            case "<functionGroup":
              break;
            case "<externalReferences":
              ;
            case "</externalReferences>":
              ;
            case "<externalReferences>":
              break;
            case "<externalReference":
              break;
            case "<definedNames/>":
              break;
            case "<definedNames>":
              ;
            case "<definedNames":
              a2 = true;
              break;
            case "</definedNames>":
              a2 = false;
              break;
            case "<definedName":
              {
                i2 = {};
                i2.Name = Ye(c2.name);
                if (c2.comment)
                  i2.Comment = c2.comment;
                if (c2.localSheetId)
                  i2.Sheet = +c2.localSheetId;
                if ($e(c2.hidden || "0"))
                  i2.Hidden = true;
                s2 = o2 + l2.length;
              }
              break;
            case "</definedName>":
              {
                i2.Ref = Me(Ye(e2.slice(s2, o2)));
                t2.Names.push(i2);
              }
              break;
            case "<definedName/>":
              break;
            case "<calcPr":
              delete c2[0];
              t2.CalcPr = c2;
              break;
            case "<calcPr/>":
              delete c2[0];
              t2.CalcPr = c2;
              break;
            case "</calcPr>":
              break;
            case "<oleSize":
              break;
            case "<customWorkbookViews>":
              ;
            case "</customWorkbookViews>":
              ;
            case "<customWorkbookViews":
              break;
            case "<customWorkbookView":
              ;
            case "</customWorkbookView>":
              break;
            case "<pivotCaches>":
              ;
            case "</pivotCaches>":
              ;
            case "<pivotCaches":
              break;
            case "<pivotCache":
              break;
            case "<smartTagPr":
              ;
            case "<smartTagPr/>":
              break;
            case "<smartTagTypes":
              ;
            case "<smartTagTypes>":
              ;
            case "</smartTagTypes>":
              break;
            case "<smartTagType":
              break;
            case "<webPublishing":
              ;
            case "<webPublishing/>":
              break;
            case "<fileRecoveryPr":
              ;
            case "<fileRecoveryPr/>":
              break;
            case "<webPublishObjects>":
              ;
            case "<webPublishObjects":
              ;
            case "</webPublishObjects>":
              break;
            case "<webPublishObject":
              break;
            case "<extLst":
              ;
            case "<extLst>":
              ;
            case "</extLst>":
              ;
            case "<extLst/>":
              break;
            case "<ext":
              a2 = true;
              break;
            case "</ext>":
              a2 = false;
              break;
            case "<ArchID":
              break;
            case "<AlternateContent":
              ;
            case "<AlternateContent>":
              a2 = true;
              break;
            case "</AlternateContent>":
              a2 = false;
              break;
            case "<revisionPtr":
              break;
            default:
              if (!a2 && r2.WTF)
                throw new Error("unrecognized " + c2[0] + " in workbook");
          }
          return l2;
        });
        if (hr.main.indexOf(t2.xmlns) === -1)
          throw new Error("Unknown Namespace: " + t2.xmlns);
        Iv(t2);
        return t2;
      }
      var Mv = or("workbook", null, { xmlns: hr.main[0], "xmlns:r": hr.r });
      function Uv(e2) {
        var r2 = [Ae];
        r2[r2.length] = Mv;
        var t2 = e2.Workbook && (e2.Workbook.Names || []).length > 0;
        var a2 = { codeName: "ThisWorkbook" };
        if (e2.Workbook && e2.Workbook.WBProps) {
          Cv.forEach(function(r3) {
            if (e2.Workbook.WBProps[r3[0]] == null)
              return;
            if (e2.Workbook.WBProps[r3[0]] == r3[1])
              return;
            a2[r3[0]] = e2.Workbook.WBProps[r3[0]];
          });
          if (e2.Workbook.WBProps.CodeName) {
            a2.codeName = e2.Workbook.WBProps.CodeName;
            delete a2.CodeName;
          }
        }
        r2[r2.length] = or("workbookPr", null, a2);
        var n2 = e2.Workbook && e2.Workbook.Sheets || [];
        var i2 = 0;
        if (n2 && n2[0] && !!n2[0].Hidden) {
          r2[r2.length] = "<bookViews>";
          for (i2 = 0; i2 != e2.SheetNames.length; ++i2) {
            if (!n2[i2])
              break;
            if (!n2[i2].Hidden)
              break;
          }
          if (i2 == e2.SheetNames.length)
            i2 = 0;
          r2[r2.length] = '<workbookView firstSheet="' + i2 + '" activeTab="' + i2 + '"/>';
          r2[r2.length] = "</bookViews>";
        }
        r2[r2.length] = "<sheets>";
        for (i2 = 0; i2 != e2.SheetNames.length; ++i2) {
          var s2 = { name: He(e2.SheetNames[i2].slice(0, 31)) };
          s2.sheetId = "" + (i2 + 1);
          s2["r:id"] = "rId" + (i2 + 1);
          if (n2[i2])
            switch (n2[i2].Hidden) {
              case 1:
                s2.state = "hidden";
                break;
              case 2:
                s2.state = "veryHidden";
                break;
            }
          r2[r2.length] = or("sheet", null, s2);
        }
        r2[r2.length] = "</sheets>";
        if (t2) {
          r2[r2.length] = "<definedNames>";
          if (e2.Workbook && e2.Workbook.Names)
            e2.Workbook.Names.forEach(function(e3) {
              var t3 = { name: e3.Name };
              if (e3.Comment)
                t3.comment = e3.Comment;
              if (e3.Sheet != null)
                t3.localSheetId = "" + e3.Sheet;
              if (e3.Hidden)
                t3.hidden = "1";
              if (!e3.Ref)
                return;
              r2[r2.length] = or("definedName", He(e3.Ref), t3);
            });
          r2[r2.length] = "</definedNames>";
        }
        if (r2.length > 2) {
          r2[r2.length] = "</workbook>";
          r2[1] = r2[1].replace("/>", ">");
        }
        return r2.join("");
      }
      function zv(e2, r2) {
        var t2 = {};
        t2.Hidden = e2._R(4);
        t2.iTabID = e2._R(4);
        t2.strRelID = Xt(e2, r2 - 8);
        t2.name = yt(e2);
        return t2;
      }
      function Hv(e2, r2) {
        if (!r2)
          r2 = Jr(127);
        r2._W(4, e2.Hidden);
        r2._W(4, e2.iTabID);
        Gt(e2.strRelID, r2);
        xt(e2.name.slice(0, 31), r2);
        return r2.length > r2.l ? r2.slice(0, r2.l) : r2;
      }
      function Wv(e2, r2) {
        var t2 = {};
        var a2 = e2._R(4);
        t2.defaultThemeVersion = e2._R(4);
        var n2 = r2 > 8 ? yt(e2) : "";
        if (n2.length > 0)
          t2.CodeName = n2;
        t2.autoCompressPictures = !!(a2 & 65536);
        t2.backupFile = !!(a2 & 64);
        t2.checkCompatibility = !!(a2 & 4096);
        t2.date1904 = !!(a2 & 1);
        t2.filterPrivacy = !!(a2 & 8);
        t2.hidePivotFieldList = !!(a2 & 1024);
        t2.promptedSolutions = !!(a2 & 16);
        t2.publishItems = !!(a2 & 2048);
        t2.refreshAllConnections = !!(a2 & 262144);
        t2.saveExternalLinkValues = !!(a2 & 128);
        t2.showBorderUnselectedTables = !!(a2 & 4);
        t2.showInkAnnotation = !!(a2 & 32);
        t2.showObjects = ["all", "placeholders", "none"][a2 >> 13 & 3];
        t2.showPivotChartFilter = !!(a2 & 32768);
        t2.updateLinks = ["userSet", "never", "always"][a2 >> 8 & 3];
        return t2;
      }
      function Vv(e2, r2) {
        if (!r2)
          r2 = Jr(72);
        var t2 = 0;
        if (e2) {
          if (e2.filterPrivacy)
            t2 |= 8;
        }
        r2._W(4, t2);
        r2._W(4, 0);
        zt(e2 && e2.CodeName || "ThisWorkbook", r2);
        return r2.slice(0, r2.l);
      }
      function Xv(e2, r2) {
        var t2 = {};
        e2._R(4);
        t2.ArchID = e2._R(4);
        e2.l += r2 - 8;
        return t2;
      }
      function Gv(e2, r2, t2) {
        var a2 = e2.l + r2;
        e2.l += 4;
        e2.l += 1;
        var n2 = e2._R(4);
        var i2 = Vt(e2);
        var s2 = eh(e2, 0, t2);
        var f2 = Ht(e2);
        e2.l = a2;
        var l2 = { Name: i2, Ptg: s2 };
        if (n2 < 268435455)
          l2.Sheet = n2;
        if (f2)
          l2.Comment = f2;
        return l2;
      }
      function jv(e2, r2) {
        var t2 = { AppVersion: {}, WBProps: {}, WBView: [], Sheets: [], CalcPr: {}, xmlns: "" };
        var a2 = [];
        var n2 = false;
        if (!r2)
          r2 = {};
        r2.biff = 12;
        var i2 = [];
        var s2 = [[]];
        s2.SheetNames = [];
        s2.XTI = [];
        Qp[16] = { n: "BrtFRTArchID$", f: Xv };
        Qr(e2, function f2(e3, l2, o2) {
          switch (o2) {
            case 156:
              s2.SheetNames.push(e3.name);
              t2.Sheets.push(e3);
              break;
            case 153:
              t2.WBProps = e3;
              break;
            case 39:
              if (e3.Sheet != null)
                r2.SID = e3.Sheet;
              e3.Ref = Wu(e3.Ptg, null, null, s2, r2);
              delete r2.SID;
              delete e3.Ptg;
              i2.push(e3);
              break;
            case 1036:
              break;
            case 357:
              ;
            case 358:
              ;
            case 355:
              ;
            case 667:
              if (!s2[0].length)
                s2[0] = [o2, e3];
              else
                s2.push([o2, e3]);
              s2[s2.length - 1].XTI = [];
              break;
            case 362:
              if (s2.length === 0) {
                s2[0] = [];
                s2[0].XTI = [];
              }
              s2[s2.length - 1].XTI = s2[s2.length - 1].XTI.concat(e3);
              s2.XTI = s2.XTI.concat(e3);
              break;
            case 361:
              break;
            case 2071:
              ;
            case 158:
              ;
            case 143:
              ;
            case 664:
              ;
            case 353:
              break;
            case 3072:
              ;
            case 3073:
              ;
            case 534:
              ;
            case 677:
              ;
            case 157:
              ;
            case 610:
              ;
            case 2050:
              ;
            case 155:
              ;
            case 548:
              ;
            case 676:
              ;
            case 128:
              ;
            case 665:
              ;
            case 2128:
              ;
            case 2125:
              ;
            case 549:
              ;
            case 2053:
              ;
            case 596:
              ;
            case 2076:
              ;
            case 2075:
              ;
            case 2082:
              ;
            case 397:
              ;
            case 154:
              ;
            case 1117:
              ;
            case 553:
              ;
            case 2091:
              break;
            case 35:
              a2.push(l2);
              n2 = true;
              break;
            case 36:
              a2.pop();
              n2 = false;
              break;
            case 37:
              a2.push(l2);
              n2 = true;
              break;
            case 38:
              a2.pop();
              n2 = false;
              break;
            case 16:
              break;
            default:
              if ((l2 || "").indexOf("Begin") > 0) {
              } else if ((l2 || "").indexOf("End") > 0) {
              } else if (!n2 || r2.WTF && a2[a2.length - 1] != "BrtACBegin" && a2[a2.length - 1] != "BrtFRTBegin")
                throw new Error("Unexpected record " + o2 + " " + l2);
          }
        }, r2);
        Iv(t2);
        t2.Names = i2;
        t2.supbooks = s2;
        return t2;
      }
      function Kv(e2, r2) {
        et(e2, "BrtBeginBundleShs");
        for (var t2 = 0; t2 != r2.SheetNames.length; ++t2) {
          var a2 = r2.Workbook && r2.Workbook.Sheets && r2.Workbook.Sheets[t2] && r2.Workbook.Sheets[t2].Hidden || 0;
          var n2 = { Hidden: a2, iTabID: t2 + 1, strRelID: "rId" + (t2 + 1), name: r2.SheetNames[t2] };
          et(e2, "BrtBundleSh", Hv(n2));
        }
        et(e2, "BrtEndBundleShs");
      }
      function $v(r2, t2) {
        if (!t2)
          t2 = Jr(127);
        for (var a2 = 0; a2 != 4; ++a2)
          t2._W(4, 0);
        xt("SheetJS", t2);
        xt(e.version, t2);
        xt(e.version, t2);
        xt("7262", t2);
        return t2.length > t2.l ? t2.slice(0, t2.l) : t2;
      }
      function Yv(e2, r2) {
        if (!r2)
          r2 = Jr(29);
        r2._W(-4, 0);
        r2._W(-4, 460);
        r2._W(4, 28800);
        r2._W(4, 17600);
        r2._W(4, 500);
        r2._W(4, e2);
        r2._W(4, e2);
        var t2 = 120;
        r2._W(1, t2);
        return r2.length > r2.l ? r2.slice(0, r2.l) : r2;
      }
      function Zv(e2, r2) {
        if (!r2.Workbook || !r2.Workbook.Sheets)
          return;
        var t2 = r2.Workbook.Sheets;
        var a2 = 0, n2 = -1, i2 = -1;
        for (; a2 < t2.length; ++a2) {
          if (!t2[a2] || !t2[a2].Hidden && n2 == -1)
            n2 = a2;
          else if (t2[a2].Hidden == 1 && i2 == -1)
            i2 = a2;
        }
        if (i2 > n2)
          return;
        et(e2, "BrtBeginBookViews");
        et(e2, "BrtBookView", Yv(n2));
        et(e2, "BrtEndBookViews");
      }
      function Jv(e2, r2) {
        var t2 = qr();
        et(t2, "BrtBeginBook");
        et(t2, "BrtFileVersion", $v());
        et(t2, "BrtWbProp", Vv(e2.Workbook && e2.Workbook.WBProps || null));
        Zv(t2, e2, r2);
        Kv(t2, e2, r2);
        et(t2, "BrtEndBook");
        return t2.end();
      }
      function Qv(e2, r2, t2) {
        if (r2.slice(-4) === ".bin")
          return jv(e2, t2);
        return Lv(e2, t2);
      }
      function qv(e2, r2, t2, a2, n2, i2, s2, f2) {
        if (r2.slice(-4) === ".bin")
          return av(e2, a2, t2, n2, i2, s2, f2);
        return Ih(e2, a2, t2, n2, i2, s2, f2);
      }
      function ep(e2, r2, t2, a2, n2, i2, s2, f2) {
        if (r2.slice(-4) === ".bin")
          return Sv(e2, a2, t2, n2, i2, s2, f2);
        return wv(e2, a2, t2, n2, i2, s2, f2);
      }
      function rp(e2, r2, t2, a2, n2, i2, s2, f2) {
        if (r2.slice(-4) === ".bin")
          return nc(e2, a2, t2, n2, i2, s2, f2);
        return ic(e2, a2, t2, n2, i2, s2, f2);
      }
      function tp(e2, r2, t2, a2, n2, i2, s2, f2) {
        if (r2.slice(-4) === ".bin")
          return tc(e2, a2, t2, n2, i2, s2, f2);
        return ac(e2, a2, t2, n2, i2, s2, f2);
      }
      function ap(e2, r2, t2, a2) {
        if (r2.slice(-4) === ".bin")
          return to(e2, t2, a2);
        return Ml(e2, t2, a2);
      }
      function np(e2, r2, t2) {
        return Co(e2, t2);
      }
      function ip(e2, r2, t2) {
        if (r2.slice(-4) === ".bin")
          return Pf(e2, t2);
        return Rf(e2, t2);
      }
      function sp(e2, r2, t2) {
        if (r2.slice(-4) === ".bin")
          return Zo(e2, t2);
        return Vo(e2, t2);
      }
      function fp(e2, r2, t2) {
        if (r2.slice(-4) === ".bin")
          return No(e2, r2, t2);
        return Do(e2, r2, t2);
      }
      function lp(e2, r2, t2, a2) {
        if (t2.slice(-4) === ".bin")
          return Mo(e2, r2, t2, a2);
        return Lo(e2, r2, t2, a2);
      }
      function op(e2, r2, t2) {
        return (r2.slice(-4) === ".bin" ? Jv : Uv)(e2, t2);
      }
      function cp(e2, r2, t2, a2, n2) {
        return (r2.slice(-4) === ".bin" ? pv : Qh)(e2, t2, a2, n2);
      }
      function up(e2, r2, t2, a2, n2) {
        return (r2.slice(-4) === ".bin" ? _v : kv)(e2, t2, a2, n2);
      }
      function hp(e2, r2, t2) {
        return (r2.slice(-4) === ".bin" ? vo : zl)(e2, t2);
      }
      function dp(e2, r2, t2) {
        return (r2.slice(-4) === ".bin" ? Mf : Of)(e2, t2);
      }
      function vp(e2, r2, t2) {
        return (r2.slice(-4) === ".bin" ? Jo : Go)(e2, t2);
      }
      var pp = /([\w:]+)=((?:")([^"]*)(?:")|(?:')([^']*)(?:'))/g;
      var mp = /([\w:]+)=((?:")(?:[^"]*)(?:")|(?:')(?:[^']*)(?:'))/;
      function bp(e2, r2) {
        var t2 = e2.split(/\s+/);
        var a2 = [];
        if (!r2)
          a2[0] = t2[0];
        if (t2.length === 1)
          return a2;
        var n2 = e2.match(pp), i2, s2, f2, l2;
        if (n2)
          for (l2 = 0; l2 != n2.length; ++l2) {
            i2 = n2[l2].match(mp);
            if ((s2 = i2[1].indexOf(":")) === -1)
              a2[i2[1]] = i2[2].slice(1, i2[2].length - 1);
            else {
              if (i2[1].slice(0, 6) === "xmlns:")
                f2 = "xmlns" + i2[1].slice(6);
              else
                f2 = i2[1].slice(s2 + 1);
              a2[f2] = i2[2].slice(1, i2[2].length - 1);
            }
          }
        return a2;
      }
      function gp(e2) {
        var r2 = e2.split(/\s+/);
        var t2 = {};
        if (r2.length === 1)
          return t2;
        var a2 = e2.match(pp), n2, i2, s2, f2;
        if (a2)
          for (f2 = 0; f2 != a2.length; ++f2) {
            n2 = a2[f2].match(mp);
            if ((i2 = n2[1].indexOf(":")) === -1)
              t2[n2[1]] = n2[2].slice(1, n2[2].length - 1);
            else {
              if (n2[1].slice(0, 6) === "xmlns:")
                s2 = "xmlns" + n2[1].slice(6);
              else
                s2 = n2[1].slice(i2 + 1);
              t2[s2] = n2[2].slice(1, n2[2].length - 1);
            }
          }
        return t2;
      }
      function wp(e2, r2) {
        var t2 = P[e2] || Me(e2);
        if (t2 === "General")
          return O._general(r2);
        return O.format(t2, r2);
      }
      function kp(e2, r2, t2, a2) {
        var n2 = a2;
        switch ((t2[0].match(/dt:dt="([\w.]+)"/) || ["", ""])[1]) {
          case "boolean":
            n2 = $e(a2);
            break;
          case "i2":
            ;
          case "int":
            n2 = parseInt(a2, 10);
            break;
          case "r4":
            ;
          case "float":
            n2 = parseFloat(a2);
            break;
          case "date":
            ;
          case "dateTime.tz":
            n2 = le(a2);
            break;
          case "i8":
            ;
          case "string":
            ;
          case "fixed":
            ;
          case "uuid":
            ;
          case "bin.base64":
            break;
          default:
            throw new Error("bad custprop:" + t2[0]);
        }
        e2[Me(r2)] = n2;
      }
      function Ep(e2, r2, t2) {
        if (e2.t === "z")
          return;
        if (!t2 || t2.cellText !== false)
          try {
            if (e2.t === "e") {
              e2.w = e2.w || Aa[e2.v];
            } else if (r2 === "General") {
              if (e2.t === "n") {
                if ((e2.v | 0) === e2.v)
                  e2.w = O._general_int(e2.v);
                else
                  e2.w = O._general_num(e2.v);
              } else
                e2.w = O._general(e2.v);
            } else
              e2.w = wp(r2 || "General", e2.v);
          } catch (a2) {
            if (t2.WTF)
              throw a2;
          }
        try {
          var n2 = P[r2] || r2 || "General";
          if (t2.cellNF)
            e2.z = n2;
          if (t2.cellDates && e2.t == "n" && O.is_date(n2)) {
            var i2 = O.parse_date_code(e2.v);
            if (i2) {
              e2.t = "d";
              e2.v = new Date(i2.y, i2.m - 1, i2.d, i2.H, i2.M, i2.S, i2.u);
            }
          }
        } catch (a2) {
          if (t2.WTF)
            throw a2;
        }
      }
      function Sp(e2, r2, t2) {
        if (t2.cellStyles) {
          if (r2.Interior) {
            var a2 = r2.Interior;
            if (a2.Pattern)
              a2.patternType = xl[a2.Pattern] || a2.Pattern;
          }
        }
        e2[r2.ID] = r2;
      }
      function _p(e2, r2, t2, a2, n2, i2, s2, f2, l2, o2) {
        var c2 = "General", u2 = a2.StyleID, h2 = {};
        o2 = o2 || {};
        var d2 = [];
        var v2 = 0;
        if (u2 === void 0 && f2)
          u2 = f2.StyleID;
        if (u2 === void 0 && s2)
          u2 = s2.StyleID;
        while (i2[u2] !== void 0) {
          if (i2[u2].nf)
            c2 = i2[u2].nf;
          if (i2[u2].Interior)
            d2.push(i2[u2].Interior);
          if (!i2[u2].Parent)
            break;
          u2 = i2[u2].Parent;
        }
        switch (t2.Type) {
          case "Boolean":
            a2.t = "b";
            a2.v = $e(e2);
            break;
          case "String":
            a2.t = "s";
            a2.r = je(Me(e2));
            a2.v = e2.indexOf("<") > -1 ? Me(r2 || e2).replace(/<.*?>/g, "") : a2.r;
            break;
          case "DateTime":
            if (e2.slice(-1) != "Z")
              e2 += "Z";
            a2.v = (le(e2) - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1e3);
            if (a2.v !== a2.v)
              a2.v = Me(e2);
            else if (a2.v < 60)
              a2.v = a2.v - 1;
            if (!c2 || c2 == "General")
              c2 = "yyyy-mm-dd";
          case "Number":
            if (a2.v === void 0)
              a2.v = +e2;
            if (!a2.t)
              a2.t = "n";
            break;
          case "Error":
            a2.t = "e";
            a2.v = Ia[e2];
            if (o2.cellText !== false)
              a2.w = e2;
            break;
          default:
            if (e2 == "" && r2 == "") {
              a2.t = "z";
            } else {
              a2.t = "s";
              a2.v = je(r2 || e2);
            }
            break;
        }
        Ep(a2, c2, o2);
        if (o2.cellFormula !== false) {
          if (a2.Formula) {
            var p2 = Me(a2.Formula);
            if (p2.charCodeAt(0) == 61)
              p2 = p2.slice(1);
            a2.f = sc(p2, n2);
            delete a2.Formula;
            if (a2.ArrayRange == "RC")
              a2.F = sc("RC:RC", n2);
            else if (a2.ArrayRange) {
              a2.F = sc(a2.ArrayRange, n2);
              l2.push([kt(a2.F), a2.F]);
            }
          } else {
            for (v2 = 0; v2 < l2.length; ++v2)
              if (n2.r >= l2[v2][0].s.r && n2.r <= l2[v2][0].e.r) {
                if (n2.c >= l2[v2][0].s.c && n2.c <= l2[v2][0].e.c)
                  a2.F = l2[v2][1];
              }
          }
        }
        if (o2.cellStyles) {
          d2.forEach(function(e3) {
            if (!h2.patternType && e3.patternType)
              h2.patternType = e3.patternType;
          });
          a2.s = h2;
        }
        if (a2.StyleID !== void 0)
          a2.ixfe = a2.StyleID;
      }
      function Cp(e2) {
        e2.t = e2.v || "";
        e2.t = e2.t.replace(/\r\n/g, "\n").replace(/\r/g, "\n");
        e2.v = e2.w = e2.ixfe = void 0;
      }
      function Bp(e2) {
        if (w && Buffer.isBuffer(e2))
          return e2.toString("utf8");
        if (typeof e2 === "string")
          return e2;
        if (typeof Uint8Array !== "undefined" && e2 instanceof Uint8Array)
          return Ye(y(A(e2)));
        throw new Error("Bad input format: expected Buffer or string");
      }
      var Tp = /<(\/?)([^\s?><!\/:]*:|)([^\s?<>:\/]+)(?:[\s?:\/][^>]*)?>/gm;
      function yp(e2, r2) {
        var t2 = r2 || {};
        D(O);
        var a2 = d(Bp(e2));
        if (t2.type == "binary" || t2.type == "array" || t2.type == "base64") {
          if (typeof cptable !== "undefined")
            a2 = cptable.utils.decode(65001, c(a2));
          else
            a2 = Ye(a2);
        }
        var n2 = a2.slice(0, 1024).toLowerCase(), i2 = false;
        if ((n2.indexOf(">") & 1023) > Math.min(n2.indexOf(",") & 1023, n2.indexOf(";") & 1023)) {
          var s2 = ce(t2);
          s2.type = "string";
          return gf.to_workbook(a2, s2);
        }
        if (n2.indexOf("<?xml") == -1)
          ["html", "table", "head", "meta", "script", "style", "div"].forEach(function(e3) {
            if (n2.indexOf("<" + e3) >= 0)
              i2 = true;
          });
        if (i2)
          return Em.to_workbook(a2, t2);
        var f2;
        var l2 = [], o2;
        if (m != null && t2.dense == null)
          t2.dense = m;
        var u2 = {}, h2 = [], v2 = t2.dense ? [] : {}, p2 = "";
        var b2 = {}, g2 = {}, w2 = {};
        var k2 = bp('<Data ss:Type="String">'), E2 = 0;
        var S = 0, _2 = 0;
        var C2 = { s: { r: 2e6, c: 2e6 }, e: { r: 0, c: 0 } };
        var B2 = {}, T2 = {};
        var y2 = "", x2 = 0;
        var A2 = [];
        var I2 = {}, R2 = {}, F2 = 0, N2 = [];
        var L2 = [], M2 = {};
        var U2 = [], z2, H2 = false;
        var W2 = [];
        var V2 = [], X2 = {}, G2 = 0, j2 = 0;
        var K2 = { Sheets: [], WBProps: { date1904: false } }, $2 = {};
        Tp.lastIndex = 0;
        a2 = a2.replace(/<!--([\s\S]*?)-->/gm, "");
        var Y2 = "";
        while (f2 = Tp.exec(a2))
          switch (f2[3] = (Y2 = f2[3]).toLowerCase()) {
            case "data":
              if (Y2 == "data") {
                if (f2[1] === "/") {
                  if ((o2 = l2.pop())[0] !== f2[3])
                    throw new Error("Bad state: " + o2.join("|"));
                } else if (f2[0].charAt(f2[0].length - 2) !== "/")
                  l2.push([f2[3], true]);
                break;
              }
              if (l2[l2.length - 1][1])
                break;
              if (f2[1] === "/")
                _p(a2.slice(E2, f2.index), y2, k2, l2[l2.length - 1][0] == "comment" ? M2 : g2, { c: S, r: _2 }, B2, U2[S], w2, W2, t2);
              else {
                y2 = "";
                k2 = bp(f2[0]);
                E2 = f2.index + f2[0].length;
              }
              break;
            case "cell":
              if (f2[1] === "/") {
                if (L2.length > 0)
                  g2.c = L2;
                if ((!t2.sheetRows || t2.sheetRows > _2) && g2.v !== void 0) {
                  if (t2.dense) {
                    if (!v2[_2])
                      v2[_2] = [];
                    v2[_2][S] = g2;
                  } else
                    v2[ht(S) + lt(_2)] = g2;
                }
                if (g2.HRef) {
                  g2.l = { Target: Me(g2.HRef) };
                  if (g2.HRefScreenTip)
                    g2.l.Tooltip = g2.HRefScreenTip;
                  delete g2.HRef;
                  delete g2.HRefScreenTip;
                }
                if (g2.MergeAcross || g2.MergeDown) {
                  G2 = S + (parseInt(g2.MergeAcross, 10) | 0);
                  j2 = _2 + (parseInt(g2.MergeDown, 10) | 0);
                  A2.push({ s: { c: S, r: _2 }, e: { c: G2, r: j2 } });
                }
                if (!t2.sheetStubs) {
                  if (g2.MergeAcross)
                    S = G2 + 1;
                  else
                    ++S;
                } else if (g2.MergeAcross || g2.MergeDown) {
                  for (var Z2 = S; Z2 <= G2; ++Z2) {
                    for (var J2 = _2; J2 <= j2; ++J2) {
                      if (Z2 > S || J2 > _2) {
                        if (t2.dense) {
                          if (!v2[J2])
                            v2[J2] = [];
                          v2[J2][Z2] = { t: "z" };
                        } else
                          v2[ht(Z2) + lt(J2)] = { t: "z" };
                      }
                    }
                  }
                  S = G2 + 1;
                } else
                  ++S;
              } else {
                g2 = gp(f2[0]);
                if (g2.Index)
                  S = +g2.Index - 1;
                if (S < C2.s.c)
                  C2.s.c = S;
                if (S > C2.e.c)
                  C2.e.c = S;
                if (f2[0].slice(-2) === "/>")
                  ++S;
                L2 = [];
              }
              break;
            case "row":
              if (f2[1] === "/" || f2[0].slice(-2) === "/>") {
                if (_2 < C2.s.r)
                  C2.s.r = _2;
                if (_2 > C2.e.r)
                  C2.e.r = _2;
                if (f2[0].slice(-2) === "/>") {
                  w2 = bp(f2[0]);
                  if (w2.Index)
                    _2 = +w2.Index - 1;
                }
                S = 0;
                ++_2;
              } else {
                w2 = bp(f2[0]);
                if (w2.Index)
                  _2 = +w2.Index - 1;
                X2 = {};
                if (w2.AutoFitHeight == "0" || w2.Height) {
                  X2.hpx = parseInt(w2.Height, 10);
                  X2.hpt = Tl(X2.hpx);
                  V2[_2] = X2;
                }
                if (w2.Hidden == "1") {
                  X2.hidden = true;
                  V2[_2] = X2;
                }
              }
              break;
            case "worksheet":
              if (f2[1] === "/") {
                if ((o2 = l2.pop())[0] !== f2[3])
                  throw new Error("Bad state: " + o2.join("|"));
                h2.push(p2);
                if (C2.s.r <= C2.e.r && C2.s.c <= C2.e.c) {
                  v2["!ref"] = wt(C2);
                  if (t2.sheetRows && t2.sheetRows <= C2.e.r) {
                    v2["!fullref"] = v2["!ref"];
                    C2.e.r = t2.sheetRows - 1;
                    v2["!ref"] = wt(C2);
                  }
                }
                if (A2.length)
                  v2["!merges"] = A2;
                if (U2.length > 0)
                  v2["!cols"] = U2;
                if (V2.length > 0)
                  v2["!rows"] = V2;
                u2[p2] = v2;
              } else {
                C2 = { s: { r: 2e6, c: 2e6 }, e: { r: 0, c: 0 } };
                _2 = S = 0;
                l2.push([f2[3], false]);
                o2 = bp(f2[0]);
                p2 = Me(o2.Name);
                v2 = t2.dense ? [] : {};
                A2 = [];
                W2 = [];
                V2 = [];
                $2 = { name: p2, Hidden: 0 };
                K2.Sheets.push($2);
              }
              break;
            case "table":
              if (f2[1] === "/") {
                if ((o2 = l2.pop())[0] !== f2[3])
                  throw new Error("Bad state: " + o2.join("|"));
              } else if (f2[0].slice(-2) == "/>")
                break;
              else {
                b2 = bp(f2[0]);
                l2.push([f2[3], false]);
                U2 = [];
                H2 = false;
              }
              break;
            case "style":
              if (f2[1] === "/")
                Sp(B2, T2, t2);
              else
                T2 = bp(f2[0]);
              break;
            case "numberformat":
              T2.nf = Me(bp(f2[0]).Format || "General");
              if (P[T2.nf])
                T2.nf = P[T2.nf];
              for (var Q2 = 0; Q2 != 392; ++Q2)
                if (O._table[Q2] == T2.nf)
                  break;
              if (Q2 == 392) {
                for (Q2 = 57; Q2 != 392; ++Q2)
                  if (O._table[Q2] == null) {
                    O.load(T2.nf, Q2);
                    break;
                  }
              }
              break;
            case "column":
              if (l2[l2.length - 1][0] !== "table")
                break;
              z2 = bp(f2[0]);
              if (z2.Hidden) {
                z2.hidden = true;
                delete z2.Hidden;
              }
              if (z2.Width)
                z2.wpx = parseInt(z2.Width, 10);
              if (!H2 && z2.wpx > 10) {
                H2 = true;
                bl = vl;
                for (var q2 = 0; q2 < U2.length; ++q2)
                  if (U2[q2])
                    _l(U2[q2]);
              }
              if (H2)
                _l(z2);
              U2[z2.Index - 1 || U2.length] = z2;
              for (var ee2 = 0; ee2 < +z2.Span; ++ee2)
                U2[U2.length] = ce(z2);
              break;
            case "namedrange":
              if (f2[1] === "/")
                break;
              if (!K2.Names)
                K2.Names = [];
              var re2 = De(f2[0]);
              var te2 = { Name: re2.Name, Ref: sc(re2.RefersTo.slice(1), { r: 0, c: 0 }) };
              if (K2.Sheets.length > 0)
                te2.Sheet = K2.Sheets.length - 1;
              K2.Names.push(te2);
              break;
            case "namedcell":
              break;
            case "b":
              break;
            case "i":
              break;
            case "u":
              break;
            case "s":
              break;
            case "em":
              break;
            case "h2":
              break;
            case "h3":
              break;
            case "sub":
              break;
            case "sup":
              break;
            case "span":
              break;
            case "alignment":
              break;
            case "borders":
              break;
            case "border":
              break;
            case "font":
              if (f2[0].slice(-2) === "/>")
                break;
              else if (f2[1] === "/")
                y2 += a2.slice(x2, f2.index);
              else
                x2 = f2.index + f2[0].length;
              break;
            case "interior":
              if (!t2.cellStyles)
                break;
              T2.Interior = bp(f2[0]);
              break;
            case "protection":
              break;
            case "author":
              ;
            case "title":
              ;
            case "description":
              ;
            case "created":
              ;
            case "keywords":
              ;
            case "subject":
              ;
            case "category":
              ;
            case "company":
              ;
            case "lastauthor":
              ;
            case "lastsaved":
              ;
            case "lastprinted":
              ;
            case "version":
              ;
            case "revision":
              ;
            case "totaltime":
              ;
            case "hyperlinkbase":
              ;
            case "manager":
              ;
            case "contentstatus":
              ;
            case "identifier":
              ;
            case "language":
              ;
            case "appname":
              if (f2[0].slice(-2) === "/>")
                break;
              else if (f2[1] === "/")
                gn(I2, Y2, a2.slice(F2, f2.index));
              else
                F2 = f2.index + f2[0].length;
              break;
            case "paragraphs":
              break;
            case "styles":
              ;
            case "workbook":
              if (f2[1] === "/") {
                if ((o2 = l2.pop())[0] !== f2[3])
                  throw new Error("Bad state: " + o2.join("|"));
              } else
                l2.push([f2[3], false]);
              break;
            case "comment":
              if (f2[1] === "/") {
                if ((o2 = l2.pop())[0] !== f2[3])
                  throw new Error("Bad state: " + o2.join("|"));
                Cp(M2);
                L2.push(M2);
              } else {
                l2.push([f2[3], false]);
                o2 = bp(f2[0]);
                M2 = { a: o2.Author };
              }
              break;
            case "autofilter":
              if (f2[1] === "/") {
                if ((o2 = l2.pop())[0] !== f2[3])
                  throw new Error("Bad state: " + o2.join("|"));
              } else if (f2[0].charAt(f2[0].length - 2) !== "/") {
                var ae2 = bp(f2[0]);
                v2["!autofilter"] = { ref: sc(ae2.Range).replace(/\$/g, "") };
                l2.push([f2[3], true]);
              }
              break;
            case "name":
              break;
            case "datavalidation":
              if (f2[1] === "/") {
                if ((o2 = l2.pop())[0] !== f2[3])
                  throw new Error("Bad state: " + o2.join("|"));
              } else {
                if (f2[0].charAt(f2[0].length - 2) !== "/")
                  l2.push([f2[3], true]);
              }
              break;
            case "pixelsperinch":
              break;
            case "componentoptions":
              ;
            case "documentproperties":
              ;
            case "customdocumentproperties":
              ;
            case "officedocumentsettings":
              ;
            case "pivottable":
              ;
            case "pivotcache":
              ;
            case "names":
              ;
            case "mapinfo":
              ;
            case "pagebreaks":
              ;
            case "querytable":
              ;
            case "sorting":
              ;
            case "schema":
              ;
            case "conditionalformatting":
              ;
            case "smarttagtype":
              ;
            case "smarttags":
              ;
            case "excelworkbook":
              ;
            case "workbookoptions":
              ;
            case "worksheetoptions":
              if (f2[1] === "/") {
                if ((o2 = l2.pop())[0] !== f2[3])
                  throw new Error("Bad state: " + o2.join("|"));
              } else if (f2[0].charAt(f2[0].length - 2) !== "/")
                l2.push([f2[3], true]);
              break;
            case "null":
              break;
            default:
              if (l2.length == 0 && f2[3] == "document")
                return Am(a2, t2);
              if (l2.length == 0 && f2[3] == "uof")
                return Am(a2, t2);
              var ne2 = true;
              switch (l2[l2.length - 1][0]) {
                case "officedocumentsettings":
                  switch (f2[3]) {
                    case "allowpng":
                      break;
                    case "removepersonalinformation":
                      break;
                    case "downloadcomponents":
                      break;
                    case "locationofcomponents":
                      break;
                    case "colors":
                      break;
                    case "color":
                      break;
                    case "index":
                      break;
                    case "rgb":
                      break;
                    case "targetscreensize":
                      break;
                    case "readonlyrecommended":
                      break;
                    default:
                      ne2 = false;
                  }
                  break;
                case "componentoptions":
                  switch (f2[3]) {
                    case "toolbar":
                      break;
                    case "hideofficelogo":
                      break;
                    case "spreadsheetautofit":
                      break;
                    case "label":
                      break;
                    case "caption":
                      break;
                    case "maxheight":
                      break;
                    case "maxwidth":
                      break;
                    case "nextsheetnumber":
                      break;
                    default:
                      ne2 = false;
                  }
                  break;
                case "excelworkbook":
                  switch (f2[3]) {
                    case "date1904":
                      K2.WBProps.date1904 = true;
                      break;
                    case "windowheight":
                      break;
                    case "windowwidth":
                      break;
                    case "windowtopx":
                      break;
                    case "windowtopy":
                      break;
                    case "tabratio":
                      break;
                    case "protectstructure":
                      break;
                    case "protectwindow":
                      break;
                    case "protectwindows":
                      break;
                    case "activesheet":
                      break;
                    case "displayinknotes":
                      break;
                    case "firstvisiblesheet":
                      break;
                    case "supbook":
                      break;
                    case "sheetname":
                      break;
                    case "sheetindex":
                      break;
                    case "sheetindexfirst":
                      break;
                    case "sheetindexlast":
                      break;
                    case "dll":
                      break;
                    case "acceptlabelsinformulas":
                      break;
                    case "donotsavelinkvalues":
                      break;
                    case "iteration":
                      break;
                    case "maxiterations":
                      break;
                    case "maxchange":
                      break;
                    case "path":
                      break;
                    case "xct":
                      break;
                    case "count":
                      break;
                    case "selectedsheets":
                      break;
                    case "calculation":
                      break;
                    case "uncalced":
                      break;
                    case "startupprompt":
                      break;
                    case "crn":
                      break;
                    case "externname":
                      break;
                    case "formula":
                      break;
                    case "colfirst":
                      break;
                    case "collast":
                      break;
                    case "wantadvise":
                      break;
                    case "boolean":
                      break;
                    case "error":
                      break;
                    case "text":
                      break;
                    case "ole":
                      break;
                    case "noautorecover":
                      break;
                    case "publishobjects":
                      break;
                    case "donotcalculatebeforesave":
                      break;
                    case "number":
                      break;
                    case "refmoder1c1":
                      break;
                    case "embedsavesmarttags":
                      break;
                    default:
                      ne2 = false;
                  }
                  break;
                case "workbookoptions":
                  switch (f2[3]) {
                    case "owcversion":
                      break;
                    case "height":
                      break;
                    case "width":
                      break;
                    default:
                      ne2 = false;
                  }
                  break;
                case "worksheetoptions":
                  switch (f2[3]) {
                    case "visible":
                      if (f2[0].slice(-2) === "/>") {
                      } else if (f2[1] === "/")
                        switch (a2.slice(F2, f2.index)) {
                          case "SheetHidden":
                            $2.Hidden = 1;
                            break;
                          case "SheetVeryHidden":
                            $2.Hidden = 2;
                            break;
                        }
                      else
                        F2 = f2.index + f2[0].length;
                      break;
                    case "header":
                      if (!v2["!margins"])
                        ph(v2["!margins"] = {}, "xlml");
                      v2["!margins"].header = De(f2[0]).Margin;
                      break;
                    case "footer":
                      if (!v2["!margins"])
                        ph(v2["!margins"] = {}, "xlml");
                      v2["!margins"].footer = De(f2[0]).Margin;
                      break;
                    case "pagemargins":
                      var ie2 = De(f2[0]);
                      if (!v2["!margins"])
                        ph(v2["!margins"] = {}, "xlml");
                      if (ie2.Top)
                        v2["!margins"].top = ie2.Top;
                      if (ie2.Left)
                        v2["!margins"].left = ie2.Left;
                      if (ie2.Right)
                        v2["!margins"].right = ie2.Right;
                      if (ie2.Bottom)
                        v2["!margins"].bottom = ie2.Bottom;
                      break;
                    case "displayrighttoleft":
                      if (!K2.Views)
                        K2.Views = [];
                      if (!K2.Views[0])
                        K2.Views[0] = {};
                      K2.Views[0].RTL = true;
                      break;
                    case "freezepanes":
                      break;
                    case "frozennosplit":
                      break;
                    case "splithorizontal":
                      ;
                    case "splitvertical":
                      break;
                    case "donotdisplaygridlines":
                      break;
                    case "activerow":
                      break;
                    case "activecol":
                      break;
                    case "toprowbottompane":
                      break;
                    case "leftcolumnrightpane":
                      break;
                    case "unsynced":
                      break;
                    case "print":
                      break;
                    case "printerrors":
                      break;
                    case "panes":
                      break;
                    case "scale":
                      break;
                    case "pane":
                      break;
                    case "number":
                      break;
                    case "layout":
                      break;
                    case "pagesetup":
                      break;
                    case "selected":
                      break;
                    case "protectobjects":
                      break;
                    case "enableselection":
                      break;
                    case "protectscenarios":
                      break;
                    case "validprinterinfo":
                      break;
                    case "horizontalresolution":
                      break;
                    case "verticalresolution":
                      break;
                    case "numberofcopies":
                      break;
                    case "activepane":
                      break;
                    case "toprowvisible":
                      break;
                    case "leftcolumnvisible":
                      break;
                    case "fittopage":
                      break;
                    case "rangeselection":
                      break;
                    case "papersizeindex":
                      break;
                    case "pagelayoutzoom":
                      break;
                    case "pagebreakzoom":
                      break;
                    case "filteron":
                      break;
                    case "fitwidth":
                      break;
                    case "fitheight":
                      break;
                    case "commentslayout":
                      break;
                    case "zoom":
                      break;
                    case "lefttoright":
                      break;
                    case "gridlines":
                      break;
                    case "allowsort":
                      break;
                    case "allowfilter":
                      break;
                    case "allowinsertrows":
                      break;
                    case "allowdeleterows":
                      break;
                    case "allowinsertcols":
                      break;
                    case "allowdeletecols":
                      break;
                    case "allowinserthyperlinks":
                      break;
                    case "allowformatcells":
                      break;
                    case "allowsizecols":
                      break;
                    case "allowsizerows":
                      break;
                    case "nosummaryrowsbelowdetail":
                      if (!v2["!outline"])
                        v2["!outline"] = {};
                      v2["!outline"].above = true;
                      break;
                    case "tabcolorindex":
                      break;
                    case "donotdisplayheadings":
                      break;
                    case "showpagelayoutzoom":
                      break;
                    case "nosummarycolumnsrightdetail":
                      if (!v2["!outline"])
                        v2["!outline"] = {};
                      v2["!outline"].left = true;
                      break;
                    case "blackandwhite":
                      break;
                    case "donotdisplayzeros":
                      break;
                    case "displaypagebreak":
                      break;
                    case "rowcolheadings":
                      break;
                    case "donotdisplayoutline":
                      break;
                    case "noorientation":
                      break;
                    case "allowusepivottables":
                      break;
                    case "zeroheight":
                      break;
                    case "viewablerange":
                      break;
                    case "selection":
                      break;
                    case "protectcontents":
                      break;
                    default:
                      ne2 = false;
                  }
                  break;
                case "pivottable":
                  ;
                case "pivotcache":
                  switch (f2[3]) {
                    case "immediateitemsondrop":
                      break;
                    case "showpagemultipleitemlabel":
                      break;
                    case "compactrowindent":
                      break;
                    case "location":
                      break;
                    case "pivotfield":
                      break;
                    case "orientation":
                      break;
                    case "layoutform":
                      break;
                    case "layoutsubtotallocation":
                      break;
                    case "layoutcompactrow":
                      break;
                    case "position":
                      break;
                    case "pivotitem":
                      break;
                    case "datatype":
                      break;
                    case "datafield":
                      break;
                    case "sourcename":
                      break;
                    case "parentfield":
                      break;
                    case "ptlineitems":
                      break;
                    case "ptlineitem":
                      break;
                    case "countofsameitems":
                      break;
                    case "item":
                      break;
                    case "itemtype":
                      break;
                    case "ptsource":
                      break;
                    case "cacheindex":
                      break;
                    case "consolidationreference":
                      break;
                    case "filename":
                      break;
                    case "reference":
                      break;
                    case "nocolumngrand":
                      break;
                    case "norowgrand":
                      break;
                    case "blanklineafteritems":
                      break;
                    case "hidden":
                      break;
                    case "subtotal":
                      break;
                    case "basefield":
                      break;
                    case "mapchilditems":
                      break;
                    case "function":
                      break;
                    case "refreshonfileopen":
                      break;
                    case "printsettitles":
                      break;
                    case "mergelabels":
                      break;
                    case "defaultversion":
                      break;
                    case "refreshname":
                      break;
                    case "refreshdate":
                      break;
                    case "refreshdatecopy":
                      break;
                    case "versionlastrefresh":
                      break;
                    case "versionlastupdate":
                      break;
                    case "versionupdateablemin":
                      break;
                    case "versionrefreshablemin":
                      break;
                    case "calculation":
                      break;
                    default:
                      ne2 = false;
                  }
                  break;
                case "pagebreaks":
                  switch (f2[3]) {
                    case "colbreaks":
                      break;
                    case "colbreak":
                      break;
                    case "rowbreaks":
                      break;
                    case "rowbreak":
                      break;
                    case "colstart":
                      break;
                    case "colend":
                      break;
                    case "rowend":
                      break;
                    default:
                      ne2 = false;
                  }
                  break;
                case "autofilter":
                  switch (f2[3]) {
                    case "autofiltercolumn":
                      break;
                    case "autofiltercondition":
                      break;
                    case "autofilterand":
                      break;
                    case "autofilteror":
                      break;
                    default:
                      ne2 = false;
                  }
                  break;
                case "querytable":
                  switch (f2[3]) {
                    case "id":
                      break;
                    case "autoformatfont":
                      break;
                    case "autoformatpattern":
                      break;
                    case "querysource":
                      break;
                    case "querytype":
                      break;
                    case "enableredirections":
                      break;
                    case "refreshedinxl9":
                      break;
                    case "urlstring":
                      break;
                    case "htmltables":
                      break;
                    case "connection":
                      break;
                    case "commandtext":
                      break;
                    case "refreshinfo":
                      break;
                    case "notitles":
                      break;
                    case "nextid":
                      break;
                    case "columninfo":
                      break;
                    case "overwritecells":
                      break;
                    case "donotpromptforfile":
                      break;
                    case "textwizardsettings":
                      break;
                    case "source":
                      break;
                    case "number":
                      break;
                    case "decimal":
                      break;
                    case "thousandseparator":
                      break;
                    case "trailingminusnumbers":
                      break;
                    case "formatsettings":
                      break;
                    case "fieldtype":
                      break;
                    case "delimiters":
                      break;
                    case "tab":
                      break;
                    case "comma":
                      break;
                    case "autoformatname":
                      break;
                    case "versionlastedit":
                      break;
                    case "versionlastrefresh":
                      break;
                    default:
                      ne2 = false;
                  }
                  break;
                case "datavalidation":
                  switch (f2[3]) {
                    case "range":
                      break;
                    case "type":
                      break;
                    case "min":
                      break;
                    case "max":
                      break;
                    case "sort":
                      break;
                    case "descending":
                      break;
                    case "order":
                      break;
                    case "casesensitive":
                      break;
                    case "value":
                      break;
                    case "errorstyle":
                      break;
                    case "errormessage":
                      break;
                    case "errortitle":
                      break;
                    case "inputmessage":
                      break;
                    case "inputtitle":
                      break;
                    case "combohide":
                      break;
                    case "inputhide":
                      break;
                    case "condition":
                      break;
                    case "qualifier":
                      break;
                    case "useblank":
                      break;
                    case "value1":
                      break;
                    case "value2":
                      break;
                    case "format":
                      break;
                    case "cellrangelist":
                      break;
                    default:
                      ne2 = false;
                  }
                  break;
                case "sorting":
                  ;
                case "conditionalformatting":
                  switch (f2[3]) {
                    case "range":
                      break;
                    case "type":
                      break;
                    case "min":
                      break;
                    case "max":
                      break;
                    case "sort":
                      break;
                    case "descending":
                      break;
                    case "order":
                      break;
                    case "casesensitive":
                      break;
                    case "value":
                      break;
                    case "errorstyle":
                      break;
                    case "errormessage":
                      break;
                    case "errortitle":
                      break;
                    case "cellrangelist":
                      break;
                    case "inputmessage":
                      break;
                    case "inputtitle":
                      break;
                    case "combohide":
                      break;
                    case "inputhide":
                      break;
                    case "condition":
                      break;
                    case "qualifier":
                      break;
                    case "useblank":
                      break;
                    case "value1":
                      break;
                    case "value2":
                      break;
                    case "format":
                      break;
                    default:
                      ne2 = false;
                  }
                  break;
                case "mapinfo":
                  ;
                case "schema":
                  ;
                case "data":
                  switch (f2[3]) {
                    case "map":
                      break;
                    case "entry":
                      break;
                    case "range":
                      break;
                    case "xpath":
                      break;
                    case "field":
                      break;
                    case "xsdtype":
                      break;
                    case "filteron":
                      break;
                    case "aggregate":
                      break;
                    case "elementtype":
                      break;
                    case "attributetype":
                      break;
                    case "schema":
                      ;
                    case "element":
                      ;
                    case "complextype":
                      ;
                    case "datatype":
                      ;
                    case "all":
                      ;
                    case "attribute":
                      ;
                    case "extends":
                      break;
                    case "row":
                      break;
                    default:
                      ne2 = false;
                  }
                  break;
                case "smarttags":
                  break;
                default:
                  ne2 = false;
                  break;
              }
              if (ne2)
                break;
              if (f2[3].match(/!\[CDATA/))
                break;
              if (!l2[l2.length - 1][1])
                throw "Unrecognized tag: " + f2[3] + "|" + l2.join("|");
              if (l2[l2.length - 1][0] === "customdocumentproperties") {
                if (f2[0].slice(-2) === "/>")
                  break;
                else if (f2[1] === "/")
                  kp(R2, Y2, N2, a2.slice(F2, f2.index));
                else {
                  N2 = f2;
                  F2 = f2.index + f2[0].length;
                }
                break;
              }
              if (t2.WTF)
                throw "Unrecognized tag: " + f2[3] + "|" + l2.join("|");
          }
        var se2 = {};
        if (!t2.bookSheets && !t2.bookProps)
          se2.Sheets = u2;
        se2.SheetNames = h2;
        se2.Workbook = K2;
        se2.SSF = O.get_table();
        se2.Props = I2;
        se2.Custprops = R2;
        return se2;
      }
      function xp(e2, r2) {
        jm(r2 = r2 || {});
        switch (r2.type || "base64") {
          case "base64":
            return yp(g.decode(e2), r2);
          case "binary":
            ;
          case "buffer":
            ;
          case "file":
            return yp(e2, r2);
          case "array":
            return yp(y(e2), r2);
        }
      }
      function Ap(e2, r2) {
        var t2 = [];
        if (e2.Props)
          t2.push(wn(e2.Props, r2));
        if (e2.Custprops)
          t2.push(kn(e2.Props, e2.Custprops, r2));
        return t2.join("");
      }
      function Ip() {
        return "";
      }
      function Rp(e2, r2) {
        var t2 = ['<Style ss:ID="Default" ss:Name="Normal"><NumberFormat/></Style>'];
        r2.cellXfs.forEach(function(e3, r3) {
          var a2 = [];
          a2.push(or("NumberFormat", null, { "ss:Format": He(O._table[e3.numFmtId]) }));
          var n2 = { "ss:ID": "s" + (21 + r3) };
          t2.push(or("Style", a2.join(""), n2));
        });
        return or("Styles", t2.join(""));
      }
      function Fp(e2) {
        return or("NamedRange", null, { "ss:Name": e2.Name, "ss:RefersTo": "=" + lc(e2.Ref, { r: 0, c: 0 }) });
      }
      function Op(e2) {
        if (!((e2 || {}).Workbook || {}).Names)
          return "";
        var r2 = e2.Workbook.Names;
        var t2 = [];
        for (var a2 = 0; a2 < r2.length; ++a2) {
          var n2 = r2[a2];
          if (n2.Sheet != null)
            continue;
          if (n2.Name.match(/^_xlfn\./))
            continue;
          t2.push(Fp(n2));
        }
        return or("Names", t2.join(""));
      }
      function Dp(e2, r2, t2, a2) {
        if (!e2)
          return "";
        if (!((a2 || {}).Workbook || {}).Names)
          return "";
        var n2 = a2.Workbook.Names;
        var i2 = [];
        for (var s2 = 0; s2 < n2.length; ++s2) {
          var f2 = n2[s2];
          if (f2.Sheet != t2)
            continue;
          if (f2.Name.match(/^_xlfn\./))
            continue;
          i2.push(Fp(f2));
        }
        return i2.join("");
      }
      function Pp(e2, r2, t2, a2) {
        if (!e2)
          return "";
        var n2 = [];
        if (e2["!margins"]) {
          n2.push("<PageSetup>");
          if (e2["!margins"].header)
            n2.push(or("Header", null, { "x:Margin": e2["!margins"].header }));
          if (e2["!margins"].footer)
            n2.push(or("Footer", null, { "x:Margin": e2["!margins"].footer }));
          n2.push(or("PageMargins", null, { "x:Bottom": e2["!margins"].bottom || "0.75", "x:Left": e2["!margins"].left || "0.7", "x:Right": e2["!margins"].right || "0.7", "x:Top": e2["!margins"].top || "0.75" }));
          n2.push("</PageSetup>");
        }
        if (a2 && a2.Workbook && a2.Workbook.Sheets && a2.Workbook.Sheets[t2]) {
          if (a2.Workbook.Sheets[t2].Hidden)
            n2.push(or("Visible", a2.Workbook.Sheets[t2].Hidden == 1 ? "SheetHidden" : "SheetVeryHidden", {}));
          else {
            for (var i2 = 0; i2 < t2; ++i2)
              if (a2.Workbook.Sheets[i2] && !a2.Workbook.Sheets[i2].Hidden)
                break;
            if (i2 == t2)
              n2.push("<Selected/>");
          }
        }
        if (((((a2 || {}).Workbook || {}).Views || [])[0] || {}).RTL)
          n2.push("<DisplayRightToLeft/>");
        if (e2["!protect"]) {
          n2.push(fr("ProtectContents", "True"));
          if (e2["!protect"].objects)
            n2.push(fr("ProtectObjects", "True"));
          if (e2["!protect"].scenarios)
            n2.push(fr("ProtectScenarios", "True"));
          if (e2["!protect"].selectLockedCells != null && !e2["!protect"].selectLockedCells)
            n2.push(fr("EnableSelection", "NoSelection"));
          else if (e2["!protect"].selectUnlockedCells != null && !e2["!protect"].selectUnlockedCells)
            n2.push(fr("EnableSelection", "UnlockedCells"));
          [["formatCells", "AllowFormatCells"], ["formatColumns", "AllowSizeCols"], ["formatRows", "AllowSizeRows"], ["insertColumns", "AllowInsertCols"], ["insertRows", "AllowInsertRows"], ["insertHyperlinks", "AllowInsertHyperlinks"], ["deleteColumns", "AllowDeleteCols"], ["deleteRows", "AllowDeleteRows"], ["sort", "AllowSort"], ["autoFilter", "AllowFilter"], ["pivotTables", "AllowUsePivotTables"]].forEach(function(r3) {
            if (e2["!protect"][r3[0]])
              n2.push("<" + r3[1] + "/>");
          });
        }
        if (n2.length == 0)
          return "";
        return or("WorksheetOptions", n2.join(""), { xmlns: dr.x });
      }
      function Np(e2) {
        return e2.map(function(e3) {
          var r2 = Ke(e3.t || "");
          var t2 = or("ss:Data", r2, { xmlns: "http://www.w3.org/TR/REC-html40" });
          return or("Comment", t2, { "ss:Author": e3.a });
        }).join("");
      }
      function Lp(e2, r2, t2, a2, n2, i2, s2) {
        if (!e2 || e2.v == void 0 && e2.f == void 0)
          return "";
        var f2 = {};
        if (e2.f)
          f2["ss:Formula"] = "=" + He(lc(e2.f, s2));
        if (e2.F && e2.F.slice(0, r2.length) == r2) {
          var l2 = mt(e2.F.slice(r2.length + 1));
          f2["ss:ArrayRange"] = "RC:R" + (l2.r == s2.r ? "" : "[" + (l2.r - s2.r) + "]") + "C" + (l2.c == s2.c ? "" : "[" + (l2.c - s2.c) + "]");
        }
        if (e2.l && e2.l.Target) {
          f2["ss:HRef"] = He(e2.l.Target);
          if (e2.l.Tooltip)
            f2["x:HRefScreenTip"] = He(e2.l.Tooltip);
        }
        if (t2["!merges"]) {
          var o2 = t2["!merges"];
          for (var c2 = 0; c2 != o2.length; ++c2) {
            if (o2[c2].s.c != s2.c || o2[c2].s.r != s2.r)
              continue;
            if (o2[c2].e.c > o2[c2].s.c)
              f2["ss:MergeAcross"] = o2[c2].e.c - o2[c2].s.c;
            if (o2[c2].e.r > o2[c2].s.r)
              f2["ss:MergeDown"] = o2[c2].e.r - o2[c2].s.r;
          }
        }
        var u2 = "", h2 = "";
        switch (e2.t) {
          case "z":
            if (!a2.sheetStubs)
              return "";
            break;
          case "n":
            u2 = "Number";
            h2 = String(e2.v);
            break;
          case "b":
            u2 = "Boolean";
            h2 = e2.v ? "1" : "0";
            break;
          case "e":
            u2 = "Error";
            h2 = Aa[e2.v];
            break;
          case "d":
            u2 = "DateTime";
            h2 = new Date(e2.v).toISOString();
            if (e2.z == null)
              e2.z = e2.z || O._table[14];
            break;
          case "s":
            u2 = "String";
            h2 = Ge(e2.v || "");
            break;
        }
        var d2 = mh(a2.cellXfs, e2, a2);
        f2["ss:StyleID"] = "s" + (21 + d2);
        f2["ss:Index"] = s2.c + 1;
        var v2 = e2.v != null ? h2 : "";
        var p2 = e2.t == "z" ? "" : '<Data ss:Type="' + u2 + '">' + v2 + "</Data>";
        if ((e2.c || []).length > 0)
          p2 += Np(e2.c);
        return or("Cell", p2, f2);
      }
      function Mp(e2, r2) {
        var t2 = '<Row ss:Index="' + (e2 + 1) + '"';
        if (r2) {
          if (r2.hpt && !r2.hpx)
            r2.hpx = yl(r2.hpt);
          if (r2.hpx)
            t2 += ' ss:AutoFitHeight="0" ss:Height="' + r2.hpx + '"';
          if (r2.hidden)
            t2 += ' ss:Hidden="1"';
        }
        return t2 + ">";
      }
      function Up(e2, r2, t2, a2) {
        if (!e2["!ref"])
          return "";
        var n2 = kt(e2["!ref"]);
        var i2 = e2["!merges"] || [], s2 = 0;
        var f2 = [];
        if (e2["!cols"])
          e2["!cols"].forEach(function(e3, r3) {
            _l(e3);
            var t3 = !!e3.width;
            var a3 = vh(r3, e3);
            var n3 = { "ss:Index": r3 + 1 };
            if (t3)
              n3["ss:Width"] = gl(a3.width);
            if (e3.hidden)
              n3["ss:Hidden"] = "1";
            f2.push(or("Column", null, n3));
          });
        var l2 = Array.isArray(e2);
        for (var o2 = n2.s.r; o2 <= n2.e.r; ++o2) {
          var c2 = [Mp(o2, (e2["!rows"] || [])[o2])];
          for (var u2 = n2.s.c; u2 <= n2.e.c; ++u2) {
            var h2 = false;
            for (s2 = 0; s2 != i2.length; ++s2) {
              if (i2[s2].s.c > u2)
                continue;
              if (i2[s2].s.r > o2)
                continue;
              if (i2[s2].e.c < u2)
                continue;
              if (i2[s2].e.r < o2)
                continue;
              if (i2[s2].s.c != u2 || i2[s2].s.r != o2)
                h2 = true;
              break;
            }
            if (h2)
              continue;
            var d2 = { r: o2, c: u2 };
            var v2 = bt(d2), p2 = l2 ? (e2[o2] || [])[u2] : e2[v2];
            c2.push(Lp(p2, v2, e2, r2, t2, a2, d2));
          }
          c2.push("</Row>");
          if (c2.length > 2)
            f2.push(c2.join(""));
        }
        return f2.join("");
      }
      function zp(e2, r2, t2) {
        var a2 = [];
        var n2 = t2.SheetNames[e2];
        var i2 = t2.Sheets[n2];
        var s2 = i2 ? Dp(i2, r2, e2, t2) : "";
        if (s2.length > 0)
          a2.push("<Names>" + s2 + "</Names>");
        s2 = i2 ? Up(i2, r2, e2, t2) : "";
        if (s2.length > 0)
          a2.push("<Table>" + s2 + "</Table>");
        a2.push(Pp(i2, r2, e2, t2));
        return a2.join("");
      }
      function Hp(e2, r2) {
        if (!r2)
          r2 = {};
        if (!e2.SSF)
          e2.SSF = O.get_table();
        if (e2.SSF) {
          D(O);
          O.load_table(e2.SSF);
          r2.revssf = J(e2.SSF);
          r2.revssf[e2.SSF[65535]] = 0;
          r2.ssf = e2.SSF;
          r2.cellXfs = [];
          mh(r2.cellXfs, {}, { revssf: { General: 0 } });
        }
        var t2 = [];
        t2.push(Ap(e2, r2));
        t2.push(Ip(e2, r2));
        t2.push("");
        t2.push("");
        for (var a2 = 0; a2 < e2.SheetNames.length; ++a2)
          t2.push(or("Worksheet", zp(a2, r2, e2), { "ss:Name": He(e2.SheetNames[a2]) }));
        t2[2] = Rp(e2, r2);
        t2[3] = Op(e2, r2);
        return Ae + or("Workbook", t2.join(""), { xmlns: dr.ss, "xmlns:o": dr.o, "xmlns:x": dr.x, "xmlns:ss": dr.ss, "xmlns:dt": dr.dt, "xmlns:html": dr.html });
      }
      function Wp(e2) {
        var r2 = {};
        var t2 = e2.content;
        t2.l = 28;
        r2.AnsiUserType = t2._R(0, "lpstr-ansi");
        r2.AnsiClipboardFormat = ia(t2);
        if (t2.length - t2.l <= 4)
          return r2;
        var a2 = t2._R(4);
        if (a2 == 0 || a2 > 40)
          return r2;
        t2.l -= 4;
        r2.Reserved1 = t2._R(0, "lpstr-ansi");
        if (t2.length - t2.l <= 4)
          return r2;
        a2 = t2._R(4);
        if (a2 !== 1907505652)
          return r2;
        r2.UnicodeClipboardFormat = sa(t2);
        a2 = t2._R(4);
        if (a2 == 0 || a2 > 40)
          return r2;
        t2.l -= 4;
        r2.Reserved2 = t2._R(0, "lpwstr");
      }
      function Vp(e2, r2, t2, a2) {
        var n2 = t2;
        var i2 = [];
        var s2 = r2.slice(r2.l, r2.l + n2);
        if (a2 && a2.enc && a2.enc.insitu && s2.length > 0)
          switch (e2.n) {
            case "BOF":
              ;
            case "FilePass":
              ;
            case "FileLock":
              ;
            case "InterfaceHdr":
              ;
            case "RRDInfo":
              ;
            case "RRDHead":
              ;
            case "UsrExcl":
              ;
            case "EOF":
              break;
            case "BoundSheet8":
              break;
            default:
              a2.enc.insitu(s2);
          }
        i2.push(s2);
        r2.l += n2;
        var f2 = em[Mr(r2, r2.l)];
        var l2 = 0;
        while (f2 != null && f2.n.slice(0, 8) === "Continue") {
          n2 = Mr(r2, r2.l + 2);
          l2 = r2.l + 4;
          if (f2.n == "ContinueFrt")
            l2 += 4;
          else if (f2.n.slice(0, 11) == "ContinueFrt") {
            l2 += 12;
          }
          s2 = r2.slice(l2, r2.l + 4 + n2);
          i2.push(s2);
          r2.l += 4 + n2;
          f2 = em[Mr(r2, r2.l)];
        }
        var o2 = I(i2);
        Yr(o2, 0);
        var c2 = 0;
        o2.lens = [];
        for (var u2 = 0; u2 < i2.length; ++u2) {
          o2.lens.push(c2);
          c2 += i2[u2].length;
        }
        if (o2.length < t2)
          throw "XLS Record " + (e2 && e2.n || "??") + " Truncated: " + o2.length + " < " + t2;
        return e2.f(o2, o2.length, a2);
      }
      function Xp(e2, r2, t2) {
        if (e2.t === "z")
          return;
        if (!e2.XF)
          return;
        var a2 = 0;
        try {
          a2 = e2.z || e2.XF.numFmtId || 0;
          if (r2.cellNF)
            e2.z = O._table[a2];
        } catch (n2) {
          if (r2.WTF)
            throw n2;
        }
        if (!r2 || r2.cellText !== false)
          try {
            if (e2.t === "e") {
              e2.w = e2.w || Aa[e2.v];
            } else if (a2 === 0 || a2 == "General") {
              if (e2.t === "n") {
                if ((e2.v | 0) === e2.v)
                  e2.w = O._general_int(e2.v);
                else
                  e2.w = O._general_num(e2.v);
              } else
                e2.w = O._general(e2.v);
            } else
              e2.w = O.format(a2, e2.v, { date1904: !!t2, dateNF: r2 && r2.dateNF });
          } catch (n2) {
            if (r2.WTF)
              throw n2;
          }
        if (r2.cellDates && a2 && e2.t == "n" && O.is_date(O._table[a2] || String(a2))) {
          var i2 = O.parse_date_code(e2.v);
          if (i2) {
            e2.t = "d";
            e2.v = new Date(i2.y, i2.m - 1, i2.d, i2.H, i2.M, i2.S, i2.u);
          }
        }
      }
      function Gp(e2, r2, t2) {
        return { v: e2, ixfe: r2, t: t2 };
      }
      function jp(e2, r2) {
        var t2 = { opts: {} };
        var a2 = {};
        if (m != null && r2.dense == null)
          r2.dense = m;
        var n2 = r2.dense ? [] : {};
        var i2 = {};
        var s2 = {};
        var f2 = null;
        var o2 = [];
        var c2 = "";
        var u2 = {};
        var h2, d2 = "", v2, p2, b2, g2;
        var w2 = {};
        var k2 = [];
        var E2;
        var S;
        var _2 = [];
        var C2 = [];
        var B2 = { Sheets: [], WBProps: { date1904: false }, Views: [{}] }, T2 = {};
        var y2 = function ge2(e3) {
          if (e3 < 8)
            return xa[e3];
          if (e3 < 64)
            return C2[e3 - 8] || xa[e3];
          return xa[e3];
        };
        var x2 = function we2(e3, r3, t3) {
          var a3 = r3.XF.data;
          if (!a3 || !a3.patternType || !t3 || !t3.cellStyles)
            return;
          r3.s = {};
          r3.s.patternType = a3.patternType;
          var n3;
          if (n3 = cl(y2(a3.icvFore))) {
            r3.s.fgColor = { rgb: n3 };
          }
          if (n3 = cl(y2(a3.icvBack))) {
            r3.s.bgColor = { rgb: n3 };
          }
        };
        var A2 = function ke2(e3, r3, t3) {
          if (W2 > 1)
            return;
          if (t3.sheetRows && e3.r >= t3.sheetRows)
            return;
          if (t3.cellStyles && r3.XF && r3.XF.data)
            x2(e3, r3, t3);
          delete r3.ixfe;
          delete r3.XF;
          h2 = e3;
          d2 = bt(e3);
          if (!s2 || !s2.s || !s2.e)
            s2 = { s: { r: 0, c: 0 }, e: { r: 0, c: 0 } };
          if (e3.r < s2.s.r)
            s2.s.r = e3.r;
          if (e3.c < s2.s.c)
            s2.s.c = e3.c;
          if (e3.r + 1 > s2.e.r)
            s2.e.r = e3.r + 1;
          if (e3.c + 1 > s2.e.c)
            s2.e.c = e3.c + 1;
          if (t3.cellFormula && r3.f) {
            for (var a3 = 0; a3 < k2.length; ++a3) {
              if (k2[a3][0].s.c > e3.c || k2[a3][0].s.r > e3.r)
                continue;
              if (k2[a3][0].e.c < e3.c || k2[a3][0].e.r < e3.r)
                continue;
              r3.F = wt(k2[a3][0]);
              if (k2[a3][0].s.c != e3.c || k2[a3][0].s.r != e3.r)
                delete r3.f;
              if (r3.f)
                r3.f = "" + Wu(k2[a3][1], s2, e3, z2, I2);
              break;
            }
          }
          {
            if (t3.dense) {
              if (!n2[e3.r])
                n2[e3.r] = [];
              n2[e3.r][e3.c] = r3;
            } else
              n2[d2] = r3;
          }
        };
        var I2 = { enc: false, sbcch: 0, snames: [], sharedf: w2, arrayf: k2, rrtabid: [], lastuser: "", biff: 8, codepage: 0, winlocked: 0, cellStyles: !!r2 && !!r2.cellStyles, WTF: !!r2 && !!r2.wtf };
        if (r2.password)
          I2.password = r2.password;
        var R2;
        var F2 = [];
        var D2 = [];
        var P2 = [], N2 = [];
        var L2 = 0, M2 = 0;
        var U2 = false;
        var z2 = [];
        z2.SheetNames = I2.snames;
        z2.sharedf = I2.sharedf;
        z2.arrayf = I2.arrayf;
        z2.names = [];
        z2.XTI = [];
        var H2 = "";
        var W2 = 0;
        var V2 = 0, X2 = [];
        var G2 = [];
        var j2;
        I2.codepage = 1200;
        l(1200);
        var $2 = false;
        while (e2.l < e2.length - 1) {
          var Y2 = e2.l;
          var Z2 = e2._R(2);
          if (Z2 === 0 && H2 === "EOF")
            break;
          var J2 = e2.l === e2.length ? 0 : e2._R(2);
          var Q2 = em[Z2];
          if (Q2 && Q2.f) {
            if (r2.bookSheets) {
              if (H2 === "BoundSheet8" && Q2.n !== "BoundSheet8")
                break;
            }
            H2 = Q2.n;
            if (Q2.r === 2 || Q2.r == 12) {
              var q2 = e2._R(2);
              J2 -= 2;
              if (!I2.enc && q2 !== Z2 && ((q2 & 255) << 8 | q2 >> 8) !== Z2)
                throw new Error("rt mismatch: " + q2 + "!=" + Z2);
              if (Q2.r == 12) {
                e2.l += 10;
                J2 -= 10;
              }
            }
            var ee2 = {};
            if (Q2.n === "EOF")
              ee2 = Q2.f(e2, J2, I2);
            else
              ee2 = Vp(Q2, e2, J2, I2);
            var re2 = Q2.n;
            if (W2 == 0 && re2 != "BOF")
              continue;
            switch (re2) {
              case "Date1904":
                t2.opts.Date1904 = B2.WBProps.date1904 = ee2;
                break;
              case "WriteProtect":
                t2.opts.WriteProtect = true;
                break;
              case "FilePass":
                if (!I2.enc)
                  e2.l = 0;
                I2.enc = ee2;
                if (!r2.password)
                  throw new Error("File is password-protected");
                if (ee2.valid == null)
                  throw new Error("Encryption scheme unsupported");
                if (!ee2.valid)
                  throw new Error("Password is incorrect");
                break;
              case "WriteAccess":
                I2.lastuser = ee2;
                break;
              case "FileSharing":
                break;
              case "CodePage":
                var te2 = Number(ee2);
                switch (te2) {
                  case 21010:
                    te2 = 1200;
                    break;
                  case 32768:
                    te2 = 1e4;
                    break;
                  case 32769:
                    te2 = 1252;
                    break;
                }
                l(I2.codepage = te2);
                $2 = true;
                break;
              case "RRTabId":
                I2.rrtabid = ee2;
                break;
              case "WinProtect":
                I2.winlocked = ee2;
                break;
              case "Template":
                break;
              case "BookBool":
                break;
              case "UsesELFs":
                break;
              case "MTRSettings":
                break;
              case "RefreshAll":
                ;
              case "CalcCount":
                ;
              case "CalcDelta":
                ;
              case "CalcIter":
                ;
              case "CalcMode":
                ;
              case "CalcPrecision":
                ;
              case "CalcSaveRecalc":
                t2.opts[re2] = ee2;
                break;
              case "CalcRefMode":
                I2.CalcRefMode = ee2;
                break;
              case "Uncalced":
                break;
              case "ForceFullCalculation":
                t2.opts.FullCalc = ee2;
                break;
              case "WsBool":
                if (ee2.fDialog)
                  n2["!type"] = "dialog";
                if (!ee2.fBelow)
                  (n2["!outline"] || (n2["!outline"] = {})).above = true;
                if (!ee2.fRight)
                  (n2["!outline"] || (n2["!outline"] = {})).left = true;
                break;
              case "XF":
                _2.push(ee2);
                break;
              case "ExtSST":
                break;
              case "BookExt":
                break;
              case "RichTextStream":
                break;
              case "BkHim":
                break;
              case "SupBook":
                z2.push([ee2]);
                z2[z2.length - 1].XTI = [];
                break;
              case "ExternName":
                z2[z2.length - 1].push(ee2);
                break;
              case "Index":
                break;
              case "Lbl":
                j2 = { Name: ee2.Name, Ref: Wu(ee2.rgce, s2, null, z2, I2) };
                if (ee2.itab > 0)
                  j2.Sheet = ee2.itab - 1;
                z2.names.push(j2);
                if (!z2[0]) {
                  z2[0] = [];
                  z2[0].XTI = [];
                }
                z2[z2.length - 1].push(ee2);
                if (ee2.Name == "_xlnm._FilterDatabase" && ee2.itab > 0) {
                  if (ee2.rgce && ee2.rgce[0] && ee2.rgce[0][0] && ee2.rgce[0][0][0] == "PtgArea3d")
                    G2[ee2.itab - 1] = { ref: wt(ee2.rgce[0][0][1][2]) };
                }
                break;
              case "ExternCount":
                I2.ExternCount = ee2;
                break;
              case "ExternSheet":
                if (z2.length == 0) {
                  z2[0] = [];
                  z2[0].XTI = [];
                }
                z2[z2.length - 1].XTI = z2[z2.length - 1].XTI.concat(ee2);
                z2.XTI = z2.XTI.concat(ee2);
                break;
              case "NameCmt":
                if (I2.biff < 8)
                  break;
                if (j2 != null)
                  j2.Comment = ee2[1];
                break;
              case "Protect":
                n2["!protect"] = ee2;
                break;
              case "Password":
                if (ee2 !== 0 && I2.WTF)
                  console.error("Password verifier: " + ee2);
                break;
              case "Prot4Rev":
                ;
              case "Prot4RevPass":
                break;
              case "BoundSheet8":
                {
                  i2[ee2.pos] = ee2;
                  I2.snames.push(ee2.name);
                }
                break;
              case "EOF":
                {
                  if (--W2)
                    break;
                  if (s2.e) {
                    if (s2.e.r > 0 && s2.e.c > 0) {
                      s2.e.r--;
                      s2.e.c--;
                      n2["!ref"] = wt(s2);
                      if (r2.sheetRows && r2.sheetRows <= s2.e.r) {
                        var ae2 = s2.e.r;
                        s2.e.r = r2.sheetRows - 1;
                        n2["!fullref"] = n2["!ref"];
                        n2["!ref"] = wt(s2);
                        s2.e.r = ae2;
                      }
                      s2.e.r++;
                      s2.e.c++;
                    }
                    if (F2.length > 0)
                      n2["!merges"] = F2;
                    if (D2.length > 0)
                      n2["!objects"] = D2;
                    if (P2.length > 0)
                      n2["!cols"] = P2;
                    if (N2.length > 0)
                      n2["!rows"] = N2;
                    B2.Sheets.push(T2);
                  }
                  if (c2 === "")
                    u2 = n2;
                  else
                    a2[c2] = n2;
                  n2 = r2.dense ? [] : {};
                }
                break;
              case "BOF":
                {
                  if (I2.biff === 8)
                    I2.biff = { 9: 2, 521: 3, 1033: 4 }[Z2] || { 512: 2, 768: 3, 1024: 4, 1280: 5, 1536: 8, 2: 2, 7: 2 }[ee2.BIFFVer] || 8;
                  I2.biffguess = ee2.BIFFVer == 0;
                  if (ee2.BIFFVer == 0 && ee2.dt == 4096) {
                    I2.biff = 5;
                    $2 = true;
                    l(I2.codepage = 28591);
                  }
                  if (I2.biff == 8 && ee2.BIFFVer == 0 && ee2.dt == 16)
                    I2.biff = 2;
                  if (W2++)
                    break;
                  n2 = r2.dense ? [] : {};
                  if (I2.biff < 8 && !$2) {
                    $2 = true;
                    l(I2.codepage = r2.codepage || 1252);
                  }
                  if (I2.biff < 5 || ee2.BIFFVer == 0 && ee2.dt == 4096) {
                    if (c2 === "")
                      c2 = "Sheet1";
                    s2 = { s: { r: 0, c: 0 }, e: { r: 0, c: 0 } };
                    var ne2 = { pos: e2.l - J2, name: c2 };
                    i2[ne2.pos] = ne2;
                    I2.snames.push(c2);
                  } else
                    c2 = (i2[Y2] || { name: "" }).name;
                  if (ee2.dt == 32)
                    n2["!type"] = "chart";
                  if (ee2.dt == 64)
                    n2["!type"] = "macro";
                  F2 = [];
                  D2 = [];
                  I2.arrayf = k2 = [];
                  P2 = [];
                  N2 = [];
                  L2 = M2 = 0;
                  U2 = false;
                  T2 = { Hidden: (i2[Y2] || { hs: 0 }).hs, name: c2 };
                }
                break;
              case "Number":
                ;
              case "BIFF2NUM":
                ;
              case "BIFF2INT":
                {
                  if (n2["!type"] == "chart") {
                    if (r2.dense ? (n2[ee2.r] || [])[ee2.c] : n2[bt({ c: ee2.c, r: ee2.r })])
                      ++ee2.c;
                  }
                  E2 = { ixfe: ee2.ixfe, XF: _2[ee2.ixfe] || {}, v: ee2.val, t: "n" };
                  if (V2 > 0)
                    E2.z = X2[E2.ixfe >> 8 & 63];
                  Xp(E2, r2, t2.opts.Date1904);
                  A2({ c: ee2.c, r: ee2.r }, E2, r2);
                }
                break;
              case "BoolErr":
                {
                  E2 = { ixfe: ee2.ixfe, XF: _2[ee2.ixfe], v: ee2.val, t: ee2.t };
                  if (V2 > 0)
                    E2.z = X2[E2.ixfe >> 8 & 63];
                  Xp(E2, r2, t2.opts.Date1904);
                  A2({ c: ee2.c, r: ee2.r }, E2, r2);
                }
                break;
              case "RK":
                {
                  E2 = { ixfe: ee2.ixfe, XF: _2[ee2.ixfe], v: ee2.rknum, t: "n" };
                  if (V2 > 0)
                    E2.z = X2[E2.ixfe >> 8 & 63];
                  Xp(E2, r2, t2.opts.Date1904);
                  A2({ c: ee2.c, r: ee2.r }, E2, r2);
                }
                break;
              case "MulRk":
                {
                  for (var ie2 = ee2.c; ie2 <= ee2.C; ++ie2) {
                    var se2 = ee2.rkrec[ie2 - ee2.c][0];
                    E2 = { ixfe: se2, XF: _2[se2], v: ee2.rkrec[ie2 - ee2.c][1], t: "n" };
                    if (V2 > 0)
                      E2.z = X2[E2.ixfe >> 8 & 63];
                    Xp(E2, r2, t2.opts.Date1904);
                    A2({ c: ie2, r: ee2.r }, E2, r2);
                  }
                }
                break;
              case "Formula":
                {
                  if (ee2.val == "String") {
                    f2 = ee2;
                    break;
                  }
                  E2 = Gp(ee2.val, ee2.cell.ixfe, ee2.tt);
                  E2.XF = _2[E2.ixfe];
                  if (r2.cellFormula) {
                    var fe2 = ee2.formula;
                    if (fe2 && fe2[0] && fe2[0][0] && fe2[0][0][0] == "PtgExp") {
                      var le2 = fe2[0][0][1][0], oe2 = fe2[0][0][1][1];
                      var ce2 = bt({ r: le2, c: oe2 });
                      if (w2[ce2])
                        E2.f = "" + Wu(ee2.formula, s2, ee2.cell, z2, I2);
                      else
                        E2.F = ((r2.dense ? (n2[le2] || [])[oe2] : n2[ce2]) || {}).F;
                    } else
                      E2.f = "" + Wu(ee2.formula, s2, ee2.cell, z2, I2);
                  }
                  if (V2 > 0)
                    E2.z = X2[E2.ixfe >> 8 & 63];
                  Xp(E2, r2, t2.opts.Date1904);
                  A2(ee2.cell, E2, r2);
                  f2 = ee2;
                }
                break;
              case "String":
                {
                  if (f2) {
                    f2.val = ee2;
                    E2 = Gp(ee2, f2.cell.ixfe, "s");
                    E2.XF = _2[E2.ixfe];
                    if (r2.cellFormula) {
                      E2.f = "" + Wu(f2.formula, s2, f2.cell, z2, I2);
                    }
                    if (V2 > 0)
                      E2.z = X2[E2.ixfe >> 8 & 63];
                    Xp(E2, r2, t2.opts.Date1904);
                    A2(f2.cell, E2, r2);
                    f2 = null;
                  } else
                    throw new Error("String record expects Formula");
                }
                break;
              case "Array":
                {
                  k2.push(ee2);
                  var ue2 = bt(ee2[0].s);
                  v2 = r2.dense ? (n2[ee2[0].s.r] || [])[ee2[0].s.c] : n2[ue2];
                  if (r2.cellFormula && v2) {
                    if (!f2)
                      break;
                    if (!ue2 || !v2)
                      break;
                    v2.f = "" + Wu(ee2[1], s2, ee2[0], z2, I2);
                    v2.F = wt(ee2[0]);
                  }
                }
                break;
              case "ShrFmla":
                {
                  if (!r2.cellFormula)
                    break;
                  if (d2) {
                    if (!f2)
                      break;
                    w2[bt(f2.cell)] = ee2[0];
                    v2 = r2.dense ? (n2[f2.cell.r] || [])[f2.cell.c] : n2[bt(f2.cell)];
                    (v2 || {}).f = "" + Wu(ee2[0], s2, h2, z2, I2);
                  }
                }
                break;
              case "LabelSst":
                E2 = Gp(o2[ee2.isst].t, ee2.ixfe, "s");
                if (o2[ee2.isst].h)
                  E2.h = o2[ee2.isst].h;
                E2.XF = _2[E2.ixfe];
                if (V2 > 0)
                  E2.z = X2[E2.ixfe >> 8 & 63];
                Xp(E2, r2, t2.opts.Date1904);
                A2({ c: ee2.c, r: ee2.r }, E2, r2);
                break;
              case "Blank":
                if (r2.sheetStubs) {
                  E2 = { ixfe: ee2.ixfe, XF: _2[ee2.ixfe], t: "z" };
                  if (V2 > 0)
                    E2.z = X2[E2.ixfe >> 8 & 63];
                  Xp(E2, r2, t2.opts.Date1904);
                  A2({ c: ee2.c, r: ee2.r }, E2, r2);
                }
                break;
              case "MulBlank":
                if (r2.sheetStubs) {
                  for (var he2 = ee2.c; he2 <= ee2.C; ++he2) {
                    var de2 = ee2.ixfe[he2 - ee2.c];
                    E2 = { ixfe: de2, XF: _2[de2], t: "z" };
                    if (V2 > 0)
                      E2.z = X2[E2.ixfe >> 8 & 63];
                    Xp(E2, r2, t2.opts.Date1904);
                    A2({ c: he2, r: ee2.r }, E2, r2);
                  }
                }
                break;
              case "RString":
                ;
              case "Label":
                ;
              case "BIFF2STR":
                E2 = Gp(ee2.val, ee2.ixfe, "s");
                E2.XF = _2[E2.ixfe];
                if (V2 > 0)
                  E2.z = X2[E2.ixfe >> 8 & 63];
                Xp(E2, r2, t2.opts.Date1904);
                A2({ c: ee2.c, r: ee2.r }, E2, r2);
                break;
              case "Dimensions":
                {
                  if (W2 === 1)
                    s2 = ee2;
                }
                break;
              case "SST":
                {
                  o2 = ee2;
                }
                break;
              case "Format":
                {
                  if (I2.biff == 4) {
                    X2[V2++] = ee2[1];
                    for (var ve2 = 0; ve2 < V2 + 163; ++ve2)
                      if (O._table[ve2] == ee2[1])
                        break;
                    if (ve2 >= 163)
                      O.load(ee2[1], V2 + 163);
                  } else
                    O.load(ee2[1], ee2[0]);
                }
                break;
              case "BIFF2FORMAT":
                {
                  X2[V2++] = ee2;
                  for (var pe2 = 0; pe2 < V2 + 163; ++pe2)
                    if (O._table[pe2] == ee2)
                      break;
                  if (pe2 >= 163)
                    O.load(ee2, V2 + 163);
                }
                break;
              case "MergeCells":
                F2 = F2.concat(ee2);
                break;
              case "Obj":
                D2[ee2.cmo[0]] = I2.lastobj = ee2;
                break;
              case "TxO":
                I2.lastobj.TxO = ee2;
                break;
              case "ImData":
                I2.lastobj.ImData = ee2;
                break;
              case "HLink":
                {
                  for (g2 = ee2[0].s.r; g2 <= ee2[0].e.r; ++g2)
                    for (b2 = ee2[0].s.c; b2 <= ee2[0].e.c; ++b2) {
                      v2 = r2.dense ? (n2[g2] || [])[b2] : n2[bt({ c: b2, r: g2 })];
                      if (v2)
                        v2.l = ee2[1];
                    }
                }
                break;
              case "HLinkTooltip":
                {
                  for (g2 = ee2[0].s.r; g2 <= ee2[0].e.r; ++g2)
                    for (b2 = ee2[0].s.c; b2 <= ee2[0].e.c; ++b2) {
                      v2 = r2.dense ? (n2[g2] || [])[b2] : n2[bt({ c: b2, r: g2 })];
                      if (v2 && v2.l)
                        v2.l.Tooltip = ee2[1];
                    }
                }
                break;
              case "Note":
                {
                  if (I2.biff <= 5 && I2.biff >= 2)
                    break;
                  v2 = r2.dense ? (n2[ee2[0].r] || [])[ee2[0].c] : n2[bt(ee2[0])];
                  var me2 = D2[ee2[2]];
                  if (!v2) {
                    if (r2.dense) {
                      if (!n2[ee2[0].r])
                        n2[ee2[0].r] = [];
                      v2 = n2[ee2[0].r][ee2[0].c] = { t: "z" };
                    } else {
                      v2 = n2[bt(ee2[0])] = { t: "z" };
                    }
                    s2.e.r = Math.max(s2.e.r, ee2[0].r);
                    s2.s.r = Math.min(s2.s.r, ee2[0].r);
                    s2.e.c = Math.max(s2.e.c, ee2[0].c);
                    s2.s.c = Math.min(s2.s.c, ee2[0].c);
                  }
                  if (!v2.c)
                    v2.c = [];
                  p2 = { a: ee2[1], t: me2.TxO.t };
                  v2.c.push(p2);
                }
                break;
              default:
                switch (Q2.n) {
                  case "ClrtClient":
                    break;
                  case "XFExt":
                    Oo(_2[ee2.ixfe], ee2.ext);
                    break;
                  case "DefColWidth":
                    L2 = ee2;
                    break;
                  case "DefaultRowHeight":
                    M2 = ee2[1];
                    break;
                  case "ColInfo":
                    {
                      if (!I2.cellStyles)
                        break;
                      while (ee2.e >= ee2.s) {
                        P2[ee2.e--] = { width: ee2.w / 256, level: ee2.level || 0, hidden: !!(ee2.flags & 1) };
                        if (!U2) {
                          U2 = true;
                          Sl(ee2.w / 256);
                        }
                        _l(P2[ee2.e + 1]);
                      }
                    }
                    break;
                  case "Row":
                    {
                      var be2 = {};
                      if (ee2.level != null) {
                        N2[ee2.r] = be2;
                        be2.level = ee2.level;
                      }
                      if (ee2.hidden) {
                        N2[ee2.r] = be2;
                        be2.hidden = true;
                      }
                      if (ee2.hpt) {
                        N2[ee2.r] = be2;
                        be2.hpt = ee2.hpt;
                        be2.hpx = yl(ee2.hpt);
                      }
                    }
                    break;
                  case "LeftMargin":
                    ;
                  case "RightMargin":
                    ;
                  case "TopMargin":
                    ;
                  case "BottomMargin":
                    if (!n2["!margins"])
                      ph(n2["!margins"] = {});
                    n2["!margins"][re2.slice(0, -6).toLowerCase()] = ee2;
                    break;
                  case "Selection":
                    break;
                  case "Setup":
                    if (!n2["!margins"])
                      ph(n2["!margins"] = {});
                    n2["!margins"].header = ee2.header;
                    n2["!margins"].footer = ee2.footer;
                    break;
                  case "Window2":
                    if (ee2.RTL)
                      B2.Views[0].RTL = true;
                    break;
                  case "Header":
                    break;
                  case "Footer":
                    break;
                  case "HCenter":
                    break;
                  case "VCenter":
                    break;
                  case "Pls":
                    break;
                  case "GCW":
                    break;
                  case "LHRecord":
                    break;
                  case "DBCell":
                    break;
                  case "EntExU2":
                    break;
                  case "SxView":
                    break;
                  case "Sxvd":
                    break;
                  case "SXVI":
                    break;
                  case "SXVDEx":
                    break;
                  case "SxIvd":
                    break;
                  case "SXString":
                    break;
                  case "Sync":
                    break;
                  case "Addin":
                    break;
                  case "SXDI":
                    break;
                  case "SXLI":
                    break;
                  case "SXEx":
                    break;
                  case "QsiSXTag":
                    break;
                  case "Feat":
                    break;
                  case "FeatHdr":
                    ;
                  case "FeatHdr11":
                    break;
                  case "Feature11":
                    ;
                  case "Feature12":
                    ;
                  case "List12":
                    break;
                  case "Country":
                    S = ee2;
                    break;
                  case "RecalcId":
                    break;
                  case "DxGCol":
                    break;
                  case "Fbi":
                    ;
                  case "Fbi2":
                    ;
                  case "GelFrame":
                    break;
                  case "Font":
                    break;
                  case "XFCRC":
                    break;
                  case "Style":
                    break;
                  case "StyleExt":
                    break;
                  case "Palette":
                    C2 = ee2;
                    break;
                  case "Theme":
                    R2 = ee2;
                    break;
                  case "ScenarioProtect":
                    break;
                  case "ObjProtect":
                    break;
                  case "CondFmt12":
                    break;
                  case "Table":
                    break;
                  case "TableStyles":
                    break;
                  case "TableStyle":
                    break;
                  case "TableStyleElement":
                    break;
                  case "SXStreamID":
                    break;
                  case "SXVS":
                    break;
                  case "DConRef":
                    break;
                  case "SXAddl":
                    break;
                  case "DConBin":
                    break;
                  case "DConName":
                    break;
                  case "SXPI":
                    break;
                  case "SxFormat":
                    break;
                  case "SxSelect":
                    break;
                  case "SxRule":
                    break;
                  case "SxFilt":
                    break;
                  case "SxItm":
                    break;
                  case "SxDXF":
                    break;
                  case "ScenMan":
                    break;
                  case "DCon":
                    break;
                  case "CellWatch":
                    break;
                  case "PrintRowCol":
                    break;
                  case "PrintGrid":
                    break;
                  case "PrintSize":
                    break;
                  case "XCT":
                    break;
                  case "CRN":
                    break;
                  case "Scl":
                    {
                    }
                    break;
                  case "SheetExt":
                    {
                    }
                    break;
                  case "SheetExtOptional":
                    {
                    }
                    break;
                  case "ObNoMacros":
                    {
                    }
                    break;
                  case "ObProj":
                    {
                    }
                    break;
                  case "CodeName":
                    {
                      if (!c2)
                        B2.WBProps.CodeName = ee2 || "ThisWorkbook";
                      else
                        T2.CodeName = ee2 || T2.name;
                    }
                    break;
                  case "GUIDTypeLib":
                    {
                    }
                    break;
                  case "WOpt":
                    break;
                  case "PhoneticInfo":
                    break;
                  case "OleObjectSize":
                    break;
                  case "DXF":
                    ;
                  case "DXFN":
                    ;
                  case "DXFN12":
                    ;
                  case "DXFN12List":
                    ;
                  case "DXFN12NoCB":
                    break;
                  case "Dv":
                    ;
                  case "DVal":
                    break;
                  case "BRAI":
                    ;
                  case "Series":
                    ;
                  case "SeriesText":
                    break;
                  case "DConn":
                    break;
                  case "DbOrParamQry":
                    break;
                  case "DBQueryExt":
                    break;
                  case "OleDbConn":
                    break;
                  case "ExtString":
                    break;
                  case "IFmtRecord":
                    break;
                  case "CondFmt":
                    ;
                  case "CF":
                    ;
                  case "CF12":
                    ;
                  case "CFEx":
                    break;
                  case "Excel9File":
                    break;
                  case "Units":
                    break;
                  case "InterfaceHdr":
                    ;
                  case "Mms":
                    ;
                  case "InterfaceEnd":
                    ;
                  case "DSF":
                    break;
                  case "BuiltInFnGroupCount":
                    break;
                  case "Window1":
                    ;
                  case "HideObj":
                    ;
                  case "GridSet":
                    ;
                  case "Guts":
                    ;
                  case "UserBView":
                    ;
                  case "UserSViewBegin":
                    ;
                  case "UserSViewEnd":
                    break;
                  case "Pane":
                    break;
                  default:
                    switch (Q2.n) {
                      case "Dat":
                        ;
                      case "Begin":
                        ;
                      case "End":
                        ;
                      case "StartBlock":
                        ;
                      case "EndBlock":
                        ;
                      case "Frame":
                        ;
                      case "Area":
                        ;
                      case "Axis":
                        ;
                      case "AxisLine":
                        ;
                      case "Tick":
                        break;
                      case "AxesUsed":
                        ;
                      case "CrtLayout12":
                        ;
                      case "CrtLayout12A":
                        ;
                      case "CrtLink":
                        ;
                      case "CrtLine":
                        ;
                      case "CrtMlFrt":
                        ;
                      case "CrtMlFrtContinue":
                        break;
                      case "LineFormat":
                        ;
                      case "AreaFormat":
                        ;
                      case "Chart":
                        ;
                      case "Chart3d":
                        ;
                      case "Chart3DBarShape":
                        ;
                      case "ChartFormat":
                        ;
                      case "ChartFrtInfo":
                        break;
                      case "PlotArea":
                        ;
                      case "PlotGrowth":
                        break;
                      case "SeriesList":
                        ;
                      case "SerParent":
                        ;
                      case "SerAuxTrend":
                        break;
                      case "DataFormat":
                        ;
                      case "SerToCrt":
                        ;
                      case "FontX":
                        break;
                      case "CatSerRange":
                        ;
                      case "AxcExt":
                        ;
                      case "SerFmt":
                        break;
                      case "ShtProps":
                        break;
                      case "DefaultText":
                        ;
                      case "Text":
                        ;
                      case "CatLab":
                        break;
                      case "DataLabExtContents":
                        break;
                      case "Legend":
                        ;
                      case "LegendException":
                        break;
                      case "Pie":
                        ;
                      case "Scatter":
                        break;
                      case "PieFormat":
                        ;
                      case "MarkerFormat":
                        break;
                      case "StartObject":
                        ;
                      case "EndObject":
                        break;
                      case "AlRuns":
                        ;
                      case "ObjectLink":
                        break;
                      case "SIIndex":
                        break;
                      case "AttachedLabel":
                        ;
                      case "YMult":
                        break;
                      case "Line":
                        ;
                      case "Bar":
                        break;
                      case "Surf":
                        break;
                      case "AxisParent":
                        break;
                      case "Pos":
                        break;
                      case "ValueRange":
                        break;
                      case "SXViewEx9":
                        break;
                      case "SXViewLink":
                        break;
                      case "PivotChartBits":
                        break;
                      case "SBaseRef":
                        break;
                      case "TextPropsStream":
                        break;
                      case "LnExt":
                        break;
                      case "MkrExt":
                        break;
                      case "CrtCoopt":
                        break;
                      case "Qsi":
                        ;
                      case "Qsif":
                        ;
                      case "Qsir":
                        ;
                      case "QsiSXTag":
                        break;
                      case "TxtQry":
                        break;
                      case "FilterMode":
                        break;
                      case "AutoFilter":
                        ;
                      case "AutoFilterInfo":
                        break;
                      case "AutoFilter12":
                        break;
                      case "DropDownObjIds":
                        break;
                      case "Sort":
                        break;
                      case "SortData":
                        break;
                      case "ShapePropsStream":
                        break;
                      case "MsoDrawing":
                        ;
                      case "MsoDrawingGroup":
                        ;
                      case "MsoDrawingSelection":
                        break;
                      case "WebPub":
                        ;
                      case "AutoWebPub":
                        break;
                      case "HeaderFooter":
                        ;
                      case "HFPicture":
                        ;
                      case "PLV":
                        ;
                      case "HorizontalPageBreaks":
                        ;
                      case "VerticalPageBreaks":
                        break;
                      case "Backup":
                        ;
                      case "CompressPictures":
                        ;
                      case "Compat12":
                        break;
                      case "Continue":
                        ;
                      case "ContinueFrt12":
                        break;
                      case "FrtFontList":
                        ;
                      case "FrtWrapper":
                        break;
                      default:
                        switch (Q2.n) {
                          case "TabIdConf":
                            ;
                          case "Radar":
                            ;
                          case "RadarArea":
                            ;
                          case "DropBar":
                            ;
                          case "Intl":
                            ;
                          case "CoordList":
                            ;
                          case "SerAuxErrBar":
                            break;
                          case "BIFF2FONTCLR":
                            ;
                          case "BIFF2FMTCNT":
                            ;
                          case "BIFF2FONTXTRA":
                            break;
                          case "BIFF2XF":
                            ;
                          case "BIFF3XF":
                            ;
                          case "BIFF4XF":
                            break;
                          case "BIFF2XFINDEX":
                            break;
                          case "BIFF4FMTCNT":
                            ;
                          case "BIFF2ROW":
                            ;
                          case "BIFF2WINDOW2":
                            break;
                          case "SCENARIO":
                            ;
                          case "DConBin":
                            ;
                          case "PicF":
                            ;
                          case "DataLabExt":
                            ;
                          case "Lel":
                            ;
                          case "BopPop":
                            ;
                          case "BopPopCustom":
                            ;
                          case "RealTimeData":
                            ;
                          case "Name":
                            break;
                          case "LHNGraph":
                            ;
                          case "FnGroupName":
                            ;
                          case "AddMenu":
                            ;
                          case "LPr":
                            break;
                          case "ListObj":
                            ;
                          case "ListField":
                            break;
                          case "RRSort":
                            break;
                          case "BigName":
                            break;
                          case "ToolbarHdr":
                            ;
                          case "ToolbarEnd":
                            break;
                          case "DDEObjName":
                            break;
                          case "FRTArchId$":
                            break;
                          default:
                            if (r2.WTF)
                              throw "Unrecognized Record " + Q2.n;
                        }
                        ;
                    }
                    ;
                }
                ;
            }
          } else
            e2.l += J2;
        }
        t2.SheetNames = K(i2).sort(function(e3, r3) {
          return Number(e3) - Number(r3);
        }).map(function(e3) {
          return i2[e3].name;
        });
        if (!r2.bookSheets)
          t2.Sheets = a2;
        if (!t2.SheetNames.length && u2["!ref"]) {
          t2.SheetNames.push("Sheet1");
          if (t2.Sheets)
            t2.Sheets["Sheet1"] = u2;
        } else
          t2.Preamble = u2;
        if (t2.Sheets)
          G2.forEach(function(e3, r3) {
            t2.Sheets[t2.SheetNames[r3]]["!autofilter"] = e3;
          });
        t2.Strings = o2;
        t2.SSF = O.get_table();
        if (I2.enc)
          t2.Encryption = I2.enc;
        if (R2)
          t2.Themes = R2;
        t2.Metadata = {};
        if (S !== void 0)
          t2.Metadata.Country = S;
        if (z2.names.length > 0)
          B2.Names = z2.names;
        t2.Workbook = B2;
        return t2;
      }
      var Kp = { SI: "e0859ff2f94f6810ab9108002b27b3d9", DSI: "02d5cdd59c2e1b10939708002b2cf9ae", UDI: "05d5cdd59c2e1b10939708002b2cf9ae" };
      function $p(e2, r2, t2) {
        var a2 = W.find(e2, "!DocumentSummaryInformation");
        if (a2 && a2.size > 0)
          try {
            var n2 = Hn(a2, ka, Kp.DSI);
            for (var i2 in n2)
              r2[i2] = n2[i2];
          } catch (s2) {
            if (t2.WTF)
              throw s2;
          }
        var f2 = W.find(e2, "!SummaryInformation");
        if (f2 && f2.size > 0)
          try {
            var l2 = Hn(f2, Ea, Kp.SI);
            for (var o2 in l2)
              if (r2[o2] == null)
                r2[o2] = l2[o2];
          } catch (s2) {
            if (t2.WTF)
              throw s2;
          }
        if (r2.HeadingPairs && r2.TitlesOfParts) {
          ln(r2.HeadingPairs, r2.TitlesOfParts, r2, t2);
          delete r2.HeadingPairs;
          delete r2.TitlesOfParts;
        }
      }
      function Yp(e2, r2) {
        var t2 = [], a2 = [], n2 = [];
        var i2 = 0, s2;
        if (e2.Props) {
          s2 = K(e2.Props);
          for (i2 = 0; i2 < s2.length; ++i2)
            (Object.prototype.hasOwnProperty.call(Sa, s2[i2]) ? t2 : Object.prototype.hasOwnProperty.call(_a, s2[i2]) ? a2 : n2).push([s2[i2], e2.Props[s2[i2]]]);
        }
        if (e2.Custprops) {
          s2 = K(e2.Custprops);
          for (i2 = 0; i2 < s2.length; ++i2)
            if (!Object.prototype.hasOwnProperty.call(e2.Props || {}, s2[i2]))
              (Object.prototype.hasOwnProperty.call(Sa, s2[i2]) ? t2 : Object.prototype.hasOwnProperty.call(_a, s2[i2]) ? a2 : n2).push([s2[i2], e2.Custprops[s2[i2]]]);
        }
        var f2 = [];
        for (i2 = 0; i2 < n2.length; ++i2) {
          if (Mn.indexOf(n2[i2][0]) > -1)
            continue;
          if (n2[i2][1] == null)
            continue;
          f2.push(n2[i2]);
        }
        if (a2.length)
          W.utils.cfb_add(r2, "/SummaryInformation", Wn(a2, Kp.SI, _a, Ea));
        if (t2.length || f2.length)
          W.utils.cfb_add(r2, "/DocumentSummaryInformation", Wn(t2, Kp.DSI, Sa, ka, f2.length ? f2 : null, Kp.UDI));
      }
      function Zp(e2, r2) {
        if (!r2)
          r2 = {};
        jm(r2);
        o();
        if (r2.codepage)
          s(r2.codepage);
        var t2, a2;
        if (e2.FullPaths) {
          if (W.find(e2, "/encryption"))
            throw new Error("File is password-protected");
          t2 = W.find(e2, "!CompObj");
          a2 = W.find(e2, "/Workbook") || W.find(e2, "/Book");
        } else {
          switch (r2.type) {
            case "base64":
              e2 = B(g.decode(e2));
              break;
            case "binary":
              e2 = B(e2);
              break;
            case "buffer":
              break;
            case "array":
              if (!Array.isArray(e2))
                e2 = Array.prototype.slice.call(e2);
              break;
          }
          Yr(e2, 0);
          a2 = { content: e2 };
        }
        var n2;
        var i2;
        if (t2)
          Wp(t2);
        if (r2.bookProps && !r2.bookSheets)
          n2 = {};
        else {
          var f2 = w ? "buffer" : "array";
          if (a2 && a2.content)
            n2 = jp(a2.content, r2);
          else if ((i2 = W.find(e2, "PerfectOffice_MAIN")) && i2.content)
            n2 = kf.to_workbook(i2.content, (r2.type = f2, r2));
          else if ((i2 = W.find(e2, "NativeContent_MAIN")) && i2.content)
            n2 = kf.to_workbook(i2.content, (r2.type = f2, r2));
          else
            throw new Error("Cannot find Workbook stream");
          if (r2.bookVBA && e2.FullPaths && W.find(e2, "/_VBA_PROJECT_CUR/VBA/dir"))
            n2.vbaraw = qo(e2);
        }
        var l2 = {};
        if (e2.FullPaths)
          $p(e2, l2, r2);
        n2.Props = n2.Custprops = l2;
        if (r2.bookFiles)
          n2.cfb = e2;
        return n2;
      }
      function Jp(e2, r2) {
        var t2 = r2 || {};
        var a2 = W.utils.cfb_new({ root: "R" });
        var n2 = "/Workbook";
        switch (t2.bookType || "xls") {
          case "xls":
            t2.bookType = "biff8";
          case "xla":
            if (!t2.bookType)
              t2.bookType = "xla";
          case "biff8":
            n2 = "/Workbook";
            t2.biff = 8;
            break;
          case "biff5":
            n2 = "/Book";
            t2.biff = 5;
            break;
          default:
            throw new Error("invalid type " + t2.bookType + " for XLS CFB");
        }
        W.utils.cfb_add(a2, n2, km(e2, t2));
        if (t2.biff == 8 && (e2.Props || e2.Custprops))
          Yp(e2, a2);
        if (t2.biff == 8 && e2.vbaraw)
          ec(a2, W.read(e2.vbaraw, { type: typeof e2.vbaraw == "string" ? "binary" : "buffer" }));
        return a2;
      }
      var Qp = { 0: { n: "BrtRowHdr", f: qh }, 1: { n: "BrtCellBlank", f: fd }, 2: { n: "BrtCellRk", f: yd }, 3: { n: "BrtCellError", f: pd }, 4: { n: "BrtCellBool", f: ud }, 5: { n: "BrtCellReal", f: _d }, 6: { n: "BrtCellSt", f: Rd }, 7: { n: "BrtCellIsst", f: wd }, 8: { n: "BrtFmlaString", f: Md }, 9: { n: "BrtFmlaNum", f: Ld }, 10: { n: "BrtFmlaBool", f: Pd }, 11: { n: "BrtFmlaError", f: Nd }, 12: { n: "BrtShortBlank", f: od }, 13: { n: "BrtShortRk", f: Ad }, 14: { n: "BrtShortError", f: bd }, 15: { n: "BrtShortBool", f: dd }, 16: { n: "BrtShortReal", f: Bd }, 17: { n: "BrtShortSt", f: Od }, 18: { n: "BrtShortIsst", f: Ed }, 19: { n: "BrtSSTItem", f: Rt }, 20: { n: "BrtPCDIMissing" }, 21: { n: "BrtPCDINumber" }, 22: { n: "BrtPCDIBoolean" }, 23: { n: "BrtPCDIError" }, 24: { n: "BrtPCDIString" }, 25: { n: "BrtPCDIDatetime" }, 26: { n: "BrtPCDIIndex" }, 27: { n: "BrtPCDIAMissing" }, 28: { n: "BrtPCDIANumber" }, 29: { n: "BrtPCDIABoolean" }, 30: { n: "BrtPCDIAError" }, 31: { n: "BrtPCDIAString" }, 32: { n: "BrtPCDIADatetime" }, 33: { n: "BrtPCRRecord" }, 34: { n: "BrtPCRRecordDt" }, 35: { n: "BrtFRTBegin" }, 36: { n: "BrtFRTEnd" }, 37: { n: "BrtACBegin" }, 38: { n: "BrtACEnd" }, 39: { n: "BrtName", f: Gv }, 40: { n: "BrtIndexRowBlock" }, 42: { n: "BrtIndexBlock" }, 43: { n: "BrtFont", f: Vl }, 44: { n: "BrtFmt", f: Hl }, 45: { n: "BrtFill", f: Kl }, 46: { n: "BrtBorder", f: Ql }, 47: { n: "BrtXF", f: Yl }, 48: { n: "BrtStyle" }, 49: { n: "BrtCellMeta" }, 50: { n: "BrtValueMeta" }, 51: { n: "BrtMdb" }, 52: { n: "BrtBeginFmd" }, 53: { n: "BrtEndFmd" }, 54: { n: "BrtBeginMdx" }, 55: { n: "BrtEndMdx" }, 56: { n: "BrtBeginMdxTuple" }, 57: { n: "BrtEndMdxTuple" }, 58: { n: "BrtMdxMbrIstr" }, 59: { n: "BrtStr" }, 60: { n: "BrtColInfo", f: Zs }, 62: { n: "BrtCellRString" }, 63: { n: "BrtCalcChainItem$", f: Po }, 64: { n: "BrtDVal", f: rv }, 65: { n: "BrtSxvcellNum" }, 66: { n: "BrtSxvcellStr" }, 67: { n: "BrtSxvcellBool" }, 68: { n: "BrtSxvcellErr" }, 69: { n: "BrtSxvcellDate" }, 70: { n: "BrtSxvcellNil" }, 128: { n: "BrtFileVersion" }, 129: { n: "BrtBeginSheet" }, 130: { n: "BrtEndSheet" }, 131: { n: "BrtBeginBook", f: Zr, p: 0 }, 132: { n: "BrtEndBook" }, 133: { n: "BrtBeginWsViews" }, 134: { n: "BrtEndWsViews" }, 135: { n: "BrtBeginBookViews" }, 136: { n: "BrtEndBookViews" }, 137: { n: "BrtBeginWsView", f: Jd }, 138: { n: "BrtEndWsView" }, 139: { n: "BrtBeginCsViews" }, 140: { n: "BrtEndCsViews" }, 141: { n: "BrtBeginCsView" }, 142: { n: "BrtEndCsView" }, 143: { n: "BrtBeginBundleShs" }, 144: { n: "BrtEndBundleShs" }, 145: { n: "BrtBeginSheetData" }, 146: { n: "BrtEndSheetData" }, 147: { n: "BrtWsProp", f: id }, 148: { n: "BrtWsDim", f: td, p: 16 }, 151: { n: "BrtPane", f: Xd }, 152: { n: "BrtSel" }, 153: { n: "BrtWbProp", f: Wv }, 154: { n: "BrtWbFactoid" }, 155: { n: "BrtFileRecover" }, 156: { n: "BrtBundleSh", f: zv }, 157: { n: "BrtCalcProp" }, 158: { n: "BrtBookView" }, 159: { n: "BrtBeginSst", f: Df }, 160: { n: "BrtEndSst" }, 161: { n: "BrtBeginAFilter", f: Zt }, 162: { n: "BrtEndAFilter" }, 163: { n: "BrtBeginFilterColumn" }, 164: { n: "BrtEndFilterColumn" }, 165: { n: "BrtBeginFilters" }, 166: { n: "BrtEndFilters" }, 167: { n: "BrtFilter" }, 168: { n: "BrtColorFilter" }, 169: { n: "BrtIconFilter" }, 170: { n: "BrtTop10Filter" }, 171: { n: "BrtDynamicFilter" }, 172: { n: "BrtBeginCustomFilters" }, 173: { n: "BrtEndCustomFilters" }, 174: { n: "BrtCustomFilter" }, 175: { n: "BrtAFilterDateGroupItem" }, 176: { n: "BrtMergeCell", f: Ud }, 177: { n: "BrtBeginMergeCells" }, 178: { n: "BrtEndMergeCells" }, 179: { n: "BrtBeginPivotCacheDef" }, 180: { n: "BrtEndPivotCacheDef" }, 181: { n: "BrtBeginPCDFields" }, 182: { n: "BrtEndPCDFields" }, 183: { n: "BrtBeginPCDField" }, 184: { n: "BrtEndPCDField" }, 185: { n: "BrtBeginPCDSource" }, 186: { n: "BrtEndPCDSource" }, 187: { n: "BrtBeginPCDSRange" }, 188: { n: "BrtEndPCDSRange" }, 189: { n: "BrtBeginPCDFAtbl" }, 190: { n: "BrtEndPCDFAtbl" }, 191: { n: "BrtBeginPCDIRun" }, 192: { n: "BrtEndPCDIRun" }, 193: { n: "BrtBeginPivotCacheRecords" }, 194: { n: "BrtEndPivotCacheRecords" }, 195: { n: "BrtBeginPCDHierarchies" }, 196: { n: "BrtEndPCDHierarchies" }, 197: { n: "BrtBeginPCDHierarchy" }, 198: { n: "BrtEndPCDHierarchy" }, 199: { n: "BrtBeginPCDHFieldsUsage" }, 200: { n: "BrtEndPCDHFieldsUsage" }, 201: { n: "BrtBeginExtConnection" }, 202: { n: "BrtEndExtConnection" }, 203: { n: "BrtBeginECDbProps" }, 204: { n: "BrtEndECDbProps" }, 205: { n: "BrtBeginECOlapProps" }, 206: { n: "BrtEndECOlapProps" }, 207: { n: "BrtBeginPCDSConsol" }, 208: { n: "BrtEndPCDSConsol" }, 209: { n: "BrtBeginPCDSCPages" }, 210: { n: "BrtEndPCDSCPages" }, 211: { n: "BrtBeginPCDSCPage" }, 212: { n: "BrtEndPCDSCPage" }, 213: { n: "BrtBeginPCDSCPItem" }, 214: { n: "BrtEndPCDSCPItem" }, 215: { n: "BrtBeginPCDSCSets" }, 216: { n: "BrtEndPCDSCSets" }, 217: { n: "BrtBeginPCDSCSet" }, 218: { n: "BrtEndPCDSCSet" }, 219: { n: "BrtBeginPCDFGroup" }, 220: { n: "BrtEndPCDFGroup" }, 221: { n: "BrtBeginPCDFGItems" }, 222: { n: "BrtEndPCDFGItems" }, 223: { n: "BrtBeginPCDFGRange" }, 224: { n: "BrtEndPCDFGRange" }, 225: { n: "BrtBeginPCDFGDiscrete" }, 226: { n: "BrtEndPCDFGDiscrete" }, 227: { n: "BrtBeginPCDSDTupleCache" }, 228: { n: "BrtEndPCDSDTupleCache" }, 229: { n: "BrtBeginPCDSDTCEntries" }, 230: { n: "BrtEndPCDSDTCEntries" }, 231: { n: "BrtBeginPCDSDTCEMembers" }, 232: { n: "BrtEndPCDSDTCEMembers" }, 233: { n: "BrtBeginPCDSDTCEMember" }, 234: { n: "BrtEndPCDSDTCEMember" }, 235: { n: "BrtBeginPCDSDTCQueries" }, 236: { n: "BrtEndPCDSDTCQueries" }, 237: { n: "BrtBeginPCDSDTCQuery" }, 238: { n: "BrtEndPCDSDTCQuery" }, 239: { n: "BrtBeginPCDSDTCSets" }, 240: { n: "BrtEndPCDSDTCSets" }, 241: { n: "BrtBeginPCDSDTCSet" }, 242: { n: "BrtEndPCDSDTCSet" }, 243: { n: "BrtBeginPCDCalcItems" }, 244: { n: "BrtEndPCDCalcItems" }, 245: { n: "BrtBeginPCDCalcItem" }, 246: { n: "BrtEndPCDCalcItem" }, 247: { n: "BrtBeginPRule" }, 248: { n: "BrtEndPRule" }, 249: { n: "BrtBeginPRFilters" }, 250: { n: "BrtEndPRFilters" }, 251: { n: "BrtBeginPRFilter" }, 252: { n: "BrtEndPRFilter" }, 253: { n: "BrtBeginPNames" }, 254: { n: "BrtEndPNames" }, 255: { n: "BrtBeginPName" }, 256: { n: "BrtEndPName" }, 257: { n: "BrtBeginPNPairs" }, 258: { n: "BrtEndPNPairs" }, 259: { n: "BrtBeginPNPair" }, 260: { n: "BrtEndPNPair" }, 261: { n: "BrtBeginECWebProps" }, 262: { n: "BrtEndECWebProps" }, 263: { n: "BrtBeginEcWpTables" }, 264: { n: "BrtEndECWPTables" }, 265: { n: "BrtBeginECParams" }, 266: { n: "BrtEndECParams" }, 267: { n: "BrtBeginECParam" }, 268: { n: "BrtEndECParam" }, 269: { n: "BrtBeginPCDKPIs" }, 270: { n: "BrtEndPCDKPIs" }, 271: { n: "BrtBeginPCDKPI" }, 272: { n: "BrtEndPCDKPI" }, 273: { n: "BrtBeginDims" }, 274: { n: "BrtEndDims" }, 275: { n: "BrtBeginDim" }, 276: { n: "BrtEndDim" }, 277: { n: "BrtIndexPartEnd" }, 278: { n: "BrtBeginStyleSheet" }, 279: { n: "BrtEndStyleSheet" }, 280: { n: "BrtBeginSXView" }, 281: { n: "BrtEndSXVI" }, 282: { n: "BrtBeginSXVI" }, 283: { n: "BrtBeginSXVIs" }, 284: { n: "BrtEndSXVIs" }, 285: { n: "BrtBeginSXVD" }, 286: { n: "BrtEndSXVD" }, 287: { n: "BrtBeginSXVDs" }, 288: { n: "BrtEndSXVDs" }, 289: { n: "BrtBeginSXPI" }, 290: { n: "BrtEndSXPI" }, 291: { n: "BrtBeginSXPIs" }, 292: { n: "BrtEndSXPIs" }, 293: { n: "BrtBeginSXDI" }, 294: { n: "BrtEndSXDI" }, 295: { n: "BrtBeginSXDIs" }, 296: { n: "BrtEndSXDIs" }, 297: { n: "BrtBeginSXLI" }, 298: { n: "BrtEndSXLI" }, 299: { n: "BrtBeginSXLIRws" }, 300: { n: "BrtEndSXLIRws" }, 301: { n: "BrtBeginSXLICols" }, 302: { n: "BrtEndSXLICols" }, 303: { n: "BrtBeginSXFormat" }, 304: { n: "BrtEndSXFormat" }, 305: { n: "BrtBeginSXFormats" }, 306: { n: "BrtEndSxFormats" }, 307: { n: "BrtBeginSxSelect" }, 308: { n: "BrtEndSxSelect" }, 309: { n: "BrtBeginISXVDRws" }, 310: { n: "BrtEndISXVDRws" }, 311: { n: "BrtBeginISXVDCols" }, 312: { n: "BrtEndISXVDCols" }, 313: { n: "BrtEndSXLocation" }, 314: { n: "BrtBeginSXLocation" }, 315: { n: "BrtEndSXView" }, 316: { n: "BrtBeginSXTHs" }, 317: { n: "BrtEndSXTHs" }, 318: { n: "BrtBeginSXTH" }, 319: { n: "BrtEndSXTH" }, 320: { n: "BrtBeginISXTHRws" }, 321: { n: "BrtEndISXTHRws" }, 322: { n: "BrtBeginISXTHCols" }, 323: { n: "BrtEndISXTHCols" }, 324: { n: "BrtBeginSXTDMPS" }, 325: { n: "BrtEndSXTDMPs" }, 326: { n: "BrtBeginSXTDMP" }, 327: { n: "BrtEndSXTDMP" }, 328: { n: "BrtBeginSXTHItems" }, 329: { n: "BrtEndSXTHItems" }, 330: { n: "BrtBeginSXTHItem" }, 331: { n: "BrtEndSXTHItem" }, 332: { n: "BrtBeginMetadata" }, 333: { n: "BrtEndMetadata" }, 334: { n: "BrtBeginEsmdtinfo" }, 335: { n: "BrtMdtinfo" }, 336: { n: "BrtEndEsmdtinfo" }, 337: { n: "BrtBeginEsmdb" }, 338: { n: "BrtEndEsmdb" }, 339: { n: "BrtBeginEsfmd" }, 340: { n: "BrtEndEsfmd" }, 341: { n: "BrtBeginSingleCells" }, 342: { n: "BrtEndSingleCells" }, 343: { n: "BrtBeginList" }, 344: { n: "BrtEndList" }, 345: { n: "BrtBeginListCols" }, 346: { n: "BrtEndListCols" }, 347: { n: "BrtBeginListCol" }, 348: { n: "BrtEndListCol" }, 349: { n: "BrtBeginListXmlCPr" }, 350: { n: "BrtEndListXmlCPr" }, 351: { n: "BrtListCCFmla" }, 352: { n: "BrtListTrFmla" }, 353: { n: "BrtBeginExternals" }, 354: { n: "BrtEndExternals" }, 355: { n: "BrtSupBookSrc", f: Xt }, 357: { n: "BrtSupSelf" }, 358: { n: "BrtSupSame" }, 359: { n: "BrtSupTabs" }, 360: { n: "BrtBeginSupBook" }, 361: { n: "BrtPlaceholderName" }, 362: { n: "BrtExternSheet", f: ys }, 363: { n: "BrtExternTableStart" }, 364: { n: "BrtExternTableEnd" }, 366: { n: "BrtExternRowHdr" }, 367: { n: "BrtExternCellBlank" }, 368: { n: "BrtExternCellReal" }, 369: { n: "BrtExternCellBool" }, 370: { n: "BrtExternCellError" }, 371: { n: "BrtExternCellString" }, 372: { n: "BrtBeginEsmdx" }, 373: { n: "BrtEndEsmdx" }, 374: { n: "BrtBeginMdxSet" }, 375: { n: "BrtEndMdxSet" }, 376: { n: "BrtBeginMdxMbrProp" }, 377: { n: "BrtEndMdxMbrProp" }, 378: { n: "BrtBeginMdxKPI" }, 379: { n: "BrtEndMdxKPI" }, 380: { n: "BrtBeginEsstr" }, 381: { n: "BrtEndEsstr" }, 382: { n: "BrtBeginPRFItem" }, 383: { n: "BrtEndPRFItem" }, 384: { n: "BrtBeginPivotCacheIDs" }, 385: { n: "BrtEndPivotCacheIDs" }, 386: { n: "BrtBeginPivotCacheID" }, 387: { n: "BrtEndPivotCacheID" }, 388: { n: "BrtBeginISXVIs" }, 389: { n: "BrtEndISXVIs" }, 390: { n: "BrtBeginColInfos" }, 391: { n: "BrtEndColInfos" }, 392: { n: "BrtBeginRwBrk" }, 393: { n: "BrtEndRwBrk" }, 394: { n: "BrtBeginColBrk" }, 395: { n: "BrtEndColBrk" }, 396: { n: "BrtBrk" }, 397: { n: "BrtUserBookView" }, 398: { n: "BrtInfo" }, 399: { n: "BrtCUsr" }, 400: { n: "BrtUsr" }, 401: { n: "BrtBeginUsers" }, 403: { n: "BrtEOF" }, 404: { n: "BrtUCR" }, 405: { n: "BrtRRInsDel" }, 406: { n: "BrtRREndInsDel" }, 407: { n: "BrtRRMove" }, 408: { n: "BrtRREndMove" }, 409: { n: "BrtRRChgCell" }, 410: { n: "BrtRREndChgCell" }, 411: { n: "BrtRRHeader" }, 412: { n: "BrtRRUserView" }, 413: { n: "BrtRRRenSheet" }, 414: { n: "BrtRRInsertSh" }, 415: { n: "BrtRRDefName" }, 416: { n: "BrtRRNote" }, 417: { n: "BrtRRConflict" }, 418: { n: "BrtRRTQSIF" }, 419: { n: "BrtRRFormat" }, 420: { n: "BrtRREndFormat" }, 421: { n: "BrtRRAutoFmt" }, 422: { n: "BrtBeginUserShViews" }, 423: { n: "BrtBeginUserShView" }, 424: { n: "BrtEndUserShView" }, 425: { n: "BrtEndUserShViews" }, 426: { n: "BrtArrFmla", f: Gd }, 427: { n: "BrtShrFmla", f: jd }, 428: { n: "BrtTable" }, 429: { n: "BrtBeginExtConnections" }, 430: { n: "BrtEndExtConnections" }, 431: { n: "BrtBeginPCDCalcMems" }, 432: { n: "BrtEndPCDCalcMems" }, 433: { n: "BrtBeginPCDCalcMem" }, 434: { n: "BrtEndPCDCalcMem" }, 435: { n: "BrtBeginPCDHGLevels" }, 436: { n: "BrtEndPCDHGLevels" }, 437: { n: "BrtBeginPCDHGLevel" }, 438: { n: "BrtEndPCDHGLevel" }, 439: { n: "BrtBeginPCDHGLGroups" }, 440: { n: "BrtEndPCDHGLGroups" }, 441: { n: "BrtBeginPCDHGLGroup" }, 442: { n: "BrtEndPCDHGLGroup" }, 443: { n: "BrtBeginPCDHGLGMembers" }, 444: { n: "BrtEndPCDHGLGMembers" }, 445: { n: "BrtBeginPCDHGLGMember" }, 446: { n: "BrtEndPCDHGLGMember" }, 447: { n: "BrtBeginQSI" }, 448: { n: "BrtEndQSI" }, 449: { n: "BrtBeginQSIR" }, 450: { n: "BrtEndQSIR" }, 451: { n: "BrtBeginDeletedNames" }, 452: { n: "BrtEndDeletedNames" }, 453: { n: "BrtBeginDeletedName" }, 454: { n: "BrtEndDeletedName" }, 455: { n: "BrtBeginQSIFs" }, 456: { n: "BrtEndQSIFs" }, 457: { n: "BrtBeginQSIF" }, 458: { n: "BrtEndQSIF" }, 459: { n: "BrtBeginAutoSortScope" }, 460: { n: "BrtEndAutoSortScope" }, 461: { n: "BrtBeginConditionalFormatting" }, 462: { n: "BrtEndConditionalFormatting" }, 463: { n: "BrtBeginCFRule" }, 464: { n: "BrtEndCFRule" }, 465: { n: "BrtBeginIconSet" }, 466: { n: "BrtEndIconSet" }, 467: { n: "BrtBeginDatabar" }, 468: { n: "BrtEndDatabar" }, 469: { n: "BrtBeginColorScale" }, 470: { n: "BrtEndColorScale" }, 471: { n: "BrtCFVO" }, 472: { n: "BrtExternValueMeta" }, 473: { n: "BrtBeginColorPalette" }, 474: { n: "BrtEndColorPalette" }, 475: { n: "BrtIndexedColor" }, 476: { n: "BrtMargins", f: Yd }, 477: { n: "BrtPrintOptions" }, 478: { n: "BrtPageSetup" }, 479: { n: "BrtBeginHeaderFooter" }, 480: { n: "BrtEndHeaderFooter" }, 481: { n: "BrtBeginSXCrtFormat" }, 482: { n: "BrtEndSXCrtFormat" }, 483: { n: "BrtBeginSXCrtFormats" }, 484: { n: "BrtEndSXCrtFormats" }, 485: { n: "BrtWsFmtInfo", f: nd }, 486: { n: "BrtBeginMgs" }, 487: { n: "BrtEndMGs" }, 488: { n: "BrtBeginMGMaps" }, 489: { n: "BrtEndMGMaps" }, 490: { n: "BrtBeginMG" }, 491: { n: "BrtEndMG" }, 492: { n: "BrtBeginMap" }, 493: { n: "BrtEndMap" }, 494: { n: "BrtHLink", f: Wd }, 495: { n: "BrtBeginDCon" }, 496: { n: "BrtEndDCon" }, 497: { n: "BrtBeginDRefs" }, 498: { n: "BrtEndDRefs" }, 499: { n: "BrtDRef" }, 500: { n: "BrtBeginScenMan" }, 501: { n: "BrtEndScenMan" }, 502: { n: "BrtBeginSct" }, 503: { n: "BrtEndSct" }, 504: { n: "BrtSlc" }, 505: { n: "BrtBeginDXFs" }, 506: { n: "BrtEndDXFs" }, 507: { n: "BrtDXF" }, 508: { n: "BrtBeginTableStyles" }, 509: { n: "BrtEndTableStyles" }, 510: { n: "BrtBeginTableStyle" }, 511: { n: "BrtEndTableStyle" }, 512: { n: "BrtTableStyleElement" }, 513: { n: "BrtTableStyleClient" }, 514: { n: "BrtBeginVolDeps" }, 515: { n: "BrtEndVolDeps" }, 516: { n: "BrtBeginVolType" }, 517: { n: "BrtEndVolType" }, 518: { n: "BrtBeginVolMain" }, 519: { n: "BrtEndVolMain" }, 520: { n: "BrtBeginVolTopic" }, 521: { n: "BrtEndVolTopic" }, 522: { n: "BrtVolSubtopic" }, 523: { n: "BrtVolRef" }, 524: { n: "BrtVolNum" }, 525: { n: "BrtVolErr" }, 526: { n: "BrtVolStr" }, 527: { n: "BrtVolBool" }, 528: { n: "BrtBeginCalcChain$" }, 529: { n: "BrtEndCalcChain$" }, 530: { n: "BrtBeginSortState" }, 531: { n: "BrtEndSortState" }, 532: { n: "BrtBeginSortCond" }, 533: { n: "BrtEndSortCond" }, 534: { n: "BrtBookProtection" }, 535: { n: "BrtSheetProtection" }, 536: { n: "BrtRangeProtection" }, 537: { n: "BrtPhoneticInfo" }, 538: { n: "BrtBeginECTxtWiz" }, 539: { n: "BrtEndECTxtWiz" }, 540: { n: "BrtBeginECTWFldInfoLst" }, 541: { n: "BrtEndECTWFldInfoLst" }, 542: { n: "BrtBeginECTwFldInfo" }, 548: { n: "BrtFileSharing" }, 549: { n: "BrtOleSize" }, 550: { n: "BrtDrawing", f: Xt }, 551: { n: "BrtLegacyDrawing" }, 552: { n: "BrtLegacyDrawingHF" }, 553: { n: "BrtWebOpt" }, 554: { n: "BrtBeginWebPubItems" }, 555: { n: "BrtEndWebPubItems" }, 556: { n: "BrtBeginWebPubItem" }, 557: { n: "BrtEndWebPubItem" }, 558: { n: "BrtBeginSXCondFmt" }, 559: { n: "BrtEndSXCondFmt" }, 560: { n: "BrtBeginSXCondFmts" }, 561: { n: "BrtEndSXCondFmts" }, 562: { n: "BrtBkHim" }, 564: { n: "BrtColor" }, 565: { n: "BrtBeginIndexedColors" }, 566: { n: "BrtEndIndexedColors" }, 569: { n: "BrtBeginMRUColors" }, 570: { n: "BrtEndMRUColors" }, 572: { n: "BrtMRUColor" }, 573: { n: "BrtBeginDVals" }, 574: { n: "BrtEndDVals" }, 577: { n: "BrtSupNameStart" }, 578: { n: "BrtSupNameValueStart" }, 579: { n: "BrtSupNameValueEnd" }, 580: { n: "BrtSupNameNum" }, 581: { n: "BrtSupNameErr" }, 582: { n: "BrtSupNameSt" }, 583: { n: "BrtSupNameNil" }, 584: { n: "BrtSupNameBool" }, 585: { n: "BrtSupNameFmla" }, 586: { n: "BrtSupNameBits" }, 587: { n: "BrtSupNameEnd" }, 588: { n: "BrtEndSupBook" }, 589: { n: "BrtCellSmartTagProperty" }, 590: { n: "BrtBeginCellSmartTag" }, 591: { n: "BrtEndCellSmartTag" }, 592: { n: "BrtBeginCellSmartTags" }, 593: { n: "BrtEndCellSmartTags" }, 594: { n: "BrtBeginSmartTags" }, 595: { n: "BrtEndSmartTags" }, 596: { n: "BrtSmartTagType" }, 597: { n: "BrtBeginSmartTagTypes" }, 598: { n: "BrtEndSmartTagTypes" }, 599: { n: "BrtBeginSXFilters" }, 600: { n: "BrtEndSXFilters" }, 601: { n: "BrtBeginSXFILTER" }, 602: { n: "BrtEndSXFilter" }, 603: { n: "BrtBeginFills" }, 604: { n: "BrtEndFills" }, 605: { n: "BrtBeginCellWatches" }, 606: { n: "BrtEndCellWatches" }, 607: { n: "BrtCellWatch" }, 608: { n: "BrtBeginCRErrs" }, 609: { n: "BrtEndCRErrs" }, 610: { n: "BrtCrashRecErr" }, 611: { n: "BrtBeginFonts" }, 612: { n: "BrtEndFonts" }, 613: { n: "BrtBeginBorders" }, 614: { n: "BrtEndBorders" }, 615: { n: "BrtBeginFmts" }, 616: { n: "BrtEndFmts" }, 617: { n: "BrtBeginCellXFs" }, 618: { n: "BrtEndCellXFs" }, 619: { n: "BrtBeginStyles" }, 620: { n: "BrtEndStyles" }, 625: { n: "BrtBigName" }, 626: { n: "BrtBeginCellStyleXFs" }, 627: { n: "BrtEndCellStyleXFs" }, 628: { n: "BrtBeginComments" }, 629: { n: "BrtEndComments" }, 630: { n: "BrtBeginCommentAuthors" }, 631: { n: "BrtEndCommentAuthors" }, 632: { n: "BrtCommentAuthor", f: $o }, 633: { n: "BrtBeginCommentList" }, 634: { n: "BrtEndCommentList" }, 635: { n: "BrtBeginComment", f: jo }, 636: { n: "BrtEndComment" }, 637: { n: "BrtCommentText", f: Ot }, 638: { n: "BrtBeginOleObjects" }, 639: { n: "BrtOleObject" }, 640: { n: "BrtEndOleObjects" }, 641: { n: "BrtBeginSxrules" }, 642: { n: "BrtEndSxRules" }, 643: { n: "BrtBeginActiveXControls" }, 644: { n: "BrtActiveX" }, 645: { n: "BrtEndActiveXControls" }, 646: { n: "BrtBeginPCDSDTCEMembersSortBy" }, 648: { n: "BrtBeginCellIgnoreECs" }, 649: { n: "BrtCellIgnoreEC" }, 650: { n: "BrtEndCellIgnoreECs" }, 651: { n: "BrtCsProp", f: Ev }, 652: { n: "BrtCsPageSetup" }, 653: { n: "BrtBeginUserCsViews" }, 654: { n: "BrtEndUserCsViews" }, 655: { n: "BrtBeginUserCsView" }, 656: { n: "BrtEndUserCsView" }, 657: { n: "BrtBeginPcdSFCIEntries" }, 658: { n: "BrtEndPCDSFCIEntries" }, 659: { n: "BrtPCDSFCIEntry" }, 660: { n: "BrtBeginListParts" }, 661: { n: "BrtListPart" }, 662: { n: "BrtEndListParts" }, 663: { n: "BrtSheetCalcProp" }, 664: { n: "BrtBeginFnGroup" }, 665: { n: "BrtFnGroup" }, 666: { n: "BrtEndFnGroup" }, 667: { n: "BrtSupAddin" }, 668: { n: "BrtSXTDMPOrder" }, 669: { n: "BrtCsProtection" }, 671: { n: "BrtBeginWsSortMap" }, 672: { n: "BrtEndWsSortMap" }, 673: { n: "BrtBeginRRSort" }, 674: { n: "BrtEndRRSort" }, 675: { n: "BrtRRSortItem" }, 676: { n: "BrtFileSharingIso" }, 677: { n: "BrtBookProtectionIso" }, 678: { n: "BrtSheetProtectionIso" }, 679: { n: "BrtCsProtectionIso" }, 680: { n: "BrtRangeProtectionIso" }, 681: { n: "BrtDValList" }, 1024: { n: "BrtRwDescent" }, 1025: { n: "BrtKnownFonts" }, 1026: { n: "BrtBeginSXTupleSet" }, 1027: { n: "BrtEndSXTupleSet" }, 1028: { n: "BrtBeginSXTupleSetHeader" }, 1029: { n: "BrtEndSXTupleSetHeader" }, 1030: { n: "BrtSXTupleSetHeaderItem" }, 1031: { n: "BrtBeginSXTupleSetData" }, 1032: { n: "BrtEndSXTupleSetData" }, 1033: { n: "BrtBeginSXTupleSetRow" }, 1034: { n: "BrtEndSXTupleSetRow" }, 1035: { n: "BrtSXTupleSetRowItem" }, 1036: { n: "BrtNameExt" }, 1037: { n: "BrtPCDH14" }, 1038: { n: "BrtBeginPCDCalcMem14" }, 1039: { n: "BrtEndPCDCalcMem14" }, 1040: { n: "BrtSXTH14" }, 1041: { n: "BrtBeginSparklineGroup" }, 1042: { n: "BrtEndSparklineGroup" }, 1043: { n: "BrtSparkline" }, 1044: { n: "BrtSXDI14" }, 1045: { n: "BrtWsFmtInfoEx14" }, 1046: { n: "BrtBeginConditionalFormatting14" }, 1047: { n: "BrtEndConditionalFormatting14" }, 1048: { n: "BrtBeginCFRule14" }, 1049: { n: "BrtEndCFRule14" }, 1050: { n: "BrtCFVO14" }, 1051: { n: "BrtBeginDatabar14" }, 1052: { n: "BrtBeginIconSet14" }, 1053: { n: "BrtDVal14", f: tv }, 1054: { n: "BrtBeginDVals14" }, 1055: { n: "BrtColor14" }, 1056: { n: "BrtBeginSparklines" }, 1057: { n: "BrtEndSparklines" }, 1058: { n: "BrtBeginSparklineGroups" }, 1059: { n: "BrtEndSparklineGroups" }, 1061: { n: "BrtSXVD14" }, 1062: { n: "BrtBeginSXView14" }, 1063: { n: "BrtEndSXView14" }, 1064: { n: "BrtBeginSXView16" }, 1065: { n: "BrtEndSXView16" }, 1066: { n: "BrtBeginPCD14" }, 1067: { n: "BrtEndPCD14" }, 1068: { n: "BrtBeginExtConn14" }, 1069: { n: "BrtEndExtConn14" }, 1070: { n: "BrtBeginSlicerCacheIDs" }, 1071: { n: "BrtEndSlicerCacheIDs" }, 1072: { n: "BrtBeginSlicerCacheID" }, 1073: { n: "BrtEndSlicerCacheID" }, 1075: { n: "BrtBeginSlicerCache" }, 1076: { n: "BrtEndSlicerCache" }, 1077: { n: "BrtBeginSlicerCacheDef" }, 1078: { n: "BrtEndSlicerCacheDef" }, 1079: { n: "BrtBeginSlicersEx" }, 1080: { n: "BrtEndSlicersEx" }, 1081: { n: "BrtBeginSlicerEx" }, 1082: { n: "BrtEndSlicerEx" }, 1083: { n: "BrtBeginSlicer" }, 1084: { n: "BrtEndSlicer" }, 1085: { n: "BrtSlicerCachePivotTables" }, 1086: { n: "BrtBeginSlicerCacheOlapImpl" }, 1087: { n: "BrtEndSlicerCacheOlapImpl" }, 1088: { n: "BrtBeginSlicerCacheLevelsData" }, 1089: { n: "BrtEndSlicerCacheLevelsData" }, 1090: { n: "BrtBeginSlicerCacheLevelData" }, 1091: { n: "BrtEndSlicerCacheLevelData" }, 1092: { n: "BrtBeginSlicerCacheSiRanges" }, 1093: { n: "BrtEndSlicerCacheSiRanges" }, 1094: { n: "BrtBeginSlicerCacheSiRange" }, 1095: { n: "BrtEndSlicerCacheSiRange" }, 1096: { n: "BrtSlicerCacheOlapItem" }, 1097: { n: "BrtBeginSlicerCacheSelections" }, 1098: { n: "BrtSlicerCacheSelection" }, 1099: { n: "BrtEndSlicerCacheSelections" }, 1100: { n: "BrtBeginSlicerCacheNative" }, 1101: { n: "BrtEndSlicerCacheNative" }, 1102: { n: "BrtSlicerCacheNativeItem" }, 1103: { n: "BrtRangeProtection14" }, 1104: { n: "BrtRangeProtectionIso14" }, 1105: { n: "BrtCellIgnoreEC14" }, 1111: { n: "BrtList14" }, 1112: { n: "BrtCFIcon" }, 1113: { n: "BrtBeginSlicerCachesPivotCacheIDs" }, 1114: { n: "BrtEndSlicerCachesPivotCacheIDs" }, 1115: { n: "BrtBeginSlicers" }, 1116: { n: "BrtEndSlicers" }, 1117: { n: "BrtWbProp14" }, 1118: { n: "BrtBeginSXEdit" }, 1119: { n: "BrtEndSXEdit" }, 1120: { n: "BrtBeginSXEdits" }, 1121: { n: "BrtEndSXEdits" }, 1122: { n: "BrtBeginSXChange" }, 1123: { n: "BrtEndSXChange" }, 1124: { n: "BrtBeginSXChanges" }, 1125: { n: "BrtEndSXChanges" }, 1126: { n: "BrtSXTupleItems" }, 1128: { n: "BrtBeginSlicerStyle" }, 1129: { n: "BrtEndSlicerStyle" }, 1130: { n: "BrtSlicerStyleElement" }, 1131: { n: "BrtBeginStyleSheetExt14" }, 1132: { n: "BrtEndStyleSheetExt14" }, 1133: { n: "BrtBeginSlicerCachesPivotCacheID" }, 1134: { n: "BrtEndSlicerCachesPivotCacheID" }, 1135: { n: "BrtBeginConditionalFormattings" }, 1136: { n: "BrtEndConditionalFormattings" }, 1137: { n: "BrtBeginPCDCalcMemExt" }, 1138: { n: "BrtEndPCDCalcMemExt" }, 1139: { n: "BrtBeginPCDCalcMemsExt" }, 1140: { n: "BrtEndPCDCalcMemsExt" }, 1141: { n: "BrtPCDField14" }, 1142: { n: "BrtBeginSlicerStyles" }, 1143: { n: "BrtEndSlicerStyles" }, 1144: { n: "BrtBeginSlicerStyleElements" }, 1145: { n: "BrtEndSlicerStyleElements" }, 1146: { n: "BrtCFRuleExt" }, 1147: { n: "BrtBeginSXCondFmt14" }, 1148: { n: "BrtEndSXCondFmt14" }, 1149: { n: "BrtBeginSXCondFmts14" }, 1150: { n: "BrtEndSXCondFmts14" }, 1152: { n: "BrtBeginSortCond14" }, 1153: { n: "BrtEndSortCond14" }, 1154: { n: "BrtEndDVals14" }, 1155: { n: "BrtEndIconSet14" }, 1156: { n: "BrtEndDatabar14" }, 1157: { n: "BrtBeginColorScale14" }, 1158: { n: "BrtEndColorScale14" }, 1159: { n: "BrtBeginSxrules14" }, 1160: { n: "BrtEndSxrules14" }, 1161: { n: "BrtBeginPRule14" }, 1162: { n: "BrtEndPRule14" }, 1163: { n: "BrtBeginPRFilters14" }, 1164: { n: "BrtEndPRFilters14" }, 1165: { n: "BrtBeginPRFilter14" }, 1166: { n: "BrtEndPRFilter14" }, 1167: { n: "BrtBeginPRFItem14" }, 1168: { n: "BrtEndPRFItem14" }, 1169: { n: "BrtBeginCellIgnoreECs14" }, 1170: { n: "BrtEndCellIgnoreECs14" }, 1171: { n: "BrtDxf14" }, 1172: { n: "BrtBeginDxF14s" }, 1173: { n: "BrtEndDxf14s" }, 1177: { n: "BrtFilter14" }, 1178: { n: "BrtBeginCustomFilters14" }, 1180: { n: "BrtCustomFilter14" }, 1181: { n: "BrtIconFilter14" }, 1182: { n: "BrtPivotCacheConnectionName" }, 2048: { n: "BrtBeginDecoupledPivotCacheIDs" }, 2049: { n: "BrtEndDecoupledPivotCacheIDs" }, 2050: { n: "BrtDecoupledPivotCacheID" }, 2051: { n: "BrtBeginPivotTableRefs" }, 2052: { n: "BrtEndPivotTableRefs" }, 2053: { n: "BrtPivotTableRef" }, 2054: { n: "BrtSlicerCacheBookPivotTables" }, 2055: { n: "BrtBeginSxvcells" }, 2056: { n: "BrtEndSxvcells" }, 2057: { n: "BrtBeginSxRow" }, 2058: { n: "BrtEndSxRow" }, 2060: { n: "BrtPcdCalcMem15" }, 2067: { n: "BrtQsi15" }, 2068: { n: "BrtBeginWebExtensions" }, 2069: { n: "BrtEndWebExtensions" }, 2070: { n: "BrtWebExtension" }, 2071: { n: "BrtAbsPath15" }, 2072: { n: "BrtBeginPivotTableUISettings" }, 2073: { n: "BrtEndPivotTableUISettings" }, 2075: { n: "BrtTableSlicerCacheIDs" }, 2076: { n: "BrtTableSlicerCacheID" }, 2077: { n: "BrtBeginTableSlicerCache" }, 2078: { n: "BrtEndTableSlicerCache" }, 2079: { n: "BrtSxFilter15" }, 2080: { n: "BrtBeginTimelineCachePivotCacheIDs" }, 2081: { n: "BrtEndTimelineCachePivotCacheIDs" }, 2082: { n: "BrtTimelineCachePivotCacheID" }, 2083: { n: "BrtBeginTimelineCacheIDs" }, 2084: { n: "BrtEndTimelineCacheIDs" }, 2085: { n: "BrtBeginTimelineCacheID" }, 2086: { n: "BrtEndTimelineCacheID" }, 2087: { n: "BrtBeginTimelinesEx" }, 2088: { n: "BrtEndTimelinesEx" }, 2089: { n: "BrtBeginTimelineEx" }, 2090: { n: "BrtEndTimelineEx" }, 2091: { n: "BrtWorkBookPr15" }, 2092: { n: "BrtPCDH15" }, 2093: { n: "BrtBeginTimelineStyle" }, 2094: { n: "BrtEndTimelineStyle" }, 2095: { n: "BrtTimelineStyleElement" }, 2096: { n: "BrtBeginTimelineStylesheetExt15" }, 2097: { n: "BrtEndTimelineStylesheetExt15" }, 2098: { n: "BrtBeginTimelineStyles" }, 2099: { n: "BrtEndTimelineStyles" }, 2100: { n: "BrtBeginTimelineStyleElements" }, 2101: { n: "BrtEndTimelineStyleElements" }, 2102: { n: "BrtDxf15" }, 2103: { n: "BrtBeginDxfs15" }, 2104: { n: "brtEndDxfs15" }, 2105: { n: "BrtSlicerCacheHideItemsWithNoData" }, 2106: { n: "BrtBeginItemUniqueNames" }, 2107: { n: "BrtEndItemUniqueNames" }, 2108: { n: "BrtItemUniqueName" }, 2109: { n: "BrtBeginExtConn15" }, 2110: { n: "BrtEndExtConn15" }, 2111: { n: "BrtBeginOledbPr15" }, 2112: { n: "BrtEndOledbPr15" }, 2113: { n: "BrtBeginDataFeedPr15" }, 2114: { n: "BrtEndDataFeedPr15" }, 2115: { n: "BrtTextPr15" }, 2116: { n: "BrtRangePr15" }, 2117: { n: "BrtDbCommand15" }, 2118: { n: "BrtBeginDbTables15" }, 2119: { n: "BrtEndDbTables15" }, 2120: { n: "BrtDbTable15" }, 2121: { n: "BrtBeginDataModel" }, 2122: { n: "BrtEndDataModel" }, 2123: { n: "BrtBeginModelTables" }, 2124: { n: "BrtEndModelTables" }, 2125: { n: "BrtModelTable" }, 2126: {
        n: "BrtBeginModelRelationships"
      }, 2127: { n: "BrtEndModelRelationships" }, 2128: { n: "BrtModelRelationship" }, 2129: { n: "BrtBeginECTxtWiz15" }, 2130: { n: "BrtEndECTxtWiz15" }, 2131: { n: "BrtBeginECTWFldInfoLst15" }, 2132: { n: "BrtEndECTWFldInfoLst15" }, 2133: { n: "BrtBeginECTWFldInfo15" }, 2134: { n: "BrtFieldListActiveItem" }, 2135: { n: "BrtPivotCacheIdVersion" }, 2136: { n: "BrtSXDI15" }, 2137: { n: "BrtBeginModelTimeGroupings" }, 2138: { n: "BrtEndModelTimeGroupings" }, 2139: { n: "BrtBeginModelTimeGrouping" }, 2140: { n: "BrtEndModelTimeGrouping" }, 2141: { n: "BrtModelTimeGroupingCalcCol" }, 3072: { n: "BrtUid" }, 3073: { n: "BrtRevisionPtr" }, 5095: { n: "BrtBeginCalcFeatures" }, 5096: { n: "BrtEndCalcFeatures" }, 5097: { n: "BrtCalcFeature" }, 65535: { n: "" } };
      var qp = Y(Qp, "n");
      qp["BrtFRTArchID$"] = 16;
      var em = { 6: { n: "Formula", f: Yu }, 10: { n: "EOF", f: Vn }, 12: { n: "CalcCount", f: $n }, 13: { n: "CalcMode", f: $n }, 14: { n: "CalcPrecision", f: jn }, 15: { n: "CalcRefMode", f: jn }, 16: { n: "CalcDelta", f: Qt }, 17: { n: "CalcIter", f: jn }, 18: { n: "Protect", f: jn }, 19: { n: "Password", f: $n }, 20: { n: "Header", f: Ss }, 21: { n: "Footer", f: Ss }, 23: { n: "ExternSheet", f: ys }, 24: { n: "Lbl", f: Ts }, 25: { n: "WinProtect", f: jn }, 26: { n: "VerticalPageBreaks" }, 27: { n: "HorizontalPageBreaks" }, 28: { n: "Note", f: Ds }, 29: { n: "Selection" }, 34: { n: "Date1904", f: jn }, 35: { n: "ExternName", f: Cs }, 38: { n: "LeftMargin", f: Qt }, 39: { n: "RightMargin", f: Qt }, 40: { n: "TopMargin", f: Qt }, 41: { n: "BottomMargin", f: Qt }, 42: { n: "PrintRowCol", f: jn }, 43: { n: "PrintGrid", f: jn }, 47: { n: "FilePass", f: fl }, 49: { n: "Font", f: qi }, 51: { n: "PrintSize", f: $n }, 60: { n: "Continue" }, 61: { n: "Window1", f: $i }, 64: { n: "Backup", f: jn }, 65: { n: "Pane", f: Qi }, 66: { n: "CodePage", f: $n }, 77: { n: "Pls" }, 80: { n: "DCon" }, 81: { n: "DConRef" }, 82: { n: "DConName" }, 85: { n: "DefColWidth", f: $n }, 89: { n: "XCT" }, 90: { n: "CRN" }, 91: { n: "FileSharing" }, 92: { n: "WriteAccess", f: Ni }, 93: { n: "Obj", f: Ls }, 94: { n: "Uncalced" }, 95: { n: "CalcSaveRecalc", f: jn }, 96: { n: "Template" }, 97: { n: "Intl" }, 99: { n: "ObjProtect", f: jn }, 125: { n: "ColInfo", f: Zs }, 128: { n: "Guts", f: ms }, 129: { n: "WsBool", f: Mi }, 130: { n: "GridSet", f: $n }, 131: { n: "HCenter", f: jn }, 132: { n: "VCenter", f: jn }, 133: { n: "BoundSheet8", f: Ui }, 134: { n: "WriteProtect" }, 140: { n: "Country", f: Gs }, 141: { n: "HideObj", f: $n }, 144: { n: "Sort" }, 146: { n: "Palette", f: $s }, 151: { n: "Sync" }, 152: { n: "LPr" }, 153: { n: "DxGCol" }, 154: { n: "FnGroupName" }, 155: { n: "FilterMode" }, 156: { n: "BuiltInFnGroupCount", f: $n }, 157: { n: "AutoFilterInfo" }, 158: { n: "AutoFilter" }, 160: { n: "Scl", f: tf }, 161: { n: "Setup", f: Qs }, 174: { n: "ScenMan" }, 175: { n: "SCENARIO" }, 176: { n: "SxView" }, 177: { n: "Sxvd" }, 178: { n: "SXVI" }, 180: { n: "SxIvd" }, 181: { n: "SXLI" }, 182: { n: "SXPI" }, 184: { n: "DocRoute" }, 185: { n: "RecipName" }, 189: { n: "MulRk", f: us }, 190: { n: "MulBlank", f: hs }, 193: { n: "Mms", f: Vn }, 197: { n: "SXDI" }, 198: { n: "SXDB" }, 199: { n: "SXFDB" }, 200: { n: "SXDBB" }, 201: { n: "SXNum" }, 202: { n: "SxBool", f: jn }, 203: { n: "SxErr" }, 204: { n: "SXInt" }, 205: { n: "SXString" }, 206: { n: "SXDtr" }, 207: { n: "SxNil" }, 208: { n: "SXTbl" }, 209: { n: "SXTBRGIITM" }, 210: { n: "SxTbpg" }, 211: { n: "ObProj" }, 213: { n: "SXStreamID" }, 215: { n: "DBCell" }, 216: { n: "SXRng" }, 217: { n: "SxIsxoper" }, 218: { n: "BookBool", f: $n }, 220: { n: "DbOrParamQry" }, 221: { n: "ScenarioProtect", f: jn }, 222: { n: "OleObjectSize" }, 224: { n: "XF", f: vs }, 225: { n: "InterfaceHdr", f: Pi }, 226: { n: "InterfaceEnd", f: Vn }, 227: { n: "SXVS" }, 229: { n: "MergeCells", f: Ps }, 233: { n: "BkHim" }, 235: { n: "MsoDrawingGroup" }, 236: { n: "MsoDrawing" }, 237: { n: "MsoDrawingSelection" }, 239: { n: "PhoneticInfo" }, 240: { n: "SxRule" }, 241: { n: "SXEx" }, 242: { n: "SxFilt" }, 244: { n: "SxDXF" }, 245: { n: "SxItm" }, 246: { n: "SxName" }, 247: { n: "SxSelect" }, 248: { n: "SXPair" }, 249: { n: "SxFmla" }, 251: { n: "SxFormat" }, 252: { n: "SST", f: Hi }, 253: { n: "LabelSst", f: rs }, 255: { n: "ExtSST", f: Vi }, 256: { n: "SXVDEx" }, 259: { n: "SXFormula" }, 290: { n: "SXDBEx" }, 311: { n: "RRDInsDel" }, 312: { n: "RRDHead" }, 315: { n: "RRDChgCell" }, 317: { n: "RRTabId", f: Zn }, 318: { n: "RRDRenSheet" }, 319: { n: "RRSort" }, 320: { n: "RRDMove" }, 330: { n: "RRFormat" }, 331: { n: "RRAutoFmt" }, 333: { n: "RRInsertSh" }, 334: { n: "RRDMoveBegin" }, 335: { n: "RRDMoveEnd" }, 336: { n: "RRDInsDelBegin" }, 337: { n: "RRDInsDelEnd" }, 338: { n: "RRDConflict" }, 339: { n: "RRDDefName" }, 340: { n: "RRDRstEtxp" }, 351: { n: "LRng" }, 352: { n: "UsesELFs", f: jn }, 353: { n: "DSF", f: Vn }, 401: { n: "CUsr" }, 402: { n: "CbUsr" }, 403: { n: "UsrInfo" }, 404: { n: "UsrExcl" }, 405: { n: "FileLock" }, 406: { n: "RRDInfo" }, 407: { n: "BCUsrs" }, 408: { n: "UsrChk" }, 425: { n: "UserBView" }, 426: { n: "UserSViewBegin" }, 427: { n: "UserSViewEnd" }, 428: { n: "RRDUserView" }, 429: { n: "Qsi" }, 430: { n: "SupBook", f: _s }, 431: { n: "Prot4Rev", f: jn }, 432: { n: "CondFmt" }, 433: { n: "CF" }, 434: { n: "DVal" }, 437: { n: "DConBin" }, 438: { n: "TxO", f: zs }, 439: { n: "RefreshAll", f: jn }, 440: { n: "HLink", f: Hs }, 441: { n: "Lel" }, 442: { n: "CodeName", f: ai }, 443: { n: "SXFDBType" }, 444: { n: "Prot4RevPass", f: $n }, 445: { n: "ObNoMacros" }, 446: { n: "Dv" }, 448: { n: "Excel9File", f: Vn }, 449: { n: "RecalcId", f: ji, r: 2 }, 450: { n: "EntExU2", f: Vn }, 512: { n: "Dimensions", f: ls }, 513: { n: "Blank", f: rf }, 515: { n: "Number", f: ks }, 516: { n: "Label", f: as }, 517: { n: "BoolErr", f: gs }, 519: { n: "String", f: af }, 520: { n: "Row", f: Xi }, 523: { n: "Index" }, 545: { n: "Array", f: Rs }, 549: { n: "DefaultRowHeight", f: Ki }, 566: { n: "Table" }, 574: { n: "Window2", f: Zi }, 638: { n: "RK", f: cs }, 659: { n: "Style" }, 1048: { n: "BigName" }, 1054: { n: "Format", f: is }, 1084: { n: "ContinueBigName" }, 1212: { n: "ShrFmla", f: Is }, 2048: { n: "HLinkTooltip", f: Vs }, 2049: { n: "WebPub" }, 2050: { n: "QsiSXTag" }, 2051: { n: "DBQueryExt" }, 2052: { n: "ExtString" }, 2053: { n: "TxtQry" }, 2054: { n: "Qsir" }, 2055: { n: "Qsif" }, 2056: { n: "RRDTQSIF" }, 2057: { n: "BOF", f: Oi }, 2058: { n: "OleDbConn" }, 2059: { n: "WOpt" }, 2060: { n: "SXViewEx" }, 2061: { n: "SXTH" }, 2062: { n: "SXPIEx" }, 2063: { n: "SXVDTEx" }, 2064: { n: "SXViewEx9" }, 2066: { n: "ContinueFrt" }, 2067: { n: "RealTimeData" }, 2128: { n: "ChartFrtInfo" }, 2129: { n: "FrtWrapper" }, 2130: { n: "StartBlock" }, 2131: { n: "EndBlock" }, 2132: { n: "StartObject" }, 2133: { n: "EndObject" }, 2134: { n: "CatLab" }, 2135: { n: "YMult" }, 2136: { n: "SXViewLink" }, 2137: { n: "PivotChartBits" }, 2138: { n: "FrtFontList" }, 2146: { n: "SheetExt" }, 2147: { n: "BookExt", r: 12 }, 2148: { n: "SXAddl" }, 2149: { n: "CrErr" }, 2150: { n: "HFPicture" }, 2151: { n: "FeatHdr", f: Vn }, 2152: { n: "Feat" }, 2154: { n: "DataLabExt" }, 2155: { n: "DataLabExtContents" }, 2156: { n: "CellWatch" }, 2161: { n: "FeatHdr11" }, 2162: { n: "Feature11" }, 2164: { n: "DropDownObjIds" }, 2165: { n: "ContinueFrt11" }, 2166: { n: "DConn" }, 2167: { n: "List12" }, 2168: { n: "Feature12" }, 2169: { n: "CondFmt12" }, 2170: { n: "CF12" }, 2171: { n: "CFEx" }, 2172: { n: "XFCRC", f: Ys, r: 12 }, 2173: { n: "XFExt", f: Fo, r: 12 }, 2174: { n: "AutoFilter12" }, 2175: { n: "ContinueFrt12" }, 2180: { n: "MDTInfo" }, 2181: { n: "MDXStr" }, 2182: { n: "MDXTuple" }, 2183: { n: "MDXSet" }, 2184: { n: "MDXProp" }, 2185: { n: "MDXKPI" }, 2186: { n: "MDB" }, 2187: { n: "PLV" }, 2188: { n: "Compat12", f: jn, r: 12 }, 2189: { n: "DXF" }, 2190: { n: "TableStyles", r: 12 }, 2191: { n: "TableStyle" }, 2192: { n: "TableStyleElement" }, 2194: { n: "StyleExt" }, 2195: { n: "NamePublish" }, 2196: { n: "NameCmt", f: As, r: 12 }, 2197: { n: "SortData" }, 2198: { n: "Theme", f: To, r: 12 }, 2199: { n: "GUIDTypeLib" }, 2200: { n: "FnGrp12" }, 2201: { n: "NameFnGrp12" }, 2202: { n: "MTRSettings", f: Fs, r: 12 }, 2203: { n: "CompressPictures", f: Vn }, 2204: { n: "HeaderFooter" }, 2205: { n: "CrtLayout12" }, 2206: { n: "CrtMlFrt" }, 2207: { n: "CrtMlFrtContinue" }, 2211: { n: "ForceFullCalculation", f: Gi }, 2212: { n: "ShapePropsStream" }, 2213: { n: "TextPropsStream" }, 2214: { n: "RichTextStream" }, 2215: { n: "CrtLayout12A" }, 4097: { n: "Units" }, 4098: { n: "Chart" }, 4099: { n: "Series" }, 4102: { n: "DataFormat" }, 4103: { n: "LineFormat" }, 4105: { n: "MarkerFormat" }, 4106: { n: "AreaFormat" }, 4107: { n: "PieFormat" }, 4108: { n: "AttachedLabel" }, 4109: { n: "SeriesText" }, 4116: { n: "ChartFormat" }, 4117: { n: "Legend" }, 4118: { n: "SeriesList" }, 4119: { n: "Bar" }, 4120: { n: "Line" }, 4121: { n: "Pie" }, 4122: { n: "Area" }, 4123: { n: "Scatter" }, 4124: { n: "CrtLine" }, 4125: { n: "Axis" }, 4126: { n: "Tick" }, 4127: { n: "ValueRange" }, 4128: { n: "CatSerRange" }, 4129: { n: "AxisLine" }, 4130: { n: "CrtLink" }, 4132: { n: "DefaultText" }, 4133: { n: "Text" }, 4134: { n: "FontX", f: $n }, 4135: { n: "ObjectLink" }, 4146: { n: "Frame" }, 4147: { n: "Begin" }, 4148: { n: "End" }, 4149: { n: "PlotArea" }, 4154: { n: "Chart3d" }, 4156: { n: "PicF" }, 4157: { n: "DropBar" }, 4158: { n: "Radar" }, 4159: { n: "Surf" }, 4160: { n: "RadarArea" }, 4161: { n: "AxisParent" }, 4163: { n: "LegendException" }, 4164: { n: "ShtProps", f: qs }, 4165: { n: "SerToCrt" }, 4166: { n: "AxesUsed" }, 4168: { n: "SBaseRef" }, 4170: { n: "SerParent" }, 4171: { n: "SerAuxTrend" }, 4174: { n: "IFmtRecord" }, 4175: { n: "Pos" }, 4176: { n: "AlRuns" }, 4177: { n: "BRAI" }, 4187: { n: "SerAuxErrBar" }, 4188: { n: "ClrtClient", f: Ks }, 4189: { n: "SerFmt" }, 4191: { n: "Chart3DBarShape" }, 4192: { n: "Fbi" }, 4193: { n: "BopPop" }, 4194: { n: "AxcExt" }, 4195: { n: "Dat" }, 4196: { n: "PlotGrowth" }, 4197: { n: "SIIndex" }, 4198: { n: "GelFrame" }, 4199: { n: "BopPopCustom" }, 4200: { n: "Fbi2" }, 0: { n: "Dimensions", f: ls }, 1: { n: "BIFF2BLANK" }, 2: { n: "BIFF2INT", f: of }, 3: { n: "BIFF2NUM", f: ff }, 4: { n: "BIFF2STR", f: sf }, 5: { n: "BoolErr", f: gs }, 7: { n: "String", f: uf }, 8: { n: "BIFF2ROW" }, 9: { n: "BOF", f: Oi }, 11: { n: "Index" }, 22: { n: "ExternCount", f: $n }, 30: { n: "BIFF2FORMAT", f: fs }, 31: { n: "BIFF2FMTCNT" }, 32: { n: "BIFF2COLINFO" }, 33: { n: "Array", f: Rs }, 36: { n: "COLWIDTH" }, 37: { n: "DefaultRowHeight", f: Ki }, 50: { n: "BIFF2FONTXTRA", f: hf }, 62: { n: "BIFF2WINDOW2" }, 52: { n: "DDEObjName" }, 67: { n: "BIFF2XF" }, 68: { n: "BIFF2XFINDEX", f: $n }, 69: { n: "BIFF2FONTCLR" }, 86: { n: "BIFF4FMTCNT" }, 126: { n: "RK" }, 127: { n: "ImData", f: nf }, 135: { n: "Addin" }, 136: { n: "Edg" }, 137: { n: "Pub" }, 145: { n: "Sub" }, 148: { n: "LHRecord" }, 149: { n: "LHNGraph" }, 150: { n: "Sound" }, 169: { n: "CoordList" }, 171: { n: "GCW" }, 188: { n: "ShrFmla" }, 191: { n: "ToolbarHdr" }, 192: { n: "ToolbarEnd" }, 194: { n: "AddMenu" }, 195: { n: "DelMenu" }, 214: { n: "RString", f: df }, 223: { n: "UDDesc" }, 234: { n: "TabIdConf" }, 354: { n: "XL5Modify" }, 421: { n: "FileSharing2" }, 518: { n: "Formula", f: Yu }, 521: { n: "BOF", f: Oi }, 536: { n: "Lbl", f: Ts }, 547: { n: "ExternName", f: Cs }, 561: { n: "Font" }, 579: { n: "BIFF3XF" }, 1030: { n: "Formula", f: Yu }, 1033: { n: "BOF", f: Oi }, 1091: { n: "BIFF4XF" }, 2157: { n: "FeatInfo" }, 2163: { n: "FeatInfo11" }, 2177: { n: "SXAddl12" }, 2240: { n: "AutoWebPub" }, 2241: { n: "ListObj" }, 2242: { n: "ListField" }, 2243: { n: "ListDV" }, 2244: { n: "ListCondFmt" }, 2245: { n: "ListCF" }, 2246: { n: "FMQry" }, 2247: { n: "FMSQry" }, 2248: { n: "PLV" }, 2249: { n: "LnExt" }, 2250: { n: "MkrExt" }, 2251: { n: "CrtCoopt" }, 2262: { n: "FRTArchId$", r: 12 }, 29282: {} };
      var rm = Y(em, "n");
      function tm(e2, r2, t2, a2) {
        var n2 = typeof r2 == "number" ? r2 : +r2 || +rm[r2];
        if (isNaN(n2))
          return;
        var i2 = a2 || (t2 || []).length || 0;
        var s2 = e2.next(4);
        s2._W(2, n2);
        s2._W(2, i2);
        if (i2 > 0 && Nr(t2))
          e2.push(t2);
      }
      function am(e2, r2, t2, a2) {
        var n2 = a2 || (t2 || []).length || 0;
        if (n2 <= 8224)
          return tm(e2, r2, t2, n2);
        var i2 = +r2 || +rm[r2];
        if (isNaN(i2))
          return;
        var s2 = t2.parts || [], f2 = 0;
        var l2 = 0, o2 = 0;
        while (o2 + (s2[f2] || 8224) <= 8224) {
          o2 += s2[f2] || 8224;
          f2++;
        }
        var c2 = e2.next(4);
        c2._W(2, i2);
        c2._W(2, o2);
        e2.push(t2.slice(l2, l2 + o2));
        l2 += o2;
        while (l2 < n2) {
          c2 = e2.next(4);
          c2._W(2, 60);
          o2 = 0;
          while (o2 + (s2[f2] || 8224) <= 8224) {
            o2 += s2[f2] || 8224;
            f2++;
          }
          c2._W(2, o2);
          e2.push(t2.slice(l2, l2 + o2));
          l2 += o2;
        }
      }
      function nm(e2, r2, t2) {
        if (!e2)
          e2 = Jr(7);
        e2._W(2, r2);
        e2._W(2, t2);
        e2._W(2, 0);
        e2._W(1, 0);
        return e2;
      }
      function im(e2, r2, t2, a2) {
        var n2 = Jr(9);
        nm(n2, e2, r2);
        Qn(t2, a2 || "b", n2);
        return n2;
      }
      function sm(e2, r2, t2) {
        var a2 = Jr(8 + 2 * t2.length);
        nm(a2, e2, r2);
        a2._W(1, t2.length);
        a2._W(t2.length, t2, "sbcs");
        return a2.l < a2.length ? a2.slice(0, a2.l) : a2;
      }
      function fm(e2, r2, t2, a2) {
        if (r2.v != null)
          switch (r2.t) {
            case "d":
              ;
            case "n":
              var n2 = r2.t == "d" ? ee(le(r2.v)) : r2.v;
              if (n2 == (n2 | 0) && n2 >= 0 && n2 < 65536)
                tm(e2, 2, cf(t2, a2, n2));
              else
                tm(e2, 3, lf(t2, a2, n2));
              return;
            case "b":
              ;
            case "e":
              tm(e2, 5, im(t2, a2, r2.v, r2.t));
              return;
            case "s":
              ;
            case "str":
              tm(e2, 4, sm(t2, a2, (r2.v || "").slice(0, 255)));
              return;
          }
        tm(e2, 1, nm(null, t2, a2));
      }
      function lm(e2, r2, t2, a2) {
        var n2 = Array.isArray(r2);
        var i2 = kt(r2["!ref"] || "A1"), s2, f2 = "", l2 = [];
        if (i2.e.c > 255 || i2.e.r > 16383) {
          if (a2.WTF)
            throw new Error("Range " + (r2["!ref"] || "A1") + " exceeds format limit A1:IV16384");
          i2.e.c = Math.min(i2.e.c, 255);
          i2.e.r = Math.min(i2.e.c, 16383);
          s2 = wt(i2);
        }
        for (var o2 = i2.s.r; o2 <= i2.e.r; ++o2) {
          f2 = lt(o2);
          for (var c2 = i2.s.c; c2 <= i2.e.c; ++c2) {
            if (o2 === i2.s.r)
              l2[c2] = ht(c2);
            s2 = l2[c2] + f2;
            var u2 = n2 ? (r2[o2] || [])[c2] : r2[s2];
            if (!u2)
              continue;
            fm(e2, u2, o2, c2, a2);
          }
        }
      }
      function om(e2, r2) {
        var t2 = r2 || {};
        if (m != null && t2.dense == null)
          t2.dense = m;
        var a2 = qr();
        var n2 = 0;
        for (var i2 = 0; i2 < e2.SheetNames.length; ++i2)
          if (e2.SheetNames[i2] == t2.sheet)
            n2 = i2;
        if (n2 == 0 && !!t2.sheet && e2.SheetNames[0] != t2.sheet)
          throw new Error("Sheet not found: " + t2.sheet);
        tm(a2, t2.biff == 4 ? 1033 : t2.biff == 3 ? 521 : 9, Di(e2, 16, t2));
        lm(a2, e2.Sheets[e2.SheetNames[n2]], n2, t2, e2);
        tm(a2, 10);
        return a2.end();
      }
      function cm(e2, r2, t2) {
        tm(e2, "Font", es({ sz: 12, color: { theme: 1 }, name: "Arial", family: 2, scheme: "minor" }, t2));
      }
      function um(e2, r2, t2) {
        if (!r2)
          return;
        [[5, 8], [23, 26], [41, 44], [50, 392]].forEach(function(a2) {
          for (var n2 = a2[0]; n2 <= a2[1]; ++n2)
            if (r2[n2] != null)
              tm(e2, "Format", ss(n2, r2[n2], t2));
        });
      }
      function hm(e2, r2) {
        var t2 = Jr(19);
        t2._W(4, 2151);
        t2._W(4, 0);
        t2._W(4, 0);
        t2._W(2, 3);
        t2._W(1, 1);
        t2._W(4, 0);
        tm(e2, "FeatHdr", t2);
        t2 = Jr(39);
        t2._W(4, 2152);
        t2._W(4, 0);
        t2._W(4, 0);
        t2._W(2, 3);
        t2._W(1, 0);
        t2._W(4, 0);
        t2._W(2, 1);
        t2._W(4, 4);
        t2._W(2, 0);
        Ci(kt(r2["!ref"] || "A1"), t2);
        t2._W(4, 4);
        tm(e2, "Feat", t2);
      }
      function dm(e2, r2) {
        for (var t2 = 0; t2 < 16; ++t2)
          tm(e2, "XF", ps({ numFmtId: 0, style: true }, 0, r2));
        r2.cellXfs.forEach(function(t3) {
          tm(e2, "XF", ps(t3, 0, r2));
        });
      }
      function vm(e2, r2) {
        for (var t2 = 0; t2 < r2["!links"].length; ++t2) {
          var a2 = r2["!links"][t2];
          tm(e2, "HLink", Ws(a2));
          if (a2[1].Tooltip)
            tm(e2, "HLinkTooltip", Xs(a2));
        }
        delete r2["!links"];
      }
      function pm(e2, r2, t2) {
        if (!r2)
          return;
        var a2 = 0;
        r2.forEach(function(r3, t3) {
          if (++a2 <= 256 && r3) {
            tm(e2, "ColInfo", Js(vh(t3, r3), t3));
          }
        });
      }
      function mm(e2, r2, t2, a2, n2) {
        var i2 = 16 + mh(n2.cellXfs, r2, n2);
        if (r2.v == null && !r2.bf) {
          tm(e2, "Blank", bi(t2, a2, i2));
          return;
        }
        if (r2.bf)
          tm(e2, "Formula", Zu(r2, t2, a2, n2, i2));
        else
          switch (r2.t) {
            case "d":
              ;
            case "n":
              var s2 = r2.t == "d" ? ee(le(r2.v)) : r2.v;
              tm(e2, "Number", Es(t2, a2, s2, i2, n2));
              break;
            case "b":
              ;
            case "e":
              tm(e2, 517, ws(t2, a2, r2.v, i2, n2, r2.t));
              break;
            case "s":
              ;
            case "str":
              if (n2.bookSST) {
                var f2 = dh(n2.Strings, r2.v, n2.revStrings);
                tm(e2, "LabelSst", ts(t2, a2, f2, i2, n2));
              } else
                tm(e2, "Label", ns(t2, a2, (r2.v || "").slice(0, 255), i2, n2));
              break;
            default:
              tm(e2, "Blank", bi(t2, a2, i2));
          }
      }
      function bm(e2, r2, t2) {
        var a2 = qr();
        var n2 = t2.SheetNames[e2], i2 = t2.Sheets[n2] || {};
        var s2 = (t2 || {}).Workbook || {};
        var f2 = (s2.Sheets || [])[e2] || {};
        var l2 = Array.isArray(i2);
        var o2 = r2.biff == 8;
        var c2, u2 = "", h2 = [];
        var d2 = kt(i2["!ref"] || "A1");
        var v2 = o2 ? 65536 : 16384;
        if (d2.e.c > 255 || d2.e.r >= v2) {
          if (r2.WTF)
            throw new Error("Range " + (i2["!ref"] || "A1") + " exceeds format limit A1:IV16384");
          d2.e.c = Math.min(d2.e.c, 255);
          d2.e.r = Math.min(d2.e.c, v2 - 1);
        }
        tm(a2, 2057, Di(t2, 16, r2));
        tm(a2, "CalcMode", Yn(1));
        tm(a2, "CalcCount", Yn(100));
        tm(a2, "CalcRefMode", Kn(true));
        tm(a2, "CalcIter", Kn(false));
        tm(a2, "CalcDelta", qt(1e-3));
        tm(a2, "CalcSaveRecalc", Kn(true));
        tm(a2, "PrintRowCol", Kn(false));
        tm(a2, "PrintGrid", Kn(false));
        tm(a2, "GridSet", Yn(1));
        tm(a2, "Guts", bs([0, 0]));
        tm(a2, "HCenter", Kn(false));
        tm(a2, "VCenter", Kn(false));
        if (o2)
          pm(a2, i2["!cols"], i2);
        tm(a2, 512, os(d2, r2));
        if (o2)
          i2["!links"] = [];
        for (var p2 = d2.s.r; p2 <= d2.e.r; ++p2) {
          u2 = lt(p2);
          for (var m2 = d2.s.c; m2 <= d2.e.c; ++m2) {
            if (p2 === d2.s.r)
              h2[m2] = ht(m2);
            c2 = h2[m2] + u2;
            var b2 = l2 ? (i2[p2] || [])[m2] : i2[c2];
            if (!b2)
              continue;
            mm(a2, b2, p2, m2, r2);
            if (o2 && b2.l)
              i2["!links"].push([c2, b2.l]);
          }
        }
        var g2 = f2.CodeName || f2.name || n2;
        if (o2)
          tm(a2, "Window2", Ji((s2.Views || [])[0]));
        if (o2 && (i2["!merges"] || []).length)
          tm(a2, "MergeCells", Ns(i2["!merges"]));
        if (o2)
          vm(a2, i2);
        tm(a2, "CodeName", ii(g2, r2));
        if (o2)
          hm(a2, i2);
        tm(a2, "EOF");
        return a2.end();
      }
      function gm(e2, r2, t2) {
        var a2 = qr();
        var n2 = (e2 || {}).Workbook || {};
        var i2 = n2.Sheets || [];
        var s2 = n2.WBProps || {};
        var f2 = t2.biff == 8, l2 = t2.biff == 5;
        tm(a2, 2057, Di(e2, 5, t2));
        if (t2.bookType == "xla")
          tm(a2, "Addin");
        tm(a2, "InterfaceHdr", f2 ? Yn(1200) : null);
        tm(a2, "Mms", Xn(2));
        if (l2)
          tm(a2, "ToolbarHdr");
        if (l2)
          tm(a2, "ToolbarEnd");
        tm(a2, "InterfaceEnd");
        tm(a2, "WriteAccess", Li("SheetJS", t2));
        tm(a2, "CodePage", Yn(f2 ? 1200 : 1252));
        if (f2)
          tm(a2, "DSF", Yn(0));
        if (f2)
          tm(a2, "Excel9File");
        tm(a2, "RRTabId", ef(e2.SheetNames.length));
        if (f2 && e2.vbaraw)
          tm(a2, "ObProj");
        if (f2 && e2.vbaraw) {
          var o2 = s2.CodeName || "ThisWorkbook";
          tm(a2, "CodeName", ii(o2, t2));
        }
        tm(a2, "BuiltInFnGroupCount", Yn(17));
        tm(a2, "WinProtect", Kn(false));
        tm(a2, "Protect", Kn(false));
        tm(a2, "Password", Yn(0));
        if (f2)
          tm(a2, "Prot4Rev", Kn(false));
        if (f2)
          tm(a2, "Prot4RevPass", Yn(0));
        tm(a2, "Window1", Yi(t2));
        tm(a2, "Backup", Kn(false));
        tm(a2, "HideObj", Yn(0));
        tm(a2, "Date1904", Kn(Rv(e2) == "true"));
        tm(a2, "CalcPrecision", Kn(true));
        if (f2)
          tm(a2, "RefreshAll", Kn(false));
        tm(a2, "BookBool", Yn(0));
        cm(a2, e2, t2);
        um(a2, e2.SSF, t2);
        dm(a2, t2);
        if (f2)
          tm(a2, "UsesELFs", Kn(false));
        var c2 = a2.end();
        var u2 = qr();
        if (f2)
          tm(u2, "Country", js());
        if (f2 && t2.Strings)
          am(u2, "SST", Wi(t2.Strings, t2));
        tm(u2, "EOF");
        var h2 = u2.end();
        var d2 = qr();
        var v2 = 0, p2 = 0;
        for (p2 = 0; p2 < e2.SheetNames.length; ++p2)
          v2 += (f2 ? 12 : 11) + (f2 ? 2 : 1) * e2.SheetNames[p2].length;
        var m2 = c2.length + v2 + h2.length;
        for (p2 = 0; p2 < e2.SheetNames.length; ++p2) {
          var b2 = i2[p2] || {};
          tm(d2, "BoundSheet8", zi({ pos: m2, hs: b2.Hidden || 0, dt: 0, name: e2.SheetNames[p2] }, t2));
          m2 += r2[p2].length;
        }
        var g2 = d2.end();
        if (v2 != g2.length)
          throw new Error("BS8 " + v2 + " != " + g2.length);
        var w2 = [];
        if (c2.length)
          w2.push(c2);
        if (g2.length)
          w2.push(g2);
        if (h2.length)
          w2.push(h2);
        return mr([w2]);
      }
      function wm(e2, r2) {
        var t2 = r2 || {};
        var a2 = [];
        if (e2 && !e2.SSF) {
          e2.SSF = O.get_table();
        }
        if (e2 && e2.SSF) {
          D(O);
          O.load_table(e2.SSF);
          t2.revssf = J(e2.SSF);
          t2.revssf[e2.SSF[65535]] = 0;
          t2.ssf = e2.SSF;
        }
        t2.Strings = [];
        t2.Strings.Count = 0;
        t2.Strings.Unique = 0;
        Km(t2);
        t2.cellXfs = [];
        mh(t2.cellXfs, {}, { revssf: { General: 0 } });
        if (!e2.Props)
          e2.Props = {};
        for (var n2 = 0; n2 < e2.SheetNames.length; ++n2)
          a2[a2.length] = bm(n2, t2, e2);
        a2.unshift(gm(e2, a2, t2));
        return mr([a2]);
      }
      function km(e2, r2) {
        var t2 = r2 || {};
        switch (t2.biff || 2) {
          case 8:
            ;
          case 5:
            return wm(e2, r2);
          case 4:
            ;
          case 3:
            ;
          case 2:
            return om(e2, r2);
        }
        throw new Error("invalid type " + t2.bookType + " for BIFF");
      }
      var Em = function() {
        function e2(e3, r3) {
          var t3 = r3 || {};
          if (m != null && t3.dense == null)
            t3.dense = m;
          var a3 = t3.dense ? [] : {};
          e3 = e3.replace(/<!--.*?-->/g, "");
          var n3 = e3.match(/<table/i);
          if (!n3)
            throw new Error("Invalid HTML: could not find <table>");
          var i3 = e3.match(/<\/table/i);
          var s3 = n3.index, f2 = i3 && i3.index || e3.length;
          var l2 = pe(e3.slice(s3, f2), /(:?<tr[^>]*>)/i, "<tr>");
          var o2 = -1, c2 = 0, u2 = 0, h2 = 0;
          var d2 = { s: { r: 1e7, c: 1e7 }, e: { r: 0, c: 0 } };
          var v2 = [];
          for (s3 = 0; s3 < l2.length; ++s3) {
            var p2 = l2[s3].trim();
            var b2 = p2.slice(0, 3).toLowerCase();
            if (b2 == "<tr") {
              ++o2;
              if (t3.sheetRows && t3.sheetRows <= o2) {
                --o2;
                break;
              }
              c2 = 0;
              continue;
            }
            if (b2 != "<td" && b2 != "<th")
              continue;
            var g2 = p2.split(/<\/t[dh]>/i);
            for (f2 = 0; f2 < g2.length; ++f2) {
              var w2 = g2[f2].trim();
              if (!w2.match(/<t[dh]/i))
                continue;
              var k2 = w2, E2 = 0;
              while (k2.charAt(0) == "<" && (E2 = k2.indexOf(">")) > -1)
                k2 = k2.slice(E2 + 1);
              for (var S = 0; S < v2.length; ++S) {
                var _2 = v2[S];
                if (_2.s.c == c2 && _2.s.r < o2 && o2 <= _2.e.r) {
                  c2 = _2.e.c + 1;
                  S = -1;
                }
              }
              var C2 = De(w2.slice(0, w2.indexOf(">")));
              h2 = C2.colspan ? +C2.colspan : 1;
              if ((u2 = +C2.rowspan) > 1 || h2 > 1)
                v2.push({ s: { r: o2, c: c2 }, e: { r: o2 + (u2 || 1) - 1, c: c2 + h2 - 1 } });
              var B2 = C2.t || C2["data-t"] || "";
              if (!k2.length) {
                c2 += h2;
                continue;
              }
              k2 = rr(k2);
              if (d2.s.r > o2)
                d2.s.r = o2;
              if (d2.e.r < o2)
                d2.e.r = o2;
              if (d2.s.c > c2)
                d2.s.c = c2;
              if (d2.e.c < c2)
                d2.e.c = c2;
              if (!k2.length)
                continue;
              var T2 = { t: "s", v: k2 };
              if (t3.raw || !k2.trim().length || B2 == "s") {
              } else if (k2 === "TRUE")
                T2 = { t: "b", v: true };
              else if (k2 === "FALSE")
                T2 = { t: "b", v: false };
              else if (!isNaN(he(k2)))
                T2 = { t: "n", v: he(k2) };
              else if (!isNaN(de(k2).getDate())) {
                T2 = { t: "d", v: le(k2) };
                if (!t3.cellDates)
                  T2 = { t: "n", v: ee(T2.v) };
                T2.z = t3.dateNF || O._table[14];
              }
              if (t3.dense) {
                if (!a3[o2])
                  a3[o2] = [];
                a3[o2][c2] = T2;
              } else
                a3[bt({ r: o2, c: c2 })] = T2;
              c2 += h2;
            }
          }
          a3["!ref"] = wt(d2);
          if (v2.length)
            a3["!merges"] = v2;
          return a3;
        }
        function r2(r3, t3) {
          var a3 = r3.match(/<table.*?>[\s\S]*?<\/table>/gi);
          if (!a3 || a3.length == 0)
            throw new Error("Invalid HTML: could not find <table>");
          if (a3.length == 1)
            return _t(e2(a3[0], t3), t3);
          var n3 = Ib.book_new();
          a3.forEach(function(r4, a4) {
            Ib.book_append_sheet(n3, e2(r4, t3), "Sheet" + (a4 + 1));
          });
          return n3;
        }
        function t2(e3, r3, t3, a3) {
          var n3 = e3["!merges"] || [];
          var i3 = [];
          for (var s3 = r3.s.c; s3 <= r3.e.c; ++s3) {
            var f2 = 0, l2 = 0;
            for (var o2 = 0; o2 < n3.length; ++o2) {
              if (n3[o2].s.r > t3 || n3[o2].s.c > s3)
                continue;
              if (n3[o2].e.r < t3 || n3[o2].e.c < s3)
                continue;
              if (n3[o2].s.r < t3 || n3[o2].s.c < s3) {
                f2 = -1;
                break;
              }
              f2 = n3[o2].e.r - n3[o2].s.r + 1;
              l2 = n3[o2].e.c - n3[o2].s.c + 1;
              break;
            }
            if (f2 < 0)
              continue;
            var c2 = bt({ r: t3, c: s3 });
            var u2 = a3.dense ? (e3[t3] || [])[s3] : e3[c2];
            var h2 = u2 && u2.v != null && (u2.h || Xe(u2.w || (St(u2), u2.w) || "")) || "";
            var d2 = {};
            if (f2 > 1)
              d2.rowspan = f2;
            if (l2 > 1)
              d2.colspan = l2;
            if (a3.editable)
              h2 = '<span contenteditable="true">' + h2 + "</span>";
            else if (u2) {
              d2["data-t"] = u2 && u2.t || "z";
              if (u2.v != null)
                d2["data-v"] = u2.v;
              if (u2.z != null)
                d2["data-z"] = u2.z;
              if (u2.l && (u2.l.Target || "#").charAt(0) != "#")
                h2 = '<a href="' + u2.l.Target + '">' + h2 + "</a>";
            }
            d2.id = (a3.id || "sjs") + "-" + c2;
            i3.push(or("td", h2, d2));
          }
          var v2 = "<tr>";
          return v2 + i3.join("") + "</tr>";
        }
        function a2(e3, r3, t3) {
          var a3 = [];
          return a3.join("") + "<table" + (t3 && t3.id ? ' id="' + t3.id + '"' : "") + ">";
        }
        var n2 = '<html><head><meta charset="utf-8"/><title>SheetJS Table Export</title></head><body>';
        var i2 = "</body></html>";
        function s2(e3, r3) {
          var s3 = r3 || {};
          var f2 = s3.header != null ? s3.header : n2;
          var l2 = s3.footer != null ? s3.footer : i2;
          var o2 = [f2];
          var c2 = gt(e3["!ref"]);
          s3.dense = Array.isArray(e3);
          o2.push(a2(e3, c2, s3));
          for (var u2 = c2.s.r; u2 <= c2.e.r; ++u2)
            o2.push(t2(e3, c2, u2, s3));
          o2.push("</table>" + l2);
          return o2.join("");
        }
        return { to_workbook: r2, to_sheet: e2, _row: t2, BEGIN: n2, END: i2, _preamble: a2, from_sheet: s2 };
      }();
      function Sm(e2, r2, t2) {
        var a2 = t2 || {};
        if (m != null)
          a2.dense = m;
        var n2 = 0, i2 = 0;
        if (a2.origin != null) {
          if (typeof a2.origin == "number")
            n2 = a2.origin;
          else {
            var s2 = typeof a2.origin == "string" ? mt(a2.origin) : a2.origin;
            n2 = s2.r;
            i2 = s2.c;
          }
        }
        var f2 = r2.getElementsByTagName("tr");
        var l2 = Math.min(a2.sheetRows || 1e7, f2.length);
        var o2 = { s: { r: 0, c: 0 }, e: { r: n2, c: i2 } };
        if (e2["!ref"]) {
          var c2 = gt(e2["!ref"]);
          o2.s.r = Math.min(o2.s.r, c2.s.r);
          o2.s.c = Math.min(o2.s.c, c2.s.c);
          o2.e.r = Math.max(o2.e.r, c2.e.r);
          o2.e.c = Math.max(o2.e.c, c2.e.c);
          if (n2 == -1)
            o2.e.r = n2 = c2.e.r + 1;
        }
        var u2 = [], h2 = 0;
        var d2 = e2["!rows"] || (e2["!rows"] = []);
        var v2 = 0, p2 = 0, b2 = 0, g2 = 0, w2 = 0, k2 = 0;
        if (!e2["!cols"])
          e2["!cols"] = [];
        for (; v2 < f2.length && p2 < l2; ++v2) {
          var E2 = f2[v2];
          if (Bm(E2)) {
            if (a2.display)
              continue;
            d2[p2] = { hidden: true };
          }
          var S = E2.children;
          for (b2 = g2 = 0; b2 < S.length; ++b2) {
            var _2 = S[b2];
            if (a2.display && Bm(_2))
              continue;
            var C2 = _2.hasAttribute("data-v") ? _2.getAttribute("data-v") : _2.hasAttribute("v") ? _2.getAttribute("v") : rr(_2.innerHTML);
            var B2 = _2.getAttribute("data-z") || _2.getAttribute("z");
            for (h2 = 0; h2 < u2.length; ++h2) {
              var T2 = u2[h2];
              if (T2.s.c == g2 + i2 && T2.s.r < p2 + n2 && p2 + n2 <= T2.e.r) {
                g2 = T2.e.c + 1 - i2;
                h2 = -1;
              }
            }
            k2 = +_2.getAttribute("colspan") || 1;
            if ((w2 = +_2.getAttribute("rowspan") || 1) > 1 || k2 > 1)
              u2.push({ s: { r: p2 + n2, c: g2 + i2 }, e: { r: p2 + n2 + (w2 || 1) - 1, c: g2 + i2 + (k2 || 1) - 1 } });
            var y2 = { t: "s", v: C2 };
            var x2 = _2.getAttribute("data-t") || _2.getAttribute("t") || "";
            if (C2 != null) {
              if (C2.length == 0)
                y2.t = x2 || "z";
              else if (a2.raw || C2.trim().length == 0 || x2 == "s") {
              } else if (C2 === "TRUE")
                y2 = { t: "b", v: true };
              else if (C2 === "FALSE")
                y2 = { t: "b", v: false };
              else if (!isNaN(he(C2)))
                y2 = { t: "n", v: he(C2) };
              else if (!isNaN(de(C2).getDate())) {
                y2 = { t: "d", v: le(C2) };
                if (!a2.cellDates)
                  y2 = { t: "n", v: ee(y2.v) };
                y2.z = a2.dateNF || O._table[14];
              }
            }
            if (y2.z === void 0 && B2 != null)
              y2.z = B2;
            var A2 = "", I2 = _2.getElementsByTagName("A");
            if (I2 && I2.length) {
              for (var R2 = 0; R2 < I2.length; ++R2)
                if (I2[R2].hasAttribute("href")) {
                  A2 = I2[R2].getAttribute("href");
                  if (A2.charAt(0) != "#")
                    break;
                }
            }
            if (A2 && A2.charAt(0) != "#")
              y2.l = { Target: A2 };
            if (a2.dense) {
              if (!e2[p2 + n2])
                e2[p2 + n2] = [];
              e2[p2 + n2][g2 + i2] = y2;
            } else
              e2[bt({ c: g2 + i2, r: p2 + n2 })] = y2;
            if (o2.e.c < g2 + i2)
              o2.e.c = g2 + i2;
            g2 += k2;
          }
          ++p2;
        }
        if (u2.length)
          e2["!merges"] = (e2["!merges"] || []).concat(u2);
        o2.e.r = Math.max(o2.e.r, p2 - 1 + n2);
        e2["!ref"] = wt(o2);
        if (p2 >= l2)
          e2["!fullref"] = wt((o2.e.r = f2.length - v2 + p2 - 1 + n2, o2));
        return e2;
      }
      function _m(e2, r2) {
        var t2 = r2 || {};
        var a2 = t2.dense ? [] : {};
        return Sm(a2, e2, r2);
      }
      function Cm(e2, r2) {
        return _t(_m(e2, r2), r2);
      }
      function Bm(e2) {
        var r2 = "";
        var t2 = Tm(e2);
        if (t2)
          r2 = t2(e2).getPropertyValue("display");
        if (!r2)
          r2 = e2.style.display;
        return r2 === "none";
      }
      function Tm(e2) {
        if (e2.ownerDocument.defaultView && typeof e2.ownerDocument.defaultView.getComputedStyle === "function")
          return e2.ownerDocument.defaultView.getComputedStyle;
        if (typeof getComputedStyle === "function")
          return getComputedStyle;
        return null;
      }
      var ym = function() {
        var e2 = function(e3) {
          var r3 = e3.replace(/[\t\r\n]/g, " ").trim().replace(/ +/g, " ").replace(/<text:s\/>/g, " ").replace(/<text:s text:c="(\d+)"\/>/g, function(e4, r4) {
            return Array(parseInt(r4, 10) + 1).join(" ");
          }).replace(/<text:tab[^>]*\/>/g, "	").replace(/<text:line-break\/>/g, "\n");
          var t2 = Me(r3.replace(/<[^>]*>/g, ""));
          return [t2];
        };
        var r2 = { day: ["d", "dd"], month: ["m", "mm"], year: ["y", "yy"], hours: ["h", "hh"], minutes: ["m", "mm"], seconds: ["s", "ss"], "am-pm": ["A/P", "AM/PM"], "day-of-week": ["ddd", "dddd"], era: ["e", "ee"], quarter: ["\\Qm", 'm\\"th quarter"'] };
        return function t2(a2, n2) {
          var i2 = n2 || {};
          if (m != null && i2.dense == null)
            i2.dense = m;
          var s2 = Bp(a2);
          var f2 = [], l2;
          var o2;
          var c2 = { name: "" }, u2 = "", h2 = 0;
          var d2;
          var v2;
          var p2 = {}, b2 = [];
          var g2 = i2.dense ? [] : {};
          var w2, k2;
          var E2 = { value: "" };
          var S = "", _2 = 0, C2;
          var B2 = [];
          var T2 = -1, y2 = -1, x2 = { s: { r: 1e6, c: 1e7 }, e: { r: 0, c: 0 } };
          var A2 = 0;
          var I2 = {};
          var R2 = [], F2 = {}, O2 = 0, D2 = 0;
          var P2 = [], N2 = 1, L2 = 1;
          var M2 = [];
          var U2 = { Names: [] };
          var z2 = {};
          var H2 = ["", ""];
          var W2 = [], V2 = {};
          var X2 = "", G2 = 0;
          var j2 = false, K2 = false;
          var $2 = 0;
          Tp.lastIndex = 0;
          s2 = s2.replace(/<!--([\s\S]*?)-->/gm, "").replace(/<!DOCTYPE[^\[]*\[[^\]]*\]>/gm, "");
          while (w2 = Tp.exec(s2))
            switch (w2[3] = w2[3].replace(/_.*$/, "")) {
              case "table":
                ;
              case "\u5DE5\u4F5C\u8868":
                if (w2[1] === "/") {
                  if (x2.e.c >= x2.s.c && x2.e.r >= x2.s.r)
                    g2["!ref"] = wt(x2);
                  else
                    g2["!ref"] = "A1:A1";
                  if (i2.sheetRows > 0 && i2.sheetRows <= x2.e.r) {
                    g2["!fullref"] = g2["!ref"];
                    x2.e.r = i2.sheetRows - 1;
                    g2["!ref"] = wt(x2);
                  }
                  if (R2.length)
                    g2["!merges"] = R2;
                  if (P2.length)
                    g2["!rows"] = P2;
                  d2.name = d2["\u540D\u79F0"] || d2.name;
                  if (typeof JSON !== "undefined")
                    JSON.stringify(d2);
                  b2.push(d2.name);
                  p2[d2.name] = g2;
                  K2 = false;
                } else if (w2[0].charAt(w2[0].length - 2) !== "/") {
                  d2 = De(w2[0], false);
                  T2 = y2 = -1;
                  x2.s.r = x2.s.c = 1e7;
                  x2.e.r = x2.e.c = 0;
                  g2 = i2.dense ? [] : {};
                  R2 = [];
                  P2 = [];
                  K2 = true;
                }
                break;
              case "table-row-group":
                if (w2[1] === "/")
                  --A2;
                else
                  ++A2;
                break;
              case "table-row":
                ;
              case "\u884C":
                if (w2[1] === "/") {
                  T2 += N2;
                  N2 = 1;
                  break;
                }
                v2 = De(w2[0], false);
                if (v2["\u884C\u53F7"])
                  T2 = v2["\u884C\u53F7"] - 1;
                else if (T2 == -1)
                  T2 = 0;
                N2 = +v2["number-rows-repeated"] || 1;
                if (N2 < 10) {
                  for ($2 = 0; $2 < N2; ++$2)
                    if (A2 > 0)
                      P2[T2 + $2] = { level: A2 };
                }
                y2 = -1;
                break;
              case "covered-table-cell":
                if (w2[1] !== "/")
                  ++y2;
                if (i2.sheetStubs) {
                  if (i2.dense) {
                    if (!g2[T2])
                      g2[T2] = [];
                    g2[T2][y2] = { t: "z" };
                  } else
                    g2[bt({ r: T2, c: y2 })] = { t: "z" };
                }
                S = "";
                B2 = [];
                break;
              case "table-cell":
                ;
              case "\u6570\u636E":
                if (w2[0].charAt(w2[0].length - 2) === "/") {
                  ++y2;
                  E2 = De(w2[0], false);
                  L2 = parseInt(E2["number-columns-repeated"] || "1", 10);
                  k2 = { t: "z", v: null };
                  if (E2.formula && i2.cellFormula != false)
                    k2.f = sh(Me(E2.formula));
                  if ((E2["\u6570\u636E\u7C7B\u578B"] || E2["value-type"]) == "string") {
                    k2.t = "s";
                    k2.v = Me(E2["string-value"] || "");
                    if (i2.dense) {
                      if (!g2[T2])
                        g2[T2] = [];
                      g2[T2][y2] = k2;
                    } else {
                      g2[bt({ r: T2, c: y2 })] = k2;
                    }
                  }
                  y2 += L2 - 1;
                } else if (w2[1] !== "/") {
                  ++y2;
                  S = "";
                  _2 = 0;
                  B2 = [];
                  L2 = 1;
                  var Y2 = N2 ? T2 + N2 - 1 : T2;
                  if (y2 > x2.e.c)
                    x2.e.c = y2;
                  if (y2 < x2.s.c)
                    x2.s.c = y2;
                  if (T2 < x2.s.r)
                    x2.s.r = T2;
                  if (Y2 > x2.e.r)
                    x2.e.r = Y2;
                  E2 = De(w2[0], false);
                  W2 = [];
                  V2 = {};
                  k2 = { t: E2["\u6570\u636E\u7C7B\u578B"] || E2["value-type"], v: null };
                  if (i2.cellFormula) {
                    if (E2.formula)
                      E2.formula = Me(E2.formula);
                    if (E2["number-matrix-columns-spanned"] && E2["number-matrix-rows-spanned"]) {
                      O2 = parseInt(E2["number-matrix-rows-spanned"], 10) || 0;
                      D2 = parseInt(E2["number-matrix-columns-spanned"], 10) || 0;
                      F2 = { s: { r: T2, c: y2 }, e: { r: T2 + O2 - 1, c: y2 + D2 - 1 } };
                      k2.F = wt(F2);
                      M2.push([F2, k2.F]);
                    }
                    if (E2.formula)
                      k2.f = sh(E2.formula);
                    else
                      for ($2 = 0; $2 < M2.length; ++$2)
                        if (T2 >= M2[$2][0].s.r && T2 <= M2[$2][0].e.r) {
                          if (y2 >= M2[$2][0].s.c && y2 <= M2[$2][0].e.c)
                            k2.F = M2[$2][1];
                        }
                  }
                  if (E2["number-columns-spanned"] || E2["number-rows-spanned"]) {
                    O2 = parseInt(E2["number-rows-spanned"], 10) || 0;
                    D2 = parseInt(E2["number-columns-spanned"], 10) || 0;
                    F2 = { s: { r: T2, c: y2 }, e: { r: T2 + O2 - 1, c: y2 + D2 - 1 } };
                    R2.push(F2);
                  }
                  if (E2["number-columns-repeated"])
                    L2 = parseInt(E2["number-columns-repeated"], 10);
                  switch (k2.t) {
                    case "boolean":
                      k2.t = "b";
                      k2.v = $e(E2["boolean-value"]);
                      break;
                    case "float":
                      k2.t = "n";
                      k2.v = parseFloat(E2.value);
                      break;
                    case "percentage":
                      k2.t = "n";
                      k2.v = parseFloat(E2.value);
                      break;
                    case "currency":
                      k2.t = "n";
                      k2.v = parseFloat(E2.value);
                      break;
                    case "date":
                      k2.t = "d";
                      k2.v = le(E2["date-value"]);
                      if (!i2.cellDates) {
                        k2.t = "n";
                        k2.v = ee(k2.v);
                      }
                      k2.z = "m/d/yy";
                      break;
                    case "time":
                      k2.t = "n";
                      k2.v = ie(E2["time-value"]) / 86400;
                      if (i2.cellDates) {
                        k2.t = "d";
                        k2.v = ne(k2.v);
                      }
                      k2.z = "HH:MM:SS";
                      break;
                    case "number":
                      k2.t = "n";
                      k2.v = parseFloat(E2["\u6570\u636E\u6570\u503C"]);
                      break;
                    default:
                      if (k2.t === "string" || k2.t === "text" || !k2.t) {
                        k2.t = "s";
                        if (E2["string-value"] != null) {
                          S = Me(E2["string-value"]);
                          B2 = [];
                        }
                      } else
                        throw new Error("Unsupported value type " + k2.t);
                  }
                } else {
                  j2 = false;
                  if (k2.t === "s") {
                    k2.v = S || "";
                    if (B2.length)
                      k2.R = B2;
                    j2 = _2 == 0;
                  }
                  if (z2.Target)
                    k2.l = z2;
                  if (W2.length > 0) {
                    k2.c = W2;
                    W2 = [];
                  }
                  if (S && i2.cellText !== false)
                    k2.w = S;
                  if (j2) {
                    k2.t = "z";
                    delete k2.v;
                  }
                  if (!j2 || i2.sheetStubs) {
                    if (!(i2.sheetRows && i2.sheetRows <= T2)) {
                      for (var Z2 = 0; Z2 < N2; ++Z2) {
                        L2 = parseInt(E2["number-columns-repeated"] || "1", 10);
                        if (i2.dense) {
                          if (!g2[T2 + Z2])
                            g2[T2 + Z2] = [];
                          g2[T2 + Z2][y2] = Z2 == 0 ? k2 : ce(k2);
                          while (--L2 > 0)
                            g2[T2 + Z2][y2 + L2] = ce(k2);
                        } else {
                          g2[bt({ r: T2 + Z2, c: y2 })] = k2;
                          while (--L2 > 0)
                            g2[bt({ r: T2 + Z2, c: y2 + L2 })] = ce(k2);
                        }
                        if (x2.e.c <= y2)
                          x2.e.c = y2;
                      }
                    }
                  }
                  L2 = parseInt(E2["number-columns-repeated"] || "1", 10);
                  y2 += L2 - 1;
                  L2 = 0;
                  k2 = {};
                  S = "";
                  B2 = [];
                }
                z2 = {};
                break;
              case "document":
                ;
              case "document-content":
                ;
              case "\u7535\u5B50\u8868\u683C\u6587\u6863":
                ;
              case "spreadsheet":
                ;
              case "\u4E3B\u4F53":
                ;
              case "scripts":
                ;
              case "styles":
                ;
              case "font-face-decls":
                ;
              case "master-styles":
                if (w2[1] === "/") {
                  if ((l2 = f2.pop())[0] !== w2[3])
                    throw "Bad state: " + l2;
                } else if (w2[0].charAt(w2[0].length - 2) !== "/")
                  f2.push([w2[3], true]);
                break;
              case "annotation":
                if (w2[1] === "/") {
                  if ((l2 = f2.pop())[0] !== w2[3])
                    throw "Bad state: " + l2;
                  V2.t = S;
                  if (B2.length)
                    V2.R = B2;
                  V2.a = X2;
                  W2.push(V2);
                } else if (w2[0].charAt(w2[0].length - 2) !== "/") {
                  f2.push([w2[3], false]);
                }
                X2 = "";
                G2 = 0;
                S = "";
                _2 = 0;
                B2 = [];
                break;
              case "creator":
                if (w2[1] === "/") {
                  X2 = s2.slice(G2, w2.index);
                } else
                  G2 = w2.index + w2[0].length;
                break;
              case "meta":
                ;
              case "\u5143\u6570\u636E":
                ;
              case "settings":
                ;
              case "config-item-set":
                ;
              case "config-item-map-indexed":
                ;
              case "config-item-map-entry":
                ;
              case "config-item-map-named":
                ;
              case "shapes":
                ;
              case "frame":
                ;
              case "text-box":
                ;
              case "image":
                ;
              case "data-pilot-tables":
                ;
              case "list-style":
                ;
              case "form":
                ;
              case "dde-links":
                ;
              case "event-listeners":
                ;
              case "chart":
                if (w2[1] === "/") {
                  if ((l2 = f2.pop())[0] !== w2[3])
                    throw "Bad state: " + l2;
                } else if (w2[0].charAt(w2[0].length - 2) !== "/")
                  f2.push([w2[3], false]);
                S = "";
                _2 = 0;
                B2 = [];
                break;
              case "scientific-number":
                break;
              case "currency-symbol":
                break;
              case "currency-style":
                break;
              case "number-style":
                ;
              case "percentage-style":
                ;
              case "date-style":
                ;
              case "time-style":
                if (w2[1] === "/") {
                  I2[c2.name] = u2;
                  if ((l2 = f2.pop())[0] !== w2[3])
                    throw "Bad state: " + l2;
                } else if (w2[0].charAt(w2[0].length - 2) !== "/") {
                  u2 = "";
                  c2 = De(w2[0], false);
                  f2.push([w2[3], true]);
                }
                break;
              case "script":
                break;
              case "libraries":
                break;
              case "automatic-styles":
                break;
              case "default-style":
                ;
              case "page-layout":
                break;
              case "style":
                break;
              case "map":
                break;
              case "font-face":
                break;
              case "paragraph-properties":
                break;
              case "table-properties":
                break;
              case "table-column-properties":
                break;
              case "table-row-properties":
                break;
              case "table-cell-properties":
                break;
              case "number":
                switch (f2[f2.length - 1][0]) {
                  case "time-style":
                    ;
                  case "date-style":
                    o2 = De(w2[0], false);
                    u2 += r2[w2[3]][o2.style === "long" ? 1 : 0];
                    break;
                }
                break;
              case "fraction":
                break;
              case "day":
                ;
              case "month":
                ;
              case "year":
                ;
              case "era":
                ;
              case "day-of-week":
                ;
              case "week-of-year":
                ;
              case "quarter":
                ;
              case "hours":
                ;
              case "minutes":
                ;
              case "seconds":
                ;
              case "am-pm":
                switch (f2[f2.length - 1][0]) {
                  case "time-style":
                    ;
                  case "date-style":
                    o2 = De(w2[0], false);
                    u2 += r2[w2[3]][o2.style === "long" ? 1 : 0];
                    break;
                }
                break;
              case "boolean-style":
                break;
              case "boolean":
                break;
              case "text-style":
                break;
              case "text":
                if (w2[0].slice(-2) === "/>")
                  break;
                else if (w2[1] === "/")
                  switch (f2[f2.length - 1][0]) {
                    case "number-style":
                      ;
                    case "date-style":
                      ;
                    case "time-style":
                      u2 += s2.slice(h2, w2.index);
                      break;
                  }
                else
                  h2 = w2.index + w2[0].length;
                break;
              case "named-range":
                o2 = De(w2[0], false);
                H2 = lh(o2["cell-range-address"]);
                var J2 = { Name: o2.name, Ref: H2[0] + "!" + H2[1] };
                if (K2)
                  J2.Sheet = b2.length;
                U2.Names.push(J2);
                break;
              case "text-content":
                break;
              case "text-properties":
                break;
              case "embedded-text":
                break;
              case "body":
                ;
              case "\u7535\u5B50\u8868\u683C":
                break;
              case "forms":
                break;
              case "table-column":
                break;
              case "table-header-rows":
                break;
              case "table-rows":
                break;
              case "table-column-group":
                break;
              case "table-header-columns":
                break;
              case "table-columns":
                break;
              case "null-date":
                break;
              case "graphic-properties":
                break;
              case "calculation-settings":
                break;
              case "named-expressions":
                break;
              case "label-range":
                break;
              case "label-ranges":
                break;
              case "named-expression":
                break;
              case "sort":
                break;
              case "sort-by":
                break;
              case "sort-groups":
                break;
              case "tab":
                break;
              case "line-break":
                break;
              case "span":
                break;
              case "p":
                ;
              case "\u6587\u672C\u4E32":
                if (["master-styles"].indexOf(f2[f2.length - 1][0]) > -1)
                  break;
                if (w2[1] === "/" && (!E2 || !E2["string-value"])) {
                  var Q2 = e2(s2.slice(_2, w2.index), C2);
                  S = (S.length > 0 ? S + "\n" : "") + Q2[0];
                } else {
                  C2 = De(w2[0], false);
                  _2 = w2.index + w2[0].length;
                }
                break;
              case "s":
                break;
              case "database-range":
                if (w2[1] === "/")
                  break;
                try {
                  H2 = lh(De(w2[0])["target-range-address"]);
                  p2[H2[0]]["!autofilter"] = { ref: H2[1] };
                } catch (q2) {
                }
                break;
              case "date":
                break;
              case "object":
                break;
              case "title":
                ;
              case "\u6807\u9898":
                break;
              case "desc":
                break;
              case "binary-data":
                break;
              case "table-source":
                break;
              case "scenario":
                break;
              case "iteration":
                break;
              case "content-validations":
                break;
              case "content-validation":
                break;
              case "help-message":
                break;
              case "error-message":
                break;
              case "database-ranges":
                break;
              case "filter":
                break;
              case "filter-and":
                break;
              case "filter-or":
                break;
              case "filter-condition":
                break;
              case "list-level-style-bullet":
                break;
              case "list-level-style-number":
                break;
              case "list-level-properties":
                break;
              case "sender-firstname":
                ;
              case "sender-lastname":
                ;
              case "sender-initials":
                ;
              case "sender-title":
                ;
              case "sender-position":
                ;
              case "sender-email":
                ;
              case "sender-phone-private":
                ;
              case "sender-fax":
                ;
              case "sender-company":
                ;
              case "sender-phone-work":
                ;
              case "sender-street":
                ;
              case "sender-city":
                ;
              case "sender-postal-code":
                ;
              case "sender-country":
                ;
              case "sender-state-or-province":
                ;
              case "author-name":
                ;
              case "author-initials":
                ;
              case "chapter":
                ;
              case "file-name":
                ;
              case "template-name":
                ;
              case "sheet-name":
                break;
              case "event-listener":
                break;
              case "initial-creator":
                ;
              case "creation-date":
                ;
              case "print-date":
                ;
              case "generator":
                ;
              case "document-statistic":
                ;
              case "user-defined":
                ;
              case "editing-duration":
                ;
              case "editing-cycles":
                break;
              case "config-item":
                break;
              case "page-number":
                break;
              case "page-count":
                break;
              case "time":
                break;
              case "cell-range-source":
                break;
              case "detective":
                break;
              case "operation":
                break;
              case "highlighted-range":
                break;
              case "data-pilot-table":
                ;
              case "source-cell-range":
                ;
              case "source-service":
                ;
              case "data-pilot-field":
                ;
              case "data-pilot-level":
                ;
              case "data-pilot-subtotals":
                ;
              case "data-pilot-subtotal":
                ;
              case "data-pilot-members":
                ;
              case "data-pilot-member":
                ;
              case "data-pilot-display-info":
                ;
              case "data-pilot-sort-info":
                ;
              case "data-pilot-layout-info":
                ;
              case "data-pilot-field-reference":
                ;
              case "data-pilot-groups":
                ;
              case "data-pilot-group":
                ;
              case "data-pilot-group-member":
                break;
              case "rect":
                break;
              case "dde-connection-decls":
                ;
              case "dde-connection-decl":
                ;
              case "dde-link":
                ;
              case "dde-source":
                break;
              case "properties":
                break;
              case "property":
                break;
              case "a":
                if (w2[1] !== "/") {
                  z2 = De(w2[0], false);
                  if (!z2.href)
                    break;
                  z2.Target = Me(z2.href);
                  delete z2.href;
                  if (z2.Target.charAt(0) == "#" && z2.Target.indexOf(".") > -1) {
                    H2 = lh(z2.Target.slice(1));
                    z2.Target = "#" + H2[0] + "!" + H2[1];
                  } else if (z2.Target.match(/^\.\.[\\\/]/))
                    z2.Target = z2.Target.slice(3);
                }
                break;
              case "table-protection":
                break;
              case "data-pilot-grand-total":
                break;
              case "office-document-common-attrs":
                break;
              default:
                switch (w2[2]) {
                  case "dc:":
                    ;
                  case "calcext:":
                    ;
                  case "loext:":
                    ;
                  case "ooo:":
                    ;
                  case "chartooo:":
                    ;
                  case "draw:":
                    ;
                  case "style:":
                    ;
                  case "chart:":
                    ;
                  case "form:":
                    ;
                  case "uof:":
                    ;
                  case "\u8868:":
                    ;
                  case "\u5B57:":
                    break;
                  default:
                    if (i2.WTF)
                      throw new Error(w2);
                }
                ;
            }
          var re2 = { Sheets: p2, SheetNames: b2, Workbook: U2 };
          if (i2.bookSheets)
            delete re2.Sheets;
          return re2;
        };
      }();
      function xm(e2, r2) {
        r2 = r2 || {};
        if (we(e2, "META-INF/manifest.xml"))
          Ka(Ee(e2, "META-INF/manifest.xml"), r2);
        var t2 = Se(e2, "content.xml");
        if (!t2)
          throw new Error("Missing content.xml in ODS / UOF file");
        var a2 = ym(Ye(t2), r2);
        if (we(e2, "meta.xml"))
          a2.Props = rn(Ee(e2, "meta.xml"));
        return a2;
      }
      function Am(e2, r2) {
        return ym(e2, r2);
      }
      var Im = function() {
        var e2 = '<office:master-styles><style:master-page style:name="mp1" style:page-layout-name="mp1"><style:header/><style:header-left style:display="false"/><style:footer/><style:footer-left style:display="false"/></style:master-page></office:master-styles>';
        var r2 = "<office:document-styles " + lr({ "xmlns:office": "urn:oasis:names:tc:opendocument:xmlns:office:1.0", "xmlns:table": "urn:oasis:names:tc:opendocument:xmlns:table:1.0", "xmlns:style": "urn:oasis:names:tc:opendocument:xmlns:style:1.0", "xmlns:text": "urn:oasis:names:tc:opendocument:xmlns:text:1.0", "xmlns:draw": "urn:oasis:names:tc:opendocument:xmlns:drawing:1.0", "xmlns:fo": "urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0", "xmlns:xlink": "http://www.w3.org/1999/xlink", "xmlns:dc": "http://purl.org/dc/elements/1.1/", "xmlns:number": "urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0", "xmlns:svg": "urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0", "xmlns:of": "urn:oasis:names:tc:opendocument:xmlns:of:1.2", "office:version": "1.2" }) + ">" + e2 + "</office:document-styles>";
        return function t2() {
          return Ae + r2;
        };
      }();
      var Rm = function() {
        var e2 = function(e3) {
          return He(e3).replace(/  +/g, function(e4) {
            return '<text:s text:c="' + e4.length + '"/>';
          }).replace(/\t/g, "<text:tab/>").replace(/\n/g, "</text:p><text:p>").replace(/^ /, "<text:s/>").replace(/ $/, "<text:s/>");
        };
        var r2 = "          <table:table-cell />\n";
        var t2 = "          <table:covered-table-cell/>\n";
        var a2 = function(a3, n3, i2) {
          var s2 = [];
          s2.push('      <table:table table:name="' + He(n3.SheetNames[i2]) + '" table:style-name="ta1">\n');
          var f2 = 0, l2 = 0, o2 = gt(a3["!ref"] || "A1");
          var c2 = a3["!merges"] || [], u2 = 0;
          var h2 = Array.isArray(a3);
          if (a3["!cols"]) {
            for (l2 = 0; l2 <= o2.e.c; ++l2)
              s2.push("        <table:table-column" + (a3["!cols"][l2] ? ' table:style-name="co' + a3["!cols"][l2].ods + '"' : "") + "></table:table-column>\n");
          }
          var d2 = "", v2 = a3["!rows"] || [];
          for (f2 = 0; f2 < o2.s.r; ++f2) {
            d2 = v2[f2] ? ' table:style-name="ro' + v2[f2].ods + '"' : "";
            s2.push("        <table:table-row" + d2 + "></table:table-row>\n");
          }
          for (; f2 <= o2.e.r; ++f2) {
            d2 = v2[f2] ? ' table:style-name="ro' + v2[f2].ods + '"' : "";
            s2.push("        <table:table-row" + d2 + ">\n");
            for (l2 = 0; l2 < o2.s.c; ++l2)
              s2.push(r2);
            for (; l2 <= o2.e.c; ++l2) {
              var p2 = false, m2 = {}, b2 = "";
              for (u2 = 0; u2 != c2.length; ++u2) {
                if (c2[u2].s.c > l2)
                  continue;
                if (c2[u2].s.r > f2)
                  continue;
                if (c2[u2].e.c < l2)
                  continue;
                if (c2[u2].e.r < f2)
                  continue;
                if (c2[u2].s.c != l2 || c2[u2].s.r != f2)
                  p2 = true;
                m2["table:number-columns-spanned"] = c2[u2].e.c - c2[u2].s.c + 1;
                m2["table:number-rows-spanned"] = c2[u2].e.r - c2[u2].s.r + 1;
                break;
              }
              if (p2) {
                s2.push(t2);
                continue;
              }
              var g2 = bt({ r: f2, c: l2 }), w2 = h2 ? (a3[f2] || [])[l2] : a3[g2];
              if (w2 && w2.f) {
                m2["table:formula"] = He(fh(w2.f));
                if (w2.F) {
                  if (w2.F.slice(0, g2.length) == g2) {
                    var k2 = gt(w2.F);
                    m2["table:number-matrix-columns-spanned"] = k2.e.c - k2.s.c + 1;
                    m2["table:number-matrix-rows-spanned"] = k2.e.r - k2.s.r + 1;
                  }
                }
              }
              if (!w2) {
                s2.push(r2);
                continue;
              }
              switch (w2.t) {
                case "b":
                  b2 = w2.v ? "TRUE" : "FALSE";
                  m2["office:value-type"] = "boolean";
                  m2["office:boolean-value"] = w2.v ? "true" : "false";
                  break;
                case "n":
                  b2 = w2.w || String(w2.v || 0);
                  m2["office:value-type"] = "float";
                  m2["office:value"] = w2.v || 0;
                  break;
                case "s":
                  ;
                case "str":
                  b2 = w2.v == null ? "" : w2.v;
                  m2["office:value-type"] = "string";
                  break;
                case "d":
                  b2 = w2.w || le(w2.v).toISOString();
                  m2["office:value-type"] = "date";
                  m2["office:date-value"] = le(w2.v).toISOString();
                  m2["table:style-name"] = "ce1";
                  break;
                default:
                  s2.push(r2);
                  continue;
              }
              var E2 = e2(b2);
              if (w2.l && w2.l.Target) {
                var S = w2.l.Target;
                S = S.charAt(0) == "#" ? "#" + oh(S.slice(1)) : S;
                if (S.charAt(0) != "#" && !S.match(/^\w+:/))
                  S = "../" + S;
                E2 = or("text:a", E2, { "xlink:href": S.replace(/&/g, "&amp;") });
              }
              s2.push("          " + or("table:table-cell", or("text:p", E2, {}), m2) + "\n");
            }
            s2.push("        </table:table-row>\n");
          }
          s2.push("      </table:table>\n");
          return s2.join("");
        };
        var n2 = function(e3, r3) {
          e3.push(" <office:automatic-styles>\n");
          e3.push('  <number:date-style style:name="N37" number:automatic-order="true">\n');
          e3.push('   <number:month number:style="long"/>\n');
          e3.push("   <number:text>/</number:text>\n");
          e3.push('   <number:day number:style="long"/>\n');
          e3.push("   <number:text>/</number:text>\n");
          e3.push("   <number:year/>\n");
          e3.push("  </number:date-style>\n");
          var t3 = 0;
          r3.SheetNames.map(function(e4) {
            return r3.Sheets[e4];
          }).forEach(function(r4) {
            if (!r4)
              return;
            if (r4["!cols"]) {
              for (var a4 = 0; a4 < r4["!cols"].length; ++a4)
                if (r4["!cols"][a4]) {
                  var n3 = r4["!cols"][a4];
                  if (n3.width == null && n3.wpx == null && n3.wch == null)
                    continue;
                  _l(n3);
                  n3.ods = t3;
                  var i2 = r4["!cols"][a4].wpx + "px";
                  e3.push('  <style:style style:name="co' + t3 + '" style:family="table-column">\n');
                  e3.push('   <style:table-column-properties fo:break-before="auto" style:column-width="' + i2 + '"/>\n');
                  e3.push("  </style:style>\n");
                  ++t3;
                }
            }
          });
          var a3 = 0;
          r3.SheetNames.map(function(e4) {
            return r3.Sheets[e4];
          }).forEach(function(r4) {
            if (!r4)
              return;
            if (r4["!rows"]) {
              for (var t4 = 0; t4 < r4["!rows"].length; ++t4)
                if (r4["!rows"][t4]) {
                  r4["!rows"][t4].ods = a3;
                  var n3 = r4["!rows"][t4].hpx + "px";
                  e3.push('  <style:style style:name="ro' + a3 + '" style:family="table-row">\n');
                  e3.push('   <style:table-row-properties fo:break-before="auto" style:row-height="' + n3 + '"/>\n');
                  e3.push("  </style:style>\n");
                  ++a3;
                }
            }
          });
          e3.push('  <style:style style:name="ta1" style:family="table" style:master-page-name="mp1">\n');
          e3.push('   <style:table-properties table:display="true" style:writing-mode="lr-tb"/>\n');
          e3.push("  </style:style>\n");
          e3.push('  <style:style style:name="ce1" style:family="table-cell" style:parent-style-name="Default" style:data-style-name="N37"/>\n');
          e3.push(" </office:automatic-styles>\n");
        };
        return function i2(e3, r3) {
          var t3 = [Ae];
          var i3 = lr({ "xmlns:office": "urn:oasis:names:tc:opendocument:xmlns:office:1.0", "xmlns:table": "urn:oasis:names:tc:opendocument:xmlns:table:1.0", "xmlns:style": "urn:oasis:names:tc:opendocument:xmlns:style:1.0", "xmlns:text": "urn:oasis:names:tc:opendocument:xmlns:text:1.0", "xmlns:draw": "urn:oasis:names:tc:opendocument:xmlns:drawing:1.0", "xmlns:fo": "urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0", "xmlns:xlink": "http://www.w3.org/1999/xlink", "xmlns:dc": "http://purl.org/dc/elements/1.1/", "xmlns:meta": "urn:oasis:names:tc:opendocument:xmlns:meta:1.0", "xmlns:number": "urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0", "xmlns:presentation": "urn:oasis:names:tc:opendocument:xmlns:presentation:1.0", "xmlns:svg": "urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0", "xmlns:chart": "urn:oasis:names:tc:opendocument:xmlns:chart:1.0", "xmlns:dr3d": "urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0", "xmlns:math": "http://www.w3.org/1998/Math/MathML", "xmlns:form": "urn:oasis:names:tc:opendocument:xmlns:form:1.0", "xmlns:script": "urn:oasis:names:tc:opendocument:xmlns:script:1.0", "xmlns:ooo": "http://openoffice.org/2004/office", "xmlns:ooow": "http://openoffice.org/2004/writer", "xmlns:oooc": "http://openoffice.org/2004/calc", "xmlns:dom": "http://www.w3.org/2001/xml-events", "xmlns:xforms": "http://www.w3.org/2002/xforms", "xmlns:xsd": "http://www.w3.org/2001/XMLSchema", "xmlns:xsi": "http://www.w3.org/2001/XMLSchema-instance", "xmlns:sheet": "urn:oasis:names:tc:opendocument:sh33tjs:1.0", "xmlns:rpt": "http://openoffice.org/2005/report", "xmlns:of": "urn:oasis:names:tc:opendocument:xmlns:of:1.2", "xmlns:xhtml": "http://www.w3.org/1999/xhtml", "xmlns:grddl": "http://www.w3.org/2003/g/data-view#", "xmlns:tableooo": "http://openoffice.org/2009/table", "xmlns:drawooo": "http://openoffice.org/2010/draw", "xmlns:calcext": "urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0", "xmlns:loext": "urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0", "xmlns:field": "urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0", "xmlns:formx": "urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0", "xmlns:css3t": "http://www.w3.org/TR/css3-text/", "office:version": "1.2" });
          var s2 = lr({ "xmlns:config": "urn:oasis:names:tc:opendocument:xmlns:config:1.0", "office:mimetype": "application/vnd.oasis.opendocument.spreadsheet" });
          if (r3.bookType == "fods") {
            t3.push("<office:document" + i3 + s2 + ">\n");
            t3.push(Qa().replace(/office:document-meta/g, "office:meta"));
          } else
            t3.push("<office:document-content" + i3 + ">\n");
          n2(t3, e3);
          t3.push("  <office:body>\n");
          t3.push("    <office:spreadsheet>\n");
          for (var f2 = 0; f2 != e3.SheetNames.length; ++f2)
            t3.push(a2(e3.Sheets[e3.SheetNames[f2]], e3, f2, r3));
          t3.push("    </office:spreadsheet>\n");
          t3.push("  </office:body>\n");
          if (r3.bookType == "fods")
            t3.push("</office:document>");
          else
            t3.push("</office:document-content>");
          return t3.join("");
        };
      }();
      function Fm(e2, r2) {
        if (r2.bookType == "fods")
          return Rm(e2, r2);
        var t2 = Te();
        var a2 = "";
        var n2 = [];
        var i2 = [];
        a2 = "mimetype";
        Ce(t2, a2, "application/vnd.oasis.opendocument.spreadsheet");
        a2 = "content.xml";
        Ce(t2, a2, Rm(e2, r2));
        n2.push([a2, "text/xml"]);
        i2.push([a2, "ContentFile"]);
        a2 = "styles.xml";
        Ce(t2, a2, Im(e2, r2));
        n2.push([a2, "text/xml"]);
        i2.push([a2, "StylesFile"]);
        a2 = "meta.xml";
        Ce(t2, a2, Ae + Qa());
        n2.push([a2, "text/xml"]);
        i2.push([a2, "MetadataFile"]);
        a2 = "manifest.rdf";
        Ce(t2, a2, Ja(i2));
        n2.push([a2, "application/rdf+xml"]);
        a2 = "META-INF/manifest.xml";
        Ce(t2, a2, $a(n2));
        return t2;
      }
      function Om(e2, r2) {
        if (!r2)
          return 0;
        var t2 = e2.SheetNames.indexOf(r2);
        if (t2 == -1)
          throw new Error("Sheet not found: " + r2);
        return t2;
      }
      function Dm(e2) {
        return function r2(t2, a2) {
          var n2 = Om(t2, a2.sheet);
          return e2.from_sheet(t2.Sheets[t2.SheetNames[n2]], a2, t2);
        };
      }
      var Pm = Dm(Em);
      var Nm = Dm({ from_sheet: Bb });
      var Lm = Dm(typeof pf !== "undefined" ? pf : {});
      var Mm = Dm(typeof mf !== "undefined" ? mf : {});
      var Um = Dm(typeof gf !== "undefined" ? gf : {});
      var zm = Dm(typeof ll !== "undefined" ? ll : {});
      var Hm = Dm({ from_sheet: Tb });
      var Wm = Dm(typeof vf !== "undefined" ? vf : {});
      var Vm = Dm(typeof bf !== "undefined" ? bf : {});
      var Xm = Dm(typeof kf !== "undefined" ? { from_sheet: kf.sheet_to_wk1 } : {});
      function Gm(e2) {
        return function r2(t2) {
          for (var a2 = 0; a2 != e2.length; ++a2) {
            var n2 = e2[a2];
            if (t2[n2[0]] === void 0)
              t2[n2[0]] = n2[1];
            if (n2[2] === "n")
              t2[n2[0]] = Number(t2[n2[0]]);
          }
        };
      }
      var jm = function(e2) {
        Gm([["cellNF", false], ["cellHTML", true], ["cellFormula", true], ["cellStyles", false], ["cellText", true], ["cellDates", false], ["sheetStubs", false], ["sheetRows", 0, "n"], ["bookDeps", false], ["bookSheets", false], ["bookProps", false], ["bookFiles", false], ["bookVBA", false], ["password", ""], ["WTF", false]])(e2);
      };
      var Km = Gm([["cellDates", false], ["bookSST", false], ["bookType", "xlsx"], ["compression", false], ["WTF", false]]);
      function $m(e2) {
        if (Ua.WS.indexOf(e2) > -1)
          return "sheet";
        if (Ua.CS && e2 == Ua.CS)
          return "chart";
        if (Ua.DS && e2 == Ua.DS)
          return "dialog";
        if (Ua.MS && e2 == Ua.MS)
          return "macro";
        return e2 && e2.length ? e2 : "sheet";
      }
      function Ym(e2, r2) {
        if (!e2)
          return 0;
        try {
          e2 = r2.map(function a2(r3) {
            if (!r3.id)
              r3.id = r3.strRelID;
            return [r3.name, e2["!id"][r3.id].Target, $m(e2["!id"][r3.id].Type)];
          });
        } catch (t2) {
          return null;
        }
        return !e2 || e2.length === 0 ? null : e2;
      }
      function Zm(e2, r2, t2, a2, n2, i2, s2, f2, l2, o2, c2, u2) {
        try {
          i2[a2] = Ha(Se(e2, t2, true), r2);
          var h2 = Ee(e2, r2);
          var d2;
          switch (f2) {
            case "sheet":
              d2 = qv(h2, r2, n2, l2, i2[a2], o2, c2, u2);
              break;
            case "chart":
              d2 = ep(h2, r2, n2, l2, i2[a2], o2, c2, u2);
              if (!d2 || !d2["!drawel"])
                break;
              var v2 = xe(d2["!drawel"].Target, r2);
              var p2 = za(v2);
              var m2 = Uo(Se(e2, v2, true), Ha(Se(e2, p2, true), v2));
              var b2 = xe(m2, v2);
              var g2 = za(b2);
              d2 = bv(Se(e2, b2, true), b2, l2, Ha(Se(e2, g2, true), b2), o2, d2);
              break;
            case "macro":
              d2 = rp(h2, r2, n2, l2, i2[a2], o2, c2, u2);
              break;
            case "dialog":
              d2 = tp(h2, r2, n2, l2, i2[a2], o2, c2, u2);
              break;
            default:
              throw new Error("Unrecognized sheet type " + f2);
          }
          s2[a2] = d2;
          var w2 = [];
          if (i2 && i2[a2])
            K(i2[a2]).forEach(function(t3) {
              if (i2[a2][t3].Type == Ua.CMNT) {
                var n3 = xe(i2[a2][t3].Target, r2);
                w2 = sp(Ee(e2, n3, true), n3, l2);
                if (!w2 || !w2.length)
                  return;
                Wo(d2, w2);
              }
            });
        } catch (k2) {
          if (l2.WTF)
            throw k2;
        }
      }
      function Jm(e2) {
        return e2.charAt(0) == "/" ? e2.slice(1) : e2;
      }
      function Qm(e2, r2) {
        D(O);
        r2 = r2 || {};
        jm(r2);
        if (we(e2, "META-INF/manifest.xml"))
          return xm(e2, r2);
        if (we(e2, "objectdata.xml"))
          return xm(e2, r2);
        if (we(e2, "Index/Document.iwa"))
          throw new Error("Unsupported NUMBERS file");
        var t2 = _e(e2);
        var a2 = Pa(Se(e2, "[Content_Types].xml"));
        var n2 = false;
        var i2, s2;
        if (a2.workbooks.length === 0) {
          s2 = "xl/workbook.xml";
          if (Ee(e2, s2, true))
            a2.workbooks.push(s2);
        }
        if (a2.workbooks.length === 0) {
          s2 = "xl/workbook.bin";
          if (!Ee(e2, s2, true))
            throw new Error("Could not find workbook");
          a2.workbooks.push(s2);
          n2 = true;
        }
        if (a2.workbooks[0].slice(-3) == "bin")
          n2 = true;
        var f2 = {};
        var l2 = {};
        if (!r2.bookSheets && !r2.bookProps) {
          ch = [];
          if (a2.sst)
            try {
              ch = ip(Ee(e2, Jm(a2.sst)), a2.sst, r2);
            } catch (o2) {
              if (r2.WTF)
                throw o2;
            }
          if (r2.cellStyles && a2.themes.length)
            f2 = np(Se(e2, a2.themes[0].replace(/^\//, ""), true) || "", a2.themes[0], r2);
          if (a2.style)
            l2 = ap(Ee(e2, Jm(a2.style)), a2.style, f2, r2);
        }
        a2.links.map(function(t3) {
          try {
            var a3 = Ha(Se(e2, za(Jm(t3))), t3);
            return lp(Ee(e2, Jm(t3)), a3, t3, r2);
          } catch (n3) {
          }
        });
        var c2 = Qv(Ee(e2, Jm(a2.workbooks[0])), a2.workbooks[0], r2);
        var u2 = {}, h2 = "";
        if (a2.coreprops.length) {
          h2 = Ee(e2, Jm(a2.coreprops[0]), true);
          if (h2)
            u2 = rn(h2);
          if (a2.extprops.length !== 0) {
            h2 = Ee(e2, Jm(a2.extprops[0]), true);
            if (h2)
              on(h2, u2, r2);
          }
        }
        var d2 = {};
        if (!r2.bookSheets || r2.bookProps) {
          if (a2.custprops.length !== 0) {
            h2 = Se(e2, Jm(a2.custprops[0]), true);
            if (h2)
              d2 = dn(h2, r2);
          }
        }
        var v2 = {};
        if (r2.bookSheets || r2.bookProps) {
          if (c2.Sheets)
            i2 = c2.Sheets.map(function I2(e3) {
              return e3.name;
            });
          else if (u2.Worksheets && u2.SheetNames.length > 0)
            i2 = u2.SheetNames;
          if (r2.bookProps) {
            v2.Props = u2;
            v2.Custprops = d2;
          }
          if (r2.bookSheets && typeof i2 !== "undefined")
            v2.SheetNames = i2;
          if (r2.bookSheets ? v2.SheetNames : r2.bookProps)
            return v2;
        }
        i2 = {};
        var p2 = {};
        if (r2.bookDeps && a2.calcchain)
          p2 = fp(Ee(e2, Jm(a2.calcchain)), a2.calcchain, r2);
        var m2 = 0;
        var b2 = {};
        var g2, w2;
        {
          var k2 = c2.Sheets;
          u2.Worksheets = k2.length;
          u2.SheetNames = [];
          for (var E2 = 0; E2 != k2.length; ++E2) {
            u2.SheetNames[E2] = k2[E2].name;
          }
        }
        var S = n2 ? "bin" : "xml";
        var _2 = a2.workbooks[0].lastIndexOf("/");
        var C2 = (a2.workbooks[0].slice(0, _2 + 1) + "_rels/" + a2.workbooks[0].slice(_2 + 1) + ".rels").replace(/^\//, "");
        if (!we(e2, C2))
          C2 = "xl/_rels/workbook." + S + ".rels";
        var B2 = Ha(Se(e2, C2, true), C2);
        if (B2)
          B2 = Ym(B2, c2.Sheets);
        var T2 = Ee(e2, "xl/worksheets/sheet.xml", true) ? 1 : 0;
        e:
          for (m2 = 0; m2 != u2.Worksheets; ++m2) {
            var y2 = "sheet";
            if (B2 && B2[m2]) {
              g2 = "xl/" + B2[m2][1].replace(/[\/]?xl\//, "");
              if (!we(e2, g2))
                g2 = B2[m2][1];
              if (!we(e2, g2))
                g2 = C2.replace(/_rels\/.*$/, "") + B2[m2][1];
              y2 = B2[m2][2];
            } else {
              g2 = "xl/worksheets/sheet" + (m2 + 1 - T2) + "." + S;
              g2 = g2.replace(/sheet0\./, "sheet.");
            }
            w2 = g2.replace(/^(.*)(\/)([^\/]*)$/, "$1/_rels/$3.rels");
            if (r2 && r2.sheets != null)
              switch (typeof r2.sheets) {
                case "number":
                  if (m2 != r2.sheets)
                    continue e;
                  break;
                case "string":
                  if (u2.SheetNames[m2].toLowerCase() != r2.sheets.toLowerCase())
                    continue e;
                  break;
                default:
                  if (Array.isArray && Array.isArray(r2.sheets)) {
                    var x2 = false;
                    for (var A2 = 0; A2 != r2.sheets.length; ++A2) {
                      if (typeof r2.sheets[A2] == "number" && r2.sheets[A2] == m2)
                        x2 = 1;
                      if (typeof r2.sheets[A2] == "string" && r2.sheets[A2].toLowerCase() == u2.SheetNames[m2].toLowerCase())
                        x2 = 1;
                    }
                    if (!x2)
                      continue e;
                  }
                  ;
              }
            Zm(e2, g2, w2, u2.SheetNames[m2], m2, b2, i2, y2, r2, c2, f2, l2);
          }
        v2 = { Directory: a2, Workbook: c2, Props: u2, Custprops: d2, Deps: p2, Sheets: i2, SheetNames: u2.SheetNames, Strings: ch, Styles: l2, Themes: f2, SSF: O.get_table() };
        if (r2 && r2.bookFiles) {
          if (e2.files) {
            v2.keys = t2;
            v2.files = e2.files;
          } else {
            v2.keys = [];
            v2.files = {};
            e2.FullPaths.forEach(function(r3, t3) {
              r3 = r3.replace(/^Root Entry[\/]/, "");
              v2.keys.push(r3);
              v2.files[r3] = e2.FileIndex[t3];
            });
          }
        }
        if (r2 && r2.bookVBA) {
          if (a2.vba.length > 0)
            v2.vbaraw = Ee(e2, Jm(a2.vba[0]), true);
          else if (a2.defaults && a2.defaults.bin === Qo)
            v2.vbaraw = Ee(e2, "xl/vbaProject.bin", true);
        }
        return v2;
      }
      function qm(e2, r2) {
        var t2 = r2 || {};
        var a2 = "Workbook", n2 = W.find(e2, a2);
        try {
          a2 = "/!DataSpaces/Version";
          n2 = W.find(e2, a2);
          if (!n2 || !n2.content)
            throw new Error("ECMA-376 Encrypted file missing " + a2);
          Hf(n2.content);
          a2 = "/!DataSpaces/DataSpaceMap";
          n2 = W.find(e2, a2);
          if (!n2 || !n2.content)
            throw new Error("ECMA-376 Encrypted file missing " + a2);
          var i2 = Vf(n2.content);
          if (i2.length !== 1 || i2[0].comps.length !== 1 || i2[0].comps[0].t !== 0 || i2[0].name !== "StrongEncryptionDataSpace" || i2[0].comps[0].v !== "EncryptedPackage")
            throw new Error("ECMA-376 Encrypted file bad " + a2);
          a2 = "/!DataSpaces/DataSpaceInfo/StrongEncryptionDataSpace";
          n2 = W.find(e2, a2);
          if (!n2 || !n2.content)
            throw new Error("ECMA-376 Encrypted file missing " + a2);
          var s2 = Xf(n2.content);
          if (s2.length != 1 || s2[0] != "StrongEncryptionTransform")
            throw new Error("ECMA-376 Encrypted file bad " + a2);
          a2 = "/!DataSpaces/TransformInfo/StrongEncryptionTransform/!Primary";
          n2 = W.find(e2, a2);
          if (!n2 || !n2.content)
            throw new Error("ECMA-376 Encrypted file missing " + a2);
          jf(n2.content);
        } catch (f2) {
        }
        a2 = "/EncryptionInfo";
        n2 = W.find(e2, a2);
        if (!n2 || !n2.content)
          throw new Error("ECMA-376 Encrypted file missing " + a2);
        var l2 = Yf(n2.content);
        a2 = "/EncryptedPackage";
        n2 = W.find(e2, a2);
        if (!n2 || !n2.content)
          throw new Error("ECMA-376 Encrypted file missing " + a2);
        if (l2[0] == 4 && typeof decrypt_agile !== "undefined")
          return decrypt_agile(l2[1], n2.content, t2.password || "", t2);
        if (l2[0] == 2 && typeof decrypt_std76 !== "undefined")
          return decrypt_std76(l2[1], n2.content, t2.password || "", t2);
        throw new Error("File is password-protected");
      }
      function eb(e2, r2) {
        zo = 1024;
        if (r2.bookType == "ods")
          return Fm(e2, r2);
        if (e2 && !e2.SSF) {
          e2.SSF = O.get_table();
        }
        if (e2 && e2.SSF) {
          D(O);
          O.load_table(e2.SSF);
          r2.revssf = J(e2.SSF);
          r2.revssf[e2.SSF[65535]] = 0;
          r2.ssf = e2.SSF;
        }
        r2.rels = {};
        r2.wbrels = {};
        r2.Strings = [];
        r2.Strings.Count = 0;
        r2.Strings.Unique = 0;
        if (hh)
          r2.revStrings = new Map();
        else {
          r2.revStrings = {};
          r2.revStrings.foo = [];
          delete r2.revStrings.foo;
        }
        var t2 = r2.bookType == "xlsb" ? "bin" : "xml";
        var a2 = rc.indexOf(r2.bookType) > -1;
        var n2 = Da();
        Km(r2 = r2 || {});
        var i2 = Te();
        var s2 = "", f2 = 0;
        r2.cellXfs = [];
        mh(r2.cellXfs, {}, { revssf: { General: 0 } });
        if (!e2.Props)
          e2.Props = {};
        s2 = "docProps/core.xml";
        Ce(i2, s2, nn(e2.Props, r2));
        n2.coreprops.push(s2);
        Ga(r2.rels, 2, s2, Ua.CORE_PROPS);
        s2 = "docProps/app.xml";
        if (e2.Props && e2.Props.SheetNames) {
        } else if (!e2.Workbook || !e2.Workbook.Sheets)
          e2.Props.SheetNames = e2.SheetNames;
        else {
          var l2 = [];
          for (var o2 = 0; o2 < e2.SheetNames.length; ++o2)
            if ((e2.Workbook.Sheets[o2] || {}).Hidden != 2)
              l2.push(e2.SheetNames[o2]);
          e2.Props.SheetNames = l2;
        }
        e2.Props.Worksheets = e2.Props.SheetNames.length;
        Ce(i2, s2, un(e2.Props, r2));
        n2.extprops.push(s2);
        Ga(r2.rels, 3, s2, Ua.EXT_PROPS);
        if (e2.Custprops !== e2.Props && K(e2.Custprops || {}).length > 0) {
          s2 = "docProps/custom.xml";
          Ce(i2, s2, pn(e2.Custprops, r2));
          n2.custprops.push(s2);
          Ga(r2.rels, 4, s2, Ua.CUST_PROPS);
        }
        for (f2 = 1; f2 <= e2.SheetNames.length; ++f2) {
          var c2 = { "!id": {} };
          var u2 = e2.Sheets[e2.SheetNames[f2 - 1]];
          var h2 = (u2 || {})["!type"] || "sheet";
          switch (h2) {
            case "chart":
              ;
            default:
              s2 = "xl/worksheets/sheet" + f2 + "." + t2;
              Ce(i2, s2, cp(f2 - 1, s2, r2, e2, c2));
              n2.sheets.push(s2);
              Ga(r2.wbrels, -1, "worksheets/sheet" + f2 + "." + t2, Ua.WS[0]);
          }
          if (u2) {
            var d2 = u2["!comments"];
            var v2 = false;
            if (d2 && d2.length > 0) {
              var p2 = "xl/comments" + f2 + "." + t2;
              Ce(i2, p2, vp(d2, p2, r2));
              n2.comments.push(p2);
              Ga(c2, -1, "../comments" + f2 + "." + t2, Ua.CMNT);
              v2 = true;
            }
            if (u2["!legacy"]) {
              if (v2)
                Ce(i2, "xl/drawings/vmlDrawing" + f2 + ".vml", Ho(f2, u2["!comments"]));
            }
            delete u2["!comments"];
            delete u2["!legacy"];
          }
          if (c2["!id"].rId1)
            Ce(i2, za(s2), Va(c2));
        }
        if (r2.Strings != null && r2.Strings.length > 0) {
          s2 = "xl/sharedStrings." + t2;
          Ce(i2, s2, dp(r2.Strings, s2, r2));
          n2.strs.push(s2);
          Ga(r2.wbrels, -1, "sharedStrings." + t2, Ua.SST);
        }
        s2 = "xl/workbook." + t2;
        Ce(i2, s2, op(e2, s2, r2));
        n2.workbooks.push(s2);
        Ga(r2.rels, 1, s2, Ua.WB);
        s2 = "xl/theme/theme1.xml";
        Ce(i2, s2, Bo(e2.Themes, r2));
        n2.themes.push(s2);
        Ga(r2.wbrels, -1, "theme/theme1.xml", Ua.THEME);
        s2 = "xl/styles." + t2;
        Ce(i2, s2, hp(e2, s2, r2));
        n2.styles.push(s2);
        Ga(r2.wbrels, -1, "styles." + t2, Ua.STY);
        if (e2.vbaraw && a2) {
          s2 = "xl/vbaProject.bin";
          Ce(i2, s2, e2.vbaraw);
          n2.vba.push(s2);
          Ga(r2.wbrels, -1, "vbaProject.bin", Ua.VBA);
        }
        Ce(i2, "[Content_Types].xml", Ma(n2, r2));
        Ce(i2, "_rels/.rels", Va(r2.rels));
        Ce(i2, "xl/_rels/workbook." + t2 + ".rels", Va(r2.wbrels));
        delete r2.revssf;
        delete r2.ssf;
        return i2;
      }
      function rb(e2, r2) {
        var t2 = "";
        switch ((r2 || {}).type || "base64") {
          case "buffer":
            return [e2[0], e2[1], e2[2], e2[3], e2[4], e2[5], e2[6], e2[7]];
          case "base64":
            t2 = g.decode(e2.slice(0, 12));
            break;
          case "binary":
            t2 = e2;
            break;
          case "array":
            return [e2[0], e2[1], e2[2], e2[3], e2[4], e2[5], e2[6], e2[7]];
          default:
            throw new Error("Unrecognized type " + (r2 && r2.type || "undefined"));
        }
        return [t2.charCodeAt(0), t2.charCodeAt(1), t2.charCodeAt(2), t2.charCodeAt(3), t2.charCodeAt(4), t2.charCodeAt(5), t2.charCodeAt(6), t2.charCodeAt(7)];
      }
      function tb(e2, r2) {
        if (W.find(e2, "EncryptedPackage"))
          return qm(e2, r2);
        return Zp(e2, r2);
      }
      function ab(e2, r2) {
        var t2, a2 = e2;
        var n2 = r2 || {};
        if (!n2.type)
          n2.type = w && Buffer.isBuffer(e2) ? "buffer" : "base64";
        t2 = ye(a2, n2);
        return Qm(t2, n2);
      }
      function nb(e2, r2) {
        var t2 = 0;
        e:
          while (t2 < e2.length)
            switch (e2.charCodeAt(t2)) {
              case 10:
                ;
              case 13:
                ;
              case 32:
                ++t2;
                break;
              case 60:
                return xp(e2.slice(t2), r2);
              default:
                break e;
            }
        return gf.to_workbook(e2, r2);
      }
      function ib(e2, r2) {
        var t2 = "", a2 = rb(e2, r2);
        switch (r2.type) {
          case "base64":
            t2 = g.decode(e2);
            break;
          case "binary":
            t2 = e2;
            break;
          case "buffer":
            t2 = e2.toString("binary");
            break;
          case "array":
            t2 = oe(e2);
            break;
          default:
            throw new Error("Unrecognized type " + r2.type);
        }
        if (a2[0] == 239 && a2[1] == 187 && a2[2] == 191)
          t2 = Ye(t2);
        return nb(t2, r2);
      }
      function sb(e2, r2) {
        var t2 = e2;
        if (r2.type == "base64")
          t2 = g.decode(t2);
        t2 = cptable.utils.decode(1200, t2.slice(2), "str");
        r2.type = "binary";
        return nb(t2, r2);
      }
      function fb(e2) {
        return !e2.match(/[^\x00-\x7F]/) ? e2 : Ze(e2);
      }
      function lb(e2, r2, t2, a2) {
        if (a2) {
          t2.type = "string";
          return gf.to_workbook(e2, t2);
        }
        return gf.to_workbook(r2, t2);
      }
      function ob(e2, r2) {
        o();
        var t2 = r2 || {};
        if (typeof ArrayBuffer !== "undefined" && e2 instanceof ArrayBuffer)
          return ob(new Uint8Array(e2), (t2 = ce(t2), t2.type = "array", t2));
        var a2 = e2, n2 = [0, 0, 0, 0], i2 = false;
        if (t2.cellStyles) {
          t2.cellNF = true;
          t2.sheetStubs = true;
        }
        uh = {};
        if (t2.dateNF)
          uh.dateNF = t2.dateNF;
        if (!t2.type)
          t2.type = w && Buffer.isBuffer(e2) ? "buffer" : "base64";
        if (t2.type == "file") {
          t2.type = w ? "buffer" : "binary";
          a2 = j(e2);
        }
        if (t2.type == "string") {
          i2 = true;
          t2.type = "binary";
          t2.codepage = 65001;
          a2 = fb(e2);
        }
        if (t2.type == "array" && typeof Uint8Array !== "undefined" && e2 instanceof Uint8Array && typeof ArrayBuffer !== "undefined") {
          var s2 = new ArrayBuffer(3), f2 = new Uint8Array(s2);
          f2.foo = "bar";
          if (!f2.foo) {
            t2 = ce(t2);
            t2.type = "array";
            return ob(A(a2), t2);
          }
        }
        switch ((n2 = rb(a2, t2))[0]) {
          case 208:
            if (n2[1] === 207 && n2[2] === 17 && n2[3] === 224 && n2[4] === 161 && n2[5] === 177 && n2[6] === 26 && n2[7] === 225)
              return tb(W.read(a2, t2), t2);
            break;
          case 9:
            if (n2[1] <= 8)
              return Zp(a2, t2);
            break;
          case 60:
            return xp(a2, t2);
          case 73:
            if (n2[1] === 73 && n2[2] === 42 && n2[3] === 0)
              throw new Error("TIFF Image File is not a spreadsheet");
            if (n2[1] === 68)
              return wf(a2, t2);
            break;
          case 84:
            if (n2[1] === 65 && n2[2] === 66 && n2[3] === 76)
              return mf.to_workbook(a2, t2);
            break;
          case 80:
            return n2[1] === 75 && n2[2] < 9 && n2[3] < 9 ? ab(a2, t2) : lb(e2, a2, t2, i2);
          case 239:
            return n2[3] === 60 ? xp(a2, t2) : lb(e2, a2, t2, i2);
          case 255:
            if (n2[1] === 254) {
              return sb(a2, t2);
            }
            break;
          case 0:
            if (n2[1] === 0 && n2[2] >= 2 && n2[3] === 0)
              return kf.to_workbook(a2, t2);
            break;
          case 3:
            ;
          case 131:
            ;
          case 139:
            ;
          case 140:
            return vf.to_workbook(a2, t2);
          case 123:
            if (n2[1] === 92 && n2[2] === 114 && n2[3] === 116)
              return ll.to_workbook(a2, t2);
            break;
          case 10:
            ;
          case 13:
            ;
          case 32:
            return ib(a2, t2);
          case 137:
            if (n2[1] === 80 && n2[2] === 78 && n2[3] === 71)
              throw new Error("PNG Image File is not a spreadsheet");
            break;
        }
        if (vf.versions.indexOf(n2[0]) > -1 && n2[2] <= 12 && n2[3] <= 31)
          return vf.to_workbook(a2, t2);
        return lb(e2, a2, t2, i2);
      }
      function cb(e2, r2) {
        var t2 = r2 || {};
        t2.type = "file";
        return ob(e2, t2);
      }
      function ub(e2, r2) {
        switch (r2.type) {
          case "base64":
            ;
          case "binary":
            break;
          case "buffer":
            ;
          case "array":
            r2.type = "";
            break;
          case "file":
            return G(r2.file, W.write(e2, { type: w ? "buffer" : "" }));
          case "string":
            throw new Error("'string' output type invalid for '" + r2.bookType + "' files");
          default:
            throw new Error("Unrecognized type " + r2.type);
        }
        return W.write(e2, r2);
      }
      function hb(e2, r2) {
        var t2 = ce(r2 || {});
        var a2 = eb(e2, t2);
        var n2 = {};
        if (t2.compression)
          n2.compression = "DEFLATE";
        if (t2.password)
          n2.type = w ? "nodebuffer" : "string";
        else
          switch (t2.type) {
            case "base64":
              n2.type = "base64";
              break;
            case "binary":
              n2.type = "string";
              break;
            case "string":
              throw new Error("'string' output type invalid for '" + t2.bookType + "' files");
            case "buffer":
              ;
            case "file":
              n2.type = w ? "nodebuffer" : "string";
              break;
            default:
              throw new Error("Unrecognized type " + t2.type);
          }
        var i2 = a2.FullPaths ? W.write(a2, { fileType: "zip", type: { nodebuffer: "buffer", string: "binary" }[n2.type] || n2.type }) : a2.generate(n2);
        if (t2.password && typeof encrypt_agile !== "undefined")
          return ub(encrypt_agile(i2, t2.password), t2);
        if (t2.type === "file")
          return G(t2.file, i2);
        return t2.type == "string" ? Ye(i2) : i2;
      }
      function db(e2, r2) {
        var t2 = r2 || {};
        var a2 = Jp(e2, t2);
        return ub(a2, t2);
      }
      function vb(e2, r2, t2) {
        if (!t2)
          t2 = "";
        var a2 = t2 + e2;
        switch (r2.type) {
          case "base64":
            return g.encode(Ze(a2));
          case "binary":
            return Ze(a2);
          case "string":
            return e2;
          case "file":
            return G(r2.file, a2, "utf8");
          case "buffer":
            {
              if (w)
                return k(a2, "utf8");
              else
                return vb(a2, { type: "binary" }).split("").map(function(e3) {
                  return e3.charCodeAt(0);
                });
            }
            ;
        }
        throw new Error("Unrecognized type " + r2.type);
      }
      function pb(e2, r2) {
        switch (r2.type) {
          case "base64":
            return g.encode(e2);
          case "binary":
            return e2;
          case "string":
            return e2;
          case "file":
            return G(r2.file, e2, "binary");
          case "buffer":
            {
              if (w)
                return k(e2, "binary");
              else
                return e2.split("").map(function(e3) {
                  return e3.charCodeAt(0);
                });
            }
            ;
        }
        throw new Error("Unrecognized type " + r2.type);
      }
      function mb(e2, r2) {
        switch (r2.type) {
          case "string":
            ;
          case "base64":
            ;
          case "binary":
            var t2 = "";
            for (var a2 = 0; a2 < e2.length; ++a2)
              t2 += String.fromCharCode(e2[a2]);
            return r2.type == "base64" ? g.encode(t2) : r2.type == "string" ? Ye(t2) : t2;
          case "file":
            return G(r2.file, e2);
          case "buffer":
            return e2;
          default:
            throw new Error("Unrecognized type " + r2.type);
        }
      }
      function bb(e2, r2) {
        o();
        Pv(e2);
        var t2 = ce(r2 || {});
        if (t2.cellStyles) {
          t2.cellNF = true;
          t2.sheetStubs = true;
        }
        if (t2.type == "array") {
          t2.type = "binary";
          var a2 = bb(e2, t2);
          t2.type = "array";
          return T(a2);
        }
        switch (t2.bookType || "xlsb") {
          case "xml":
            ;
          case "xlml":
            return vb(Hp(e2, t2), t2);
          case "slk":
            ;
          case "sylk":
            return vb(Lm(e2, t2), t2);
          case "htm":
            ;
          case "html":
            return vb(Pm(e2, t2), t2);
          case "txt":
            return pb(Hm(e2, t2), t2);
          case "csv":
            return vb(Nm(e2, t2), t2, "\uFEFF");
          case "dif":
            return vb(Mm(e2, t2), t2);
          case "dbf":
            return mb(Wm(e2, t2), t2);
          case "prn":
            return vb(Um(e2, t2), t2);
          case "rtf":
            return vb(zm(e2, t2), t2);
          case "eth":
            return vb(Vm(e2, t2), t2);
          case "fods":
            return vb(Fm(e2, t2), t2);
          case "wk1":
            return mb(Xm(e2, t2), t2);
          case "wk3":
            return mb(kf.book_to_wk3(e2, t2), t2);
          case "biff2":
            if (!t2.biff)
              t2.biff = 2;
          case "biff3":
            if (!t2.biff)
              t2.biff = 3;
          case "biff4":
            if (!t2.biff)
              t2.biff = 4;
            return mb(km(e2, t2), t2);
          case "biff5":
            if (!t2.biff)
              t2.biff = 5;
          case "biff8":
            ;
          case "xla":
            ;
          case "xls":
            if (!t2.biff)
              t2.biff = 8;
            return db(e2, t2);
          case "xlsx":
            ;
          case "xlsm":
            ;
          case "xlam":
            ;
          case "xlsb":
            ;
          case "ods":
            return hb(e2, t2);
          default:
            throw new Error("Unrecognized bookType |" + t2.bookType + "|");
        }
      }
      function gb(e2) {
        if (e2.bookType)
          return;
        var r2 = { xls: "biff8", htm: "html", slk: "sylk", socialcalc: "eth", Sh33tJS: "WTF" };
        var t2 = e2.file.slice(e2.file.lastIndexOf(".")).toLowerCase();
        if (t2.match(/^\.[a-z]+$/))
          e2.bookType = t2.slice(1);
        e2.bookType = r2[e2.bookType] || e2.bookType;
      }
      function wb(e2, r2, t2) {
        var a2 = t2 || {};
        a2.type = "file";
        a2.file = r2;
        gb(a2);
        return bb(e2, a2);
      }
      function kb(e2, r2, t2, a2) {
        var n2 = t2 || {};
        n2.type = "file";
        n2.file = e2;
        gb(n2);
        n2.type = "buffer";
        var i2 = a2;
        if (!(i2 instanceof Function))
          i2 = t2;
        return V.writeFile(e2, bb(r2, n2), i2);
      }
      function Eb(e2, r2, t2, a2, n2, i2, s2, f2) {
        var l2 = lt(t2);
        var o2 = f2.defval, c2 = f2.raw || !Object.prototype.hasOwnProperty.call(f2, "raw");
        var u2 = true;
        var h2 = n2 === 1 ? [] : {};
        if (n2 !== 1) {
          if (Object.defineProperty)
            try {
              Object.defineProperty(h2, "__rowNum__", { value: t2, enumerable: false });
            } catch (d2) {
              h2.__rowNum__ = t2;
            }
          else
            h2.__rowNum__ = t2;
        }
        if (!s2 || e2[t2])
          for (var v2 = r2.s.c; v2 <= r2.e.c; ++v2) {
            var p2 = s2 ? e2[t2][v2] : e2[a2[v2] + l2];
            if (p2 === void 0 || p2.t === void 0) {
              if (o2 === void 0)
                continue;
              if (i2[v2] != null) {
                h2[i2[v2]] = o2;
              }
              continue;
            }
            var m2 = p2.v;
            switch (p2.t) {
              case "z":
                if (m2 == null)
                  break;
                continue;
              case "e":
                m2 = m2 == 0 ? null : void 0;
                break;
              case "s":
                ;
              case "d":
                ;
              case "b":
                ;
              case "n":
                break;
              default:
                throw new Error("unrecognized type " + p2.t);
            }
            if (i2[v2] != null) {
              if (m2 == null) {
                if (p2.t == "e" && m2 === null)
                  h2[i2[v2]] = null;
                else if (o2 !== void 0)
                  h2[i2[v2]] = o2;
                else if (c2 && m2 === null)
                  h2[i2[v2]] = null;
                else
                  continue;
              } else {
                h2[i2[v2]] = c2 || f2.rawNumbers && p2.t == "n" ? m2 : St(p2, m2, f2);
              }
              if (m2 != null)
                u2 = false;
            }
          }
        return { row: h2, isempty: u2 };
      }
      function Sb(e2, r2) {
        if (e2 == null || e2["!ref"] == null)
          return [];
        var t2 = { t: "n", v: 0 }, a2 = 0, n2 = 1, i2 = [], s2 = 0, f2 = "";
        var l2 = { s: { r: 0, c: 0 }, e: { r: 0, c: 0 } };
        var o2 = r2 || {};
        var c2 = o2.range != null ? o2.range : e2["!ref"];
        if (o2.header === 1)
          a2 = 1;
        else if (o2.header === "A")
          a2 = 2;
        else if (Array.isArray(o2.header))
          a2 = 3;
        else if (o2.header == null)
          a2 = 0;
        switch (typeof c2) {
          case "string":
            l2 = kt(c2);
            break;
          case "number":
            l2 = kt(e2["!ref"]);
            l2.s.r = c2;
            break;
          default:
            l2 = c2;
        }
        if (a2 > 0)
          n2 = 0;
        var u2 = lt(l2.s.r);
        var h2 = [];
        var d2 = [];
        var v2 = 0, p2 = 0;
        var m2 = Array.isArray(e2);
        var b2 = l2.s.r, g2 = 0, w2 = 0;
        if (m2 && !e2[b2])
          e2[b2] = [];
        for (g2 = l2.s.c; g2 <= l2.e.c; ++g2) {
          h2[g2] = ht(g2);
          t2 = m2 ? e2[b2][g2] : e2[h2[g2] + u2];
          switch (a2) {
            case 1:
              i2[g2] = g2 - l2.s.c;
              break;
            case 2:
              i2[g2] = h2[g2];
              break;
            case 3:
              i2[g2] = o2.header[g2 - l2.s.c];
              break;
            default:
              if (t2 == null)
                t2 = { w: "__EMPTY", t: "s" };
              f2 = s2 = St(t2, null, o2);
              p2 = 0;
              for (w2 = 0; w2 < i2.length; ++w2)
                if (i2[w2] == f2)
                  f2 = s2 + "_" + ++p2;
              i2[g2] = f2;
          }
        }
        for (b2 = l2.s.r + n2; b2 <= l2.e.r; ++b2) {
          var k2 = Eb(e2, l2, b2, h2, a2, i2, m2, o2);
          if (k2.isempty === false || (a2 === 1 ? o2.blankrows !== false : !!o2.blankrows))
            d2[v2++] = k2.row;
        }
        d2.length = v2;
        return d2;
      }
      var _b = /"/g;
      function Cb(e2, r2, t2, a2, n2, i2, s2, f2) {
        var l2 = true;
        var o2 = [], c2 = "", u2 = lt(t2);
        for (var h2 = r2.s.c; h2 <= r2.e.c; ++h2) {
          if (!a2[h2])
            continue;
          var d2 = f2.dense ? (e2[t2] || [])[h2] : e2[a2[h2] + u2];
          if (d2 == null)
            c2 = "";
          else if (d2.v != null) {
            l2 = false;
            c2 = "" + (f2.rawNumbers && d2.t == "n" ? d2.v : St(d2, null, f2));
            for (var v2 = 0, p2 = 0; v2 !== c2.length; ++v2)
              if ((p2 = c2.charCodeAt(v2)) === n2 || p2 === i2 || p2 === 34 || f2.forceQuotes) {
                c2 = '"' + c2.replace(_b, '""') + '"';
                break;
              }
            if (c2 == "ID")
              c2 = '"ID"';
          } else if (d2.f != null && !d2.F) {
            l2 = false;
            c2 = "=" + d2.f;
            if (c2.indexOf(",") >= 0)
              c2 = '"' + c2.replace(_b, '""') + '"';
          } else
            c2 = "";
          o2.push(c2);
        }
        if (f2.blankrows === false && l2)
          return null;
        return o2.join(s2);
      }
      function Bb(e2, r2) {
        var t2 = [];
        var a2 = r2 == null ? {} : r2;
        if (e2 == null || e2["!ref"] == null)
          return "";
        var n2 = kt(e2["!ref"]);
        var i2 = a2.FS !== void 0 ? a2.FS : ",", s2 = i2.charCodeAt(0);
        var f2 = a2.RS !== void 0 ? a2.RS : "\n", l2 = f2.charCodeAt(0);
        var o2 = new RegExp((i2 == "|" ? "\\|" : i2) + "+$");
        var c2 = "", u2 = [];
        a2.dense = Array.isArray(e2);
        var h2 = a2.skipHidden && e2["!cols"] || [];
        var d2 = a2.skipHidden && e2["!rows"] || [];
        for (var v2 = n2.s.c; v2 <= n2.e.c; ++v2)
          if (!(h2[v2] || {}).hidden)
            u2[v2] = ht(v2);
        for (var p2 = n2.s.r; p2 <= n2.e.r; ++p2) {
          if ((d2[p2] || {}).hidden)
            continue;
          c2 = Cb(e2, n2, p2, u2, s2, l2, i2, a2);
          if (c2 == null) {
            continue;
          }
          if (a2.strip)
            c2 = c2.replace(o2, "");
          t2.push(c2 + f2);
        }
        delete a2.dense;
        return t2.join("");
      }
      function Tb(e2, r2) {
        if (!r2)
          r2 = {};
        r2.FS = "	";
        r2.RS = "\n";
        var t2 = Bb(e2, r2);
        if (typeof cptable == "undefined" || r2.type == "string")
          return t2;
        var a2 = cptable.utils.encode(1200, t2, "str");
        return String.fromCharCode(255) + String.fromCharCode(254) + a2;
      }
      function yb(e2) {
        var r2 = "", t2, a2 = "";
        if (e2 == null || e2["!ref"] == null)
          return [];
        var n2 = kt(e2["!ref"]), i2 = "", s2 = [], f2;
        var l2 = [];
        var o2 = Array.isArray(e2);
        for (f2 = n2.s.c; f2 <= n2.e.c; ++f2)
          s2[f2] = ht(f2);
        for (var c2 = n2.s.r; c2 <= n2.e.r; ++c2) {
          i2 = lt(c2);
          for (f2 = n2.s.c; f2 <= n2.e.c; ++f2) {
            r2 = s2[f2] + i2;
            t2 = o2 ? (e2[c2] || [])[f2] : e2[r2];
            a2 = "";
            if (t2 === void 0)
              continue;
            else if (t2.F != null) {
              r2 = t2.F;
              if (!t2.f)
                continue;
              a2 = t2.f;
              if (r2.indexOf(":") == -1)
                r2 = r2 + ":" + r2;
            }
            if (t2.f != null)
              a2 = t2.f;
            else if (t2.t == "z")
              continue;
            else if (t2.t == "n" && t2.v != null)
              a2 = "" + t2.v;
            else if (t2.t == "b")
              a2 = t2.v ? "TRUE" : "FALSE";
            else if (t2.w !== void 0)
              a2 = "'" + t2.w;
            else if (t2.v === void 0)
              continue;
            else if (t2.t == "s")
              a2 = "'" + t2.v;
            else
              a2 = "" + t2.v;
            l2[l2.length] = r2 + "=" + a2;
          }
        }
        return l2;
      }
      function xb(e2, r2, t2) {
        var a2 = t2 || {};
        var n2 = +!a2.skipHeader;
        var i2 = e2 || {};
        var s2 = 0, f2 = 0;
        if (i2 && a2.origin != null) {
          if (typeof a2.origin == "number")
            s2 = a2.origin;
          else {
            var l2 = typeof a2.origin == "string" ? mt(a2.origin) : a2.origin;
            s2 = l2.r;
            f2 = l2.c;
          }
        }
        var o2;
        var c2 = { s: { c: 0, r: 0 }, e: { c: f2, r: s2 + r2.length - 1 + n2 } };
        if (i2["!ref"]) {
          var u2 = kt(i2["!ref"]);
          c2.e.c = Math.max(c2.e.c, u2.e.c);
          c2.e.r = Math.max(c2.e.r, u2.e.r);
          if (s2 == -1) {
            s2 = u2.e.r + 1;
            c2.e.r = s2 + r2.length - 1 + n2;
          }
        } else {
          if (s2 == -1) {
            s2 = 0;
            c2.e.r = r2.length - 1 + n2;
          }
        }
        var h2 = a2.header || [], d2 = 0;
        r2.forEach(function(e3, r3) {
          K(e3).forEach(function(t3) {
            if ((d2 = h2.indexOf(t3)) == -1)
              h2[d2 = h2.length] = t3;
            var l3 = e3[t3];
            var c3 = "z";
            var u3 = "";
            var v3 = bt({ c: f2 + d2, r: s2 + r3 + n2 });
            o2 = Ib.sheet_get_cell(i2, v3);
            if (l3 && typeof l3 === "object" && !(l3 instanceof Date)) {
              i2[v3] = l3;
            } else {
              if (typeof l3 == "number")
                c3 = "n";
              else if (typeof l3 == "boolean")
                c3 = "b";
              else if (typeof l3 == "string")
                c3 = "s";
              else if (l3 instanceof Date) {
                c3 = "d";
                if (!a2.cellDates) {
                  c3 = "n";
                  l3 = ee(l3);
                }
                u3 = a2.dateNF || O._table[14];
              } else if (l3 === null && a2.nullError) {
                c3 = "e";
                l3 = 0;
              }
              if (!o2)
                i2[v3] = o2 = { t: c3, v: l3 };
              else {
                o2.t = c3;
                o2.v = l3;
                delete o2.w;
                delete o2.R;
                if (u3)
                  o2.z = u3;
              }
              if (u3)
                o2.z = u3;
            }
          });
        });
        c2.e.c = Math.max(c2.e.c, f2 + h2.length - 1);
        var v2 = lt(s2);
        if (n2)
          for (d2 = 0; d2 < h2.length; ++d2)
            i2[ht(d2 + f2) + v2] = { t: "s", v: h2[d2] };
        i2["!ref"] = wt(c2);
        return i2;
      }
      function Ab(e2, r2) {
        return xb(null, e2, r2);
      }
      var Ib = { encode_col: ht, encode_row: lt, encode_cell: bt, encode_range: wt, decode_col: ut, decode_row: ft, split_cell: pt, decode_cell: mt, decode_range: gt, format_cell: St, get_formulae: yb, make_csv: Bb, make_json: Sb, make_formulae: yb, sheet_add_aoa: Ct, sheet_add_json: xb, sheet_add_dom: Sm, aoa_to_sheet: Bt, json_to_sheet: Ab, table_to_sheet: _m, table_to_book: Cm, sheet_to_csv: Bb, sheet_to_txt: Tb, sheet_to_json: Sb, sheet_to_html: Em.from_sheet, sheet_to_formulae: yb, sheet_to_row_object_array: Sb };
      (function(e2) {
        e2.consts = e2.consts || {};
        function r2(r3) {
          r3.forEach(function(r4) {
            e2.consts[r4[0]] = r4[1];
          });
        }
        function t2(e3, r3, t3) {
          return e3[r3] != null ? e3[r3] : e3[r3] = t3;
        }
        function a2(e3, r3, t3) {
          if (typeof r3 == "string") {
            if (Array.isArray(e3)) {
              var n3 = mt(r3);
              if (!e3[n3.r])
                e3[n3.r] = [];
              return e3[n3.r][n3.c] || (e3[n3.r][n3.c] = { t: "z" });
            }
            return e3[r3] || (e3[r3] = { t: "z" });
          }
          if (typeof r3 != "number")
            return a2(e3, bt(r3));
          return a2(e3, bt({ r: r3, c: t3 || 0 }));
        }
        e2.sheet_get_cell = a2;
        function n2(e3, r3) {
          if (typeof r3 == "number") {
            if (r3 >= 0 && e3.SheetNames.length > r3)
              return r3;
            throw new Error("Cannot find sheet # " + r3);
          } else if (typeof r3 == "string") {
            var t3 = e3.SheetNames.indexOf(r3);
            if (t3 > -1)
              return t3;
            throw new Error("Cannot find sheet name |" + r3 + "|");
          } else
            throw new Error("Cannot find sheet |" + r3 + "|");
        }
        e2.book_new = function() {
          return { SheetNames: [], Sheets: {} };
        };
        e2.book_append_sheet = function(e3, r3, t3) {
          if (!t3) {
            for (var a3 = 1; a3 <= 65535; ++a3, t3 = void 0)
              if (e3.SheetNames.indexOf(t3 = "Sheet" + a3) == -1)
                break;
          }
          if (!t3 || e3.SheetNames.length >= 65535)
            throw new Error("Too many worksheets");
          Ov(t3);
          if (e3.SheetNames.indexOf(t3) >= 0)
            throw new Error("Worksheet with name |" + t3 + "| already exists!");
          e3.SheetNames.push(t3);
          e3.Sheets[t3] = r3;
        };
        e2.book_set_sheet_visibility = function(e3, r3, a3) {
          t2(e3, "Workbook", {});
          t2(e3.Workbook, "Sheets", []);
          var i2 = n2(e3, r3);
          t2(e3.Workbook.Sheets, i2, {});
          switch (a3) {
            case 0:
              ;
            case 1:
              ;
            case 2:
              break;
            default:
              throw new Error("Bad sheet visibility setting " + a3);
          }
          e3.Workbook.Sheets[i2].Hidden = a3;
        };
        r2([["SHEET_VISIBLE", 0], ["SHEET_HIDDEN", 1], ["SHEET_VERY_HIDDEN", 2]]);
        e2.cell_set_number_format = function(e3, r3) {
          e3.z = r3;
          return e3;
        };
        e2.cell_set_hyperlink = function(e3, r3, t3) {
          if (!r3) {
            delete e3.l;
          } else {
            e3.l = { Target: r3 };
            if (t3)
              e3.l.Tooltip = t3;
          }
          return e3;
        };
        e2.cell_set_internal_link = function(r3, t3, a3) {
          return e2.cell_set_hyperlink(r3, "#" + t3, a3);
        };
        e2.cell_add_comment = function(e3, r3, t3) {
          if (!e3.c)
            e3.c = [];
          e3.c.push({ t: r3, a: t3 || "SheetJS" });
        };
        e2.sheet_set_array_formula = function(e3, r3, t3) {
          var n3 = typeof r3 != "string" ? r3 : kt(r3);
          var i2 = typeof r3 == "string" ? r3 : wt(r3);
          for (var s2 = n3.s.r; s2 <= n3.e.r; ++s2)
            for (var f2 = n3.s.c; f2 <= n3.e.c; ++f2) {
              var l2 = a2(e3, s2, f2);
              l2.t = "n";
              l2.F = i2;
              delete l2.v;
              if (s2 == n3.s.r && f2 == n3.s.c)
                l2.f = t3;
            }
          return e3;
        };
        return e2;
      })(Ib);
      if (w && typeof __require != "undefined")
        (function() {
          var r2 = {}.Readable;
          var t2 = function(e2, t3) {
            var a3 = r2();
            var n3 = t3 == null ? {} : t3;
            if (e2 == null || e2["!ref"] == null) {
              a3.push(null);
              return a3;
            }
            var i2 = kt(e2["!ref"]);
            var s2 = n3.FS !== void 0 ? n3.FS : ",", f2 = s2.charCodeAt(0);
            var l2 = n3.RS !== void 0 ? n3.RS : "\n", o2 = l2.charCodeAt(0);
            var c2 = new RegExp((s2 == "|" ? "\\|" : s2) + "+$");
            var u2 = "", h2 = [];
            n3.dense = Array.isArray(e2);
            var d2 = n3.skipHidden && e2["!cols"] || [];
            var v2 = n3.skipHidden && e2["!rows"] || [];
            for (var p2 = i2.s.c; p2 <= i2.e.c; ++p2)
              if (!(d2[p2] || {}).hidden)
                h2[p2] = ht(p2);
            var m2 = i2.s.r;
            var b2 = false;
            a3._read = function() {
              if (!b2) {
                b2 = true;
                return a3.push("\uFEFF");
              }
              while (m2 <= i2.e.r) {
                ++m2;
                if ((v2[m2 - 1] || {}).hidden)
                  continue;
                u2 = Cb(e2, i2, m2 - 1, h2, f2, o2, s2, n3);
                if (u2 != null) {
                  if (n3.strip)
                    u2 = u2.replace(c2, "");
                  a3.push(u2 + l2);
                  break;
                }
              }
              if (m2 > i2.e.r)
                return a3.push(null);
            };
            return a3;
          };
          var a2 = function(e2, t3) {
            var a3 = r2();
            var n3 = t3 || {};
            var i2 = n3.header != null ? n3.header : Em.BEGIN;
            var s2 = n3.footer != null ? n3.footer : Em.END;
            a3.push(i2);
            var f2 = gt(e2["!ref"]);
            n3.dense = Array.isArray(e2);
            a3.push(Em._preamble(e2, f2, n3));
            var l2 = f2.s.r;
            var o2 = false;
            a3._read = function() {
              if (l2 > f2.e.r) {
                if (!o2) {
                  o2 = true;
                  a3.push("</table>" + s2);
                }
                return a3.push(null);
              }
              while (l2 <= f2.e.r) {
                a3.push(Em._row(e2, f2, l2, n3));
                ++l2;
                break;
              }
            };
            return a3;
          };
          var n2 = function(e2, t3) {
            var a3 = r2({ objectMode: true });
            if (e2 == null || e2["!ref"] == null) {
              a3.push(null);
              return a3;
            }
            var n3 = { t: "n", v: 0 }, i2 = 0, s2 = 1, f2 = [], l2 = 0, o2 = "";
            var c2 = { s: { r: 0, c: 0 }, e: { r: 0, c: 0 } };
            var u2 = t3 || {};
            var h2 = u2.range != null ? u2.range : e2["!ref"];
            if (u2.header === 1)
              i2 = 1;
            else if (u2.header === "A")
              i2 = 2;
            else if (Array.isArray(u2.header))
              i2 = 3;
            switch (typeof h2) {
              case "string":
                c2 = kt(h2);
                break;
              case "number":
                c2 = kt(e2["!ref"]);
                c2.s.r = h2;
                break;
              default:
                c2 = h2;
            }
            if (i2 > 0)
              s2 = 0;
            var d2 = lt(c2.s.r);
            var v2 = [];
            var p2 = 0;
            var m2 = Array.isArray(e2);
            var b2 = c2.s.r, g2 = 0, w2 = 0;
            if (m2 && !e2[b2])
              e2[b2] = [];
            for (g2 = c2.s.c; g2 <= c2.e.c; ++g2) {
              v2[g2] = ht(g2);
              n3 = m2 ? e2[b2][g2] : e2[v2[g2] + d2];
              switch (i2) {
                case 1:
                  f2[g2] = g2 - c2.s.c;
                  break;
                case 2:
                  f2[g2] = v2[g2];
                  break;
                case 3:
                  f2[g2] = u2.header[g2 - c2.s.c];
                  break;
                default:
                  if (n3 == null)
                    n3 = { w: "__EMPTY", t: "s" };
                  o2 = l2 = St(n3, null, u2);
                  p2 = 0;
                  for (w2 = 0; w2 < f2.length; ++w2)
                    if (f2[w2] == o2)
                      o2 = l2 + "_" + ++p2;
                  f2[g2] = o2;
              }
            }
            b2 = c2.s.r + s2;
            a3._read = function() {
              if (b2 > c2.e.r)
                return a3.push(null);
              while (b2 <= c2.e.r) {
                var r3 = Eb(e2, c2, b2, v2, i2, f2, m2, u2);
                ++b2;
                if (r3.isempty === false || (i2 === 1 ? u2.blankrows !== false : !!u2.blankrows)) {
                  a3.push(r3.row);
                  break;
                }
              }
            };
            return a3;
          };
          e.stream = { to_json: n2, to_html: a2, to_csv: t2 };
        })();
      if (typeof Zp !== "undefined")
        e.parse_xlscfb = Zp;
      e.parse_zip = Qm;
      e.read = ob;
      e.readFile = cb;
      e.readFileSync = cb;
      e.write = bb;
      e.writeFile = wb;
      e.writeFileSync = wb;
      e.writeFileAsync = kb;
      e.utils = Ib;
      e.SSF = O;
      if (typeof W !== "undefined")
        e.CFB = W;
    }
    if (typeof exports !== "undefined")
      make_xlsx_lib(exports);
    else if (typeof module !== "undefined" && module.exports)
      make_xlsx_lib(module.exports);
    else if (typeof define === "function" && define.amd)
      define("xlsx", function() {
        if (!XLSX.version)
          make_xlsx_lib(XLSX);
        return XLSX;
      });
    else
      make_xlsx_lib(XLSX);
    if (typeof window !== "undefined" && !window.XLSX)
      window.XLSX = XLSX;
  }
});

// dep:xlsx_dist_xlsx_core_min_js
var xlsx_dist_xlsx_core_min_js_default = require_xlsx_core_min();
export {
  xlsx_dist_xlsx_core_min_js_default as default
};
/*! xlsx.js (C) 2013-present SheetJS -- http://sheetjs.com */
//# sourceMappingURL=xlsx_dist_xlsx_core_min_js.js.map
